
FlightController.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000081a0  08000190  08000190  00001190  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000310  08008330  08008330  00009330  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08008640  08008640  0000a068  2**0
                  CONTENTS
  4 .ARM          00000008  08008640  08008640  00009640  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08008648  08008648  0000a068  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08008648  08008648  00009648  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  0800864c  0800864c  0000964c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000068  20000000  08008650  0000a000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  0000a068  2**0
                  CONTENTS
 10 .bss          00000490  20000068  20000068  0000a068  2**2
                  ALLOC
 11 ._user_heap_stack 00000600  200004f8  200004f8  0000a068  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  0000a068  2**0
                  CONTENTS, READONLY
 13 .debug_info   000147c8  00000000  00000000  0000a098  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00002e54  00000000  00000000  0001e860  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000011b8  00000000  00000000  000216b8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00000de3  00000000  00000000  00022870  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  0001d49b  00000000  00000000  00023653  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00017acb  00000000  00000000  00040aee  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000a874e  00000000  00000000  000585b9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  00100d07  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00005398  00000000  00000000  00100d4c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 00000097  00000000  00000000  001060e4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000190 <__do_global_dtors_aux>:
 8000190:	b510      	push	{r4, lr}
 8000192:	4c05      	ldr	r4, [pc, #20]	@ (80001a8 <__do_global_dtors_aux+0x18>)
 8000194:	7823      	ldrb	r3, [r4, #0]
 8000196:	b933      	cbnz	r3, 80001a6 <__do_global_dtors_aux+0x16>
 8000198:	4b04      	ldr	r3, [pc, #16]	@ (80001ac <__do_global_dtors_aux+0x1c>)
 800019a:	b113      	cbz	r3, 80001a2 <__do_global_dtors_aux+0x12>
 800019c:	4804      	ldr	r0, [pc, #16]	@ (80001b0 <__do_global_dtors_aux+0x20>)
 800019e:	f3af 8000 	nop.w
 80001a2:	2301      	movs	r3, #1
 80001a4:	7023      	strb	r3, [r4, #0]
 80001a6:	bd10      	pop	{r4, pc}
 80001a8:	20000068 	.word	0x20000068
 80001ac:	00000000 	.word	0x00000000
 80001b0:	08008318 	.word	0x08008318

080001b4 <frame_dummy>:
 80001b4:	b508      	push	{r3, lr}
 80001b6:	4b03      	ldr	r3, [pc, #12]	@ (80001c4 <frame_dummy+0x10>)
 80001b8:	b11b      	cbz	r3, 80001c2 <frame_dummy+0xe>
 80001ba:	4903      	ldr	r1, [pc, #12]	@ (80001c8 <frame_dummy+0x14>)
 80001bc:	4803      	ldr	r0, [pc, #12]	@ (80001cc <frame_dummy+0x18>)
 80001be:	f3af 8000 	nop.w
 80001c2:	bd08      	pop	{r3, pc}
 80001c4:	00000000 	.word	0x00000000
 80001c8:	2000006c 	.word	0x2000006c
 80001cc:	08008318 	.word	0x08008318

080001d0 <strlen>:
 80001d0:	4603      	mov	r3, r0
 80001d2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80001d6:	2a00      	cmp	r2, #0
 80001d8:	d1fb      	bne.n	80001d2 <strlen+0x2>
 80001da:	1a18      	subs	r0, r3, r0
 80001dc:	3801      	subs	r0, #1
 80001de:	4770      	bx	lr

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <__aeabi_drsub>:
 8000280:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 8000284:	e002      	b.n	800028c <__adddf3>
 8000286:	bf00      	nop

08000288 <__aeabi_dsub>:
 8000288:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

0800028c <__adddf3>:
 800028c:	b530      	push	{r4, r5, lr}
 800028e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000292:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000296:	ea94 0f05 	teq	r4, r5
 800029a:	bf08      	it	eq
 800029c:	ea90 0f02 	teqeq	r0, r2
 80002a0:	bf1f      	itttt	ne
 80002a2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002a6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002aa:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002ae:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002b2:	f000 80e2 	beq.w	800047a <__adddf3+0x1ee>
 80002b6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002ba:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002be:	bfb8      	it	lt
 80002c0:	426d      	neglt	r5, r5
 80002c2:	dd0c      	ble.n	80002de <__adddf3+0x52>
 80002c4:	442c      	add	r4, r5
 80002c6:	ea80 0202 	eor.w	r2, r0, r2
 80002ca:	ea81 0303 	eor.w	r3, r1, r3
 80002ce:	ea82 0000 	eor.w	r0, r2, r0
 80002d2:	ea83 0101 	eor.w	r1, r3, r1
 80002d6:	ea80 0202 	eor.w	r2, r0, r2
 80002da:	ea81 0303 	eor.w	r3, r1, r3
 80002de:	2d36      	cmp	r5, #54	@ 0x36
 80002e0:	bf88      	it	hi
 80002e2:	bd30      	pophi	{r4, r5, pc}
 80002e4:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 80002e8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80002ec:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 80002f0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80002f4:	d002      	beq.n	80002fc <__adddf3+0x70>
 80002f6:	4240      	negs	r0, r0
 80002f8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80002fc:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 8000300:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000304:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000308:	d002      	beq.n	8000310 <__adddf3+0x84>
 800030a:	4252      	negs	r2, r2
 800030c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000310:	ea94 0f05 	teq	r4, r5
 8000314:	f000 80a7 	beq.w	8000466 <__adddf3+0x1da>
 8000318:	f1a4 0401 	sub.w	r4, r4, #1
 800031c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000320:	db0d      	blt.n	800033e <__adddf3+0xb2>
 8000322:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000326:	fa22 f205 	lsr.w	r2, r2, r5
 800032a:	1880      	adds	r0, r0, r2
 800032c:	f141 0100 	adc.w	r1, r1, #0
 8000330:	fa03 f20e 	lsl.w	r2, r3, lr
 8000334:	1880      	adds	r0, r0, r2
 8000336:	fa43 f305 	asr.w	r3, r3, r5
 800033a:	4159      	adcs	r1, r3
 800033c:	e00e      	b.n	800035c <__adddf3+0xd0>
 800033e:	f1a5 0520 	sub.w	r5, r5, #32
 8000342:	f10e 0e20 	add.w	lr, lr, #32
 8000346:	2a01      	cmp	r2, #1
 8000348:	fa03 fc0e 	lsl.w	ip, r3, lr
 800034c:	bf28      	it	cs
 800034e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000352:	fa43 f305 	asr.w	r3, r3, r5
 8000356:	18c0      	adds	r0, r0, r3
 8000358:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800035c:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000360:	d507      	bpl.n	8000372 <__adddf3+0xe6>
 8000362:	f04f 0e00 	mov.w	lr, #0
 8000366:	f1dc 0c00 	rsbs	ip, ip, #0
 800036a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800036e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000372:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 8000376:	d31b      	bcc.n	80003b0 <__adddf3+0x124>
 8000378:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 800037c:	d30c      	bcc.n	8000398 <__adddf3+0x10c>
 800037e:	0849      	lsrs	r1, r1, #1
 8000380:	ea5f 0030 	movs.w	r0, r0, rrx
 8000384:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000388:	f104 0401 	add.w	r4, r4, #1
 800038c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000390:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 8000394:	f080 809a 	bcs.w	80004cc <__adddf3+0x240>
 8000398:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 800039c:	bf08      	it	eq
 800039e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003a2:	f150 0000 	adcs.w	r0, r0, #0
 80003a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003aa:	ea41 0105 	orr.w	r1, r1, r5
 80003ae:	bd30      	pop	{r4, r5, pc}
 80003b0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003b4:	4140      	adcs	r0, r0
 80003b6:	eb41 0101 	adc.w	r1, r1, r1
 80003ba:	3c01      	subs	r4, #1
 80003bc:	bf28      	it	cs
 80003be:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 80003c2:	d2e9      	bcs.n	8000398 <__adddf3+0x10c>
 80003c4:	f091 0f00 	teq	r1, #0
 80003c8:	bf04      	itt	eq
 80003ca:	4601      	moveq	r1, r0
 80003cc:	2000      	moveq	r0, #0
 80003ce:	fab1 f381 	clz	r3, r1
 80003d2:	bf08      	it	eq
 80003d4:	3320      	addeq	r3, #32
 80003d6:	f1a3 030b 	sub.w	r3, r3, #11
 80003da:	f1b3 0220 	subs.w	r2, r3, #32
 80003de:	da0c      	bge.n	80003fa <__adddf3+0x16e>
 80003e0:	320c      	adds	r2, #12
 80003e2:	dd08      	ble.n	80003f6 <__adddf3+0x16a>
 80003e4:	f102 0c14 	add.w	ip, r2, #20
 80003e8:	f1c2 020c 	rsb	r2, r2, #12
 80003ec:	fa01 f00c 	lsl.w	r0, r1, ip
 80003f0:	fa21 f102 	lsr.w	r1, r1, r2
 80003f4:	e00c      	b.n	8000410 <__adddf3+0x184>
 80003f6:	f102 0214 	add.w	r2, r2, #20
 80003fa:	bfd8      	it	le
 80003fc:	f1c2 0c20 	rsble	ip, r2, #32
 8000400:	fa01 f102 	lsl.w	r1, r1, r2
 8000404:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000408:	bfdc      	itt	le
 800040a:	ea41 010c 	orrle.w	r1, r1, ip
 800040e:	4090      	lslle	r0, r2
 8000410:	1ae4      	subs	r4, r4, r3
 8000412:	bfa2      	ittt	ge
 8000414:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000418:	4329      	orrge	r1, r5
 800041a:	bd30      	popge	{r4, r5, pc}
 800041c:	ea6f 0404 	mvn.w	r4, r4
 8000420:	3c1f      	subs	r4, #31
 8000422:	da1c      	bge.n	800045e <__adddf3+0x1d2>
 8000424:	340c      	adds	r4, #12
 8000426:	dc0e      	bgt.n	8000446 <__adddf3+0x1ba>
 8000428:	f104 0414 	add.w	r4, r4, #20
 800042c:	f1c4 0220 	rsb	r2, r4, #32
 8000430:	fa20 f004 	lsr.w	r0, r0, r4
 8000434:	fa01 f302 	lsl.w	r3, r1, r2
 8000438:	ea40 0003 	orr.w	r0, r0, r3
 800043c:	fa21 f304 	lsr.w	r3, r1, r4
 8000440:	ea45 0103 	orr.w	r1, r5, r3
 8000444:	bd30      	pop	{r4, r5, pc}
 8000446:	f1c4 040c 	rsb	r4, r4, #12
 800044a:	f1c4 0220 	rsb	r2, r4, #32
 800044e:	fa20 f002 	lsr.w	r0, r0, r2
 8000452:	fa01 f304 	lsl.w	r3, r1, r4
 8000456:	ea40 0003 	orr.w	r0, r0, r3
 800045a:	4629      	mov	r1, r5
 800045c:	bd30      	pop	{r4, r5, pc}
 800045e:	fa21 f004 	lsr.w	r0, r1, r4
 8000462:	4629      	mov	r1, r5
 8000464:	bd30      	pop	{r4, r5, pc}
 8000466:	f094 0f00 	teq	r4, #0
 800046a:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 800046e:	bf06      	itte	eq
 8000470:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 8000474:	3401      	addeq	r4, #1
 8000476:	3d01      	subne	r5, #1
 8000478:	e74e      	b.n	8000318 <__adddf3+0x8c>
 800047a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800047e:	bf18      	it	ne
 8000480:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000484:	d029      	beq.n	80004da <__adddf3+0x24e>
 8000486:	ea94 0f05 	teq	r4, r5
 800048a:	bf08      	it	eq
 800048c:	ea90 0f02 	teqeq	r0, r2
 8000490:	d005      	beq.n	800049e <__adddf3+0x212>
 8000492:	ea54 0c00 	orrs.w	ip, r4, r0
 8000496:	bf04      	itt	eq
 8000498:	4619      	moveq	r1, r3
 800049a:	4610      	moveq	r0, r2
 800049c:	bd30      	pop	{r4, r5, pc}
 800049e:	ea91 0f03 	teq	r1, r3
 80004a2:	bf1e      	ittt	ne
 80004a4:	2100      	movne	r1, #0
 80004a6:	2000      	movne	r0, #0
 80004a8:	bd30      	popne	{r4, r5, pc}
 80004aa:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004ae:	d105      	bne.n	80004bc <__adddf3+0x230>
 80004b0:	0040      	lsls	r0, r0, #1
 80004b2:	4149      	adcs	r1, r1
 80004b4:	bf28      	it	cs
 80004b6:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 80004ba:	bd30      	pop	{r4, r5, pc}
 80004bc:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 80004c0:	bf3c      	itt	cc
 80004c2:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 80004c6:	bd30      	popcc	{r4, r5, pc}
 80004c8:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80004cc:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 80004d0:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 80004d4:	f04f 0000 	mov.w	r0, #0
 80004d8:	bd30      	pop	{r4, r5, pc}
 80004da:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004de:	bf1a      	itte	ne
 80004e0:	4619      	movne	r1, r3
 80004e2:	4610      	movne	r0, r2
 80004e4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80004e8:	bf1c      	itt	ne
 80004ea:	460b      	movne	r3, r1
 80004ec:	4602      	movne	r2, r0
 80004ee:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80004f2:	bf06      	itte	eq
 80004f4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80004f8:	ea91 0f03 	teqeq	r1, r3
 80004fc:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 8000500:	bd30      	pop	{r4, r5, pc}
 8000502:	bf00      	nop

08000504 <__aeabi_ui2d>:
 8000504:	f090 0f00 	teq	r0, #0
 8000508:	bf04      	itt	eq
 800050a:	2100      	moveq	r1, #0
 800050c:	4770      	bxeq	lr
 800050e:	b530      	push	{r4, r5, lr}
 8000510:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000514:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000518:	f04f 0500 	mov.w	r5, #0
 800051c:	f04f 0100 	mov.w	r1, #0
 8000520:	e750      	b.n	80003c4 <__adddf3+0x138>
 8000522:	bf00      	nop

08000524 <__aeabi_i2d>:
 8000524:	f090 0f00 	teq	r0, #0
 8000528:	bf04      	itt	eq
 800052a:	2100      	moveq	r1, #0
 800052c:	4770      	bxeq	lr
 800052e:	b530      	push	{r4, r5, lr}
 8000530:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000534:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000538:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 800053c:	bf48      	it	mi
 800053e:	4240      	negmi	r0, r0
 8000540:	f04f 0100 	mov.w	r1, #0
 8000544:	e73e      	b.n	80003c4 <__adddf3+0x138>
 8000546:	bf00      	nop

08000548 <__aeabi_f2d>:
 8000548:	0042      	lsls	r2, r0, #1
 800054a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800054e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000552:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000556:	bf1f      	itttt	ne
 8000558:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 800055c:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 8000560:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 8000564:	4770      	bxne	lr
 8000566:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 800056a:	bf08      	it	eq
 800056c:	4770      	bxeq	lr
 800056e:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 8000572:	bf04      	itt	eq
 8000574:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 8000578:	4770      	bxeq	lr
 800057a:	b530      	push	{r4, r5, lr}
 800057c:	f44f 7460 	mov.w	r4, #896	@ 0x380
 8000580:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000584:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000588:	e71c      	b.n	80003c4 <__adddf3+0x138>
 800058a:	bf00      	nop

0800058c <__aeabi_ul2d>:
 800058c:	ea50 0201 	orrs.w	r2, r0, r1
 8000590:	bf08      	it	eq
 8000592:	4770      	bxeq	lr
 8000594:	b530      	push	{r4, r5, lr}
 8000596:	f04f 0500 	mov.w	r5, #0
 800059a:	e00a      	b.n	80005b2 <__aeabi_l2d+0x16>

0800059c <__aeabi_l2d>:
 800059c:	ea50 0201 	orrs.w	r2, r0, r1
 80005a0:	bf08      	it	eq
 80005a2:	4770      	bxeq	lr
 80005a4:	b530      	push	{r4, r5, lr}
 80005a6:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 80005aa:	d502      	bpl.n	80005b2 <__aeabi_l2d+0x16>
 80005ac:	4240      	negs	r0, r0
 80005ae:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005b2:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80005b6:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80005ba:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005be:	f43f aed8 	beq.w	8000372 <__adddf3+0xe6>
 80005c2:	f04f 0203 	mov.w	r2, #3
 80005c6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005ca:	bf18      	it	ne
 80005cc:	3203      	addne	r2, #3
 80005ce:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005d2:	bf18      	it	ne
 80005d4:	3203      	addne	r2, #3
 80005d6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005da:	f1c2 0320 	rsb	r3, r2, #32
 80005de:	fa00 fc03 	lsl.w	ip, r0, r3
 80005e2:	fa20 f002 	lsr.w	r0, r0, r2
 80005e6:	fa01 fe03 	lsl.w	lr, r1, r3
 80005ea:	ea40 000e 	orr.w	r0, r0, lr
 80005ee:	fa21 f102 	lsr.w	r1, r1, r2
 80005f2:	4414      	add	r4, r2
 80005f4:	e6bd      	b.n	8000372 <__adddf3+0xe6>
 80005f6:	bf00      	nop

080005f8 <__aeabi_dmul>:
 80005f8:	b570      	push	{r4, r5, r6, lr}
 80005fa:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 80005fe:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000602:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000606:	bf1d      	ittte	ne
 8000608:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800060c:	ea94 0f0c 	teqne	r4, ip
 8000610:	ea95 0f0c 	teqne	r5, ip
 8000614:	f000 f8de 	bleq	80007d4 <__aeabi_dmul+0x1dc>
 8000618:	442c      	add	r4, r5
 800061a:	ea81 0603 	eor.w	r6, r1, r3
 800061e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000622:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000626:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800062a:	bf18      	it	ne
 800062c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000630:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000634:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8000638:	d038      	beq.n	80006ac <__aeabi_dmul+0xb4>
 800063a:	fba0 ce02 	umull	ip, lr, r0, r2
 800063e:	f04f 0500 	mov.w	r5, #0
 8000642:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000646:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 800064a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800064e:	f04f 0600 	mov.w	r6, #0
 8000652:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000656:	f09c 0f00 	teq	ip, #0
 800065a:	bf18      	it	ne
 800065c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000660:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 8000664:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 8000668:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 800066c:	d204      	bcs.n	8000678 <__aeabi_dmul+0x80>
 800066e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000672:	416d      	adcs	r5, r5
 8000674:	eb46 0606 	adc.w	r6, r6, r6
 8000678:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800067c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000680:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000684:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000688:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800068c:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 8000690:	bf88      	it	hi
 8000692:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 8000696:	d81e      	bhi.n	80006d6 <__aeabi_dmul+0xde>
 8000698:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 800069c:	bf08      	it	eq
 800069e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006a2:	f150 0000 	adcs.w	r0, r0, #0
 80006a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006aa:	bd70      	pop	{r4, r5, r6, pc}
 80006ac:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 80006b0:	ea46 0101 	orr.w	r1, r6, r1
 80006b4:	ea40 0002 	orr.w	r0, r0, r2
 80006b8:	ea81 0103 	eor.w	r1, r1, r3
 80006bc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006c0:	bfc2      	ittt	gt
 80006c2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006c6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006ca:	bd70      	popgt	{r4, r5, r6, pc}
 80006cc:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80006d0:	f04f 0e00 	mov.w	lr, #0
 80006d4:	3c01      	subs	r4, #1
 80006d6:	f300 80ab 	bgt.w	8000830 <__aeabi_dmul+0x238>
 80006da:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 80006de:	bfde      	ittt	le
 80006e0:	2000      	movle	r0, #0
 80006e2:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 80006e6:	bd70      	pople	{r4, r5, r6, pc}
 80006e8:	f1c4 0400 	rsb	r4, r4, #0
 80006ec:	3c20      	subs	r4, #32
 80006ee:	da35      	bge.n	800075c <__aeabi_dmul+0x164>
 80006f0:	340c      	adds	r4, #12
 80006f2:	dc1b      	bgt.n	800072c <__aeabi_dmul+0x134>
 80006f4:	f104 0414 	add.w	r4, r4, #20
 80006f8:	f1c4 0520 	rsb	r5, r4, #32
 80006fc:	fa00 f305 	lsl.w	r3, r0, r5
 8000700:	fa20 f004 	lsr.w	r0, r0, r4
 8000704:	fa01 f205 	lsl.w	r2, r1, r5
 8000708:	ea40 0002 	orr.w	r0, r0, r2
 800070c:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 8000710:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000714:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000718:	fa21 f604 	lsr.w	r6, r1, r4
 800071c:	eb42 0106 	adc.w	r1, r2, r6
 8000720:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000724:	bf08      	it	eq
 8000726:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800072a:	bd70      	pop	{r4, r5, r6, pc}
 800072c:	f1c4 040c 	rsb	r4, r4, #12
 8000730:	f1c4 0520 	rsb	r5, r4, #32
 8000734:	fa00 f304 	lsl.w	r3, r0, r4
 8000738:	fa20 f005 	lsr.w	r0, r0, r5
 800073c:	fa01 f204 	lsl.w	r2, r1, r4
 8000740:	ea40 0002 	orr.w	r0, r0, r2
 8000744:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000748:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800074c:	f141 0100 	adc.w	r1, r1, #0
 8000750:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000754:	bf08      	it	eq
 8000756:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800075a:	bd70      	pop	{r4, r5, r6, pc}
 800075c:	f1c4 0520 	rsb	r5, r4, #32
 8000760:	fa00 f205 	lsl.w	r2, r0, r5
 8000764:	ea4e 0e02 	orr.w	lr, lr, r2
 8000768:	fa20 f304 	lsr.w	r3, r0, r4
 800076c:	fa01 f205 	lsl.w	r2, r1, r5
 8000770:	ea43 0302 	orr.w	r3, r3, r2
 8000774:	fa21 f004 	lsr.w	r0, r1, r4
 8000778:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 800077c:	fa21 f204 	lsr.w	r2, r1, r4
 8000780:	ea20 0002 	bic.w	r0, r0, r2
 8000784:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000788:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800078c:	bf08      	it	eq
 800078e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000792:	bd70      	pop	{r4, r5, r6, pc}
 8000794:	f094 0f00 	teq	r4, #0
 8000798:	d10f      	bne.n	80007ba <__aeabi_dmul+0x1c2>
 800079a:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 800079e:	0040      	lsls	r0, r0, #1
 80007a0:	eb41 0101 	adc.w	r1, r1, r1
 80007a4:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 80007a8:	bf08      	it	eq
 80007aa:	3c01      	subeq	r4, #1
 80007ac:	d0f7      	beq.n	800079e <__aeabi_dmul+0x1a6>
 80007ae:	ea41 0106 	orr.w	r1, r1, r6
 80007b2:	f095 0f00 	teq	r5, #0
 80007b6:	bf18      	it	ne
 80007b8:	4770      	bxne	lr
 80007ba:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 80007be:	0052      	lsls	r2, r2, #1
 80007c0:	eb43 0303 	adc.w	r3, r3, r3
 80007c4:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 80007c8:	bf08      	it	eq
 80007ca:	3d01      	subeq	r5, #1
 80007cc:	d0f7      	beq.n	80007be <__aeabi_dmul+0x1c6>
 80007ce:	ea43 0306 	orr.w	r3, r3, r6
 80007d2:	4770      	bx	lr
 80007d4:	ea94 0f0c 	teq	r4, ip
 80007d8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007dc:	bf18      	it	ne
 80007de:	ea95 0f0c 	teqne	r5, ip
 80007e2:	d00c      	beq.n	80007fe <__aeabi_dmul+0x206>
 80007e4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007e8:	bf18      	it	ne
 80007ea:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007ee:	d1d1      	bne.n	8000794 <__aeabi_dmul+0x19c>
 80007f0:	ea81 0103 	eor.w	r1, r1, r3
 80007f4:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80007f8:	f04f 0000 	mov.w	r0, #0
 80007fc:	bd70      	pop	{r4, r5, r6, pc}
 80007fe:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000802:	bf06      	itte	eq
 8000804:	4610      	moveq	r0, r2
 8000806:	4619      	moveq	r1, r3
 8000808:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800080c:	d019      	beq.n	8000842 <__aeabi_dmul+0x24a>
 800080e:	ea94 0f0c 	teq	r4, ip
 8000812:	d102      	bne.n	800081a <__aeabi_dmul+0x222>
 8000814:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000818:	d113      	bne.n	8000842 <__aeabi_dmul+0x24a>
 800081a:	ea95 0f0c 	teq	r5, ip
 800081e:	d105      	bne.n	800082c <__aeabi_dmul+0x234>
 8000820:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000824:	bf1c      	itt	ne
 8000826:	4610      	movne	r0, r2
 8000828:	4619      	movne	r1, r3
 800082a:	d10a      	bne.n	8000842 <__aeabi_dmul+0x24a>
 800082c:	ea81 0103 	eor.w	r1, r1, r3
 8000830:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000834:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000838:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800083c:	f04f 0000 	mov.w	r0, #0
 8000840:	bd70      	pop	{r4, r5, r6, pc}
 8000842:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000846:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 800084a:	bd70      	pop	{r4, r5, r6, pc}

0800084c <__aeabi_ddiv>:
 800084c:	b570      	push	{r4, r5, r6, lr}
 800084e:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000852:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000856:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800085a:	bf1d      	ittte	ne
 800085c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000860:	ea94 0f0c 	teqne	r4, ip
 8000864:	ea95 0f0c 	teqne	r5, ip
 8000868:	f000 f8a7 	bleq	80009ba <__aeabi_ddiv+0x16e>
 800086c:	eba4 0405 	sub.w	r4, r4, r5
 8000870:	ea81 0e03 	eor.w	lr, r1, r3
 8000874:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000878:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800087c:	f000 8088 	beq.w	8000990 <__aeabi_ddiv+0x144>
 8000880:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000884:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
 8000888:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800088c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000890:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000894:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000898:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 800089c:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008a0:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
 80008a4:	429d      	cmp	r5, r3
 80008a6:	bf08      	it	eq
 80008a8:	4296      	cmpeq	r6, r2
 80008aa:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
 80008ae:	f504 7440 	add.w	r4, r4, #768	@ 0x300
 80008b2:	d202      	bcs.n	80008ba <__aeabi_ddiv+0x6e>
 80008b4:	085b      	lsrs	r3, r3, #1
 80008b6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ba:	1ab6      	subs	r6, r6, r2
 80008bc:	eb65 0503 	sbc.w	r5, r5, r3
 80008c0:	085b      	lsrs	r3, r3, #1
 80008c2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008c6:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 80008ca:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
 80008ce:	ebb6 0e02 	subs.w	lr, r6, r2
 80008d2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008d6:	bf22      	ittt	cs
 80008d8:	1ab6      	subcs	r6, r6, r2
 80008da:	4675      	movcs	r5, lr
 80008dc:	ea40 000c 	orrcs.w	r0, r0, ip
 80008e0:	085b      	lsrs	r3, r3, #1
 80008e2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008e6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008ea:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008ee:	bf22      	ittt	cs
 80008f0:	1ab6      	subcs	r6, r6, r2
 80008f2:	4675      	movcs	r5, lr
 80008f4:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80008f8:	085b      	lsrs	r3, r3, #1
 80008fa:	ea4f 0232 	mov.w	r2, r2, rrx
 80008fe:	ebb6 0e02 	subs.w	lr, r6, r2
 8000902:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000906:	bf22      	ittt	cs
 8000908:	1ab6      	subcs	r6, r6, r2
 800090a:	4675      	movcs	r5, lr
 800090c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000910:	085b      	lsrs	r3, r3, #1
 8000912:	ea4f 0232 	mov.w	r2, r2, rrx
 8000916:	ebb6 0e02 	subs.w	lr, r6, r2
 800091a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800091e:	bf22      	ittt	cs
 8000920:	1ab6      	subcs	r6, r6, r2
 8000922:	4675      	movcs	r5, lr
 8000924:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000928:	ea55 0e06 	orrs.w	lr, r5, r6
 800092c:	d018      	beq.n	8000960 <__aeabi_ddiv+0x114>
 800092e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000932:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000936:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800093a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800093e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000942:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000946:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800094a:	d1c0      	bne.n	80008ce <__aeabi_ddiv+0x82>
 800094c:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000950:	d10b      	bne.n	800096a <__aeabi_ddiv+0x11e>
 8000952:	ea41 0100 	orr.w	r1, r1, r0
 8000956:	f04f 0000 	mov.w	r0, #0
 800095a:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 800095e:	e7b6      	b.n	80008ce <__aeabi_ddiv+0x82>
 8000960:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000964:	bf04      	itt	eq
 8000966:	4301      	orreq	r1, r0
 8000968:	2000      	moveq	r0, #0
 800096a:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 800096e:	bf88      	it	hi
 8000970:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 8000974:	f63f aeaf 	bhi.w	80006d6 <__aeabi_dmul+0xde>
 8000978:	ebb5 0c03 	subs.w	ip, r5, r3
 800097c:	bf04      	itt	eq
 800097e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000982:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000986:	f150 0000 	adcs.w	r0, r0, #0
 800098a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800098e:	bd70      	pop	{r4, r5, r6, pc}
 8000990:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
 8000994:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000998:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 800099c:	bfc2      	ittt	gt
 800099e:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009a2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009a6:	bd70      	popgt	{r4, r5, r6, pc}
 80009a8:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80009ac:	f04f 0e00 	mov.w	lr, #0
 80009b0:	3c01      	subs	r4, #1
 80009b2:	e690      	b.n	80006d6 <__aeabi_dmul+0xde>
 80009b4:	ea45 0e06 	orr.w	lr, r5, r6
 80009b8:	e68d      	b.n	80006d6 <__aeabi_dmul+0xde>
 80009ba:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009be:	ea94 0f0c 	teq	r4, ip
 80009c2:	bf08      	it	eq
 80009c4:	ea95 0f0c 	teqeq	r5, ip
 80009c8:	f43f af3b 	beq.w	8000842 <__aeabi_dmul+0x24a>
 80009cc:	ea94 0f0c 	teq	r4, ip
 80009d0:	d10a      	bne.n	80009e8 <__aeabi_ddiv+0x19c>
 80009d2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009d6:	f47f af34 	bne.w	8000842 <__aeabi_dmul+0x24a>
 80009da:	ea95 0f0c 	teq	r5, ip
 80009de:	f47f af25 	bne.w	800082c <__aeabi_dmul+0x234>
 80009e2:	4610      	mov	r0, r2
 80009e4:	4619      	mov	r1, r3
 80009e6:	e72c      	b.n	8000842 <__aeabi_dmul+0x24a>
 80009e8:	ea95 0f0c 	teq	r5, ip
 80009ec:	d106      	bne.n	80009fc <__aeabi_ddiv+0x1b0>
 80009ee:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80009f2:	f43f aefd 	beq.w	80007f0 <__aeabi_dmul+0x1f8>
 80009f6:	4610      	mov	r0, r2
 80009f8:	4619      	mov	r1, r3
 80009fa:	e722      	b.n	8000842 <__aeabi_dmul+0x24a>
 80009fc:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a00:	bf18      	it	ne
 8000a02:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a06:	f47f aec5 	bne.w	8000794 <__aeabi_dmul+0x19c>
 8000a0a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a0e:	f47f af0d 	bne.w	800082c <__aeabi_dmul+0x234>
 8000a12:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a16:	f47f aeeb 	bne.w	80007f0 <__aeabi_dmul+0x1f8>
 8000a1a:	e712      	b.n	8000842 <__aeabi_dmul+0x24a>

08000a1c <__aeabi_d2f>:
 8000a1c:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000a20:	f1b2 43e0 	subs.w	r3, r2, #1879048192	@ 0x70000000
 8000a24:	bf24      	itt	cs
 8000a26:	f5b3 1c00 	subscs.w	ip, r3, #2097152	@ 0x200000
 8000a2a:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	@ 0x1fc00000
 8000a2e:	d90d      	bls.n	8000a4c <__aeabi_d2f+0x30>
 8000a30:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8000a34:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000a38:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000a3c:	f1b2 4f00 	cmp.w	r2, #2147483648	@ 0x80000000
 8000a40:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000a44:	bf08      	it	eq
 8000a46:	f020 0001 	biceq.w	r0, r0, #1
 8000a4a:	4770      	bx	lr
 8000a4c:	f011 4f80 	tst.w	r1, #1073741824	@ 0x40000000
 8000a50:	d121      	bne.n	8000a96 <__aeabi_d2f+0x7a>
 8000a52:	f113 7238 	adds.w	r2, r3, #48234496	@ 0x2e00000
 8000a56:	bfbc      	itt	lt
 8000a58:	f001 4000 	andlt.w	r0, r1, #2147483648	@ 0x80000000
 8000a5c:	4770      	bxlt	lr
 8000a5e:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000a62:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000a66:	f1c2 0218 	rsb	r2, r2, #24
 8000a6a:	f1c2 0c20 	rsb	ip, r2, #32
 8000a6e:	fa10 f30c 	lsls.w	r3, r0, ip
 8000a72:	fa20 f002 	lsr.w	r0, r0, r2
 8000a76:	bf18      	it	ne
 8000a78:	f040 0001 	orrne.w	r0, r0, #1
 8000a7c:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000a80:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000a84:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000a88:	ea40 000c 	orr.w	r0, r0, ip
 8000a8c:	fa23 f302 	lsr.w	r3, r3, r2
 8000a90:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000a94:	e7cc      	b.n	8000a30 <__aeabi_d2f+0x14>
 8000a96:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000a9a:	d107      	bne.n	8000aac <__aeabi_d2f+0x90>
 8000a9c:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000aa0:	bf1e      	ittt	ne
 8000aa2:	f04f 40fe 	movne.w	r0, #2130706432	@ 0x7f000000
 8000aa6:	f440 0040 	orrne.w	r0, r0, #12582912	@ 0xc00000
 8000aaa:	4770      	bxne	lr
 8000aac:	f001 4000 	and.w	r0, r1, #2147483648	@ 0x80000000
 8000ab0:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 8000ab4:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000ab8:	4770      	bx	lr
 8000aba:	bf00      	nop

08000abc <receiveControlCommand>:
    snprintf(cmd_msg, sizeof(cmd_msg), "%s\r\n", command);  // Agregar salto de línea al final del comando
    HAL_UART_Transmit(&huart1, (uint8_t*)cmd_msg, strlen(cmd_msg), HAL_MAX_DELAY);
}

// Función para recibir comandos del ESP8266
void receiveControlCommand(uint8_t *rx_buffer, uint16_t length) {
 8000abc:	b580      	push	{r7, lr}
 8000abe:	b084      	sub	sp, #16
 8000ac0:	af00      	add	r7, sp, #0
 8000ac2:	6078      	str	r0, [r7, #4]
 8000ac4:	460b      	mov	r3, r1
 8000ac6:	807b      	strh	r3, [r7, #2]

	if (strncmp((char *)rx_buffer, "Dat", 3) == 0 || strncmp((char *)rx_buffer, "Men", 3) == 0) {
 8000ac8:	2203      	movs	r2, #3
 8000aca:	4933      	ldr	r1, [pc, #204]	@ (8000b98 <receiveControlCommand+0xdc>)
 8000acc:	6878      	ldr	r0, [r7, #4]
 8000ace:	f006 fe00 	bl	80076d2 <strncmp>
 8000ad2:	4603      	mov	r3, r0
 8000ad4:	2b00      	cmp	r3, #0
 8000ad6:	d007      	beq.n	8000ae8 <receiveControlCommand+0x2c>
 8000ad8:	2203      	movs	r2, #3
 8000ada:	4930      	ldr	r1, [pc, #192]	@ (8000b9c <receiveControlCommand+0xe0>)
 8000adc:	6878      	ldr	r0, [r7, #4]
 8000ade:	f006 fdf8 	bl	80076d2 <strncmp>
 8000ae2:	4603      	mov	r3, r0
 8000ae4:	2b00      	cmp	r3, #0
 8000ae6:	d106      	bne.n	8000af6 <receiveControlCommand+0x3a>
	    memset(rx_buffer, 0, length);  // Limpiar el buffer
 8000ae8:	887b      	ldrh	r3, [r7, #2]
 8000aea:	461a      	mov	r2, r3
 8000aec:	2100      	movs	r1, #0
 8000aee:	6878      	ldr	r0, [r7, #4]
 8000af0:	f006 fde7 	bl	80076c2 <memset>
	    return;
 8000af4:	e04d      	b.n	8000b92 <receiveControlCommand+0xd6>
	}

    printData("Comando recibido\n");
 8000af6:	482a      	ldr	r0, [pc, #168]	@ (8000ba0 <receiveControlCommand+0xe4>)
 8000af8:	f000 ff80 	bl	80019fc <printData>

    if (strncmp((char *)rx_buffer, "LED_ON", 6) == 0) {
 8000afc:	2206      	movs	r2, #6
 8000afe:	4929      	ldr	r1, [pc, #164]	@ (8000ba4 <receiveControlCommand+0xe8>)
 8000b00:	6878      	ldr	r0, [r7, #4]
 8000b02:	f006 fde6 	bl	80076d2 <strncmp>
 8000b06:	4603      	mov	r3, r0
 8000b08:	2b00      	cmp	r3, #0
 8000b0a:	d105      	bne.n	8000b18 <receiveControlCommand+0x5c>
        // Encender el LED (PB3)
        HAL_GPIO_WritePin(GPIOB, GPIO_PIN_3, GPIO_PIN_SET);
 8000b0c:	2201      	movs	r2, #1
 8000b0e:	2108      	movs	r1, #8
 8000b10:	4825      	ldr	r0, [pc, #148]	@ (8000ba8 <receiveControlCommand+0xec>)
 8000b12:	f001 fe49 	bl	80027a8 <HAL_GPIO_WritePin>
 8000b16:	e036      	b.n	8000b86 <receiveControlCommand+0xca>
    } else if (strncmp((char *)rx_buffer, "LED_OFF", 7) == 0) {
 8000b18:	2207      	movs	r2, #7
 8000b1a:	4924      	ldr	r1, [pc, #144]	@ (8000bac <receiveControlCommand+0xf0>)
 8000b1c:	6878      	ldr	r0, [r7, #4]
 8000b1e:	f006 fdd8 	bl	80076d2 <strncmp>
 8000b22:	4603      	mov	r3, r0
 8000b24:	2b00      	cmp	r3, #0
 8000b26:	d105      	bne.n	8000b34 <receiveControlCommand+0x78>
        // Apagar el LED (PB3)
        HAL_GPIO_WritePin(GPIOB, GPIO_PIN_3, GPIO_PIN_RESET);
 8000b28:	2200      	movs	r2, #0
 8000b2a:	2108      	movs	r1, #8
 8000b2c:	481e      	ldr	r0, [pc, #120]	@ (8000ba8 <receiveControlCommand+0xec>)
 8000b2e:	f001 fe3b 	bl	80027a8 <HAL_GPIO_WritePin>
 8000b32:	e028      	b.n	8000b86 <receiveControlCommand+0xca>
    }

    else if (strncmp((char*) rx_buffer, "ARM", 3) == 0) {
 8000b34:	2203      	movs	r2, #3
 8000b36:	491e      	ldr	r1, [pc, #120]	@ (8000bb0 <receiveControlCommand+0xf4>)
 8000b38:	6878      	ldr	r0, [r7, #4]
 8000b3a:	f006 fdca 	bl	80076d2 <strncmp>
 8000b3e:	4603      	mov	r3, r0
 8000b40:	2b00      	cmp	r3, #0
 8000b42:	d102      	bne.n	8000b4a <receiveControlCommand+0x8e>
		Control_ArmMotors();
 8000b44:	f000 f882 	bl	8000c4c <Control_ArmMotors>
 8000b48:	e01d      	b.n	8000b86 <receiveControlCommand+0xca>
	} else if (strncmp((char*) rx_buffer, "STOP", 4) == 0) {
 8000b4a:	2204      	movs	r2, #4
 8000b4c:	4919      	ldr	r1, [pc, #100]	@ (8000bb4 <receiveControlCommand+0xf8>)
 8000b4e:	6878      	ldr	r0, [r7, #4]
 8000b50:	f006 fdbf 	bl	80076d2 <strncmp>
 8000b54:	4603      	mov	r3, r0
 8000b56:	2b00      	cmp	r3, #0
 8000b58:	d102      	bne.n	8000b60 <receiveControlCommand+0xa4>
		Control_Stop();
 8000b5a:	f000 faf5 	bl	8001148 <Control_Stop>
 8000b5e:	e012      	b.n	8000b86 <receiveControlCommand+0xca>
	} else if (strncmp((char*) rx_buffer, "PWR", 3) == 0) {
 8000b60:	2203      	movs	r2, #3
 8000b62:	4915      	ldr	r1, [pc, #84]	@ (8000bb8 <receiveControlCommand+0xfc>)
 8000b64:	6878      	ldr	r0, [r7, #4]
 8000b66:	f006 fdb4 	bl	80076d2 <strncmp>
 8000b6a:	4603      	mov	r3, r0
 8000b6c:	2b00      	cmp	r3, #0
 8000b6e:	d10a      	bne.n	8000b86 <receiveControlCommand+0xca>
		uint8_t speed = atoi((char*) &rx_buffer[3]);
 8000b70:	687b      	ldr	r3, [r7, #4]
 8000b72:	3303      	adds	r3, #3
 8000b74:	4618      	mov	r0, r3
 8000b76:	f006 fc05 	bl	8007384 <atoi>
 8000b7a:	4603      	mov	r3, r0
 8000b7c:	73fb      	strb	r3, [r7, #15]
		Control_SetMotorsPower(speed);
 8000b7e:	7bfb      	ldrb	r3, [r7, #15]
 8000b80:	4618      	mov	r0, r3
 8000b82:	f000 fac5 	bl	8001110 <Control_SetMotorsPower>
	}


    // Limpiar el buffer después de procesar
    memset(rx_buffer, 0, length);
 8000b86:	887b      	ldrh	r3, [r7, #2]
 8000b88:	461a      	mov	r2, r3
 8000b8a:	2100      	movs	r1, #0
 8000b8c:	6878      	ldr	r0, [r7, #4]
 8000b8e:	f006 fd98 	bl	80076c2 <memset>
}
 8000b92:	3710      	adds	r7, #16
 8000b94:	46bd      	mov	sp, r7
 8000b96:	bd80      	pop	{r7, pc}
 8000b98:	08008380 	.word	0x08008380
 8000b9c:	08008384 	.word	0x08008384
 8000ba0:	08008388 	.word	0x08008388
 8000ba4:	0800839c 	.word	0x0800839c
 8000ba8:	48000400 	.word	0x48000400
 8000bac:	080083a4 	.word	0x080083a4
 8000bb0:	080083ac 	.word	0x080083ac
 8000bb4:	080083b0 	.word	0x080083b0
 8000bb8:	080083b8 	.word	0x080083b8

08000bbc <Control_Init>:
float mz_buffer[MOVING_AVG_SIZE] = {0};
int buffer_index = 0;



void Control_Init(void) {
 8000bbc:	b480      	push	{r7}
 8000bbe:	af00      	add	r7, sp, #0
    Control.pid_roll.Kp = 1.0;
 8000bc0:	4b21      	ldr	r3, [pc, #132]	@ (8000c48 <Control_Init+0x8c>)
 8000bc2:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 8000bc6:	601a      	str	r2, [r3, #0]
    Control.pid_roll.Ki = 0.0;
 8000bc8:	4b1f      	ldr	r3, [pc, #124]	@ (8000c48 <Control_Init+0x8c>)
 8000bca:	f04f 0200 	mov.w	r2, #0
 8000bce:	605a      	str	r2, [r3, #4]
    Control.pid_roll.Kd = 0.0;
 8000bd0:	4b1d      	ldr	r3, [pc, #116]	@ (8000c48 <Control_Init+0x8c>)
 8000bd2:	f04f 0200 	mov.w	r2, #0
 8000bd6:	609a      	str	r2, [r3, #8]
    Control.pid_roll.prev_error = 0.0;
 8000bd8:	4b1b      	ldr	r3, [pc, #108]	@ (8000c48 <Control_Init+0x8c>)
 8000bda:	f04f 0200 	mov.w	r2, #0
 8000bde:	60da      	str	r2, [r3, #12]
    Control.pid_roll.integral = 0.0;
 8000be0:	4b19      	ldr	r3, [pc, #100]	@ (8000c48 <Control_Init+0x8c>)
 8000be2:	f04f 0200 	mov.w	r2, #0
 8000be6:	611a      	str	r2, [r3, #16]
    Control.base_throttle = 0;
 8000be8:	4b17      	ldr	r3, [pc, #92]	@ (8000c48 <Control_Init+0x8c>)
 8000bea:	2200      	movs	r2, #0
 8000bec:	63da      	str	r2, [r3, #60]	@ 0x3c

    Control.pid_pitch.Kp = 1.0;
 8000bee:	4b16      	ldr	r3, [pc, #88]	@ (8000c48 <Control_Init+0x8c>)
 8000bf0:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 8000bf4:	615a      	str	r2, [r3, #20]
    Control.pid_pitch.Ki = 0.0;
 8000bf6:	4b14      	ldr	r3, [pc, #80]	@ (8000c48 <Control_Init+0x8c>)
 8000bf8:	f04f 0200 	mov.w	r2, #0
 8000bfc:	619a      	str	r2, [r3, #24]
    Control.pid_pitch.Kd = 0.0;
 8000bfe:	4b12      	ldr	r3, [pc, #72]	@ (8000c48 <Control_Init+0x8c>)
 8000c00:	f04f 0200 	mov.w	r2, #0
 8000c04:	61da      	str	r2, [r3, #28]
    Control.pid_pitch.prev_error = 0.0;
 8000c06:	4b10      	ldr	r3, [pc, #64]	@ (8000c48 <Control_Init+0x8c>)
 8000c08:	f04f 0200 	mov.w	r2, #0
 8000c0c:	621a      	str	r2, [r3, #32]
    Control.pid_pitch.integral = 0.0;
 8000c0e:	4b0e      	ldr	r3, [pc, #56]	@ (8000c48 <Control_Init+0x8c>)
 8000c10:	f04f 0200 	mov.w	r2, #0
 8000c14:	625a      	str	r2, [r3, #36]	@ 0x24

    Control.pid_yaw.Kp = 1.0;
 8000c16:	4b0c      	ldr	r3, [pc, #48]	@ (8000c48 <Control_Init+0x8c>)
 8000c18:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 8000c1c:	629a      	str	r2, [r3, #40]	@ 0x28
    Control.pid_yaw.Ki = 0.0;
 8000c1e:	4b0a      	ldr	r3, [pc, #40]	@ (8000c48 <Control_Init+0x8c>)
 8000c20:	f04f 0200 	mov.w	r2, #0
 8000c24:	62da      	str	r2, [r3, #44]	@ 0x2c
    Control.pid_yaw.Kd = 0.0;
 8000c26:	4b08      	ldr	r3, [pc, #32]	@ (8000c48 <Control_Init+0x8c>)
 8000c28:	f04f 0200 	mov.w	r2, #0
 8000c2c:	631a      	str	r2, [r3, #48]	@ 0x30
    Control.pid_yaw.prev_error = 0.0;
 8000c2e:	4b06      	ldr	r3, [pc, #24]	@ (8000c48 <Control_Init+0x8c>)
 8000c30:	f04f 0200 	mov.w	r2, #0
 8000c34:	635a      	str	r2, [r3, #52]	@ 0x34
    Control.pid_yaw.integral = 0.0;
 8000c36:	4b04      	ldr	r3, [pc, #16]	@ (8000c48 <Control_Init+0x8c>)
 8000c38:	f04f 0200 	mov.w	r2, #0
 8000c3c:	639a      	str	r2, [r3, #56]	@ 0x38
}
 8000c3e:	bf00      	nop
 8000c40:	46bd      	mov	sp, r7
 8000c42:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000c46:	4770      	bx	lr
 8000c48:	20000084 	.word	0x20000084

08000c4c <Control_ArmMotors>:

void Control_ArmMotors() {
 8000c4c:	b580      	push	{r7, lr}
 8000c4e:	af00      	add	r7, sp, #0
	printf("Hadoken");
 8000c50:	4815      	ldr	r0, [pc, #84]	@ (8000ca8 <Control_ArmMotors+0x5c>)
 8000c52:	f006 fce1 	bl	8007618 <iprintf>
    Control.motor_control.motor1_speed = MOTOR_MAX_SPEED;
 8000c56:	4b15      	ldr	r3, [pc, #84]	@ (8000cac <Control_ArmMotors+0x60>)
 8000c58:	22c8      	movs	r2, #200	@ 0xc8
 8000c5a:	641a      	str	r2, [r3, #64]	@ 0x40
    Control.motor_control.motor2_speed = MOTOR_MAX_SPEED;
 8000c5c:	4b13      	ldr	r3, [pc, #76]	@ (8000cac <Control_ArmMotors+0x60>)
 8000c5e:	22c8      	movs	r2, #200	@ 0xc8
 8000c60:	645a      	str	r2, [r3, #68]	@ 0x44
    Control.motor_control.motor3_speed = MOTOR_MAX_SPEED;
 8000c62:	4b12      	ldr	r3, [pc, #72]	@ (8000cac <Control_ArmMotors+0x60>)
 8000c64:	22c8      	movs	r2, #200	@ 0xc8
 8000c66:	649a      	str	r2, [r3, #72]	@ 0x48
    Control.motor_control.motor4_speed = MOTOR_MAX_SPEED;
 8000c68:	4b10      	ldr	r3, [pc, #64]	@ (8000cac <Control_ArmMotors+0x60>)
 8000c6a:	22c8      	movs	r2, #200	@ 0xc8
 8000c6c:	64da      	str	r2, [r3, #76]	@ 0x4c
    Control_SetMotorSpeeds();
 8000c6e:	f000 f9fb 	bl	8001068 <Control_SetMotorSpeeds>
    HAL_Delay(3000);
 8000c72:	f640 30b8 	movw	r0, #3000	@ 0xbb8
 8000c76:	f001 fa73 	bl	8002160 <HAL_Delay>
    Control.motor_control.motor1_speed = MOTOR_MIN_SPEED;
 8000c7a:	4b0c      	ldr	r3, [pc, #48]	@ (8000cac <Control_ArmMotors+0x60>)
 8000c7c:	2264      	movs	r2, #100	@ 0x64
 8000c7e:	641a      	str	r2, [r3, #64]	@ 0x40
    Control.motor_control.motor2_speed = MOTOR_MIN_SPEED;
 8000c80:	4b0a      	ldr	r3, [pc, #40]	@ (8000cac <Control_ArmMotors+0x60>)
 8000c82:	2264      	movs	r2, #100	@ 0x64
 8000c84:	645a      	str	r2, [r3, #68]	@ 0x44
    Control.motor_control.motor3_speed = MOTOR_MIN_SPEED;
 8000c86:	4b09      	ldr	r3, [pc, #36]	@ (8000cac <Control_ArmMotors+0x60>)
 8000c88:	2264      	movs	r2, #100	@ 0x64
 8000c8a:	649a      	str	r2, [r3, #72]	@ 0x48
    Control.motor_control.motor4_speed = MOTOR_MIN_SPEED;
 8000c8c:	4b07      	ldr	r3, [pc, #28]	@ (8000cac <Control_ArmMotors+0x60>)
 8000c8e:	2264      	movs	r2, #100	@ 0x64
 8000c90:	64da      	str	r2, [r3, #76]	@ 0x4c
    Control_SetMotorSpeeds();
 8000c92:	f000 f9e9 	bl	8001068 <Control_SetMotorSpeeds>
    HAL_Delay(3000);
 8000c96:	f640 30b8 	movw	r0, #3000	@ 0xbb8
 8000c9a:	f001 fa61 	bl	8002160 <HAL_Delay>

    printData("Motors armed\n");
 8000c9e:	4804      	ldr	r0, [pc, #16]	@ (8000cb0 <Control_ArmMotors+0x64>)
 8000ca0:	f000 feac 	bl	80019fc <printData>
}
 8000ca4:	bf00      	nop
 8000ca6:	bd80      	pop	{r7, pc}
 8000ca8:	080083bc 	.word	0x080083bc
 8000cac:	20000084 	.word	0x20000084
 8000cb0:	080083c4 	.word	0x080083c4

08000cb4 <Control_Update>:

void Control_Update(void) {
 8000cb4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000cb6:	b08d      	sub	sp, #52	@ 0x34
 8000cb8:	af06      	add	r7, sp, #24
	struct girodata_t giro;
	Sensor_Read(&giro);
 8000cba:	1d3b      	adds	r3, r7, #4
 8000cbc:	4618      	mov	r0, r3
 8000cbe:	f000 fb63 	bl	8001388 <Sensor_Read>
	printf("AX: %i, AY: %i, AZ: %i, GX: %i, GY: %i, GZ: %i, MX: %i, MY: %i, MZ: %i\n", giro.ax, giro.ay, giro.az, giro.gx, giro.gy, giro.gz, giro.mx, giro.my, giro.mz);
 8000cc2:	f9b7 3004 	ldrsh.w	r3, [r7, #4]
 8000cc6:	461e      	mov	r6, r3
 8000cc8:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8000ccc:	469c      	mov	ip, r3
 8000cce:	f9b7 3008 	ldrsh.w	r3, [r7, #8]
 8000cd2:	469e      	mov	lr, r3
 8000cd4:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 8000cd8:	f9b7 200c 	ldrsh.w	r2, [r7, #12]
 8000cdc:	f9b7 100e 	ldrsh.w	r1, [r7, #14]
 8000ce0:	f9b7 0010 	ldrsh.w	r0, [r7, #16]
 8000ce4:	f9b7 4012 	ldrsh.w	r4, [r7, #18]
 8000ce8:	f9b7 5014 	ldrsh.w	r5, [r7, #20]
 8000cec:	9505      	str	r5, [sp, #20]
 8000cee:	9404      	str	r4, [sp, #16]
 8000cf0:	9003      	str	r0, [sp, #12]
 8000cf2:	9102      	str	r1, [sp, #8]
 8000cf4:	9201      	str	r2, [sp, #4]
 8000cf6:	9300      	str	r3, [sp, #0]
 8000cf8:	4673      	mov	r3, lr
 8000cfa:	4662      	mov	r2, ip
 8000cfc:	4631      	mov	r1, r6
 8000cfe:	4806      	ldr	r0, [pc, #24]	@ (8000d18 <Control_Update+0x64>)
 8000d00:	f006 fc8a 	bl	8007618 <iprintf>
    Control_Compute(&giro);
 8000d04:	1d3b      	adds	r3, r7, #4
 8000d06:	4618      	mov	r0, r3
 8000d08:	f000 f80a 	bl	8000d20 <Control_Compute>

    Control_SetMotorSpeeds();
 8000d0c:	f000 f9ac 	bl	8001068 <Control_SetMotorSpeeds>
}
 8000d10:	bf00      	nop
 8000d12:	371c      	adds	r7, #28
 8000d14:	46bd      	mov	sp, r7
 8000d16:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000d18:	080083d4 	.word	0x080083d4
 8000d1c:	00000000 	.word	0x00000000

08000d20 <Control_Compute>:

void Control_Compute(struct girodata_t* giro) {
 8000d20:	e92d 43b0 	stmdb	sp!, {r4, r5, r7, r8, r9, lr}
 8000d24:	b09c      	sub	sp, #112	@ 0x70
 8000d26:	af04      	add	r7, sp, #16
 8000d28:	6078      	str	r0, [r7, #4]
    float rateRoll = giro->gx / 65.4;
 8000d2a:	687b      	ldr	r3, [r7, #4]
 8000d2c:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 8000d30:	4618      	mov	r0, r3
 8000d32:	f7ff fbf7 	bl	8000524 <__aeabi_i2d>
 8000d36:	a3ca      	add	r3, pc, #808	@ (adr r3, 8001060 <Control_Compute+0x340>)
 8000d38:	e9d3 2300 	ldrd	r2, r3, [r3]
 8000d3c:	f7ff fd86 	bl	800084c <__aeabi_ddiv>
 8000d40:	4602      	mov	r2, r0
 8000d42:	460b      	mov	r3, r1
 8000d44:	4610      	mov	r0, r2
 8000d46:	4619      	mov	r1, r3
 8000d48:	f7ff fe68 	bl	8000a1c <__aeabi_d2f>
 8000d4c:	4603      	mov	r3, r0
 8000d4e:	65fb      	str	r3, [r7, #92]	@ 0x5c
    float ratePitch = giro->gy / 65.4;
 8000d50:	687b      	ldr	r3, [r7, #4]
 8000d52:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8000d56:	4618      	mov	r0, r3
 8000d58:	f7ff fbe4 	bl	8000524 <__aeabi_i2d>
 8000d5c:	a3c0      	add	r3, pc, #768	@ (adr r3, 8001060 <Control_Compute+0x340>)
 8000d5e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8000d62:	f7ff fd73 	bl	800084c <__aeabi_ddiv>
 8000d66:	4602      	mov	r2, r0
 8000d68:	460b      	mov	r3, r1
 8000d6a:	4610      	mov	r0, r2
 8000d6c:	4619      	mov	r1, r3
 8000d6e:	f7ff fe55 	bl	8000a1c <__aeabi_d2f>
 8000d72:	4603      	mov	r3, r0
 8000d74:	65bb      	str	r3, [r7, #88]	@ 0x58
    float rateYaw = giro->gz / 65.4;
 8000d76:	687b      	ldr	r3, [r7, #4]
 8000d78:	f9b3 300a 	ldrsh.w	r3, [r3, #10]
 8000d7c:	4618      	mov	r0, r3
 8000d7e:	f7ff fbd1 	bl	8000524 <__aeabi_i2d>
 8000d82:	a3b7      	add	r3, pc, #732	@ (adr r3, 8001060 <Control_Compute+0x340>)
 8000d84:	e9d3 2300 	ldrd	r2, r3, [r3]
 8000d88:	f7ff fd60 	bl	800084c <__aeabi_ddiv>
 8000d8c:	4602      	mov	r2, r0
 8000d8e:	460b      	mov	r3, r1
 8000d90:	4610      	mov	r0, r2
 8000d92:	4619      	mov	r1, r3
 8000d94:	f7ff fe42 	bl	8000a1c <__aeabi_d2f>
 8000d98:	4603      	mov	r3, r0
 8000d9a:	657b      	str	r3, [r7, #84]	@ 0x54

    float desiredRateRoll = 10.0;
 8000d9c:	4bac      	ldr	r3, [pc, #688]	@ (8001050 <Control_Compute+0x330>)
 8000d9e:	653b      	str	r3, [r7, #80]	@ 0x50
    float desiredRatePitch = 5.0;
 8000da0:	4bac      	ldr	r3, [pc, #688]	@ (8001054 <Control_Compute+0x334>)
 8000da2:	64fb      	str	r3, [r7, #76]	@ 0x4c
    float desiredRateYaw = 0.0;
 8000da4:	f04f 0300 	mov.w	r3, #0
 8000da8:	64bb      	str	r3, [r7, #72]	@ 0x48

    // Error
    float errorRoll = desiredRateRoll - rateRoll;
 8000daa:	ed97 7a14 	vldr	s14, [r7, #80]	@ 0x50
 8000dae:	edd7 7a17 	vldr	s15, [r7, #92]	@ 0x5c
 8000db2:	ee77 7a67 	vsub.f32	s15, s14, s15
 8000db6:	edc7 7a11 	vstr	s15, [r7, #68]	@ 0x44
    float errorPitch = desiredRatePitch - ratePitch;
 8000dba:	ed97 7a13 	vldr	s14, [r7, #76]	@ 0x4c
 8000dbe:	edd7 7a16 	vldr	s15, [r7, #88]	@ 0x58
 8000dc2:	ee77 7a67 	vsub.f32	s15, s14, s15
 8000dc6:	edc7 7a10 	vstr	s15, [r7, #64]	@ 0x40
    float errorYaw = desiredRateYaw - rateYaw;
 8000dca:	ed97 7a12 	vldr	s14, [r7, #72]	@ 0x48
 8000dce:	edd7 7a15 	vldr	s15, [r7, #84]	@ 0x54
 8000dd2:	ee77 7a67 	vsub.f32	s15, s14, s15
 8000dd6:	edc7 7a0f 	vstr	s15, [r7, #60]	@ 0x3c

    // PID Roll
    float pTermRoll = Control.pid_roll.Kp * errorRoll;
 8000dda:	4b9f      	ldr	r3, [pc, #636]	@ (8001058 <Control_Compute+0x338>)
 8000ddc:	edd3 7a00 	vldr	s15, [r3]
 8000de0:	ed97 7a11 	vldr	s14, [r7, #68]	@ 0x44
 8000de4:	ee67 7a27 	vmul.f32	s15, s14, s15
 8000de8:	edc7 7a0e 	vstr	s15, [r7, #56]	@ 0x38
    Control.pid_roll.integral += errorRoll; // Acumulador integral
 8000dec:	4b9a      	ldr	r3, [pc, #616]	@ (8001058 <Control_Compute+0x338>)
 8000dee:	ed93 7a04 	vldr	s14, [r3, #16]
 8000df2:	edd7 7a11 	vldr	s15, [r7, #68]	@ 0x44
 8000df6:	ee77 7a27 	vadd.f32	s15, s14, s15
 8000dfa:	4b97      	ldr	r3, [pc, #604]	@ (8001058 <Control_Compute+0x338>)
 8000dfc:	edc3 7a04 	vstr	s15, [r3, #16]
    float iTermRoll = Control.pid_roll.Ki * Control.pid_roll.integral;
 8000e00:	4b95      	ldr	r3, [pc, #596]	@ (8001058 <Control_Compute+0x338>)
 8000e02:	ed93 7a01 	vldr	s14, [r3, #4]
 8000e06:	4b94      	ldr	r3, [pc, #592]	@ (8001058 <Control_Compute+0x338>)
 8000e08:	edd3 7a04 	vldr	s15, [r3, #16]
 8000e0c:	ee67 7a27 	vmul.f32	s15, s14, s15
 8000e10:	edc7 7a0d 	vstr	s15, [r7, #52]	@ 0x34
    float dTermRoll = Control.pid_roll.Kd * (errorRoll - Control.pid_roll.prev_error);
 8000e14:	4b90      	ldr	r3, [pc, #576]	@ (8001058 <Control_Compute+0x338>)
 8000e16:	ed93 7a02 	vldr	s14, [r3, #8]
 8000e1a:	4b8f      	ldr	r3, [pc, #572]	@ (8001058 <Control_Compute+0x338>)
 8000e1c:	edd3 7a03 	vldr	s15, [r3, #12]
 8000e20:	edd7 6a11 	vldr	s13, [r7, #68]	@ 0x44
 8000e24:	ee76 7ae7 	vsub.f32	s15, s13, s15
 8000e28:	ee67 7a27 	vmul.f32	s15, s14, s15
 8000e2c:	edc7 7a0c 	vstr	s15, [r7, #48]	@ 0x30
    Control.pid_roll.prev_error = errorRoll;
 8000e30:	4a89      	ldr	r2, [pc, #548]	@ (8001058 <Control_Compute+0x338>)
 8000e32:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8000e34:	60d3      	str	r3, [r2, #12]
    float pidOutputRoll = pTermRoll + iTermRoll + dTermRoll;
 8000e36:	ed97 7a0e 	vldr	s14, [r7, #56]	@ 0x38
 8000e3a:	edd7 7a0d 	vldr	s15, [r7, #52]	@ 0x34
 8000e3e:	ee77 7a27 	vadd.f32	s15, s14, s15
 8000e42:	ed97 7a0c 	vldr	s14, [r7, #48]	@ 0x30
 8000e46:	ee77 7a27 	vadd.f32	s15, s14, s15
 8000e4a:	edc7 7a0b 	vstr	s15, [r7, #44]	@ 0x2c

    // PID Pitch
    float pTermPitch = Control.pid_pitch.Kp * errorPitch;
 8000e4e:	4b82      	ldr	r3, [pc, #520]	@ (8001058 <Control_Compute+0x338>)
 8000e50:	edd3 7a05 	vldr	s15, [r3, #20]
 8000e54:	ed97 7a10 	vldr	s14, [r7, #64]	@ 0x40
 8000e58:	ee67 7a27 	vmul.f32	s15, s14, s15
 8000e5c:	edc7 7a0a 	vstr	s15, [r7, #40]	@ 0x28
    Control.pid_pitch.integral += errorPitch;
 8000e60:	4b7d      	ldr	r3, [pc, #500]	@ (8001058 <Control_Compute+0x338>)
 8000e62:	ed93 7a09 	vldr	s14, [r3, #36]	@ 0x24
 8000e66:	edd7 7a10 	vldr	s15, [r7, #64]	@ 0x40
 8000e6a:	ee77 7a27 	vadd.f32	s15, s14, s15
 8000e6e:	4b7a      	ldr	r3, [pc, #488]	@ (8001058 <Control_Compute+0x338>)
 8000e70:	edc3 7a09 	vstr	s15, [r3, #36]	@ 0x24
    float iTermPitch = Control.pid_pitch.Ki * Control.pid_pitch.integral;
 8000e74:	4b78      	ldr	r3, [pc, #480]	@ (8001058 <Control_Compute+0x338>)
 8000e76:	ed93 7a06 	vldr	s14, [r3, #24]
 8000e7a:	4b77      	ldr	r3, [pc, #476]	@ (8001058 <Control_Compute+0x338>)
 8000e7c:	edd3 7a09 	vldr	s15, [r3, #36]	@ 0x24
 8000e80:	ee67 7a27 	vmul.f32	s15, s14, s15
 8000e84:	edc7 7a09 	vstr	s15, [r7, #36]	@ 0x24
    float dTermPitch = Control.pid_pitch.Kd * (errorPitch - Control.pid_pitch.prev_error);
 8000e88:	4b73      	ldr	r3, [pc, #460]	@ (8001058 <Control_Compute+0x338>)
 8000e8a:	ed93 7a07 	vldr	s14, [r3, #28]
 8000e8e:	4b72      	ldr	r3, [pc, #456]	@ (8001058 <Control_Compute+0x338>)
 8000e90:	edd3 7a08 	vldr	s15, [r3, #32]
 8000e94:	edd7 6a10 	vldr	s13, [r7, #64]	@ 0x40
 8000e98:	ee76 7ae7 	vsub.f32	s15, s13, s15
 8000e9c:	ee67 7a27 	vmul.f32	s15, s14, s15
 8000ea0:	edc7 7a08 	vstr	s15, [r7, #32]
    Control.pid_pitch.prev_error = errorPitch;
 8000ea4:	4a6c      	ldr	r2, [pc, #432]	@ (8001058 <Control_Compute+0x338>)
 8000ea6:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 8000ea8:	6213      	str	r3, [r2, #32]
    float pidOutputPitch = pTermPitch + iTermPitch + dTermPitch;
 8000eaa:	ed97 7a0a 	vldr	s14, [r7, #40]	@ 0x28
 8000eae:	edd7 7a09 	vldr	s15, [r7, #36]	@ 0x24
 8000eb2:	ee77 7a27 	vadd.f32	s15, s14, s15
 8000eb6:	ed97 7a08 	vldr	s14, [r7, #32]
 8000eba:	ee77 7a27 	vadd.f32	s15, s14, s15
 8000ebe:	edc7 7a07 	vstr	s15, [r7, #28]

    // PID Yaw
    float pTermYaw = Control.pid_yaw.Kp * errorYaw;
 8000ec2:	4b65      	ldr	r3, [pc, #404]	@ (8001058 <Control_Compute+0x338>)
 8000ec4:	edd3 7a0a 	vldr	s15, [r3, #40]	@ 0x28
 8000ec8:	ed97 7a0f 	vldr	s14, [r7, #60]	@ 0x3c
 8000ecc:	ee67 7a27 	vmul.f32	s15, s14, s15
 8000ed0:	edc7 7a06 	vstr	s15, [r7, #24]
    Control.pid_yaw.integral += errorYaw;
 8000ed4:	4b60      	ldr	r3, [pc, #384]	@ (8001058 <Control_Compute+0x338>)
 8000ed6:	ed93 7a0e 	vldr	s14, [r3, #56]	@ 0x38
 8000eda:	edd7 7a0f 	vldr	s15, [r7, #60]	@ 0x3c
 8000ede:	ee77 7a27 	vadd.f32	s15, s14, s15
 8000ee2:	4b5d      	ldr	r3, [pc, #372]	@ (8001058 <Control_Compute+0x338>)
 8000ee4:	edc3 7a0e 	vstr	s15, [r3, #56]	@ 0x38
    float iTermYaw = Control.pid_yaw.Ki * Control.pid_yaw.integral;
 8000ee8:	4b5b      	ldr	r3, [pc, #364]	@ (8001058 <Control_Compute+0x338>)
 8000eea:	ed93 7a0b 	vldr	s14, [r3, #44]	@ 0x2c
 8000eee:	4b5a      	ldr	r3, [pc, #360]	@ (8001058 <Control_Compute+0x338>)
 8000ef0:	edd3 7a0e 	vldr	s15, [r3, #56]	@ 0x38
 8000ef4:	ee67 7a27 	vmul.f32	s15, s14, s15
 8000ef8:	edc7 7a05 	vstr	s15, [r7, #20]
    float dTermYaw = Control.pid_yaw.Kd * (errorYaw - Control.pid_yaw.prev_error);
 8000efc:	4b56      	ldr	r3, [pc, #344]	@ (8001058 <Control_Compute+0x338>)
 8000efe:	ed93 7a0c 	vldr	s14, [r3, #48]	@ 0x30
 8000f02:	4b55      	ldr	r3, [pc, #340]	@ (8001058 <Control_Compute+0x338>)
 8000f04:	edd3 7a0d 	vldr	s15, [r3, #52]	@ 0x34
 8000f08:	edd7 6a0f 	vldr	s13, [r7, #60]	@ 0x3c
 8000f0c:	ee76 7ae7 	vsub.f32	s15, s13, s15
 8000f10:	ee67 7a27 	vmul.f32	s15, s14, s15
 8000f14:	edc7 7a04 	vstr	s15, [r7, #16]
    Control.pid_yaw.prev_error = errorYaw;
 8000f18:	4a4f      	ldr	r2, [pc, #316]	@ (8001058 <Control_Compute+0x338>)
 8000f1a:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8000f1c:	6353      	str	r3, [r2, #52]	@ 0x34
    float pidOutputYaw = pTermYaw + iTermYaw + dTermYaw;
 8000f1e:	ed97 7a06 	vldr	s14, [r7, #24]
 8000f22:	edd7 7a05 	vldr	s15, [r7, #20]
 8000f26:	ee77 7a27 	vadd.f32	s15, s14, s15
 8000f2a:	ed97 7a04 	vldr	s14, [r7, #16]
 8000f2e:	ee77 7a27 	vadd.f32	s15, s14, s15
 8000f32:	edc7 7a03 	vstr	s15, [r7, #12]


    int baseThrottle = Control.base_throttle;
 8000f36:	4b48      	ldr	r3, [pc, #288]	@ (8001058 <Control_Compute+0x338>)
 8000f38:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8000f3a:	60bb      	str	r3, [r7, #8]


    printf("Roll: %d;Pitch: %d;Yaw: %d\n", pidOutputRoll, pidOutputPitch, pidOutputYaw);
 8000f3c:	6af8      	ldr	r0, [r7, #44]	@ 0x2c
 8000f3e:	f7ff fb03 	bl	8000548 <__aeabi_f2d>
 8000f42:	4680      	mov	r8, r0
 8000f44:	4689      	mov	r9, r1
 8000f46:	69f8      	ldr	r0, [r7, #28]
 8000f48:	f7ff fafe 	bl	8000548 <__aeabi_f2d>
 8000f4c:	4604      	mov	r4, r0
 8000f4e:	460d      	mov	r5, r1
 8000f50:	68f8      	ldr	r0, [r7, #12]
 8000f52:	f7ff faf9 	bl	8000548 <__aeabi_f2d>
 8000f56:	4602      	mov	r2, r0
 8000f58:	460b      	mov	r3, r1
 8000f5a:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8000f5e:	e9cd 4500 	strd	r4, r5, [sp]
 8000f62:	4642      	mov	r2, r8
 8000f64:	464b      	mov	r3, r9
 8000f66:	483d      	ldr	r0, [pc, #244]	@ (800105c <Control_Compute+0x33c>)
 8000f68:	f006 fb56 	bl	8007618 <iprintf>

    if (baseThrottle <= MOTOR_MIN_SPEED) {
 8000f6c:	68bb      	ldr	r3, [r7, #8]
 8000f6e:	2b64      	cmp	r3, #100	@ 0x64
 8000f70:	dc0c      	bgt.n	8000f8c <Control_Compute+0x26c>
        Control.motor_control.motor1_speed = 0;
 8000f72:	4b39      	ldr	r3, [pc, #228]	@ (8001058 <Control_Compute+0x338>)
 8000f74:	2200      	movs	r2, #0
 8000f76:	641a      	str	r2, [r3, #64]	@ 0x40
        Control.motor_control.motor2_speed = 0;
 8000f78:	4b37      	ldr	r3, [pc, #220]	@ (8001058 <Control_Compute+0x338>)
 8000f7a:	2200      	movs	r2, #0
 8000f7c:	645a      	str	r2, [r3, #68]	@ 0x44
        Control.motor_control.motor3_speed = 0;
 8000f7e:	4b36      	ldr	r3, [pc, #216]	@ (8001058 <Control_Compute+0x338>)
 8000f80:	2200      	movs	r2, #0
 8000f82:	649a      	str	r2, [r3, #72]	@ 0x48
        Control.motor_control.motor4_speed = 0;
 8000f84:	4b34      	ldr	r3, [pc, #208]	@ (8001058 <Control_Compute+0x338>)
 8000f86:	2200      	movs	r2, #0
 8000f88:	64da      	str	r2, [r3, #76]	@ 0x4c
        return;
 8000f8a:	e05b      	b.n	8001044 <Control_Compute+0x324>
    };


    Control.motor_control.motor1_speed = baseThrottle + pidOutputPitch - pidOutputRoll - pidOutputYaw;
 8000f8c:	68bb      	ldr	r3, [r7, #8]
 8000f8e:	ee07 3a90 	vmov	s15, r3
 8000f92:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8000f96:	edd7 7a07 	vldr	s15, [r7, #28]
 8000f9a:	ee37 7a27 	vadd.f32	s14, s14, s15
 8000f9e:	edd7 7a0b 	vldr	s15, [r7, #44]	@ 0x2c
 8000fa2:	ee37 7a67 	vsub.f32	s14, s14, s15
 8000fa6:	edd7 7a03 	vldr	s15, [r7, #12]
 8000faa:	ee77 7a67 	vsub.f32	s15, s14, s15
 8000fae:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8000fb2:	ee17 2a90 	vmov	r2, s15
 8000fb6:	4b28      	ldr	r3, [pc, #160]	@ (8001058 <Control_Compute+0x338>)
 8000fb8:	641a      	str	r2, [r3, #64]	@ 0x40
    Control.motor_control.motor2_speed = baseThrottle + pidOutputPitch + pidOutputRoll + pidOutputYaw;
 8000fba:	68bb      	ldr	r3, [r7, #8]
 8000fbc:	ee07 3a90 	vmov	s15, r3
 8000fc0:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8000fc4:	edd7 7a07 	vldr	s15, [r7, #28]
 8000fc8:	ee37 7a27 	vadd.f32	s14, s14, s15
 8000fcc:	edd7 7a0b 	vldr	s15, [r7, #44]	@ 0x2c
 8000fd0:	ee37 7a27 	vadd.f32	s14, s14, s15
 8000fd4:	edd7 7a03 	vldr	s15, [r7, #12]
 8000fd8:	ee77 7a27 	vadd.f32	s15, s14, s15
 8000fdc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8000fe0:	ee17 2a90 	vmov	r2, s15
 8000fe4:	4b1c      	ldr	r3, [pc, #112]	@ (8001058 <Control_Compute+0x338>)
 8000fe6:	645a      	str	r2, [r3, #68]	@ 0x44
    Control.motor_control.motor3_speed = baseThrottle - pidOutputPitch + pidOutputRoll - pidOutputYaw;
 8000fe8:	68bb      	ldr	r3, [r7, #8]
 8000fea:	ee07 3a90 	vmov	s15, r3
 8000fee:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8000ff2:	edd7 7a07 	vldr	s15, [r7, #28]
 8000ff6:	ee37 7a67 	vsub.f32	s14, s14, s15
 8000ffa:	edd7 7a0b 	vldr	s15, [r7, #44]	@ 0x2c
 8000ffe:	ee37 7a27 	vadd.f32	s14, s14, s15
 8001002:	edd7 7a03 	vldr	s15, [r7, #12]
 8001006:	ee77 7a67 	vsub.f32	s15, s14, s15
 800100a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800100e:	ee17 2a90 	vmov	r2, s15
 8001012:	4b11      	ldr	r3, [pc, #68]	@ (8001058 <Control_Compute+0x338>)
 8001014:	649a      	str	r2, [r3, #72]	@ 0x48
    Control.motor_control.motor4_speed = baseThrottle - pidOutputPitch - pidOutputRoll + pidOutputYaw;
 8001016:	68bb      	ldr	r3, [r7, #8]
 8001018:	ee07 3a90 	vmov	s15, r3
 800101c:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8001020:	edd7 7a07 	vldr	s15, [r7, #28]
 8001024:	ee37 7a67 	vsub.f32	s14, s14, s15
 8001028:	edd7 7a0b 	vldr	s15, [r7, #44]	@ 0x2c
 800102c:	ee37 7a67 	vsub.f32	s14, s14, s15
 8001030:	edd7 7a03 	vldr	s15, [r7, #12]
 8001034:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001038:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800103c:	ee17 2a90 	vmov	r2, s15
 8001040:	4b05      	ldr	r3, [pc, #20]	@ (8001058 <Control_Compute+0x338>)
 8001042:	64da      	str	r2, [r3, #76]	@ 0x4c
//    Control.motor_control.motor1_speed = constrain(Control.motor_control.motor1_speed, MOTOR_MIN_SPEED, MOTOR_MAX_SPEED);
//    Control.motor_control.motor2_speed = constrain(Control.motor_control.motor2_speed, MOTOR_MIN_SPEED, MOTOR_MAX_SPEED);
//    Control.motor_control.motor3_speed = constrain(Control.motor_control.motor3_speed, MOTOR_MIN_SPEED, MOTOR_MAX_SPEED);
//    Control.motor_control.motor4_speed = constrain(Control.motor_control.motor4_speed, MOTOR_MIN_SPEED, MOTOR_MAX_SPEED);

}
 8001044:	3760      	adds	r7, #96	@ 0x60
 8001046:	46bd      	mov	sp, r7
 8001048:	e8bd 83b0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, pc}
 800104c:	f3af 8000 	nop.w
 8001050:	41200000 	.word	0x41200000
 8001054:	40a00000 	.word	0x40a00000
 8001058:	20000084 	.word	0x20000084
 800105c:	0800841c 	.word	0x0800841c
 8001060:	9999999a 	.word	0x9999999a
 8001064:	40505999 	.word	0x40505999

08001068 <Control_SetMotorSpeeds>:




void Control_SetMotorSpeeds(void) {
 8001068:	b580      	push	{r7, lr}
 800106a:	b086      	sub	sp, #24
 800106c:	af02      	add	r7, sp, #8
    int motor1_speed = (Control.motor_control.motor1_speed < 0) ? 0 : (Control.motor_control.motor1_speed > MOTOR_MAX_SPEED ? MOTOR_MAX_SPEED : Control.motor_control.motor1_speed);
 800106e:	4b25      	ldr	r3, [pc, #148]	@ (8001104 <Control_SetMotorSpeeds+0x9c>)
 8001070:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001072:	2b00      	cmp	r3, #0
 8001074:	db05      	blt.n	8001082 <Control_SetMotorSpeeds+0x1a>
 8001076:	4b23      	ldr	r3, [pc, #140]	@ (8001104 <Control_SetMotorSpeeds+0x9c>)
 8001078:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800107a:	2bc8      	cmp	r3, #200	@ 0xc8
 800107c:	bfa8      	it	ge
 800107e:	23c8      	movge	r3, #200	@ 0xc8
 8001080:	e000      	b.n	8001084 <Control_SetMotorSpeeds+0x1c>
 8001082:	2300      	movs	r3, #0
 8001084:	60fb      	str	r3, [r7, #12]
    int motor2_speed = (Control.motor_control.motor2_speed < 0) ? 0 : (Control.motor_control.motor2_speed > MOTOR_MAX_SPEED ? MOTOR_MAX_SPEED : Control.motor_control.motor2_speed);
 8001086:	4b1f      	ldr	r3, [pc, #124]	@ (8001104 <Control_SetMotorSpeeds+0x9c>)
 8001088:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800108a:	2b00      	cmp	r3, #0
 800108c:	db05      	blt.n	800109a <Control_SetMotorSpeeds+0x32>
 800108e:	4b1d      	ldr	r3, [pc, #116]	@ (8001104 <Control_SetMotorSpeeds+0x9c>)
 8001090:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001092:	2bc8      	cmp	r3, #200	@ 0xc8
 8001094:	bfa8      	it	ge
 8001096:	23c8      	movge	r3, #200	@ 0xc8
 8001098:	e000      	b.n	800109c <Control_SetMotorSpeeds+0x34>
 800109a:	2300      	movs	r3, #0
 800109c:	60bb      	str	r3, [r7, #8]
    int motor3_speed = (Control.motor_control.motor3_speed < 0) ? 0 : (Control.motor_control.motor3_speed > MOTOR_MAX_SPEED ? MOTOR_MAX_SPEED : Control.motor_control.motor3_speed);
 800109e:	4b19      	ldr	r3, [pc, #100]	@ (8001104 <Control_SetMotorSpeeds+0x9c>)
 80010a0:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80010a2:	2b00      	cmp	r3, #0
 80010a4:	db05      	blt.n	80010b2 <Control_SetMotorSpeeds+0x4a>
 80010a6:	4b17      	ldr	r3, [pc, #92]	@ (8001104 <Control_SetMotorSpeeds+0x9c>)
 80010a8:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80010aa:	2bc8      	cmp	r3, #200	@ 0xc8
 80010ac:	bfa8      	it	ge
 80010ae:	23c8      	movge	r3, #200	@ 0xc8
 80010b0:	e000      	b.n	80010b4 <Control_SetMotorSpeeds+0x4c>
 80010b2:	2300      	movs	r3, #0
 80010b4:	607b      	str	r3, [r7, #4]
    int motor4_speed = (Control.motor_control.motor4_speed < 0) ? 0 : (Control.motor_control.motor4_speed > MOTOR_MAX_SPEED ? MOTOR_MAX_SPEED : Control.motor_control.motor4_speed);
 80010b6:	4b13      	ldr	r3, [pc, #76]	@ (8001104 <Control_SetMotorSpeeds+0x9c>)
 80010b8:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80010ba:	2b00      	cmp	r3, #0
 80010bc:	db05      	blt.n	80010ca <Control_SetMotorSpeeds+0x62>
 80010be:	4b11      	ldr	r3, [pc, #68]	@ (8001104 <Control_SetMotorSpeeds+0x9c>)
 80010c0:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80010c2:	2bc8      	cmp	r3, #200	@ 0xc8
 80010c4:	bfa8      	it	ge
 80010c6:	23c8      	movge	r3, #200	@ 0xc8
 80010c8:	e000      	b.n	80010cc <Control_SetMotorSpeeds+0x64>
 80010ca:	2300      	movs	r3, #0
 80010cc:	603b      	str	r3, [r7, #0]

    TIM1->CCR1 = motor1_speed;
 80010ce:	4a0e      	ldr	r2, [pc, #56]	@ (8001108 <Control_SetMotorSpeeds+0xa0>)
 80010d0:	68fb      	ldr	r3, [r7, #12]
 80010d2:	6353      	str	r3, [r2, #52]	@ 0x34
    TIM1->CCR4 = motor2_speed;
 80010d4:	4a0c      	ldr	r2, [pc, #48]	@ (8001108 <Control_SetMotorSpeeds+0xa0>)
 80010d6:	68bb      	ldr	r3, [r7, #8]
 80010d8:	6413      	str	r3, [r2, #64]	@ 0x40
    TIM2->CCR1 = motor3_speed;
 80010da:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 80010de:	687b      	ldr	r3, [r7, #4]
 80010e0:	6353      	str	r3, [r2, #52]	@ 0x34
    TIM2->CCR2 = motor4_speed;
 80010e2:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 80010e6:	683b      	ldr	r3, [r7, #0]
 80010e8:	6393      	str	r3, [r2, #56]	@ 0x38

    printf("Motor Speeds: %d, %d, %d, %d\n", motor1_speed, motor2_speed, motor3_speed, motor4_speed);
 80010ea:	683b      	ldr	r3, [r7, #0]
 80010ec:	9300      	str	r3, [sp, #0]
 80010ee:	687b      	ldr	r3, [r7, #4]
 80010f0:	68ba      	ldr	r2, [r7, #8]
 80010f2:	68f9      	ldr	r1, [r7, #12]
 80010f4:	4805      	ldr	r0, [pc, #20]	@ (800110c <Control_SetMotorSpeeds+0xa4>)
 80010f6:	f006 fa8f 	bl	8007618 <iprintf>
}
 80010fa:	bf00      	nop
 80010fc:	3710      	adds	r7, #16
 80010fe:	46bd      	mov	sp, r7
 8001100:	bd80      	pop	{r7, pc}
 8001102:	bf00      	nop
 8001104:	20000084 	.word	0x20000084
 8001108:	40012c00 	.word	0x40012c00
 800110c:	08008438 	.word	0x08008438

08001110 <Control_SetMotorsPower>:

void Control_SetMotorsPower(uint8_t base_power_percentage) {
 8001110:	b580      	push	{r7, lr}
 8001112:	b082      	sub	sp, #8
 8001114:	af00      	add	r7, sp, #0
 8001116:	4603      	mov	r3, r0
 8001118:	71fb      	strb	r3, [r7, #7]
    if (base_power_percentage < 0) base_power_percentage = 0;
    if (base_power_percentage > 100) base_power_percentage = 100;
 800111a:	79fb      	ldrb	r3, [r7, #7]
 800111c:	2b64      	cmp	r3, #100	@ 0x64
 800111e:	d901      	bls.n	8001124 <Control_SetMotorsPower+0x14>
 8001120:	2364      	movs	r3, #100	@ 0x64
 8001122:	71fb      	strb	r3, [r7, #7]

    printf("Base power percentage: %d\n", base_power_percentage);
 8001124:	79fb      	ldrb	r3, [r7, #7]
 8001126:	4619      	mov	r1, r3
 8001128:	4805      	ldr	r0, [pc, #20]	@ (8001140 <Control_SetMotorsPower+0x30>)
 800112a:	f006 fa75 	bl	8007618 <iprintf>

    Control.base_throttle = MOTOR_MIN_SPEED + ((MOTOR_MAX_SPEED - MOTOR_MIN_SPEED) * base_power_percentage) / 100;
 800112e:	79fb      	ldrb	r3, [r7, #7]
 8001130:	3364      	adds	r3, #100	@ 0x64
 8001132:	4a04      	ldr	r2, [pc, #16]	@ (8001144 <Control_SetMotorsPower+0x34>)
 8001134:	63d3      	str	r3, [r2, #60]	@ 0x3c
}
 8001136:	bf00      	nop
 8001138:	3708      	adds	r7, #8
 800113a:	46bd      	mov	sp, r7
 800113c:	bd80      	pop	{r7, pc}
 800113e:	bf00      	nop
 8001140:	08008458 	.word	0x08008458
 8001144:	20000084 	.word	0x20000084

08001148 <Control_Stop>:
    printf("Motor 2 speed: %d\n", Control.motor_control.motor2_speed);
    printf("Motor 3 speed: %d\n", Control.motor_control.motor3_speed);
    printf("Motor 4 speed: %d\n", Control.motor_control.motor4_speed);
}

void Control_Stop(void) {
 8001148:	b580      	push	{r7, lr}
 800114a:	af00      	add	r7, sp, #0
	Control.base_throttle = 0;
 800114c:	4b09      	ldr	r3, [pc, #36]	@ (8001174 <Control_Stop+0x2c>)
 800114e:	2200      	movs	r2, #0
 8001150:	63da      	str	r2, [r3, #60]	@ 0x3c
    Control.motor_control.motor1_speed = 0;
 8001152:	4b08      	ldr	r3, [pc, #32]	@ (8001174 <Control_Stop+0x2c>)
 8001154:	2200      	movs	r2, #0
 8001156:	641a      	str	r2, [r3, #64]	@ 0x40
    Control.motor_control.motor2_speed = 0;
 8001158:	4b06      	ldr	r3, [pc, #24]	@ (8001174 <Control_Stop+0x2c>)
 800115a:	2200      	movs	r2, #0
 800115c:	645a      	str	r2, [r3, #68]	@ 0x44
    Control.motor_control.motor3_speed = 0;
 800115e:	4b05      	ldr	r3, [pc, #20]	@ (8001174 <Control_Stop+0x2c>)
 8001160:	2200      	movs	r2, #0
 8001162:	649a      	str	r2, [r3, #72]	@ 0x48
    Control.motor_control.motor4_speed = 0;
 8001164:	4b03      	ldr	r3, [pc, #12]	@ (8001174 <Control_Stop+0x2c>)
 8001166:	2200      	movs	r2, #0
 8001168:	64da      	str	r2, [r3, #76]	@ 0x4c

    printData("Motors stopped\n");
 800116a:	4803      	ldr	r0, [pc, #12]	@ (8001178 <Control_Stop+0x30>)
 800116c:	f000 fc46 	bl	80019fc <printData>
}
 8001170:	bf00      	nop
 8001172:	bd80      	pop	{r7, pc}
 8001174:	20000084 	.word	0x20000084
 8001178:	080084c4 	.word	0x080084c4

0800117c <GY85_Init>:
    Kalman_Init(&kalman_mx, 0.001, 0.1, 0);
    Kalman_Init(&kalman_my, 0.001, 0.1, 0);
    Kalman_Init(&kalman_mz, 0.001, 0.1, 0);
}

void GY85_Init() {
 800117c:	b580      	push	{r7, lr}
 800117e:	b086      	sub	sp, #24
 8001180:	af04      	add	r7, sp, #16
    uint8_t data;

    // Inicializar el acelerómetro (ADXL345)
    data = 0x08; // Encender el sensor
 8001182:	2308      	movs	r3, #8
 8001184:	71fb      	strb	r3, [r7, #7]
    HAL_I2C_Mem_Write(&hi2c1, (ADXL345_ADDR << 1), 0x2D, I2C_MEMADD_SIZE_8BIT, &data, 1, HAL_MAX_DELAY);
 8001186:	f04f 33ff 	mov.w	r3, #4294967295
 800118a:	9302      	str	r3, [sp, #8]
 800118c:	2301      	movs	r3, #1
 800118e:	9301      	str	r3, [sp, #4]
 8001190:	1dfb      	adds	r3, r7, #7
 8001192:	9300      	str	r3, [sp, #0]
 8001194:	2301      	movs	r3, #1
 8001196:	222d      	movs	r2, #45	@ 0x2d
 8001198:	21a6      	movs	r1, #166	@ 0xa6
 800119a:	4829      	ldr	r0, [pc, #164]	@ (8001240 <GY85_Init+0xc4>)
 800119c:	f001 fbb8 	bl	8002910 <HAL_I2C_Mem_Write>
    data = 0x01; // Configurar rango ±4g
 80011a0:	2301      	movs	r3, #1
 80011a2:	71fb      	strb	r3, [r7, #7]
    HAL_I2C_Mem_Write(&hi2c1, (ADXL345_ADDR << 1), 0x31, I2C_MEMADD_SIZE_8BIT, &data, 1, HAL_MAX_DELAY);
 80011a4:	f04f 33ff 	mov.w	r3, #4294967295
 80011a8:	9302      	str	r3, [sp, #8]
 80011aa:	2301      	movs	r3, #1
 80011ac:	9301      	str	r3, [sp, #4]
 80011ae:	1dfb      	adds	r3, r7, #7
 80011b0:	9300      	str	r3, [sp, #0]
 80011b2:	2301      	movs	r3, #1
 80011b4:	2231      	movs	r2, #49	@ 0x31
 80011b6:	21a6      	movs	r1, #166	@ 0xa6
 80011b8:	4821      	ldr	r0, [pc, #132]	@ (8001240 <GY85_Init+0xc4>)
 80011ba:	f001 fba9 	bl	8002910 <HAL_I2C_Mem_Write>

    // Inicializar el magnetómetro (HMC5883L)
    data = 0x70; // Configurar promedio y frecuencia
 80011be:	2370      	movs	r3, #112	@ 0x70
 80011c0:	71fb      	strb	r3, [r7, #7]
    HAL_I2C_Mem_Write(&hi2c1, (HMC5883L_ADDR << 1), 0x00, I2C_MEMADD_SIZE_8BIT, &data, 1, HAL_MAX_DELAY);
 80011c2:	f04f 33ff 	mov.w	r3, #4294967295
 80011c6:	9302      	str	r3, [sp, #8]
 80011c8:	2301      	movs	r3, #1
 80011ca:	9301      	str	r3, [sp, #4]
 80011cc:	1dfb      	adds	r3, r7, #7
 80011ce:	9300      	str	r3, [sp, #0]
 80011d0:	2301      	movs	r3, #1
 80011d2:	2200      	movs	r2, #0
 80011d4:	213c      	movs	r1, #60	@ 0x3c
 80011d6:	481a      	ldr	r0, [pc, #104]	@ (8001240 <GY85_Init+0xc4>)
 80011d8:	f001 fb9a 	bl	8002910 <HAL_I2C_Mem_Write>
    data = 0x00; // Modo continuo
 80011dc:	2300      	movs	r3, #0
 80011de:	71fb      	strb	r3, [r7, #7]
    HAL_I2C_Mem_Write(&hi2c1, (HMC5883L_ADDR << 1), 0x02, I2C_MEMADD_SIZE_8BIT, &data, 1, HAL_MAX_DELAY);
 80011e0:	f04f 33ff 	mov.w	r3, #4294967295
 80011e4:	9302      	str	r3, [sp, #8]
 80011e6:	2301      	movs	r3, #1
 80011e8:	9301      	str	r3, [sp, #4]
 80011ea:	1dfb      	adds	r3, r7, #7
 80011ec:	9300      	str	r3, [sp, #0]
 80011ee:	2301      	movs	r3, #1
 80011f0:	2202      	movs	r2, #2
 80011f2:	213c      	movs	r1, #60	@ 0x3c
 80011f4:	4812      	ldr	r0, [pc, #72]	@ (8001240 <GY85_Init+0xc4>)
 80011f6:	f001 fb8b 	bl	8002910 <HAL_I2C_Mem_Write>

    // Inicializar el giroscopio (ITG-3205)
    data = 0x03; // Usar PLL con eje Z
 80011fa:	2303      	movs	r3, #3
 80011fc:	71fb      	strb	r3, [r7, #7]
    HAL_I2C_Mem_Write(&hi2c1, (ITG3205_ADDR << 1), 0x3E, I2C_MEMADD_SIZE_8BIT, &data, 1, HAL_MAX_DELAY);
 80011fe:	f04f 33ff 	mov.w	r3, #4294967295
 8001202:	9302      	str	r3, [sp, #8]
 8001204:	2301      	movs	r3, #1
 8001206:	9301      	str	r3, [sp, #4]
 8001208:	1dfb      	adds	r3, r7, #7
 800120a:	9300      	str	r3, [sp, #0]
 800120c:	2301      	movs	r3, #1
 800120e:	223e      	movs	r2, #62	@ 0x3e
 8001210:	21d0      	movs	r1, #208	@ 0xd0
 8001212:	480b      	ldr	r0, [pc, #44]	@ (8001240 <GY85_Init+0xc4>)
 8001214:	f001 fb7c 	bl	8002910 <HAL_I2C_Mem_Write>
    data = 0x18; // Configurar rango ±2000°/s
 8001218:	2318      	movs	r3, #24
 800121a:	71fb      	strb	r3, [r7, #7]
    HAL_I2C_Mem_Write(&hi2c1, (ITG3205_ADDR << 1), 0x16, I2C_MEMADD_SIZE_8BIT, &data, 1, HAL_MAX_DELAY);
 800121c:	f04f 33ff 	mov.w	r3, #4294967295
 8001220:	9302      	str	r3, [sp, #8]
 8001222:	2301      	movs	r3, #1
 8001224:	9301      	str	r3, [sp, #4]
 8001226:	1dfb      	adds	r3, r7, #7
 8001228:	9300      	str	r3, [sp, #0]
 800122a:	2301      	movs	r3, #1
 800122c:	2216      	movs	r2, #22
 800122e:	21d0      	movs	r1, #208	@ 0xd0
 8001230:	4803      	ldr	r0, [pc, #12]	@ (8001240 <GY85_Init+0xc4>)
 8001232:	f001 fb6d 	bl	8002910 <HAL_I2C_Mem_Write>
}
 8001236:	bf00      	nop
 8001238:	3708      	adds	r7, #8
 800123a:	46bd      	mov	sp, r7
 800123c:	bd80      	pop	{r7, pc}
 800123e:	bf00      	nop
 8001240:	200000d4 	.word	0x200000d4

08001244 <ADXL345_ReadData>:


void ADXL345_ReadData(int16_t *x, int16_t *y, int16_t *z) {
 8001244:	b580      	push	{r7, lr}
 8001246:	b08a      	sub	sp, #40	@ 0x28
 8001248:	af04      	add	r7, sp, #16
 800124a:	60f8      	str	r0, [r7, #12]
 800124c:	60b9      	str	r1, [r7, #8]
 800124e:	607a      	str	r2, [r7, #4]
    uint8_t buffer[6];
    HAL_I2C_Mem_Read(&hi2c1, (ADXL345_ADDR << 1), 0x32, I2C_MEMADD_SIZE_8BIT, buffer, 6, HAL_MAX_DELAY);
 8001250:	f04f 33ff 	mov.w	r3, #4294967295
 8001254:	9302      	str	r3, [sp, #8]
 8001256:	2306      	movs	r3, #6
 8001258:	9301      	str	r3, [sp, #4]
 800125a:	f107 0310 	add.w	r3, r7, #16
 800125e:	9300      	str	r3, [sp, #0]
 8001260:	2301      	movs	r3, #1
 8001262:	2232      	movs	r2, #50	@ 0x32
 8001264:	21a6      	movs	r1, #166	@ 0xa6
 8001266:	4811      	ldr	r0, [pc, #68]	@ (80012ac <ADXL345_ReadData+0x68>)
 8001268:	f001 fc66 	bl	8002b38 <HAL_I2C_Mem_Read>
    *x = (int16_t)((buffer[1] << 8) | buffer[0]);
 800126c:	7c7b      	ldrb	r3, [r7, #17]
 800126e:	021b      	lsls	r3, r3, #8
 8001270:	b21a      	sxth	r2, r3
 8001272:	7c3b      	ldrb	r3, [r7, #16]
 8001274:	b21b      	sxth	r3, r3
 8001276:	4313      	orrs	r3, r2
 8001278:	b21a      	sxth	r2, r3
 800127a:	68fb      	ldr	r3, [r7, #12]
 800127c:	801a      	strh	r2, [r3, #0]
    *y = (int16_t)((buffer[3] << 8) | buffer[2]);
 800127e:	7cfb      	ldrb	r3, [r7, #19]
 8001280:	021b      	lsls	r3, r3, #8
 8001282:	b21a      	sxth	r2, r3
 8001284:	7cbb      	ldrb	r3, [r7, #18]
 8001286:	b21b      	sxth	r3, r3
 8001288:	4313      	orrs	r3, r2
 800128a:	b21a      	sxth	r2, r3
 800128c:	68bb      	ldr	r3, [r7, #8]
 800128e:	801a      	strh	r2, [r3, #0]
    *z = (int16_t)((buffer[5] << 8) | buffer[4]);
 8001290:	7d7b      	ldrb	r3, [r7, #21]
 8001292:	021b      	lsls	r3, r3, #8
 8001294:	b21a      	sxth	r2, r3
 8001296:	7d3b      	ldrb	r3, [r7, #20]
 8001298:	b21b      	sxth	r3, r3
 800129a:	4313      	orrs	r3, r2
 800129c:	b21a      	sxth	r2, r3
 800129e:	687b      	ldr	r3, [r7, #4]
 80012a0:	801a      	strh	r2, [r3, #0]
}
 80012a2:	bf00      	nop
 80012a4:	3718      	adds	r7, #24
 80012a6:	46bd      	mov	sp, r7
 80012a8:	bd80      	pop	{r7, pc}
 80012aa:	bf00      	nop
 80012ac:	200000d4 	.word	0x200000d4

080012b0 <HMC5883L_ReadData>:

void HMC5883L_ReadData(int16_t *x, int16_t *y, int16_t *z) {
 80012b0:	b580      	push	{r7, lr}
 80012b2:	b08a      	sub	sp, #40	@ 0x28
 80012b4:	af04      	add	r7, sp, #16
 80012b6:	60f8      	str	r0, [r7, #12]
 80012b8:	60b9      	str	r1, [r7, #8]
 80012ba:	607a      	str	r2, [r7, #4]
    uint8_t buffer[6];
    HAL_I2C_Mem_Read(&hi2c1, (HMC5883L_ADDR << 1), 0x03, I2C_MEMADD_SIZE_8BIT, buffer, 6, HAL_MAX_DELAY);
 80012bc:	f04f 33ff 	mov.w	r3, #4294967295
 80012c0:	9302      	str	r3, [sp, #8]
 80012c2:	2306      	movs	r3, #6
 80012c4:	9301      	str	r3, [sp, #4]
 80012c6:	f107 0310 	add.w	r3, r7, #16
 80012ca:	9300      	str	r3, [sp, #0]
 80012cc:	2301      	movs	r3, #1
 80012ce:	2203      	movs	r2, #3
 80012d0:	213c      	movs	r1, #60	@ 0x3c
 80012d2:	4811      	ldr	r0, [pc, #68]	@ (8001318 <HMC5883L_ReadData+0x68>)
 80012d4:	f001 fc30 	bl	8002b38 <HAL_I2C_Mem_Read>
    *x = (int16_t)((buffer[0] << 8) | buffer[1]);
 80012d8:	7c3b      	ldrb	r3, [r7, #16]
 80012da:	021b      	lsls	r3, r3, #8
 80012dc:	b21a      	sxth	r2, r3
 80012de:	7c7b      	ldrb	r3, [r7, #17]
 80012e0:	b21b      	sxth	r3, r3
 80012e2:	4313      	orrs	r3, r2
 80012e4:	b21a      	sxth	r2, r3
 80012e6:	68fb      	ldr	r3, [r7, #12]
 80012e8:	801a      	strh	r2, [r3, #0]
    *z = (int16_t)((buffer[2] << 8) | buffer[3]);
 80012ea:	7cbb      	ldrb	r3, [r7, #18]
 80012ec:	021b      	lsls	r3, r3, #8
 80012ee:	b21a      	sxth	r2, r3
 80012f0:	7cfb      	ldrb	r3, [r7, #19]
 80012f2:	b21b      	sxth	r3, r3
 80012f4:	4313      	orrs	r3, r2
 80012f6:	b21a      	sxth	r2, r3
 80012f8:	687b      	ldr	r3, [r7, #4]
 80012fa:	801a      	strh	r2, [r3, #0]
    *y = (int16_t)((buffer[4] << 8) | buffer[5]);
 80012fc:	7d3b      	ldrb	r3, [r7, #20]
 80012fe:	021b      	lsls	r3, r3, #8
 8001300:	b21a      	sxth	r2, r3
 8001302:	7d7b      	ldrb	r3, [r7, #21]
 8001304:	b21b      	sxth	r3, r3
 8001306:	4313      	orrs	r3, r2
 8001308:	b21a      	sxth	r2, r3
 800130a:	68bb      	ldr	r3, [r7, #8]
 800130c:	801a      	strh	r2, [r3, #0]
}
 800130e:	bf00      	nop
 8001310:	3718      	adds	r7, #24
 8001312:	46bd      	mov	sp, r7
 8001314:	bd80      	pop	{r7, pc}
 8001316:	bf00      	nop
 8001318:	200000d4 	.word	0x200000d4

0800131c <ITG3205_ReadData>:

void ITG3205_ReadData(int16_t *x, int16_t *y, int16_t *z) {
 800131c:	b580      	push	{r7, lr}
 800131e:	b08a      	sub	sp, #40	@ 0x28
 8001320:	af04      	add	r7, sp, #16
 8001322:	60f8      	str	r0, [r7, #12]
 8001324:	60b9      	str	r1, [r7, #8]
 8001326:	607a      	str	r2, [r7, #4]
    uint8_t buffer[6];
    HAL_I2C_Mem_Read(&hi2c1, (ITG3205_ADDR << 1), 0x1D, I2C_MEMADD_SIZE_8BIT, buffer, 6, HAL_MAX_DELAY);
 8001328:	f04f 33ff 	mov.w	r3, #4294967295
 800132c:	9302      	str	r3, [sp, #8]
 800132e:	2306      	movs	r3, #6
 8001330:	9301      	str	r3, [sp, #4]
 8001332:	f107 0310 	add.w	r3, r7, #16
 8001336:	9300      	str	r3, [sp, #0]
 8001338:	2301      	movs	r3, #1
 800133a:	221d      	movs	r2, #29
 800133c:	21d0      	movs	r1, #208	@ 0xd0
 800133e:	4811      	ldr	r0, [pc, #68]	@ (8001384 <ITG3205_ReadData+0x68>)
 8001340:	f001 fbfa 	bl	8002b38 <HAL_I2C_Mem_Read>
    *x = (int16_t)((buffer[0] << 8) | buffer[1]);
 8001344:	7c3b      	ldrb	r3, [r7, #16]
 8001346:	021b      	lsls	r3, r3, #8
 8001348:	b21a      	sxth	r2, r3
 800134a:	7c7b      	ldrb	r3, [r7, #17]
 800134c:	b21b      	sxth	r3, r3
 800134e:	4313      	orrs	r3, r2
 8001350:	b21a      	sxth	r2, r3
 8001352:	68fb      	ldr	r3, [r7, #12]
 8001354:	801a      	strh	r2, [r3, #0]
    *y = (int16_t)((buffer[2] << 8) | buffer[3]);
 8001356:	7cbb      	ldrb	r3, [r7, #18]
 8001358:	021b      	lsls	r3, r3, #8
 800135a:	b21a      	sxth	r2, r3
 800135c:	7cfb      	ldrb	r3, [r7, #19]
 800135e:	b21b      	sxth	r3, r3
 8001360:	4313      	orrs	r3, r2
 8001362:	b21a      	sxth	r2, r3
 8001364:	68bb      	ldr	r3, [r7, #8]
 8001366:	801a      	strh	r2, [r3, #0]
    *z = (int16_t)((buffer[4] << 8) | buffer[5]);
 8001368:	7d3b      	ldrb	r3, [r7, #20]
 800136a:	021b      	lsls	r3, r3, #8
 800136c:	b21a      	sxth	r2, r3
 800136e:	7d7b      	ldrb	r3, [r7, #21]
 8001370:	b21b      	sxth	r3, r3
 8001372:	4313      	orrs	r3, r2
 8001374:	b21a      	sxth	r2, r3
 8001376:	687b      	ldr	r3, [r7, #4]
 8001378:	801a      	strh	r2, [r3, #0]
}
 800137a:	bf00      	nop
 800137c:	3718      	adds	r7, #24
 800137e:	46bd      	mov	sp, r7
 8001380:	bd80      	pop	{r7, pc}
 8001382:	bf00      	nop
 8001384:	200000d4 	.word	0x200000d4

08001388 <Sensor_Read>:

void Sensor_Read(struct girodata_t* giro) {
 8001388:	b580      	push	{r7, lr}
 800138a:	b082      	sub	sp, #8
 800138c:	af00      	add	r7, sp, #0
 800138e:	6078      	str	r0, [r7, #4]
    // Leer datos crudos de sensores
    ADXL345_ReadData(&giro->ax, &giro->ay, &giro->az);
 8001390:	6878      	ldr	r0, [r7, #4]
 8001392:	687b      	ldr	r3, [r7, #4]
 8001394:	1c99      	adds	r1, r3, #2
 8001396:	687b      	ldr	r3, [r7, #4]
 8001398:	3304      	adds	r3, #4
 800139a:	461a      	mov	r2, r3
 800139c:	f7ff ff52 	bl	8001244 <ADXL345_ReadData>
    ITG3205_ReadData(&giro->gx, &giro->gy, &giro->gz);
 80013a0:	687b      	ldr	r3, [r7, #4]
 80013a2:	1d98      	adds	r0, r3, #6
 80013a4:	687b      	ldr	r3, [r7, #4]
 80013a6:	f103 0108 	add.w	r1, r3, #8
 80013aa:	687b      	ldr	r3, [r7, #4]
 80013ac:	330a      	adds	r3, #10
 80013ae:	461a      	mov	r2, r3
 80013b0:	f7ff ffb4 	bl	800131c <ITG3205_ReadData>
    HMC5883L_ReadData(&giro->mx, &giro->my, &giro->mz);
 80013b4:	687b      	ldr	r3, [r7, #4]
 80013b6:	f103 000c 	add.w	r0, r3, #12
 80013ba:	687b      	ldr	r3, [r7, #4]
 80013bc:	f103 010e 	add.w	r1, r3, #14
 80013c0:	687b      	ldr	r3, [r7, #4]
 80013c2:	3310      	adds	r3, #16
 80013c4:	461a      	mov	r2, r3
 80013c6:	f7ff ff73 	bl	80012b0 <HMC5883L_ReadData>
//    giro->gz = Kalman_Update(&kalman_gz, giro->gz);
//    giro->mx = Kalman_Update(&kalman_mx, giro->mx);
//    giro->my = Kalman_Update(&kalman_my, giro->my);
//    giro->mz = Kalman_Update(&kalman_mz, giro->mz);

}
 80013ca:	bf00      	nop
 80013cc:	3708      	adds	r7, #8
 80013ce:	46bd      	mov	sp, r7
 80013d0:	bd80      	pop	{r7, pc}
	...

080013d4 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 80013d4:	b580      	push	{r7, lr}
 80013d6:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 80013d8:	f000 fe5c 	bl	8002094 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 80013dc:	f000 f842 	bl	8001464 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 80013e0:	f000 fac2 	bl	8001968 <MX_GPIO_Init>
  MX_USART2_UART_Init();
 80013e4:	f000 fa90 	bl	8001908 <MX_USART2_UART_Init>
  MX_USART1_UART_Init();
 80013e8:	f000 fa5e 	bl	80018a8 <MX_USART1_UART_Init>
  MX_I2C1_Init();
 80013ec:	f000 f894 	bl	8001518 <MX_I2C1_Init>
  MX_TIM1_Init();
 80013f0:	f000 f8d2 	bl	8001598 <MX_TIM1_Init>
  MX_TIM2_Init();
 80013f4:	f000 f988 	bl	8001708 <MX_TIM2_Init>
  MX_TIM3_Init();
 80013f8:	f000 fa08 	bl	800180c <MX_TIM3_Init>
  /* USER CODE BEGIN 2 */
  // Inicializar el sensor GY-85
  GY85_Init();
 80013fc:	f7ff febe 	bl	800117c <GY85_Init>

  Control_Init();
 8001400:	f7ff fbdc 	bl	8000bbc <Control_Init>

  HAL_UART_Receive_IT(&huart1, rx_buffer, sizeof(rx_buffer));
 8001404:	2280      	movs	r2, #128	@ 0x80
 8001406:	4911      	ldr	r1, [pc, #68]	@ (800144c <main+0x78>)
 8001408:	4811      	ldr	r0, [pc, #68]	@ (8001450 <main+0x7c>)
 800140a:	f004 fe66 	bl	80060da <HAL_UART_Receive_IT>

  HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_1);
 800140e:	2100      	movs	r1, #0
 8001410:	4810      	ldr	r0, [pc, #64]	@ (8001454 <main+0x80>)
 8001412:	f003 fc9f 	bl	8004d54 <HAL_TIM_PWM_Start>
  HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_4);
 8001416:	210c      	movs	r1, #12
 8001418:	480e      	ldr	r0, [pc, #56]	@ (8001454 <main+0x80>)
 800141a:	f003 fc9b 	bl	8004d54 <HAL_TIM_PWM_Start>
  HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_1);
 800141e:	2100      	movs	r1, #0
 8001420:	480d      	ldr	r0, [pc, #52]	@ (8001458 <main+0x84>)
 8001422:	f003 fc97 	bl	8004d54 <HAL_TIM_PWM_Start>
  HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_2);
 8001426:	2104      	movs	r1, #4
 8001428:	480b      	ldr	r0, [pc, #44]	@ (8001458 <main+0x84>)
 800142a:	f003 fc93 	bl	8004d54 <HAL_TIM_PWM_Start>

#if Calibrate
  Control_ArmMotors();
 800142e:	f7ff fc0d 	bl	8000c4c <Control_ArmMotors>
//  Control_SetMotorsPower(100);
//  HAL_Delay(3000);
//  Control_SetMotorsPower(0);

#endif
  HAL_TIM_Base_Start_IT(&htim3);
 8001432:	480a      	ldr	r0, [pc, #40]	@ (800145c <main+0x88>)
 8001434:	f003 fbd0 	bl	8004bd8 <HAL_TIM_Base_Start_IT>

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
  {
	if (control_update_flag) {
 8001438:	4b09      	ldr	r3, [pc, #36]	@ (8001460 <main+0x8c>)
 800143a:	781b      	ldrb	r3, [r3, #0]
 800143c:	2b00      	cmp	r3, #0
 800143e:	d0fb      	beq.n	8001438 <main+0x64>
		control_update_flag = 0;  // Limpiar bandera
 8001440:	4b07      	ldr	r3, [pc, #28]	@ (8001460 <main+0x8c>)
 8001442:	2200      	movs	r2, #0
 8001444:	701a      	strb	r2, [r3, #0]
		Control_Update();         // Ejecutar la lógica fuera de la ISR
 8001446:	f7ff fc35 	bl	8000cb4 <Control_Update>
	if (control_update_flag) {
 800144a:	e7f5      	b.n	8001438 <main+0x64>
 800144c:	2000031c 	.word	0x2000031c
 8001450:	2000020c 	.word	0x2000020c
 8001454:	20000128 	.word	0x20000128
 8001458:	20000174 	.word	0x20000174
 800145c:	200001c0 	.word	0x200001c0
 8001460:	200003a2 	.word	0x200003a2

08001464 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8001464:	b580      	push	{r7, lr}
 8001466:	b096      	sub	sp, #88	@ 0x58
 8001468:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800146a:	f107 0330 	add.w	r3, r7, #48	@ 0x30
 800146e:	2228      	movs	r2, #40	@ 0x28
 8001470:	2100      	movs	r1, #0
 8001472:	4618      	mov	r0, r3
 8001474:	f006 f925 	bl	80076c2 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001478:	f107 031c 	add.w	r3, r7, #28
 800147c:	2200      	movs	r2, #0
 800147e:	601a      	str	r2, [r3, #0]
 8001480:	605a      	str	r2, [r3, #4]
 8001482:	609a      	str	r2, [r3, #8]
 8001484:	60da      	str	r2, [r3, #12]
 8001486:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 8001488:	1d3b      	adds	r3, r7, #4
 800148a:	2200      	movs	r2, #0
 800148c:	601a      	str	r2, [r3, #0]
 800148e:	605a      	str	r2, [r3, #4]
 8001490:	609a      	str	r2, [r3, #8]
 8001492:	60da      	str	r2, [r3, #12]
 8001494:	611a      	str	r2, [r3, #16]
 8001496:	615a      	str	r2, [r3, #20]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 8001498:	2302      	movs	r3, #2
 800149a:	633b      	str	r3, [r7, #48]	@ 0x30
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 800149c:	2301      	movs	r3, #1
 800149e:	643b      	str	r3, [r7, #64]	@ 0x40
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 80014a0:	2310      	movs	r3, #16
 80014a2:	647b      	str	r3, [r7, #68]	@ 0x44
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 80014a4:	2300      	movs	r3, #0
 80014a6:	64fb      	str	r3, [r7, #76]	@ 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80014a8:	f107 0330 	add.w	r3, r7, #48	@ 0x30
 80014ac:	4618      	mov	r0, r3
 80014ae:	f001 ffb7 	bl	8003420 <HAL_RCC_OscConfig>
 80014b2:	4603      	mov	r3, r0
 80014b4:	2b00      	cmp	r3, #0
 80014b6:	d001      	beq.n	80014bc <SystemClock_Config+0x58>
  {
    Error_Handler();
 80014b8:	f000 fb2c 	bl	8001b14 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80014bc:	230f      	movs	r3, #15
 80014be:	61fb      	str	r3, [r7, #28]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 80014c0:	2300      	movs	r3, #0
 80014c2:	623b      	str	r3, [r7, #32]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80014c4:	2300      	movs	r3, #0
 80014c6:	627b      	str	r3, [r7, #36]	@ 0x24
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 80014c8:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 80014cc:	62bb      	str	r3, [r7, #40]	@ 0x28
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 80014ce:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 80014d2:	62fb      	str	r3, [r7, #44]	@ 0x2c

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 80014d4:	f107 031c 	add.w	r3, r7, #28
 80014d8:	2100      	movs	r1, #0
 80014da:	4618      	mov	r0, r3
 80014dc:	f002 ffde 	bl	800449c <HAL_RCC_ClockConfig>
 80014e0:	4603      	mov	r3, r0
 80014e2:	2b00      	cmp	r3, #0
 80014e4:	d001      	beq.n	80014ea <SystemClock_Config+0x86>
  {
    Error_Handler();
 80014e6:	f000 fb15 	bl	8001b14 <Error_Handler>
  }
  PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART1|RCC_PERIPHCLK_I2C1
 80014ea:	f241 0321 	movw	r3, #4129	@ 0x1021
 80014ee:	607b      	str	r3, [r7, #4]
                              |RCC_PERIPHCLK_TIM1;
  PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK1;
 80014f0:	2300      	movs	r3, #0
 80014f2:	60fb      	str	r3, [r7, #12]
  PeriphClkInit.I2c1ClockSelection = RCC_I2C1CLKSOURCE_HSI;
 80014f4:	2300      	movs	r3, #0
 80014f6:	613b      	str	r3, [r7, #16]
  PeriphClkInit.Tim1ClockSelection = RCC_TIM1CLK_HCLK;
 80014f8:	2300      	movs	r3, #0
 80014fa:	61bb      	str	r3, [r7, #24]
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 80014fc:	1d3b      	adds	r3, r7, #4
 80014fe:	4618      	mov	r0, r3
 8001500:	f003 f9ec 	bl	80048dc <HAL_RCCEx_PeriphCLKConfig>
 8001504:	4603      	mov	r3, r0
 8001506:	2b00      	cmp	r3, #0
 8001508:	d001      	beq.n	800150e <SystemClock_Config+0xaa>
  {
    Error_Handler();
 800150a:	f000 fb03 	bl	8001b14 <Error_Handler>
  }
}
 800150e:	bf00      	nop
 8001510:	3758      	adds	r7, #88	@ 0x58
 8001512:	46bd      	mov	sp, r7
 8001514:	bd80      	pop	{r7, pc}
	...

08001518 <MX_I2C1_Init>:
  * @brief I2C1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_I2C1_Init(void)
{
 8001518:	b580      	push	{r7, lr}
 800151a:	af00      	add	r7, sp, #0
  /* USER CODE END I2C1_Init 0 */

  /* USER CODE BEGIN I2C1_Init 1 */

  /* USER CODE END I2C1_Init 1 */
  hi2c1.Instance = I2C1;
 800151c:	4b1b      	ldr	r3, [pc, #108]	@ (800158c <MX_I2C1_Init+0x74>)
 800151e:	4a1c      	ldr	r2, [pc, #112]	@ (8001590 <MX_I2C1_Init+0x78>)
 8001520:	601a      	str	r2, [r3, #0]
  hi2c1.Init.Timing = 0x00201D2B;
 8001522:	4b1a      	ldr	r3, [pc, #104]	@ (800158c <MX_I2C1_Init+0x74>)
 8001524:	4a1b      	ldr	r2, [pc, #108]	@ (8001594 <MX_I2C1_Init+0x7c>)
 8001526:	605a      	str	r2, [r3, #4]
  hi2c1.Init.OwnAddress1 = 0;
 8001528:	4b18      	ldr	r3, [pc, #96]	@ (800158c <MX_I2C1_Init+0x74>)
 800152a:	2200      	movs	r2, #0
 800152c:	609a      	str	r2, [r3, #8]
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 800152e:	4b17      	ldr	r3, [pc, #92]	@ (800158c <MX_I2C1_Init+0x74>)
 8001530:	2201      	movs	r2, #1
 8001532:	60da      	str	r2, [r3, #12]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8001534:	4b15      	ldr	r3, [pc, #84]	@ (800158c <MX_I2C1_Init+0x74>)
 8001536:	2200      	movs	r2, #0
 8001538:	611a      	str	r2, [r3, #16]
  hi2c1.Init.OwnAddress2 = 0;
 800153a:	4b14      	ldr	r3, [pc, #80]	@ (800158c <MX_I2C1_Init+0x74>)
 800153c:	2200      	movs	r2, #0
 800153e:	615a      	str	r2, [r3, #20]
  hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 8001540:	4b12      	ldr	r3, [pc, #72]	@ (800158c <MX_I2C1_Init+0x74>)
 8001542:	2200      	movs	r2, #0
 8001544:	619a      	str	r2, [r3, #24]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8001546:	4b11      	ldr	r3, [pc, #68]	@ (800158c <MX_I2C1_Init+0x74>)
 8001548:	2200      	movs	r2, #0
 800154a:	61da      	str	r2, [r3, #28]
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 800154c:	4b0f      	ldr	r3, [pc, #60]	@ (800158c <MX_I2C1_Init+0x74>)
 800154e:	2200      	movs	r2, #0
 8001550:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 8001552:	480e      	ldr	r0, [pc, #56]	@ (800158c <MX_I2C1_Init+0x74>)
 8001554:	f001 f940 	bl	80027d8 <HAL_I2C_Init>
 8001558:	4603      	mov	r3, r0
 800155a:	2b00      	cmp	r3, #0
 800155c:	d001      	beq.n	8001562 <MX_I2C1_Init+0x4a>
  {
    Error_Handler();
 800155e:	f000 fad9 	bl	8001b14 <Error_Handler>
  }

  /** Configure Analogue filter
  */
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c1, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 8001562:	2100      	movs	r1, #0
 8001564:	4809      	ldr	r0, [pc, #36]	@ (800158c <MX_I2C1_Init+0x74>)
 8001566:	f001 fec3 	bl	80032f0 <HAL_I2CEx_ConfigAnalogFilter>
 800156a:	4603      	mov	r3, r0
 800156c:	2b00      	cmp	r3, #0
 800156e:	d001      	beq.n	8001574 <MX_I2C1_Init+0x5c>
  {
    Error_Handler();
 8001570:	f000 fad0 	bl	8001b14 <Error_Handler>
  }

  /** Configure Digital filter
  */
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c1, 0) != HAL_OK)
 8001574:	2100      	movs	r1, #0
 8001576:	4805      	ldr	r0, [pc, #20]	@ (800158c <MX_I2C1_Init+0x74>)
 8001578:	f001 ff05 	bl	8003386 <HAL_I2CEx_ConfigDigitalFilter>
 800157c:	4603      	mov	r3, r0
 800157e:	2b00      	cmp	r3, #0
 8001580:	d001      	beq.n	8001586 <MX_I2C1_Init+0x6e>
  {
    Error_Handler();
 8001582:	f000 fac7 	bl	8001b14 <Error_Handler>
  }
  /* USER CODE BEGIN I2C1_Init 2 */

  /* USER CODE END I2C1_Init 2 */

}
 8001586:	bf00      	nop
 8001588:	bd80      	pop	{r7, pc}
 800158a:	bf00      	nop
 800158c:	200000d4 	.word	0x200000d4
 8001590:	40005400 	.word	0x40005400
 8001594:	00201d2b 	.word	0x00201d2b

08001598 <MX_TIM1_Init>:
  * @brief TIM1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM1_Init(void)
{
 8001598:	b580      	push	{r7, lr}
 800159a:	b09a      	sub	sp, #104	@ 0x68
 800159c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM1_Init 0 */

  /* USER CODE END TIM1_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 800159e:	f107 0358 	add.w	r3, r7, #88	@ 0x58
 80015a2:	2200      	movs	r2, #0
 80015a4:	601a      	str	r2, [r3, #0]
 80015a6:	605a      	str	r2, [r3, #4]
 80015a8:	609a      	str	r2, [r3, #8]
 80015aa:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80015ac:	f107 034c 	add.w	r3, r7, #76	@ 0x4c
 80015b0:	2200      	movs	r2, #0
 80015b2:	601a      	str	r2, [r3, #0]
 80015b4:	605a      	str	r2, [r3, #4]
 80015b6:	609a      	str	r2, [r3, #8]
  TIM_OC_InitTypeDef sConfigOC = {0};
 80015b8:	f107 0330 	add.w	r3, r7, #48	@ 0x30
 80015bc:	2200      	movs	r2, #0
 80015be:	601a      	str	r2, [r3, #0]
 80015c0:	605a      	str	r2, [r3, #4]
 80015c2:	609a      	str	r2, [r3, #8]
 80015c4:	60da      	str	r2, [r3, #12]
 80015c6:	611a      	str	r2, [r3, #16]
 80015c8:	615a      	str	r2, [r3, #20]
 80015ca:	619a      	str	r2, [r3, #24]
  TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 80015cc:	1d3b      	adds	r3, r7, #4
 80015ce:	222c      	movs	r2, #44	@ 0x2c
 80015d0:	2100      	movs	r1, #0
 80015d2:	4618      	mov	r0, r3
 80015d4:	f006 f875 	bl	80076c2 <memset>

  /* USER CODE BEGIN TIM1_Init 1 */

  /* USER CODE END TIM1_Init 1 */
  htim1.Instance = TIM1;
 80015d8:	4b49      	ldr	r3, [pc, #292]	@ (8001700 <MX_TIM1_Init+0x168>)
 80015da:	4a4a      	ldr	r2, [pc, #296]	@ (8001704 <MX_TIM1_Init+0x16c>)
 80015dc:	601a      	str	r2, [r3, #0]
  htim1.Init.Prescaler = 80-1;
 80015de:	4b48      	ldr	r3, [pc, #288]	@ (8001700 <MX_TIM1_Init+0x168>)
 80015e0:	224f      	movs	r2, #79	@ 0x4f
 80015e2:	605a      	str	r2, [r3, #4]
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 80015e4:	4b46      	ldr	r3, [pc, #280]	@ (8001700 <MX_TIM1_Init+0x168>)
 80015e6:	2200      	movs	r2, #0
 80015e8:	609a      	str	r2, [r3, #8]
  htim1.Init.Period = 2000-1;
 80015ea:	4b45      	ldr	r3, [pc, #276]	@ (8001700 <MX_TIM1_Init+0x168>)
 80015ec:	f240 72cf 	movw	r2, #1999	@ 0x7cf
 80015f0:	60da      	str	r2, [r3, #12]
  htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80015f2:	4b43      	ldr	r3, [pc, #268]	@ (8001700 <MX_TIM1_Init+0x168>)
 80015f4:	2200      	movs	r2, #0
 80015f6:	611a      	str	r2, [r3, #16]
  htim1.Init.RepetitionCounter = 0;
 80015f8:	4b41      	ldr	r3, [pc, #260]	@ (8001700 <MX_TIM1_Init+0x168>)
 80015fa:	2200      	movs	r2, #0
 80015fc:	615a      	str	r2, [r3, #20]
  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80015fe:	4b40      	ldr	r3, [pc, #256]	@ (8001700 <MX_TIM1_Init+0x168>)
 8001600:	2200      	movs	r2, #0
 8001602:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 8001604:	483e      	ldr	r0, [pc, #248]	@ (8001700 <MX_TIM1_Init+0x168>)
 8001606:	f003 fa8f 	bl	8004b28 <HAL_TIM_Base_Init>
 800160a:	4603      	mov	r3, r0
 800160c:	2b00      	cmp	r3, #0
 800160e:	d001      	beq.n	8001614 <MX_TIM1_Init+0x7c>
  {
    Error_Handler();
 8001610:	f000 fa80 	bl	8001b14 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001614:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8001618:	65bb      	str	r3, [r7, #88]	@ 0x58
  if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 800161a:	f107 0358 	add.w	r3, r7, #88	@ 0x58
 800161e:	4619      	mov	r1, r3
 8001620:	4837      	ldr	r0, [pc, #220]	@ (8001700 <MX_TIM1_Init+0x168>)
 8001622:	f003 fe99 	bl	8005358 <HAL_TIM_ConfigClockSource>
 8001626:	4603      	mov	r3, r0
 8001628:	2b00      	cmp	r3, #0
 800162a:	d001      	beq.n	8001630 <MX_TIM1_Init+0x98>
  {
    Error_Handler();
 800162c:	f000 fa72 	bl	8001b14 <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 8001630:	4833      	ldr	r0, [pc, #204]	@ (8001700 <MX_TIM1_Init+0x168>)
 8001632:	f003 fb2d 	bl	8004c90 <HAL_TIM_PWM_Init>
 8001636:	4603      	mov	r3, r0
 8001638:	2b00      	cmp	r3, #0
 800163a:	d001      	beq.n	8001640 <MX_TIM1_Init+0xa8>
  {
    Error_Handler();
 800163c:	f000 fa6a 	bl	8001b14 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8001640:	2300      	movs	r3, #0
 8001642:	64fb      	str	r3, [r7, #76]	@ 0x4c
  sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 8001644:	2300      	movs	r3, #0
 8001646:	653b      	str	r3, [r7, #80]	@ 0x50
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001648:	2300      	movs	r3, #0
 800164a:	657b      	str	r3, [r7, #84]	@ 0x54
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 800164c:	f107 034c 	add.w	r3, r7, #76	@ 0x4c
 8001650:	4619      	mov	r1, r3
 8001652:	482b      	ldr	r0, [pc, #172]	@ (8001700 <MX_TIM1_Init+0x168>)
 8001654:	f004 fb66 	bl	8005d24 <HAL_TIMEx_MasterConfigSynchronization>
 8001658:	4603      	mov	r3, r0
 800165a:	2b00      	cmp	r3, #0
 800165c:	d001      	beq.n	8001662 <MX_TIM1_Init+0xca>
  {
    Error_Handler();
 800165e:	f000 fa59 	bl	8001b14 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8001662:	2360      	movs	r3, #96	@ 0x60
 8001664:	633b      	str	r3, [r7, #48]	@ 0x30
  sConfigOC.Pulse = 0;
 8001666:	2300      	movs	r3, #0
 8001668:	637b      	str	r3, [r7, #52]	@ 0x34
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 800166a:	2300      	movs	r3, #0
 800166c:	63bb      	str	r3, [r7, #56]	@ 0x38
  sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 800166e:	2300      	movs	r3, #0
 8001670:	63fb      	str	r3, [r7, #60]	@ 0x3c
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8001672:	2300      	movs	r3, #0
 8001674:	643b      	str	r3, [r7, #64]	@ 0x40
  sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 8001676:	2300      	movs	r3, #0
 8001678:	647b      	str	r3, [r7, #68]	@ 0x44
  sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 800167a:	2300      	movs	r3, #0
 800167c:	64bb      	str	r3, [r7, #72]	@ 0x48
  if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 800167e:	f107 0330 	add.w	r3, r7, #48	@ 0x30
 8001682:	2200      	movs	r2, #0
 8001684:	4619      	mov	r1, r3
 8001686:	481e      	ldr	r0, [pc, #120]	@ (8001700 <MX_TIM1_Init+0x168>)
 8001688:	f003 fd52 	bl	8005130 <HAL_TIM_PWM_ConfigChannel>
 800168c:	4603      	mov	r3, r0
 800168e:	2b00      	cmp	r3, #0
 8001690:	d001      	beq.n	8001696 <MX_TIM1_Init+0xfe>
  {
    Error_Handler();
 8001692:	f000 fa3f 	bl	8001b14 <Error_Handler>
  }
  if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 8001696:	f107 0330 	add.w	r3, r7, #48	@ 0x30
 800169a:	220c      	movs	r2, #12
 800169c:	4619      	mov	r1, r3
 800169e:	4818      	ldr	r0, [pc, #96]	@ (8001700 <MX_TIM1_Init+0x168>)
 80016a0:	f003 fd46 	bl	8005130 <HAL_TIM_PWM_ConfigChannel>
 80016a4:	4603      	mov	r3, r0
 80016a6:	2b00      	cmp	r3, #0
 80016a8:	d001      	beq.n	80016ae <MX_TIM1_Init+0x116>
  {
    Error_Handler();
 80016aa:	f000 fa33 	bl	8001b14 <Error_Handler>
  }
  sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 80016ae:	2300      	movs	r3, #0
 80016b0:	607b      	str	r3, [r7, #4]
  sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 80016b2:	2300      	movs	r3, #0
 80016b4:	60bb      	str	r3, [r7, #8]
  sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 80016b6:	2300      	movs	r3, #0
 80016b8:	60fb      	str	r3, [r7, #12]
  sBreakDeadTimeConfig.DeadTime = 0;
 80016ba:	2300      	movs	r3, #0
 80016bc:	613b      	str	r3, [r7, #16]
  sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 80016be:	2300      	movs	r3, #0
 80016c0:	617b      	str	r3, [r7, #20]
  sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 80016c2:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 80016c6:	61bb      	str	r3, [r7, #24]
  sBreakDeadTimeConfig.BreakFilter = 0;
 80016c8:	2300      	movs	r3, #0
 80016ca:	61fb      	str	r3, [r7, #28]
  sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
 80016cc:	2300      	movs	r3, #0
 80016ce:	623b      	str	r3, [r7, #32]
  sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 80016d0:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
 80016d4:	627b      	str	r3, [r7, #36]	@ 0x24
  sBreakDeadTimeConfig.Break2Filter = 0;
 80016d6:	2300      	movs	r3, #0
 80016d8:	62bb      	str	r3, [r7, #40]	@ 0x28
  sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 80016da:	2300      	movs	r3, #0
 80016dc:	62fb      	str	r3, [r7, #44]	@ 0x2c
  if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 80016de:	1d3b      	adds	r3, r7, #4
 80016e0:	4619      	mov	r1, r3
 80016e2:	4807      	ldr	r0, [pc, #28]	@ (8001700 <MX_TIM1_Init+0x168>)
 80016e4:	f004 fb8c 	bl	8005e00 <HAL_TIMEx_ConfigBreakDeadTime>
 80016e8:	4603      	mov	r3, r0
 80016ea:	2b00      	cmp	r3, #0
 80016ec:	d001      	beq.n	80016f2 <MX_TIM1_Init+0x15a>
  {
    Error_Handler();
 80016ee:	f000 fa11 	bl	8001b14 <Error_Handler>
  }
  /* USER CODE BEGIN TIM1_Init 2 */

  /* USER CODE END TIM1_Init 2 */
  HAL_TIM_MspPostInit(&htim1);
 80016f2:	4803      	ldr	r0, [pc, #12]	@ (8001700 <MX_TIM1_Init+0x168>)
 80016f4:	f000 fac8 	bl	8001c88 <HAL_TIM_MspPostInit>

}
 80016f8:	bf00      	nop
 80016fa:	3768      	adds	r7, #104	@ 0x68
 80016fc:	46bd      	mov	sp, r7
 80016fe:	bd80      	pop	{r7, pc}
 8001700:	20000128 	.word	0x20000128
 8001704:	40012c00 	.word	0x40012c00

08001708 <MX_TIM2_Init>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 8001708:	b580      	push	{r7, lr}
 800170a:	b08e      	sub	sp, #56	@ 0x38
 800170c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 800170e:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 8001712:	2200      	movs	r2, #0
 8001714:	601a      	str	r2, [r3, #0]
 8001716:	605a      	str	r2, [r3, #4]
 8001718:	609a      	str	r2, [r3, #8]
 800171a:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 800171c:	f107 031c 	add.w	r3, r7, #28
 8001720:	2200      	movs	r2, #0
 8001722:	601a      	str	r2, [r3, #0]
 8001724:	605a      	str	r2, [r3, #4]
 8001726:	609a      	str	r2, [r3, #8]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8001728:	463b      	mov	r3, r7
 800172a:	2200      	movs	r2, #0
 800172c:	601a      	str	r2, [r3, #0]
 800172e:	605a      	str	r2, [r3, #4]
 8001730:	609a      	str	r2, [r3, #8]
 8001732:	60da      	str	r2, [r3, #12]
 8001734:	611a      	str	r2, [r3, #16]
 8001736:	615a      	str	r2, [r3, #20]
 8001738:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 800173a:	4b33      	ldr	r3, [pc, #204]	@ (8001808 <MX_TIM2_Init+0x100>)
 800173c:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 8001740:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 80-1;
 8001742:	4b31      	ldr	r3, [pc, #196]	@ (8001808 <MX_TIM2_Init+0x100>)
 8001744:	224f      	movs	r2, #79	@ 0x4f
 8001746:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001748:	4b2f      	ldr	r3, [pc, #188]	@ (8001808 <MX_TIM2_Init+0x100>)
 800174a:	2200      	movs	r2, #0
 800174c:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 2000-1;
 800174e:	4b2e      	ldr	r3, [pc, #184]	@ (8001808 <MX_TIM2_Init+0x100>)
 8001750:	f240 72cf 	movw	r2, #1999	@ 0x7cf
 8001754:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001756:	4b2c      	ldr	r3, [pc, #176]	@ (8001808 <MX_TIM2_Init+0x100>)
 8001758:	2200      	movs	r2, #0
 800175a:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800175c:	4b2a      	ldr	r3, [pc, #168]	@ (8001808 <MX_TIM2_Init+0x100>)
 800175e:	2200      	movs	r2, #0
 8001760:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8001762:	4829      	ldr	r0, [pc, #164]	@ (8001808 <MX_TIM2_Init+0x100>)
 8001764:	f003 f9e0 	bl	8004b28 <HAL_TIM_Base_Init>
 8001768:	4603      	mov	r3, r0
 800176a:	2b00      	cmp	r3, #0
 800176c:	d001      	beq.n	8001772 <MX_TIM2_Init+0x6a>
  {
    Error_Handler();
 800176e:	f000 f9d1 	bl	8001b14 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001772:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8001776:	62bb      	str	r3, [r7, #40]	@ 0x28
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8001778:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 800177c:	4619      	mov	r1, r3
 800177e:	4822      	ldr	r0, [pc, #136]	@ (8001808 <MX_TIM2_Init+0x100>)
 8001780:	f003 fdea 	bl	8005358 <HAL_TIM_ConfigClockSource>
 8001784:	4603      	mov	r3, r0
 8001786:	2b00      	cmp	r3, #0
 8001788:	d001      	beq.n	800178e <MX_TIM2_Init+0x86>
  {
    Error_Handler();
 800178a:	f000 f9c3 	bl	8001b14 <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 800178e:	481e      	ldr	r0, [pc, #120]	@ (8001808 <MX_TIM2_Init+0x100>)
 8001790:	f003 fa7e 	bl	8004c90 <HAL_TIM_PWM_Init>
 8001794:	4603      	mov	r3, r0
 8001796:	2b00      	cmp	r3, #0
 8001798:	d001      	beq.n	800179e <MX_TIM2_Init+0x96>
  {
    Error_Handler();
 800179a:	f000 f9bb 	bl	8001b14 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 800179e:	2300      	movs	r3, #0
 80017a0:	61fb      	str	r3, [r7, #28]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80017a2:	2300      	movs	r3, #0
 80017a4:	627b      	str	r3, [r7, #36]	@ 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 80017a6:	f107 031c 	add.w	r3, r7, #28
 80017aa:	4619      	mov	r1, r3
 80017ac:	4816      	ldr	r0, [pc, #88]	@ (8001808 <MX_TIM2_Init+0x100>)
 80017ae:	f004 fab9 	bl	8005d24 <HAL_TIMEx_MasterConfigSynchronization>
 80017b2:	4603      	mov	r3, r0
 80017b4:	2b00      	cmp	r3, #0
 80017b6:	d001      	beq.n	80017bc <MX_TIM2_Init+0xb4>
  {
    Error_Handler();
 80017b8:	f000 f9ac 	bl	8001b14 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 80017bc:	2360      	movs	r3, #96	@ 0x60
 80017be:	603b      	str	r3, [r7, #0]
  sConfigOC.Pulse = 0;
 80017c0:	2300      	movs	r3, #0
 80017c2:	607b      	str	r3, [r7, #4]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 80017c4:	2300      	movs	r3, #0
 80017c6:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 80017c8:	2300      	movs	r3, #0
 80017ca:	613b      	str	r3, [r7, #16]
  if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 80017cc:	463b      	mov	r3, r7
 80017ce:	2200      	movs	r2, #0
 80017d0:	4619      	mov	r1, r3
 80017d2:	480d      	ldr	r0, [pc, #52]	@ (8001808 <MX_TIM2_Init+0x100>)
 80017d4:	f003 fcac 	bl	8005130 <HAL_TIM_PWM_ConfigChannel>
 80017d8:	4603      	mov	r3, r0
 80017da:	2b00      	cmp	r3, #0
 80017dc:	d001      	beq.n	80017e2 <MX_TIM2_Init+0xda>
  {
    Error_Handler();
 80017de:	f000 f999 	bl	8001b14 <Error_Handler>
  }
  if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 80017e2:	463b      	mov	r3, r7
 80017e4:	2204      	movs	r2, #4
 80017e6:	4619      	mov	r1, r3
 80017e8:	4807      	ldr	r0, [pc, #28]	@ (8001808 <MX_TIM2_Init+0x100>)
 80017ea:	f003 fca1 	bl	8005130 <HAL_TIM_PWM_ConfigChannel>
 80017ee:	4603      	mov	r3, r0
 80017f0:	2b00      	cmp	r3, #0
 80017f2:	d001      	beq.n	80017f8 <MX_TIM2_Init+0xf0>
  {
    Error_Handler();
 80017f4:	f000 f98e 	bl	8001b14 <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */
  HAL_TIM_MspPostInit(&htim2);
 80017f8:	4803      	ldr	r0, [pc, #12]	@ (8001808 <MX_TIM2_Init+0x100>)
 80017fa:	f000 fa45 	bl	8001c88 <HAL_TIM_MspPostInit>

}
 80017fe:	bf00      	nop
 8001800:	3738      	adds	r7, #56	@ 0x38
 8001802:	46bd      	mov	sp, r7
 8001804:	bd80      	pop	{r7, pc}
 8001806:	bf00      	nop
 8001808:	20000174 	.word	0x20000174

0800180c <MX_TIM3_Init>:
  * @brief TIM3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM3_Init(void)
{
 800180c:	b580      	push	{r7, lr}
 800180e:	b088      	sub	sp, #32
 8001810:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM3_Init 0 */

  /* USER CODE END TIM3_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001812:	f107 0310 	add.w	r3, r7, #16
 8001816:	2200      	movs	r2, #0
 8001818:	601a      	str	r2, [r3, #0]
 800181a:	605a      	str	r2, [r3, #4]
 800181c:	609a      	str	r2, [r3, #8]
 800181e:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001820:	1d3b      	adds	r3, r7, #4
 8001822:	2200      	movs	r2, #0
 8001824:	601a      	str	r2, [r3, #0]
 8001826:	605a      	str	r2, [r3, #4]
 8001828:	609a      	str	r2, [r3, #8]

  /* USER CODE BEGIN TIM3_Init 1 */

  /* USER CODE END TIM3_Init 1 */
  htim3.Instance = TIM3;
 800182a:	4b1d      	ldr	r3, [pc, #116]	@ (80018a0 <MX_TIM3_Init+0x94>)
 800182c:	4a1d      	ldr	r2, [pc, #116]	@ (80018a4 <MX_TIM3_Init+0x98>)
 800182e:	601a      	str	r2, [r3, #0]
  htim3.Init.Prescaler = 8-1;
 8001830:	4b1b      	ldr	r3, [pc, #108]	@ (80018a0 <MX_TIM3_Init+0x94>)
 8001832:	2207      	movs	r2, #7
 8001834:	605a      	str	r2, [r3, #4]
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001836:	4b1a      	ldr	r3, [pc, #104]	@ (80018a0 <MX_TIM3_Init+0x94>)
 8001838:	2200      	movs	r2, #0
 800183a:	609a      	str	r2, [r3, #8]
  htim3.Init.Period = 1000-1;
 800183c:	4b18      	ldr	r3, [pc, #96]	@ (80018a0 <MX_TIM3_Init+0x94>)
 800183e:	f240 32e7 	movw	r2, #999	@ 0x3e7
 8001842:	60da      	str	r2, [r3, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001844:	4b16      	ldr	r3, [pc, #88]	@ (80018a0 <MX_TIM3_Init+0x94>)
 8001846:	2200      	movs	r2, #0
 8001848:	611a      	str	r2, [r3, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800184a:	4b15      	ldr	r3, [pc, #84]	@ (80018a0 <MX_TIM3_Init+0x94>)
 800184c:	2200      	movs	r2, #0
 800184e:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 8001850:	4813      	ldr	r0, [pc, #76]	@ (80018a0 <MX_TIM3_Init+0x94>)
 8001852:	f003 f969 	bl	8004b28 <HAL_TIM_Base_Init>
 8001856:	4603      	mov	r3, r0
 8001858:	2b00      	cmp	r3, #0
 800185a:	d001      	beq.n	8001860 <MX_TIM3_Init+0x54>
  {
    Error_Handler();
 800185c:	f000 f95a 	bl	8001b14 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001860:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8001864:	613b      	str	r3, [r7, #16]
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 8001866:	f107 0310 	add.w	r3, r7, #16
 800186a:	4619      	mov	r1, r3
 800186c:	480c      	ldr	r0, [pc, #48]	@ (80018a0 <MX_TIM3_Init+0x94>)
 800186e:	f003 fd73 	bl	8005358 <HAL_TIM_ConfigClockSource>
 8001872:	4603      	mov	r3, r0
 8001874:	2b00      	cmp	r3, #0
 8001876:	d001      	beq.n	800187c <MX_TIM3_Init+0x70>
  {
    Error_Handler();
 8001878:	f000 f94c 	bl	8001b14 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 800187c:	2300      	movs	r3, #0
 800187e:	607b      	str	r3, [r7, #4]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001880:	2300      	movs	r3, #0
 8001882:	60fb      	str	r3, [r7, #12]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 8001884:	1d3b      	adds	r3, r7, #4
 8001886:	4619      	mov	r1, r3
 8001888:	4805      	ldr	r0, [pc, #20]	@ (80018a0 <MX_TIM3_Init+0x94>)
 800188a:	f004 fa4b 	bl	8005d24 <HAL_TIMEx_MasterConfigSynchronization>
 800188e:	4603      	mov	r3, r0
 8001890:	2b00      	cmp	r3, #0
 8001892:	d001      	beq.n	8001898 <MX_TIM3_Init+0x8c>
  {
    Error_Handler();
 8001894:	f000 f93e 	bl	8001b14 <Error_Handler>
  }
  /* USER CODE BEGIN TIM3_Init 2 */

  /* USER CODE END TIM3_Init 2 */

}
 8001898:	bf00      	nop
 800189a:	3720      	adds	r7, #32
 800189c:	46bd      	mov	sp, r7
 800189e:	bd80      	pop	{r7, pc}
 80018a0:	200001c0 	.word	0x200001c0
 80018a4:	40000400 	.word	0x40000400

080018a8 <MX_USART1_UART_Init>:
  * @brief USART1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART1_UART_Init(void)
{
 80018a8:	b580      	push	{r7, lr}
 80018aa:	af00      	add	r7, sp, #0
  /* USER CODE END USART1_Init 0 */

  /* USER CODE BEGIN USART1_Init 1 */

  /* USER CODE END USART1_Init 1 */
  huart1.Instance = USART1;
 80018ac:	4b14      	ldr	r3, [pc, #80]	@ (8001900 <MX_USART1_UART_Init+0x58>)
 80018ae:	4a15      	ldr	r2, [pc, #84]	@ (8001904 <MX_USART1_UART_Init+0x5c>)
 80018b0:	601a      	str	r2, [r3, #0]
  huart1.Init.BaudRate = 9600;
 80018b2:	4b13      	ldr	r3, [pc, #76]	@ (8001900 <MX_USART1_UART_Init+0x58>)
 80018b4:	f44f 5216 	mov.w	r2, #9600	@ 0x2580
 80018b8:	605a      	str	r2, [r3, #4]
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
 80018ba:	4b11      	ldr	r3, [pc, #68]	@ (8001900 <MX_USART1_UART_Init+0x58>)
 80018bc:	2200      	movs	r2, #0
 80018be:	609a      	str	r2, [r3, #8]
  huart1.Init.StopBits = UART_STOPBITS_1;
 80018c0:	4b0f      	ldr	r3, [pc, #60]	@ (8001900 <MX_USART1_UART_Init+0x58>)
 80018c2:	2200      	movs	r2, #0
 80018c4:	60da      	str	r2, [r3, #12]
  huart1.Init.Parity = UART_PARITY_NONE;
 80018c6:	4b0e      	ldr	r3, [pc, #56]	@ (8001900 <MX_USART1_UART_Init+0x58>)
 80018c8:	2200      	movs	r2, #0
 80018ca:	611a      	str	r2, [r3, #16]
  huart1.Init.Mode = UART_MODE_TX_RX;
 80018cc:	4b0c      	ldr	r3, [pc, #48]	@ (8001900 <MX_USART1_UART_Init+0x58>)
 80018ce:	220c      	movs	r2, #12
 80018d0:	615a      	str	r2, [r3, #20]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80018d2:	4b0b      	ldr	r3, [pc, #44]	@ (8001900 <MX_USART1_UART_Init+0x58>)
 80018d4:	2200      	movs	r2, #0
 80018d6:	619a      	str	r2, [r3, #24]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 80018d8:	4b09      	ldr	r3, [pc, #36]	@ (8001900 <MX_USART1_UART_Init+0x58>)
 80018da:	2200      	movs	r2, #0
 80018dc:	61da      	str	r2, [r3, #28]
  huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 80018de:	4b08      	ldr	r3, [pc, #32]	@ (8001900 <MX_USART1_UART_Init+0x58>)
 80018e0:	2200      	movs	r2, #0
 80018e2:	621a      	str	r2, [r3, #32]
  huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 80018e4:	4b06      	ldr	r3, [pc, #24]	@ (8001900 <MX_USART1_UART_Init+0x58>)
 80018e6:	2200      	movs	r2, #0
 80018e8:	625a      	str	r2, [r3, #36]	@ 0x24
  if (HAL_UART_Init(&huart1) != HAL_OK)
 80018ea:	4805      	ldr	r0, [pc, #20]	@ (8001900 <MX_USART1_UART_Init+0x58>)
 80018ec:	f004 fb1e 	bl	8005f2c <HAL_UART_Init>
 80018f0:	4603      	mov	r3, r0
 80018f2:	2b00      	cmp	r3, #0
 80018f4:	d001      	beq.n	80018fa <MX_USART1_UART_Init+0x52>
  {
    Error_Handler();
 80018f6:	f000 f90d 	bl	8001b14 <Error_Handler>
  }
  /* USER CODE BEGIN USART1_Init 2 */

  /* USER CODE END USART1_Init 2 */

}
 80018fa:	bf00      	nop
 80018fc:	bd80      	pop	{r7, pc}
 80018fe:	bf00      	nop
 8001900:	2000020c 	.word	0x2000020c
 8001904:	40013800 	.word	0x40013800

08001908 <MX_USART2_UART_Init>:
  * @brief USART2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART2_UART_Init(void)
{
 8001908:	b580      	push	{r7, lr}
 800190a:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 800190c:	4b14      	ldr	r3, [pc, #80]	@ (8001960 <MX_USART2_UART_Init+0x58>)
 800190e:	4a15      	ldr	r2, [pc, #84]	@ (8001964 <MX_USART2_UART_Init+0x5c>)
 8001910:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 115200;
 8001912:	4b13      	ldr	r3, [pc, #76]	@ (8001960 <MX_USART2_UART_Init+0x58>)
 8001914:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 8001918:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 800191a:	4b11      	ldr	r3, [pc, #68]	@ (8001960 <MX_USART2_UART_Init+0x58>)
 800191c:	2200      	movs	r2, #0
 800191e:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 8001920:	4b0f      	ldr	r3, [pc, #60]	@ (8001960 <MX_USART2_UART_Init+0x58>)
 8001922:	2200      	movs	r2, #0
 8001924:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 8001926:	4b0e      	ldr	r3, [pc, #56]	@ (8001960 <MX_USART2_UART_Init+0x58>)
 8001928:	2200      	movs	r2, #0
 800192a:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 800192c:	4b0c      	ldr	r3, [pc, #48]	@ (8001960 <MX_USART2_UART_Init+0x58>)
 800192e:	220c      	movs	r2, #12
 8001930:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8001932:	4b0b      	ldr	r3, [pc, #44]	@ (8001960 <MX_USART2_UART_Init+0x58>)
 8001934:	2200      	movs	r2, #0
 8001936:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 8001938:	4b09      	ldr	r3, [pc, #36]	@ (8001960 <MX_USART2_UART_Init+0x58>)
 800193a:	2200      	movs	r2, #0
 800193c:	61da      	str	r2, [r3, #28]
  huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 800193e:	4b08      	ldr	r3, [pc, #32]	@ (8001960 <MX_USART2_UART_Init+0x58>)
 8001940:	2200      	movs	r2, #0
 8001942:	621a      	str	r2, [r3, #32]
  huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 8001944:	4b06      	ldr	r3, [pc, #24]	@ (8001960 <MX_USART2_UART_Init+0x58>)
 8001946:	2200      	movs	r2, #0
 8001948:	625a      	str	r2, [r3, #36]	@ 0x24
  if (HAL_UART_Init(&huart2) != HAL_OK)
 800194a:	4805      	ldr	r0, [pc, #20]	@ (8001960 <MX_USART2_UART_Init+0x58>)
 800194c:	f004 faee 	bl	8005f2c <HAL_UART_Init>
 8001950:	4603      	mov	r3, r0
 8001952:	2b00      	cmp	r3, #0
 8001954:	d001      	beq.n	800195a <MX_USART2_UART_Init+0x52>
  {
    Error_Handler();
 8001956:	f000 f8dd 	bl	8001b14 <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 800195a:	bf00      	nop
 800195c:	bd80      	pop	{r7, pc}
 800195e:	bf00      	nop
 8001960:	20000294 	.word	0x20000294
 8001964:	40004400 	.word	0x40004400

08001968 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8001968:	b580      	push	{r7, lr}
 800196a:	b088      	sub	sp, #32
 800196c:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800196e:	f107 030c 	add.w	r3, r7, #12
 8001972:	2200      	movs	r2, #0
 8001974:	601a      	str	r2, [r3, #0]
 8001976:	605a      	str	r2, [r3, #4]
 8001978:	609a      	str	r2, [r3, #8]
 800197a:	60da      	str	r2, [r3, #12]
 800197c:	611a      	str	r2, [r3, #16]
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOF_CLK_ENABLE();
 800197e:	4b1d      	ldr	r3, [pc, #116]	@ (80019f4 <MX_GPIO_Init+0x8c>)
 8001980:	695b      	ldr	r3, [r3, #20]
 8001982:	4a1c      	ldr	r2, [pc, #112]	@ (80019f4 <MX_GPIO_Init+0x8c>)
 8001984:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 8001988:	6153      	str	r3, [r2, #20]
 800198a:	4b1a      	ldr	r3, [pc, #104]	@ (80019f4 <MX_GPIO_Init+0x8c>)
 800198c:	695b      	ldr	r3, [r3, #20]
 800198e:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8001992:	60bb      	str	r3, [r7, #8]
 8001994:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8001996:	4b17      	ldr	r3, [pc, #92]	@ (80019f4 <MX_GPIO_Init+0x8c>)
 8001998:	695b      	ldr	r3, [r3, #20]
 800199a:	4a16      	ldr	r2, [pc, #88]	@ (80019f4 <MX_GPIO_Init+0x8c>)
 800199c:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 80019a0:	6153      	str	r3, [r2, #20]
 80019a2:	4b14      	ldr	r3, [pc, #80]	@ (80019f4 <MX_GPIO_Init+0x8c>)
 80019a4:	695b      	ldr	r3, [r3, #20]
 80019a6:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80019aa:	607b      	str	r3, [r7, #4]
 80019ac:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80019ae:	4b11      	ldr	r3, [pc, #68]	@ (80019f4 <MX_GPIO_Init+0x8c>)
 80019b0:	695b      	ldr	r3, [r3, #20]
 80019b2:	4a10      	ldr	r2, [pc, #64]	@ (80019f4 <MX_GPIO_Init+0x8c>)
 80019b4:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 80019b8:	6153      	str	r3, [r2, #20]
 80019ba:	4b0e      	ldr	r3, [pc, #56]	@ (80019f4 <MX_GPIO_Init+0x8c>)
 80019bc:	695b      	ldr	r3, [r3, #20]
 80019be:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 80019c2:	603b      	str	r3, [r7, #0]
 80019c4:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_3, GPIO_PIN_RESET);
 80019c6:	2200      	movs	r2, #0
 80019c8:	2108      	movs	r1, #8
 80019ca:	480b      	ldr	r0, [pc, #44]	@ (80019f8 <MX_GPIO_Init+0x90>)
 80019cc:	f000 feec 	bl	80027a8 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : PB3 */
  GPIO_InitStruct.Pin = GPIO_PIN_3;
 80019d0:	2308      	movs	r3, #8
 80019d2:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80019d4:	2301      	movs	r3, #1
 80019d6:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80019d8:	2300      	movs	r3, #0
 80019da:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80019dc:	2300      	movs	r3, #0
 80019de:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80019e0:	f107 030c 	add.w	r3, r7, #12
 80019e4:	4619      	mov	r1, r3
 80019e6:	4804      	ldr	r0, [pc, #16]	@ (80019f8 <MX_GPIO_Init+0x90>)
 80019e8:	f000 fd6c 	bl	80024c4 <HAL_GPIO_Init>

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 80019ec:	bf00      	nop
 80019ee:	3720      	adds	r7, #32
 80019f0:	46bd      	mov	sp, r7
 80019f2:	bd80      	pop	{r7, pc}
 80019f4:	40021000 	.word	0x40021000
 80019f8:	48000400 	.word	0x48000400

080019fc <printData>:
/* USER CODE BEGIN 4 */




void printData(char* data) {
 80019fc:	b580      	push	{r7, lr}
 80019fe:	b082      	sub	sp, #8
 8001a00:	af00      	add	r7, sp, #0
 8001a02:	6078      	str	r0, [r7, #4]
  HAL_UART_Transmit(&huart2, (uint8_t*)data, strlen(data), 100);
 8001a04:	6878      	ldr	r0, [r7, #4]
 8001a06:	f7fe fbe3 	bl	80001d0 <strlen>
 8001a0a:	4603      	mov	r3, r0
 8001a0c:	b29a      	uxth	r2, r3
 8001a0e:	2364      	movs	r3, #100	@ 0x64
 8001a10:	6879      	ldr	r1, [r7, #4]
 8001a12:	4803      	ldr	r0, [pc, #12]	@ (8001a20 <printData+0x24>)
 8001a14:	f004 fad8 	bl	8005fc8 <HAL_UART_Transmit>
}
 8001a18:	bf00      	nop
 8001a1a:	3708      	adds	r7, #8
 8001a1c:	46bd      	mov	sp, r7
 8001a1e:	bd80      	pop	{r7, pc}
 8001a20:	20000294 	.word	0x20000294

08001a24 <_write>:

void sendData(char* data) {
  HAL_UART_Transmit(&huart1, (uint8_t*)data, strlen(data), 100);
}

int _write(int file, char *data, int len) {
 8001a24:	b580      	push	{r7, lr}
 8001a26:	b084      	sub	sp, #16
 8001a28:	af00      	add	r7, sp, #0
 8001a2a:	60f8      	str	r0, [r7, #12]
 8001a2c:	60b9      	str	r1, [r7, #8]
 8001a2e:	607a      	str	r2, [r7, #4]
    HAL_UART_Transmit(&huart2, (uint8_t*)data, len, HAL_MAX_DELAY);
 8001a30:	687b      	ldr	r3, [r7, #4]
 8001a32:	b29a      	uxth	r2, r3
 8001a34:	f04f 33ff 	mov.w	r3, #4294967295
 8001a38:	68b9      	ldr	r1, [r7, #8]
 8001a3a:	4804      	ldr	r0, [pc, #16]	@ (8001a4c <_write+0x28>)
 8001a3c:	f004 fac4 	bl	8005fc8 <HAL_UART_Transmit>
    return len;
 8001a40:	687b      	ldr	r3, [r7, #4]
}
 8001a42:	4618      	mov	r0, r3
 8001a44:	3710      	adds	r7, #16
 8001a46:	46bd      	mov	sp, r7
 8001a48:	bd80      	pop	{r7, pc}
 8001a4a:	bf00      	nop
 8001a4c:	20000294 	.word	0x20000294

08001a50 <HAL_UART_RxCpltCallback>:


// Función que se llama cuando un byte es recibido
void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart) {
 8001a50:	b580      	push	{r7, lr}
 8001a52:	b084      	sub	sp, #16
 8001a54:	af00      	add	r7, sp, #0
 8001a56:	6078      	str	r0, [r7, #4]
	//Control_Update();// por probar
    if (huart->Instance == USART1) {
 8001a58:	687b      	ldr	r3, [r7, #4]
 8001a5a:	681b      	ldr	r3, [r3, #0]
 8001a5c:	4a27      	ldr	r2, [pc, #156]	@ (8001afc <HAL_UART_RxCpltCallback+0xac>)
 8001a5e:	4293      	cmp	r3, r2
 8001a60:	d148      	bne.n	8001af4 <HAL_UART_RxCpltCallback+0xa4>
        // Almacenar el byte recibido en el buffer circular
        rx_buffer[write_index++] = temp_byte;
 8001a62:	4b27      	ldr	r3, [pc, #156]	@ (8001b00 <HAL_UART_RxCpltCallback+0xb0>)
 8001a64:	881b      	ldrh	r3, [r3, #0]
 8001a66:	b29b      	uxth	r3, r3
 8001a68:	1c5a      	adds	r2, r3, #1
 8001a6a:	b291      	uxth	r1, r2
 8001a6c:	4a24      	ldr	r2, [pc, #144]	@ (8001b00 <HAL_UART_RxCpltCallback+0xb0>)
 8001a6e:	8011      	strh	r1, [r2, #0]
 8001a70:	461a      	mov	r2, r3
 8001a72:	4b24      	ldr	r3, [pc, #144]	@ (8001b04 <HAL_UART_RxCpltCallback+0xb4>)
 8001a74:	7819      	ldrb	r1, [r3, #0]
 8001a76:	4b24      	ldr	r3, [pc, #144]	@ (8001b08 <HAL_UART_RxCpltCallback+0xb8>)
 8001a78:	5499      	strb	r1, [r3, r2]

        // Asegurar que el índice no se desborde
        if (write_index >= RX_BUFFER_SIZE) {
 8001a7a:	4b21      	ldr	r3, [pc, #132]	@ (8001b00 <HAL_UART_RxCpltCallback+0xb0>)
 8001a7c:	881b      	ldrh	r3, [r3, #0]
 8001a7e:	b29b      	uxth	r3, r3
 8001a80:	2b7f      	cmp	r3, #127	@ 0x7f
 8001a82:	d902      	bls.n	8001a8a <HAL_UART_RxCpltCallback+0x3a>
            write_index = 0;
 8001a84:	4b1e      	ldr	r3, [pc, #120]	@ (8001b00 <HAL_UART_RxCpltCallback+0xb0>)
 8001a86:	2200      	movs	r2, #0
 8001a88:	801a      	strh	r2, [r3, #0]
        }

        // Si el byte recibido es un delimitador (por ejemplo, '\n'), procesamos el mensaje
        if (temp_byte == '\n') {
 8001a8a:	4b1e      	ldr	r3, [pc, #120]	@ (8001b04 <HAL_UART_RxCpltCallback+0xb4>)
 8001a8c:	781b      	ldrb	r3, [r3, #0]
 8001a8e:	2b0a      	cmp	r3, #10
 8001a90:	d12b      	bne.n	8001aea <HAL_UART_RxCpltCallback+0x9a>
            // Procesar el buffer hasta la posición de lectura
            uint16_t length = (write_index > read_index) ? (write_index - read_index) : (RX_BUFFER_SIZE - read_index + write_index);
 8001a92:	4b1b      	ldr	r3, [pc, #108]	@ (8001b00 <HAL_UART_RxCpltCallback+0xb0>)
 8001a94:	881b      	ldrh	r3, [r3, #0]
 8001a96:	b29a      	uxth	r2, r3
 8001a98:	4b1c      	ldr	r3, [pc, #112]	@ (8001b0c <HAL_UART_RxCpltCallback+0xbc>)
 8001a9a:	881b      	ldrh	r3, [r3, #0]
 8001a9c:	b29b      	uxth	r3, r3
 8001a9e:	429a      	cmp	r2, r3
 8001aa0:	d908      	bls.n	8001ab4 <HAL_UART_RxCpltCallback+0x64>
 8001aa2:	4b17      	ldr	r3, [pc, #92]	@ (8001b00 <HAL_UART_RxCpltCallback+0xb0>)
 8001aa4:	881b      	ldrh	r3, [r3, #0]
 8001aa6:	b29a      	uxth	r2, r3
 8001aa8:	4b18      	ldr	r3, [pc, #96]	@ (8001b0c <HAL_UART_RxCpltCallback+0xbc>)
 8001aaa:	881b      	ldrh	r3, [r3, #0]
 8001aac:	b29b      	uxth	r3, r3
 8001aae:	1ad3      	subs	r3, r2, r3
 8001ab0:	b29b      	uxth	r3, r3
 8001ab2:	e009      	b.n	8001ac8 <HAL_UART_RxCpltCallback+0x78>
 8001ab4:	4b12      	ldr	r3, [pc, #72]	@ (8001b00 <HAL_UART_RxCpltCallback+0xb0>)
 8001ab6:	881b      	ldrh	r3, [r3, #0]
 8001ab8:	b29a      	uxth	r2, r3
 8001aba:	4b14      	ldr	r3, [pc, #80]	@ (8001b0c <HAL_UART_RxCpltCallback+0xbc>)
 8001abc:	881b      	ldrh	r3, [r3, #0]
 8001abe:	b29b      	uxth	r3, r3
 8001ac0:	1ad3      	subs	r3, r2, r3
 8001ac2:	b29b      	uxth	r3, r3
 8001ac4:	3380      	adds	r3, #128	@ 0x80
 8001ac6:	b29b      	uxth	r3, r3
 8001ac8:	81fb      	strh	r3, [r7, #14]
            receiveControlCommand(&rx_buffer[read_index], length);
 8001aca:	4b10      	ldr	r3, [pc, #64]	@ (8001b0c <HAL_UART_RxCpltCallback+0xbc>)
 8001acc:	881b      	ldrh	r3, [r3, #0]
 8001ace:	b29b      	uxth	r3, r3
 8001ad0:	461a      	mov	r2, r3
 8001ad2:	4b0d      	ldr	r3, [pc, #52]	@ (8001b08 <HAL_UART_RxCpltCallback+0xb8>)
 8001ad4:	4413      	add	r3, r2
 8001ad6:	89fa      	ldrh	r2, [r7, #14]
 8001ad8:	4611      	mov	r1, r2
 8001ada:	4618      	mov	r0, r3
 8001adc:	f7fe ffee 	bl	8000abc <receiveControlCommand>

            // Avanzar el índice de lectura
            read_index = write_index;
 8001ae0:	4b07      	ldr	r3, [pc, #28]	@ (8001b00 <HAL_UART_RxCpltCallback+0xb0>)
 8001ae2:	881b      	ldrh	r3, [r3, #0]
 8001ae4:	b29a      	uxth	r2, r3
 8001ae6:	4b09      	ldr	r3, [pc, #36]	@ (8001b0c <HAL_UART_RxCpltCallback+0xbc>)
 8001ae8:	801a      	strh	r2, [r3, #0]
        }

        // Continuar recibiendo el siguiente byte
        HAL_UART_Receive_IT(&huart1, &temp_byte, 1);
 8001aea:	2201      	movs	r2, #1
 8001aec:	4905      	ldr	r1, [pc, #20]	@ (8001b04 <HAL_UART_RxCpltCallback+0xb4>)
 8001aee:	4808      	ldr	r0, [pc, #32]	@ (8001b10 <HAL_UART_RxCpltCallback+0xc0>)
 8001af0:	f004 faf3 	bl	80060da <HAL_UART_Receive_IT>
    }
}
 8001af4:	bf00      	nop
 8001af6:	3710      	adds	r7, #16
 8001af8:	46bd      	mov	sp, r7
 8001afa:	bd80      	pop	{r7, pc}
 8001afc:	40013800 	.word	0x40013800
 8001b00:	2000039e 	.word	0x2000039e
 8001b04:	2000039c 	.word	0x2000039c
 8001b08:	2000031c 	.word	0x2000031c
 8001b0c:	200003a0 	.word	0x200003a0
 8001b10:	2000020c 	.word	0x2000020c

08001b14 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8001b14:	b480      	push	{r7}
 8001b16:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8001b18:	b672      	cpsid	i
}
 8001b1a:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8001b1c:	bf00      	nop
 8001b1e:	e7fd      	b.n	8001b1c <Error_Handler+0x8>

08001b20 <HAL_MspInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);
                                        /**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001b20:	b480      	push	{r7}
 8001b22:	b083      	sub	sp, #12
 8001b24:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001b26:	4b0f      	ldr	r3, [pc, #60]	@ (8001b64 <HAL_MspInit+0x44>)
 8001b28:	699b      	ldr	r3, [r3, #24]
 8001b2a:	4a0e      	ldr	r2, [pc, #56]	@ (8001b64 <HAL_MspInit+0x44>)
 8001b2c:	f043 0301 	orr.w	r3, r3, #1
 8001b30:	6193      	str	r3, [r2, #24]
 8001b32:	4b0c      	ldr	r3, [pc, #48]	@ (8001b64 <HAL_MspInit+0x44>)
 8001b34:	699b      	ldr	r3, [r3, #24]
 8001b36:	f003 0301 	and.w	r3, r3, #1
 8001b3a:	607b      	str	r3, [r7, #4]
 8001b3c:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001b3e:	4b09      	ldr	r3, [pc, #36]	@ (8001b64 <HAL_MspInit+0x44>)
 8001b40:	69db      	ldr	r3, [r3, #28]
 8001b42:	4a08      	ldr	r2, [pc, #32]	@ (8001b64 <HAL_MspInit+0x44>)
 8001b44:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8001b48:	61d3      	str	r3, [r2, #28]
 8001b4a:	4b06      	ldr	r3, [pc, #24]	@ (8001b64 <HAL_MspInit+0x44>)
 8001b4c:	69db      	ldr	r3, [r3, #28]
 8001b4e:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8001b52:	603b      	str	r3, [r7, #0]
 8001b54:	683b      	ldr	r3, [r7, #0]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001b56:	bf00      	nop
 8001b58:	370c      	adds	r7, #12
 8001b5a:	46bd      	mov	sp, r7
 8001b5c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b60:	4770      	bx	lr
 8001b62:	bf00      	nop
 8001b64:	40021000 	.word	0x40021000

08001b68 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8001b68:	b580      	push	{r7, lr}
 8001b6a:	b08a      	sub	sp, #40	@ 0x28
 8001b6c:	af00      	add	r7, sp, #0
 8001b6e:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001b70:	f107 0314 	add.w	r3, r7, #20
 8001b74:	2200      	movs	r2, #0
 8001b76:	601a      	str	r2, [r3, #0]
 8001b78:	605a      	str	r2, [r3, #4]
 8001b7a:	609a      	str	r2, [r3, #8]
 8001b7c:	60da      	str	r2, [r3, #12]
 8001b7e:	611a      	str	r2, [r3, #16]
  if(hi2c->Instance==I2C1)
 8001b80:	687b      	ldr	r3, [r7, #4]
 8001b82:	681b      	ldr	r3, [r3, #0]
 8001b84:	4a17      	ldr	r2, [pc, #92]	@ (8001be4 <HAL_I2C_MspInit+0x7c>)
 8001b86:	4293      	cmp	r3, r2
 8001b88:	d127      	bne.n	8001bda <HAL_I2C_MspInit+0x72>
  {
  /* USER CODE BEGIN I2C1_MspInit 0 */

  /* USER CODE END I2C1_MspInit 0 */

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001b8a:	4b17      	ldr	r3, [pc, #92]	@ (8001be8 <HAL_I2C_MspInit+0x80>)
 8001b8c:	695b      	ldr	r3, [r3, #20]
 8001b8e:	4a16      	ldr	r2, [pc, #88]	@ (8001be8 <HAL_I2C_MspInit+0x80>)
 8001b90:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8001b94:	6153      	str	r3, [r2, #20]
 8001b96:	4b14      	ldr	r3, [pc, #80]	@ (8001be8 <HAL_I2C_MspInit+0x80>)
 8001b98:	695b      	ldr	r3, [r3, #20]
 8001b9a:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 8001b9e:	613b      	str	r3, [r7, #16]
 8001ba0:	693b      	ldr	r3, [r7, #16]
    /**I2C1 GPIO Configuration
    PB6     ------> I2C1_SCL
    PB7     ------> I2C1_SDA
    */
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8001ba2:	23c0      	movs	r3, #192	@ 0xc0
 8001ba4:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001ba6:	2312      	movs	r3, #18
 8001ba8:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001baa:	2300      	movs	r3, #0
 8001bac:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001bae:	2303      	movs	r3, #3
 8001bb0:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 8001bb2:	2304      	movs	r3, #4
 8001bb4:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001bb6:	f107 0314 	add.w	r3, r7, #20
 8001bba:	4619      	mov	r1, r3
 8001bbc:	480b      	ldr	r0, [pc, #44]	@ (8001bec <HAL_I2C_MspInit+0x84>)
 8001bbe:	f000 fc81 	bl	80024c4 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C1_CLK_ENABLE();
 8001bc2:	4b09      	ldr	r3, [pc, #36]	@ (8001be8 <HAL_I2C_MspInit+0x80>)
 8001bc4:	69db      	ldr	r3, [r3, #28]
 8001bc6:	4a08      	ldr	r2, [pc, #32]	@ (8001be8 <HAL_I2C_MspInit+0x80>)
 8001bc8:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 8001bcc:	61d3      	str	r3, [r2, #28]
 8001bce:	4b06      	ldr	r3, [pc, #24]	@ (8001be8 <HAL_I2C_MspInit+0x80>)
 8001bd0:	69db      	ldr	r3, [r3, #28]
 8001bd2:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8001bd6:	60fb      	str	r3, [r7, #12]
 8001bd8:	68fb      	ldr	r3, [r7, #12]

  /* USER CODE END I2C1_MspInit 1 */

  }

}
 8001bda:	bf00      	nop
 8001bdc:	3728      	adds	r7, #40	@ 0x28
 8001bde:	46bd      	mov	sp, r7
 8001be0:	bd80      	pop	{r7, pc}
 8001be2:	bf00      	nop
 8001be4:	40005400 	.word	0x40005400
 8001be8:	40021000 	.word	0x40021000
 8001bec:	48000400 	.word	0x48000400

08001bf0 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 8001bf0:	b580      	push	{r7, lr}
 8001bf2:	b086      	sub	sp, #24
 8001bf4:	af00      	add	r7, sp, #0
 8001bf6:	6078      	str	r0, [r7, #4]
  if(htim_base->Instance==TIM1)
 8001bf8:	687b      	ldr	r3, [r7, #4]
 8001bfa:	681b      	ldr	r3, [r3, #0]
 8001bfc:	4a1f      	ldr	r2, [pc, #124]	@ (8001c7c <HAL_TIM_Base_MspInit+0x8c>)
 8001bfe:	4293      	cmp	r3, r2
 8001c00:	d10c      	bne.n	8001c1c <HAL_TIM_Base_MspInit+0x2c>
  {
  /* USER CODE BEGIN TIM1_MspInit 0 */

  /* USER CODE END TIM1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM1_CLK_ENABLE();
 8001c02:	4b1f      	ldr	r3, [pc, #124]	@ (8001c80 <HAL_TIM_Base_MspInit+0x90>)
 8001c04:	699b      	ldr	r3, [r3, #24]
 8001c06:	4a1e      	ldr	r2, [pc, #120]	@ (8001c80 <HAL_TIM_Base_MspInit+0x90>)
 8001c08:	f443 6300 	orr.w	r3, r3, #2048	@ 0x800
 8001c0c:	6193      	str	r3, [r2, #24]
 8001c0e:	4b1c      	ldr	r3, [pc, #112]	@ (8001c80 <HAL_TIM_Base_MspInit+0x90>)
 8001c10:	699b      	ldr	r3, [r3, #24]
 8001c12:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 8001c16:	617b      	str	r3, [r7, #20]
 8001c18:	697b      	ldr	r3, [r7, #20]
  /* USER CODE BEGIN TIM3_MspInit 1 */

  /* USER CODE END TIM3_MspInit 1 */
  }

}
 8001c1a:	e02a      	b.n	8001c72 <HAL_TIM_Base_MspInit+0x82>
  else if(htim_base->Instance==TIM2)
 8001c1c:	687b      	ldr	r3, [r7, #4]
 8001c1e:	681b      	ldr	r3, [r3, #0]
 8001c20:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8001c24:	d10c      	bne.n	8001c40 <HAL_TIM_Base_MspInit+0x50>
    __HAL_RCC_TIM2_CLK_ENABLE();
 8001c26:	4b16      	ldr	r3, [pc, #88]	@ (8001c80 <HAL_TIM_Base_MspInit+0x90>)
 8001c28:	69db      	ldr	r3, [r3, #28]
 8001c2a:	4a15      	ldr	r2, [pc, #84]	@ (8001c80 <HAL_TIM_Base_MspInit+0x90>)
 8001c2c:	f043 0301 	orr.w	r3, r3, #1
 8001c30:	61d3      	str	r3, [r2, #28]
 8001c32:	4b13      	ldr	r3, [pc, #76]	@ (8001c80 <HAL_TIM_Base_MspInit+0x90>)
 8001c34:	69db      	ldr	r3, [r3, #28]
 8001c36:	f003 0301 	and.w	r3, r3, #1
 8001c3a:	613b      	str	r3, [r7, #16]
 8001c3c:	693b      	ldr	r3, [r7, #16]
}
 8001c3e:	e018      	b.n	8001c72 <HAL_TIM_Base_MspInit+0x82>
  else if(htim_base->Instance==TIM3)
 8001c40:	687b      	ldr	r3, [r7, #4]
 8001c42:	681b      	ldr	r3, [r3, #0]
 8001c44:	4a0f      	ldr	r2, [pc, #60]	@ (8001c84 <HAL_TIM_Base_MspInit+0x94>)
 8001c46:	4293      	cmp	r3, r2
 8001c48:	d113      	bne.n	8001c72 <HAL_TIM_Base_MspInit+0x82>
    __HAL_RCC_TIM3_CLK_ENABLE();
 8001c4a:	4b0d      	ldr	r3, [pc, #52]	@ (8001c80 <HAL_TIM_Base_MspInit+0x90>)
 8001c4c:	69db      	ldr	r3, [r3, #28]
 8001c4e:	4a0c      	ldr	r2, [pc, #48]	@ (8001c80 <HAL_TIM_Base_MspInit+0x90>)
 8001c50:	f043 0302 	orr.w	r3, r3, #2
 8001c54:	61d3      	str	r3, [r2, #28]
 8001c56:	4b0a      	ldr	r3, [pc, #40]	@ (8001c80 <HAL_TIM_Base_MspInit+0x90>)
 8001c58:	69db      	ldr	r3, [r3, #28]
 8001c5a:	f003 0302 	and.w	r3, r3, #2
 8001c5e:	60fb      	str	r3, [r7, #12]
 8001c60:	68fb      	ldr	r3, [r7, #12]
    HAL_NVIC_SetPriority(TIM3_IRQn, 0, 0);
 8001c62:	2200      	movs	r2, #0
 8001c64:	2100      	movs	r1, #0
 8001c66:	201d      	movs	r0, #29
 8001c68:	f000 fb79 	bl	800235e <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM3_IRQn);
 8001c6c:	201d      	movs	r0, #29
 8001c6e:	f000 fb92 	bl	8002396 <HAL_NVIC_EnableIRQ>
}
 8001c72:	bf00      	nop
 8001c74:	3718      	adds	r7, #24
 8001c76:	46bd      	mov	sp, r7
 8001c78:	bd80      	pop	{r7, pc}
 8001c7a:	bf00      	nop
 8001c7c:	40012c00 	.word	0x40012c00
 8001c80:	40021000 	.word	0x40021000
 8001c84:	40000400 	.word	0x40000400

08001c88 <HAL_TIM_MspPostInit>:

void HAL_TIM_MspPostInit(TIM_HandleTypeDef* htim)
{
 8001c88:	b580      	push	{r7, lr}
 8001c8a:	b08a      	sub	sp, #40	@ 0x28
 8001c8c:	af00      	add	r7, sp, #0
 8001c8e:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001c90:	f107 0314 	add.w	r3, r7, #20
 8001c94:	2200      	movs	r2, #0
 8001c96:	601a      	str	r2, [r3, #0]
 8001c98:	605a      	str	r2, [r3, #4]
 8001c9a:	609a      	str	r2, [r3, #8]
 8001c9c:	60da      	str	r2, [r3, #12]
 8001c9e:	611a      	str	r2, [r3, #16]
  if(htim->Instance==TIM1)
 8001ca0:	687b      	ldr	r3, [r7, #4]
 8001ca2:	681b      	ldr	r3, [r3, #0]
 8001ca4:	4a2c      	ldr	r2, [pc, #176]	@ (8001d58 <HAL_TIM_MspPostInit+0xd0>)
 8001ca6:	4293      	cmp	r3, r2
 8001ca8:	d130      	bne.n	8001d0c <HAL_TIM_MspPostInit+0x84>
  {
  /* USER CODE BEGIN TIM1_MspPostInit 0 */

  /* USER CODE END TIM1_MspPostInit 0 */
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001caa:	4b2c      	ldr	r3, [pc, #176]	@ (8001d5c <HAL_TIM_MspPostInit+0xd4>)
 8001cac:	695b      	ldr	r3, [r3, #20]
 8001cae:	4a2b      	ldr	r2, [pc, #172]	@ (8001d5c <HAL_TIM_MspPostInit+0xd4>)
 8001cb0:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8001cb4:	6153      	str	r3, [r2, #20]
 8001cb6:	4b29      	ldr	r3, [pc, #164]	@ (8001d5c <HAL_TIM_MspPostInit+0xd4>)
 8001cb8:	695b      	ldr	r3, [r3, #20]
 8001cba:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8001cbe:	613b      	str	r3, [r7, #16]
 8001cc0:	693b      	ldr	r3, [r7, #16]
    /**TIM1 GPIO Configuration
    PA8     ------> TIM1_CH1
    PA11     ------> TIM1_CH4
    */
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8001cc2:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8001cc6:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001cc8:	2302      	movs	r3, #2
 8001cca:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001ccc:	2300      	movs	r3, #0
 8001cce:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001cd0:	2300      	movs	r3, #0
 8001cd2:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF6_TIM1;
 8001cd4:	2306      	movs	r3, #6
 8001cd6:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001cd8:	f107 0314 	add.w	r3, r7, #20
 8001cdc:	4619      	mov	r1, r3
 8001cde:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8001ce2:	f000 fbef 	bl	80024c4 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_11;
 8001ce6:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 8001cea:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001cec:	2302      	movs	r3, #2
 8001cee:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001cf0:	2300      	movs	r3, #0
 8001cf2:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001cf4:	2300      	movs	r3, #0
 8001cf6:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF11_TIM1;
 8001cf8:	230b      	movs	r3, #11
 8001cfa:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001cfc:	f107 0314 	add.w	r3, r7, #20
 8001d00:	4619      	mov	r1, r3
 8001d02:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8001d06:	f000 fbdd 	bl	80024c4 <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM2_MspPostInit 1 */

  /* USER CODE END TIM2_MspPostInit 1 */
  }

}
 8001d0a:	e021      	b.n	8001d50 <HAL_TIM_MspPostInit+0xc8>
  else if(htim->Instance==TIM2)
 8001d0c:	687b      	ldr	r3, [r7, #4]
 8001d0e:	681b      	ldr	r3, [r3, #0]
 8001d10:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8001d14:	d11c      	bne.n	8001d50 <HAL_TIM_MspPostInit+0xc8>
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001d16:	4b11      	ldr	r3, [pc, #68]	@ (8001d5c <HAL_TIM_MspPostInit+0xd4>)
 8001d18:	695b      	ldr	r3, [r3, #20]
 8001d1a:	4a10      	ldr	r2, [pc, #64]	@ (8001d5c <HAL_TIM_MspPostInit+0xd4>)
 8001d1c:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8001d20:	6153      	str	r3, [r2, #20]
 8001d22:	4b0e      	ldr	r3, [pc, #56]	@ (8001d5c <HAL_TIM_MspPostInit+0xd4>)
 8001d24:	695b      	ldr	r3, [r3, #20]
 8001d26:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8001d2a:	60fb      	str	r3, [r7, #12]
 8001d2c:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8001d2e:	2303      	movs	r3, #3
 8001d30:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d32:	2302      	movs	r3, #2
 8001d34:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001d36:	2300      	movs	r3, #0
 8001d38:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001d3a:	2300      	movs	r3, #0
 8001d3c:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF1_TIM2;
 8001d3e:	2301      	movs	r3, #1
 8001d40:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001d42:	f107 0314 	add.w	r3, r7, #20
 8001d46:	4619      	mov	r1, r3
 8001d48:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8001d4c:	f000 fbba 	bl	80024c4 <HAL_GPIO_Init>
}
 8001d50:	bf00      	nop
 8001d52:	3728      	adds	r7, #40	@ 0x28
 8001d54:	46bd      	mov	sp, r7
 8001d56:	bd80      	pop	{r7, pc}
 8001d58:	40012c00 	.word	0x40012c00
 8001d5c:	40021000 	.word	0x40021000

08001d60 <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 8001d60:	b580      	push	{r7, lr}
 8001d62:	b08c      	sub	sp, #48	@ 0x30
 8001d64:	af00      	add	r7, sp, #0
 8001d66:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001d68:	f107 031c 	add.w	r3, r7, #28
 8001d6c:	2200      	movs	r2, #0
 8001d6e:	601a      	str	r2, [r3, #0]
 8001d70:	605a      	str	r2, [r3, #4]
 8001d72:	609a      	str	r2, [r3, #8]
 8001d74:	60da      	str	r2, [r3, #12]
 8001d76:	611a      	str	r2, [r3, #16]
  if(huart->Instance==USART1)
 8001d78:	687b      	ldr	r3, [r7, #4]
 8001d7a:	681b      	ldr	r3, [r3, #0]
 8001d7c:	4a37      	ldr	r2, [pc, #220]	@ (8001e5c <HAL_UART_MspInit+0xfc>)
 8001d7e:	4293      	cmp	r3, r2
 8001d80:	d132      	bne.n	8001de8 <HAL_UART_MspInit+0x88>
  {
  /* USER CODE BEGIN USART1_MspInit 0 */

  /* USER CODE END USART1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_USART1_CLK_ENABLE();
 8001d82:	4b37      	ldr	r3, [pc, #220]	@ (8001e60 <HAL_UART_MspInit+0x100>)
 8001d84:	699b      	ldr	r3, [r3, #24]
 8001d86:	4a36      	ldr	r2, [pc, #216]	@ (8001e60 <HAL_UART_MspInit+0x100>)
 8001d88:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8001d8c:	6193      	str	r3, [r2, #24]
 8001d8e:	4b34      	ldr	r3, [pc, #208]	@ (8001e60 <HAL_UART_MspInit+0x100>)
 8001d90:	699b      	ldr	r3, [r3, #24]
 8001d92:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8001d96:	61bb      	str	r3, [r7, #24]
 8001d98:	69bb      	ldr	r3, [r7, #24]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001d9a:	4b31      	ldr	r3, [pc, #196]	@ (8001e60 <HAL_UART_MspInit+0x100>)
 8001d9c:	695b      	ldr	r3, [r3, #20]
 8001d9e:	4a30      	ldr	r2, [pc, #192]	@ (8001e60 <HAL_UART_MspInit+0x100>)
 8001da0:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8001da4:	6153      	str	r3, [r2, #20]
 8001da6:	4b2e      	ldr	r3, [pc, #184]	@ (8001e60 <HAL_UART_MspInit+0x100>)
 8001da8:	695b      	ldr	r3, [r3, #20]
 8001daa:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8001dae:	617b      	str	r3, [r7, #20]
 8001db0:	697b      	ldr	r3, [r7, #20]
    /**USART1 GPIO Configuration
    PA9     ------> USART1_TX
    PA10     ------> USART1_RX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_10;
 8001db2:	f44f 63c0 	mov.w	r3, #1536	@ 0x600
 8001db6:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001db8:	2302      	movs	r3, #2
 8001dba:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001dbc:	2300      	movs	r3, #0
 8001dbe:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001dc0:	2303      	movs	r3, #3
 8001dc2:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 8001dc4:	2307      	movs	r3, #7
 8001dc6:	62fb      	str	r3, [r7, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001dc8:	f107 031c 	add.w	r3, r7, #28
 8001dcc:	4619      	mov	r1, r3
 8001dce:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8001dd2:	f000 fb77 	bl	80024c4 <HAL_GPIO_Init>

    /* USART1 interrupt Init */
    HAL_NVIC_SetPriority(USART1_IRQn, 0, 0);
 8001dd6:	2200      	movs	r2, #0
 8001dd8:	2100      	movs	r1, #0
 8001dda:	2025      	movs	r0, #37	@ 0x25
 8001ddc:	f000 fabf 	bl	800235e <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART1_IRQn);
 8001de0:	2025      	movs	r0, #37	@ 0x25
 8001de2:	f000 fad8 	bl	8002396 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN USART2_MspInit 1 */

  /* USER CODE END USART2_MspInit 1 */
  }

}
 8001de6:	e035      	b.n	8001e54 <HAL_UART_MspInit+0xf4>
  else if(huart->Instance==USART2)
 8001de8:	687b      	ldr	r3, [r7, #4]
 8001dea:	681b      	ldr	r3, [r3, #0]
 8001dec:	4a1d      	ldr	r2, [pc, #116]	@ (8001e64 <HAL_UART_MspInit+0x104>)
 8001dee:	4293      	cmp	r3, r2
 8001df0:	d130      	bne.n	8001e54 <HAL_UART_MspInit+0xf4>
    __HAL_RCC_USART2_CLK_ENABLE();
 8001df2:	4b1b      	ldr	r3, [pc, #108]	@ (8001e60 <HAL_UART_MspInit+0x100>)
 8001df4:	69db      	ldr	r3, [r3, #28]
 8001df6:	4a1a      	ldr	r2, [pc, #104]	@ (8001e60 <HAL_UART_MspInit+0x100>)
 8001df8:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8001dfc:	61d3      	str	r3, [r2, #28]
 8001dfe:	4b18      	ldr	r3, [pc, #96]	@ (8001e60 <HAL_UART_MspInit+0x100>)
 8001e00:	69db      	ldr	r3, [r3, #28]
 8001e02:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8001e06:	613b      	str	r3, [r7, #16]
 8001e08:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001e0a:	4b15      	ldr	r3, [pc, #84]	@ (8001e60 <HAL_UART_MspInit+0x100>)
 8001e0c:	695b      	ldr	r3, [r3, #20]
 8001e0e:	4a14      	ldr	r2, [pc, #80]	@ (8001e60 <HAL_UART_MspInit+0x100>)
 8001e10:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8001e14:	6153      	str	r3, [r2, #20]
 8001e16:	4b12      	ldr	r3, [pc, #72]	@ (8001e60 <HAL_UART_MspInit+0x100>)
 8001e18:	695b      	ldr	r3, [r3, #20]
 8001e1a:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8001e1e:	60fb      	str	r3, [r7, #12]
 8001e20:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = VCP_TX_Pin|VCP_RX_Pin;
 8001e22:	230c      	movs	r3, #12
 8001e24:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e26:	2302      	movs	r3, #2
 8001e28:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001e2a:	2300      	movs	r3, #0
 8001e2c:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001e2e:	2303      	movs	r3, #3
 8001e30:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 8001e32:	2307      	movs	r3, #7
 8001e34:	62fb      	str	r3, [r7, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001e36:	f107 031c 	add.w	r3, r7, #28
 8001e3a:	4619      	mov	r1, r3
 8001e3c:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8001e40:	f000 fb40 	bl	80024c4 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(USART2_IRQn, 0, 0);
 8001e44:	2200      	movs	r2, #0
 8001e46:	2100      	movs	r1, #0
 8001e48:	2026      	movs	r0, #38	@ 0x26
 8001e4a:	f000 fa88 	bl	800235e <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART2_IRQn);
 8001e4e:	2026      	movs	r0, #38	@ 0x26
 8001e50:	f000 faa1 	bl	8002396 <HAL_NVIC_EnableIRQ>
}
 8001e54:	bf00      	nop
 8001e56:	3730      	adds	r7, #48	@ 0x30
 8001e58:	46bd      	mov	sp, r7
 8001e5a:	bd80      	pop	{r7, pc}
 8001e5c:	40013800 	.word	0x40013800
 8001e60:	40021000 	.word	0x40021000
 8001e64:	40004400 	.word	0x40004400

08001e68 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8001e68:	b480      	push	{r7}
 8001e6a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 8001e6c:	bf00      	nop
 8001e6e:	e7fd      	b.n	8001e6c <NMI_Handler+0x4>

08001e70 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8001e70:	b480      	push	{r7}
 8001e72:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001e74:	bf00      	nop
 8001e76:	e7fd      	b.n	8001e74 <HardFault_Handler+0x4>

08001e78 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8001e78:	b480      	push	{r7}
 8001e7a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001e7c:	bf00      	nop
 8001e7e:	e7fd      	b.n	8001e7c <MemManage_Handler+0x4>

08001e80 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8001e80:	b480      	push	{r7}
 8001e82:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001e84:	bf00      	nop
 8001e86:	e7fd      	b.n	8001e84 <BusFault_Handler+0x4>

08001e88 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8001e88:	b480      	push	{r7}
 8001e8a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001e8c:	bf00      	nop
 8001e8e:	e7fd      	b.n	8001e8c <UsageFault_Handler+0x4>

08001e90 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8001e90:	b480      	push	{r7}
 8001e92:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8001e94:	bf00      	nop
 8001e96:	46bd      	mov	sp, r7
 8001e98:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e9c:	4770      	bx	lr

08001e9e <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8001e9e:	b480      	push	{r7}
 8001ea0:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8001ea2:	bf00      	nop
 8001ea4:	46bd      	mov	sp, r7
 8001ea6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001eaa:	4770      	bx	lr

08001eac <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8001eac:	b480      	push	{r7}
 8001eae:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8001eb0:	bf00      	nop
 8001eb2:	46bd      	mov	sp, r7
 8001eb4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001eb8:	4770      	bx	lr

08001eba <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8001eba:	b580      	push	{r7, lr}
 8001ebc:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8001ebe:	f000 f92f 	bl	8002120 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8001ec2:	bf00      	nop
 8001ec4:	bd80      	pop	{r7, pc}
	...

08001ec8 <TIM3_IRQHandler>:

/**
  * @brief This function handles TIM3 global interrupt.
  */
void TIM3_IRQHandler(void)
{
 8001ec8:	b580      	push	{r7, lr}
 8001eca:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM3_IRQn 0 */

  /* USER CODE END TIM3_IRQn 0 */
  HAL_TIM_IRQHandler(&htim3);
 8001ecc:	4803      	ldr	r0, [pc, #12]	@ (8001edc <TIM3_IRQHandler+0x14>)
 8001ece:	f003 f82d 	bl	8004f2c <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM3_IRQn 1 */
  control_update_flag = 1;
 8001ed2:	4b03      	ldr	r3, [pc, #12]	@ (8001ee0 <TIM3_IRQHandler+0x18>)
 8001ed4:	2201      	movs	r2, #1
 8001ed6:	701a      	strb	r2, [r3, #0]
  /* USER CODE END TIM3_IRQn 1 */
}
 8001ed8:	bf00      	nop
 8001eda:	bd80      	pop	{r7, pc}
 8001edc:	200001c0 	.word	0x200001c0
 8001ee0:	200003a2 	.word	0x200003a2

08001ee4 <USART1_IRQHandler>:

/**
  * @brief This function handles USART1 global interrupt / USART1 wake-up interrupt through EXT line 25.
  */
void USART1_IRQHandler(void)
{
 8001ee4:	b580      	push	{r7, lr}
 8001ee6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USART1_IRQn 0 */

  /* USER CODE END USART1_IRQn 0 */
  HAL_UART_IRQHandler(&huart1);
 8001ee8:	4802      	ldr	r0, [pc, #8]	@ (8001ef4 <USART1_IRQHandler+0x10>)
 8001eea:	f004 f93b 	bl	8006164 <HAL_UART_IRQHandler>
  /* USER CODE BEGIN USART1_IRQn 1 */

  /* USER CODE END USART1_IRQn 1 */
}
 8001eee:	bf00      	nop
 8001ef0:	bd80      	pop	{r7, pc}
 8001ef2:	bf00      	nop
 8001ef4:	2000020c 	.word	0x2000020c

08001ef8 <USART2_IRQHandler>:

/**
  * @brief This function handles USART2 global interrupt / USART2 wake-up interrupt through EXT line 26.
  */
void USART2_IRQHandler(void)
{
 8001ef8:	b580      	push	{r7, lr}
 8001efa:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USART2_IRQn 0 */

  /* USER CODE END USART2_IRQn 0 */
  HAL_UART_IRQHandler(&huart2);
 8001efc:	4802      	ldr	r0, [pc, #8]	@ (8001f08 <USART2_IRQHandler+0x10>)
 8001efe:	f004 f931 	bl	8006164 <HAL_UART_IRQHandler>
  /* USER CODE BEGIN USART2_IRQn 1 */

  /* USER CODE END USART2_IRQn 1 */
}
 8001f02:	bf00      	nop
 8001f04:	bd80      	pop	{r7, pc}
 8001f06:	bf00      	nop
 8001f08:	20000294 	.word	0x20000294

08001f0c <_read>:
 8001f0c:	b580      	push	{r7, lr}
 8001f0e:	b086      	sub	sp, #24
 8001f10:	af00      	add	r7, sp, #0
 8001f12:	60f8      	str	r0, [r7, #12]
 8001f14:	60b9      	str	r1, [r7, #8]
 8001f16:	607a      	str	r2, [r7, #4]
 8001f18:	2300      	movs	r3, #0
 8001f1a:	617b      	str	r3, [r7, #20]
 8001f1c:	e00a      	b.n	8001f34 <_read+0x28>
 8001f1e:	f3af 8000 	nop.w
 8001f22:	4601      	mov	r1, r0
 8001f24:	68bb      	ldr	r3, [r7, #8]
 8001f26:	1c5a      	adds	r2, r3, #1
 8001f28:	60ba      	str	r2, [r7, #8]
 8001f2a:	b2ca      	uxtb	r2, r1
 8001f2c:	701a      	strb	r2, [r3, #0]
 8001f2e:	697b      	ldr	r3, [r7, #20]
 8001f30:	3301      	adds	r3, #1
 8001f32:	617b      	str	r3, [r7, #20]
 8001f34:	697a      	ldr	r2, [r7, #20]
 8001f36:	687b      	ldr	r3, [r7, #4]
 8001f38:	429a      	cmp	r2, r3
 8001f3a:	dbf0      	blt.n	8001f1e <_read+0x12>
 8001f3c:	687b      	ldr	r3, [r7, #4]
 8001f3e:	4618      	mov	r0, r3
 8001f40:	3718      	adds	r7, #24
 8001f42:	46bd      	mov	sp, r7
 8001f44:	bd80      	pop	{r7, pc}

08001f46 <_close>:
 8001f46:	b480      	push	{r7}
 8001f48:	b083      	sub	sp, #12
 8001f4a:	af00      	add	r7, sp, #0
 8001f4c:	6078      	str	r0, [r7, #4]
 8001f4e:	f04f 33ff 	mov.w	r3, #4294967295
 8001f52:	4618      	mov	r0, r3
 8001f54:	370c      	adds	r7, #12
 8001f56:	46bd      	mov	sp, r7
 8001f58:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f5c:	4770      	bx	lr

08001f5e <_fstat>:
 8001f5e:	b480      	push	{r7}
 8001f60:	b083      	sub	sp, #12
 8001f62:	af00      	add	r7, sp, #0
 8001f64:	6078      	str	r0, [r7, #4]
 8001f66:	6039      	str	r1, [r7, #0]
 8001f68:	683b      	ldr	r3, [r7, #0]
 8001f6a:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8001f6e:	605a      	str	r2, [r3, #4]
 8001f70:	2300      	movs	r3, #0
 8001f72:	4618      	mov	r0, r3
 8001f74:	370c      	adds	r7, #12
 8001f76:	46bd      	mov	sp, r7
 8001f78:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f7c:	4770      	bx	lr

08001f7e <_isatty>:
 8001f7e:	b480      	push	{r7}
 8001f80:	b083      	sub	sp, #12
 8001f82:	af00      	add	r7, sp, #0
 8001f84:	6078      	str	r0, [r7, #4]
 8001f86:	2301      	movs	r3, #1
 8001f88:	4618      	mov	r0, r3
 8001f8a:	370c      	adds	r7, #12
 8001f8c:	46bd      	mov	sp, r7
 8001f8e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f92:	4770      	bx	lr

08001f94 <_lseek>:
 8001f94:	b480      	push	{r7}
 8001f96:	b085      	sub	sp, #20
 8001f98:	af00      	add	r7, sp, #0
 8001f9a:	60f8      	str	r0, [r7, #12]
 8001f9c:	60b9      	str	r1, [r7, #8]
 8001f9e:	607a      	str	r2, [r7, #4]
 8001fa0:	2300      	movs	r3, #0
 8001fa2:	4618      	mov	r0, r3
 8001fa4:	3714      	adds	r7, #20
 8001fa6:	46bd      	mov	sp, r7
 8001fa8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001fac:	4770      	bx	lr
	...

08001fb0 <_sbrk>:
 8001fb0:	b580      	push	{r7, lr}
 8001fb2:	b086      	sub	sp, #24
 8001fb4:	af00      	add	r7, sp, #0
 8001fb6:	6078      	str	r0, [r7, #4]
 8001fb8:	4a14      	ldr	r2, [pc, #80]	@ (800200c <_sbrk+0x5c>)
 8001fba:	4b15      	ldr	r3, [pc, #84]	@ (8002010 <_sbrk+0x60>)
 8001fbc:	1ad3      	subs	r3, r2, r3
 8001fbe:	617b      	str	r3, [r7, #20]
 8001fc0:	697b      	ldr	r3, [r7, #20]
 8001fc2:	613b      	str	r3, [r7, #16]
 8001fc4:	4b13      	ldr	r3, [pc, #76]	@ (8002014 <_sbrk+0x64>)
 8001fc6:	681b      	ldr	r3, [r3, #0]
 8001fc8:	2b00      	cmp	r3, #0
 8001fca:	d102      	bne.n	8001fd2 <_sbrk+0x22>
 8001fcc:	4b11      	ldr	r3, [pc, #68]	@ (8002014 <_sbrk+0x64>)
 8001fce:	4a12      	ldr	r2, [pc, #72]	@ (8002018 <_sbrk+0x68>)
 8001fd0:	601a      	str	r2, [r3, #0]
 8001fd2:	4b10      	ldr	r3, [pc, #64]	@ (8002014 <_sbrk+0x64>)
 8001fd4:	681a      	ldr	r2, [r3, #0]
 8001fd6:	687b      	ldr	r3, [r7, #4]
 8001fd8:	4413      	add	r3, r2
 8001fda:	693a      	ldr	r2, [r7, #16]
 8001fdc:	429a      	cmp	r2, r3
 8001fde:	d207      	bcs.n	8001ff0 <_sbrk+0x40>
 8001fe0:	f005 fbd0 	bl	8007784 <__errno>
 8001fe4:	4603      	mov	r3, r0
 8001fe6:	220c      	movs	r2, #12
 8001fe8:	601a      	str	r2, [r3, #0]
 8001fea:	f04f 33ff 	mov.w	r3, #4294967295
 8001fee:	e009      	b.n	8002004 <_sbrk+0x54>
 8001ff0:	4b08      	ldr	r3, [pc, #32]	@ (8002014 <_sbrk+0x64>)
 8001ff2:	681b      	ldr	r3, [r3, #0]
 8001ff4:	60fb      	str	r3, [r7, #12]
 8001ff6:	4b07      	ldr	r3, [pc, #28]	@ (8002014 <_sbrk+0x64>)
 8001ff8:	681a      	ldr	r2, [r3, #0]
 8001ffa:	687b      	ldr	r3, [r7, #4]
 8001ffc:	4413      	add	r3, r2
 8001ffe:	4a05      	ldr	r2, [pc, #20]	@ (8002014 <_sbrk+0x64>)
 8002000:	6013      	str	r3, [r2, #0]
 8002002:	68fb      	ldr	r3, [r7, #12]
 8002004:	4618      	mov	r0, r3
 8002006:	3718      	adds	r7, #24
 8002008:	46bd      	mov	sp, r7
 800200a:	bd80      	pop	{r7, pc}
 800200c:	20003000 	.word	0x20003000
 8002010:	00000400 	.word	0x00000400
 8002014:	200003a4 	.word	0x200003a4
 8002018:	200004f8 	.word	0x200004f8

0800201c <SystemInit>:
 800201c:	b480      	push	{r7}
 800201e:	af00      	add	r7, sp, #0
 8002020:	4b06      	ldr	r3, [pc, #24]	@ (800203c <SystemInit+0x20>)
 8002022:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8002026:	4a05      	ldr	r2, [pc, #20]	@ (800203c <SystemInit+0x20>)
 8002028:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 800202c:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
 8002030:	bf00      	nop
 8002032:	46bd      	mov	sp, r7
 8002034:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002038:	4770      	bx	lr
 800203a:	bf00      	nop
 800203c:	e000ed00 	.word	0xe000ed00

08002040 <Reset_Handler>:
 8002040:	f8df d034 	ldr.w	sp, [pc, #52]	@ 8002078 <LoopForever+0x2>
 8002044:	f7ff ffea 	bl	800201c <SystemInit>
 8002048:	480c      	ldr	r0, [pc, #48]	@ (800207c <LoopForever+0x6>)
 800204a:	490d      	ldr	r1, [pc, #52]	@ (8002080 <LoopForever+0xa>)
 800204c:	4a0d      	ldr	r2, [pc, #52]	@ (8002084 <LoopForever+0xe>)
 800204e:	2300      	movs	r3, #0
 8002050:	e002      	b.n	8002058 <LoopCopyDataInit>

08002052 <CopyDataInit>:
 8002052:	58d4      	ldr	r4, [r2, r3]
 8002054:	50c4      	str	r4, [r0, r3]
 8002056:	3304      	adds	r3, #4

08002058 <LoopCopyDataInit>:
 8002058:	18c4      	adds	r4, r0, r3
 800205a:	428c      	cmp	r4, r1
 800205c:	d3f9      	bcc.n	8002052 <CopyDataInit>
 800205e:	4a0a      	ldr	r2, [pc, #40]	@ (8002088 <LoopForever+0x12>)
 8002060:	4c0a      	ldr	r4, [pc, #40]	@ (800208c <LoopForever+0x16>)
 8002062:	2300      	movs	r3, #0
 8002064:	e001      	b.n	800206a <LoopFillZerobss>

08002066 <FillZerobss>:
 8002066:	6013      	str	r3, [r2, #0]
 8002068:	3204      	adds	r2, #4

0800206a <LoopFillZerobss>:
 800206a:	42a2      	cmp	r2, r4
 800206c:	d3fb      	bcc.n	8002066 <FillZerobss>
 800206e:	f005 fb8f 	bl	8007790 <__libc_init_array>
 8002072:	f7ff f9af 	bl	80013d4 <main>

08002076 <LoopForever>:
 8002076:	e7fe      	b.n	8002076 <LoopForever>
 8002078:	20003000 	.word	0x20003000
 800207c:	20000000 	.word	0x20000000
 8002080:	20000068 	.word	0x20000068
 8002084:	08008650 	.word	0x08008650
 8002088:	20000068 	.word	0x20000068
 800208c:	200004f8 	.word	0x200004f8

08002090 <ADC1_2_IRQHandler>:
 8002090:	e7fe      	b.n	8002090 <ADC1_2_IRQHandler>
	...

08002094 <HAL_Init>:
 8002094:	b580      	push	{r7, lr}
 8002096:	af00      	add	r7, sp, #0
 8002098:	4b08      	ldr	r3, [pc, #32]	@ (80020bc <HAL_Init+0x28>)
 800209a:	681b      	ldr	r3, [r3, #0]
 800209c:	4a07      	ldr	r2, [pc, #28]	@ (80020bc <HAL_Init+0x28>)
 800209e:	f043 0310 	orr.w	r3, r3, #16
 80020a2:	6013      	str	r3, [r2, #0]
 80020a4:	2003      	movs	r0, #3
 80020a6:	f000 f94f 	bl	8002348 <HAL_NVIC_SetPriorityGrouping>
 80020aa:	2000      	movs	r0, #0
 80020ac:	f000 f808 	bl	80020c0 <HAL_InitTick>
 80020b0:	f7ff fd36 	bl	8001b20 <HAL_MspInit>
 80020b4:	2300      	movs	r3, #0
 80020b6:	4618      	mov	r0, r3
 80020b8:	bd80      	pop	{r7, pc}
 80020ba:	bf00      	nop
 80020bc:	40022000 	.word	0x40022000

080020c0 <HAL_InitTick>:
 80020c0:	b580      	push	{r7, lr}
 80020c2:	b082      	sub	sp, #8
 80020c4:	af00      	add	r7, sp, #0
 80020c6:	6078      	str	r0, [r7, #4]
 80020c8:	4b12      	ldr	r3, [pc, #72]	@ (8002114 <HAL_InitTick+0x54>)
 80020ca:	681a      	ldr	r2, [r3, #0]
 80020cc:	4b12      	ldr	r3, [pc, #72]	@ (8002118 <HAL_InitTick+0x58>)
 80020ce:	781b      	ldrb	r3, [r3, #0]
 80020d0:	4619      	mov	r1, r3
 80020d2:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 80020d6:	fbb3 f3f1 	udiv	r3, r3, r1
 80020da:	fbb2 f3f3 	udiv	r3, r2, r3
 80020de:	4618      	mov	r0, r3
 80020e0:	f000 f967 	bl	80023b2 <HAL_SYSTICK_Config>
 80020e4:	4603      	mov	r3, r0
 80020e6:	2b00      	cmp	r3, #0
 80020e8:	d001      	beq.n	80020ee <HAL_InitTick+0x2e>
 80020ea:	2301      	movs	r3, #1
 80020ec:	e00e      	b.n	800210c <HAL_InitTick+0x4c>
 80020ee:	687b      	ldr	r3, [r7, #4]
 80020f0:	2b0f      	cmp	r3, #15
 80020f2:	d80a      	bhi.n	800210a <HAL_InitTick+0x4a>
 80020f4:	2200      	movs	r2, #0
 80020f6:	6879      	ldr	r1, [r7, #4]
 80020f8:	f04f 30ff 	mov.w	r0, #4294967295
 80020fc:	f000 f92f 	bl	800235e <HAL_NVIC_SetPriority>
 8002100:	4a06      	ldr	r2, [pc, #24]	@ (800211c <HAL_InitTick+0x5c>)
 8002102:	687b      	ldr	r3, [r7, #4]
 8002104:	6013      	str	r3, [r2, #0]
 8002106:	2300      	movs	r3, #0
 8002108:	e000      	b.n	800210c <HAL_InitTick+0x4c>
 800210a:	2301      	movs	r3, #1
 800210c:	4618      	mov	r0, r3
 800210e:	3708      	adds	r7, #8
 8002110:	46bd      	mov	sp, r7
 8002112:	bd80      	pop	{r7, pc}
 8002114:	20000000 	.word	0x20000000
 8002118:	20000008 	.word	0x20000008
 800211c:	20000004 	.word	0x20000004

08002120 <HAL_IncTick>:
 8002120:	b480      	push	{r7}
 8002122:	af00      	add	r7, sp, #0
 8002124:	4b06      	ldr	r3, [pc, #24]	@ (8002140 <HAL_IncTick+0x20>)
 8002126:	781b      	ldrb	r3, [r3, #0]
 8002128:	461a      	mov	r2, r3
 800212a:	4b06      	ldr	r3, [pc, #24]	@ (8002144 <HAL_IncTick+0x24>)
 800212c:	681b      	ldr	r3, [r3, #0]
 800212e:	4413      	add	r3, r2
 8002130:	4a04      	ldr	r2, [pc, #16]	@ (8002144 <HAL_IncTick+0x24>)
 8002132:	6013      	str	r3, [r2, #0]
 8002134:	bf00      	nop
 8002136:	46bd      	mov	sp, r7
 8002138:	f85d 7b04 	ldr.w	r7, [sp], #4
 800213c:	4770      	bx	lr
 800213e:	bf00      	nop
 8002140:	20000008 	.word	0x20000008
 8002144:	200003a8 	.word	0x200003a8

08002148 <HAL_GetTick>:
 8002148:	b480      	push	{r7}
 800214a:	af00      	add	r7, sp, #0
 800214c:	4b03      	ldr	r3, [pc, #12]	@ (800215c <HAL_GetTick+0x14>)
 800214e:	681b      	ldr	r3, [r3, #0]
 8002150:	4618      	mov	r0, r3
 8002152:	46bd      	mov	sp, r7
 8002154:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002158:	4770      	bx	lr
 800215a:	bf00      	nop
 800215c:	200003a8 	.word	0x200003a8

08002160 <HAL_Delay>:
 8002160:	b580      	push	{r7, lr}
 8002162:	b084      	sub	sp, #16
 8002164:	af00      	add	r7, sp, #0
 8002166:	6078      	str	r0, [r7, #4]
 8002168:	f7ff ffee 	bl	8002148 <HAL_GetTick>
 800216c:	60b8      	str	r0, [r7, #8]
 800216e:	687b      	ldr	r3, [r7, #4]
 8002170:	60fb      	str	r3, [r7, #12]
 8002172:	68fb      	ldr	r3, [r7, #12]
 8002174:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002178:	d005      	beq.n	8002186 <HAL_Delay+0x26>
 800217a:	4b0a      	ldr	r3, [pc, #40]	@ (80021a4 <HAL_Delay+0x44>)
 800217c:	781b      	ldrb	r3, [r3, #0]
 800217e:	461a      	mov	r2, r3
 8002180:	68fb      	ldr	r3, [r7, #12]
 8002182:	4413      	add	r3, r2
 8002184:	60fb      	str	r3, [r7, #12]
 8002186:	bf00      	nop
 8002188:	f7ff ffde 	bl	8002148 <HAL_GetTick>
 800218c:	4602      	mov	r2, r0
 800218e:	68bb      	ldr	r3, [r7, #8]
 8002190:	1ad3      	subs	r3, r2, r3
 8002192:	68fa      	ldr	r2, [r7, #12]
 8002194:	429a      	cmp	r2, r3
 8002196:	d8f7      	bhi.n	8002188 <HAL_Delay+0x28>
 8002198:	bf00      	nop
 800219a:	bf00      	nop
 800219c:	3710      	adds	r7, #16
 800219e:	46bd      	mov	sp, r7
 80021a0:	bd80      	pop	{r7, pc}
 80021a2:	bf00      	nop
 80021a4:	20000008 	.word	0x20000008

080021a8 <__NVIC_SetPriorityGrouping>:
 80021a8:	b480      	push	{r7}
 80021aa:	b085      	sub	sp, #20
 80021ac:	af00      	add	r7, sp, #0
 80021ae:	6078      	str	r0, [r7, #4]
 80021b0:	687b      	ldr	r3, [r7, #4]
 80021b2:	f003 0307 	and.w	r3, r3, #7
 80021b6:	60fb      	str	r3, [r7, #12]
 80021b8:	4b0c      	ldr	r3, [pc, #48]	@ (80021ec <__NVIC_SetPriorityGrouping+0x44>)
 80021ba:	68db      	ldr	r3, [r3, #12]
 80021bc:	60bb      	str	r3, [r7, #8]
 80021be:	68ba      	ldr	r2, [r7, #8]
 80021c0:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 80021c4:	4013      	ands	r3, r2
 80021c6:	60bb      	str	r3, [r7, #8]
 80021c8:	68fb      	ldr	r3, [r7, #12]
 80021ca:	021a      	lsls	r2, r3, #8
 80021cc:	68bb      	ldr	r3, [r7, #8]
 80021ce:	4313      	orrs	r3, r2
 80021d0:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 80021d4:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 80021d8:	60bb      	str	r3, [r7, #8]
 80021da:	4a04      	ldr	r2, [pc, #16]	@ (80021ec <__NVIC_SetPriorityGrouping+0x44>)
 80021dc:	68bb      	ldr	r3, [r7, #8]
 80021de:	60d3      	str	r3, [r2, #12]
 80021e0:	bf00      	nop
 80021e2:	3714      	adds	r7, #20
 80021e4:	46bd      	mov	sp, r7
 80021e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80021ea:	4770      	bx	lr
 80021ec:	e000ed00 	.word	0xe000ed00

080021f0 <__NVIC_GetPriorityGrouping>:
 80021f0:	b480      	push	{r7}
 80021f2:	af00      	add	r7, sp, #0
 80021f4:	4b04      	ldr	r3, [pc, #16]	@ (8002208 <__NVIC_GetPriorityGrouping+0x18>)
 80021f6:	68db      	ldr	r3, [r3, #12]
 80021f8:	0a1b      	lsrs	r3, r3, #8
 80021fa:	f003 0307 	and.w	r3, r3, #7
 80021fe:	4618      	mov	r0, r3
 8002200:	46bd      	mov	sp, r7
 8002202:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002206:	4770      	bx	lr
 8002208:	e000ed00 	.word	0xe000ed00

0800220c <__NVIC_EnableIRQ>:
 800220c:	b480      	push	{r7}
 800220e:	b083      	sub	sp, #12
 8002210:	af00      	add	r7, sp, #0
 8002212:	4603      	mov	r3, r0
 8002214:	71fb      	strb	r3, [r7, #7]
 8002216:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800221a:	2b00      	cmp	r3, #0
 800221c:	db0b      	blt.n	8002236 <__NVIC_EnableIRQ+0x2a>
 800221e:	79fb      	ldrb	r3, [r7, #7]
 8002220:	f003 021f 	and.w	r2, r3, #31
 8002224:	4907      	ldr	r1, [pc, #28]	@ (8002244 <__NVIC_EnableIRQ+0x38>)
 8002226:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800222a:	095b      	lsrs	r3, r3, #5
 800222c:	2001      	movs	r0, #1
 800222e:	fa00 f202 	lsl.w	r2, r0, r2
 8002232:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8002236:	bf00      	nop
 8002238:	370c      	adds	r7, #12
 800223a:	46bd      	mov	sp, r7
 800223c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002240:	4770      	bx	lr
 8002242:	bf00      	nop
 8002244:	e000e100 	.word	0xe000e100

08002248 <__NVIC_SetPriority>:
 8002248:	b480      	push	{r7}
 800224a:	b083      	sub	sp, #12
 800224c:	af00      	add	r7, sp, #0
 800224e:	4603      	mov	r3, r0
 8002250:	6039      	str	r1, [r7, #0]
 8002252:	71fb      	strb	r3, [r7, #7]
 8002254:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002258:	2b00      	cmp	r3, #0
 800225a:	db0a      	blt.n	8002272 <__NVIC_SetPriority+0x2a>
 800225c:	683b      	ldr	r3, [r7, #0]
 800225e:	b2da      	uxtb	r2, r3
 8002260:	490c      	ldr	r1, [pc, #48]	@ (8002294 <__NVIC_SetPriority+0x4c>)
 8002262:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002266:	0112      	lsls	r2, r2, #4
 8002268:	b2d2      	uxtb	r2, r2
 800226a:	440b      	add	r3, r1
 800226c:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 8002270:	e00a      	b.n	8002288 <__NVIC_SetPriority+0x40>
 8002272:	683b      	ldr	r3, [r7, #0]
 8002274:	b2da      	uxtb	r2, r3
 8002276:	4908      	ldr	r1, [pc, #32]	@ (8002298 <__NVIC_SetPriority+0x50>)
 8002278:	79fb      	ldrb	r3, [r7, #7]
 800227a:	f003 030f 	and.w	r3, r3, #15
 800227e:	3b04      	subs	r3, #4
 8002280:	0112      	lsls	r2, r2, #4
 8002282:	b2d2      	uxtb	r2, r2
 8002284:	440b      	add	r3, r1
 8002286:	761a      	strb	r2, [r3, #24]
 8002288:	bf00      	nop
 800228a:	370c      	adds	r7, #12
 800228c:	46bd      	mov	sp, r7
 800228e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002292:	4770      	bx	lr
 8002294:	e000e100 	.word	0xe000e100
 8002298:	e000ed00 	.word	0xe000ed00

0800229c <NVIC_EncodePriority>:
 800229c:	b480      	push	{r7}
 800229e:	b089      	sub	sp, #36	@ 0x24
 80022a0:	af00      	add	r7, sp, #0
 80022a2:	60f8      	str	r0, [r7, #12]
 80022a4:	60b9      	str	r1, [r7, #8]
 80022a6:	607a      	str	r2, [r7, #4]
 80022a8:	68fb      	ldr	r3, [r7, #12]
 80022aa:	f003 0307 	and.w	r3, r3, #7
 80022ae:	61fb      	str	r3, [r7, #28]
 80022b0:	69fb      	ldr	r3, [r7, #28]
 80022b2:	f1c3 0307 	rsb	r3, r3, #7
 80022b6:	2b04      	cmp	r3, #4
 80022b8:	bf28      	it	cs
 80022ba:	2304      	movcs	r3, #4
 80022bc:	61bb      	str	r3, [r7, #24]
 80022be:	69fb      	ldr	r3, [r7, #28]
 80022c0:	3304      	adds	r3, #4
 80022c2:	2b06      	cmp	r3, #6
 80022c4:	d902      	bls.n	80022cc <NVIC_EncodePriority+0x30>
 80022c6:	69fb      	ldr	r3, [r7, #28]
 80022c8:	3b03      	subs	r3, #3
 80022ca:	e000      	b.n	80022ce <NVIC_EncodePriority+0x32>
 80022cc:	2300      	movs	r3, #0
 80022ce:	617b      	str	r3, [r7, #20]
 80022d0:	f04f 32ff 	mov.w	r2, #4294967295
 80022d4:	69bb      	ldr	r3, [r7, #24]
 80022d6:	fa02 f303 	lsl.w	r3, r2, r3
 80022da:	43da      	mvns	r2, r3
 80022dc:	68bb      	ldr	r3, [r7, #8]
 80022de:	401a      	ands	r2, r3
 80022e0:	697b      	ldr	r3, [r7, #20]
 80022e2:	409a      	lsls	r2, r3
 80022e4:	f04f 31ff 	mov.w	r1, #4294967295
 80022e8:	697b      	ldr	r3, [r7, #20]
 80022ea:	fa01 f303 	lsl.w	r3, r1, r3
 80022ee:	43d9      	mvns	r1, r3
 80022f0:	687b      	ldr	r3, [r7, #4]
 80022f2:	400b      	ands	r3, r1
 80022f4:	4313      	orrs	r3, r2
 80022f6:	4618      	mov	r0, r3
 80022f8:	3724      	adds	r7, #36	@ 0x24
 80022fa:	46bd      	mov	sp, r7
 80022fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002300:	4770      	bx	lr
	...

08002304 <SysTick_Config>:
 8002304:	b580      	push	{r7, lr}
 8002306:	b082      	sub	sp, #8
 8002308:	af00      	add	r7, sp, #0
 800230a:	6078      	str	r0, [r7, #4]
 800230c:	687b      	ldr	r3, [r7, #4]
 800230e:	3b01      	subs	r3, #1
 8002310:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8002314:	d301      	bcc.n	800231a <SysTick_Config+0x16>
 8002316:	2301      	movs	r3, #1
 8002318:	e00f      	b.n	800233a <SysTick_Config+0x36>
 800231a:	4a0a      	ldr	r2, [pc, #40]	@ (8002344 <SysTick_Config+0x40>)
 800231c:	687b      	ldr	r3, [r7, #4]
 800231e:	3b01      	subs	r3, #1
 8002320:	6053      	str	r3, [r2, #4]
 8002322:	210f      	movs	r1, #15
 8002324:	f04f 30ff 	mov.w	r0, #4294967295
 8002328:	f7ff ff8e 	bl	8002248 <__NVIC_SetPriority>
 800232c:	4b05      	ldr	r3, [pc, #20]	@ (8002344 <SysTick_Config+0x40>)
 800232e:	2200      	movs	r2, #0
 8002330:	609a      	str	r2, [r3, #8]
 8002332:	4b04      	ldr	r3, [pc, #16]	@ (8002344 <SysTick_Config+0x40>)
 8002334:	2207      	movs	r2, #7
 8002336:	601a      	str	r2, [r3, #0]
 8002338:	2300      	movs	r3, #0
 800233a:	4618      	mov	r0, r3
 800233c:	3708      	adds	r7, #8
 800233e:	46bd      	mov	sp, r7
 8002340:	bd80      	pop	{r7, pc}
 8002342:	bf00      	nop
 8002344:	e000e010 	.word	0xe000e010

08002348 <HAL_NVIC_SetPriorityGrouping>:
 8002348:	b580      	push	{r7, lr}
 800234a:	b082      	sub	sp, #8
 800234c:	af00      	add	r7, sp, #0
 800234e:	6078      	str	r0, [r7, #4]
 8002350:	6878      	ldr	r0, [r7, #4]
 8002352:	f7ff ff29 	bl	80021a8 <__NVIC_SetPriorityGrouping>
 8002356:	bf00      	nop
 8002358:	3708      	adds	r7, #8
 800235a:	46bd      	mov	sp, r7
 800235c:	bd80      	pop	{r7, pc}

0800235e <HAL_NVIC_SetPriority>:
 800235e:	b580      	push	{r7, lr}
 8002360:	b086      	sub	sp, #24
 8002362:	af00      	add	r7, sp, #0
 8002364:	4603      	mov	r3, r0
 8002366:	60b9      	str	r1, [r7, #8]
 8002368:	607a      	str	r2, [r7, #4]
 800236a:	73fb      	strb	r3, [r7, #15]
 800236c:	2300      	movs	r3, #0
 800236e:	617b      	str	r3, [r7, #20]
 8002370:	f7ff ff3e 	bl	80021f0 <__NVIC_GetPriorityGrouping>
 8002374:	6178      	str	r0, [r7, #20]
 8002376:	687a      	ldr	r2, [r7, #4]
 8002378:	68b9      	ldr	r1, [r7, #8]
 800237a:	6978      	ldr	r0, [r7, #20]
 800237c:	f7ff ff8e 	bl	800229c <NVIC_EncodePriority>
 8002380:	4602      	mov	r2, r0
 8002382:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8002386:	4611      	mov	r1, r2
 8002388:	4618      	mov	r0, r3
 800238a:	f7ff ff5d 	bl	8002248 <__NVIC_SetPriority>
 800238e:	bf00      	nop
 8002390:	3718      	adds	r7, #24
 8002392:	46bd      	mov	sp, r7
 8002394:	bd80      	pop	{r7, pc}

08002396 <HAL_NVIC_EnableIRQ>:
 8002396:	b580      	push	{r7, lr}
 8002398:	b082      	sub	sp, #8
 800239a:	af00      	add	r7, sp, #0
 800239c:	4603      	mov	r3, r0
 800239e:	71fb      	strb	r3, [r7, #7]
 80023a0:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80023a4:	4618      	mov	r0, r3
 80023a6:	f7ff ff31 	bl	800220c <__NVIC_EnableIRQ>
 80023aa:	bf00      	nop
 80023ac:	3708      	adds	r7, #8
 80023ae:	46bd      	mov	sp, r7
 80023b0:	bd80      	pop	{r7, pc}

080023b2 <HAL_SYSTICK_Config>:
 80023b2:	b580      	push	{r7, lr}
 80023b4:	b082      	sub	sp, #8
 80023b6:	af00      	add	r7, sp, #0
 80023b8:	6078      	str	r0, [r7, #4]
 80023ba:	6878      	ldr	r0, [r7, #4]
 80023bc:	f7ff ffa2 	bl	8002304 <SysTick_Config>
 80023c0:	4603      	mov	r3, r0
 80023c2:	4618      	mov	r0, r3
 80023c4:	3708      	adds	r7, #8
 80023c6:	46bd      	mov	sp, r7
 80023c8:	bd80      	pop	{r7, pc}

080023ca <HAL_DMA_Abort>:
 80023ca:	b480      	push	{r7}
 80023cc:	b083      	sub	sp, #12
 80023ce:	af00      	add	r7, sp, #0
 80023d0:	6078      	str	r0, [r7, #4]
 80023d2:	687b      	ldr	r3, [r7, #4]
 80023d4:	2b00      	cmp	r3, #0
 80023d6:	d101      	bne.n	80023dc <HAL_DMA_Abort+0x12>
 80023d8:	2301      	movs	r3, #1
 80023da:	e02e      	b.n	800243a <HAL_DMA_Abort+0x70>
 80023dc:	687b      	ldr	r3, [r7, #4]
 80023de:	f893 3021 	ldrb.w	r3, [r3, #33]	@ 0x21
 80023e2:	2b02      	cmp	r3, #2
 80023e4:	d008      	beq.n	80023f8 <HAL_DMA_Abort+0x2e>
 80023e6:	687b      	ldr	r3, [r7, #4]
 80023e8:	2204      	movs	r2, #4
 80023ea:	639a      	str	r2, [r3, #56]	@ 0x38
 80023ec:	687b      	ldr	r3, [r7, #4]
 80023ee:	2200      	movs	r2, #0
 80023f0:	f883 2020 	strb.w	r2, [r3, #32]
 80023f4:	2301      	movs	r3, #1
 80023f6:	e020      	b.n	800243a <HAL_DMA_Abort+0x70>
 80023f8:	687b      	ldr	r3, [r7, #4]
 80023fa:	681b      	ldr	r3, [r3, #0]
 80023fc:	681a      	ldr	r2, [r3, #0]
 80023fe:	687b      	ldr	r3, [r7, #4]
 8002400:	681b      	ldr	r3, [r3, #0]
 8002402:	f022 020e 	bic.w	r2, r2, #14
 8002406:	601a      	str	r2, [r3, #0]
 8002408:	687b      	ldr	r3, [r7, #4]
 800240a:	681b      	ldr	r3, [r3, #0]
 800240c:	681a      	ldr	r2, [r3, #0]
 800240e:	687b      	ldr	r3, [r7, #4]
 8002410:	681b      	ldr	r3, [r3, #0]
 8002412:	f022 0201 	bic.w	r2, r2, #1
 8002416:	601a      	str	r2, [r3, #0]
 8002418:	687b      	ldr	r3, [r7, #4]
 800241a:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 800241c:	687b      	ldr	r3, [r7, #4]
 800241e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8002420:	2101      	movs	r1, #1
 8002422:	fa01 f202 	lsl.w	r2, r1, r2
 8002426:	605a      	str	r2, [r3, #4]
 8002428:	687b      	ldr	r3, [r7, #4]
 800242a:	2201      	movs	r2, #1
 800242c:	f883 2021 	strb.w	r2, [r3, #33]	@ 0x21
 8002430:	687b      	ldr	r3, [r7, #4]
 8002432:	2200      	movs	r2, #0
 8002434:	f883 2020 	strb.w	r2, [r3, #32]
 8002438:	2300      	movs	r3, #0
 800243a:	4618      	mov	r0, r3
 800243c:	370c      	adds	r7, #12
 800243e:	46bd      	mov	sp, r7
 8002440:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002444:	4770      	bx	lr

08002446 <HAL_DMA_Abort_IT>:
 8002446:	b580      	push	{r7, lr}
 8002448:	b084      	sub	sp, #16
 800244a:	af00      	add	r7, sp, #0
 800244c:	6078      	str	r0, [r7, #4]
 800244e:	2300      	movs	r3, #0
 8002450:	73fb      	strb	r3, [r7, #15]
 8002452:	687b      	ldr	r3, [r7, #4]
 8002454:	f893 3021 	ldrb.w	r3, [r3, #33]	@ 0x21
 8002458:	2b02      	cmp	r3, #2
 800245a:	d005      	beq.n	8002468 <HAL_DMA_Abort_IT+0x22>
 800245c:	687b      	ldr	r3, [r7, #4]
 800245e:	2204      	movs	r2, #4
 8002460:	639a      	str	r2, [r3, #56]	@ 0x38
 8002462:	2301      	movs	r3, #1
 8002464:	73fb      	strb	r3, [r7, #15]
 8002466:	e027      	b.n	80024b8 <HAL_DMA_Abort_IT+0x72>
 8002468:	687b      	ldr	r3, [r7, #4]
 800246a:	681b      	ldr	r3, [r3, #0]
 800246c:	681a      	ldr	r2, [r3, #0]
 800246e:	687b      	ldr	r3, [r7, #4]
 8002470:	681b      	ldr	r3, [r3, #0]
 8002472:	f022 020e 	bic.w	r2, r2, #14
 8002476:	601a      	str	r2, [r3, #0]
 8002478:	687b      	ldr	r3, [r7, #4]
 800247a:	681b      	ldr	r3, [r3, #0]
 800247c:	681a      	ldr	r2, [r3, #0]
 800247e:	687b      	ldr	r3, [r7, #4]
 8002480:	681b      	ldr	r3, [r3, #0]
 8002482:	f022 0201 	bic.w	r2, r2, #1
 8002486:	601a      	str	r2, [r3, #0]
 8002488:	687b      	ldr	r3, [r7, #4]
 800248a:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 800248c:	687b      	ldr	r3, [r7, #4]
 800248e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8002490:	2101      	movs	r1, #1
 8002492:	fa01 f202 	lsl.w	r2, r1, r2
 8002496:	605a      	str	r2, [r3, #4]
 8002498:	687b      	ldr	r3, [r7, #4]
 800249a:	2201      	movs	r2, #1
 800249c:	f883 2021 	strb.w	r2, [r3, #33]	@ 0x21
 80024a0:	687b      	ldr	r3, [r7, #4]
 80024a2:	2200      	movs	r2, #0
 80024a4:	f883 2020 	strb.w	r2, [r3, #32]
 80024a8:	687b      	ldr	r3, [r7, #4]
 80024aa:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80024ac:	2b00      	cmp	r3, #0
 80024ae:	d003      	beq.n	80024b8 <HAL_DMA_Abort_IT+0x72>
 80024b0:	687b      	ldr	r3, [r7, #4]
 80024b2:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80024b4:	6878      	ldr	r0, [r7, #4]
 80024b6:	4798      	blx	r3
 80024b8:	7bfb      	ldrb	r3, [r7, #15]
 80024ba:	4618      	mov	r0, r3
 80024bc:	3710      	adds	r7, #16
 80024be:	46bd      	mov	sp, r7
 80024c0:	bd80      	pop	{r7, pc}
	...

080024c4 <HAL_GPIO_Init>:
 80024c4:	b480      	push	{r7}
 80024c6:	b087      	sub	sp, #28
 80024c8:	af00      	add	r7, sp, #0
 80024ca:	6078      	str	r0, [r7, #4]
 80024cc:	6039      	str	r1, [r7, #0]
 80024ce:	2300      	movs	r3, #0
 80024d0:	617b      	str	r3, [r7, #20]
 80024d2:	e14e      	b.n	8002772 <HAL_GPIO_Init+0x2ae>
 80024d4:	683b      	ldr	r3, [r7, #0]
 80024d6:	681a      	ldr	r2, [r3, #0]
 80024d8:	2101      	movs	r1, #1
 80024da:	697b      	ldr	r3, [r7, #20]
 80024dc:	fa01 f303 	lsl.w	r3, r1, r3
 80024e0:	4013      	ands	r3, r2
 80024e2:	60fb      	str	r3, [r7, #12]
 80024e4:	68fb      	ldr	r3, [r7, #12]
 80024e6:	2b00      	cmp	r3, #0
 80024e8:	f000 8140 	beq.w	800276c <HAL_GPIO_Init+0x2a8>
 80024ec:	683b      	ldr	r3, [r7, #0]
 80024ee:	685b      	ldr	r3, [r3, #4]
 80024f0:	f003 0303 	and.w	r3, r3, #3
 80024f4:	2b01      	cmp	r3, #1
 80024f6:	d005      	beq.n	8002504 <HAL_GPIO_Init+0x40>
 80024f8:	683b      	ldr	r3, [r7, #0]
 80024fa:	685b      	ldr	r3, [r3, #4]
 80024fc:	f003 0303 	and.w	r3, r3, #3
 8002500:	2b02      	cmp	r3, #2
 8002502:	d130      	bne.n	8002566 <HAL_GPIO_Init+0xa2>
 8002504:	687b      	ldr	r3, [r7, #4]
 8002506:	689b      	ldr	r3, [r3, #8]
 8002508:	613b      	str	r3, [r7, #16]
 800250a:	697b      	ldr	r3, [r7, #20]
 800250c:	005b      	lsls	r3, r3, #1
 800250e:	2203      	movs	r2, #3
 8002510:	fa02 f303 	lsl.w	r3, r2, r3
 8002514:	43db      	mvns	r3, r3
 8002516:	693a      	ldr	r2, [r7, #16]
 8002518:	4013      	ands	r3, r2
 800251a:	613b      	str	r3, [r7, #16]
 800251c:	683b      	ldr	r3, [r7, #0]
 800251e:	68da      	ldr	r2, [r3, #12]
 8002520:	697b      	ldr	r3, [r7, #20]
 8002522:	005b      	lsls	r3, r3, #1
 8002524:	fa02 f303 	lsl.w	r3, r2, r3
 8002528:	693a      	ldr	r2, [r7, #16]
 800252a:	4313      	orrs	r3, r2
 800252c:	613b      	str	r3, [r7, #16]
 800252e:	687b      	ldr	r3, [r7, #4]
 8002530:	693a      	ldr	r2, [r7, #16]
 8002532:	609a      	str	r2, [r3, #8]
 8002534:	687b      	ldr	r3, [r7, #4]
 8002536:	685b      	ldr	r3, [r3, #4]
 8002538:	613b      	str	r3, [r7, #16]
 800253a:	2201      	movs	r2, #1
 800253c:	697b      	ldr	r3, [r7, #20]
 800253e:	fa02 f303 	lsl.w	r3, r2, r3
 8002542:	43db      	mvns	r3, r3
 8002544:	693a      	ldr	r2, [r7, #16]
 8002546:	4013      	ands	r3, r2
 8002548:	613b      	str	r3, [r7, #16]
 800254a:	683b      	ldr	r3, [r7, #0]
 800254c:	685b      	ldr	r3, [r3, #4]
 800254e:	091b      	lsrs	r3, r3, #4
 8002550:	f003 0201 	and.w	r2, r3, #1
 8002554:	697b      	ldr	r3, [r7, #20]
 8002556:	fa02 f303 	lsl.w	r3, r2, r3
 800255a:	693a      	ldr	r2, [r7, #16]
 800255c:	4313      	orrs	r3, r2
 800255e:	613b      	str	r3, [r7, #16]
 8002560:	687b      	ldr	r3, [r7, #4]
 8002562:	693a      	ldr	r2, [r7, #16]
 8002564:	605a      	str	r2, [r3, #4]
 8002566:	683b      	ldr	r3, [r7, #0]
 8002568:	685b      	ldr	r3, [r3, #4]
 800256a:	f003 0303 	and.w	r3, r3, #3
 800256e:	2b03      	cmp	r3, #3
 8002570:	d017      	beq.n	80025a2 <HAL_GPIO_Init+0xde>
 8002572:	687b      	ldr	r3, [r7, #4]
 8002574:	68db      	ldr	r3, [r3, #12]
 8002576:	613b      	str	r3, [r7, #16]
 8002578:	697b      	ldr	r3, [r7, #20]
 800257a:	005b      	lsls	r3, r3, #1
 800257c:	2203      	movs	r2, #3
 800257e:	fa02 f303 	lsl.w	r3, r2, r3
 8002582:	43db      	mvns	r3, r3
 8002584:	693a      	ldr	r2, [r7, #16]
 8002586:	4013      	ands	r3, r2
 8002588:	613b      	str	r3, [r7, #16]
 800258a:	683b      	ldr	r3, [r7, #0]
 800258c:	689a      	ldr	r2, [r3, #8]
 800258e:	697b      	ldr	r3, [r7, #20]
 8002590:	005b      	lsls	r3, r3, #1
 8002592:	fa02 f303 	lsl.w	r3, r2, r3
 8002596:	693a      	ldr	r2, [r7, #16]
 8002598:	4313      	orrs	r3, r2
 800259a:	613b      	str	r3, [r7, #16]
 800259c:	687b      	ldr	r3, [r7, #4]
 800259e:	693a      	ldr	r2, [r7, #16]
 80025a0:	60da      	str	r2, [r3, #12]
 80025a2:	683b      	ldr	r3, [r7, #0]
 80025a4:	685b      	ldr	r3, [r3, #4]
 80025a6:	f003 0303 	and.w	r3, r3, #3
 80025aa:	2b02      	cmp	r3, #2
 80025ac:	d123      	bne.n	80025f6 <HAL_GPIO_Init+0x132>
 80025ae:	697b      	ldr	r3, [r7, #20]
 80025b0:	08da      	lsrs	r2, r3, #3
 80025b2:	687b      	ldr	r3, [r7, #4]
 80025b4:	3208      	adds	r2, #8
 80025b6:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80025ba:	613b      	str	r3, [r7, #16]
 80025bc:	697b      	ldr	r3, [r7, #20]
 80025be:	f003 0307 	and.w	r3, r3, #7
 80025c2:	009b      	lsls	r3, r3, #2
 80025c4:	220f      	movs	r2, #15
 80025c6:	fa02 f303 	lsl.w	r3, r2, r3
 80025ca:	43db      	mvns	r3, r3
 80025cc:	693a      	ldr	r2, [r7, #16]
 80025ce:	4013      	ands	r3, r2
 80025d0:	613b      	str	r3, [r7, #16]
 80025d2:	683b      	ldr	r3, [r7, #0]
 80025d4:	691a      	ldr	r2, [r3, #16]
 80025d6:	697b      	ldr	r3, [r7, #20]
 80025d8:	f003 0307 	and.w	r3, r3, #7
 80025dc:	009b      	lsls	r3, r3, #2
 80025de:	fa02 f303 	lsl.w	r3, r2, r3
 80025e2:	693a      	ldr	r2, [r7, #16]
 80025e4:	4313      	orrs	r3, r2
 80025e6:	613b      	str	r3, [r7, #16]
 80025e8:	697b      	ldr	r3, [r7, #20]
 80025ea:	08da      	lsrs	r2, r3, #3
 80025ec:	687b      	ldr	r3, [r7, #4]
 80025ee:	3208      	adds	r2, #8
 80025f0:	6939      	ldr	r1, [r7, #16]
 80025f2:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 80025f6:	687b      	ldr	r3, [r7, #4]
 80025f8:	681b      	ldr	r3, [r3, #0]
 80025fa:	613b      	str	r3, [r7, #16]
 80025fc:	697b      	ldr	r3, [r7, #20]
 80025fe:	005b      	lsls	r3, r3, #1
 8002600:	2203      	movs	r2, #3
 8002602:	fa02 f303 	lsl.w	r3, r2, r3
 8002606:	43db      	mvns	r3, r3
 8002608:	693a      	ldr	r2, [r7, #16]
 800260a:	4013      	ands	r3, r2
 800260c:	613b      	str	r3, [r7, #16]
 800260e:	683b      	ldr	r3, [r7, #0]
 8002610:	685b      	ldr	r3, [r3, #4]
 8002612:	f003 0203 	and.w	r2, r3, #3
 8002616:	697b      	ldr	r3, [r7, #20]
 8002618:	005b      	lsls	r3, r3, #1
 800261a:	fa02 f303 	lsl.w	r3, r2, r3
 800261e:	693a      	ldr	r2, [r7, #16]
 8002620:	4313      	orrs	r3, r2
 8002622:	613b      	str	r3, [r7, #16]
 8002624:	687b      	ldr	r3, [r7, #4]
 8002626:	693a      	ldr	r2, [r7, #16]
 8002628:	601a      	str	r2, [r3, #0]
 800262a:	683b      	ldr	r3, [r7, #0]
 800262c:	685b      	ldr	r3, [r3, #4]
 800262e:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 8002632:	2b00      	cmp	r3, #0
 8002634:	f000 809a 	beq.w	800276c <HAL_GPIO_Init+0x2a8>
 8002638:	4b55      	ldr	r3, [pc, #340]	@ (8002790 <HAL_GPIO_Init+0x2cc>)
 800263a:	699b      	ldr	r3, [r3, #24]
 800263c:	4a54      	ldr	r2, [pc, #336]	@ (8002790 <HAL_GPIO_Init+0x2cc>)
 800263e:	f043 0301 	orr.w	r3, r3, #1
 8002642:	6193      	str	r3, [r2, #24]
 8002644:	4b52      	ldr	r3, [pc, #328]	@ (8002790 <HAL_GPIO_Init+0x2cc>)
 8002646:	699b      	ldr	r3, [r3, #24]
 8002648:	f003 0301 	and.w	r3, r3, #1
 800264c:	60bb      	str	r3, [r7, #8]
 800264e:	68bb      	ldr	r3, [r7, #8]
 8002650:	4a50      	ldr	r2, [pc, #320]	@ (8002794 <HAL_GPIO_Init+0x2d0>)
 8002652:	697b      	ldr	r3, [r7, #20]
 8002654:	089b      	lsrs	r3, r3, #2
 8002656:	3302      	adds	r3, #2
 8002658:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800265c:	613b      	str	r3, [r7, #16]
 800265e:	697b      	ldr	r3, [r7, #20]
 8002660:	f003 0303 	and.w	r3, r3, #3
 8002664:	009b      	lsls	r3, r3, #2
 8002666:	220f      	movs	r2, #15
 8002668:	fa02 f303 	lsl.w	r3, r2, r3
 800266c:	43db      	mvns	r3, r3
 800266e:	693a      	ldr	r2, [r7, #16]
 8002670:	4013      	ands	r3, r2
 8002672:	613b      	str	r3, [r7, #16]
 8002674:	687b      	ldr	r3, [r7, #4]
 8002676:	f1b3 4f90 	cmp.w	r3, #1207959552	@ 0x48000000
 800267a:	d013      	beq.n	80026a4 <HAL_GPIO_Init+0x1e0>
 800267c:	687b      	ldr	r3, [r7, #4]
 800267e:	4a46      	ldr	r2, [pc, #280]	@ (8002798 <HAL_GPIO_Init+0x2d4>)
 8002680:	4293      	cmp	r3, r2
 8002682:	d00d      	beq.n	80026a0 <HAL_GPIO_Init+0x1dc>
 8002684:	687b      	ldr	r3, [r7, #4]
 8002686:	4a45      	ldr	r2, [pc, #276]	@ (800279c <HAL_GPIO_Init+0x2d8>)
 8002688:	4293      	cmp	r3, r2
 800268a:	d007      	beq.n	800269c <HAL_GPIO_Init+0x1d8>
 800268c:	687b      	ldr	r3, [r7, #4]
 800268e:	4a44      	ldr	r2, [pc, #272]	@ (80027a0 <HAL_GPIO_Init+0x2dc>)
 8002690:	4293      	cmp	r3, r2
 8002692:	d101      	bne.n	8002698 <HAL_GPIO_Init+0x1d4>
 8002694:	2303      	movs	r3, #3
 8002696:	e006      	b.n	80026a6 <HAL_GPIO_Init+0x1e2>
 8002698:	2305      	movs	r3, #5
 800269a:	e004      	b.n	80026a6 <HAL_GPIO_Init+0x1e2>
 800269c:	2302      	movs	r3, #2
 800269e:	e002      	b.n	80026a6 <HAL_GPIO_Init+0x1e2>
 80026a0:	2301      	movs	r3, #1
 80026a2:	e000      	b.n	80026a6 <HAL_GPIO_Init+0x1e2>
 80026a4:	2300      	movs	r3, #0
 80026a6:	697a      	ldr	r2, [r7, #20]
 80026a8:	f002 0203 	and.w	r2, r2, #3
 80026ac:	0092      	lsls	r2, r2, #2
 80026ae:	4093      	lsls	r3, r2
 80026b0:	693a      	ldr	r2, [r7, #16]
 80026b2:	4313      	orrs	r3, r2
 80026b4:	613b      	str	r3, [r7, #16]
 80026b6:	4937      	ldr	r1, [pc, #220]	@ (8002794 <HAL_GPIO_Init+0x2d0>)
 80026b8:	697b      	ldr	r3, [r7, #20]
 80026ba:	089b      	lsrs	r3, r3, #2
 80026bc:	3302      	adds	r3, #2
 80026be:	693a      	ldr	r2, [r7, #16]
 80026c0:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80026c4:	4b37      	ldr	r3, [pc, #220]	@ (80027a4 <HAL_GPIO_Init+0x2e0>)
 80026c6:	689b      	ldr	r3, [r3, #8]
 80026c8:	613b      	str	r3, [r7, #16]
 80026ca:	68fb      	ldr	r3, [r7, #12]
 80026cc:	43db      	mvns	r3, r3
 80026ce:	693a      	ldr	r2, [r7, #16]
 80026d0:	4013      	ands	r3, r2
 80026d2:	613b      	str	r3, [r7, #16]
 80026d4:	683b      	ldr	r3, [r7, #0]
 80026d6:	685b      	ldr	r3, [r3, #4]
 80026d8:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 80026dc:	2b00      	cmp	r3, #0
 80026de:	d003      	beq.n	80026e8 <HAL_GPIO_Init+0x224>
 80026e0:	693a      	ldr	r2, [r7, #16]
 80026e2:	68fb      	ldr	r3, [r7, #12]
 80026e4:	4313      	orrs	r3, r2
 80026e6:	613b      	str	r3, [r7, #16]
 80026e8:	4a2e      	ldr	r2, [pc, #184]	@ (80027a4 <HAL_GPIO_Init+0x2e0>)
 80026ea:	693b      	ldr	r3, [r7, #16]
 80026ec:	6093      	str	r3, [r2, #8]
 80026ee:	4b2d      	ldr	r3, [pc, #180]	@ (80027a4 <HAL_GPIO_Init+0x2e0>)
 80026f0:	68db      	ldr	r3, [r3, #12]
 80026f2:	613b      	str	r3, [r7, #16]
 80026f4:	68fb      	ldr	r3, [r7, #12]
 80026f6:	43db      	mvns	r3, r3
 80026f8:	693a      	ldr	r2, [r7, #16]
 80026fa:	4013      	ands	r3, r2
 80026fc:	613b      	str	r3, [r7, #16]
 80026fe:	683b      	ldr	r3, [r7, #0]
 8002700:	685b      	ldr	r3, [r3, #4]
 8002702:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8002706:	2b00      	cmp	r3, #0
 8002708:	d003      	beq.n	8002712 <HAL_GPIO_Init+0x24e>
 800270a:	693a      	ldr	r2, [r7, #16]
 800270c:	68fb      	ldr	r3, [r7, #12]
 800270e:	4313      	orrs	r3, r2
 8002710:	613b      	str	r3, [r7, #16]
 8002712:	4a24      	ldr	r2, [pc, #144]	@ (80027a4 <HAL_GPIO_Init+0x2e0>)
 8002714:	693b      	ldr	r3, [r7, #16]
 8002716:	60d3      	str	r3, [r2, #12]
 8002718:	4b22      	ldr	r3, [pc, #136]	@ (80027a4 <HAL_GPIO_Init+0x2e0>)
 800271a:	685b      	ldr	r3, [r3, #4]
 800271c:	613b      	str	r3, [r7, #16]
 800271e:	68fb      	ldr	r3, [r7, #12]
 8002720:	43db      	mvns	r3, r3
 8002722:	693a      	ldr	r2, [r7, #16]
 8002724:	4013      	ands	r3, r2
 8002726:	613b      	str	r3, [r7, #16]
 8002728:	683b      	ldr	r3, [r7, #0]
 800272a:	685b      	ldr	r3, [r3, #4]
 800272c:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002730:	2b00      	cmp	r3, #0
 8002732:	d003      	beq.n	800273c <HAL_GPIO_Init+0x278>
 8002734:	693a      	ldr	r2, [r7, #16]
 8002736:	68fb      	ldr	r3, [r7, #12]
 8002738:	4313      	orrs	r3, r2
 800273a:	613b      	str	r3, [r7, #16]
 800273c:	4a19      	ldr	r2, [pc, #100]	@ (80027a4 <HAL_GPIO_Init+0x2e0>)
 800273e:	693b      	ldr	r3, [r7, #16]
 8002740:	6053      	str	r3, [r2, #4]
 8002742:	4b18      	ldr	r3, [pc, #96]	@ (80027a4 <HAL_GPIO_Init+0x2e0>)
 8002744:	681b      	ldr	r3, [r3, #0]
 8002746:	613b      	str	r3, [r7, #16]
 8002748:	68fb      	ldr	r3, [r7, #12]
 800274a:	43db      	mvns	r3, r3
 800274c:	693a      	ldr	r2, [r7, #16]
 800274e:	4013      	ands	r3, r2
 8002750:	613b      	str	r3, [r7, #16]
 8002752:	683b      	ldr	r3, [r7, #0]
 8002754:	685b      	ldr	r3, [r3, #4]
 8002756:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 800275a:	2b00      	cmp	r3, #0
 800275c:	d003      	beq.n	8002766 <HAL_GPIO_Init+0x2a2>
 800275e:	693a      	ldr	r2, [r7, #16]
 8002760:	68fb      	ldr	r3, [r7, #12]
 8002762:	4313      	orrs	r3, r2
 8002764:	613b      	str	r3, [r7, #16]
 8002766:	4a0f      	ldr	r2, [pc, #60]	@ (80027a4 <HAL_GPIO_Init+0x2e0>)
 8002768:	693b      	ldr	r3, [r7, #16]
 800276a:	6013      	str	r3, [r2, #0]
 800276c:	697b      	ldr	r3, [r7, #20]
 800276e:	3301      	adds	r3, #1
 8002770:	617b      	str	r3, [r7, #20]
 8002772:	683b      	ldr	r3, [r7, #0]
 8002774:	681a      	ldr	r2, [r3, #0]
 8002776:	697b      	ldr	r3, [r7, #20]
 8002778:	fa22 f303 	lsr.w	r3, r2, r3
 800277c:	2b00      	cmp	r3, #0
 800277e:	f47f aea9 	bne.w	80024d4 <HAL_GPIO_Init+0x10>
 8002782:	bf00      	nop
 8002784:	bf00      	nop
 8002786:	371c      	adds	r7, #28
 8002788:	46bd      	mov	sp, r7
 800278a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800278e:	4770      	bx	lr
 8002790:	40021000 	.word	0x40021000
 8002794:	40010000 	.word	0x40010000
 8002798:	48000400 	.word	0x48000400
 800279c:	48000800 	.word	0x48000800
 80027a0:	48000c00 	.word	0x48000c00
 80027a4:	40010400 	.word	0x40010400

080027a8 <HAL_GPIO_WritePin>:
 80027a8:	b480      	push	{r7}
 80027aa:	b083      	sub	sp, #12
 80027ac:	af00      	add	r7, sp, #0
 80027ae:	6078      	str	r0, [r7, #4]
 80027b0:	460b      	mov	r3, r1
 80027b2:	807b      	strh	r3, [r7, #2]
 80027b4:	4613      	mov	r3, r2
 80027b6:	707b      	strb	r3, [r7, #1]
 80027b8:	787b      	ldrb	r3, [r7, #1]
 80027ba:	2b00      	cmp	r3, #0
 80027bc:	d003      	beq.n	80027c6 <HAL_GPIO_WritePin+0x1e>
 80027be:	887a      	ldrh	r2, [r7, #2]
 80027c0:	687b      	ldr	r3, [r7, #4]
 80027c2:	619a      	str	r2, [r3, #24]
 80027c4:	e002      	b.n	80027cc <HAL_GPIO_WritePin+0x24>
 80027c6:	887a      	ldrh	r2, [r7, #2]
 80027c8:	687b      	ldr	r3, [r7, #4]
 80027ca:	629a      	str	r2, [r3, #40]	@ 0x28
 80027cc:	bf00      	nop
 80027ce:	370c      	adds	r7, #12
 80027d0:	46bd      	mov	sp, r7
 80027d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80027d6:	4770      	bx	lr

080027d8 <HAL_I2C_Init>:
 80027d8:	b580      	push	{r7, lr}
 80027da:	b082      	sub	sp, #8
 80027dc:	af00      	add	r7, sp, #0
 80027de:	6078      	str	r0, [r7, #4]
 80027e0:	687b      	ldr	r3, [r7, #4]
 80027e2:	2b00      	cmp	r3, #0
 80027e4:	d101      	bne.n	80027ea <HAL_I2C_Init+0x12>
 80027e6:	2301      	movs	r3, #1
 80027e8:	e08d      	b.n	8002906 <HAL_I2C_Init+0x12e>
 80027ea:	687b      	ldr	r3, [r7, #4]
 80027ec:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 80027f0:	b2db      	uxtb	r3, r3
 80027f2:	2b00      	cmp	r3, #0
 80027f4:	d106      	bne.n	8002804 <HAL_I2C_Init+0x2c>
 80027f6:	687b      	ldr	r3, [r7, #4]
 80027f8:	2200      	movs	r2, #0
 80027fa:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 80027fe:	6878      	ldr	r0, [r7, #4]
 8002800:	f7ff f9b2 	bl	8001b68 <HAL_I2C_MspInit>
 8002804:	687b      	ldr	r3, [r7, #4]
 8002806:	2224      	movs	r2, #36	@ 0x24
 8002808:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800280c:	687b      	ldr	r3, [r7, #4]
 800280e:	681b      	ldr	r3, [r3, #0]
 8002810:	681a      	ldr	r2, [r3, #0]
 8002812:	687b      	ldr	r3, [r7, #4]
 8002814:	681b      	ldr	r3, [r3, #0]
 8002816:	f022 0201 	bic.w	r2, r2, #1
 800281a:	601a      	str	r2, [r3, #0]
 800281c:	687b      	ldr	r3, [r7, #4]
 800281e:	685a      	ldr	r2, [r3, #4]
 8002820:	687b      	ldr	r3, [r7, #4]
 8002822:	681b      	ldr	r3, [r3, #0]
 8002824:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
 8002828:	611a      	str	r2, [r3, #16]
 800282a:	687b      	ldr	r3, [r7, #4]
 800282c:	681b      	ldr	r3, [r3, #0]
 800282e:	689a      	ldr	r2, [r3, #8]
 8002830:	687b      	ldr	r3, [r7, #4]
 8002832:	681b      	ldr	r3, [r3, #0]
 8002834:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 8002838:	609a      	str	r2, [r3, #8]
 800283a:	687b      	ldr	r3, [r7, #4]
 800283c:	68db      	ldr	r3, [r3, #12]
 800283e:	2b01      	cmp	r3, #1
 8002840:	d107      	bne.n	8002852 <HAL_I2C_Init+0x7a>
 8002842:	687b      	ldr	r3, [r7, #4]
 8002844:	689a      	ldr	r2, [r3, #8]
 8002846:	687b      	ldr	r3, [r7, #4]
 8002848:	681b      	ldr	r3, [r3, #0]
 800284a:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 800284e:	609a      	str	r2, [r3, #8]
 8002850:	e006      	b.n	8002860 <HAL_I2C_Init+0x88>
 8002852:	687b      	ldr	r3, [r7, #4]
 8002854:	689a      	ldr	r2, [r3, #8]
 8002856:	687b      	ldr	r3, [r7, #4]
 8002858:	681b      	ldr	r3, [r3, #0]
 800285a:	f442 4204 	orr.w	r2, r2, #33792	@ 0x8400
 800285e:	609a      	str	r2, [r3, #8]
 8002860:	687b      	ldr	r3, [r7, #4]
 8002862:	68db      	ldr	r3, [r3, #12]
 8002864:	2b02      	cmp	r3, #2
 8002866:	d108      	bne.n	800287a <HAL_I2C_Init+0xa2>
 8002868:	687b      	ldr	r3, [r7, #4]
 800286a:	681b      	ldr	r3, [r3, #0]
 800286c:	685a      	ldr	r2, [r3, #4]
 800286e:	687b      	ldr	r3, [r7, #4]
 8002870:	681b      	ldr	r3, [r3, #0]
 8002872:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8002876:	605a      	str	r2, [r3, #4]
 8002878:	e007      	b.n	800288a <HAL_I2C_Init+0xb2>
 800287a:	687b      	ldr	r3, [r7, #4]
 800287c:	681b      	ldr	r3, [r3, #0]
 800287e:	685a      	ldr	r2, [r3, #4]
 8002880:	687b      	ldr	r3, [r7, #4]
 8002882:	681b      	ldr	r3, [r3, #0]
 8002884:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8002888:	605a      	str	r2, [r3, #4]
 800288a:	687b      	ldr	r3, [r7, #4]
 800288c:	681b      	ldr	r3, [r3, #0]
 800288e:	685b      	ldr	r3, [r3, #4]
 8002890:	687a      	ldr	r2, [r7, #4]
 8002892:	6812      	ldr	r2, [r2, #0]
 8002894:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 8002898:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 800289c:	6053      	str	r3, [r2, #4]
 800289e:	687b      	ldr	r3, [r7, #4]
 80028a0:	681b      	ldr	r3, [r3, #0]
 80028a2:	68da      	ldr	r2, [r3, #12]
 80028a4:	687b      	ldr	r3, [r7, #4]
 80028a6:	681b      	ldr	r3, [r3, #0]
 80028a8:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 80028ac:	60da      	str	r2, [r3, #12]
 80028ae:	687b      	ldr	r3, [r7, #4]
 80028b0:	691a      	ldr	r2, [r3, #16]
 80028b2:	687b      	ldr	r3, [r7, #4]
 80028b4:	695b      	ldr	r3, [r3, #20]
 80028b6:	ea42 0103 	orr.w	r1, r2, r3
 80028ba:	687b      	ldr	r3, [r7, #4]
 80028bc:	699b      	ldr	r3, [r3, #24]
 80028be:	021a      	lsls	r2, r3, #8
 80028c0:	687b      	ldr	r3, [r7, #4]
 80028c2:	681b      	ldr	r3, [r3, #0]
 80028c4:	430a      	orrs	r2, r1
 80028c6:	60da      	str	r2, [r3, #12]
 80028c8:	687b      	ldr	r3, [r7, #4]
 80028ca:	69d9      	ldr	r1, [r3, #28]
 80028cc:	687b      	ldr	r3, [r7, #4]
 80028ce:	6a1a      	ldr	r2, [r3, #32]
 80028d0:	687b      	ldr	r3, [r7, #4]
 80028d2:	681b      	ldr	r3, [r3, #0]
 80028d4:	430a      	orrs	r2, r1
 80028d6:	601a      	str	r2, [r3, #0]
 80028d8:	687b      	ldr	r3, [r7, #4]
 80028da:	681b      	ldr	r3, [r3, #0]
 80028dc:	681a      	ldr	r2, [r3, #0]
 80028de:	687b      	ldr	r3, [r7, #4]
 80028e0:	681b      	ldr	r3, [r3, #0]
 80028e2:	f042 0201 	orr.w	r2, r2, #1
 80028e6:	601a      	str	r2, [r3, #0]
 80028e8:	687b      	ldr	r3, [r7, #4]
 80028ea:	2200      	movs	r2, #0
 80028ec:	645a      	str	r2, [r3, #68]	@ 0x44
 80028ee:	687b      	ldr	r3, [r7, #4]
 80028f0:	2220      	movs	r2, #32
 80028f2:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80028f6:	687b      	ldr	r3, [r7, #4]
 80028f8:	2200      	movs	r2, #0
 80028fa:	631a      	str	r2, [r3, #48]	@ 0x30
 80028fc:	687b      	ldr	r3, [r7, #4]
 80028fe:	2200      	movs	r2, #0
 8002900:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8002904:	2300      	movs	r3, #0
 8002906:	4618      	mov	r0, r3
 8002908:	3708      	adds	r7, #8
 800290a:	46bd      	mov	sp, r7
 800290c:	bd80      	pop	{r7, pc}
	...

08002910 <HAL_I2C_Mem_Write>:
 8002910:	b580      	push	{r7, lr}
 8002912:	b088      	sub	sp, #32
 8002914:	af02      	add	r7, sp, #8
 8002916:	60f8      	str	r0, [r7, #12]
 8002918:	4608      	mov	r0, r1
 800291a:	4611      	mov	r1, r2
 800291c:	461a      	mov	r2, r3
 800291e:	4603      	mov	r3, r0
 8002920:	817b      	strh	r3, [r7, #10]
 8002922:	460b      	mov	r3, r1
 8002924:	813b      	strh	r3, [r7, #8]
 8002926:	4613      	mov	r3, r2
 8002928:	80fb      	strh	r3, [r7, #6]
 800292a:	68fb      	ldr	r3, [r7, #12]
 800292c:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8002930:	b2db      	uxtb	r3, r3
 8002932:	2b20      	cmp	r3, #32
 8002934:	f040 80f9 	bne.w	8002b2a <HAL_I2C_Mem_Write+0x21a>
 8002938:	6a3b      	ldr	r3, [r7, #32]
 800293a:	2b00      	cmp	r3, #0
 800293c:	d002      	beq.n	8002944 <HAL_I2C_Mem_Write+0x34>
 800293e:	8cbb      	ldrh	r3, [r7, #36]	@ 0x24
 8002940:	2b00      	cmp	r3, #0
 8002942:	d105      	bne.n	8002950 <HAL_I2C_Mem_Write+0x40>
 8002944:	68fb      	ldr	r3, [r7, #12]
 8002946:	f44f 7200 	mov.w	r2, #512	@ 0x200
 800294a:	645a      	str	r2, [r3, #68]	@ 0x44
 800294c:	2301      	movs	r3, #1
 800294e:	e0ed      	b.n	8002b2c <HAL_I2C_Mem_Write+0x21c>
 8002950:	68fb      	ldr	r3, [r7, #12]
 8002952:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 8002956:	2b01      	cmp	r3, #1
 8002958:	d101      	bne.n	800295e <HAL_I2C_Mem_Write+0x4e>
 800295a:	2302      	movs	r3, #2
 800295c:	e0e6      	b.n	8002b2c <HAL_I2C_Mem_Write+0x21c>
 800295e:	68fb      	ldr	r3, [r7, #12]
 8002960:	2201      	movs	r2, #1
 8002962:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8002966:	f7ff fbef 	bl	8002148 <HAL_GetTick>
 800296a:	6178      	str	r0, [r7, #20]
 800296c:	697b      	ldr	r3, [r7, #20]
 800296e:	9300      	str	r3, [sp, #0]
 8002970:	2319      	movs	r3, #25
 8002972:	2201      	movs	r2, #1
 8002974:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 8002978:	68f8      	ldr	r0, [r7, #12]
 800297a:	f000 fac3 	bl	8002f04 <I2C_WaitOnFlagUntilTimeout>
 800297e:	4603      	mov	r3, r0
 8002980:	2b00      	cmp	r3, #0
 8002982:	d001      	beq.n	8002988 <HAL_I2C_Mem_Write+0x78>
 8002984:	2301      	movs	r3, #1
 8002986:	e0d1      	b.n	8002b2c <HAL_I2C_Mem_Write+0x21c>
 8002988:	68fb      	ldr	r3, [r7, #12]
 800298a:	2221      	movs	r2, #33	@ 0x21
 800298c:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8002990:	68fb      	ldr	r3, [r7, #12]
 8002992:	2240      	movs	r2, #64	@ 0x40
 8002994:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8002998:	68fb      	ldr	r3, [r7, #12]
 800299a:	2200      	movs	r2, #0
 800299c:	645a      	str	r2, [r3, #68]	@ 0x44
 800299e:	68fb      	ldr	r3, [r7, #12]
 80029a0:	6a3a      	ldr	r2, [r7, #32]
 80029a2:	625a      	str	r2, [r3, #36]	@ 0x24
 80029a4:	68fb      	ldr	r3, [r7, #12]
 80029a6:	8cba      	ldrh	r2, [r7, #36]	@ 0x24
 80029a8:	855a      	strh	r2, [r3, #42]	@ 0x2a
 80029aa:	68fb      	ldr	r3, [r7, #12]
 80029ac:	2200      	movs	r2, #0
 80029ae:	635a      	str	r2, [r3, #52]	@ 0x34
 80029b0:	88f8      	ldrh	r0, [r7, #6]
 80029b2:	893a      	ldrh	r2, [r7, #8]
 80029b4:	8979      	ldrh	r1, [r7, #10]
 80029b6:	697b      	ldr	r3, [r7, #20]
 80029b8:	9301      	str	r3, [sp, #4]
 80029ba:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80029bc:	9300      	str	r3, [sp, #0]
 80029be:	4603      	mov	r3, r0
 80029c0:	68f8      	ldr	r0, [r7, #12]
 80029c2:	f000 f9d3 	bl	8002d6c <I2C_RequestMemoryWrite>
 80029c6:	4603      	mov	r3, r0
 80029c8:	2b00      	cmp	r3, #0
 80029ca:	d005      	beq.n	80029d8 <HAL_I2C_Mem_Write+0xc8>
 80029cc:	68fb      	ldr	r3, [r7, #12]
 80029ce:	2200      	movs	r2, #0
 80029d0:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 80029d4:	2301      	movs	r3, #1
 80029d6:	e0a9      	b.n	8002b2c <HAL_I2C_Mem_Write+0x21c>
 80029d8:	68fb      	ldr	r3, [r7, #12]
 80029da:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80029dc:	b29b      	uxth	r3, r3
 80029de:	2bff      	cmp	r3, #255	@ 0xff
 80029e0:	d90e      	bls.n	8002a00 <HAL_I2C_Mem_Write+0xf0>
 80029e2:	68fb      	ldr	r3, [r7, #12]
 80029e4:	22ff      	movs	r2, #255	@ 0xff
 80029e6:	851a      	strh	r2, [r3, #40]	@ 0x28
 80029e8:	68fb      	ldr	r3, [r7, #12]
 80029ea:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80029ec:	b2da      	uxtb	r2, r3
 80029ee:	8979      	ldrh	r1, [r7, #10]
 80029f0:	2300      	movs	r3, #0
 80029f2:	9300      	str	r3, [sp, #0]
 80029f4:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 80029f8:	68f8      	ldr	r0, [r7, #12]
 80029fa:	f000 fc47 	bl	800328c <I2C_TransferConfig>
 80029fe:	e00f      	b.n	8002a20 <HAL_I2C_Mem_Write+0x110>
 8002a00:	68fb      	ldr	r3, [r7, #12]
 8002a02:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8002a04:	b29a      	uxth	r2, r3
 8002a06:	68fb      	ldr	r3, [r7, #12]
 8002a08:	851a      	strh	r2, [r3, #40]	@ 0x28
 8002a0a:	68fb      	ldr	r3, [r7, #12]
 8002a0c:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8002a0e:	b2da      	uxtb	r2, r3
 8002a10:	8979      	ldrh	r1, [r7, #10]
 8002a12:	2300      	movs	r3, #0
 8002a14:	9300      	str	r3, [sp, #0]
 8002a16:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
 8002a1a:	68f8      	ldr	r0, [r7, #12]
 8002a1c:	f000 fc36 	bl	800328c <I2C_TransferConfig>
 8002a20:	697a      	ldr	r2, [r7, #20]
 8002a22:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 8002a24:	68f8      	ldr	r0, [r7, #12]
 8002a26:	f000 fac6 	bl	8002fb6 <I2C_WaitOnTXISFlagUntilTimeout>
 8002a2a:	4603      	mov	r3, r0
 8002a2c:	2b00      	cmp	r3, #0
 8002a2e:	d001      	beq.n	8002a34 <HAL_I2C_Mem_Write+0x124>
 8002a30:	2301      	movs	r3, #1
 8002a32:	e07b      	b.n	8002b2c <HAL_I2C_Mem_Write+0x21c>
 8002a34:	68fb      	ldr	r3, [r7, #12]
 8002a36:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002a38:	781a      	ldrb	r2, [r3, #0]
 8002a3a:	68fb      	ldr	r3, [r7, #12]
 8002a3c:	681b      	ldr	r3, [r3, #0]
 8002a3e:	629a      	str	r2, [r3, #40]	@ 0x28
 8002a40:	68fb      	ldr	r3, [r7, #12]
 8002a42:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002a44:	1c5a      	adds	r2, r3, #1
 8002a46:	68fb      	ldr	r3, [r7, #12]
 8002a48:	625a      	str	r2, [r3, #36]	@ 0x24
 8002a4a:	68fb      	ldr	r3, [r7, #12]
 8002a4c:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8002a4e:	b29b      	uxth	r3, r3
 8002a50:	3b01      	subs	r3, #1
 8002a52:	b29a      	uxth	r2, r3
 8002a54:	68fb      	ldr	r3, [r7, #12]
 8002a56:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8002a58:	68fb      	ldr	r3, [r7, #12]
 8002a5a:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8002a5c:	3b01      	subs	r3, #1
 8002a5e:	b29a      	uxth	r2, r3
 8002a60:	68fb      	ldr	r3, [r7, #12]
 8002a62:	851a      	strh	r2, [r3, #40]	@ 0x28
 8002a64:	68fb      	ldr	r3, [r7, #12]
 8002a66:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8002a68:	b29b      	uxth	r3, r3
 8002a6a:	2b00      	cmp	r3, #0
 8002a6c:	d034      	beq.n	8002ad8 <HAL_I2C_Mem_Write+0x1c8>
 8002a6e:	68fb      	ldr	r3, [r7, #12]
 8002a70:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8002a72:	2b00      	cmp	r3, #0
 8002a74:	d130      	bne.n	8002ad8 <HAL_I2C_Mem_Write+0x1c8>
 8002a76:	697b      	ldr	r3, [r7, #20]
 8002a78:	9300      	str	r3, [sp, #0]
 8002a7a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8002a7c:	2200      	movs	r2, #0
 8002a7e:	2180      	movs	r1, #128	@ 0x80
 8002a80:	68f8      	ldr	r0, [r7, #12]
 8002a82:	f000 fa3f 	bl	8002f04 <I2C_WaitOnFlagUntilTimeout>
 8002a86:	4603      	mov	r3, r0
 8002a88:	2b00      	cmp	r3, #0
 8002a8a:	d001      	beq.n	8002a90 <HAL_I2C_Mem_Write+0x180>
 8002a8c:	2301      	movs	r3, #1
 8002a8e:	e04d      	b.n	8002b2c <HAL_I2C_Mem_Write+0x21c>
 8002a90:	68fb      	ldr	r3, [r7, #12]
 8002a92:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8002a94:	b29b      	uxth	r3, r3
 8002a96:	2bff      	cmp	r3, #255	@ 0xff
 8002a98:	d90e      	bls.n	8002ab8 <HAL_I2C_Mem_Write+0x1a8>
 8002a9a:	68fb      	ldr	r3, [r7, #12]
 8002a9c:	22ff      	movs	r2, #255	@ 0xff
 8002a9e:	851a      	strh	r2, [r3, #40]	@ 0x28
 8002aa0:	68fb      	ldr	r3, [r7, #12]
 8002aa2:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8002aa4:	b2da      	uxtb	r2, r3
 8002aa6:	8979      	ldrh	r1, [r7, #10]
 8002aa8:	2300      	movs	r3, #0
 8002aaa:	9300      	str	r3, [sp, #0]
 8002aac:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 8002ab0:	68f8      	ldr	r0, [r7, #12]
 8002ab2:	f000 fbeb 	bl	800328c <I2C_TransferConfig>
 8002ab6:	e00f      	b.n	8002ad8 <HAL_I2C_Mem_Write+0x1c8>
 8002ab8:	68fb      	ldr	r3, [r7, #12]
 8002aba:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8002abc:	b29a      	uxth	r2, r3
 8002abe:	68fb      	ldr	r3, [r7, #12]
 8002ac0:	851a      	strh	r2, [r3, #40]	@ 0x28
 8002ac2:	68fb      	ldr	r3, [r7, #12]
 8002ac4:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8002ac6:	b2da      	uxtb	r2, r3
 8002ac8:	8979      	ldrh	r1, [r7, #10]
 8002aca:	2300      	movs	r3, #0
 8002acc:	9300      	str	r3, [sp, #0]
 8002ace:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
 8002ad2:	68f8      	ldr	r0, [r7, #12]
 8002ad4:	f000 fbda 	bl	800328c <I2C_TransferConfig>
 8002ad8:	68fb      	ldr	r3, [r7, #12]
 8002ada:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8002adc:	b29b      	uxth	r3, r3
 8002ade:	2b00      	cmp	r3, #0
 8002ae0:	d19e      	bne.n	8002a20 <HAL_I2C_Mem_Write+0x110>
 8002ae2:	697a      	ldr	r2, [r7, #20]
 8002ae4:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 8002ae6:	68f8      	ldr	r0, [r7, #12]
 8002ae8:	f000 faac 	bl	8003044 <I2C_WaitOnSTOPFlagUntilTimeout>
 8002aec:	4603      	mov	r3, r0
 8002aee:	2b00      	cmp	r3, #0
 8002af0:	d001      	beq.n	8002af6 <HAL_I2C_Mem_Write+0x1e6>
 8002af2:	2301      	movs	r3, #1
 8002af4:	e01a      	b.n	8002b2c <HAL_I2C_Mem_Write+0x21c>
 8002af6:	68fb      	ldr	r3, [r7, #12]
 8002af8:	681b      	ldr	r3, [r3, #0]
 8002afa:	2220      	movs	r2, #32
 8002afc:	61da      	str	r2, [r3, #28]
 8002afe:	68fb      	ldr	r3, [r7, #12]
 8002b00:	681b      	ldr	r3, [r3, #0]
 8002b02:	6859      	ldr	r1, [r3, #4]
 8002b04:	68fb      	ldr	r3, [r7, #12]
 8002b06:	681a      	ldr	r2, [r3, #0]
 8002b08:	4b0a      	ldr	r3, [pc, #40]	@ (8002b34 <HAL_I2C_Mem_Write+0x224>)
 8002b0a:	400b      	ands	r3, r1
 8002b0c:	6053      	str	r3, [r2, #4]
 8002b0e:	68fb      	ldr	r3, [r7, #12]
 8002b10:	2220      	movs	r2, #32
 8002b12:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8002b16:	68fb      	ldr	r3, [r7, #12]
 8002b18:	2200      	movs	r2, #0
 8002b1a:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8002b1e:	68fb      	ldr	r3, [r7, #12]
 8002b20:	2200      	movs	r2, #0
 8002b22:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8002b26:	2300      	movs	r3, #0
 8002b28:	e000      	b.n	8002b2c <HAL_I2C_Mem_Write+0x21c>
 8002b2a:	2302      	movs	r3, #2
 8002b2c:	4618      	mov	r0, r3
 8002b2e:	3718      	adds	r7, #24
 8002b30:	46bd      	mov	sp, r7
 8002b32:	bd80      	pop	{r7, pc}
 8002b34:	fe00e800 	.word	0xfe00e800

08002b38 <HAL_I2C_Mem_Read>:
 8002b38:	b580      	push	{r7, lr}
 8002b3a:	b088      	sub	sp, #32
 8002b3c:	af02      	add	r7, sp, #8
 8002b3e:	60f8      	str	r0, [r7, #12]
 8002b40:	4608      	mov	r0, r1
 8002b42:	4611      	mov	r1, r2
 8002b44:	461a      	mov	r2, r3
 8002b46:	4603      	mov	r3, r0
 8002b48:	817b      	strh	r3, [r7, #10]
 8002b4a:	460b      	mov	r3, r1
 8002b4c:	813b      	strh	r3, [r7, #8]
 8002b4e:	4613      	mov	r3, r2
 8002b50:	80fb      	strh	r3, [r7, #6]
 8002b52:	68fb      	ldr	r3, [r7, #12]
 8002b54:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8002b58:	b2db      	uxtb	r3, r3
 8002b5a:	2b20      	cmp	r3, #32
 8002b5c:	f040 80fd 	bne.w	8002d5a <HAL_I2C_Mem_Read+0x222>
 8002b60:	6a3b      	ldr	r3, [r7, #32]
 8002b62:	2b00      	cmp	r3, #0
 8002b64:	d002      	beq.n	8002b6c <HAL_I2C_Mem_Read+0x34>
 8002b66:	8cbb      	ldrh	r3, [r7, #36]	@ 0x24
 8002b68:	2b00      	cmp	r3, #0
 8002b6a:	d105      	bne.n	8002b78 <HAL_I2C_Mem_Read+0x40>
 8002b6c:	68fb      	ldr	r3, [r7, #12]
 8002b6e:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8002b72:	645a      	str	r2, [r3, #68]	@ 0x44
 8002b74:	2301      	movs	r3, #1
 8002b76:	e0f1      	b.n	8002d5c <HAL_I2C_Mem_Read+0x224>
 8002b78:	68fb      	ldr	r3, [r7, #12]
 8002b7a:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 8002b7e:	2b01      	cmp	r3, #1
 8002b80:	d101      	bne.n	8002b86 <HAL_I2C_Mem_Read+0x4e>
 8002b82:	2302      	movs	r3, #2
 8002b84:	e0ea      	b.n	8002d5c <HAL_I2C_Mem_Read+0x224>
 8002b86:	68fb      	ldr	r3, [r7, #12]
 8002b88:	2201      	movs	r2, #1
 8002b8a:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8002b8e:	f7ff fadb 	bl	8002148 <HAL_GetTick>
 8002b92:	6178      	str	r0, [r7, #20]
 8002b94:	697b      	ldr	r3, [r7, #20]
 8002b96:	9300      	str	r3, [sp, #0]
 8002b98:	2319      	movs	r3, #25
 8002b9a:	2201      	movs	r2, #1
 8002b9c:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 8002ba0:	68f8      	ldr	r0, [r7, #12]
 8002ba2:	f000 f9af 	bl	8002f04 <I2C_WaitOnFlagUntilTimeout>
 8002ba6:	4603      	mov	r3, r0
 8002ba8:	2b00      	cmp	r3, #0
 8002baa:	d001      	beq.n	8002bb0 <HAL_I2C_Mem_Read+0x78>
 8002bac:	2301      	movs	r3, #1
 8002bae:	e0d5      	b.n	8002d5c <HAL_I2C_Mem_Read+0x224>
 8002bb0:	68fb      	ldr	r3, [r7, #12]
 8002bb2:	2222      	movs	r2, #34	@ 0x22
 8002bb4:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8002bb8:	68fb      	ldr	r3, [r7, #12]
 8002bba:	2240      	movs	r2, #64	@ 0x40
 8002bbc:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8002bc0:	68fb      	ldr	r3, [r7, #12]
 8002bc2:	2200      	movs	r2, #0
 8002bc4:	645a      	str	r2, [r3, #68]	@ 0x44
 8002bc6:	68fb      	ldr	r3, [r7, #12]
 8002bc8:	6a3a      	ldr	r2, [r7, #32]
 8002bca:	625a      	str	r2, [r3, #36]	@ 0x24
 8002bcc:	68fb      	ldr	r3, [r7, #12]
 8002bce:	8cba      	ldrh	r2, [r7, #36]	@ 0x24
 8002bd0:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8002bd2:	68fb      	ldr	r3, [r7, #12]
 8002bd4:	2200      	movs	r2, #0
 8002bd6:	635a      	str	r2, [r3, #52]	@ 0x34
 8002bd8:	88f8      	ldrh	r0, [r7, #6]
 8002bda:	893a      	ldrh	r2, [r7, #8]
 8002bdc:	8979      	ldrh	r1, [r7, #10]
 8002bde:	697b      	ldr	r3, [r7, #20]
 8002be0:	9301      	str	r3, [sp, #4]
 8002be2:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8002be4:	9300      	str	r3, [sp, #0]
 8002be6:	4603      	mov	r3, r0
 8002be8:	68f8      	ldr	r0, [r7, #12]
 8002bea:	f000 f913 	bl	8002e14 <I2C_RequestMemoryRead>
 8002bee:	4603      	mov	r3, r0
 8002bf0:	2b00      	cmp	r3, #0
 8002bf2:	d005      	beq.n	8002c00 <HAL_I2C_Mem_Read+0xc8>
 8002bf4:	68fb      	ldr	r3, [r7, #12]
 8002bf6:	2200      	movs	r2, #0
 8002bf8:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8002bfc:	2301      	movs	r3, #1
 8002bfe:	e0ad      	b.n	8002d5c <HAL_I2C_Mem_Read+0x224>
 8002c00:	68fb      	ldr	r3, [r7, #12]
 8002c02:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8002c04:	b29b      	uxth	r3, r3
 8002c06:	2bff      	cmp	r3, #255	@ 0xff
 8002c08:	d90e      	bls.n	8002c28 <HAL_I2C_Mem_Read+0xf0>
 8002c0a:	68fb      	ldr	r3, [r7, #12]
 8002c0c:	2201      	movs	r2, #1
 8002c0e:	851a      	strh	r2, [r3, #40]	@ 0x28
 8002c10:	68fb      	ldr	r3, [r7, #12]
 8002c12:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8002c14:	b2da      	uxtb	r2, r3
 8002c16:	8979      	ldrh	r1, [r7, #10]
 8002c18:	4b52      	ldr	r3, [pc, #328]	@ (8002d64 <HAL_I2C_Mem_Read+0x22c>)
 8002c1a:	9300      	str	r3, [sp, #0]
 8002c1c:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 8002c20:	68f8      	ldr	r0, [r7, #12]
 8002c22:	f000 fb33 	bl	800328c <I2C_TransferConfig>
 8002c26:	e00f      	b.n	8002c48 <HAL_I2C_Mem_Read+0x110>
 8002c28:	68fb      	ldr	r3, [r7, #12]
 8002c2a:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8002c2c:	b29a      	uxth	r2, r3
 8002c2e:	68fb      	ldr	r3, [r7, #12]
 8002c30:	851a      	strh	r2, [r3, #40]	@ 0x28
 8002c32:	68fb      	ldr	r3, [r7, #12]
 8002c34:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8002c36:	b2da      	uxtb	r2, r3
 8002c38:	8979      	ldrh	r1, [r7, #10]
 8002c3a:	4b4a      	ldr	r3, [pc, #296]	@ (8002d64 <HAL_I2C_Mem_Read+0x22c>)
 8002c3c:	9300      	str	r3, [sp, #0]
 8002c3e:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
 8002c42:	68f8      	ldr	r0, [r7, #12]
 8002c44:	f000 fb22 	bl	800328c <I2C_TransferConfig>
 8002c48:	697b      	ldr	r3, [r7, #20]
 8002c4a:	9300      	str	r3, [sp, #0]
 8002c4c:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8002c4e:	2200      	movs	r2, #0
 8002c50:	2104      	movs	r1, #4
 8002c52:	68f8      	ldr	r0, [r7, #12]
 8002c54:	f000 f956 	bl	8002f04 <I2C_WaitOnFlagUntilTimeout>
 8002c58:	4603      	mov	r3, r0
 8002c5a:	2b00      	cmp	r3, #0
 8002c5c:	d001      	beq.n	8002c62 <HAL_I2C_Mem_Read+0x12a>
 8002c5e:	2301      	movs	r3, #1
 8002c60:	e07c      	b.n	8002d5c <HAL_I2C_Mem_Read+0x224>
 8002c62:	68fb      	ldr	r3, [r7, #12]
 8002c64:	681b      	ldr	r3, [r3, #0]
 8002c66:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8002c68:	68fb      	ldr	r3, [r7, #12]
 8002c6a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002c6c:	b2d2      	uxtb	r2, r2
 8002c6e:	701a      	strb	r2, [r3, #0]
 8002c70:	68fb      	ldr	r3, [r7, #12]
 8002c72:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002c74:	1c5a      	adds	r2, r3, #1
 8002c76:	68fb      	ldr	r3, [r7, #12]
 8002c78:	625a      	str	r2, [r3, #36]	@ 0x24
 8002c7a:	68fb      	ldr	r3, [r7, #12]
 8002c7c:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8002c7e:	3b01      	subs	r3, #1
 8002c80:	b29a      	uxth	r2, r3
 8002c82:	68fb      	ldr	r3, [r7, #12]
 8002c84:	851a      	strh	r2, [r3, #40]	@ 0x28
 8002c86:	68fb      	ldr	r3, [r7, #12]
 8002c88:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8002c8a:	b29b      	uxth	r3, r3
 8002c8c:	3b01      	subs	r3, #1
 8002c8e:	b29a      	uxth	r2, r3
 8002c90:	68fb      	ldr	r3, [r7, #12]
 8002c92:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8002c94:	68fb      	ldr	r3, [r7, #12]
 8002c96:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8002c98:	b29b      	uxth	r3, r3
 8002c9a:	2b00      	cmp	r3, #0
 8002c9c:	d034      	beq.n	8002d08 <HAL_I2C_Mem_Read+0x1d0>
 8002c9e:	68fb      	ldr	r3, [r7, #12]
 8002ca0:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8002ca2:	2b00      	cmp	r3, #0
 8002ca4:	d130      	bne.n	8002d08 <HAL_I2C_Mem_Read+0x1d0>
 8002ca6:	697b      	ldr	r3, [r7, #20]
 8002ca8:	9300      	str	r3, [sp, #0]
 8002caa:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8002cac:	2200      	movs	r2, #0
 8002cae:	2180      	movs	r1, #128	@ 0x80
 8002cb0:	68f8      	ldr	r0, [r7, #12]
 8002cb2:	f000 f927 	bl	8002f04 <I2C_WaitOnFlagUntilTimeout>
 8002cb6:	4603      	mov	r3, r0
 8002cb8:	2b00      	cmp	r3, #0
 8002cba:	d001      	beq.n	8002cc0 <HAL_I2C_Mem_Read+0x188>
 8002cbc:	2301      	movs	r3, #1
 8002cbe:	e04d      	b.n	8002d5c <HAL_I2C_Mem_Read+0x224>
 8002cc0:	68fb      	ldr	r3, [r7, #12]
 8002cc2:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8002cc4:	b29b      	uxth	r3, r3
 8002cc6:	2bff      	cmp	r3, #255	@ 0xff
 8002cc8:	d90e      	bls.n	8002ce8 <HAL_I2C_Mem_Read+0x1b0>
 8002cca:	68fb      	ldr	r3, [r7, #12]
 8002ccc:	2201      	movs	r2, #1
 8002cce:	851a      	strh	r2, [r3, #40]	@ 0x28
 8002cd0:	68fb      	ldr	r3, [r7, #12]
 8002cd2:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8002cd4:	b2da      	uxtb	r2, r3
 8002cd6:	8979      	ldrh	r1, [r7, #10]
 8002cd8:	2300      	movs	r3, #0
 8002cda:	9300      	str	r3, [sp, #0]
 8002cdc:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 8002ce0:	68f8      	ldr	r0, [r7, #12]
 8002ce2:	f000 fad3 	bl	800328c <I2C_TransferConfig>
 8002ce6:	e00f      	b.n	8002d08 <HAL_I2C_Mem_Read+0x1d0>
 8002ce8:	68fb      	ldr	r3, [r7, #12]
 8002cea:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8002cec:	b29a      	uxth	r2, r3
 8002cee:	68fb      	ldr	r3, [r7, #12]
 8002cf0:	851a      	strh	r2, [r3, #40]	@ 0x28
 8002cf2:	68fb      	ldr	r3, [r7, #12]
 8002cf4:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8002cf6:	b2da      	uxtb	r2, r3
 8002cf8:	8979      	ldrh	r1, [r7, #10]
 8002cfa:	2300      	movs	r3, #0
 8002cfc:	9300      	str	r3, [sp, #0]
 8002cfe:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
 8002d02:	68f8      	ldr	r0, [r7, #12]
 8002d04:	f000 fac2 	bl	800328c <I2C_TransferConfig>
 8002d08:	68fb      	ldr	r3, [r7, #12]
 8002d0a:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8002d0c:	b29b      	uxth	r3, r3
 8002d0e:	2b00      	cmp	r3, #0
 8002d10:	d19a      	bne.n	8002c48 <HAL_I2C_Mem_Read+0x110>
 8002d12:	697a      	ldr	r2, [r7, #20]
 8002d14:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 8002d16:	68f8      	ldr	r0, [r7, #12]
 8002d18:	f000 f994 	bl	8003044 <I2C_WaitOnSTOPFlagUntilTimeout>
 8002d1c:	4603      	mov	r3, r0
 8002d1e:	2b00      	cmp	r3, #0
 8002d20:	d001      	beq.n	8002d26 <HAL_I2C_Mem_Read+0x1ee>
 8002d22:	2301      	movs	r3, #1
 8002d24:	e01a      	b.n	8002d5c <HAL_I2C_Mem_Read+0x224>
 8002d26:	68fb      	ldr	r3, [r7, #12]
 8002d28:	681b      	ldr	r3, [r3, #0]
 8002d2a:	2220      	movs	r2, #32
 8002d2c:	61da      	str	r2, [r3, #28]
 8002d2e:	68fb      	ldr	r3, [r7, #12]
 8002d30:	681b      	ldr	r3, [r3, #0]
 8002d32:	6859      	ldr	r1, [r3, #4]
 8002d34:	68fb      	ldr	r3, [r7, #12]
 8002d36:	681a      	ldr	r2, [r3, #0]
 8002d38:	4b0b      	ldr	r3, [pc, #44]	@ (8002d68 <HAL_I2C_Mem_Read+0x230>)
 8002d3a:	400b      	ands	r3, r1
 8002d3c:	6053      	str	r3, [r2, #4]
 8002d3e:	68fb      	ldr	r3, [r7, #12]
 8002d40:	2220      	movs	r2, #32
 8002d42:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8002d46:	68fb      	ldr	r3, [r7, #12]
 8002d48:	2200      	movs	r2, #0
 8002d4a:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8002d4e:	68fb      	ldr	r3, [r7, #12]
 8002d50:	2200      	movs	r2, #0
 8002d52:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8002d56:	2300      	movs	r3, #0
 8002d58:	e000      	b.n	8002d5c <HAL_I2C_Mem_Read+0x224>
 8002d5a:	2302      	movs	r3, #2
 8002d5c:	4618      	mov	r0, r3
 8002d5e:	3718      	adds	r7, #24
 8002d60:	46bd      	mov	sp, r7
 8002d62:	bd80      	pop	{r7, pc}
 8002d64:	80002400 	.word	0x80002400
 8002d68:	fe00e800 	.word	0xfe00e800

08002d6c <I2C_RequestMemoryWrite>:
 8002d6c:	b580      	push	{r7, lr}
 8002d6e:	b086      	sub	sp, #24
 8002d70:	af02      	add	r7, sp, #8
 8002d72:	60f8      	str	r0, [r7, #12]
 8002d74:	4608      	mov	r0, r1
 8002d76:	4611      	mov	r1, r2
 8002d78:	461a      	mov	r2, r3
 8002d7a:	4603      	mov	r3, r0
 8002d7c:	817b      	strh	r3, [r7, #10]
 8002d7e:	460b      	mov	r3, r1
 8002d80:	813b      	strh	r3, [r7, #8]
 8002d82:	4613      	mov	r3, r2
 8002d84:	80fb      	strh	r3, [r7, #6]
 8002d86:	88fb      	ldrh	r3, [r7, #6]
 8002d88:	b2da      	uxtb	r2, r3
 8002d8a:	8979      	ldrh	r1, [r7, #10]
 8002d8c:	4b20      	ldr	r3, [pc, #128]	@ (8002e10 <I2C_RequestMemoryWrite+0xa4>)
 8002d8e:	9300      	str	r3, [sp, #0]
 8002d90:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 8002d94:	68f8      	ldr	r0, [r7, #12]
 8002d96:	f000 fa79 	bl	800328c <I2C_TransferConfig>
 8002d9a:	69fa      	ldr	r2, [r7, #28]
 8002d9c:	69b9      	ldr	r1, [r7, #24]
 8002d9e:	68f8      	ldr	r0, [r7, #12]
 8002da0:	f000 f909 	bl	8002fb6 <I2C_WaitOnTXISFlagUntilTimeout>
 8002da4:	4603      	mov	r3, r0
 8002da6:	2b00      	cmp	r3, #0
 8002da8:	d001      	beq.n	8002dae <I2C_RequestMemoryWrite+0x42>
 8002daa:	2301      	movs	r3, #1
 8002dac:	e02c      	b.n	8002e08 <I2C_RequestMemoryWrite+0x9c>
 8002dae:	88fb      	ldrh	r3, [r7, #6]
 8002db0:	2b01      	cmp	r3, #1
 8002db2:	d105      	bne.n	8002dc0 <I2C_RequestMemoryWrite+0x54>
 8002db4:	893b      	ldrh	r3, [r7, #8]
 8002db6:	b2da      	uxtb	r2, r3
 8002db8:	68fb      	ldr	r3, [r7, #12]
 8002dba:	681b      	ldr	r3, [r3, #0]
 8002dbc:	629a      	str	r2, [r3, #40]	@ 0x28
 8002dbe:	e015      	b.n	8002dec <I2C_RequestMemoryWrite+0x80>
 8002dc0:	893b      	ldrh	r3, [r7, #8]
 8002dc2:	0a1b      	lsrs	r3, r3, #8
 8002dc4:	b29b      	uxth	r3, r3
 8002dc6:	b2da      	uxtb	r2, r3
 8002dc8:	68fb      	ldr	r3, [r7, #12]
 8002dca:	681b      	ldr	r3, [r3, #0]
 8002dcc:	629a      	str	r2, [r3, #40]	@ 0x28
 8002dce:	69fa      	ldr	r2, [r7, #28]
 8002dd0:	69b9      	ldr	r1, [r7, #24]
 8002dd2:	68f8      	ldr	r0, [r7, #12]
 8002dd4:	f000 f8ef 	bl	8002fb6 <I2C_WaitOnTXISFlagUntilTimeout>
 8002dd8:	4603      	mov	r3, r0
 8002dda:	2b00      	cmp	r3, #0
 8002ddc:	d001      	beq.n	8002de2 <I2C_RequestMemoryWrite+0x76>
 8002dde:	2301      	movs	r3, #1
 8002de0:	e012      	b.n	8002e08 <I2C_RequestMemoryWrite+0x9c>
 8002de2:	893b      	ldrh	r3, [r7, #8]
 8002de4:	b2da      	uxtb	r2, r3
 8002de6:	68fb      	ldr	r3, [r7, #12]
 8002de8:	681b      	ldr	r3, [r3, #0]
 8002dea:	629a      	str	r2, [r3, #40]	@ 0x28
 8002dec:	69fb      	ldr	r3, [r7, #28]
 8002dee:	9300      	str	r3, [sp, #0]
 8002df0:	69bb      	ldr	r3, [r7, #24]
 8002df2:	2200      	movs	r2, #0
 8002df4:	2180      	movs	r1, #128	@ 0x80
 8002df6:	68f8      	ldr	r0, [r7, #12]
 8002df8:	f000 f884 	bl	8002f04 <I2C_WaitOnFlagUntilTimeout>
 8002dfc:	4603      	mov	r3, r0
 8002dfe:	2b00      	cmp	r3, #0
 8002e00:	d001      	beq.n	8002e06 <I2C_RequestMemoryWrite+0x9a>
 8002e02:	2301      	movs	r3, #1
 8002e04:	e000      	b.n	8002e08 <I2C_RequestMemoryWrite+0x9c>
 8002e06:	2300      	movs	r3, #0
 8002e08:	4618      	mov	r0, r3
 8002e0a:	3710      	adds	r7, #16
 8002e0c:	46bd      	mov	sp, r7
 8002e0e:	bd80      	pop	{r7, pc}
 8002e10:	80002000 	.word	0x80002000

08002e14 <I2C_RequestMemoryRead>:
 8002e14:	b580      	push	{r7, lr}
 8002e16:	b086      	sub	sp, #24
 8002e18:	af02      	add	r7, sp, #8
 8002e1a:	60f8      	str	r0, [r7, #12]
 8002e1c:	4608      	mov	r0, r1
 8002e1e:	4611      	mov	r1, r2
 8002e20:	461a      	mov	r2, r3
 8002e22:	4603      	mov	r3, r0
 8002e24:	817b      	strh	r3, [r7, #10]
 8002e26:	460b      	mov	r3, r1
 8002e28:	813b      	strh	r3, [r7, #8]
 8002e2a:	4613      	mov	r3, r2
 8002e2c:	80fb      	strh	r3, [r7, #6]
 8002e2e:	88fb      	ldrh	r3, [r7, #6]
 8002e30:	b2da      	uxtb	r2, r3
 8002e32:	8979      	ldrh	r1, [r7, #10]
 8002e34:	4b20      	ldr	r3, [pc, #128]	@ (8002eb8 <I2C_RequestMemoryRead+0xa4>)
 8002e36:	9300      	str	r3, [sp, #0]
 8002e38:	2300      	movs	r3, #0
 8002e3a:	68f8      	ldr	r0, [r7, #12]
 8002e3c:	f000 fa26 	bl	800328c <I2C_TransferConfig>
 8002e40:	69fa      	ldr	r2, [r7, #28]
 8002e42:	69b9      	ldr	r1, [r7, #24]
 8002e44:	68f8      	ldr	r0, [r7, #12]
 8002e46:	f000 f8b6 	bl	8002fb6 <I2C_WaitOnTXISFlagUntilTimeout>
 8002e4a:	4603      	mov	r3, r0
 8002e4c:	2b00      	cmp	r3, #0
 8002e4e:	d001      	beq.n	8002e54 <I2C_RequestMemoryRead+0x40>
 8002e50:	2301      	movs	r3, #1
 8002e52:	e02c      	b.n	8002eae <I2C_RequestMemoryRead+0x9a>
 8002e54:	88fb      	ldrh	r3, [r7, #6]
 8002e56:	2b01      	cmp	r3, #1
 8002e58:	d105      	bne.n	8002e66 <I2C_RequestMemoryRead+0x52>
 8002e5a:	893b      	ldrh	r3, [r7, #8]
 8002e5c:	b2da      	uxtb	r2, r3
 8002e5e:	68fb      	ldr	r3, [r7, #12]
 8002e60:	681b      	ldr	r3, [r3, #0]
 8002e62:	629a      	str	r2, [r3, #40]	@ 0x28
 8002e64:	e015      	b.n	8002e92 <I2C_RequestMemoryRead+0x7e>
 8002e66:	893b      	ldrh	r3, [r7, #8]
 8002e68:	0a1b      	lsrs	r3, r3, #8
 8002e6a:	b29b      	uxth	r3, r3
 8002e6c:	b2da      	uxtb	r2, r3
 8002e6e:	68fb      	ldr	r3, [r7, #12]
 8002e70:	681b      	ldr	r3, [r3, #0]
 8002e72:	629a      	str	r2, [r3, #40]	@ 0x28
 8002e74:	69fa      	ldr	r2, [r7, #28]
 8002e76:	69b9      	ldr	r1, [r7, #24]
 8002e78:	68f8      	ldr	r0, [r7, #12]
 8002e7a:	f000 f89c 	bl	8002fb6 <I2C_WaitOnTXISFlagUntilTimeout>
 8002e7e:	4603      	mov	r3, r0
 8002e80:	2b00      	cmp	r3, #0
 8002e82:	d001      	beq.n	8002e88 <I2C_RequestMemoryRead+0x74>
 8002e84:	2301      	movs	r3, #1
 8002e86:	e012      	b.n	8002eae <I2C_RequestMemoryRead+0x9a>
 8002e88:	893b      	ldrh	r3, [r7, #8]
 8002e8a:	b2da      	uxtb	r2, r3
 8002e8c:	68fb      	ldr	r3, [r7, #12]
 8002e8e:	681b      	ldr	r3, [r3, #0]
 8002e90:	629a      	str	r2, [r3, #40]	@ 0x28
 8002e92:	69fb      	ldr	r3, [r7, #28]
 8002e94:	9300      	str	r3, [sp, #0]
 8002e96:	69bb      	ldr	r3, [r7, #24]
 8002e98:	2200      	movs	r2, #0
 8002e9a:	2140      	movs	r1, #64	@ 0x40
 8002e9c:	68f8      	ldr	r0, [r7, #12]
 8002e9e:	f000 f831 	bl	8002f04 <I2C_WaitOnFlagUntilTimeout>
 8002ea2:	4603      	mov	r3, r0
 8002ea4:	2b00      	cmp	r3, #0
 8002ea6:	d001      	beq.n	8002eac <I2C_RequestMemoryRead+0x98>
 8002ea8:	2301      	movs	r3, #1
 8002eaa:	e000      	b.n	8002eae <I2C_RequestMemoryRead+0x9a>
 8002eac:	2300      	movs	r3, #0
 8002eae:	4618      	mov	r0, r3
 8002eb0:	3710      	adds	r7, #16
 8002eb2:	46bd      	mov	sp, r7
 8002eb4:	bd80      	pop	{r7, pc}
 8002eb6:	bf00      	nop
 8002eb8:	80002000 	.word	0x80002000

08002ebc <I2C_Flush_TXDR>:
 8002ebc:	b480      	push	{r7}
 8002ebe:	b083      	sub	sp, #12
 8002ec0:	af00      	add	r7, sp, #0
 8002ec2:	6078      	str	r0, [r7, #4]
 8002ec4:	687b      	ldr	r3, [r7, #4]
 8002ec6:	681b      	ldr	r3, [r3, #0]
 8002ec8:	699b      	ldr	r3, [r3, #24]
 8002eca:	f003 0302 	and.w	r3, r3, #2
 8002ece:	2b02      	cmp	r3, #2
 8002ed0:	d103      	bne.n	8002eda <I2C_Flush_TXDR+0x1e>
 8002ed2:	687b      	ldr	r3, [r7, #4]
 8002ed4:	681b      	ldr	r3, [r3, #0]
 8002ed6:	2200      	movs	r2, #0
 8002ed8:	629a      	str	r2, [r3, #40]	@ 0x28
 8002eda:	687b      	ldr	r3, [r7, #4]
 8002edc:	681b      	ldr	r3, [r3, #0]
 8002ede:	699b      	ldr	r3, [r3, #24]
 8002ee0:	f003 0301 	and.w	r3, r3, #1
 8002ee4:	2b01      	cmp	r3, #1
 8002ee6:	d007      	beq.n	8002ef8 <I2C_Flush_TXDR+0x3c>
 8002ee8:	687b      	ldr	r3, [r7, #4]
 8002eea:	681b      	ldr	r3, [r3, #0]
 8002eec:	699a      	ldr	r2, [r3, #24]
 8002eee:	687b      	ldr	r3, [r7, #4]
 8002ef0:	681b      	ldr	r3, [r3, #0]
 8002ef2:	f042 0201 	orr.w	r2, r2, #1
 8002ef6:	619a      	str	r2, [r3, #24]
 8002ef8:	bf00      	nop
 8002efa:	370c      	adds	r7, #12
 8002efc:	46bd      	mov	sp, r7
 8002efe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002f02:	4770      	bx	lr

08002f04 <I2C_WaitOnFlagUntilTimeout>:
 8002f04:	b580      	push	{r7, lr}
 8002f06:	b084      	sub	sp, #16
 8002f08:	af00      	add	r7, sp, #0
 8002f0a:	60f8      	str	r0, [r7, #12]
 8002f0c:	60b9      	str	r1, [r7, #8]
 8002f0e:	603b      	str	r3, [r7, #0]
 8002f10:	4613      	mov	r3, r2
 8002f12:	71fb      	strb	r3, [r7, #7]
 8002f14:	e03b      	b.n	8002f8e <I2C_WaitOnFlagUntilTimeout+0x8a>
 8002f16:	69ba      	ldr	r2, [r7, #24]
 8002f18:	6839      	ldr	r1, [r7, #0]
 8002f1a:	68f8      	ldr	r0, [r7, #12]
 8002f1c:	f000 f8d6 	bl	80030cc <I2C_IsErrorOccurred>
 8002f20:	4603      	mov	r3, r0
 8002f22:	2b00      	cmp	r3, #0
 8002f24:	d001      	beq.n	8002f2a <I2C_WaitOnFlagUntilTimeout+0x26>
 8002f26:	2301      	movs	r3, #1
 8002f28:	e041      	b.n	8002fae <I2C_WaitOnFlagUntilTimeout+0xaa>
 8002f2a:	683b      	ldr	r3, [r7, #0]
 8002f2c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002f30:	d02d      	beq.n	8002f8e <I2C_WaitOnFlagUntilTimeout+0x8a>
 8002f32:	f7ff f909 	bl	8002148 <HAL_GetTick>
 8002f36:	4602      	mov	r2, r0
 8002f38:	69bb      	ldr	r3, [r7, #24]
 8002f3a:	1ad3      	subs	r3, r2, r3
 8002f3c:	683a      	ldr	r2, [r7, #0]
 8002f3e:	429a      	cmp	r2, r3
 8002f40:	d302      	bcc.n	8002f48 <I2C_WaitOnFlagUntilTimeout+0x44>
 8002f42:	683b      	ldr	r3, [r7, #0]
 8002f44:	2b00      	cmp	r3, #0
 8002f46:	d122      	bne.n	8002f8e <I2C_WaitOnFlagUntilTimeout+0x8a>
 8002f48:	68fb      	ldr	r3, [r7, #12]
 8002f4a:	681b      	ldr	r3, [r3, #0]
 8002f4c:	699a      	ldr	r2, [r3, #24]
 8002f4e:	68bb      	ldr	r3, [r7, #8]
 8002f50:	4013      	ands	r3, r2
 8002f52:	68ba      	ldr	r2, [r7, #8]
 8002f54:	429a      	cmp	r2, r3
 8002f56:	bf0c      	ite	eq
 8002f58:	2301      	moveq	r3, #1
 8002f5a:	2300      	movne	r3, #0
 8002f5c:	b2db      	uxtb	r3, r3
 8002f5e:	461a      	mov	r2, r3
 8002f60:	79fb      	ldrb	r3, [r7, #7]
 8002f62:	429a      	cmp	r2, r3
 8002f64:	d113      	bne.n	8002f8e <I2C_WaitOnFlagUntilTimeout+0x8a>
 8002f66:	68fb      	ldr	r3, [r7, #12]
 8002f68:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002f6a:	f043 0220 	orr.w	r2, r3, #32
 8002f6e:	68fb      	ldr	r3, [r7, #12]
 8002f70:	645a      	str	r2, [r3, #68]	@ 0x44
 8002f72:	68fb      	ldr	r3, [r7, #12]
 8002f74:	2220      	movs	r2, #32
 8002f76:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8002f7a:	68fb      	ldr	r3, [r7, #12]
 8002f7c:	2200      	movs	r2, #0
 8002f7e:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8002f82:	68fb      	ldr	r3, [r7, #12]
 8002f84:	2200      	movs	r2, #0
 8002f86:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8002f8a:	2301      	movs	r3, #1
 8002f8c:	e00f      	b.n	8002fae <I2C_WaitOnFlagUntilTimeout+0xaa>
 8002f8e:	68fb      	ldr	r3, [r7, #12]
 8002f90:	681b      	ldr	r3, [r3, #0]
 8002f92:	699a      	ldr	r2, [r3, #24]
 8002f94:	68bb      	ldr	r3, [r7, #8]
 8002f96:	4013      	ands	r3, r2
 8002f98:	68ba      	ldr	r2, [r7, #8]
 8002f9a:	429a      	cmp	r2, r3
 8002f9c:	bf0c      	ite	eq
 8002f9e:	2301      	moveq	r3, #1
 8002fa0:	2300      	movne	r3, #0
 8002fa2:	b2db      	uxtb	r3, r3
 8002fa4:	461a      	mov	r2, r3
 8002fa6:	79fb      	ldrb	r3, [r7, #7]
 8002fa8:	429a      	cmp	r2, r3
 8002faa:	d0b4      	beq.n	8002f16 <I2C_WaitOnFlagUntilTimeout+0x12>
 8002fac:	2300      	movs	r3, #0
 8002fae:	4618      	mov	r0, r3
 8002fb0:	3710      	adds	r7, #16
 8002fb2:	46bd      	mov	sp, r7
 8002fb4:	bd80      	pop	{r7, pc}

08002fb6 <I2C_WaitOnTXISFlagUntilTimeout>:
 8002fb6:	b580      	push	{r7, lr}
 8002fb8:	b084      	sub	sp, #16
 8002fba:	af00      	add	r7, sp, #0
 8002fbc:	60f8      	str	r0, [r7, #12]
 8002fbe:	60b9      	str	r1, [r7, #8]
 8002fc0:	607a      	str	r2, [r7, #4]
 8002fc2:	e033      	b.n	800302c <I2C_WaitOnTXISFlagUntilTimeout+0x76>
 8002fc4:	687a      	ldr	r2, [r7, #4]
 8002fc6:	68b9      	ldr	r1, [r7, #8]
 8002fc8:	68f8      	ldr	r0, [r7, #12]
 8002fca:	f000 f87f 	bl	80030cc <I2C_IsErrorOccurred>
 8002fce:	4603      	mov	r3, r0
 8002fd0:	2b00      	cmp	r3, #0
 8002fd2:	d001      	beq.n	8002fd8 <I2C_WaitOnTXISFlagUntilTimeout+0x22>
 8002fd4:	2301      	movs	r3, #1
 8002fd6:	e031      	b.n	800303c <I2C_WaitOnTXISFlagUntilTimeout+0x86>
 8002fd8:	68bb      	ldr	r3, [r7, #8]
 8002fda:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002fde:	d025      	beq.n	800302c <I2C_WaitOnTXISFlagUntilTimeout+0x76>
 8002fe0:	f7ff f8b2 	bl	8002148 <HAL_GetTick>
 8002fe4:	4602      	mov	r2, r0
 8002fe6:	687b      	ldr	r3, [r7, #4]
 8002fe8:	1ad3      	subs	r3, r2, r3
 8002fea:	68ba      	ldr	r2, [r7, #8]
 8002fec:	429a      	cmp	r2, r3
 8002fee:	d302      	bcc.n	8002ff6 <I2C_WaitOnTXISFlagUntilTimeout+0x40>
 8002ff0:	68bb      	ldr	r3, [r7, #8]
 8002ff2:	2b00      	cmp	r3, #0
 8002ff4:	d11a      	bne.n	800302c <I2C_WaitOnTXISFlagUntilTimeout+0x76>
 8002ff6:	68fb      	ldr	r3, [r7, #12]
 8002ff8:	681b      	ldr	r3, [r3, #0]
 8002ffa:	699b      	ldr	r3, [r3, #24]
 8002ffc:	f003 0302 	and.w	r3, r3, #2
 8003000:	2b02      	cmp	r3, #2
 8003002:	d013      	beq.n	800302c <I2C_WaitOnTXISFlagUntilTimeout+0x76>
 8003004:	68fb      	ldr	r3, [r7, #12]
 8003006:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003008:	f043 0220 	orr.w	r2, r3, #32
 800300c:	68fb      	ldr	r3, [r7, #12]
 800300e:	645a      	str	r2, [r3, #68]	@ 0x44
 8003010:	68fb      	ldr	r3, [r7, #12]
 8003012:	2220      	movs	r2, #32
 8003014:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8003018:	68fb      	ldr	r3, [r7, #12]
 800301a:	2200      	movs	r2, #0
 800301c:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8003020:	68fb      	ldr	r3, [r7, #12]
 8003022:	2200      	movs	r2, #0
 8003024:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8003028:	2301      	movs	r3, #1
 800302a:	e007      	b.n	800303c <I2C_WaitOnTXISFlagUntilTimeout+0x86>
 800302c:	68fb      	ldr	r3, [r7, #12]
 800302e:	681b      	ldr	r3, [r3, #0]
 8003030:	699b      	ldr	r3, [r3, #24]
 8003032:	f003 0302 	and.w	r3, r3, #2
 8003036:	2b02      	cmp	r3, #2
 8003038:	d1c4      	bne.n	8002fc4 <I2C_WaitOnTXISFlagUntilTimeout+0xe>
 800303a:	2300      	movs	r3, #0
 800303c:	4618      	mov	r0, r3
 800303e:	3710      	adds	r7, #16
 8003040:	46bd      	mov	sp, r7
 8003042:	bd80      	pop	{r7, pc}

08003044 <I2C_WaitOnSTOPFlagUntilTimeout>:
 8003044:	b580      	push	{r7, lr}
 8003046:	b084      	sub	sp, #16
 8003048:	af00      	add	r7, sp, #0
 800304a:	60f8      	str	r0, [r7, #12]
 800304c:	60b9      	str	r1, [r7, #8]
 800304e:	607a      	str	r2, [r7, #4]
 8003050:	e02f      	b.n	80030b2 <I2C_WaitOnSTOPFlagUntilTimeout+0x6e>
 8003052:	687a      	ldr	r2, [r7, #4]
 8003054:	68b9      	ldr	r1, [r7, #8]
 8003056:	68f8      	ldr	r0, [r7, #12]
 8003058:	f000 f838 	bl	80030cc <I2C_IsErrorOccurred>
 800305c:	4603      	mov	r3, r0
 800305e:	2b00      	cmp	r3, #0
 8003060:	d001      	beq.n	8003066 <I2C_WaitOnSTOPFlagUntilTimeout+0x22>
 8003062:	2301      	movs	r3, #1
 8003064:	e02d      	b.n	80030c2 <I2C_WaitOnSTOPFlagUntilTimeout+0x7e>
 8003066:	f7ff f86f 	bl	8002148 <HAL_GetTick>
 800306a:	4602      	mov	r2, r0
 800306c:	687b      	ldr	r3, [r7, #4]
 800306e:	1ad3      	subs	r3, r2, r3
 8003070:	68ba      	ldr	r2, [r7, #8]
 8003072:	429a      	cmp	r2, r3
 8003074:	d302      	bcc.n	800307c <I2C_WaitOnSTOPFlagUntilTimeout+0x38>
 8003076:	68bb      	ldr	r3, [r7, #8]
 8003078:	2b00      	cmp	r3, #0
 800307a:	d11a      	bne.n	80030b2 <I2C_WaitOnSTOPFlagUntilTimeout+0x6e>
 800307c:	68fb      	ldr	r3, [r7, #12]
 800307e:	681b      	ldr	r3, [r3, #0]
 8003080:	699b      	ldr	r3, [r3, #24]
 8003082:	f003 0320 	and.w	r3, r3, #32
 8003086:	2b20      	cmp	r3, #32
 8003088:	d013      	beq.n	80030b2 <I2C_WaitOnSTOPFlagUntilTimeout+0x6e>
 800308a:	68fb      	ldr	r3, [r7, #12]
 800308c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800308e:	f043 0220 	orr.w	r2, r3, #32
 8003092:	68fb      	ldr	r3, [r7, #12]
 8003094:	645a      	str	r2, [r3, #68]	@ 0x44
 8003096:	68fb      	ldr	r3, [r7, #12]
 8003098:	2220      	movs	r2, #32
 800309a:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800309e:	68fb      	ldr	r3, [r7, #12]
 80030a0:	2200      	movs	r2, #0
 80030a2:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80030a6:	68fb      	ldr	r3, [r7, #12]
 80030a8:	2200      	movs	r2, #0
 80030aa:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 80030ae:	2301      	movs	r3, #1
 80030b0:	e007      	b.n	80030c2 <I2C_WaitOnSTOPFlagUntilTimeout+0x7e>
 80030b2:	68fb      	ldr	r3, [r7, #12]
 80030b4:	681b      	ldr	r3, [r3, #0]
 80030b6:	699b      	ldr	r3, [r3, #24]
 80030b8:	f003 0320 	and.w	r3, r3, #32
 80030bc:	2b20      	cmp	r3, #32
 80030be:	d1c8      	bne.n	8003052 <I2C_WaitOnSTOPFlagUntilTimeout+0xe>
 80030c0:	2300      	movs	r3, #0
 80030c2:	4618      	mov	r0, r3
 80030c4:	3710      	adds	r7, #16
 80030c6:	46bd      	mov	sp, r7
 80030c8:	bd80      	pop	{r7, pc}
	...

080030cc <I2C_IsErrorOccurred>:
 80030cc:	b580      	push	{r7, lr}
 80030ce:	b08a      	sub	sp, #40	@ 0x28
 80030d0:	af00      	add	r7, sp, #0
 80030d2:	60f8      	str	r0, [r7, #12]
 80030d4:	60b9      	str	r1, [r7, #8]
 80030d6:	607a      	str	r2, [r7, #4]
 80030d8:	2300      	movs	r3, #0
 80030da:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 80030de:	68fb      	ldr	r3, [r7, #12]
 80030e0:	681b      	ldr	r3, [r3, #0]
 80030e2:	699b      	ldr	r3, [r3, #24]
 80030e4:	61bb      	str	r3, [r7, #24]
 80030e6:	2300      	movs	r3, #0
 80030e8:	623b      	str	r3, [r7, #32]
 80030ea:	687b      	ldr	r3, [r7, #4]
 80030ec:	61fb      	str	r3, [r7, #28]
 80030ee:	69bb      	ldr	r3, [r7, #24]
 80030f0:	f003 0310 	and.w	r3, r3, #16
 80030f4:	2b00      	cmp	r3, #0
 80030f6:	d068      	beq.n	80031ca <I2C_IsErrorOccurred+0xfe>
 80030f8:	68fb      	ldr	r3, [r7, #12]
 80030fa:	681b      	ldr	r3, [r3, #0]
 80030fc:	2210      	movs	r2, #16
 80030fe:	61da      	str	r2, [r3, #28]
 8003100:	e049      	b.n	8003196 <I2C_IsErrorOccurred+0xca>
 8003102:	68bb      	ldr	r3, [r7, #8]
 8003104:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003108:	d045      	beq.n	8003196 <I2C_IsErrorOccurred+0xca>
 800310a:	f7ff f81d 	bl	8002148 <HAL_GetTick>
 800310e:	4602      	mov	r2, r0
 8003110:	69fb      	ldr	r3, [r7, #28]
 8003112:	1ad3      	subs	r3, r2, r3
 8003114:	68ba      	ldr	r2, [r7, #8]
 8003116:	429a      	cmp	r2, r3
 8003118:	d302      	bcc.n	8003120 <I2C_IsErrorOccurred+0x54>
 800311a:	68bb      	ldr	r3, [r7, #8]
 800311c:	2b00      	cmp	r3, #0
 800311e:	d13a      	bne.n	8003196 <I2C_IsErrorOccurred+0xca>
 8003120:	68fb      	ldr	r3, [r7, #12]
 8003122:	681b      	ldr	r3, [r3, #0]
 8003124:	685b      	ldr	r3, [r3, #4]
 8003126:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 800312a:	617b      	str	r3, [r7, #20]
 800312c:	68fb      	ldr	r3, [r7, #12]
 800312e:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 8003132:	74fb      	strb	r3, [r7, #19]
 8003134:	68fb      	ldr	r3, [r7, #12]
 8003136:	681b      	ldr	r3, [r3, #0]
 8003138:	699b      	ldr	r3, [r3, #24]
 800313a:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 800313e:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8003142:	d121      	bne.n	8003188 <I2C_IsErrorOccurred+0xbc>
 8003144:	697b      	ldr	r3, [r7, #20]
 8003146:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 800314a:	d01d      	beq.n	8003188 <I2C_IsErrorOccurred+0xbc>
 800314c:	7cfb      	ldrb	r3, [r7, #19]
 800314e:	2b20      	cmp	r3, #32
 8003150:	d01a      	beq.n	8003188 <I2C_IsErrorOccurred+0xbc>
 8003152:	68fb      	ldr	r3, [r7, #12]
 8003154:	681b      	ldr	r3, [r3, #0]
 8003156:	685a      	ldr	r2, [r3, #4]
 8003158:	68fb      	ldr	r3, [r7, #12]
 800315a:	681b      	ldr	r3, [r3, #0]
 800315c:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8003160:	605a      	str	r2, [r3, #4]
 8003162:	f7fe fff1 	bl	8002148 <HAL_GetTick>
 8003166:	61f8      	str	r0, [r7, #28]
 8003168:	e00e      	b.n	8003188 <I2C_IsErrorOccurred+0xbc>
 800316a:	f7fe ffed 	bl	8002148 <HAL_GetTick>
 800316e:	4602      	mov	r2, r0
 8003170:	69fb      	ldr	r3, [r7, #28]
 8003172:	1ad3      	subs	r3, r2, r3
 8003174:	2b19      	cmp	r3, #25
 8003176:	d907      	bls.n	8003188 <I2C_IsErrorOccurred+0xbc>
 8003178:	6a3b      	ldr	r3, [r7, #32]
 800317a:	f043 0320 	orr.w	r3, r3, #32
 800317e:	623b      	str	r3, [r7, #32]
 8003180:	2301      	movs	r3, #1
 8003182:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 8003186:	e006      	b.n	8003196 <I2C_IsErrorOccurred+0xca>
 8003188:	68fb      	ldr	r3, [r7, #12]
 800318a:	681b      	ldr	r3, [r3, #0]
 800318c:	699b      	ldr	r3, [r3, #24]
 800318e:	f003 0320 	and.w	r3, r3, #32
 8003192:	2b20      	cmp	r3, #32
 8003194:	d1e9      	bne.n	800316a <I2C_IsErrorOccurred+0x9e>
 8003196:	68fb      	ldr	r3, [r7, #12]
 8003198:	681b      	ldr	r3, [r3, #0]
 800319a:	699b      	ldr	r3, [r3, #24]
 800319c:	f003 0320 	and.w	r3, r3, #32
 80031a0:	2b20      	cmp	r3, #32
 80031a2:	d003      	beq.n	80031ac <I2C_IsErrorOccurred+0xe0>
 80031a4:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 80031a8:	2b00      	cmp	r3, #0
 80031aa:	d0aa      	beq.n	8003102 <I2C_IsErrorOccurred+0x36>
 80031ac:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 80031b0:	2b00      	cmp	r3, #0
 80031b2:	d103      	bne.n	80031bc <I2C_IsErrorOccurred+0xf0>
 80031b4:	68fb      	ldr	r3, [r7, #12]
 80031b6:	681b      	ldr	r3, [r3, #0]
 80031b8:	2220      	movs	r2, #32
 80031ba:	61da      	str	r2, [r3, #28]
 80031bc:	6a3b      	ldr	r3, [r7, #32]
 80031be:	f043 0304 	orr.w	r3, r3, #4
 80031c2:	623b      	str	r3, [r7, #32]
 80031c4:	2301      	movs	r3, #1
 80031c6:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 80031ca:	68fb      	ldr	r3, [r7, #12]
 80031cc:	681b      	ldr	r3, [r3, #0]
 80031ce:	699b      	ldr	r3, [r3, #24]
 80031d0:	61bb      	str	r3, [r7, #24]
 80031d2:	69bb      	ldr	r3, [r7, #24]
 80031d4:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80031d8:	2b00      	cmp	r3, #0
 80031da:	d00b      	beq.n	80031f4 <I2C_IsErrorOccurred+0x128>
 80031dc:	6a3b      	ldr	r3, [r7, #32]
 80031de:	f043 0301 	orr.w	r3, r3, #1
 80031e2:	623b      	str	r3, [r7, #32]
 80031e4:	68fb      	ldr	r3, [r7, #12]
 80031e6:	681b      	ldr	r3, [r3, #0]
 80031e8:	f44f 7280 	mov.w	r2, #256	@ 0x100
 80031ec:	61da      	str	r2, [r3, #28]
 80031ee:	2301      	movs	r3, #1
 80031f0:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 80031f4:	69bb      	ldr	r3, [r7, #24]
 80031f6:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 80031fa:	2b00      	cmp	r3, #0
 80031fc:	d00b      	beq.n	8003216 <I2C_IsErrorOccurred+0x14a>
 80031fe:	6a3b      	ldr	r3, [r7, #32]
 8003200:	f043 0308 	orr.w	r3, r3, #8
 8003204:	623b      	str	r3, [r7, #32]
 8003206:	68fb      	ldr	r3, [r7, #12]
 8003208:	681b      	ldr	r3, [r3, #0]
 800320a:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 800320e:	61da      	str	r2, [r3, #28]
 8003210:	2301      	movs	r3, #1
 8003212:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 8003216:	69bb      	ldr	r3, [r7, #24]
 8003218:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 800321c:	2b00      	cmp	r3, #0
 800321e:	d00b      	beq.n	8003238 <I2C_IsErrorOccurred+0x16c>
 8003220:	6a3b      	ldr	r3, [r7, #32]
 8003222:	f043 0302 	orr.w	r3, r3, #2
 8003226:	623b      	str	r3, [r7, #32]
 8003228:	68fb      	ldr	r3, [r7, #12]
 800322a:	681b      	ldr	r3, [r3, #0]
 800322c:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8003230:	61da      	str	r2, [r3, #28]
 8003232:	2301      	movs	r3, #1
 8003234:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 8003238:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 800323c:	2b00      	cmp	r3, #0
 800323e:	d01c      	beq.n	800327a <I2C_IsErrorOccurred+0x1ae>
 8003240:	68f8      	ldr	r0, [r7, #12]
 8003242:	f7ff fe3b 	bl	8002ebc <I2C_Flush_TXDR>
 8003246:	68fb      	ldr	r3, [r7, #12]
 8003248:	681b      	ldr	r3, [r3, #0]
 800324a:	6859      	ldr	r1, [r3, #4]
 800324c:	68fb      	ldr	r3, [r7, #12]
 800324e:	681a      	ldr	r2, [r3, #0]
 8003250:	4b0d      	ldr	r3, [pc, #52]	@ (8003288 <I2C_IsErrorOccurred+0x1bc>)
 8003252:	400b      	ands	r3, r1
 8003254:	6053      	str	r3, [r2, #4]
 8003256:	68fb      	ldr	r3, [r7, #12]
 8003258:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 800325a:	6a3b      	ldr	r3, [r7, #32]
 800325c:	431a      	orrs	r2, r3
 800325e:	68fb      	ldr	r3, [r7, #12]
 8003260:	645a      	str	r2, [r3, #68]	@ 0x44
 8003262:	68fb      	ldr	r3, [r7, #12]
 8003264:	2220      	movs	r2, #32
 8003266:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800326a:	68fb      	ldr	r3, [r7, #12]
 800326c:	2200      	movs	r2, #0
 800326e:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8003272:	68fb      	ldr	r3, [r7, #12]
 8003274:	2200      	movs	r2, #0
 8003276:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 800327a:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 800327e:	4618      	mov	r0, r3
 8003280:	3728      	adds	r7, #40	@ 0x28
 8003282:	46bd      	mov	sp, r7
 8003284:	bd80      	pop	{r7, pc}
 8003286:	bf00      	nop
 8003288:	fe00e800 	.word	0xfe00e800

0800328c <I2C_TransferConfig>:
 800328c:	b480      	push	{r7}
 800328e:	b087      	sub	sp, #28
 8003290:	af00      	add	r7, sp, #0
 8003292:	60f8      	str	r0, [r7, #12]
 8003294:	607b      	str	r3, [r7, #4]
 8003296:	460b      	mov	r3, r1
 8003298:	817b      	strh	r3, [r7, #10]
 800329a:	4613      	mov	r3, r2
 800329c:	727b      	strb	r3, [r7, #9]
 800329e:	897b      	ldrh	r3, [r7, #10]
 80032a0:	f3c3 0209 	ubfx	r2, r3, #0, #10
 80032a4:	7a7b      	ldrb	r3, [r7, #9]
 80032a6:	041b      	lsls	r3, r3, #16
 80032a8:	f403 037f 	and.w	r3, r3, #16711680	@ 0xff0000
 80032ac:	431a      	orrs	r2, r3
 80032ae:	687b      	ldr	r3, [r7, #4]
 80032b0:	431a      	orrs	r2, r3
 80032b2:	6a3b      	ldr	r3, [r7, #32]
 80032b4:	4313      	orrs	r3, r2
 80032b6:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 80032ba:	617b      	str	r3, [r7, #20]
 80032bc:	68fb      	ldr	r3, [r7, #12]
 80032be:	681b      	ldr	r3, [r3, #0]
 80032c0:	685a      	ldr	r2, [r3, #4]
 80032c2:	6a3b      	ldr	r3, [r7, #32]
 80032c4:	0d5b      	lsrs	r3, r3, #21
 80032c6:	f403 6180 	and.w	r1, r3, #1024	@ 0x400
 80032ca:	4b08      	ldr	r3, [pc, #32]	@ (80032ec <I2C_TransferConfig+0x60>)
 80032cc:	430b      	orrs	r3, r1
 80032ce:	43db      	mvns	r3, r3
 80032d0:	ea02 0103 	and.w	r1, r2, r3
 80032d4:	68fb      	ldr	r3, [r7, #12]
 80032d6:	681b      	ldr	r3, [r3, #0]
 80032d8:	697a      	ldr	r2, [r7, #20]
 80032da:	430a      	orrs	r2, r1
 80032dc:	605a      	str	r2, [r3, #4]
 80032de:	bf00      	nop
 80032e0:	371c      	adds	r7, #28
 80032e2:	46bd      	mov	sp, r7
 80032e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80032e8:	4770      	bx	lr
 80032ea:	bf00      	nop
 80032ec:	03ff63ff 	.word	0x03ff63ff

080032f0 <HAL_I2CEx_ConfigAnalogFilter>:
 80032f0:	b480      	push	{r7}
 80032f2:	b083      	sub	sp, #12
 80032f4:	af00      	add	r7, sp, #0
 80032f6:	6078      	str	r0, [r7, #4]
 80032f8:	6039      	str	r1, [r7, #0]
 80032fa:	687b      	ldr	r3, [r7, #4]
 80032fc:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8003300:	b2db      	uxtb	r3, r3
 8003302:	2b20      	cmp	r3, #32
 8003304:	d138      	bne.n	8003378 <HAL_I2CEx_ConfigAnalogFilter+0x88>
 8003306:	687b      	ldr	r3, [r7, #4]
 8003308:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 800330c:	2b01      	cmp	r3, #1
 800330e:	d101      	bne.n	8003314 <HAL_I2CEx_ConfigAnalogFilter+0x24>
 8003310:	2302      	movs	r3, #2
 8003312:	e032      	b.n	800337a <HAL_I2CEx_ConfigAnalogFilter+0x8a>
 8003314:	687b      	ldr	r3, [r7, #4]
 8003316:	2201      	movs	r2, #1
 8003318:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 800331c:	687b      	ldr	r3, [r7, #4]
 800331e:	2224      	movs	r2, #36	@ 0x24
 8003320:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8003324:	687b      	ldr	r3, [r7, #4]
 8003326:	681b      	ldr	r3, [r3, #0]
 8003328:	681a      	ldr	r2, [r3, #0]
 800332a:	687b      	ldr	r3, [r7, #4]
 800332c:	681b      	ldr	r3, [r3, #0]
 800332e:	f022 0201 	bic.w	r2, r2, #1
 8003332:	601a      	str	r2, [r3, #0]
 8003334:	687b      	ldr	r3, [r7, #4]
 8003336:	681b      	ldr	r3, [r3, #0]
 8003338:	681a      	ldr	r2, [r3, #0]
 800333a:	687b      	ldr	r3, [r7, #4]
 800333c:	681b      	ldr	r3, [r3, #0]
 800333e:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
 8003342:	601a      	str	r2, [r3, #0]
 8003344:	687b      	ldr	r3, [r7, #4]
 8003346:	681b      	ldr	r3, [r3, #0]
 8003348:	6819      	ldr	r1, [r3, #0]
 800334a:	687b      	ldr	r3, [r7, #4]
 800334c:	681b      	ldr	r3, [r3, #0]
 800334e:	683a      	ldr	r2, [r7, #0]
 8003350:	430a      	orrs	r2, r1
 8003352:	601a      	str	r2, [r3, #0]
 8003354:	687b      	ldr	r3, [r7, #4]
 8003356:	681b      	ldr	r3, [r3, #0]
 8003358:	681a      	ldr	r2, [r3, #0]
 800335a:	687b      	ldr	r3, [r7, #4]
 800335c:	681b      	ldr	r3, [r3, #0]
 800335e:	f042 0201 	orr.w	r2, r2, #1
 8003362:	601a      	str	r2, [r3, #0]
 8003364:	687b      	ldr	r3, [r7, #4]
 8003366:	2220      	movs	r2, #32
 8003368:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800336c:	687b      	ldr	r3, [r7, #4]
 800336e:	2200      	movs	r2, #0
 8003370:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8003374:	2300      	movs	r3, #0
 8003376:	e000      	b.n	800337a <HAL_I2CEx_ConfigAnalogFilter+0x8a>
 8003378:	2302      	movs	r3, #2
 800337a:	4618      	mov	r0, r3
 800337c:	370c      	adds	r7, #12
 800337e:	46bd      	mov	sp, r7
 8003380:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003384:	4770      	bx	lr

08003386 <HAL_I2CEx_ConfigDigitalFilter>:
 8003386:	b480      	push	{r7}
 8003388:	b085      	sub	sp, #20
 800338a:	af00      	add	r7, sp, #0
 800338c:	6078      	str	r0, [r7, #4]
 800338e:	6039      	str	r1, [r7, #0]
 8003390:	687b      	ldr	r3, [r7, #4]
 8003392:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8003396:	b2db      	uxtb	r3, r3
 8003398:	2b20      	cmp	r3, #32
 800339a:	d139      	bne.n	8003410 <HAL_I2CEx_ConfigDigitalFilter+0x8a>
 800339c:	687b      	ldr	r3, [r7, #4]
 800339e:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 80033a2:	2b01      	cmp	r3, #1
 80033a4:	d101      	bne.n	80033aa <HAL_I2CEx_ConfigDigitalFilter+0x24>
 80033a6:	2302      	movs	r3, #2
 80033a8:	e033      	b.n	8003412 <HAL_I2CEx_ConfigDigitalFilter+0x8c>
 80033aa:	687b      	ldr	r3, [r7, #4]
 80033ac:	2201      	movs	r2, #1
 80033ae:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 80033b2:	687b      	ldr	r3, [r7, #4]
 80033b4:	2224      	movs	r2, #36	@ 0x24
 80033b6:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80033ba:	687b      	ldr	r3, [r7, #4]
 80033bc:	681b      	ldr	r3, [r3, #0]
 80033be:	681a      	ldr	r2, [r3, #0]
 80033c0:	687b      	ldr	r3, [r7, #4]
 80033c2:	681b      	ldr	r3, [r3, #0]
 80033c4:	f022 0201 	bic.w	r2, r2, #1
 80033c8:	601a      	str	r2, [r3, #0]
 80033ca:	687b      	ldr	r3, [r7, #4]
 80033cc:	681b      	ldr	r3, [r3, #0]
 80033ce:	681b      	ldr	r3, [r3, #0]
 80033d0:	60fb      	str	r3, [r7, #12]
 80033d2:	68fb      	ldr	r3, [r7, #12]
 80033d4:	f423 6370 	bic.w	r3, r3, #3840	@ 0xf00
 80033d8:	60fb      	str	r3, [r7, #12]
 80033da:	683b      	ldr	r3, [r7, #0]
 80033dc:	021b      	lsls	r3, r3, #8
 80033de:	68fa      	ldr	r2, [r7, #12]
 80033e0:	4313      	orrs	r3, r2
 80033e2:	60fb      	str	r3, [r7, #12]
 80033e4:	687b      	ldr	r3, [r7, #4]
 80033e6:	681b      	ldr	r3, [r3, #0]
 80033e8:	68fa      	ldr	r2, [r7, #12]
 80033ea:	601a      	str	r2, [r3, #0]
 80033ec:	687b      	ldr	r3, [r7, #4]
 80033ee:	681b      	ldr	r3, [r3, #0]
 80033f0:	681a      	ldr	r2, [r3, #0]
 80033f2:	687b      	ldr	r3, [r7, #4]
 80033f4:	681b      	ldr	r3, [r3, #0]
 80033f6:	f042 0201 	orr.w	r2, r2, #1
 80033fa:	601a      	str	r2, [r3, #0]
 80033fc:	687b      	ldr	r3, [r7, #4]
 80033fe:	2220      	movs	r2, #32
 8003400:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8003404:	687b      	ldr	r3, [r7, #4]
 8003406:	2200      	movs	r2, #0
 8003408:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 800340c:	2300      	movs	r3, #0
 800340e:	e000      	b.n	8003412 <HAL_I2CEx_ConfigDigitalFilter+0x8c>
 8003410:	2302      	movs	r3, #2
 8003412:	4618      	mov	r0, r3
 8003414:	3714      	adds	r7, #20
 8003416:	46bd      	mov	sp, r7
 8003418:	f85d 7b04 	ldr.w	r7, [sp], #4
 800341c:	4770      	bx	lr
	...

08003420 <HAL_RCC_OscConfig>:
 8003420:	b580      	push	{r7, lr}
 8003422:	f5ad 7d00 	sub.w	sp, sp, #512	@ 0x200
 8003426:	af00      	add	r7, sp, #0
 8003428:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 800342c:	f5a3 73fe 	sub.w	r3, r3, #508	@ 0x1fc
 8003430:	6018      	str	r0, [r3, #0]
 8003432:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8003436:	f5a3 73fe 	sub.w	r3, r3, #508	@ 0x1fc
 800343a:	681b      	ldr	r3, [r3, #0]
 800343c:	2b00      	cmp	r3, #0
 800343e:	d102      	bne.n	8003446 <HAL_RCC_OscConfig+0x26>
 8003440:	2301      	movs	r3, #1
 8003442:	f001 b823 	b.w	800448c <HAL_RCC_OscConfig+0x106c>
 8003446:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 800344a:	f5a3 73fe 	sub.w	r3, r3, #508	@ 0x1fc
 800344e:	681b      	ldr	r3, [r3, #0]
 8003450:	681b      	ldr	r3, [r3, #0]
 8003452:	f003 0301 	and.w	r3, r3, #1
 8003456:	2b00      	cmp	r3, #0
 8003458:	f000 817d 	beq.w	8003756 <HAL_RCC_OscConfig+0x336>
 800345c:	4bbc      	ldr	r3, [pc, #752]	@ (8003750 <HAL_RCC_OscConfig+0x330>)
 800345e:	685b      	ldr	r3, [r3, #4]
 8003460:	f003 030c 	and.w	r3, r3, #12
 8003464:	2b04      	cmp	r3, #4
 8003466:	d00c      	beq.n	8003482 <HAL_RCC_OscConfig+0x62>
 8003468:	4bb9      	ldr	r3, [pc, #740]	@ (8003750 <HAL_RCC_OscConfig+0x330>)
 800346a:	685b      	ldr	r3, [r3, #4]
 800346c:	f003 030c 	and.w	r3, r3, #12
 8003470:	2b08      	cmp	r3, #8
 8003472:	d15c      	bne.n	800352e <HAL_RCC_OscConfig+0x10e>
 8003474:	4bb6      	ldr	r3, [pc, #728]	@ (8003750 <HAL_RCC_OscConfig+0x330>)
 8003476:	685b      	ldr	r3, [r3, #4]
 8003478:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 800347c:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8003480:	d155      	bne.n	800352e <HAL_RCC_OscConfig+0x10e>
 8003482:	f44f 3300 	mov.w	r3, #131072	@ 0x20000
 8003486:	f8c7 31f0 	str.w	r3, [r7, #496]	@ 0x1f0
 800348a:	f8d7 31f0 	ldr.w	r3, [r7, #496]	@ 0x1f0
 800348e:	fa93 f3a3 	rbit	r3, r3
 8003492:	f8c7 31ec 	str.w	r3, [r7, #492]	@ 0x1ec
 8003496:	f8d7 31ec 	ldr.w	r3, [r7, #492]	@ 0x1ec
 800349a:	fab3 f383 	clz	r3, r3
 800349e:	b2db      	uxtb	r3, r3
 80034a0:	095b      	lsrs	r3, r3, #5
 80034a2:	b2db      	uxtb	r3, r3
 80034a4:	f043 0301 	orr.w	r3, r3, #1
 80034a8:	b2db      	uxtb	r3, r3
 80034aa:	2b01      	cmp	r3, #1
 80034ac:	d102      	bne.n	80034b4 <HAL_RCC_OscConfig+0x94>
 80034ae:	4ba8      	ldr	r3, [pc, #672]	@ (8003750 <HAL_RCC_OscConfig+0x330>)
 80034b0:	681b      	ldr	r3, [r3, #0]
 80034b2:	e015      	b.n	80034e0 <HAL_RCC_OscConfig+0xc0>
 80034b4:	f44f 3300 	mov.w	r3, #131072	@ 0x20000
 80034b8:	f8c7 31e8 	str.w	r3, [r7, #488]	@ 0x1e8
 80034bc:	f8d7 31e8 	ldr.w	r3, [r7, #488]	@ 0x1e8
 80034c0:	fa93 f3a3 	rbit	r3, r3
 80034c4:	f8c7 31e4 	str.w	r3, [r7, #484]	@ 0x1e4
 80034c8:	f44f 3300 	mov.w	r3, #131072	@ 0x20000
 80034cc:	f8c7 31e0 	str.w	r3, [r7, #480]	@ 0x1e0
 80034d0:	f8d7 31e0 	ldr.w	r3, [r7, #480]	@ 0x1e0
 80034d4:	fa93 f3a3 	rbit	r3, r3
 80034d8:	f8c7 31dc 	str.w	r3, [r7, #476]	@ 0x1dc
 80034dc:	4b9c      	ldr	r3, [pc, #624]	@ (8003750 <HAL_RCC_OscConfig+0x330>)
 80034de:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80034e0:	f44f 3200 	mov.w	r2, #131072	@ 0x20000
 80034e4:	f8c7 21d8 	str.w	r2, [r7, #472]	@ 0x1d8
 80034e8:	f8d7 21d8 	ldr.w	r2, [r7, #472]	@ 0x1d8
 80034ec:	fa92 f2a2 	rbit	r2, r2
 80034f0:	f8c7 21d4 	str.w	r2, [r7, #468]	@ 0x1d4
 80034f4:	f8d7 21d4 	ldr.w	r2, [r7, #468]	@ 0x1d4
 80034f8:	fab2 f282 	clz	r2, r2
 80034fc:	b2d2      	uxtb	r2, r2
 80034fe:	f042 0220 	orr.w	r2, r2, #32
 8003502:	b2d2      	uxtb	r2, r2
 8003504:	f002 021f 	and.w	r2, r2, #31
 8003508:	2101      	movs	r1, #1
 800350a:	fa01 f202 	lsl.w	r2, r1, r2
 800350e:	4013      	ands	r3, r2
 8003510:	2b00      	cmp	r3, #0
 8003512:	f000 811f 	beq.w	8003754 <HAL_RCC_OscConfig+0x334>
 8003516:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 800351a:	f5a3 73fe 	sub.w	r3, r3, #508	@ 0x1fc
 800351e:	681b      	ldr	r3, [r3, #0]
 8003520:	685b      	ldr	r3, [r3, #4]
 8003522:	2b00      	cmp	r3, #0
 8003524:	f040 8116 	bne.w	8003754 <HAL_RCC_OscConfig+0x334>
 8003528:	2301      	movs	r3, #1
 800352a:	f000 bfaf 	b.w	800448c <HAL_RCC_OscConfig+0x106c>
 800352e:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8003532:	f5a3 73fe 	sub.w	r3, r3, #508	@ 0x1fc
 8003536:	681b      	ldr	r3, [r3, #0]
 8003538:	685b      	ldr	r3, [r3, #4]
 800353a:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 800353e:	d106      	bne.n	800354e <HAL_RCC_OscConfig+0x12e>
 8003540:	4b83      	ldr	r3, [pc, #524]	@ (8003750 <HAL_RCC_OscConfig+0x330>)
 8003542:	681b      	ldr	r3, [r3, #0]
 8003544:	4a82      	ldr	r2, [pc, #520]	@ (8003750 <HAL_RCC_OscConfig+0x330>)
 8003546:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 800354a:	6013      	str	r3, [r2, #0]
 800354c:	e036      	b.n	80035bc <HAL_RCC_OscConfig+0x19c>
 800354e:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8003552:	f5a3 73fe 	sub.w	r3, r3, #508	@ 0x1fc
 8003556:	681b      	ldr	r3, [r3, #0]
 8003558:	685b      	ldr	r3, [r3, #4]
 800355a:	2b00      	cmp	r3, #0
 800355c:	d10c      	bne.n	8003578 <HAL_RCC_OscConfig+0x158>
 800355e:	4b7c      	ldr	r3, [pc, #496]	@ (8003750 <HAL_RCC_OscConfig+0x330>)
 8003560:	681b      	ldr	r3, [r3, #0]
 8003562:	4a7b      	ldr	r2, [pc, #492]	@ (8003750 <HAL_RCC_OscConfig+0x330>)
 8003564:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8003568:	6013      	str	r3, [r2, #0]
 800356a:	4b79      	ldr	r3, [pc, #484]	@ (8003750 <HAL_RCC_OscConfig+0x330>)
 800356c:	681b      	ldr	r3, [r3, #0]
 800356e:	4a78      	ldr	r2, [pc, #480]	@ (8003750 <HAL_RCC_OscConfig+0x330>)
 8003570:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8003574:	6013      	str	r3, [r2, #0]
 8003576:	e021      	b.n	80035bc <HAL_RCC_OscConfig+0x19c>
 8003578:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 800357c:	f5a3 73fe 	sub.w	r3, r3, #508	@ 0x1fc
 8003580:	681b      	ldr	r3, [r3, #0]
 8003582:	685b      	ldr	r3, [r3, #4]
 8003584:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8003588:	d10c      	bne.n	80035a4 <HAL_RCC_OscConfig+0x184>
 800358a:	4b71      	ldr	r3, [pc, #452]	@ (8003750 <HAL_RCC_OscConfig+0x330>)
 800358c:	681b      	ldr	r3, [r3, #0]
 800358e:	4a70      	ldr	r2, [pc, #448]	@ (8003750 <HAL_RCC_OscConfig+0x330>)
 8003590:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8003594:	6013      	str	r3, [r2, #0]
 8003596:	4b6e      	ldr	r3, [pc, #440]	@ (8003750 <HAL_RCC_OscConfig+0x330>)
 8003598:	681b      	ldr	r3, [r3, #0]
 800359a:	4a6d      	ldr	r2, [pc, #436]	@ (8003750 <HAL_RCC_OscConfig+0x330>)
 800359c:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80035a0:	6013      	str	r3, [r2, #0]
 80035a2:	e00b      	b.n	80035bc <HAL_RCC_OscConfig+0x19c>
 80035a4:	4b6a      	ldr	r3, [pc, #424]	@ (8003750 <HAL_RCC_OscConfig+0x330>)
 80035a6:	681b      	ldr	r3, [r3, #0]
 80035a8:	4a69      	ldr	r2, [pc, #420]	@ (8003750 <HAL_RCC_OscConfig+0x330>)
 80035aa:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 80035ae:	6013      	str	r3, [r2, #0]
 80035b0:	4b67      	ldr	r3, [pc, #412]	@ (8003750 <HAL_RCC_OscConfig+0x330>)
 80035b2:	681b      	ldr	r3, [r3, #0]
 80035b4:	4a66      	ldr	r2, [pc, #408]	@ (8003750 <HAL_RCC_OscConfig+0x330>)
 80035b6:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 80035ba:	6013      	str	r3, [r2, #0]
 80035bc:	4b64      	ldr	r3, [pc, #400]	@ (8003750 <HAL_RCC_OscConfig+0x330>)
 80035be:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80035c0:	f023 020f 	bic.w	r2, r3, #15
 80035c4:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80035c8:	f5a3 73fe 	sub.w	r3, r3, #508	@ 0x1fc
 80035cc:	681b      	ldr	r3, [r3, #0]
 80035ce:	689b      	ldr	r3, [r3, #8]
 80035d0:	495f      	ldr	r1, [pc, #380]	@ (8003750 <HAL_RCC_OscConfig+0x330>)
 80035d2:	4313      	orrs	r3, r2
 80035d4:	62cb      	str	r3, [r1, #44]	@ 0x2c
 80035d6:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80035da:	f5a3 73fe 	sub.w	r3, r3, #508	@ 0x1fc
 80035de:	681b      	ldr	r3, [r3, #0]
 80035e0:	685b      	ldr	r3, [r3, #4]
 80035e2:	2b00      	cmp	r3, #0
 80035e4:	d059      	beq.n	800369a <HAL_RCC_OscConfig+0x27a>
 80035e6:	f7fe fdaf 	bl	8002148 <HAL_GetTick>
 80035ea:	f8c7 01f8 	str.w	r0, [r7, #504]	@ 0x1f8
 80035ee:	e00a      	b.n	8003606 <HAL_RCC_OscConfig+0x1e6>
 80035f0:	f7fe fdaa 	bl	8002148 <HAL_GetTick>
 80035f4:	4602      	mov	r2, r0
 80035f6:	f8d7 31f8 	ldr.w	r3, [r7, #504]	@ 0x1f8
 80035fa:	1ad3      	subs	r3, r2, r3
 80035fc:	2b64      	cmp	r3, #100	@ 0x64
 80035fe:	d902      	bls.n	8003606 <HAL_RCC_OscConfig+0x1e6>
 8003600:	2303      	movs	r3, #3
 8003602:	f000 bf43 	b.w	800448c <HAL_RCC_OscConfig+0x106c>
 8003606:	f44f 3300 	mov.w	r3, #131072	@ 0x20000
 800360a:	f8c7 31d0 	str.w	r3, [r7, #464]	@ 0x1d0
 800360e:	f8d7 31d0 	ldr.w	r3, [r7, #464]	@ 0x1d0
 8003612:	fa93 f3a3 	rbit	r3, r3
 8003616:	f8c7 31cc 	str.w	r3, [r7, #460]	@ 0x1cc
 800361a:	f8d7 31cc 	ldr.w	r3, [r7, #460]	@ 0x1cc
 800361e:	fab3 f383 	clz	r3, r3
 8003622:	b2db      	uxtb	r3, r3
 8003624:	095b      	lsrs	r3, r3, #5
 8003626:	b2db      	uxtb	r3, r3
 8003628:	f043 0301 	orr.w	r3, r3, #1
 800362c:	b2db      	uxtb	r3, r3
 800362e:	2b01      	cmp	r3, #1
 8003630:	d102      	bne.n	8003638 <HAL_RCC_OscConfig+0x218>
 8003632:	4b47      	ldr	r3, [pc, #284]	@ (8003750 <HAL_RCC_OscConfig+0x330>)
 8003634:	681b      	ldr	r3, [r3, #0]
 8003636:	e015      	b.n	8003664 <HAL_RCC_OscConfig+0x244>
 8003638:	f44f 3300 	mov.w	r3, #131072	@ 0x20000
 800363c:	f8c7 31c8 	str.w	r3, [r7, #456]	@ 0x1c8
 8003640:	f8d7 31c8 	ldr.w	r3, [r7, #456]	@ 0x1c8
 8003644:	fa93 f3a3 	rbit	r3, r3
 8003648:	f8c7 31c4 	str.w	r3, [r7, #452]	@ 0x1c4
 800364c:	f44f 3300 	mov.w	r3, #131072	@ 0x20000
 8003650:	f8c7 31c0 	str.w	r3, [r7, #448]	@ 0x1c0
 8003654:	f8d7 31c0 	ldr.w	r3, [r7, #448]	@ 0x1c0
 8003658:	fa93 f3a3 	rbit	r3, r3
 800365c:	f8c7 31bc 	str.w	r3, [r7, #444]	@ 0x1bc
 8003660:	4b3b      	ldr	r3, [pc, #236]	@ (8003750 <HAL_RCC_OscConfig+0x330>)
 8003662:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003664:	f44f 3200 	mov.w	r2, #131072	@ 0x20000
 8003668:	f8c7 21b8 	str.w	r2, [r7, #440]	@ 0x1b8
 800366c:	f8d7 21b8 	ldr.w	r2, [r7, #440]	@ 0x1b8
 8003670:	fa92 f2a2 	rbit	r2, r2
 8003674:	f8c7 21b4 	str.w	r2, [r7, #436]	@ 0x1b4
 8003678:	f8d7 21b4 	ldr.w	r2, [r7, #436]	@ 0x1b4
 800367c:	fab2 f282 	clz	r2, r2
 8003680:	b2d2      	uxtb	r2, r2
 8003682:	f042 0220 	orr.w	r2, r2, #32
 8003686:	b2d2      	uxtb	r2, r2
 8003688:	f002 021f 	and.w	r2, r2, #31
 800368c:	2101      	movs	r1, #1
 800368e:	fa01 f202 	lsl.w	r2, r1, r2
 8003692:	4013      	ands	r3, r2
 8003694:	2b00      	cmp	r3, #0
 8003696:	d0ab      	beq.n	80035f0 <HAL_RCC_OscConfig+0x1d0>
 8003698:	e05d      	b.n	8003756 <HAL_RCC_OscConfig+0x336>
 800369a:	f7fe fd55 	bl	8002148 <HAL_GetTick>
 800369e:	f8c7 01f8 	str.w	r0, [r7, #504]	@ 0x1f8
 80036a2:	e00a      	b.n	80036ba <HAL_RCC_OscConfig+0x29a>
 80036a4:	f7fe fd50 	bl	8002148 <HAL_GetTick>
 80036a8:	4602      	mov	r2, r0
 80036aa:	f8d7 31f8 	ldr.w	r3, [r7, #504]	@ 0x1f8
 80036ae:	1ad3      	subs	r3, r2, r3
 80036b0:	2b64      	cmp	r3, #100	@ 0x64
 80036b2:	d902      	bls.n	80036ba <HAL_RCC_OscConfig+0x29a>
 80036b4:	2303      	movs	r3, #3
 80036b6:	f000 bee9 	b.w	800448c <HAL_RCC_OscConfig+0x106c>
 80036ba:	f44f 3300 	mov.w	r3, #131072	@ 0x20000
 80036be:	f8c7 31b0 	str.w	r3, [r7, #432]	@ 0x1b0
 80036c2:	f8d7 31b0 	ldr.w	r3, [r7, #432]	@ 0x1b0
 80036c6:	fa93 f3a3 	rbit	r3, r3
 80036ca:	f8c7 31ac 	str.w	r3, [r7, #428]	@ 0x1ac
 80036ce:	f8d7 31ac 	ldr.w	r3, [r7, #428]	@ 0x1ac
 80036d2:	fab3 f383 	clz	r3, r3
 80036d6:	b2db      	uxtb	r3, r3
 80036d8:	095b      	lsrs	r3, r3, #5
 80036da:	b2db      	uxtb	r3, r3
 80036dc:	f043 0301 	orr.w	r3, r3, #1
 80036e0:	b2db      	uxtb	r3, r3
 80036e2:	2b01      	cmp	r3, #1
 80036e4:	d102      	bne.n	80036ec <HAL_RCC_OscConfig+0x2cc>
 80036e6:	4b1a      	ldr	r3, [pc, #104]	@ (8003750 <HAL_RCC_OscConfig+0x330>)
 80036e8:	681b      	ldr	r3, [r3, #0]
 80036ea:	e015      	b.n	8003718 <HAL_RCC_OscConfig+0x2f8>
 80036ec:	f44f 3300 	mov.w	r3, #131072	@ 0x20000
 80036f0:	f8c7 31a8 	str.w	r3, [r7, #424]	@ 0x1a8
 80036f4:	f8d7 31a8 	ldr.w	r3, [r7, #424]	@ 0x1a8
 80036f8:	fa93 f3a3 	rbit	r3, r3
 80036fc:	f8c7 31a4 	str.w	r3, [r7, #420]	@ 0x1a4
 8003700:	f44f 3300 	mov.w	r3, #131072	@ 0x20000
 8003704:	f8c7 31a0 	str.w	r3, [r7, #416]	@ 0x1a0
 8003708:	f8d7 31a0 	ldr.w	r3, [r7, #416]	@ 0x1a0
 800370c:	fa93 f3a3 	rbit	r3, r3
 8003710:	f8c7 319c 	str.w	r3, [r7, #412]	@ 0x19c
 8003714:	4b0e      	ldr	r3, [pc, #56]	@ (8003750 <HAL_RCC_OscConfig+0x330>)
 8003716:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003718:	f44f 3200 	mov.w	r2, #131072	@ 0x20000
 800371c:	f8c7 2198 	str.w	r2, [r7, #408]	@ 0x198
 8003720:	f8d7 2198 	ldr.w	r2, [r7, #408]	@ 0x198
 8003724:	fa92 f2a2 	rbit	r2, r2
 8003728:	f8c7 2194 	str.w	r2, [r7, #404]	@ 0x194
 800372c:	f8d7 2194 	ldr.w	r2, [r7, #404]	@ 0x194
 8003730:	fab2 f282 	clz	r2, r2
 8003734:	b2d2      	uxtb	r2, r2
 8003736:	f042 0220 	orr.w	r2, r2, #32
 800373a:	b2d2      	uxtb	r2, r2
 800373c:	f002 021f 	and.w	r2, r2, #31
 8003740:	2101      	movs	r1, #1
 8003742:	fa01 f202 	lsl.w	r2, r1, r2
 8003746:	4013      	ands	r3, r2
 8003748:	2b00      	cmp	r3, #0
 800374a:	d1ab      	bne.n	80036a4 <HAL_RCC_OscConfig+0x284>
 800374c:	e003      	b.n	8003756 <HAL_RCC_OscConfig+0x336>
 800374e:	bf00      	nop
 8003750:	40021000 	.word	0x40021000
 8003754:	bf00      	nop
 8003756:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 800375a:	f5a3 73fe 	sub.w	r3, r3, #508	@ 0x1fc
 800375e:	681b      	ldr	r3, [r3, #0]
 8003760:	681b      	ldr	r3, [r3, #0]
 8003762:	f003 0302 	and.w	r3, r3, #2
 8003766:	2b00      	cmp	r3, #0
 8003768:	f000 817d 	beq.w	8003a66 <HAL_RCC_OscConfig+0x646>
 800376c:	4ba6      	ldr	r3, [pc, #664]	@ (8003a08 <HAL_RCC_OscConfig+0x5e8>)
 800376e:	685b      	ldr	r3, [r3, #4]
 8003770:	f003 030c 	and.w	r3, r3, #12
 8003774:	2b00      	cmp	r3, #0
 8003776:	d00b      	beq.n	8003790 <HAL_RCC_OscConfig+0x370>
 8003778:	4ba3      	ldr	r3, [pc, #652]	@ (8003a08 <HAL_RCC_OscConfig+0x5e8>)
 800377a:	685b      	ldr	r3, [r3, #4]
 800377c:	f003 030c 	and.w	r3, r3, #12
 8003780:	2b08      	cmp	r3, #8
 8003782:	d172      	bne.n	800386a <HAL_RCC_OscConfig+0x44a>
 8003784:	4ba0      	ldr	r3, [pc, #640]	@ (8003a08 <HAL_RCC_OscConfig+0x5e8>)
 8003786:	685b      	ldr	r3, [r3, #4]
 8003788:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 800378c:	2b00      	cmp	r3, #0
 800378e:	d16c      	bne.n	800386a <HAL_RCC_OscConfig+0x44a>
 8003790:	2302      	movs	r3, #2
 8003792:	f8c7 3190 	str.w	r3, [r7, #400]	@ 0x190
 8003796:	f8d7 3190 	ldr.w	r3, [r7, #400]	@ 0x190
 800379a:	fa93 f3a3 	rbit	r3, r3
 800379e:	f8c7 318c 	str.w	r3, [r7, #396]	@ 0x18c
 80037a2:	f8d7 318c 	ldr.w	r3, [r7, #396]	@ 0x18c
 80037a6:	fab3 f383 	clz	r3, r3
 80037aa:	b2db      	uxtb	r3, r3
 80037ac:	095b      	lsrs	r3, r3, #5
 80037ae:	b2db      	uxtb	r3, r3
 80037b0:	f043 0301 	orr.w	r3, r3, #1
 80037b4:	b2db      	uxtb	r3, r3
 80037b6:	2b01      	cmp	r3, #1
 80037b8:	d102      	bne.n	80037c0 <HAL_RCC_OscConfig+0x3a0>
 80037ba:	4b93      	ldr	r3, [pc, #588]	@ (8003a08 <HAL_RCC_OscConfig+0x5e8>)
 80037bc:	681b      	ldr	r3, [r3, #0]
 80037be:	e013      	b.n	80037e8 <HAL_RCC_OscConfig+0x3c8>
 80037c0:	2302      	movs	r3, #2
 80037c2:	f8c7 3188 	str.w	r3, [r7, #392]	@ 0x188
 80037c6:	f8d7 3188 	ldr.w	r3, [r7, #392]	@ 0x188
 80037ca:	fa93 f3a3 	rbit	r3, r3
 80037ce:	f8c7 3184 	str.w	r3, [r7, #388]	@ 0x184
 80037d2:	2302      	movs	r3, #2
 80037d4:	f8c7 3180 	str.w	r3, [r7, #384]	@ 0x180
 80037d8:	f8d7 3180 	ldr.w	r3, [r7, #384]	@ 0x180
 80037dc:	fa93 f3a3 	rbit	r3, r3
 80037e0:	f8c7 317c 	str.w	r3, [r7, #380]	@ 0x17c
 80037e4:	4b88      	ldr	r3, [pc, #544]	@ (8003a08 <HAL_RCC_OscConfig+0x5e8>)
 80037e6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80037e8:	2202      	movs	r2, #2
 80037ea:	f8c7 2178 	str.w	r2, [r7, #376]	@ 0x178
 80037ee:	f8d7 2178 	ldr.w	r2, [r7, #376]	@ 0x178
 80037f2:	fa92 f2a2 	rbit	r2, r2
 80037f6:	f8c7 2174 	str.w	r2, [r7, #372]	@ 0x174
 80037fa:	f8d7 2174 	ldr.w	r2, [r7, #372]	@ 0x174
 80037fe:	fab2 f282 	clz	r2, r2
 8003802:	b2d2      	uxtb	r2, r2
 8003804:	f042 0220 	orr.w	r2, r2, #32
 8003808:	b2d2      	uxtb	r2, r2
 800380a:	f002 021f 	and.w	r2, r2, #31
 800380e:	2101      	movs	r1, #1
 8003810:	fa01 f202 	lsl.w	r2, r1, r2
 8003814:	4013      	ands	r3, r2
 8003816:	2b00      	cmp	r3, #0
 8003818:	d00a      	beq.n	8003830 <HAL_RCC_OscConfig+0x410>
 800381a:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 800381e:	f5a3 73fe 	sub.w	r3, r3, #508	@ 0x1fc
 8003822:	681b      	ldr	r3, [r3, #0]
 8003824:	691b      	ldr	r3, [r3, #16]
 8003826:	2b01      	cmp	r3, #1
 8003828:	d002      	beq.n	8003830 <HAL_RCC_OscConfig+0x410>
 800382a:	2301      	movs	r3, #1
 800382c:	f000 be2e 	b.w	800448c <HAL_RCC_OscConfig+0x106c>
 8003830:	4b75      	ldr	r3, [pc, #468]	@ (8003a08 <HAL_RCC_OscConfig+0x5e8>)
 8003832:	681b      	ldr	r3, [r3, #0]
 8003834:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8003838:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 800383c:	f5a3 73fe 	sub.w	r3, r3, #508	@ 0x1fc
 8003840:	681b      	ldr	r3, [r3, #0]
 8003842:	695b      	ldr	r3, [r3, #20]
 8003844:	21f8      	movs	r1, #248	@ 0xf8
 8003846:	f8c7 1170 	str.w	r1, [r7, #368]	@ 0x170
 800384a:	f8d7 1170 	ldr.w	r1, [r7, #368]	@ 0x170
 800384e:	fa91 f1a1 	rbit	r1, r1
 8003852:	f8c7 116c 	str.w	r1, [r7, #364]	@ 0x16c
 8003856:	f8d7 116c 	ldr.w	r1, [r7, #364]	@ 0x16c
 800385a:	fab1 f181 	clz	r1, r1
 800385e:	b2c9      	uxtb	r1, r1
 8003860:	408b      	lsls	r3, r1
 8003862:	4969      	ldr	r1, [pc, #420]	@ (8003a08 <HAL_RCC_OscConfig+0x5e8>)
 8003864:	4313      	orrs	r3, r2
 8003866:	600b      	str	r3, [r1, #0]
 8003868:	e0fd      	b.n	8003a66 <HAL_RCC_OscConfig+0x646>
 800386a:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 800386e:	f5a3 73fe 	sub.w	r3, r3, #508	@ 0x1fc
 8003872:	681b      	ldr	r3, [r3, #0]
 8003874:	691b      	ldr	r3, [r3, #16]
 8003876:	2b00      	cmp	r3, #0
 8003878:	f000 8088 	beq.w	800398c <HAL_RCC_OscConfig+0x56c>
 800387c:	2301      	movs	r3, #1
 800387e:	f8c7 3168 	str.w	r3, [r7, #360]	@ 0x168
 8003882:	f8d7 3168 	ldr.w	r3, [r7, #360]	@ 0x168
 8003886:	fa93 f3a3 	rbit	r3, r3
 800388a:	f8c7 3164 	str.w	r3, [r7, #356]	@ 0x164
 800388e:	f8d7 3164 	ldr.w	r3, [r7, #356]	@ 0x164
 8003892:	fab3 f383 	clz	r3, r3
 8003896:	b2db      	uxtb	r3, r3
 8003898:	f103 5384 	add.w	r3, r3, #276824064	@ 0x10800000
 800389c:	f503 1384 	add.w	r3, r3, #1081344	@ 0x108000
 80038a0:	009b      	lsls	r3, r3, #2
 80038a2:	461a      	mov	r2, r3
 80038a4:	2301      	movs	r3, #1
 80038a6:	6013      	str	r3, [r2, #0]
 80038a8:	f7fe fc4e 	bl	8002148 <HAL_GetTick>
 80038ac:	f8c7 01f8 	str.w	r0, [r7, #504]	@ 0x1f8
 80038b0:	e00a      	b.n	80038c8 <HAL_RCC_OscConfig+0x4a8>
 80038b2:	f7fe fc49 	bl	8002148 <HAL_GetTick>
 80038b6:	4602      	mov	r2, r0
 80038b8:	f8d7 31f8 	ldr.w	r3, [r7, #504]	@ 0x1f8
 80038bc:	1ad3      	subs	r3, r2, r3
 80038be:	2b02      	cmp	r3, #2
 80038c0:	d902      	bls.n	80038c8 <HAL_RCC_OscConfig+0x4a8>
 80038c2:	2303      	movs	r3, #3
 80038c4:	f000 bde2 	b.w	800448c <HAL_RCC_OscConfig+0x106c>
 80038c8:	2302      	movs	r3, #2
 80038ca:	f8c7 3160 	str.w	r3, [r7, #352]	@ 0x160
 80038ce:	f8d7 3160 	ldr.w	r3, [r7, #352]	@ 0x160
 80038d2:	fa93 f3a3 	rbit	r3, r3
 80038d6:	f8c7 315c 	str.w	r3, [r7, #348]	@ 0x15c
 80038da:	f8d7 315c 	ldr.w	r3, [r7, #348]	@ 0x15c
 80038de:	fab3 f383 	clz	r3, r3
 80038e2:	b2db      	uxtb	r3, r3
 80038e4:	095b      	lsrs	r3, r3, #5
 80038e6:	b2db      	uxtb	r3, r3
 80038e8:	f043 0301 	orr.w	r3, r3, #1
 80038ec:	b2db      	uxtb	r3, r3
 80038ee:	2b01      	cmp	r3, #1
 80038f0:	d102      	bne.n	80038f8 <HAL_RCC_OscConfig+0x4d8>
 80038f2:	4b45      	ldr	r3, [pc, #276]	@ (8003a08 <HAL_RCC_OscConfig+0x5e8>)
 80038f4:	681b      	ldr	r3, [r3, #0]
 80038f6:	e013      	b.n	8003920 <HAL_RCC_OscConfig+0x500>
 80038f8:	2302      	movs	r3, #2
 80038fa:	f8c7 3158 	str.w	r3, [r7, #344]	@ 0x158
 80038fe:	f8d7 3158 	ldr.w	r3, [r7, #344]	@ 0x158
 8003902:	fa93 f3a3 	rbit	r3, r3
 8003906:	f8c7 3154 	str.w	r3, [r7, #340]	@ 0x154
 800390a:	2302      	movs	r3, #2
 800390c:	f8c7 3150 	str.w	r3, [r7, #336]	@ 0x150
 8003910:	f8d7 3150 	ldr.w	r3, [r7, #336]	@ 0x150
 8003914:	fa93 f3a3 	rbit	r3, r3
 8003918:	f8c7 314c 	str.w	r3, [r7, #332]	@ 0x14c
 800391c:	4b3a      	ldr	r3, [pc, #232]	@ (8003a08 <HAL_RCC_OscConfig+0x5e8>)
 800391e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003920:	2202      	movs	r2, #2
 8003922:	f8c7 2148 	str.w	r2, [r7, #328]	@ 0x148
 8003926:	f8d7 2148 	ldr.w	r2, [r7, #328]	@ 0x148
 800392a:	fa92 f2a2 	rbit	r2, r2
 800392e:	f8c7 2144 	str.w	r2, [r7, #324]	@ 0x144
 8003932:	f8d7 2144 	ldr.w	r2, [r7, #324]	@ 0x144
 8003936:	fab2 f282 	clz	r2, r2
 800393a:	b2d2      	uxtb	r2, r2
 800393c:	f042 0220 	orr.w	r2, r2, #32
 8003940:	b2d2      	uxtb	r2, r2
 8003942:	f002 021f 	and.w	r2, r2, #31
 8003946:	2101      	movs	r1, #1
 8003948:	fa01 f202 	lsl.w	r2, r1, r2
 800394c:	4013      	ands	r3, r2
 800394e:	2b00      	cmp	r3, #0
 8003950:	d0af      	beq.n	80038b2 <HAL_RCC_OscConfig+0x492>
 8003952:	4b2d      	ldr	r3, [pc, #180]	@ (8003a08 <HAL_RCC_OscConfig+0x5e8>)
 8003954:	681b      	ldr	r3, [r3, #0]
 8003956:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 800395a:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 800395e:	f5a3 73fe 	sub.w	r3, r3, #508	@ 0x1fc
 8003962:	681b      	ldr	r3, [r3, #0]
 8003964:	695b      	ldr	r3, [r3, #20]
 8003966:	21f8      	movs	r1, #248	@ 0xf8
 8003968:	f8c7 1140 	str.w	r1, [r7, #320]	@ 0x140
 800396c:	f8d7 1140 	ldr.w	r1, [r7, #320]	@ 0x140
 8003970:	fa91 f1a1 	rbit	r1, r1
 8003974:	f8c7 113c 	str.w	r1, [r7, #316]	@ 0x13c
 8003978:	f8d7 113c 	ldr.w	r1, [r7, #316]	@ 0x13c
 800397c:	fab1 f181 	clz	r1, r1
 8003980:	b2c9      	uxtb	r1, r1
 8003982:	408b      	lsls	r3, r1
 8003984:	4920      	ldr	r1, [pc, #128]	@ (8003a08 <HAL_RCC_OscConfig+0x5e8>)
 8003986:	4313      	orrs	r3, r2
 8003988:	600b      	str	r3, [r1, #0]
 800398a:	e06c      	b.n	8003a66 <HAL_RCC_OscConfig+0x646>
 800398c:	2301      	movs	r3, #1
 800398e:	f8c7 3138 	str.w	r3, [r7, #312]	@ 0x138
 8003992:	f8d7 3138 	ldr.w	r3, [r7, #312]	@ 0x138
 8003996:	fa93 f3a3 	rbit	r3, r3
 800399a:	f8c7 3134 	str.w	r3, [r7, #308]	@ 0x134
 800399e:	f8d7 3134 	ldr.w	r3, [r7, #308]	@ 0x134
 80039a2:	fab3 f383 	clz	r3, r3
 80039a6:	b2db      	uxtb	r3, r3
 80039a8:	f103 5384 	add.w	r3, r3, #276824064	@ 0x10800000
 80039ac:	f503 1384 	add.w	r3, r3, #1081344	@ 0x108000
 80039b0:	009b      	lsls	r3, r3, #2
 80039b2:	461a      	mov	r2, r3
 80039b4:	2300      	movs	r3, #0
 80039b6:	6013      	str	r3, [r2, #0]
 80039b8:	f7fe fbc6 	bl	8002148 <HAL_GetTick>
 80039bc:	f8c7 01f8 	str.w	r0, [r7, #504]	@ 0x1f8
 80039c0:	e00a      	b.n	80039d8 <HAL_RCC_OscConfig+0x5b8>
 80039c2:	f7fe fbc1 	bl	8002148 <HAL_GetTick>
 80039c6:	4602      	mov	r2, r0
 80039c8:	f8d7 31f8 	ldr.w	r3, [r7, #504]	@ 0x1f8
 80039cc:	1ad3      	subs	r3, r2, r3
 80039ce:	2b02      	cmp	r3, #2
 80039d0:	d902      	bls.n	80039d8 <HAL_RCC_OscConfig+0x5b8>
 80039d2:	2303      	movs	r3, #3
 80039d4:	f000 bd5a 	b.w	800448c <HAL_RCC_OscConfig+0x106c>
 80039d8:	2302      	movs	r3, #2
 80039da:	f8c7 3130 	str.w	r3, [r7, #304]	@ 0x130
 80039de:	f8d7 3130 	ldr.w	r3, [r7, #304]	@ 0x130
 80039e2:	fa93 f3a3 	rbit	r3, r3
 80039e6:	f8c7 312c 	str.w	r3, [r7, #300]	@ 0x12c
 80039ea:	f8d7 312c 	ldr.w	r3, [r7, #300]	@ 0x12c
 80039ee:	fab3 f383 	clz	r3, r3
 80039f2:	b2db      	uxtb	r3, r3
 80039f4:	095b      	lsrs	r3, r3, #5
 80039f6:	b2db      	uxtb	r3, r3
 80039f8:	f043 0301 	orr.w	r3, r3, #1
 80039fc:	b2db      	uxtb	r3, r3
 80039fe:	2b01      	cmp	r3, #1
 8003a00:	d104      	bne.n	8003a0c <HAL_RCC_OscConfig+0x5ec>
 8003a02:	4b01      	ldr	r3, [pc, #4]	@ (8003a08 <HAL_RCC_OscConfig+0x5e8>)
 8003a04:	681b      	ldr	r3, [r3, #0]
 8003a06:	e015      	b.n	8003a34 <HAL_RCC_OscConfig+0x614>
 8003a08:	40021000 	.word	0x40021000
 8003a0c:	2302      	movs	r3, #2
 8003a0e:	f8c7 3128 	str.w	r3, [r7, #296]	@ 0x128
 8003a12:	f8d7 3128 	ldr.w	r3, [r7, #296]	@ 0x128
 8003a16:	fa93 f3a3 	rbit	r3, r3
 8003a1a:	f8c7 3124 	str.w	r3, [r7, #292]	@ 0x124
 8003a1e:	2302      	movs	r3, #2
 8003a20:	f8c7 3120 	str.w	r3, [r7, #288]	@ 0x120
 8003a24:	f8d7 3120 	ldr.w	r3, [r7, #288]	@ 0x120
 8003a28:	fa93 f3a3 	rbit	r3, r3
 8003a2c:	f8c7 311c 	str.w	r3, [r7, #284]	@ 0x11c
 8003a30:	4bc8      	ldr	r3, [pc, #800]	@ (8003d54 <HAL_RCC_OscConfig+0x934>)
 8003a32:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003a34:	2202      	movs	r2, #2
 8003a36:	f8c7 2118 	str.w	r2, [r7, #280]	@ 0x118
 8003a3a:	f8d7 2118 	ldr.w	r2, [r7, #280]	@ 0x118
 8003a3e:	fa92 f2a2 	rbit	r2, r2
 8003a42:	f8c7 2114 	str.w	r2, [r7, #276]	@ 0x114
 8003a46:	f8d7 2114 	ldr.w	r2, [r7, #276]	@ 0x114
 8003a4a:	fab2 f282 	clz	r2, r2
 8003a4e:	b2d2      	uxtb	r2, r2
 8003a50:	f042 0220 	orr.w	r2, r2, #32
 8003a54:	b2d2      	uxtb	r2, r2
 8003a56:	f002 021f 	and.w	r2, r2, #31
 8003a5a:	2101      	movs	r1, #1
 8003a5c:	fa01 f202 	lsl.w	r2, r1, r2
 8003a60:	4013      	ands	r3, r2
 8003a62:	2b00      	cmp	r3, #0
 8003a64:	d1ad      	bne.n	80039c2 <HAL_RCC_OscConfig+0x5a2>
 8003a66:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8003a6a:	f5a3 73fe 	sub.w	r3, r3, #508	@ 0x1fc
 8003a6e:	681b      	ldr	r3, [r3, #0]
 8003a70:	681b      	ldr	r3, [r3, #0]
 8003a72:	f003 0308 	and.w	r3, r3, #8
 8003a76:	2b00      	cmp	r3, #0
 8003a78:	f000 8110 	beq.w	8003c9c <HAL_RCC_OscConfig+0x87c>
 8003a7c:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8003a80:	f5a3 73fe 	sub.w	r3, r3, #508	@ 0x1fc
 8003a84:	681b      	ldr	r3, [r3, #0]
 8003a86:	699b      	ldr	r3, [r3, #24]
 8003a88:	2b00      	cmp	r3, #0
 8003a8a:	d079      	beq.n	8003b80 <HAL_RCC_OscConfig+0x760>
 8003a8c:	2301      	movs	r3, #1
 8003a8e:	f8c7 3110 	str.w	r3, [r7, #272]	@ 0x110
 8003a92:	f8d7 3110 	ldr.w	r3, [r7, #272]	@ 0x110
 8003a96:	fa93 f3a3 	rbit	r3, r3
 8003a9a:	f8c7 310c 	str.w	r3, [r7, #268]	@ 0x10c
 8003a9e:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 8003aa2:	fab3 f383 	clz	r3, r3
 8003aa6:	b2db      	uxtb	r3, r3
 8003aa8:	461a      	mov	r2, r3
 8003aaa:	4bab      	ldr	r3, [pc, #684]	@ (8003d58 <HAL_RCC_OscConfig+0x938>)
 8003aac:	4413      	add	r3, r2
 8003aae:	009b      	lsls	r3, r3, #2
 8003ab0:	461a      	mov	r2, r3
 8003ab2:	2301      	movs	r3, #1
 8003ab4:	6013      	str	r3, [r2, #0]
 8003ab6:	f7fe fb47 	bl	8002148 <HAL_GetTick>
 8003aba:	f8c7 01f8 	str.w	r0, [r7, #504]	@ 0x1f8
 8003abe:	e00a      	b.n	8003ad6 <HAL_RCC_OscConfig+0x6b6>
 8003ac0:	f7fe fb42 	bl	8002148 <HAL_GetTick>
 8003ac4:	4602      	mov	r2, r0
 8003ac6:	f8d7 31f8 	ldr.w	r3, [r7, #504]	@ 0x1f8
 8003aca:	1ad3      	subs	r3, r2, r3
 8003acc:	2b02      	cmp	r3, #2
 8003ace:	d902      	bls.n	8003ad6 <HAL_RCC_OscConfig+0x6b6>
 8003ad0:	2303      	movs	r3, #3
 8003ad2:	f000 bcdb 	b.w	800448c <HAL_RCC_OscConfig+0x106c>
 8003ad6:	2302      	movs	r3, #2
 8003ad8:	f8c7 3108 	str.w	r3, [r7, #264]	@ 0x108
 8003adc:	f8d7 3108 	ldr.w	r3, [r7, #264]	@ 0x108
 8003ae0:	fa93 f3a3 	rbit	r3, r3
 8003ae4:	f8c7 3104 	str.w	r3, [r7, #260]	@ 0x104
 8003ae8:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8003aec:	f5a3 7380 	sub.w	r3, r3, #256	@ 0x100
 8003af0:	2202      	movs	r2, #2
 8003af2:	601a      	str	r2, [r3, #0]
 8003af4:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8003af8:	f5a3 7380 	sub.w	r3, r3, #256	@ 0x100
 8003afc:	681b      	ldr	r3, [r3, #0]
 8003afe:	fa93 f2a3 	rbit	r2, r3
 8003b02:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8003b06:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 8003b0a:	601a      	str	r2, [r3, #0]
 8003b0c:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8003b10:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8003b14:	2202      	movs	r2, #2
 8003b16:	601a      	str	r2, [r3, #0]
 8003b18:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8003b1c:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8003b20:	681b      	ldr	r3, [r3, #0]
 8003b22:	fa93 f2a3 	rbit	r2, r3
 8003b26:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8003b2a:	f5a3 7386 	sub.w	r3, r3, #268	@ 0x10c
 8003b2e:	601a      	str	r2, [r3, #0]
 8003b30:	4b88      	ldr	r3, [pc, #544]	@ (8003d54 <HAL_RCC_OscConfig+0x934>)
 8003b32:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8003b34:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8003b38:	f5a3 7388 	sub.w	r3, r3, #272	@ 0x110
 8003b3c:	2102      	movs	r1, #2
 8003b3e:	6019      	str	r1, [r3, #0]
 8003b40:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8003b44:	f5a3 7388 	sub.w	r3, r3, #272	@ 0x110
 8003b48:	681b      	ldr	r3, [r3, #0]
 8003b4a:	fa93 f1a3 	rbit	r1, r3
 8003b4e:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8003b52:	f5a3 738a 	sub.w	r3, r3, #276	@ 0x114
 8003b56:	6019      	str	r1, [r3, #0]
 8003b58:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8003b5c:	f5a3 738a 	sub.w	r3, r3, #276	@ 0x114
 8003b60:	681b      	ldr	r3, [r3, #0]
 8003b62:	fab3 f383 	clz	r3, r3
 8003b66:	b2db      	uxtb	r3, r3
 8003b68:	f043 0360 	orr.w	r3, r3, #96	@ 0x60
 8003b6c:	b2db      	uxtb	r3, r3
 8003b6e:	f003 031f 	and.w	r3, r3, #31
 8003b72:	2101      	movs	r1, #1
 8003b74:	fa01 f303 	lsl.w	r3, r1, r3
 8003b78:	4013      	ands	r3, r2
 8003b7a:	2b00      	cmp	r3, #0
 8003b7c:	d0a0      	beq.n	8003ac0 <HAL_RCC_OscConfig+0x6a0>
 8003b7e:	e08d      	b.n	8003c9c <HAL_RCC_OscConfig+0x87c>
 8003b80:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8003b84:	f5a3 738c 	sub.w	r3, r3, #280	@ 0x118
 8003b88:	2201      	movs	r2, #1
 8003b8a:	601a      	str	r2, [r3, #0]
 8003b8c:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8003b90:	f5a3 738c 	sub.w	r3, r3, #280	@ 0x118
 8003b94:	681b      	ldr	r3, [r3, #0]
 8003b96:	fa93 f2a3 	rbit	r2, r3
 8003b9a:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8003b9e:	f5a3 738e 	sub.w	r3, r3, #284	@ 0x11c
 8003ba2:	601a      	str	r2, [r3, #0]
 8003ba4:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8003ba8:	f5a3 738e 	sub.w	r3, r3, #284	@ 0x11c
 8003bac:	681b      	ldr	r3, [r3, #0]
 8003bae:	fab3 f383 	clz	r3, r3
 8003bb2:	b2db      	uxtb	r3, r3
 8003bb4:	461a      	mov	r2, r3
 8003bb6:	4b68      	ldr	r3, [pc, #416]	@ (8003d58 <HAL_RCC_OscConfig+0x938>)
 8003bb8:	4413      	add	r3, r2
 8003bba:	009b      	lsls	r3, r3, #2
 8003bbc:	461a      	mov	r2, r3
 8003bbe:	2300      	movs	r3, #0
 8003bc0:	6013      	str	r3, [r2, #0]
 8003bc2:	f7fe fac1 	bl	8002148 <HAL_GetTick>
 8003bc6:	f8c7 01f8 	str.w	r0, [r7, #504]	@ 0x1f8
 8003bca:	e00a      	b.n	8003be2 <HAL_RCC_OscConfig+0x7c2>
 8003bcc:	f7fe fabc 	bl	8002148 <HAL_GetTick>
 8003bd0:	4602      	mov	r2, r0
 8003bd2:	f8d7 31f8 	ldr.w	r3, [r7, #504]	@ 0x1f8
 8003bd6:	1ad3      	subs	r3, r2, r3
 8003bd8:	2b02      	cmp	r3, #2
 8003bda:	d902      	bls.n	8003be2 <HAL_RCC_OscConfig+0x7c2>
 8003bdc:	2303      	movs	r3, #3
 8003bde:	f000 bc55 	b.w	800448c <HAL_RCC_OscConfig+0x106c>
 8003be2:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8003be6:	f5a3 7390 	sub.w	r3, r3, #288	@ 0x120
 8003bea:	2202      	movs	r2, #2
 8003bec:	601a      	str	r2, [r3, #0]
 8003bee:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8003bf2:	f5a3 7390 	sub.w	r3, r3, #288	@ 0x120
 8003bf6:	681b      	ldr	r3, [r3, #0]
 8003bf8:	fa93 f2a3 	rbit	r2, r3
 8003bfc:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8003c00:	f5a3 7392 	sub.w	r3, r3, #292	@ 0x124
 8003c04:	601a      	str	r2, [r3, #0]
 8003c06:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8003c0a:	f5a3 7394 	sub.w	r3, r3, #296	@ 0x128
 8003c0e:	2202      	movs	r2, #2
 8003c10:	601a      	str	r2, [r3, #0]
 8003c12:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8003c16:	f5a3 7394 	sub.w	r3, r3, #296	@ 0x128
 8003c1a:	681b      	ldr	r3, [r3, #0]
 8003c1c:	fa93 f2a3 	rbit	r2, r3
 8003c20:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8003c24:	f5a3 7396 	sub.w	r3, r3, #300	@ 0x12c
 8003c28:	601a      	str	r2, [r3, #0]
 8003c2a:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8003c2e:	f5a3 7398 	sub.w	r3, r3, #304	@ 0x130
 8003c32:	2202      	movs	r2, #2
 8003c34:	601a      	str	r2, [r3, #0]
 8003c36:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8003c3a:	f5a3 7398 	sub.w	r3, r3, #304	@ 0x130
 8003c3e:	681b      	ldr	r3, [r3, #0]
 8003c40:	fa93 f2a3 	rbit	r2, r3
 8003c44:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8003c48:	f5a3 739a 	sub.w	r3, r3, #308	@ 0x134
 8003c4c:	601a      	str	r2, [r3, #0]
 8003c4e:	4b41      	ldr	r3, [pc, #260]	@ (8003d54 <HAL_RCC_OscConfig+0x934>)
 8003c50:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8003c52:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8003c56:	f5a3 739c 	sub.w	r3, r3, #312	@ 0x138
 8003c5a:	2102      	movs	r1, #2
 8003c5c:	6019      	str	r1, [r3, #0]
 8003c5e:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8003c62:	f5a3 739c 	sub.w	r3, r3, #312	@ 0x138
 8003c66:	681b      	ldr	r3, [r3, #0]
 8003c68:	fa93 f1a3 	rbit	r1, r3
 8003c6c:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8003c70:	f5a3 739e 	sub.w	r3, r3, #316	@ 0x13c
 8003c74:	6019      	str	r1, [r3, #0]
 8003c76:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8003c7a:	f5a3 739e 	sub.w	r3, r3, #316	@ 0x13c
 8003c7e:	681b      	ldr	r3, [r3, #0]
 8003c80:	fab3 f383 	clz	r3, r3
 8003c84:	b2db      	uxtb	r3, r3
 8003c86:	f043 0360 	orr.w	r3, r3, #96	@ 0x60
 8003c8a:	b2db      	uxtb	r3, r3
 8003c8c:	f003 031f 	and.w	r3, r3, #31
 8003c90:	2101      	movs	r1, #1
 8003c92:	fa01 f303 	lsl.w	r3, r1, r3
 8003c96:	4013      	ands	r3, r2
 8003c98:	2b00      	cmp	r3, #0
 8003c9a:	d197      	bne.n	8003bcc <HAL_RCC_OscConfig+0x7ac>
 8003c9c:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8003ca0:	f5a3 73fe 	sub.w	r3, r3, #508	@ 0x1fc
 8003ca4:	681b      	ldr	r3, [r3, #0]
 8003ca6:	681b      	ldr	r3, [r3, #0]
 8003ca8:	f003 0304 	and.w	r3, r3, #4
 8003cac:	2b00      	cmp	r3, #0
 8003cae:	f000 81a1 	beq.w	8003ff4 <HAL_RCC_OscConfig+0xbd4>
 8003cb2:	2300      	movs	r3, #0
 8003cb4:	f887 31ff 	strb.w	r3, [r7, #511]	@ 0x1ff
 8003cb8:	4b26      	ldr	r3, [pc, #152]	@ (8003d54 <HAL_RCC_OscConfig+0x934>)
 8003cba:	69db      	ldr	r3, [r3, #28]
 8003cbc:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8003cc0:	2b00      	cmp	r3, #0
 8003cc2:	d116      	bne.n	8003cf2 <HAL_RCC_OscConfig+0x8d2>
 8003cc4:	4b23      	ldr	r3, [pc, #140]	@ (8003d54 <HAL_RCC_OscConfig+0x934>)
 8003cc6:	69db      	ldr	r3, [r3, #28]
 8003cc8:	4a22      	ldr	r2, [pc, #136]	@ (8003d54 <HAL_RCC_OscConfig+0x934>)
 8003cca:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8003cce:	61d3      	str	r3, [r2, #28]
 8003cd0:	4b20      	ldr	r3, [pc, #128]	@ (8003d54 <HAL_RCC_OscConfig+0x934>)
 8003cd2:	69db      	ldr	r3, [r3, #28]
 8003cd4:	f003 5280 	and.w	r2, r3, #268435456	@ 0x10000000
 8003cd8:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8003cdc:	f5a3 73fc 	sub.w	r3, r3, #504	@ 0x1f8
 8003ce0:	601a      	str	r2, [r3, #0]
 8003ce2:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8003ce6:	f5a3 73fc 	sub.w	r3, r3, #504	@ 0x1f8
 8003cea:	681b      	ldr	r3, [r3, #0]
 8003cec:	2301      	movs	r3, #1
 8003cee:	f887 31ff 	strb.w	r3, [r7, #511]	@ 0x1ff
 8003cf2:	4b1a      	ldr	r3, [pc, #104]	@ (8003d5c <HAL_RCC_OscConfig+0x93c>)
 8003cf4:	681b      	ldr	r3, [r3, #0]
 8003cf6:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003cfa:	2b00      	cmp	r3, #0
 8003cfc:	d11a      	bne.n	8003d34 <HAL_RCC_OscConfig+0x914>
 8003cfe:	4b17      	ldr	r3, [pc, #92]	@ (8003d5c <HAL_RCC_OscConfig+0x93c>)
 8003d00:	681b      	ldr	r3, [r3, #0]
 8003d02:	4a16      	ldr	r2, [pc, #88]	@ (8003d5c <HAL_RCC_OscConfig+0x93c>)
 8003d04:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8003d08:	6013      	str	r3, [r2, #0]
 8003d0a:	f7fe fa1d 	bl	8002148 <HAL_GetTick>
 8003d0e:	f8c7 01f8 	str.w	r0, [r7, #504]	@ 0x1f8
 8003d12:	e009      	b.n	8003d28 <HAL_RCC_OscConfig+0x908>
 8003d14:	f7fe fa18 	bl	8002148 <HAL_GetTick>
 8003d18:	4602      	mov	r2, r0
 8003d1a:	f8d7 31f8 	ldr.w	r3, [r7, #504]	@ 0x1f8
 8003d1e:	1ad3      	subs	r3, r2, r3
 8003d20:	2b64      	cmp	r3, #100	@ 0x64
 8003d22:	d901      	bls.n	8003d28 <HAL_RCC_OscConfig+0x908>
 8003d24:	2303      	movs	r3, #3
 8003d26:	e3b1      	b.n	800448c <HAL_RCC_OscConfig+0x106c>
 8003d28:	4b0c      	ldr	r3, [pc, #48]	@ (8003d5c <HAL_RCC_OscConfig+0x93c>)
 8003d2a:	681b      	ldr	r3, [r3, #0]
 8003d2c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003d30:	2b00      	cmp	r3, #0
 8003d32:	d0ef      	beq.n	8003d14 <HAL_RCC_OscConfig+0x8f4>
 8003d34:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8003d38:	f5a3 73fe 	sub.w	r3, r3, #508	@ 0x1fc
 8003d3c:	681b      	ldr	r3, [r3, #0]
 8003d3e:	68db      	ldr	r3, [r3, #12]
 8003d40:	2b01      	cmp	r3, #1
 8003d42:	d10d      	bne.n	8003d60 <HAL_RCC_OscConfig+0x940>
 8003d44:	4b03      	ldr	r3, [pc, #12]	@ (8003d54 <HAL_RCC_OscConfig+0x934>)
 8003d46:	6a1b      	ldr	r3, [r3, #32]
 8003d48:	4a02      	ldr	r2, [pc, #8]	@ (8003d54 <HAL_RCC_OscConfig+0x934>)
 8003d4a:	f043 0301 	orr.w	r3, r3, #1
 8003d4e:	6213      	str	r3, [r2, #32]
 8003d50:	e03c      	b.n	8003dcc <HAL_RCC_OscConfig+0x9ac>
 8003d52:	bf00      	nop
 8003d54:	40021000 	.word	0x40021000
 8003d58:	10908120 	.word	0x10908120
 8003d5c:	40007000 	.word	0x40007000
 8003d60:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8003d64:	f5a3 73fe 	sub.w	r3, r3, #508	@ 0x1fc
 8003d68:	681b      	ldr	r3, [r3, #0]
 8003d6a:	68db      	ldr	r3, [r3, #12]
 8003d6c:	2b00      	cmp	r3, #0
 8003d6e:	d10c      	bne.n	8003d8a <HAL_RCC_OscConfig+0x96a>
 8003d70:	4bc1      	ldr	r3, [pc, #772]	@ (8004078 <HAL_RCC_OscConfig+0xc58>)
 8003d72:	6a1b      	ldr	r3, [r3, #32]
 8003d74:	4ac0      	ldr	r2, [pc, #768]	@ (8004078 <HAL_RCC_OscConfig+0xc58>)
 8003d76:	f023 0301 	bic.w	r3, r3, #1
 8003d7a:	6213      	str	r3, [r2, #32]
 8003d7c:	4bbe      	ldr	r3, [pc, #760]	@ (8004078 <HAL_RCC_OscConfig+0xc58>)
 8003d7e:	6a1b      	ldr	r3, [r3, #32]
 8003d80:	4abd      	ldr	r2, [pc, #756]	@ (8004078 <HAL_RCC_OscConfig+0xc58>)
 8003d82:	f023 0304 	bic.w	r3, r3, #4
 8003d86:	6213      	str	r3, [r2, #32]
 8003d88:	e020      	b.n	8003dcc <HAL_RCC_OscConfig+0x9ac>
 8003d8a:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8003d8e:	f5a3 73fe 	sub.w	r3, r3, #508	@ 0x1fc
 8003d92:	681b      	ldr	r3, [r3, #0]
 8003d94:	68db      	ldr	r3, [r3, #12]
 8003d96:	2b05      	cmp	r3, #5
 8003d98:	d10c      	bne.n	8003db4 <HAL_RCC_OscConfig+0x994>
 8003d9a:	4bb7      	ldr	r3, [pc, #732]	@ (8004078 <HAL_RCC_OscConfig+0xc58>)
 8003d9c:	6a1b      	ldr	r3, [r3, #32]
 8003d9e:	4ab6      	ldr	r2, [pc, #728]	@ (8004078 <HAL_RCC_OscConfig+0xc58>)
 8003da0:	f043 0304 	orr.w	r3, r3, #4
 8003da4:	6213      	str	r3, [r2, #32]
 8003da6:	4bb4      	ldr	r3, [pc, #720]	@ (8004078 <HAL_RCC_OscConfig+0xc58>)
 8003da8:	6a1b      	ldr	r3, [r3, #32]
 8003daa:	4ab3      	ldr	r2, [pc, #716]	@ (8004078 <HAL_RCC_OscConfig+0xc58>)
 8003dac:	f043 0301 	orr.w	r3, r3, #1
 8003db0:	6213      	str	r3, [r2, #32]
 8003db2:	e00b      	b.n	8003dcc <HAL_RCC_OscConfig+0x9ac>
 8003db4:	4bb0      	ldr	r3, [pc, #704]	@ (8004078 <HAL_RCC_OscConfig+0xc58>)
 8003db6:	6a1b      	ldr	r3, [r3, #32]
 8003db8:	4aaf      	ldr	r2, [pc, #700]	@ (8004078 <HAL_RCC_OscConfig+0xc58>)
 8003dba:	f023 0301 	bic.w	r3, r3, #1
 8003dbe:	6213      	str	r3, [r2, #32]
 8003dc0:	4bad      	ldr	r3, [pc, #692]	@ (8004078 <HAL_RCC_OscConfig+0xc58>)
 8003dc2:	6a1b      	ldr	r3, [r3, #32]
 8003dc4:	4aac      	ldr	r2, [pc, #688]	@ (8004078 <HAL_RCC_OscConfig+0xc58>)
 8003dc6:	f023 0304 	bic.w	r3, r3, #4
 8003dca:	6213      	str	r3, [r2, #32]
 8003dcc:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8003dd0:	f5a3 73fe 	sub.w	r3, r3, #508	@ 0x1fc
 8003dd4:	681b      	ldr	r3, [r3, #0]
 8003dd6:	68db      	ldr	r3, [r3, #12]
 8003dd8:	2b00      	cmp	r3, #0
 8003dda:	f000 8081 	beq.w	8003ee0 <HAL_RCC_OscConfig+0xac0>
 8003dde:	f7fe f9b3 	bl	8002148 <HAL_GetTick>
 8003de2:	f8c7 01f8 	str.w	r0, [r7, #504]	@ 0x1f8
 8003de6:	e00b      	b.n	8003e00 <HAL_RCC_OscConfig+0x9e0>
 8003de8:	f7fe f9ae 	bl	8002148 <HAL_GetTick>
 8003dec:	4602      	mov	r2, r0
 8003dee:	f8d7 31f8 	ldr.w	r3, [r7, #504]	@ 0x1f8
 8003df2:	1ad3      	subs	r3, r2, r3
 8003df4:	f241 3288 	movw	r2, #5000	@ 0x1388
 8003df8:	4293      	cmp	r3, r2
 8003dfa:	d901      	bls.n	8003e00 <HAL_RCC_OscConfig+0x9e0>
 8003dfc:	2303      	movs	r3, #3
 8003dfe:	e345      	b.n	800448c <HAL_RCC_OscConfig+0x106c>
 8003e00:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8003e04:	f5a3 73a0 	sub.w	r3, r3, #320	@ 0x140
 8003e08:	2202      	movs	r2, #2
 8003e0a:	601a      	str	r2, [r3, #0]
 8003e0c:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8003e10:	f5a3 73a0 	sub.w	r3, r3, #320	@ 0x140
 8003e14:	681b      	ldr	r3, [r3, #0]
 8003e16:	fa93 f2a3 	rbit	r2, r3
 8003e1a:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8003e1e:	f5a3 73a2 	sub.w	r3, r3, #324	@ 0x144
 8003e22:	601a      	str	r2, [r3, #0]
 8003e24:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8003e28:	f5a3 73a4 	sub.w	r3, r3, #328	@ 0x148
 8003e2c:	2202      	movs	r2, #2
 8003e2e:	601a      	str	r2, [r3, #0]
 8003e30:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8003e34:	f5a3 73a4 	sub.w	r3, r3, #328	@ 0x148
 8003e38:	681b      	ldr	r3, [r3, #0]
 8003e3a:	fa93 f2a3 	rbit	r2, r3
 8003e3e:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8003e42:	f5a3 73a6 	sub.w	r3, r3, #332	@ 0x14c
 8003e46:	601a      	str	r2, [r3, #0]
 8003e48:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8003e4c:	f5a3 73a6 	sub.w	r3, r3, #332	@ 0x14c
 8003e50:	681b      	ldr	r3, [r3, #0]
 8003e52:	fab3 f383 	clz	r3, r3
 8003e56:	b2db      	uxtb	r3, r3
 8003e58:	095b      	lsrs	r3, r3, #5
 8003e5a:	b2db      	uxtb	r3, r3
 8003e5c:	f043 0302 	orr.w	r3, r3, #2
 8003e60:	b2db      	uxtb	r3, r3
 8003e62:	2b02      	cmp	r3, #2
 8003e64:	d102      	bne.n	8003e6c <HAL_RCC_OscConfig+0xa4c>
 8003e66:	4b84      	ldr	r3, [pc, #528]	@ (8004078 <HAL_RCC_OscConfig+0xc58>)
 8003e68:	6a1b      	ldr	r3, [r3, #32]
 8003e6a:	e013      	b.n	8003e94 <HAL_RCC_OscConfig+0xa74>
 8003e6c:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8003e70:	f5a3 73a8 	sub.w	r3, r3, #336	@ 0x150
 8003e74:	2202      	movs	r2, #2
 8003e76:	601a      	str	r2, [r3, #0]
 8003e78:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8003e7c:	f5a3 73a8 	sub.w	r3, r3, #336	@ 0x150
 8003e80:	681b      	ldr	r3, [r3, #0]
 8003e82:	fa93 f2a3 	rbit	r2, r3
 8003e86:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8003e8a:	f5a3 73aa 	sub.w	r3, r3, #340	@ 0x154
 8003e8e:	601a      	str	r2, [r3, #0]
 8003e90:	4b79      	ldr	r3, [pc, #484]	@ (8004078 <HAL_RCC_OscConfig+0xc58>)
 8003e92:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003e94:	f507 7200 	add.w	r2, r7, #512	@ 0x200
 8003e98:	f5a2 72ac 	sub.w	r2, r2, #344	@ 0x158
 8003e9c:	2102      	movs	r1, #2
 8003e9e:	6011      	str	r1, [r2, #0]
 8003ea0:	f507 7200 	add.w	r2, r7, #512	@ 0x200
 8003ea4:	f5a2 72ac 	sub.w	r2, r2, #344	@ 0x158
 8003ea8:	6812      	ldr	r2, [r2, #0]
 8003eaa:	fa92 f1a2 	rbit	r1, r2
 8003eae:	f507 7200 	add.w	r2, r7, #512	@ 0x200
 8003eb2:	f5a2 72ae 	sub.w	r2, r2, #348	@ 0x15c
 8003eb6:	6011      	str	r1, [r2, #0]
 8003eb8:	f507 7200 	add.w	r2, r7, #512	@ 0x200
 8003ebc:	f5a2 72ae 	sub.w	r2, r2, #348	@ 0x15c
 8003ec0:	6812      	ldr	r2, [r2, #0]
 8003ec2:	fab2 f282 	clz	r2, r2
 8003ec6:	b2d2      	uxtb	r2, r2
 8003ec8:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8003ecc:	b2d2      	uxtb	r2, r2
 8003ece:	f002 021f 	and.w	r2, r2, #31
 8003ed2:	2101      	movs	r1, #1
 8003ed4:	fa01 f202 	lsl.w	r2, r1, r2
 8003ed8:	4013      	ands	r3, r2
 8003eda:	2b00      	cmp	r3, #0
 8003edc:	d084      	beq.n	8003de8 <HAL_RCC_OscConfig+0x9c8>
 8003ede:	e07f      	b.n	8003fe0 <HAL_RCC_OscConfig+0xbc0>
 8003ee0:	f7fe f932 	bl	8002148 <HAL_GetTick>
 8003ee4:	f8c7 01f8 	str.w	r0, [r7, #504]	@ 0x1f8
 8003ee8:	e00b      	b.n	8003f02 <HAL_RCC_OscConfig+0xae2>
 8003eea:	f7fe f92d 	bl	8002148 <HAL_GetTick>
 8003eee:	4602      	mov	r2, r0
 8003ef0:	f8d7 31f8 	ldr.w	r3, [r7, #504]	@ 0x1f8
 8003ef4:	1ad3      	subs	r3, r2, r3
 8003ef6:	f241 3288 	movw	r2, #5000	@ 0x1388
 8003efa:	4293      	cmp	r3, r2
 8003efc:	d901      	bls.n	8003f02 <HAL_RCC_OscConfig+0xae2>
 8003efe:	2303      	movs	r3, #3
 8003f00:	e2c4      	b.n	800448c <HAL_RCC_OscConfig+0x106c>
 8003f02:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8003f06:	f5a3 73b0 	sub.w	r3, r3, #352	@ 0x160
 8003f0a:	2202      	movs	r2, #2
 8003f0c:	601a      	str	r2, [r3, #0]
 8003f0e:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8003f12:	f5a3 73b0 	sub.w	r3, r3, #352	@ 0x160
 8003f16:	681b      	ldr	r3, [r3, #0]
 8003f18:	fa93 f2a3 	rbit	r2, r3
 8003f1c:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8003f20:	f5a3 73b2 	sub.w	r3, r3, #356	@ 0x164
 8003f24:	601a      	str	r2, [r3, #0]
 8003f26:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8003f2a:	f5a3 73b4 	sub.w	r3, r3, #360	@ 0x168
 8003f2e:	2202      	movs	r2, #2
 8003f30:	601a      	str	r2, [r3, #0]
 8003f32:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8003f36:	f5a3 73b4 	sub.w	r3, r3, #360	@ 0x168
 8003f3a:	681b      	ldr	r3, [r3, #0]
 8003f3c:	fa93 f2a3 	rbit	r2, r3
 8003f40:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8003f44:	f5a3 73b6 	sub.w	r3, r3, #364	@ 0x16c
 8003f48:	601a      	str	r2, [r3, #0]
 8003f4a:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8003f4e:	f5a3 73b6 	sub.w	r3, r3, #364	@ 0x16c
 8003f52:	681b      	ldr	r3, [r3, #0]
 8003f54:	fab3 f383 	clz	r3, r3
 8003f58:	b2db      	uxtb	r3, r3
 8003f5a:	095b      	lsrs	r3, r3, #5
 8003f5c:	b2db      	uxtb	r3, r3
 8003f5e:	f043 0302 	orr.w	r3, r3, #2
 8003f62:	b2db      	uxtb	r3, r3
 8003f64:	2b02      	cmp	r3, #2
 8003f66:	d102      	bne.n	8003f6e <HAL_RCC_OscConfig+0xb4e>
 8003f68:	4b43      	ldr	r3, [pc, #268]	@ (8004078 <HAL_RCC_OscConfig+0xc58>)
 8003f6a:	6a1b      	ldr	r3, [r3, #32]
 8003f6c:	e013      	b.n	8003f96 <HAL_RCC_OscConfig+0xb76>
 8003f6e:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8003f72:	f5a3 73b8 	sub.w	r3, r3, #368	@ 0x170
 8003f76:	2202      	movs	r2, #2
 8003f78:	601a      	str	r2, [r3, #0]
 8003f7a:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8003f7e:	f5a3 73b8 	sub.w	r3, r3, #368	@ 0x170
 8003f82:	681b      	ldr	r3, [r3, #0]
 8003f84:	fa93 f2a3 	rbit	r2, r3
 8003f88:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8003f8c:	f5a3 73ba 	sub.w	r3, r3, #372	@ 0x174
 8003f90:	601a      	str	r2, [r3, #0]
 8003f92:	4b39      	ldr	r3, [pc, #228]	@ (8004078 <HAL_RCC_OscConfig+0xc58>)
 8003f94:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003f96:	f507 7200 	add.w	r2, r7, #512	@ 0x200
 8003f9a:	f5a2 72bc 	sub.w	r2, r2, #376	@ 0x178
 8003f9e:	2102      	movs	r1, #2
 8003fa0:	6011      	str	r1, [r2, #0]
 8003fa2:	f507 7200 	add.w	r2, r7, #512	@ 0x200
 8003fa6:	f5a2 72bc 	sub.w	r2, r2, #376	@ 0x178
 8003faa:	6812      	ldr	r2, [r2, #0]
 8003fac:	fa92 f1a2 	rbit	r1, r2
 8003fb0:	f507 7200 	add.w	r2, r7, #512	@ 0x200
 8003fb4:	f5a2 72be 	sub.w	r2, r2, #380	@ 0x17c
 8003fb8:	6011      	str	r1, [r2, #0]
 8003fba:	f507 7200 	add.w	r2, r7, #512	@ 0x200
 8003fbe:	f5a2 72be 	sub.w	r2, r2, #380	@ 0x17c
 8003fc2:	6812      	ldr	r2, [r2, #0]
 8003fc4:	fab2 f282 	clz	r2, r2
 8003fc8:	b2d2      	uxtb	r2, r2
 8003fca:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8003fce:	b2d2      	uxtb	r2, r2
 8003fd0:	f002 021f 	and.w	r2, r2, #31
 8003fd4:	2101      	movs	r1, #1
 8003fd6:	fa01 f202 	lsl.w	r2, r1, r2
 8003fda:	4013      	ands	r3, r2
 8003fdc:	2b00      	cmp	r3, #0
 8003fde:	d184      	bne.n	8003eea <HAL_RCC_OscConfig+0xaca>
 8003fe0:	f897 31ff 	ldrb.w	r3, [r7, #511]	@ 0x1ff
 8003fe4:	2b01      	cmp	r3, #1
 8003fe6:	d105      	bne.n	8003ff4 <HAL_RCC_OscConfig+0xbd4>
 8003fe8:	4b23      	ldr	r3, [pc, #140]	@ (8004078 <HAL_RCC_OscConfig+0xc58>)
 8003fea:	69db      	ldr	r3, [r3, #28]
 8003fec:	4a22      	ldr	r2, [pc, #136]	@ (8004078 <HAL_RCC_OscConfig+0xc58>)
 8003fee:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8003ff2:	61d3      	str	r3, [r2, #28]
 8003ff4:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8003ff8:	f5a3 73fe 	sub.w	r3, r3, #508	@ 0x1fc
 8003ffc:	681b      	ldr	r3, [r3, #0]
 8003ffe:	69db      	ldr	r3, [r3, #28]
 8004000:	2b00      	cmp	r3, #0
 8004002:	f000 8242 	beq.w	800448a <HAL_RCC_OscConfig+0x106a>
 8004006:	4b1c      	ldr	r3, [pc, #112]	@ (8004078 <HAL_RCC_OscConfig+0xc58>)
 8004008:	685b      	ldr	r3, [r3, #4]
 800400a:	f003 030c 	and.w	r3, r3, #12
 800400e:	2b08      	cmp	r3, #8
 8004010:	f000 8213 	beq.w	800443a <HAL_RCC_OscConfig+0x101a>
 8004014:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004018:	f5a3 73fe 	sub.w	r3, r3, #508	@ 0x1fc
 800401c:	681b      	ldr	r3, [r3, #0]
 800401e:	69db      	ldr	r3, [r3, #28]
 8004020:	2b02      	cmp	r3, #2
 8004022:	f040 8162 	bne.w	80042ea <HAL_RCC_OscConfig+0xeca>
 8004026:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 800402a:	f5a3 73c0 	sub.w	r3, r3, #384	@ 0x180
 800402e:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8004032:	601a      	str	r2, [r3, #0]
 8004034:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004038:	f5a3 73c0 	sub.w	r3, r3, #384	@ 0x180
 800403c:	681b      	ldr	r3, [r3, #0]
 800403e:	fa93 f2a3 	rbit	r2, r3
 8004042:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004046:	f5a3 73c2 	sub.w	r3, r3, #388	@ 0x184
 800404a:	601a      	str	r2, [r3, #0]
 800404c:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004050:	f5a3 73c2 	sub.w	r3, r3, #388	@ 0x184
 8004054:	681b      	ldr	r3, [r3, #0]
 8004056:	fab3 f383 	clz	r3, r3
 800405a:	b2db      	uxtb	r3, r3
 800405c:	f103 5384 	add.w	r3, r3, #276824064	@ 0x10800000
 8004060:	f503 1384 	add.w	r3, r3, #1081344	@ 0x108000
 8004064:	009b      	lsls	r3, r3, #2
 8004066:	461a      	mov	r2, r3
 8004068:	2300      	movs	r3, #0
 800406a:	6013      	str	r3, [r2, #0]
 800406c:	f7fe f86c 	bl	8002148 <HAL_GetTick>
 8004070:	f8c7 01f8 	str.w	r0, [r7, #504]	@ 0x1f8
 8004074:	e00c      	b.n	8004090 <HAL_RCC_OscConfig+0xc70>
 8004076:	bf00      	nop
 8004078:	40021000 	.word	0x40021000
 800407c:	f7fe f864 	bl	8002148 <HAL_GetTick>
 8004080:	4602      	mov	r2, r0
 8004082:	f8d7 31f8 	ldr.w	r3, [r7, #504]	@ 0x1f8
 8004086:	1ad3      	subs	r3, r2, r3
 8004088:	2b02      	cmp	r3, #2
 800408a:	d901      	bls.n	8004090 <HAL_RCC_OscConfig+0xc70>
 800408c:	2303      	movs	r3, #3
 800408e:	e1fd      	b.n	800448c <HAL_RCC_OscConfig+0x106c>
 8004090:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004094:	f5a3 73c4 	sub.w	r3, r3, #392	@ 0x188
 8004098:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 800409c:	601a      	str	r2, [r3, #0]
 800409e:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80040a2:	f5a3 73c4 	sub.w	r3, r3, #392	@ 0x188
 80040a6:	681b      	ldr	r3, [r3, #0]
 80040a8:	fa93 f2a3 	rbit	r2, r3
 80040ac:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80040b0:	f5a3 73c6 	sub.w	r3, r3, #396	@ 0x18c
 80040b4:	601a      	str	r2, [r3, #0]
 80040b6:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80040ba:	f5a3 73c6 	sub.w	r3, r3, #396	@ 0x18c
 80040be:	681b      	ldr	r3, [r3, #0]
 80040c0:	fab3 f383 	clz	r3, r3
 80040c4:	b2db      	uxtb	r3, r3
 80040c6:	095b      	lsrs	r3, r3, #5
 80040c8:	b2db      	uxtb	r3, r3
 80040ca:	f043 0301 	orr.w	r3, r3, #1
 80040ce:	b2db      	uxtb	r3, r3
 80040d0:	2b01      	cmp	r3, #1
 80040d2:	d102      	bne.n	80040da <HAL_RCC_OscConfig+0xcba>
 80040d4:	4bb0      	ldr	r3, [pc, #704]	@ (8004398 <HAL_RCC_OscConfig+0xf78>)
 80040d6:	681b      	ldr	r3, [r3, #0]
 80040d8:	e027      	b.n	800412a <HAL_RCC_OscConfig+0xd0a>
 80040da:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80040de:	f5a3 73c8 	sub.w	r3, r3, #400	@ 0x190
 80040e2:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 80040e6:	601a      	str	r2, [r3, #0]
 80040e8:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80040ec:	f5a3 73c8 	sub.w	r3, r3, #400	@ 0x190
 80040f0:	681b      	ldr	r3, [r3, #0]
 80040f2:	fa93 f2a3 	rbit	r2, r3
 80040f6:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80040fa:	f5a3 73ca 	sub.w	r3, r3, #404	@ 0x194
 80040fe:	601a      	str	r2, [r3, #0]
 8004100:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004104:	f5a3 73cc 	sub.w	r3, r3, #408	@ 0x198
 8004108:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 800410c:	601a      	str	r2, [r3, #0]
 800410e:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004112:	f5a3 73cc 	sub.w	r3, r3, #408	@ 0x198
 8004116:	681b      	ldr	r3, [r3, #0]
 8004118:	fa93 f2a3 	rbit	r2, r3
 800411c:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004120:	f5a3 73ce 	sub.w	r3, r3, #412	@ 0x19c
 8004124:	601a      	str	r2, [r3, #0]
 8004126:	4b9c      	ldr	r3, [pc, #624]	@ (8004398 <HAL_RCC_OscConfig+0xf78>)
 8004128:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800412a:	f507 7200 	add.w	r2, r7, #512	@ 0x200
 800412e:	f5a2 72d0 	sub.w	r2, r2, #416	@ 0x1a0
 8004132:	f04f 7100 	mov.w	r1, #33554432	@ 0x2000000
 8004136:	6011      	str	r1, [r2, #0]
 8004138:	f507 7200 	add.w	r2, r7, #512	@ 0x200
 800413c:	f5a2 72d0 	sub.w	r2, r2, #416	@ 0x1a0
 8004140:	6812      	ldr	r2, [r2, #0]
 8004142:	fa92 f1a2 	rbit	r1, r2
 8004146:	f507 7200 	add.w	r2, r7, #512	@ 0x200
 800414a:	f5a2 72d2 	sub.w	r2, r2, #420	@ 0x1a4
 800414e:	6011      	str	r1, [r2, #0]
 8004150:	f507 7200 	add.w	r2, r7, #512	@ 0x200
 8004154:	f5a2 72d2 	sub.w	r2, r2, #420	@ 0x1a4
 8004158:	6812      	ldr	r2, [r2, #0]
 800415a:	fab2 f282 	clz	r2, r2
 800415e:	b2d2      	uxtb	r2, r2
 8004160:	f042 0220 	orr.w	r2, r2, #32
 8004164:	b2d2      	uxtb	r2, r2
 8004166:	f002 021f 	and.w	r2, r2, #31
 800416a:	2101      	movs	r1, #1
 800416c:	fa01 f202 	lsl.w	r2, r1, r2
 8004170:	4013      	ands	r3, r2
 8004172:	2b00      	cmp	r3, #0
 8004174:	d182      	bne.n	800407c <HAL_RCC_OscConfig+0xc5c>
 8004176:	4b88      	ldr	r3, [pc, #544]	@ (8004398 <HAL_RCC_OscConfig+0xf78>)
 8004178:	685b      	ldr	r3, [r3, #4]
 800417a:	f423 1274 	bic.w	r2, r3, #3997696	@ 0x3d0000
 800417e:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004182:	f5a3 73fe 	sub.w	r3, r3, #508	@ 0x1fc
 8004186:	681b      	ldr	r3, [r3, #0]
 8004188:	6a59      	ldr	r1, [r3, #36]	@ 0x24
 800418a:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 800418e:	f5a3 73fe 	sub.w	r3, r3, #508	@ 0x1fc
 8004192:	681b      	ldr	r3, [r3, #0]
 8004194:	6a1b      	ldr	r3, [r3, #32]
 8004196:	430b      	orrs	r3, r1
 8004198:	497f      	ldr	r1, [pc, #508]	@ (8004398 <HAL_RCC_OscConfig+0xf78>)
 800419a:	4313      	orrs	r3, r2
 800419c:	604b      	str	r3, [r1, #4]
 800419e:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80041a2:	f5a3 73d4 	sub.w	r3, r3, #424	@ 0x1a8
 80041a6:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 80041aa:	601a      	str	r2, [r3, #0]
 80041ac:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80041b0:	f5a3 73d4 	sub.w	r3, r3, #424	@ 0x1a8
 80041b4:	681b      	ldr	r3, [r3, #0]
 80041b6:	fa93 f2a3 	rbit	r2, r3
 80041ba:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80041be:	f5a3 73d6 	sub.w	r3, r3, #428	@ 0x1ac
 80041c2:	601a      	str	r2, [r3, #0]
 80041c4:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80041c8:	f5a3 73d6 	sub.w	r3, r3, #428	@ 0x1ac
 80041cc:	681b      	ldr	r3, [r3, #0]
 80041ce:	fab3 f383 	clz	r3, r3
 80041d2:	b2db      	uxtb	r3, r3
 80041d4:	f103 5384 	add.w	r3, r3, #276824064	@ 0x10800000
 80041d8:	f503 1384 	add.w	r3, r3, #1081344	@ 0x108000
 80041dc:	009b      	lsls	r3, r3, #2
 80041de:	461a      	mov	r2, r3
 80041e0:	2301      	movs	r3, #1
 80041e2:	6013      	str	r3, [r2, #0]
 80041e4:	f7fd ffb0 	bl	8002148 <HAL_GetTick>
 80041e8:	f8c7 01f8 	str.w	r0, [r7, #504]	@ 0x1f8
 80041ec:	e009      	b.n	8004202 <HAL_RCC_OscConfig+0xde2>
 80041ee:	f7fd ffab 	bl	8002148 <HAL_GetTick>
 80041f2:	4602      	mov	r2, r0
 80041f4:	f8d7 31f8 	ldr.w	r3, [r7, #504]	@ 0x1f8
 80041f8:	1ad3      	subs	r3, r2, r3
 80041fa:	2b02      	cmp	r3, #2
 80041fc:	d901      	bls.n	8004202 <HAL_RCC_OscConfig+0xde2>
 80041fe:	2303      	movs	r3, #3
 8004200:	e144      	b.n	800448c <HAL_RCC_OscConfig+0x106c>
 8004202:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004206:	f5a3 73d8 	sub.w	r3, r3, #432	@ 0x1b0
 800420a:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 800420e:	601a      	str	r2, [r3, #0]
 8004210:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004214:	f5a3 73d8 	sub.w	r3, r3, #432	@ 0x1b0
 8004218:	681b      	ldr	r3, [r3, #0]
 800421a:	fa93 f2a3 	rbit	r2, r3
 800421e:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004222:	f5a3 73da 	sub.w	r3, r3, #436	@ 0x1b4
 8004226:	601a      	str	r2, [r3, #0]
 8004228:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 800422c:	f5a3 73da 	sub.w	r3, r3, #436	@ 0x1b4
 8004230:	681b      	ldr	r3, [r3, #0]
 8004232:	fab3 f383 	clz	r3, r3
 8004236:	b2db      	uxtb	r3, r3
 8004238:	095b      	lsrs	r3, r3, #5
 800423a:	b2db      	uxtb	r3, r3
 800423c:	f043 0301 	orr.w	r3, r3, #1
 8004240:	b2db      	uxtb	r3, r3
 8004242:	2b01      	cmp	r3, #1
 8004244:	d102      	bne.n	800424c <HAL_RCC_OscConfig+0xe2c>
 8004246:	4b54      	ldr	r3, [pc, #336]	@ (8004398 <HAL_RCC_OscConfig+0xf78>)
 8004248:	681b      	ldr	r3, [r3, #0]
 800424a:	e027      	b.n	800429c <HAL_RCC_OscConfig+0xe7c>
 800424c:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004250:	f5a3 73dc 	sub.w	r3, r3, #440	@ 0x1b8
 8004254:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8004258:	601a      	str	r2, [r3, #0]
 800425a:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 800425e:	f5a3 73dc 	sub.w	r3, r3, #440	@ 0x1b8
 8004262:	681b      	ldr	r3, [r3, #0]
 8004264:	fa93 f2a3 	rbit	r2, r3
 8004268:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 800426c:	f5a3 73de 	sub.w	r3, r3, #444	@ 0x1bc
 8004270:	601a      	str	r2, [r3, #0]
 8004272:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004276:	f5a3 73e0 	sub.w	r3, r3, #448	@ 0x1c0
 800427a:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 800427e:	601a      	str	r2, [r3, #0]
 8004280:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004284:	f5a3 73e0 	sub.w	r3, r3, #448	@ 0x1c0
 8004288:	681b      	ldr	r3, [r3, #0]
 800428a:	fa93 f2a3 	rbit	r2, r3
 800428e:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004292:	f5a3 73e2 	sub.w	r3, r3, #452	@ 0x1c4
 8004296:	601a      	str	r2, [r3, #0]
 8004298:	4b3f      	ldr	r3, [pc, #252]	@ (8004398 <HAL_RCC_OscConfig+0xf78>)
 800429a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800429c:	f507 7200 	add.w	r2, r7, #512	@ 0x200
 80042a0:	f5a2 72e4 	sub.w	r2, r2, #456	@ 0x1c8
 80042a4:	f04f 7100 	mov.w	r1, #33554432	@ 0x2000000
 80042a8:	6011      	str	r1, [r2, #0]
 80042aa:	f507 7200 	add.w	r2, r7, #512	@ 0x200
 80042ae:	f5a2 72e4 	sub.w	r2, r2, #456	@ 0x1c8
 80042b2:	6812      	ldr	r2, [r2, #0]
 80042b4:	fa92 f1a2 	rbit	r1, r2
 80042b8:	f507 7200 	add.w	r2, r7, #512	@ 0x200
 80042bc:	f5a2 72e6 	sub.w	r2, r2, #460	@ 0x1cc
 80042c0:	6011      	str	r1, [r2, #0]
 80042c2:	f507 7200 	add.w	r2, r7, #512	@ 0x200
 80042c6:	f5a2 72e6 	sub.w	r2, r2, #460	@ 0x1cc
 80042ca:	6812      	ldr	r2, [r2, #0]
 80042cc:	fab2 f282 	clz	r2, r2
 80042d0:	b2d2      	uxtb	r2, r2
 80042d2:	f042 0220 	orr.w	r2, r2, #32
 80042d6:	b2d2      	uxtb	r2, r2
 80042d8:	f002 021f 	and.w	r2, r2, #31
 80042dc:	2101      	movs	r1, #1
 80042de:	fa01 f202 	lsl.w	r2, r1, r2
 80042e2:	4013      	ands	r3, r2
 80042e4:	2b00      	cmp	r3, #0
 80042e6:	d082      	beq.n	80041ee <HAL_RCC_OscConfig+0xdce>
 80042e8:	e0cf      	b.n	800448a <HAL_RCC_OscConfig+0x106a>
 80042ea:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80042ee:	f5a3 73e8 	sub.w	r3, r3, #464	@ 0x1d0
 80042f2:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 80042f6:	601a      	str	r2, [r3, #0]
 80042f8:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80042fc:	f5a3 73e8 	sub.w	r3, r3, #464	@ 0x1d0
 8004300:	681b      	ldr	r3, [r3, #0]
 8004302:	fa93 f2a3 	rbit	r2, r3
 8004306:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 800430a:	f5a3 73ea 	sub.w	r3, r3, #468	@ 0x1d4
 800430e:	601a      	str	r2, [r3, #0]
 8004310:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004314:	f5a3 73ea 	sub.w	r3, r3, #468	@ 0x1d4
 8004318:	681b      	ldr	r3, [r3, #0]
 800431a:	fab3 f383 	clz	r3, r3
 800431e:	b2db      	uxtb	r3, r3
 8004320:	f103 5384 	add.w	r3, r3, #276824064	@ 0x10800000
 8004324:	f503 1384 	add.w	r3, r3, #1081344	@ 0x108000
 8004328:	009b      	lsls	r3, r3, #2
 800432a:	461a      	mov	r2, r3
 800432c:	2300      	movs	r3, #0
 800432e:	6013      	str	r3, [r2, #0]
 8004330:	f7fd ff0a 	bl	8002148 <HAL_GetTick>
 8004334:	f8c7 01f8 	str.w	r0, [r7, #504]	@ 0x1f8
 8004338:	e009      	b.n	800434e <HAL_RCC_OscConfig+0xf2e>
 800433a:	f7fd ff05 	bl	8002148 <HAL_GetTick>
 800433e:	4602      	mov	r2, r0
 8004340:	f8d7 31f8 	ldr.w	r3, [r7, #504]	@ 0x1f8
 8004344:	1ad3      	subs	r3, r2, r3
 8004346:	2b02      	cmp	r3, #2
 8004348:	d901      	bls.n	800434e <HAL_RCC_OscConfig+0xf2e>
 800434a:	2303      	movs	r3, #3
 800434c:	e09e      	b.n	800448c <HAL_RCC_OscConfig+0x106c>
 800434e:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004352:	f5a3 73ec 	sub.w	r3, r3, #472	@ 0x1d8
 8004356:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 800435a:	601a      	str	r2, [r3, #0]
 800435c:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004360:	f5a3 73ec 	sub.w	r3, r3, #472	@ 0x1d8
 8004364:	681b      	ldr	r3, [r3, #0]
 8004366:	fa93 f2a3 	rbit	r2, r3
 800436a:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 800436e:	f5a3 73ee 	sub.w	r3, r3, #476	@ 0x1dc
 8004372:	601a      	str	r2, [r3, #0]
 8004374:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004378:	f5a3 73ee 	sub.w	r3, r3, #476	@ 0x1dc
 800437c:	681b      	ldr	r3, [r3, #0]
 800437e:	fab3 f383 	clz	r3, r3
 8004382:	b2db      	uxtb	r3, r3
 8004384:	095b      	lsrs	r3, r3, #5
 8004386:	b2db      	uxtb	r3, r3
 8004388:	f043 0301 	orr.w	r3, r3, #1
 800438c:	b2db      	uxtb	r3, r3
 800438e:	2b01      	cmp	r3, #1
 8004390:	d104      	bne.n	800439c <HAL_RCC_OscConfig+0xf7c>
 8004392:	4b01      	ldr	r3, [pc, #4]	@ (8004398 <HAL_RCC_OscConfig+0xf78>)
 8004394:	681b      	ldr	r3, [r3, #0]
 8004396:	e029      	b.n	80043ec <HAL_RCC_OscConfig+0xfcc>
 8004398:	40021000 	.word	0x40021000
 800439c:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80043a0:	f5a3 73f0 	sub.w	r3, r3, #480	@ 0x1e0
 80043a4:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 80043a8:	601a      	str	r2, [r3, #0]
 80043aa:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80043ae:	f5a3 73f0 	sub.w	r3, r3, #480	@ 0x1e0
 80043b2:	681b      	ldr	r3, [r3, #0]
 80043b4:	fa93 f2a3 	rbit	r2, r3
 80043b8:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80043bc:	f5a3 73f2 	sub.w	r3, r3, #484	@ 0x1e4
 80043c0:	601a      	str	r2, [r3, #0]
 80043c2:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80043c6:	f5a3 73f4 	sub.w	r3, r3, #488	@ 0x1e8
 80043ca:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 80043ce:	601a      	str	r2, [r3, #0]
 80043d0:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80043d4:	f5a3 73f4 	sub.w	r3, r3, #488	@ 0x1e8
 80043d8:	681b      	ldr	r3, [r3, #0]
 80043da:	fa93 f2a3 	rbit	r2, r3
 80043de:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80043e2:	f5a3 73f6 	sub.w	r3, r3, #492	@ 0x1ec
 80043e6:	601a      	str	r2, [r3, #0]
 80043e8:	4b2b      	ldr	r3, [pc, #172]	@ (8004498 <HAL_RCC_OscConfig+0x1078>)
 80043ea:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80043ec:	f507 7200 	add.w	r2, r7, #512	@ 0x200
 80043f0:	f5a2 72f8 	sub.w	r2, r2, #496	@ 0x1f0
 80043f4:	f04f 7100 	mov.w	r1, #33554432	@ 0x2000000
 80043f8:	6011      	str	r1, [r2, #0]
 80043fa:	f507 7200 	add.w	r2, r7, #512	@ 0x200
 80043fe:	f5a2 72f8 	sub.w	r2, r2, #496	@ 0x1f0
 8004402:	6812      	ldr	r2, [r2, #0]
 8004404:	fa92 f1a2 	rbit	r1, r2
 8004408:	f507 7200 	add.w	r2, r7, #512	@ 0x200
 800440c:	f5a2 72fa 	sub.w	r2, r2, #500	@ 0x1f4
 8004410:	6011      	str	r1, [r2, #0]
 8004412:	f507 7200 	add.w	r2, r7, #512	@ 0x200
 8004416:	f5a2 72fa 	sub.w	r2, r2, #500	@ 0x1f4
 800441a:	6812      	ldr	r2, [r2, #0]
 800441c:	fab2 f282 	clz	r2, r2
 8004420:	b2d2      	uxtb	r2, r2
 8004422:	f042 0220 	orr.w	r2, r2, #32
 8004426:	b2d2      	uxtb	r2, r2
 8004428:	f002 021f 	and.w	r2, r2, #31
 800442c:	2101      	movs	r1, #1
 800442e:	fa01 f202 	lsl.w	r2, r1, r2
 8004432:	4013      	ands	r3, r2
 8004434:	2b00      	cmp	r3, #0
 8004436:	d180      	bne.n	800433a <HAL_RCC_OscConfig+0xf1a>
 8004438:	e027      	b.n	800448a <HAL_RCC_OscConfig+0x106a>
 800443a:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 800443e:	f5a3 73fe 	sub.w	r3, r3, #508	@ 0x1fc
 8004442:	681b      	ldr	r3, [r3, #0]
 8004444:	69db      	ldr	r3, [r3, #28]
 8004446:	2b01      	cmp	r3, #1
 8004448:	d101      	bne.n	800444e <HAL_RCC_OscConfig+0x102e>
 800444a:	2301      	movs	r3, #1
 800444c:	e01e      	b.n	800448c <HAL_RCC_OscConfig+0x106c>
 800444e:	4b12      	ldr	r3, [pc, #72]	@ (8004498 <HAL_RCC_OscConfig+0x1078>)
 8004450:	685b      	ldr	r3, [r3, #4]
 8004452:	f8c7 31f4 	str.w	r3, [r7, #500]	@ 0x1f4
 8004456:	f8d7 31f4 	ldr.w	r3, [r7, #500]	@ 0x1f4
 800445a:	f403 3280 	and.w	r2, r3, #65536	@ 0x10000
 800445e:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004462:	f5a3 73fe 	sub.w	r3, r3, #508	@ 0x1fc
 8004466:	681b      	ldr	r3, [r3, #0]
 8004468:	6a1b      	ldr	r3, [r3, #32]
 800446a:	429a      	cmp	r2, r3
 800446c:	d10b      	bne.n	8004486 <HAL_RCC_OscConfig+0x1066>
 800446e:	f8d7 31f4 	ldr.w	r3, [r7, #500]	@ 0x1f4
 8004472:	f403 1270 	and.w	r2, r3, #3932160	@ 0x3c0000
 8004476:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 800447a:	f5a3 73fe 	sub.w	r3, r3, #508	@ 0x1fc
 800447e:	681b      	ldr	r3, [r3, #0]
 8004480:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004482:	429a      	cmp	r2, r3
 8004484:	d001      	beq.n	800448a <HAL_RCC_OscConfig+0x106a>
 8004486:	2301      	movs	r3, #1
 8004488:	e000      	b.n	800448c <HAL_RCC_OscConfig+0x106c>
 800448a:	2300      	movs	r3, #0
 800448c:	4618      	mov	r0, r3
 800448e:	f507 7700 	add.w	r7, r7, #512	@ 0x200
 8004492:	46bd      	mov	sp, r7
 8004494:	bd80      	pop	{r7, pc}
 8004496:	bf00      	nop
 8004498:	40021000 	.word	0x40021000

0800449c <HAL_RCC_ClockConfig>:
 800449c:	b580      	push	{r7, lr}
 800449e:	b09e      	sub	sp, #120	@ 0x78
 80044a0:	af00      	add	r7, sp, #0
 80044a2:	6078      	str	r0, [r7, #4]
 80044a4:	6039      	str	r1, [r7, #0]
 80044a6:	2300      	movs	r3, #0
 80044a8:	677b      	str	r3, [r7, #116]	@ 0x74
 80044aa:	687b      	ldr	r3, [r7, #4]
 80044ac:	2b00      	cmp	r3, #0
 80044ae:	d101      	bne.n	80044b4 <HAL_RCC_ClockConfig+0x18>
 80044b0:	2301      	movs	r3, #1
 80044b2:	e162      	b.n	800477a <HAL_RCC_ClockConfig+0x2de>
 80044b4:	4b90      	ldr	r3, [pc, #576]	@ (80046f8 <HAL_RCC_ClockConfig+0x25c>)
 80044b6:	681b      	ldr	r3, [r3, #0]
 80044b8:	f003 0307 	and.w	r3, r3, #7
 80044bc:	683a      	ldr	r2, [r7, #0]
 80044be:	429a      	cmp	r2, r3
 80044c0:	d910      	bls.n	80044e4 <HAL_RCC_ClockConfig+0x48>
 80044c2:	4b8d      	ldr	r3, [pc, #564]	@ (80046f8 <HAL_RCC_ClockConfig+0x25c>)
 80044c4:	681b      	ldr	r3, [r3, #0]
 80044c6:	f023 0207 	bic.w	r2, r3, #7
 80044ca:	498b      	ldr	r1, [pc, #556]	@ (80046f8 <HAL_RCC_ClockConfig+0x25c>)
 80044cc:	683b      	ldr	r3, [r7, #0]
 80044ce:	4313      	orrs	r3, r2
 80044d0:	600b      	str	r3, [r1, #0]
 80044d2:	4b89      	ldr	r3, [pc, #548]	@ (80046f8 <HAL_RCC_ClockConfig+0x25c>)
 80044d4:	681b      	ldr	r3, [r3, #0]
 80044d6:	f003 0307 	and.w	r3, r3, #7
 80044da:	683a      	ldr	r2, [r7, #0]
 80044dc:	429a      	cmp	r2, r3
 80044de:	d001      	beq.n	80044e4 <HAL_RCC_ClockConfig+0x48>
 80044e0:	2301      	movs	r3, #1
 80044e2:	e14a      	b.n	800477a <HAL_RCC_ClockConfig+0x2de>
 80044e4:	687b      	ldr	r3, [r7, #4]
 80044e6:	681b      	ldr	r3, [r3, #0]
 80044e8:	f003 0302 	and.w	r3, r3, #2
 80044ec:	2b00      	cmp	r3, #0
 80044ee:	d008      	beq.n	8004502 <HAL_RCC_ClockConfig+0x66>
 80044f0:	4b82      	ldr	r3, [pc, #520]	@ (80046fc <HAL_RCC_ClockConfig+0x260>)
 80044f2:	685b      	ldr	r3, [r3, #4]
 80044f4:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 80044f8:	687b      	ldr	r3, [r7, #4]
 80044fa:	689b      	ldr	r3, [r3, #8]
 80044fc:	497f      	ldr	r1, [pc, #508]	@ (80046fc <HAL_RCC_ClockConfig+0x260>)
 80044fe:	4313      	orrs	r3, r2
 8004500:	604b      	str	r3, [r1, #4]
 8004502:	687b      	ldr	r3, [r7, #4]
 8004504:	681b      	ldr	r3, [r3, #0]
 8004506:	f003 0301 	and.w	r3, r3, #1
 800450a:	2b00      	cmp	r3, #0
 800450c:	f000 80dc 	beq.w	80046c8 <HAL_RCC_ClockConfig+0x22c>
 8004510:	687b      	ldr	r3, [r7, #4]
 8004512:	685b      	ldr	r3, [r3, #4]
 8004514:	2b01      	cmp	r3, #1
 8004516:	d13c      	bne.n	8004592 <HAL_RCC_ClockConfig+0xf6>
 8004518:	f44f 3300 	mov.w	r3, #131072	@ 0x20000
 800451c:	673b      	str	r3, [r7, #112]	@ 0x70
 800451e:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 8004520:	fa93 f3a3 	rbit	r3, r3
 8004524:	66fb      	str	r3, [r7, #108]	@ 0x6c
 8004526:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8004528:	fab3 f383 	clz	r3, r3
 800452c:	b2db      	uxtb	r3, r3
 800452e:	095b      	lsrs	r3, r3, #5
 8004530:	b2db      	uxtb	r3, r3
 8004532:	f043 0301 	orr.w	r3, r3, #1
 8004536:	b2db      	uxtb	r3, r3
 8004538:	2b01      	cmp	r3, #1
 800453a:	d102      	bne.n	8004542 <HAL_RCC_ClockConfig+0xa6>
 800453c:	4b6f      	ldr	r3, [pc, #444]	@ (80046fc <HAL_RCC_ClockConfig+0x260>)
 800453e:	681b      	ldr	r3, [r3, #0]
 8004540:	e00f      	b.n	8004562 <HAL_RCC_ClockConfig+0xc6>
 8004542:	f44f 3300 	mov.w	r3, #131072	@ 0x20000
 8004546:	66bb      	str	r3, [r7, #104]	@ 0x68
 8004548:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 800454a:	fa93 f3a3 	rbit	r3, r3
 800454e:	667b      	str	r3, [r7, #100]	@ 0x64
 8004550:	f44f 3300 	mov.w	r3, #131072	@ 0x20000
 8004554:	663b      	str	r3, [r7, #96]	@ 0x60
 8004556:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 8004558:	fa93 f3a3 	rbit	r3, r3
 800455c:	65fb      	str	r3, [r7, #92]	@ 0x5c
 800455e:	4b67      	ldr	r3, [pc, #412]	@ (80046fc <HAL_RCC_ClockConfig+0x260>)
 8004560:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004562:	f44f 3200 	mov.w	r2, #131072	@ 0x20000
 8004566:	65ba      	str	r2, [r7, #88]	@ 0x58
 8004568:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 800456a:	fa92 f2a2 	rbit	r2, r2
 800456e:	657a      	str	r2, [r7, #84]	@ 0x54
 8004570:	6d7a      	ldr	r2, [r7, #84]	@ 0x54
 8004572:	fab2 f282 	clz	r2, r2
 8004576:	b2d2      	uxtb	r2, r2
 8004578:	f042 0220 	orr.w	r2, r2, #32
 800457c:	b2d2      	uxtb	r2, r2
 800457e:	f002 021f 	and.w	r2, r2, #31
 8004582:	2101      	movs	r1, #1
 8004584:	fa01 f202 	lsl.w	r2, r1, r2
 8004588:	4013      	ands	r3, r2
 800458a:	2b00      	cmp	r3, #0
 800458c:	d17b      	bne.n	8004686 <HAL_RCC_ClockConfig+0x1ea>
 800458e:	2301      	movs	r3, #1
 8004590:	e0f3      	b.n	800477a <HAL_RCC_ClockConfig+0x2de>
 8004592:	687b      	ldr	r3, [r7, #4]
 8004594:	685b      	ldr	r3, [r3, #4]
 8004596:	2b02      	cmp	r3, #2
 8004598:	d13c      	bne.n	8004614 <HAL_RCC_ClockConfig+0x178>
 800459a:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
 800459e:	653b      	str	r3, [r7, #80]	@ 0x50
 80045a0:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 80045a2:	fa93 f3a3 	rbit	r3, r3
 80045a6:	64fb      	str	r3, [r7, #76]	@ 0x4c
 80045a8:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 80045aa:	fab3 f383 	clz	r3, r3
 80045ae:	b2db      	uxtb	r3, r3
 80045b0:	095b      	lsrs	r3, r3, #5
 80045b2:	b2db      	uxtb	r3, r3
 80045b4:	f043 0301 	orr.w	r3, r3, #1
 80045b8:	b2db      	uxtb	r3, r3
 80045ba:	2b01      	cmp	r3, #1
 80045bc:	d102      	bne.n	80045c4 <HAL_RCC_ClockConfig+0x128>
 80045be:	4b4f      	ldr	r3, [pc, #316]	@ (80046fc <HAL_RCC_ClockConfig+0x260>)
 80045c0:	681b      	ldr	r3, [r3, #0]
 80045c2:	e00f      	b.n	80045e4 <HAL_RCC_ClockConfig+0x148>
 80045c4:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
 80045c8:	64bb      	str	r3, [r7, #72]	@ 0x48
 80045ca:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 80045cc:	fa93 f3a3 	rbit	r3, r3
 80045d0:	647b      	str	r3, [r7, #68]	@ 0x44
 80045d2:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
 80045d6:	643b      	str	r3, [r7, #64]	@ 0x40
 80045d8:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 80045da:	fa93 f3a3 	rbit	r3, r3
 80045de:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80045e0:	4b46      	ldr	r3, [pc, #280]	@ (80046fc <HAL_RCC_ClockConfig+0x260>)
 80045e2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80045e4:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 80045e8:	63ba      	str	r2, [r7, #56]	@ 0x38
 80045ea:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 80045ec:	fa92 f2a2 	rbit	r2, r2
 80045f0:	637a      	str	r2, [r7, #52]	@ 0x34
 80045f2:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 80045f4:	fab2 f282 	clz	r2, r2
 80045f8:	b2d2      	uxtb	r2, r2
 80045fa:	f042 0220 	orr.w	r2, r2, #32
 80045fe:	b2d2      	uxtb	r2, r2
 8004600:	f002 021f 	and.w	r2, r2, #31
 8004604:	2101      	movs	r1, #1
 8004606:	fa01 f202 	lsl.w	r2, r1, r2
 800460a:	4013      	ands	r3, r2
 800460c:	2b00      	cmp	r3, #0
 800460e:	d13a      	bne.n	8004686 <HAL_RCC_ClockConfig+0x1ea>
 8004610:	2301      	movs	r3, #1
 8004612:	e0b2      	b.n	800477a <HAL_RCC_ClockConfig+0x2de>
 8004614:	2302      	movs	r3, #2
 8004616:	633b      	str	r3, [r7, #48]	@ 0x30
 8004618:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800461a:	fa93 f3a3 	rbit	r3, r3
 800461e:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8004620:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8004622:	fab3 f383 	clz	r3, r3
 8004626:	b2db      	uxtb	r3, r3
 8004628:	095b      	lsrs	r3, r3, #5
 800462a:	b2db      	uxtb	r3, r3
 800462c:	f043 0301 	orr.w	r3, r3, #1
 8004630:	b2db      	uxtb	r3, r3
 8004632:	2b01      	cmp	r3, #1
 8004634:	d102      	bne.n	800463c <HAL_RCC_ClockConfig+0x1a0>
 8004636:	4b31      	ldr	r3, [pc, #196]	@ (80046fc <HAL_RCC_ClockConfig+0x260>)
 8004638:	681b      	ldr	r3, [r3, #0]
 800463a:	e00d      	b.n	8004658 <HAL_RCC_ClockConfig+0x1bc>
 800463c:	2302      	movs	r3, #2
 800463e:	62bb      	str	r3, [r7, #40]	@ 0x28
 8004640:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8004642:	fa93 f3a3 	rbit	r3, r3
 8004646:	627b      	str	r3, [r7, #36]	@ 0x24
 8004648:	2302      	movs	r3, #2
 800464a:	623b      	str	r3, [r7, #32]
 800464c:	6a3b      	ldr	r3, [r7, #32]
 800464e:	fa93 f3a3 	rbit	r3, r3
 8004652:	61fb      	str	r3, [r7, #28]
 8004654:	4b29      	ldr	r3, [pc, #164]	@ (80046fc <HAL_RCC_ClockConfig+0x260>)
 8004656:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004658:	2202      	movs	r2, #2
 800465a:	61ba      	str	r2, [r7, #24]
 800465c:	69ba      	ldr	r2, [r7, #24]
 800465e:	fa92 f2a2 	rbit	r2, r2
 8004662:	617a      	str	r2, [r7, #20]
 8004664:	697a      	ldr	r2, [r7, #20]
 8004666:	fab2 f282 	clz	r2, r2
 800466a:	b2d2      	uxtb	r2, r2
 800466c:	f042 0220 	orr.w	r2, r2, #32
 8004670:	b2d2      	uxtb	r2, r2
 8004672:	f002 021f 	and.w	r2, r2, #31
 8004676:	2101      	movs	r1, #1
 8004678:	fa01 f202 	lsl.w	r2, r1, r2
 800467c:	4013      	ands	r3, r2
 800467e:	2b00      	cmp	r3, #0
 8004680:	d101      	bne.n	8004686 <HAL_RCC_ClockConfig+0x1ea>
 8004682:	2301      	movs	r3, #1
 8004684:	e079      	b.n	800477a <HAL_RCC_ClockConfig+0x2de>
 8004686:	4b1d      	ldr	r3, [pc, #116]	@ (80046fc <HAL_RCC_ClockConfig+0x260>)
 8004688:	685b      	ldr	r3, [r3, #4]
 800468a:	f023 0203 	bic.w	r2, r3, #3
 800468e:	687b      	ldr	r3, [r7, #4]
 8004690:	685b      	ldr	r3, [r3, #4]
 8004692:	491a      	ldr	r1, [pc, #104]	@ (80046fc <HAL_RCC_ClockConfig+0x260>)
 8004694:	4313      	orrs	r3, r2
 8004696:	604b      	str	r3, [r1, #4]
 8004698:	f7fd fd56 	bl	8002148 <HAL_GetTick>
 800469c:	6778      	str	r0, [r7, #116]	@ 0x74
 800469e:	e00a      	b.n	80046b6 <HAL_RCC_ClockConfig+0x21a>
 80046a0:	f7fd fd52 	bl	8002148 <HAL_GetTick>
 80046a4:	4602      	mov	r2, r0
 80046a6:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 80046a8:	1ad3      	subs	r3, r2, r3
 80046aa:	f241 3288 	movw	r2, #5000	@ 0x1388
 80046ae:	4293      	cmp	r3, r2
 80046b0:	d901      	bls.n	80046b6 <HAL_RCC_ClockConfig+0x21a>
 80046b2:	2303      	movs	r3, #3
 80046b4:	e061      	b.n	800477a <HAL_RCC_ClockConfig+0x2de>
 80046b6:	4b11      	ldr	r3, [pc, #68]	@ (80046fc <HAL_RCC_ClockConfig+0x260>)
 80046b8:	685b      	ldr	r3, [r3, #4]
 80046ba:	f003 020c 	and.w	r2, r3, #12
 80046be:	687b      	ldr	r3, [r7, #4]
 80046c0:	685b      	ldr	r3, [r3, #4]
 80046c2:	009b      	lsls	r3, r3, #2
 80046c4:	429a      	cmp	r2, r3
 80046c6:	d1eb      	bne.n	80046a0 <HAL_RCC_ClockConfig+0x204>
 80046c8:	4b0b      	ldr	r3, [pc, #44]	@ (80046f8 <HAL_RCC_ClockConfig+0x25c>)
 80046ca:	681b      	ldr	r3, [r3, #0]
 80046cc:	f003 0307 	and.w	r3, r3, #7
 80046d0:	683a      	ldr	r2, [r7, #0]
 80046d2:	429a      	cmp	r2, r3
 80046d4:	d214      	bcs.n	8004700 <HAL_RCC_ClockConfig+0x264>
 80046d6:	4b08      	ldr	r3, [pc, #32]	@ (80046f8 <HAL_RCC_ClockConfig+0x25c>)
 80046d8:	681b      	ldr	r3, [r3, #0]
 80046da:	f023 0207 	bic.w	r2, r3, #7
 80046de:	4906      	ldr	r1, [pc, #24]	@ (80046f8 <HAL_RCC_ClockConfig+0x25c>)
 80046e0:	683b      	ldr	r3, [r7, #0]
 80046e2:	4313      	orrs	r3, r2
 80046e4:	600b      	str	r3, [r1, #0]
 80046e6:	4b04      	ldr	r3, [pc, #16]	@ (80046f8 <HAL_RCC_ClockConfig+0x25c>)
 80046e8:	681b      	ldr	r3, [r3, #0]
 80046ea:	f003 0307 	and.w	r3, r3, #7
 80046ee:	683a      	ldr	r2, [r7, #0]
 80046f0:	429a      	cmp	r2, r3
 80046f2:	d005      	beq.n	8004700 <HAL_RCC_ClockConfig+0x264>
 80046f4:	2301      	movs	r3, #1
 80046f6:	e040      	b.n	800477a <HAL_RCC_ClockConfig+0x2de>
 80046f8:	40022000 	.word	0x40022000
 80046fc:	40021000 	.word	0x40021000
 8004700:	687b      	ldr	r3, [r7, #4]
 8004702:	681b      	ldr	r3, [r3, #0]
 8004704:	f003 0304 	and.w	r3, r3, #4
 8004708:	2b00      	cmp	r3, #0
 800470a:	d008      	beq.n	800471e <HAL_RCC_ClockConfig+0x282>
 800470c:	4b1d      	ldr	r3, [pc, #116]	@ (8004784 <HAL_RCC_ClockConfig+0x2e8>)
 800470e:	685b      	ldr	r3, [r3, #4]
 8004710:	f423 62e0 	bic.w	r2, r3, #1792	@ 0x700
 8004714:	687b      	ldr	r3, [r7, #4]
 8004716:	68db      	ldr	r3, [r3, #12]
 8004718:	491a      	ldr	r1, [pc, #104]	@ (8004784 <HAL_RCC_ClockConfig+0x2e8>)
 800471a:	4313      	orrs	r3, r2
 800471c:	604b      	str	r3, [r1, #4]
 800471e:	687b      	ldr	r3, [r7, #4]
 8004720:	681b      	ldr	r3, [r3, #0]
 8004722:	f003 0308 	and.w	r3, r3, #8
 8004726:	2b00      	cmp	r3, #0
 8004728:	d009      	beq.n	800473e <HAL_RCC_ClockConfig+0x2a2>
 800472a:	4b16      	ldr	r3, [pc, #88]	@ (8004784 <HAL_RCC_ClockConfig+0x2e8>)
 800472c:	685b      	ldr	r3, [r3, #4]
 800472e:	f423 5260 	bic.w	r2, r3, #14336	@ 0x3800
 8004732:	687b      	ldr	r3, [r7, #4]
 8004734:	691b      	ldr	r3, [r3, #16]
 8004736:	00db      	lsls	r3, r3, #3
 8004738:	4912      	ldr	r1, [pc, #72]	@ (8004784 <HAL_RCC_ClockConfig+0x2e8>)
 800473a:	4313      	orrs	r3, r2
 800473c:	604b      	str	r3, [r1, #4]
 800473e:	f000 f829 	bl	8004794 <HAL_RCC_GetSysClockFreq>
 8004742:	4601      	mov	r1, r0
 8004744:	4b0f      	ldr	r3, [pc, #60]	@ (8004784 <HAL_RCC_ClockConfig+0x2e8>)
 8004746:	685b      	ldr	r3, [r3, #4]
 8004748:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 800474c:	22f0      	movs	r2, #240	@ 0xf0
 800474e:	613a      	str	r2, [r7, #16]
 8004750:	693a      	ldr	r2, [r7, #16]
 8004752:	fa92 f2a2 	rbit	r2, r2
 8004756:	60fa      	str	r2, [r7, #12]
 8004758:	68fa      	ldr	r2, [r7, #12]
 800475a:	fab2 f282 	clz	r2, r2
 800475e:	b2d2      	uxtb	r2, r2
 8004760:	40d3      	lsrs	r3, r2
 8004762:	4a09      	ldr	r2, [pc, #36]	@ (8004788 <HAL_RCC_ClockConfig+0x2ec>)
 8004764:	5cd3      	ldrb	r3, [r2, r3]
 8004766:	fa21 f303 	lsr.w	r3, r1, r3
 800476a:	4a08      	ldr	r2, [pc, #32]	@ (800478c <HAL_RCC_ClockConfig+0x2f0>)
 800476c:	6013      	str	r3, [r2, #0]
 800476e:	4b08      	ldr	r3, [pc, #32]	@ (8004790 <HAL_RCC_ClockConfig+0x2f4>)
 8004770:	681b      	ldr	r3, [r3, #0]
 8004772:	4618      	mov	r0, r3
 8004774:	f7fd fca4 	bl	80020c0 <HAL_InitTick>
 8004778:	2300      	movs	r3, #0
 800477a:	4618      	mov	r0, r3
 800477c:	3778      	adds	r7, #120	@ 0x78
 800477e:	46bd      	mov	sp, r7
 8004780:	bd80      	pop	{r7, pc}
 8004782:	bf00      	nop
 8004784:	40021000 	.word	0x40021000
 8004788:	080084d4 	.word	0x080084d4
 800478c:	20000000 	.word	0x20000000
 8004790:	20000004 	.word	0x20000004

08004794 <HAL_RCC_GetSysClockFreq>:
 8004794:	b480      	push	{r7}
 8004796:	b087      	sub	sp, #28
 8004798:	af00      	add	r7, sp, #0
 800479a:	2300      	movs	r3, #0
 800479c:	60fb      	str	r3, [r7, #12]
 800479e:	2300      	movs	r3, #0
 80047a0:	60bb      	str	r3, [r7, #8]
 80047a2:	2300      	movs	r3, #0
 80047a4:	617b      	str	r3, [r7, #20]
 80047a6:	2300      	movs	r3, #0
 80047a8:	607b      	str	r3, [r7, #4]
 80047aa:	2300      	movs	r3, #0
 80047ac:	613b      	str	r3, [r7, #16]
 80047ae:	4b1e      	ldr	r3, [pc, #120]	@ (8004828 <HAL_RCC_GetSysClockFreq+0x94>)
 80047b0:	685b      	ldr	r3, [r3, #4]
 80047b2:	60fb      	str	r3, [r7, #12]
 80047b4:	68fb      	ldr	r3, [r7, #12]
 80047b6:	f003 030c 	and.w	r3, r3, #12
 80047ba:	2b04      	cmp	r3, #4
 80047bc:	d002      	beq.n	80047c4 <HAL_RCC_GetSysClockFreq+0x30>
 80047be:	2b08      	cmp	r3, #8
 80047c0:	d003      	beq.n	80047ca <HAL_RCC_GetSysClockFreq+0x36>
 80047c2:	e026      	b.n	8004812 <HAL_RCC_GetSysClockFreq+0x7e>
 80047c4:	4b19      	ldr	r3, [pc, #100]	@ (800482c <HAL_RCC_GetSysClockFreq+0x98>)
 80047c6:	613b      	str	r3, [r7, #16]
 80047c8:	e026      	b.n	8004818 <HAL_RCC_GetSysClockFreq+0x84>
 80047ca:	68fb      	ldr	r3, [r7, #12]
 80047cc:	0c9b      	lsrs	r3, r3, #18
 80047ce:	f003 030f 	and.w	r3, r3, #15
 80047d2:	4a17      	ldr	r2, [pc, #92]	@ (8004830 <HAL_RCC_GetSysClockFreq+0x9c>)
 80047d4:	5cd3      	ldrb	r3, [r2, r3]
 80047d6:	607b      	str	r3, [r7, #4]
 80047d8:	4b13      	ldr	r3, [pc, #76]	@ (8004828 <HAL_RCC_GetSysClockFreq+0x94>)
 80047da:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80047dc:	f003 030f 	and.w	r3, r3, #15
 80047e0:	4a14      	ldr	r2, [pc, #80]	@ (8004834 <HAL_RCC_GetSysClockFreq+0xa0>)
 80047e2:	5cd3      	ldrb	r3, [r2, r3]
 80047e4:	60bb      	str	r3, [r7, #8]
 80047e6:	68fb      	ldr	r3, [r7, #12]
 80047e8:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 80047ec:	2b00      	cmp	r3, #0
 80047ee:	d008      	beq.n	8004802 <HAL_RCC_GetSysClockFreq+0x6e>
 80047f0:	4a0e      	ldr	r2, [pc, #56]	@ (800482c <HAL_RCC_GetSysClockFreq+0x98>)
 80047f2:	68bb      	ldr	r3, [r7, #8]
 80047f4:	fbb2 f2f3 	udiv	r2, r2, r3
 80047f8:	687b      	ldr	r3, [r7, #4]
 80047fa:	fb02 f303 	mul.w	r3, r2, r3
 80047fe:	617b      	str	r3, [r7, #20]
 8004800:	e004      	b.n	800480c <HAL_RCC_GetSysClockFreq+0x78>
 8004802:	687b      	ldr	r3, [r7, #4]
 8004804:	4a0c      	ldr	r2, [pc, #48]	@ (8004838 <HAL_RCC_GetSysClockFreq+0xa4>)
 8004806:	fb02 f303 	mul.w	r3, r2, r3
 800480a:	617b      	str	r3, [r7, #20]
 800480c:	697b      	ldr	r3, [r7, #20]
 800480e:	613b      	str	r3, [r7, #16]
 8004810:	e002      	b.n	8004818 <HAL_RCC_GetSysClockFreq+0x84>
 8004812:	4b06      	ldr	r3, [pc, #24]	@ (800482c <HAL_RCC_GetSysClockFreq+0x98>)
 8004814:	613b      	str	r3, [r7, #16]
 8004816:	bf00      	nop
 8004818:	693b      	ldr	r3, [r7, #16]
 800481a:	4618      	mov	r0, r3
 800481c:	371c      	adds	r7, #28
 800481e:	46bd      	mov	sp, r7
 8004820:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004824:	4770      	bx	lr
 8004826:	bf00      	nop
 8004828:	40021000 	.word	0x40021000
 800482c:	007a1200 	.word	0x007a1200
 8004830:	080084ec 	.word	0x080084ec
 8004834:	080084fc 	.word	0x080084fc
 8004838:	003d0900 	.word	0x003d0900

0800483c <HAL_RCC_GetHCLKFreq>:
 800483c:	b480      	push	{r7}
 800483e:	af00      	add	r7, sp, #0
 8004840:	4b03      	ldr	r3, [pc, #12]	@ (8004850 <HAL_RCC_GetHCLKFreq+0x14>)
 8004842:	681b      	ldr	r3, [r3, #0]
 8004844:	4618      	mov	r0, r3
 8004846:	46bd      	mov	sp, r7
 8004848:	f85d 7b04 	ldr.w	r7, [sp], #4
 800484c:	4770      	bx	lr
 800484e:	bf00      	nop
 8004850:	20000000 	.word	0x20000000

08004854 <HAL_RCC_GetPCLK1Freq>:
 8004854:	b580      	push	{r7, lr}
 8004856:	b082      	sub	sp, #8
 8004858:	af00      	add	r7, sp, #0
 800485a:	f7ff ffef 	bl	800483c <HAL_RCC_GetHCLKFreq>
 800485e:	4601      	mov	r1, r0
 8004860:	4b0b      	ldr	r3, [pc, #44]	@ (8004890 <HAL_RCC_GetPCLK1Freq+0x3c>)
 8004862:	685b      	ldr	r3, [r3, #4]
 8004864:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
 8004868:	f44f 62e0 	mov.w	r2, #1792	@ 0x700
 800486c:	607a      	str	r2, [r7, #4]
 800486e:	687a      	ldr	r2, [r7, #4]
 8004870:	fa92 f2a2 	rbit	r2, r2
 8004874:	603a      	str	r2, [r7, #0]
 8004876:	683a      	ldr	r2, [r7, #0]
 8004878:	fab2 f282 	clz	r2, r2
 800487c:	b2d2      	uxtb	r2, r2
 800487e:	40d3      	lsrs	r3, r2
 8004880:	4a04      	ldr	r2, [pc, #16]	@ (8004894 <HAL_RCC_GetPCLK1Freq+0x40>)
 8004882:	5cd3      	ldrb	r3, [r2, r3]
 8004884:	fa21 f303 	lsr.w	r3, r1, r3
 8004888:	4618      	mov	r0, r3
 800488a:	3708      	adds	r7, #8
 800488c:	46bd      	mov	sp, r7
 800488e:	bd80      	pop	{r7, pc}
 8004890:	40021000 	.word	0x40021000
 8004894:	080084e4 	.word	0x080084e4

08004898 <HAL_RCC_GetPCLK2Freq>:
 8004898:	b580      	push	{r7, lr}
 800489a:	b082      	sub	sp, #8
 800489c:	af00      	add	r7, sp, #0
 800489e:	f7ff ffcd 	bl	800483c <HAL_RCC_GetHCLKFreq>
 80048a2:	4601      	mov	r1, r0
 80048a4:	4b0b      	ldr	r3, [pc, #44]	@ (80048d4 <HAL_RCC_GetPCLK2Freq+0x3c>)
 80048a6:	685b      	ldr	r3, [r3, #4]
 80048a8:	f403 5360 	and.w	r3, r3, #14336	@ 0x3800
 80048ac:	f44f 5260 	mov.w	r2, #14336	@ 0x3800
 80048b0:	607a      	str	r2, [r7, #4]
 80048b2:	687a      	ldr	r2, [r7, #4]
 80048b4:	fa92 f2a2 	rbit	r2, r2
 80048b8:	603a      	str	r2, [r7, #0]
 80048ba:	683a      	ldr	r2, [r7, #0]
 80048bc:	fab2 f282 	clz	r2, r2
 80048c0:	b2d2      	uxtb	r2, r2
 80048c2:	40d3      	lsrs	r3, r2
 80048c4:	4a04      	ldr	r2, [pc, #16]	@ (80048d8 <HAL_RCC_GetPCLK2Freq+0x40>)
 80048c6:	5cd3      	ldrb	r3, [r2, r3]
 80048c8:	fa21 f303 	lsr.w	r3, r1, r3
 80048cc:	4618      	mov	r0, r3
 80048ce:	3708      	adds	r7, #8
 80048d0:	46bd      	mov	sp, r7
 80048d2:	bd80      	pop	{r7, pc}
 80048d4:	40021000 	.word	0x40021000
 80048d8:	080084e4 	.word	0x080084e4

080048dc <HAL_RCCEx_PeriphCLKConfig>:
 80048dc:	b580      	push	{r7, lr}
 80048de:	b092      	sub	sp, #72	@ 0x48
 80048e0:	af00      	add	r7, sp, #0
 80048e2:	6078      	str	r0, [r7, #4]
 80048e4:	2300      	movs	r3, #0
 80048e6:	643b      	str	r3, [r7, #64]	@ 0x40
 80048e8:	2300      	movs	r3, #0
 80048ea:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80048ec:	2300      	movs	r3, #0
 80048ee:	f887 3047 	strb.w	r3, [r7, #71]	@ 0x47
 80048f2:	687b      	ldr	r3, [r7, #4]
 80048f4:	681b      	ldr	r3, [r3, #0]
 80048f6:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 80048fa:	2b00      	cmp	r3, #0
 80048fc:	f000 80cd 	beq.w	8004a9a <HAL_RCCEx_PeriphCLKConfig+0x1be>
 8004900:	4b86      	ldr	r3, [pc, #536]	@ (8004b1c <HAL_RCCEx_PeriphCLKConfig+0x240>)
 8004902:	69db      	ldr	r3, [r3, #28]
 8004904:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8004908:	2b00      	cmp	r3, #0
 800490a:	d10e      	bne.n	800492a <HAL_RCCEx_PeriphCLKConfig+0x4e>
 800490c:	4b83      	ldr	r3, [pc, #524]	@ (8004b1c <HAL_RCCEx_PeriphCLKConfig+0x240>)
 800490e:	69db      	ldr	r3, [r3, #28]
 8004910:	4a82      	ldr	r2, [pc, #520]	@ (8004b1c <HAL_RCCEx_PeriphCLKConfig+0x240>)
 8004912:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8004916:	61d3      	str	r3, [r2, #28]
 8004918:	4b80      	ldr	r3, [pc, #512]	@ (8004b1c <HAL_RCCEx_PeriphCLKConfig+0x240>)
 800491a:	69db      	ldr	r3, [r3, #28]
 800491c:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8004920:	60bb      	str	r3, [r7, #8]
 8004922:	68bb      	ldr	r3, [r7, #8]
 8004924:	2301      	movs	r3, #1
 8004926:	f887 3047 	strb.w	r3, [r7, #71]	@ 0x47
 800492a:	4b7d      	ldr	r3, [pc, #500]	@ (8004b20 <HAL_RCCEx_PeriphCLKConfig+0x244>)
 800492c:	681b      	ldr	r3, [r3, #0]
 800492e:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8004932:	2b00      	cmp	r3, #0
 8004934:	d118      	bne.n	8004968 <HAL_RCCEx_PeriphCLKConfig+0x8c>
 8004936:	4b7a      	ldr	r3, [pc, #488]	@ (8004b20 <HAL_RCCEx_PeriphCLKConfig+0x244>)
 8004938:	681b      	ldr	r3, [r3, #0]
 800493a:	4a79      	ldr	r2, [pc, #484]	@ (8004b20 <HAL_RCCEx_PeriphCLKConfig+0x244>)
 800493c:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8004940:	6013      	str	r3, [r2, #0]
 8004942:	f7fd fc01 	bl	8002148 <HAL_GetTick>
 8004946:	6438      	str	r0, [r7, #64]	@ 0x40
 8004948:	e008      	b.n	800495c <HAL_RCCEx_PeriphCLKConfig+0x80>
 800494a:	f7fd fbfd 	bl	8002148 <HAL_GetTick>
 800494e:	4602      	mov	r2, r0
 8004950:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 8004952:	1ad3      	subs	r3, r2, r3
 8004954:	2b64      	cmp	r3, #100	@ 0x64
 8004956:	d901      	bls.n	800495c <HAL_RCCEx_PeriphCLKConfig+0x80>
 8004958:	2303      	movs	r3, #3
 800495a:	e0db      	b.n	8004b14 <HAL_RCCEx_PeriphCLKConfig+0x238>
 800495c:	4b70      	ldr	r3, [pc, #448]	@ (8004b20 <HAL_RCCEx_PeriphCLKConfig+0x244>)
 800495e:	681b      	ldr	r3, [r3, #0]
 8004960:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8004964:	2b00      	cmp	r3, #0
 8004966:	d0f0      	beq.n	800494a <HAL_RCCEx_PeriphCLKConfig+0x6e>
 8004968:	4b6c      	ldr	r3, [pc, #432]	@ (8004b1c <HAL_RCCEx_PeriphCLKConfig+0x240>)
 800496a:	6a1b      	ldr	r3, [r3, #32]
 800496c:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8004970:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8004972:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8004974:	2b00      	cmp	r3, #0
 8004976:	d07d      	beq.n	8004a74 <HAL_RCCEx_PeriphCLKConfig+0x198>
 8004978:	687b      	ldr	r3, [r7, #4]
 800497a:	685b      	ldr	r3, [r3, #4]
 800497c:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8004980:	6bfa      	ldr	r2, [r7, #60]	@ 0x3c
 8004982:	429a      	cmp	r2, r3
 8004984:	d076      	beq.n	8004a74 <HAL_RCCEx_PeriphCLKConfig+0x198>
 8004986:	4b65      	ldr	r3, [pc, #404]	@ (8004b1c <HAL_RCCEx_PeriphCLKConfig+0x240>)
 8004988:	6a1b      	ldr	r3, [r3, #32]
 800498a:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 800498e:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8004990:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 8004994:	633b      	str	r3, [r7, #48]	@ 0x30
 8004996:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004998:	fa93 f3a3 	rbit	r3, r3
 800499c:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800499e:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80049a0:	fab3 f383 	clz	r3, r3
 80049a4:	b2db      	uxtb	r3, r3
 80049a6:	461a      	mov	r2, r3
 80049a8:	4b5e      	ldr	r3, [pc, #376]	@ (8004b24 <HAL_RCCEx_PeriphCLKConfig+0x248>)
 80049aa:	4413      	add	r3, r2
 80049ac:	009b      	lsls	r3, r3, #2
 80049ae:	461a      	mov	r2, r3
 80049b0:	2301      	movs	r3, #1
 80049b2:	6013      	str	r3, [r2, #0]
 80049b4:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 80049b8:	63bb      	str	r3, [r7, #56]	@ 0x38
 80049ba:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80049bc:	fa93 f3a3 	rbit	r3, r3
 80049c0:	637b      	str	r3, [r7, #52]	@ 0x34
 80049c2:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80049c4:	fab3 f383 	clz	r3, r3
 80049c8:	b2db      	uxtb	r3, r3
 80049ca:	461a      	mov	r2, r3
 80049cc:	4b55      	ldr	r3, [pc, #340]	@ (8004b24 <HAL_RCCEx_PeriphCLKConfig+0x248>)
 80049ce:	4413      	add	r3, r2
 80049d0:	009b      	lsls	r3, r3, #2
 80049d2:	461a      	mov	r2, r3
 80049d4:	2300      	movs	r3, #0
 80049d6:	6013      	str	r3, [r2, #0]
 80049d8:	4a50      	ldr	r2, [pc, #320]	@ (8004b1c <HAL_RCCEx_PeriphCLKConfig+0x240>)
 80049da:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 80049dc:	6213      	str	r3, [r2, #32]
 80049de:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 80049e0:	f003 0301 	and.w	r3, r3, #1
 80049e4:	2b00      	cmp	r3, #0
 80049e6:	d045      	beq.n	8004a74 <HAL_RCCEx_PeriphCLKConfig+0x198>
 80049e8:	f7fd fbae 	bl	8002148 <HAL_GetTick>
 80049ec:	6438      	str	r0, [r7, #64]	@ 0x40
 80049ee:	e00a      	b.n	8004a06 <HAL_RCCEx_PeriphCLKConfig+0x12a>
 80049f0:	f7fd fbaa 	bl	8002148 <HAL_GetTick>
 80049f4:	4602      	mov	r2, r0
 80049f6:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 80049f8:	1ad3      	subs	r3, r2, r3
 80049fa:	f241 3288 	movw	r2, #5000	@ 0x1388
 80049fe:	4293      	cmp	r3, r2
 8004a00:	d901      	bls.n	8004a06 <HAL_RCCEx_PeriphCLKConfig+0x12a>
 8004a02:	2303      	movs	r3, #3
 8004a04:	e086      	b.n	8004b14 <HAL_RCCEx_PeriphCLKConfig+0x238>
 8004a06:	2302      	movs	r3, #2
 8004a08:	62bb      	str	r3, [r7, #40]	@ 0x28
 8004a0a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8004a0c:	fa93 f3a3 	rbit	r3, r3
 8004a10:	627b      	str	r3, [r7, #36]	@ 0x24
 8004a12:	2302      	movs	r3, #2
 8004a14:	623b      	str	r3, [r7, #32]
 8004a16:	6a3b      	ldr	r3, [r7, #32]
 8004a18:	fa93 f3a3 	rbit	r3, r3
 8004a1c:	61fb      	str	r3, [r7, #28]
 8004a1e:	69fb      	ldr	r3, [r7, #28]
 8004a20:	fab3 f383 	clz	r3, r3
 8004a24:	b2db      	uxtb	r3, r3
 8004a26:	095b      	lsrs	r3, r3, #5
 8004a28:	b2db      	uxtb	r3, r3
 8004a2a:	f043 0302 	orr.w	r3, r3, #2
 8004a2e:	b2db      	uxtb	r3, r3
 8004a30:	2b02      	cmp	r3, #2
 8004a32:	d102      	bne.n	8004a3a <HAL_RCCEx_PeriphCLKConfig+0x15e>
 8004a34:	4b39      	ldr	r3, [pc, #228]	@ (8004b1c <HAL_RCCEx_PeriphCLKConfig+0x240>)
 8004a36:	6a1b      	ldr	r3, [r3, #32]
 8004a38:	e007      	b.n	8004a4a <HAL_RCCEx_PeriphCLKConfig+0x16e>
 8004a3a:	2302      	movs	r3, #2
 8004a3c:	61bb      	str	r3, [r7, #24]
 8004a3e:	69bb      	ldr	r3, [r7, #24]
 8004a40:	fa93 f3a3 	rbit	r3, r3
 8004a44:	617b      	str	r3, [r7, #20]
 8004a46:	4b35      	ldr	r3, [pc, #212]	@ (8004b1c <HAL_RCCEx_PeriphCLKConfig+0x240>)
 8004a48:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004a4a:	2202      	movs	r2, #2
 8004a4c:	613a      	str	r2, [r7, #16]
 8004a4e:	693a      	ldr	r2, [r7, #16]
 8004a50:	fa92 f2a2 	rbit	r2, r2
 8004a54:	60fa      	str	r2, [r7, #12]
 8004a56:	68fa      	ldr	r2, [r7, #12]
 8004a58:	fab2 f282 	clz	r2, r2
 8004a5c:	b2d2      	uxtb	r2, r2
 8004a5e:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8004a62:	b2d2      	uxtb	r2, r2
 8004a64:	f002 021f 	and.w	r2, r2, #31
 8004a68:	2101      	movs	r1, #1
 8004a6a:	fa01 f202 	lsl.w	r2, r1, r2
 8004a6e:	4013      	ands	r3, r2
 8004a70:	2b00      	cmp	r3, #0
 8004a72:	d0bd      	beq.n	80049f0 <HAL_RCCEx_PeriphCLKConfig+0x114>
 8004a74:	4b29      	ldr	r3, [pc, #164]	@ (8004b1c <HAL_RCCEx_PeriphCLKConfig+0x240>)
 8004a76:	6a1b      	ldr	r3, [r3, #32]
 8004a78:	f423 7240 	bic.w	r2, r3, #768	@ 0x300
 8004a7c:	687b      	ldr	r3, [r7, #4]
 8004a7e:	685b      	ldr	r3, [r3, #4]
 8004a80:	4926      	ldr	r1, [pc, #152]	@ (8004b1c <HAL_RCCEx_PeriphCLKConfig+0x240>)
 8004a82:	4313      	orrs	r3, r2
 8004a84:	620b      	str	r3, [r1, #32]
 8004a86:	f897 3047 	ldrb.w	r3, [r7, #71]	@ 0x47
 8004a8a:	2b01      	cmp	r3, #1
 8004a8c:	d105      	bne.n	8004a9a <HAL_RCCEx_PeriphCLKConfig+0x1be>
 8004a8e:	4b23      	ldr	r3, [pc, #140]	@ (8004b1c <HAL_RCCEx_PeriphCLKConfig+0x240>)
 8004a90:	69db      	ldr	r3, [r3, #28]
 8004a92:	4a22      	ldr	r2, [pc, #136]	@ (8004b1c <HAL_RCCEx_PeriphCLKConfig+0x240>)
 8004a94:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8004a98:	61d3      	str	r3, [r2, #28]
 8004a9a:	687b      	ldr	r3, [r7, #4]
 8004a9c:	681b      	ldr	r3, [r3, #0]
 8004a9e:	f003 0301 	and.w	r3, r3, #1
 8004aa2:	2b00      	cmp	r3, #0
 8004aa4:	d008      	beq.n	8004ab8 <HAL_RCCEx_PeriphCLKConfig+0x1dc>
 8004aa6:	4b1d      	ldr	r3, [pc, #116]	@ (8004b1c <HAL_RCCEx_PeriphCLKConfig+0x240>)
 8004aa8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004aaa:	f023 0203 	bic.w	r2, r3, #3
 8004aae:	687b      	ldr	r3, [r7, #4]
 8004ab0:	689b      	ldr	r3, [r3, #8]
 8004ab2:	491a      	ldr	r1, [pc, #104]	@ (8004b1c <HAL_RCCEx_PeriphCLKConfig+0x240>)
 8004ab4:	4313      	orrs	r3, r2
 8004ab6:	630b      	str	r3, [r1, #48]	@ 0x30
 8004ab8:	687b      	ldr	r3, [r7, #4]
 8004aba:	681b      	ldr	r3, [r3, #0]
 8004abc:	f003 0320 	and.w	r3, r3, #32
 8004ac0:	2b00      	cmp	r3, #0
 8004ac2:	d008      	beq.n	8004ad6 <HAL_RCCEx_PeriphCLKConfig+0x1fa>
 8004ac4:	4b15      	ldr	r3, [pc, #84]	@ (8004b1c <HAL_RCCEx_PeriphCLKConfig+0x240>)
 8004ac6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004ac8:	f023 0210 	bic.w	r2, r3, #16
 8004acc:	687b      	ldr	r3, [r7, #4]
 8004ace:	68db      	ldr	r3, [r3, #12]
 8004ad0:	4912      	ldr	r1, [pc, #72]	@ (8004b1c <HAL_RCCEx_PeriphCLKConfig+0x240>)
 8004ad2:	4313      	orrs	r3, r2
 8004ad4:	630b      	str	r3, [r1, #48]	@ 0x30
 8004ad6:	687b      	ldr	r3, [r7, #4]
 8004ad8:	681b      	ldr	r3, [r3, #0]
 8004ada:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8004ade:	2b00      	cmp	r3, #0
 8004ae0:	d008      	beq.n	8004af4 <HAL_RCCEx_PeriphCLKConfig+0x218>
 8004ae2:	4b0e      	ldr	r3, [pc, #56]	@ (8004b1c <HAL_RCCEx_PeriphCLKConfig+0x240>)
 8004ae4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8004ae6:	f423 72f8 	bic.w	r2, r3, #496	@ 0x1f0
 8004aea:	687b      	ldr	r3, [r7, #4]
 8004aec:	691b      	ldr	r3, [r3, #16]
 8004aee:	490b      	ldr	r1, [pc, #44]	@ (8004b1c <HAL_RCCEx_PeriphCLKConfig+0x240>)
 8004af0:	4313      	orrs	r3, r2
 8004af2:	62cb      	str	r3, [r1, #44]	@ 0x2c
 8004af4:	687b      	ldr	r3, [r7, #4]
 8004af6:	681b      	ldr	r3, [r3, #0]
 8004af8:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8004afc:	2b00      	cmp	r3, #0
 8004afe:	d008      	beq.n	8004b12 <HAL_RCCEx_PeriphCLKConfig+0x236>
 8004b00:	4b06      	ldr	r3, [pc, #24]	@ (8004b1c <HAL_RCCEx_PeriphCLKConfig+0x240>)
 8004b02:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004b04:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 8004b08:	687b      	ldr	r3, [r7, #4]
 8004b0a:	695b      	ldr	r3, [r3, #20]
 8004b0c:	4903      	ldr	r1, [pc, #12]	@ (8004b1c <HAL_RCCEx_PeriphCLKConfig+0x240>)
 8004b0e:	4313      	orrs	r3, r2
 8004b10:	630b      	str	r3, [r1, #48]	@ 0x30
 8004b12:	2300      	movs	r3, #0
 8004b14:	4618      	mov	r0, r3
 8004b16:	3748      	adds	r7, #72	@ 0x48
 8004b18:	46bd      	mov	sp, r7
 8004b1a:	bd80      	pop	{r7, pc}
 8004b1c:	40021000 	.word	0x40021000
 8004b20:	40007000 	.word	0x40007000
 8004b24:	10908100 	.word	0x10908100

08004b28 <HAL_TIM_Base_Init>:
 8004b28:	b580      	push	{r7, lr}
 8004b2a:	b082      	sub	sp, #8
 8004b2c:	af00      	add	r7, sp, #0
 8004b2e:	6078      	str	r0, [r7, #4]
 8004b30:	687b      	ldr	r3, [r7, #4]
 8004b32:	2b00      	cmp	r3, #0
 8004b34:	d101      	bne.n	8004b3a <HAL_TIM_Base_Init+0x12>
 8004b36:	2301      	movs	r3, #1
 8004b38:	e049      	b.n	8004bce <HAL_TIM_Base_Init+0xa6>
 8004b3a:	687b      	ldr	r3, [r7, #4]
 8004b3c:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8004b40:	b2db      	uxtb	r3, r3
 8004b42:	2b00      	cmp	r3, #0
 8004b44:	d106      	bne.n	8004b54 <HAL_TIM_Base_Init+0x2c>
 8004b46:	687b      	ldr	r3, [r7, #4]
 8004b48:	2200      	movs	r2, #0
 8004b4a:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8004b4e:	6878      	ldr	r0, [r7, #4]
 8004b50:	f7fd f84e 	bl	8001bf0 <HAL_TIM_Base_MspInit>
 8004b54:	687b      	ldr	r3, [r7, #4]
 8004b56:	2202      	movs	r2, #2
 8004b58:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8004b5c:	687b      	ldr	r3, [r7, #4]
 8004b5e:	681a      	ldr	r2, [r3, #0]
 8004b60:	687b      	ldr	r3, [r7, #4]
 8004b62:	3304      	adds	r3, #4
 8004b64:	4619      	mov	r1, r3
 8004b66:	4610      	mov	r0, r2
 8004b68:	f000 fcf2 	bl	8005550 <TIM_Base_SetConfig>
 8004b6c:	687b      	ldr	r3, [r7, #4]
 8004b6e:	2201      	movs	r2, #1
 8004b70:	f883 2048 	strb.w	r2, [r3, #72]	@ 0x48
 8004b74:	687b      	ldr	r3, [r7, #4]
 8004b76:	2201      	movs	r2, #1
 8004b78:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8004b7c:	687b      	ldr	r3, [r7, #4]
 8004b7e:	2201      	movs	r2, #1
 8004b80:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8004b84:	687b      	ldr	r3, [r7, #4]
 8004b86:	2201      	movs	r2, #1
 8004b88:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8004b8c:	687b      	ldr	r3, [r7, #4]
 8004b8e:	2201      	movs	r2, #1
 8004b90:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8004b94:	687b      	ldr	r3, [r7, #4]
 8004b96:	2201      	movs	r2, #1
 8004b98:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8004b9c:	687b      	ldr	r3, [r7, #4]
 8004b9e:	2201      	movs	r2, #1
 8004ba0:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8004ba4:	687b      	ldr	r3, [r7, #4]
 8004ba6:	2201      	movs	r2, #1
 8004ba8:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8004bac:	687b      	ldr	r3, [r7, #4]
 8004bae:	2201      	movs	r2, #1
 8004bb0:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8004bb4:	687b      	ldr	r3, [r7, #4]
 8004bb6:	2201      	movs	r2, #1
 8004bb8:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 8004bbc:	687b      	ldr	r3, [r7, #4]
 8004bbe:	2201      	movs	r2, #1
 8004bc0:	f883 2047 	strb.w	r2, [r3, #71]	@ 0x47
 8004bc4:	687b      	ldr	r3, [r7, #4]
 8004bc6:	2201      	movs	r2, #1
 8004bc8:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8004bcc:	2300      	movs	r3, #0
 8004bce:	4618      	mov	r0, r3
 8004bd0:	3708      	adds	r7, #8
 8004bd2:	46bd      	mov	sp, r7
 8004bd4:	bd80      	pop	{r7, pc}
	...

08004bd8 <HAL_TIM_Base_Start_IT>:
 8004bd8:	b480      	push	{r7}
 8004bda:	b085      	sub	sp, #20
 8004bdc:	af00      	add	r7, sp, #0
 8004bde:	6078      	str	r0, [r7, #4]
 8004be0:	687b      	ldr	r3, [r7, #4]
 8004be2:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8004be6:	b2db      	uxtb	r3, r3
 8004be8:	2b01      	cmp	r3, #1
 8004bea:	d001      	beq.n	8004bf0 <HAL_TIM_Base_Start_IT+0x18>
 8004bec:	2301      	movs	r3, #1
 8004bee:	e040      	b.n	8004c72 <HAL_TIM_Base_Start_IT+0x9a>
 8004bf0:	687b      	ldr	r3, [r7, #4]
 8004bf2:	2202      	movs	r2, #2
 8004bf4:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8004bf8:	687b      	ldr	r3, [r7, #4]
 8004bfa:	681b      	ldr	r3, [r3, #0]
 8004bfc:	68da      	ldr	r2, [r3, #12]
 8004bfe:	687b      	ldr	r3, [r7, #4]
 8004c00:	681b      	ldr	r3, [r3, #0]
 8004c02:	f042 0201 	orr.w	r2, r2, #1
 8004c06:	60da      	str	r2, [r3, #12]
 8004c08:	687b      	ldr	r3, [r7, #4]
 8004c0a:	681b      	ldr	r3, [r3, #0]
 8004c0c:	4a1c      	ldr	r2, [pc, #112]	@ (8004c80 <HAL_TIM_Base_Start_IT+0xa8>)
 8004c0e:	4293      	cmp	r3, r2
 8004c10:	d00e      	beq.n	8004c30 <HAL_TIM_Base_Start_IT+0x58>
 8004c12:	687b      	ldr	r3, [r7, #4]
 8004c14:	681b      	ldr	r3, [r3, #0]
 8004c16:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8004c1a:	d009      	beq.n	8004c30 <HAL_TIM_Base_Start_IT+0x58>
 8004c1c:	687b      	ldr	r3, [r7, #4]
 8004c1e:	681b      	ldr	r3, [r3, #0]
 8004c20:	4a18      	ldr	r2, [pc, #96]	@ (8004c84 <HAL_TIM_Base_Start_IT+0xac>)
 8004c22:	4293      	cmp	r3, r2
 8004c24:	d004      	beq.n	8004c30 <HAL_TIM_Base_Start_IT+0x58>
 8004c26:	687b      	ldr	r3, [r7, #4]
 8004c28:	681b      	ldr	r3, [r3, #0]
 8004c2a:	4a17      	ldr	r2, [pc, #92]	@ (8004c88 <HAL_TIM_Base_Start_IT+0xb0>)
 8004c2c:	4293      	cmp	r3, r2
 8004c2e:	d115      	bne.n	8004c5c <HAL_TIM_Base_Start_IT+0x84>
 8004c30:	687b      	ldr	r3, [r7, #4]
 8004c32:	681b      	ldr	r3, [r3, #0]
 8004c34:	689a      	ldr	r2, [r3, #8]
 8004c36:	4b15      	ldr	r3, [pc, #84]	@ (8004c8c <HAL_TIM_Base_Start_IT+0xb4>)
 8004c38:	4013      	ands	r3, r2
 8004c3a:	60fb      	str	r3, [r7, #12]
 8004c3c:	68fb      	ldr	r3, [r7, #12]
 8004c3e:	2b06      	cmp	r3, #6
 8004c40:	d015      	beq.n	8004c6e <HAL_TIM_Base_Start_IT+0x96>
 8004c42:	68fb      	ldr	r3, [r7, #12]
 8004c44:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8004c48:	d011      	beq.n	8004c6e <HAL_TIM_Base_Start_IT+0x96>
 8004c4a:	687b      	ldr	r3, [r7, #4]
 8004c4c:	681b      	ldr	r3, [r3, #0]
 8004c4e:	681a      	ldr	r2, [r3, #0]
 8004c50:	687b      	ldr	r3, [r7, #4]
 8004c52:	681b      	ldr	r3, [r3, #0]
 8004c54:	f042 0201 	orr.w	r2, r2, #1
 8004c58:	601a      	str	r2, [r3, #0]
 8004c5a:	e008      	b.n	8004c6e <HAL_TIM_Base_Start_IT+0x96>
 8004c5c:	687b      	ldr	r3, [r7, #4]
 8004c5e:	681b      	ldr	r3, [r3, #0]
 8004c60:	681a      	ldr	r2, [r3, #0]
 8004c62:	687b      	ldr	r3, [r7, #4]
 8004c64:	681b      	ldr	r3, [r3, #0]
 8004c66:	f042 0201 	orr.w	r2, r2, #1
 8004c6a:	601a      	str	r2, [r3, #0]
 8004c6c:	e000      	b.n	8004c70 <HAL_TIM_Base_Start_IT+0x98>
 8004c6e:	bf00      	nop
 8004c70:	2300      	movs	r3, #0
 8004c72:	4618      	mov	r0, r3
 8004c74:	3714      	adds	r7, #20
 8004c76:	46bd      	mov	sp, r7
 8004c78:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004c7c:	4770      	bx	lr
 8004c7e:	bf00      	nop
 8004c80:	40012c00 	.word	0x40012c00
 8004c84:	40000400 	.word	0x40000400
 8004c88:	40014000 	.word	0x40014000
 8004c8c:	00010007 	.word	0x00010007

08004c90 <HAL_TIM_PWM_Init>:
 8004c90:	b580      	push	{r7, lr}
 8004c92:	b082      	sub	sp, #8
 8004c94:	af00      	add	r7, sp, #0
 8004c96:	6078      	str	r0, [r7, #4]
 8004c98:	687b      	ldr	r3, [r7, #4]
 8004c9a:	2b00      	cmp	r3, #0
 8004c9c:	d101      	bne.n	8004ca2 <HAL_TIM_PWM_Init+0x12>
 8004c9e:	2301      	movs	r3, #1
 8004ca0:	e049      	b.n	8004d36 <HAL_TIM_PWM_Init+0xa6>
 8004ca2:	687b      	ldr	r3, [r7, #4]
 8004ca4:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8004ca8:	b2db      	uxtb	r3, r3
 8004caa:	2b00      	cmp	r3, #0
 8004cac:	d106      	bne.n	8004cbc <HAL_TIM_PWM_Init+0x2c>
 8004cae:	687b      	ldr	r3, [r7, #4]
 8004cb0:	2200      	movs	r2, #0
 8004cb2:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8004cb6:	6878      	ldr	r0, [r7, #4]
 8004cb8:	f000 f841 	bl	8004d3e <HAL_TIM_PWM_MspInit>
 8004cbc:	687b      	ldr	r3, [r7, #4]
 8004cbe:	2202      	movs	r2, #2
 8004cc0:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8004cc4:	687b      	ldr	r3, [r7, #4]
 8004cc6:	681a      	ldr	r2, [r3, #0]
 8004cc8:	687b      	ldr	r3, [r7, #4]
 8004cca:	3304      	adds	r3, #4
 8004ccc:	4619      	mov	r1, r3
 8004cce:	4610      	mov	r0, r2
 8004cd0:	f000 fc3e 	bl	8005550 <TIM_Base_SetConfig>
 8004cd4:	687b      	ldr	r3, [r7, #4]
 8004cd6:	2201      	movs	r2, #1
 8004cd8:	f883 2048 	strb.w	r2, [r3, #72]	@ 0x48
 8004cdc:	687b      	ldr	r3, [r7, #4]
 8004cde:	2201      	movs	r2, #1
 8004ce0:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8004ce4:	687b      	ldr	r3, [r7, #4]
 8004ce6:	2201      	movs	r2, #1
 8004ce8:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8004cec:	687b      	ldr	r3, [r7, #4]
 8004cee:	2201      	movs	r2, #1
 8004cf0:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8004cf4:	687b      	ldr	r3, [r7, #4]
 8004cf6:	2201      	movs	r2, #1
 8004cf8:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8004cfc:	687b      	ldr	r3, [r7, #4]
 8004cfe:	2201      	movs	r2, #1
 8004d00:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8004d04:	687b      	ldr	r3, [r7, #4]
 8004d06:	2201      	movs	r2, #1
 8004d08:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8004d0c:	687b      	ldr	r3, [r7, #4]
 8004d0e:	2201      	movs	r2, #1
 8004d10:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8004d14:	687b      	ldr	r3, [r7, #4]
 8004d16:	2201      	movs	r2, #1
 8004d18:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8004d1c:	687b      	ldr	r3, [r7, #4]
 8004d1e:	2201      	movs	r2, #1
 8004d20:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 8004d24:	687b      	ldr	r3, [r7, #4]
 8004d26:	2201      	movs	r2, #1
 8004d28:	f883 2047 	strb.w	r2, [r3, #71]	@ 0x47
 8004d2c:	687b      	ldr	r3, [r7, #4]
 8004d2e:	2201      	movs	r2, #1
 8004d30:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8004d34:	2300      	movs	r3, #0
 8004d36:	4618      	mov	r0, r3
 8004d38:	3708      	adds	r7, #8
 8004d3a:	46bd      	mov	sp, r7
 8004d3c:	bd80      	pop	{r7, pc}

08004d3e <HAL_TIM_PWM_MspInit>:
 8004d3e:	b480      	push	{r7}
 8004d40:	b083      	sub	sp, #12
 8004d42:	af00      	add	r7, sp, #0
 8004d44:	6078      	str	r0, [r7, #4]
 8004d46:	bf00      	nop
 8004d48:	370c      	adds	r7, #12
 8004d4a:	46bd      	mov	sp, r7
 8004d4c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004d50:	4770      	bx	lr
	...

08004d54 <HAL_TIM_PWM_Start>:
 8004d54:	b580      	push	{r7, lr}
 8004d56:	b084      	sub	sp, #16
 8004d58:	af00      	add	r7, sp, #0
 8004d5a:	6078      	str	r0, [r7, #4]
 8004d5c:	6039      	str	r1, [r7, #0]
 8004d5e:	683b      	ldr	r3, [r7, #0]
 8004d60:	2b00      	cmp	r3, #0
 8004d62:	d109      	bne.n	8004d78 <HAL_TIM_PWM_Start+0x24>
 8004d64:	687b      	ldr	r3, [r7, #4]
 8004d66:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 8004d6a:	b2db      	uxtb	r3, r3
 8004d6c:	2b01      	cmp	r3, #1
 8004d6e:	bf14      	ite	ne
 8004d70:	2301      	movne	r3, #1
 8004d72:	2300      	moveq	r3, #0
 8004d74:	b2db      	uxtb	r3, r3
 8004d76:	e03c      	b.n	8004df2 <HAL_TIM_PWM_Start+0x9e>
 8004d78:	683b      	ldr	r3, [r7, #0]
 8004d7a:	2b04      	cmp	r3, #4
 8004d7c:	d109      	bne.n	8004d92 <HAL_TIM_PWM_Start+0x3e>
 8004d7e:	687b      	ldr	r3, [r7, #4]
 8004d80:	f893 303f 	ldrb.w	r3, [r3, #63]	@ 0x3f
 8004d84:	b2db      	uxtb	r3, r3
 8004d86:	2b01      	cmp	r3, #1
 8004d88:	bf14      	ite	ne
 8004d8a:	2301      	movne	r3, #1
 8004d8c:	2300      	moveq	r3, #0
 8004d8e:	b2db      	uxtb	r3, r3
 8004d90:	e02f      	b.n	8004df2 <HAL_TIM_PWM_Start+0x9e>
 8004d92:	683b      	ldr	r3, [r7, #0]
 8004d94:	2b08      	cmp	r3, #8
 8004d96:	d109      	bne.n	8004dac <HAL_TIM_PWM_Start+0x58>
 8004d98:	687b      	ldr	r3, [r7, #4]
 8004d9a:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 8004d9e:	b2db      	uxtb	r3, r3
 8004da0:	2b01      	cmp	r3, #1
 8004da2:	bf14      	ite	ne
 8004da4:	2301      	movne	r3, #1
 8004da6:	2300      	moveq	r3, #0
 8004da8:	b2db      	uxtb	r3, r3
 8004daa:	e022      	b.n	8004df2 <HAL_TIM_PWM_Start+0x9e>
 8004dac:	683b      	ldr	r3, [r7, #0]
 8004dae:	2b0c      	cmp	r3, #12
 8004db0:	d109      	bne.n	8004dc6 <HAL_TIM_PWM_Start+0x72>
 8004db2:	687b      	ldr	r3, [r7, #4]
 8004db4:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8004db8:	b2db      	uxtb	r3, r3
 8004dba:	2b01      	cmp	r3, #1
 8004dbc:	bf14      	ite	ne
 8004dbe:	2301      	movne	r3, #1
 8004dc0:	2300      	moveq	r3, #0
 8004dc2:	b2db      	uxtb	r3, r3
 8004dc4:	e015      	b.n	8004df2 <HAL_TIM_PWM_Start+0x9e>
 8004dc6:	683b      	ldr	r3, [r7, #0]
 8004dc8:	2b10      	cmp	r3, #16
 8004dca:	d109      	bne.n	8004de0 <HAL_TIM_PWM_Start+0x8c>
 8004dcc:	687b      	ldr	r3, [r7, #4]
 8004dce:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 8004dd2:	b2db      	uxtb	r3, r3
 8004dd4:	2b01      	cmp	r3, #1
 8004dd6:	bf14      	ite	ne
 8004dd8:	2301      	movne	r3, #1
 8004dda:	2300      	moveq	r3, #0
 8004ddc:	b2db      	uxtb	r3, r3
 8004dde:	e008      	b.n	8004df2 <HAL_TIM_PWM_Start+0x9e>
 8004de0:	687b      	ldr	r3, [r7, #4]
 8004de2:	f893 3043 	ldrb.w	r3, [r3, #67]	@ 0x43
 8004de6:	b2db      	uxtb	r3, r3
 8004de8:	2b01      	cmp	r3, #1
 8004dea:	bf14      	ite	ne
 8004dec:	2301      	movne	r3, #1
 8004dee:	2300      	moveq	r3, #0
 8004df0:	b2db      	uxtb	r3, r3
 8004df2:	2b00      	cmp	r3, #0
 8004df4:	d001      	beq.n	8004dfa <HAL_TIM_PWM_Start+0xa6>
 8004df6:	2301      	movs	r3, #1
 8004df8:	e088      	b.n	8004f0c <HAL_TIM_PWM_Start+0x1b8>
 8004dfa:	683b      	ldr	r3, [r7, #0]
 8004dfc:	2b00      	cmp	r3, #0
 8004dfe:	d104      	bne.n	8004e0a <HAL_TIM_PWM_Start+0xb6>
 8004e00:	687b      	ldr	r3, [r7, #4]
 8004e02:	2202      	movs	r2, #2
 8004e04:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8004e08:	e023      	b.n	8004e52 <HAL_TIM_PWM_Start+0xfe>
 8004e0a:	683b      	ldr	r3, [r7, #0]
 8004e0c:	2b04      	cmp	r3, #4
 8004e0e:	d104      	bne.n	8004e1a <HAL_TIM_PWM_Start+0xc6>
 8004e10:	687b      	ldr	r3, [r7, #4]
 8004e12:	2202      	movs	r2, #2
 8004e14:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8004e18:	e01b      	b.n	8004e52 <HAL_TIM_PWM_Start+0xfe>
 8004e1a:	683b      	ldr	r3, [r7, #0]
 8004e1c:	2b08      	cmp	r3, #8
 8004e1e:	d104      	bne.n	8004e2a <HAL_TIM_PWM_Start+0xd6>
 8004e20:	687b      	ldr	r3, [r7, #4]
 8004e22:	2202      	movs	r2, #2
 8004e24:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8004e28:	e013      	b.n	8004e52 <HAL_TIM_PWM_Start+0xfe>
 8004e2a:	683b      	ldr	r3, [r7, #0]
 8004e2c:	2b0c      	cmp	r3, #12
 8004e2e:	d104      	bne.n	8004e3a <HAL_TIM_PWM_Start+0xe6>
 8004e30:	687b      	ldr	r3, [r7, #4]
 8004e32:	2202      	movs	r2, #2
 8004e34:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8004e38:	e00b      	b.n	8004e52 <HAL_TIM_PWM_Start+0xfe>
 8004e3a:	683b      	ldr	r3, [r7, #0]
 8004e3c:	2b10      	cmp	r3, #16
 8004e3e:	d104      	bne.n	8004e4a <HAL_TIM_PWM_Start+0xf6>
 8004e40:	687b      	ldr	r3, [r7, #4]
 8004e42:	2202      	movs	r2, #2
 8004e44:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8004e48:	e003      	b.n	8004e52 <HAL_TIM_PWM_Start+0xfe>
 8004e4a:	687b      	ldr	r3, [r7, #4]
 8004e4c:	2202      	movs	r2, #2
 8004e4e:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8004e52:	687b      	ldr	r3, [r7, #4]
 8004e54:	681b      	ldr	r3, [r3, #0]
 8004e56:	2201      	movs	r2, #1
 8004e58:	6839      	ldr	r1, [r7, #0]
 8004e5a:	4618      	mov	r0, r3
 8004e5c:	f000 ff3c 	bl	8005cd8 <TIM_CCxChannelCmd>
 8004e60:	687b      	ldr	r3, [r7, #4]
 8004e62:	681b      	ldr	r3, [r3, #0]
 8004e64:	4a2b      	ldr	r2, [pc, #172]	@ (8004f14 <HAL_TIM_PWM_Start+0x1c0>)
 8004e66:	4293      	cmp	r3, r2
 8004e68:	d00e      	beq.n	8004e88 <HAL_TIM_PWM_Start+0x134>
 8004e6a:	687b      	ldr	r3, [r7, #4]
 8004e6c:	681b      	ldr	r3, [r3, #0]
 8004e6e:	4a2a      	ldr	r2, [pc, #168]	@ (8004f18 <HAL_TIM_PWM_Start+0x1c4>)
 8004e70:	4293      	cmp	r3, r2
 8004e72:	d009      	beq.n	8004e88 <HAL_TIM_PWM_Start+0x134>
 8004e74:	687b      	ldr	r3, [r7, #4]
 8004e76:	681b      	ldr	r3, [r3, #0]
 8004e78:	4a28      	ldr	r2, [pc, #160]	@ (8004f1c <HAL_TIM_PWM_Start+0x1c8>)
 8004e7a:	4293      	cmp	r3, r2
 8004e7c:	d004      	beq.n	8004e88 <HAL_TIM_PWM_Start+0x134>
 8004e7e:	687b      	ldr	r3, [r7, #4]
 8004e80:	681b      	ldr	r3, [r3, #0]
 8004e82:	4a27      	ldr	r2, [pc, #156]	@ (8004f20 <HAL_TIM_PWM_Start+0x1cc>)
 8004e84:	4293      	cmp	r3, r2
 8004e86:	d101      	bne.n	8004e8c <HAL_TIM_PWM_Start+0x138>
 8004e88:	2301      	movs	r3, #1
 8004e8a:	e000      	b.n	8004e8e <HAL_TIM_PWM_Start+0x13a>
 8004e8c:	2300      	movs	r3, #0
 8004e8e:	2b00      	cmp	r3, #0
 8004e90:	d007      	beq.n	8004ea2 <HAL_TIM_PWM_Start+0x14e>
 8004e92:	687b      	ldr	r3, [r7, #4]
 8004e94:	681b      	ldr	r3, [r3, #0]
 8004e96:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8004e98:	687b      	ldr	r3, [r7, #4]
 8004e9a:	681b      	ldr	r3, [r3, #0]
 8004e9c:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8004ea0:	645a      	str	r2, [r3, #68]	@ 0x44
 8004ea2:	687b      	ldr	r3, [r7, #4]
 8004ea4:	681b      	ldr	r3, [r3, #0]
 8004ea6:	4a1b      	ldr	r2, [pc, #108]	@ (8004f14 <HAL_TIM_PWM_Start+0x1c0>)
 8004ea8:	4293      	cmp	r3, r2
 8004eaa:	d00e      	beq.n	8004eca <HAL_TIM_PWM_Start+0x176>
 8004eac:	687b      	ldr	r3, [r7, #4]
 8004eae:	681b      	ldr	r3, [r3, #0]
 8004eb0:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8004eb4:	d009      	beq.n	8004eca <HAL_TIM_PWM_Start+0x176>
 8004eb6:	687b      	ldr	r3, [r7, #4]
 8004eb8:	681b      	ldr	r3, [r3, #0]
 8004eba:	4a1a      	ldr	r2, [pc, #104]	@ (8004f24 <HAL_TIM_PWM_Start+0x1d0>)
 8004ebc:	4293      	cmp	r3, r2
 8004ebe:	d004      	beq.n	8004eca <HAL_TIM_PWM_Start+0x176>
 8004ec0:	687b      	ldr	r3, [r7, #4]
 8004ec2:	681b      	ldr	r3, [r3, #0]
 8004ec4:	4a14      	ldr	r2, [pc, #80]	@ (8004f18 <HAL_TIM_PWM_Start+0x1c4>)
 8004ec6:	4293      	cmp	r3, r2
 8004ec8:	d115      	bne.n	8004ef6 <HAL_TIM_PWM_Start+0x1a2>
 8004eca:	687b      	ldr	r3, [r7, #4]
 8004ecc:	681b      	ldr	r3, [r3, #0]
 8004ece:	689a      	ldr	r2, [r3, #8]
 8004ed0:	4b15      	ldr	r3, [pc, #84]	@ (8004f28 <HAL_TIM_PWM_Start+0x1d4>)
 8004ed2:	4013      	ands	r3, r2
 8004ed4:	60fb      	str	r3, [r7, #12]
 8004ed6:	68fb      	ldr	r3, [r7, #12]
 8004ed8:	2b06      	cmp	r3, #6
 8004eda:	d015      	beq.n	8004f08 <HAL_TIM_PWM_Start+0x1b4>
 8004edc:	68fb      	ldr	r3, [r7, #12]
 8004ede:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8004ee2:	d011      	beq.n	8004f08 <HAL_TIM_PWM_Start+0x1b4>
 8004ee4:	687b      	ldr	r3, [r7, #4]
 8004ee6:	681b      	ldr	r3, [r3, #0]
 8004ee8:	681a      	ldr	r2, [r3, #0]
 8004eea:	687b      	ldr	r3, [r7, #4]
 8004eec:	681b      	ldr	r3, [r3, #0]
 8004eee:	f042 0201 	orr.w	r2, r2, #1
 8004ef2:	601a      	str	r2, [r3, #0]
 8004ef4:	e008      	b.n	8004f08 <HAL_TIM_PWM_Start+0x1b4>
 8004ef6:	687b      	ldr	r3, [r7, #4]
 8004ef8:	681b      	ldr	r3, [r3, #0]
 8004efa:	681a      	ldr	r2, [r3, #0]
 8004efc:	687b      	ldr	r3, [r7, #4]
 8004efe:	681b      	ldr	r3, [r3, #0]
 8004f00:	f042 0201 	orr.w	r2, r2, #1
 8004f04:	601a      	str	r2, [r3, #0]
 8004f06:	e000      	b.n	8004f0a <HAL_TIM_PWM_Start+0x1b6>
 8004f08:	bf00      	nop
 8004f0a:	2300      	movs	r3, #0
 8004f0c:	4618      	mov	r0, r3
 8004f0e:	3710      	adds	r7, #16
 8004f10:	46bd      	mov	sp, r7
 8004f12:	bd80      	pop	{r7, pc}
 8004f14:	40012c00 	.word	0x40012c00
 8004f18:	40014000 	.word	0x40014000
 8004f1c:	40014400 	.word	0x40014400
 8004f20:	40014800 	.word	0x40014800
 8004f24:	40000400 	.word	0x40000400
 8004f28:	00010007 	.word	0x00010007

08004f2c <HAL_TIM_IRQHandler>:
 8004f2c:	b580      	push	{r7, lr}
 8004f2e:	b084      	sub	sp, #16
 8004f30:	af00      	add	r7, sp, #0
 8004f32:	6078      	str	r0, [r7, #4]
 8004f34:	687b      	ldr	r3, [r7, #4]
 8004f36:	681b      	ldr	r3, [r3, #0]
 8004f38:	68db      	ldr	r3, [r3, #12]
 8004f3a:	60fb      	str	r3, [r7, #12]
 8004f3c:	687b      	ldr	r3, [r7, #4]
 8004f3e:	681b      	ldr	r3, [r3, #0]
 8004f40:	691b      	ldr	r3, [r3, #16]
 8004f42:	60bb      	str	r3, [r7, #8]
 8004f44:	68bb      	ldr	r3, [r7, #8]
 8004f46:	f003 0302 	and.w	r3, r3, #2
 8004f4a:	2b00      	cmp	r3, #0
 8004f4c:	d020      	beq.n	8004f90 <HAL_TIM_IRQHandler+0x64>
 8004f4e:	68fb      	ldr	r3, [r7, #12]
 8004f50:	f003 0302 	and.w	r3, r3, #2
 8004f54:	2b00      	cmp	r3, #0
 8004f56:	d01b      	beq.n	8004f90 <HAL_TIM_IRQHandler+0x64>
 8004f58:	687b      	ldr	r3, [r7, #4]
 8004f5a:	681b      	ldr	r3, [r3, #0]
 8004f5c:	f06f 0202 	mvn.w	r2, #2
 8004f60:	611a      	str	r2, [r3, #16]
 8004f62:	687b      	ldr	r3, [r7, #4]
 8004f64:	2201      	movs	r2, #1
 8004f66:	771a      	strb	r2, [r3, #28]
 8004f68:	687b      	ldr	r3, [r7, #4]
 8004f6a:	681b      	ldr	r3, [r3, #0]
 8004f6c:	699b      	ldr	r3, [r3, #24]
 8004f6e:	f003 0303 	and.w	r3, r3, #3
 8004f72:	2b00      	cmp	r3, #0
 8004f74:	d003      	beq.n	8004f7e <HAL_TIM_IRQHandler+0x52>
 8004f76:	6878      	ldr	r0, [r7, #4]
 8004f78:	f000 facb 	bl	8005512 <HAL_TIM_IC_CaptureCallback>
 8004f7c:	e005      	b.n	8004f8a <HAL_TIM_IRQHandler+0x5e>
 8004f7e:	6878      	ldr	r0, [r7, #4]
 8004f80:	f000 fabd 	bl	80054fe <HAL_TIM_OC_DelayElapsedCallback>
 8004f84:	6878      	ldr	r0, [r7, #4]
 8004f86:	f000 face 	bl	8005526 <HAL_TIM_PWM_PulseFinishedCallback>
 8004f8a:	687b      	ldr	r3, [r7, #4]
 8004f8c:	2200      	movs	r2, #0
 8004f8e:	771a      	strb	r2, [r3, #28]
 8004f90:	68bb      	ldr	r3, [r7, #8]
 8004f92:	f003 0304 	and.w	r3, r3, #4
 8004f96:	2b00      	cmp	r3, #0
 8004f98:	d020      	beq.n	8004fdc <HAL_TIM_IRQHandler+0xb0>
 8004f9a:	68fb      	ldr	r3, [r7, #12]
 8004f9c:	f003 0304 	and.w	r3, r3, #4
 8004fa0:	2b00      	cmp	r3, #0
 8004fa2:	d01b      	beq.n	8004fdc <HAL_TIM_IRQHandler+0xb0>
 8004fa4:	687b      	ldr	r3, [r7, #4]
 8004fa6:	681b      	ldr	r3, [r3, #0]
 8004fa8:	f06f 0204 	mvn.w	r2, #4
 8004fac:	611a      	str	r2, [r3, #16]
 8004fae:	687b      	ldr	r3, [r7, #4]
 8004fb0:	2202      	movs	r2, #2
 8004fb2:	771a      	strb	r2, [r3, #28]
 8004fb4:	687b      	ldr	r3, [r7, #4]
 8004fb6:	681b      	ldr	r3, [r3, #0]
 8004fb8:	699b      	ldr	r3, [r3, #24]
 8004fba:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8004fbe:	2b00      	cmp	r3, #0
 8004fc0:	d003      	beq.n	8004fca <HAL_TIM_IRQHandler+0x9e>
 8004fc2:	6878      	ldr	r0, [r7, #4]
 8004fc4:	f000 faa5 	bl	8005512 <HAL_TIM_IC_CaptureCallback>
 8004fc8:	e005      	b.n	8004fd6 <HAL_TIM_IRQHandler+0xaa>
 8004fca:	6878      	ldr	r0, [r7, #4]
 8004fcc:	f000 fa97 	bl	80054fe <HAL_TIM_OC_DelayElapsedCallback>
 8004fd0:	6878      	ldr	r0, [r7, #4]
 8004fd2:	f000 faa8 	bl	8005526 <HAL_TIM_PWM_PulseFinishedCallback>
 8004fd6:	687b      	ldr	r3, [r7, #4]
 8004fd8:	2200      	movs	r2, #0
 8004fda:	771a      	strb	r2, [r3, #28]
 8004fdc:	68bb      	ldr	r3, [r7, #8]
 8004fde:	f003 0308 	and.w	r3, r3, #8
 8004fe2:	2b00      	cmp	r3, #0
 8004fe4:	d020      	beq.n	8005028 <HAL_TIM_IRQHandler+0xfc>
 8004fe6:	68fb      	ldr	r3, [r7, #12]
 8004fe8:	f003 0308 	and.w	r3, r3, #8
 8004fec:	2b00      	cmp	r3, #0
 8004fee:	d01b      	beq.n	8005028 <HAL_TIM_IRQHandler+0xfc>
 8004ff0:	687b      	ldr	r3, [r7, #4]
 8004ff2:	681b      	ldr	r3, [r3, #0]
 8004ff4:	f06f 0208 	mvn.w	r2, #8
 8004ff8:	611a      	str	r2, [r3, #16]
 8004ffa:	687b      	ldr	r3, [r7, #4]
 8004ffc:	2204      	movs	r2, #4
 8004ffe:	771a      	strb	r2, [r3, #28]
 8005000:	687b      	ldr	r3, [r7, #4]
 8005002:	681b      	ldr	r3, [r3, #0]
 8005004:	69db      	ldr	r3, [r3, #28]
 8005006:	f003 0303 	and.w	r3, r3, #3
 800500a:	2b00      	cmp	r3, #0
 800500c:	d003      	beq.n	8005016 <HAL_TIM_IRQHandler+0xea>
 800500e:	6878      	ldr	r0, [r7, #4]
 8005010:	f000 fa7f 	bl	8005512 <HAL_TIM_IC_CaptureCallback>
 8005014:	e005      	b.n	8005022 <HAL_TIM_IRQHandler+0xf6>
 8005016:	6878      	ldr	r0, [r7, #4]
 8005018:	f000 fa71 	bl	80054fe <HAL_TIM_OC_DelayElapsedCallback>
 800501c:	6878      	ldr	r0, [r7, #4]
 800501e:	f000 fa82 	bl	8005526 <HAL_TIM_PWM_PulseFinishedCallback>
 8005022:	687b      	ldr	r3, [r7, #4]
 8005024:	2200      	movs	r2, #0
 8005026:	771a      	strb	r2, [r3, #28]
 8005028:	68bb      	ldr	r3, [r7, #8]
 800502a:	f003 0310 	and.w	r3, r3, #16
 800502e:	2b00      	cmp	r3, #0
 8005030:	d020      	beq.n	8005074 <HAL_TIM_IRQHandler+0x148>
 8005032:	68fb      	ldr	r3, [r7, #12]
 8005034:	f003 0310 	and.w	r3, r3, #16
 8005038:	2b00      	cmp	r3, #0
 800503a:	d01b      	beq.n	8005074 <HAL_TIM_IRQHandler+0x148>
 800503c:	687b      	ldr	r3, [r7, #4]
 800503e:	681b      	ldr	r3, [r3, #0]
 8005040:	f06f 0210 	mvn.w	r2, #16
 8005044:	611a      	str	r2, [r3, #16]
 8005046:	687b      	ldr	r3, [r7, #4]
 8005048:	2208      	movs	r2, #8
 800504a:	771a      	strb	r2, [r3, #28]
 800504c:	687b      	ldr	r3, [r7, #4]
 800504e:	681b      	ldr	r3, [r3, #0]
 8005050:	69db      	ldr	r3, [r3, #28]
 8005052:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8005056:	2b00      	cmp	r3, #0
 8005058:	d003      	beq.n	8005062 <HAL_TIM_IRQHandler+0x136>
 800505a:	6878      	ldr	r0, [r7, #4]
 800505c:	f000 fa59 	bl	8005512 <HAL_TIM_IC_CaptureCallback>
 8005060:	e005      	b.n	800506e <HAL_TIM_IRQHandler+0x142>
 8005062:	6878      	ldr	r0, [r7, #4]
 8005064:	f000 fa4b 	bl	80054fe <HAL_TIM_OC_DelayElapsedCallback>
 8005068:	6878      	ldr	r0, [r7, #4]
 800506a:	f000 fa5c 	bl	8005526 <HAL_TIM_PWM_PulseFinishedCallback>
 800506e:	687b      	ldr	r3, [r7, #4]
 8005070:	2200      	movs	r2, #0
 8005072:	771a      	strb	r2, [r3, #28]
 8005074:	68bb      	ldr	r3, [r7, #8]
 8005076:	f003 0301 	and.w	r3, r3, #1
 800507a:	2b00      	cmp	r3, #0
 800507c:	d00c      	beq.n	8005098 <HAL_TIM_IRQHandler+0x16c>
 800507e:	68fb      	ldr	r3, [r7, #12]
 8005080:	f003 0301 	and.w	r3, r3, #1
 8005084:	2b00      	cmp	r3, #0
 8005086:	d007      	beq.n	8005098 <HAL_TIM_IRQHandler+0x16c>
 8005088:	687b      	ldr	r3, [r7, #4]
 800508a:	681b      	ldr	r3, [r3, #0]
 800508c:	f06f 0201 	mvn.w	r2, #1
 8005090:	611a      	str	r2, [r3, #16]
 8005092:	6878      	ldr	r0, [r7, #4]
 8005094:	f000 fa29 	bl	80054ea <HAL_TIM_PeriodElapsedCallback>
 8005098:	68bb      	ldr	r3, [r7, #8]
 800509a:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800509e:	2b00      	cmp	r3, #0
 80050a0:	d00c      	beq.n	80050bc <HAL_TIM_IRQHandler+0x190>
 80050a2:	68fb      	ldr	r3, [r7, #12]
 80050a4:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80050a8:	2b00      	cmp	r3, #0
 80050aa:	d007      	beq.n	80050bc <HAL_TIM_IRQHandler+0x190>
 80050ac:	687b      	ldr	r3, [r7, #4]
 80050ae:	681b      	ldr	r3, [r3, #0]
 80050b0:	f06f 0280 	mvn.w	r2, #128	@ 0x80
 80050b4:	611a      	str	r2, [r3, #16]
 80050b6:	6878      	ldr	r0, [r7, #4]
 80050b8:	f000 ff24 	bl	8005f04 <HAL_TIMEx_BreakCallback>
 80050bc:	68bb      	ldr	r3, [r7, #8]
 80050be:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80050c2:	2b00      	cmp	r3, #0
 80050c4:	d00c      	beq.n	80050e0 <HAL_TIM_IRQHandler+0x1b4>
 80050c6:	68fb      	ldr	r3, [r7, #12]
 80050c8:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80050cc:	2b00      	cmp	r3, #0
 80050ce:	d007      	beq.n	80050e0 <HAL_TIM_IRQHandler+0x1b4>
 80050d0:	687b      	ldr	r3, [r7, #4]
 80050d2:	681b      	ldr	r3, [r3, #0]
 80050d4:	f46f 7280 	mvn.w	r2, #256	@ 0x100
 80050d8:	611a      	str	r2, [r3, #16]
 80050da:	6878      	ldr	r0, [r7, #4]
 80050dc:	f000 ff1c 	bl	8005f18 <HAL_TIMEx_Break2Callback>
 80050e0:	68bb      	ldr	r3, [r7, #8]
 80050e2:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80050e6:	2b00      	cmp	r3, #0
 80050e8:	d00c      	beq.n	8005104 <HAL_TIM_IRQHandler+0x1d8>
 80050ea:	68fb      	ldr	r3, [r7, #12]
 80050ec:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80050f0:	2b00      	cmp	r3, #0
 80050f2:	d007      	beq.n	8005104 <HAL_TIM_IRQHandler+0x1d8>
 80050f4:	687b      	ldr	r3, [r7, #4]
 80050f6:	681b      	ldr	r3, [r3, #0]
 80050f8:	f06f 0240 	mvn.w	r2, #64	@ 0x40
 80050fc:	611a      	str	r2, [r3, #16]
 80050fe:	6878      	ldr	r0, [r7, #4]
 8005100:	f000 fa1b 	bl	800553a <HAL_TIM_TriggerCallback>
 8005104:	68bb      	ldr	r3, [r7, #8]
 8005106:	f003 0320 	and.w	r3, r3, #32
 800510a:	2b00      	cmp	r3, #0
 800510c:	d00c      	beq.n	8005128 <HAL_TIM_IRQHandler+0x1fc>
 800510e:	68fb      	ldr	r3, [r7, #12]
 8005110:	f003 0320 	and.w	r3, r3, #32
 8005114:	2b00      	cmp	r3, #0
 8005116:	d007      	beq.n	8005128 <HAL_TIM_IRQHandler+0x1fc>
 8005118:	687b      	ldr	r3, [r7, #4]
 800511a:	681b      	ldr	r3, [r3, #0]
 800511c:	f06f 0220 	mvn.w	r2, #32
 8005120:	611a      	str	r2, [r3, #16]
 8005122:	6878      	ldr	r0, [r7, #4]
 8005124:	f000 fee4 	bl	8005ef0 <HAL_TIMEx_CommutCallback>
 8005128:	bf00      	nop
 800512a:	3710      	adds	r7, #16
 800512c:	46bd      	mov	sp, r7
 800512e:	bd80      	pop	{r7, pc}

08005130 <HAL_TIM_PWM_ConfigChannel>:
 8005130:	b580      	push	{r7, lr}
 8005132:	b086      	sub	sp, #24
 8005134:	af00      	add	r7, sp, #0
 8005136:	60f8      	str	r0, [r7, #12]
 8005138:	60b9      	str	r1, [r7, #8]
 800513a:	607a      	str	r2, [r7, #4]
 800513c:	2300      	movs	r3, #0
 800513e:	75fb      	strb	r3, [r7, #23]
 8005140:	68fb      	ldr	r3, [r7, #12]
 8005142:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8005146:	2b01      	cmp	r3, #1
 8005148:	d101      	bne.n	800514e <HAL_TIM_PWM_ConfigChannel+0x1e>
 800514a:	2302      	movs	r3, #2
 800514c:	e0ff      	b.n	800534e <HAL_TIM_PWM_ConfigChannel+0x21e>
 800514e:	68fb      	ldr	r3, [r7, #12]
 8005150:	2201      	movs	r2, #1
 8005152:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8005156:	687b      	ldr	r3, [r7, #4]
 8005158:	2b14      	cmp	r3, #20
 800515a:	f200 80f0 	bhi.w	800533e <HAL_TIM_PWM_ConfigChannel+0x20e>
 800515e:	a201      	add	r2, pc, #4	@ (adr r2, 8005164 <HAL_TIM_PWM_ConfigChannel+0x34>)
 8005160:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8005164:	080051b9 	.word	0x080051b9
 8005168:	0800533f 	.word	0x0800533f
 800516c:	0800533f 	.word	0x0800533f
 8005170:	0800533f 	.word	0x0800533f
 8005174:	080051f9 	.word	0x080051f9
 8005178:	0800533f 	.word	0x0800533f
 800517c:	0800533f 	.word	0x0800533f
 8005180:	0800533f 	.word	0x0800533f
 8005184:	0800523b 	.word	0x0800523b
 8005188:	0800533f 	.word	0x0800533f
 800518c:	0800533f 	.word	0x0800533f
 8005190:	0800533f 	.word	0x0800533f
 8005194:	0800527b 	.word	0x0800527b
 8005198:	0800533f 	.word	0x0800533f
 800519c:	0800533f 	.word	0x0800533f
 80051a0:	0800533f 	.word	0x0800533f
 80051a4:	080052bd 	.word	0x080052bd
 80051a8:	0800533f 	.word	0x0800533f
 80051ac:	0800533f 	.word	0x0800533f
 80051b0:	0800533f 	.word	0x0800533f
 80051b4:	080052fd 	.word	0x080052fd
 80051b8:	68fb      	ldr	r3, [r7, #12]
 80051ba:	681b      	ldr	r3, [r3, #0]
 80051bc:	68b9      	ldr	r1, [r7, #8]
 80051be:	4618      	mov	r0, r3
 80051c0:	f000 fa4a 	bl	8005658 <TIM_OC1_SetConfig>
 80051c4:	68fb      	ldr	r3, [r7, #12]
 80051c6:	681b      	ldr	r3, [r3, #0]
 80051c8:	699a      	ldr	r2, [r3, #24]
 80051ca:	68fb      	ldr	r3, [r7, #12]
 80051cc:	681b      	ldr	r3, [r3, #0]
 80051ce:	f042 0208 	orr.w	r2, r2, #8
 80051d2:	619a      	str	r2, [r3, #24]
 80051d4:	68fb      	ldr	r3, [r7, #12]
 80051d6:	681b      	ldr	r3, [r3, #0]
 80051d8:	699a      	ldr	r2, [r3, #24]
 80051da:	68fb      	ldr	r3, [r7, #12]
 80051dc:	681b      	ldr	r3, [r3, #0]
 80051de:	f022 0204 	bic.w	r2, r2, #4
 80051e2:	619a      	str	r2, [r3, #24]
 80051e4:	68fb      	ldr	r3, [r7, #12]
 80051e6:	681b      	ldr	r3, [r3, #0]
 80051e8:	6999      	ldr	r1, [r3, #24]
 80051ea:	68bb      	ldr	r3, [r7, #8]
 80051ec:	691a      	ldr	r2, [r3, #16]
 80051ee:	68fb      	ldr	r3, [r7, #12]
 80051f0:	681b      	ldr	r3, [r3, #0]
 80051f2:	430a      	orrs	r2, r1
 80051f4:	619a      	str	r2, [r3, #24]
 80051f6:	e0a5      	b.n	8005344 <HAL_TIM_PWM_ConfigChannel+0x214>
 80051f8:	68fb      	ldr	r3, [r7, #12]
 80051fa:	681b      	ldr	r3, [r3, #0]
 80051fc:	68b9      	ldr	r1, [r7, #8]
 80051fe:	4618      	mov	r0, r3
 8005200:	f000 fab0 	bl	8005764 <TIM_OC2_SetConfig>
 8005204:	68fb      	ldr	r3, [r7, #12]
 8005206:	681b      	ldr	r3, [r3, #0]
 8005208:	699a      	ldr	r2, [r3, #24]
 800520a:	68fb      	ldr	r3, [r7, #12]
 800520c:	681b      	ldr	r3, [r3, #0]
 800520e:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8005212:	619a      	str	r2, [r3, #24]
 8005214:	68fb      	ldr	r3, [r7, #12]
 8005216:	681b      	ldr	r3, [r3, #0]
 8005218:	699a      	ldr	r2, [r3, #24]
 800521a:	68fb      	ldr	r3, [r7, #12]
 800521c:	681b      	ldr	r3, [r3, #0]
 800521e:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8005222:	619a      	str	r2, [r3, #24]
 8005224:	68fb      	ldr	r3, [r7, #12]
 8005226:	681b      	ldr	r3, [r3, #0]
 8005228:	6999      	ldr	r1, [r3, #24]
 800522a:	68bb      	ldr	r3, [r7, #8]
 800522c:	691b      	ldr	r3, [r3, #16]
 800522e:	021a      	lsls	r2, r3, #8
 8005230:	68fb      	ldr	r3, [r7, #12]
 8005232:	681b      	ldr	r3, [r3, #0]
 8005234:	430a      	orrs	r2, r1
 8005236:	619a      	str	r2, [r3, #24]
 8005238:	e084      	b.n	8005344 <HAL_TIM_PWM_ConfigChannel+0x214>
 800523a:	68fb      	ldr	r3, [r7, #12]
 800523c:	681b      	ldr	r3, [r3, #0]
 800523e:	68b9      	ldr	r1, [r7, #8]
 8005240:	4618      	mov	r0, r3
 8005242:	f000 fb0f 	bl	8005864 <TIM_OC3_SetConfig>
 8005246:	68fb      	ldr	r3, [r7, #12]
 8005248:	681b      	ldr	r3, [r3, #0]
 800524a:	69da      	ldr	r2, [r3, #28]
 800524c:	68fb      	ldr	r3, [r7, #12]
 800524e:	681b      	ldr	r3, [r3, #0]
 8005250:	f042 0208 	orr.w	r2, r2, #8
 8005254:	61da      	str	r2, [r3, #28]
 8005256:	68fb      	ldr	r3, [r7, #12]
 8005258:	681b      	ldr	r3, [r3, #0]
 800525a:	69da      	ldr	r2, [r3, #28]
 800525c:	68fb      	ldr	r3, [r7, #12]
 800525e:	681b      	ldr	r3, [r3, #0]
 8005260:	f022 0204 	bic.w	r2, r2, #4
 8005264:	61da      	str	r2, [r3, #28]
 8005266:	68fb      	ldr	r3, [r7, #12]
 8005268:	681b      	ldr	r3, [r3, #0]
 800526a:	69d9      	ldr	r1, [r3, #28]
 800526c:	68bb      	ldr	r3, [r7, #8]
 800526e:	691a      	ldr	r2, [r3, #16]
 8005270:	68fb      	ldr	r3, [r7, #12]
 8005272:	681b      	ldr	r3, [r3, #0]
 8005274:	430a      	orrs	r2, r1
 8005276:	61da      	str	r2, [r3, #28]
 8005278:	e064      	b.n	8005344 <HAL_TIM_PWM_ConfigChannel+0x214>
 800527a:	68fb      	ldr	r3, [r7, #12]
 800527c:	681b      	ldr	r3, [r3, #0]
 800527e:	68b9      	ldr	r1, [r7, #8]
 8005280:	4618      	mov	r0, r3
 8005282:	f000 fb6d 	bl	8005960 <TIM_OC4_SetConfig>
 8005286:	68fb      	ldr	r3, [r7, #12]
 8005288:	681b      	ldr	r3, [r3, #0]
 800528a:	69da      	ldr	r2, [r3, #28]
 800528c:	68fb      	ldr	r3, [r7, #12]
 800528e:	681b      	ldr	r3, [r3, #0]
 8005290:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8005294:	61da      	str	r2, [r3, #28]
 8005296:	68fb      	ldr	r3, [r7, #12]
 8005298:	681b      	ldr	r3, [r3, #0]
 800529a:	69da      	ldr	r2, [r3, #28]
 800529c:	68fb      	ldr	r3, [r7, #12]
 800529e:	681b      	ldr	r3, [r3, #0]
 80052a0:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 80052a4:	61da      	str	r2, [r3, #28]
 80052a6:	68fb      	ldr	r3, [r7, #12]
 80052a8:	681b      	ldr	r3, [r3, #0]
 80052aa:	69d9      	ldr	r1, [r3, #28]
 80052ac:	68bb      	ldr	r3, [r7, #8]
 80052ae:	691b      	ldr	r3, [r3, #16]
 80052b0:	021a      	lsls	r2, r3, #8
 80052b2:	68fb      	ldr	r3, [r7, #12]
 80052b4:	681b      	ldr	r3, [r3, #0]
 80052b6:	430a      	orrs	r2, r1
 80052b8:	61da      	str	r2, [r3, #28]
 80052ba:	e043      	b.n	8005344 <HAL_TIM_PWM_ConfigChannel+0x214>
 80052bc:	68fb      	ldr	r3, [r7, #12]
 80052be:	681b      	ldr	r3, [r3, #0]
 80052c0:	68b9      	ldr	r1, [r7, #8]
 80052c2:	4618      	mov	r0, r3
 80052c4:	f000 fbb0 	bl	8005a28 <TIM_OC5_SetConfig>
 80052c8:	68fb      	ldr	r3, [r7, #12]
 80052ca:	681b      	ldr	r3, [r3, #0]
 80052cc:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
 80052ce:	68fb      	ldr	r3, [r7, #12]
 80052d0:	681b      	ldr	r3, [r3, #0]
 80052d2:	f042 0208 	orr.w	r2, r2, #8
 80052d6:	655a      	str	r2, [r3, #84]	@ 0x54
 80052d8:	68fb      	ldr	r3, [r7, #12]
 80052da:	681b      	ldr	r3, [r3, #0]
 80052dc:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
 80052de:	68fb      	ldr	r3, [r7, #12]
 80052e0:	681b      	ldr	r3, [r3, #0]
 80052e2:	f022 0204 	bic.w	r2, r2, #4
 80052e6:	655a      	str	r2, [r3, #84]	@ 0x54
 80052e8:	68fb      	ldr	r3, [r7, #12]
 80052ea:	681b      	ldr	r3, [r3, #0]
 80052ec:	6d59      	ldr	r1, [r3, #84]	@ 0x54
 80052ee:	68bb      	ldr	r3, [r7, #8]
 80052f0:	691a      	ldr	r2, [r3, #16]
 80052f2:	68fb      	ldr	r3, [r7, #12]
 80052f4:	681b      	ldr	r3, [r3, #0]
 80052f6:	430a      	orrs	r2, r1
 80052f8:	655a      	str	r2, [r3, #84]	@ 0x54
 80052fa:	e023      	b.n	8005344 <HAL_TIM_PWM_ConfigChannel+0x214>
 80052fc:	68fb      	ldr	r3, [r7, #12]
 80052fe:	681b      	ldr	r3, [r3, #0]
 8005300:	68b9      	ldr	r1, [r7, #8]
 8005302:	4618      	mov	r0, r3
 8005304:	f000 fbee 	bl	8005ae4 <TIM_OC6_SetConfig>
 8005308:	68fb      	ldr	r3, [r7, #12]
 800530a:	681b      	ldr	r3, [r3, #0]
 800530c:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
 800530e:	68fb      	ldr	r3, [r7, #12]
 8005310:	681b      	ldr	r3, [r3, #0]
 8005312:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8005316:	655a      	str	r2, [r3, #84]	@ 0x54
 8005318:	68fb      	ldr	r3, [r7, #12]
 800531a:	681b      	ldr	r3, [r3, #0]
 800531c:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
 800531e:	68fb      	ldr	r3, [r7, #12]
 8005320:	681b      	ldr	r3, [r3, #0]
 8005322:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8005326:	655a      	str	r2, [r3, #84]	@ 0x54
 8005328:	68fb      	ldr	r3, [r7, #12]
 800532a:	681b      	ldr	r3, [r3, #0]
 800532c:	6d59      	ldr	r1, [r3, #84]	@ 0x54
 800532e:	68bb      	ldr	r3, [r7, #8]
 8005330:	691b      	ldr	r3, [r3, #16]
 8005332:	021a      	lsls	r2, r3, #8
 8005334:	68fb      	ldr	r3, [r7, #12]
 8005336:	681b      	ldr	r3, [r3, #0]
 8005338:	430a      	orrs	r2, r1
 800533a:	655a      	str	r2, [r3, #84]	@ 0x54
 800533c:	e002      	b.n	8005344 <HAL_TIM_PWM_ConfigChannel+0x214>
 800533e:	2301      	movs	r3, #1
 8005340:	75fb      	strb	r3, [r7, #23]
 8005342:	bf00      	nop
 8005344:	68fb      	ldr	r3, [r7, #12]
 8005346:	2200      	movs	r2, #0
 8005348:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800534c:	7dfb      	ldrb	r3, [r7, #23]
 800534e:	4618      	mov	r0, r3
 8005350:	3718      	adds	r7, #24
 8005352:	46bd      	mov	sp, r7
 8005354:	bd80      	pop	{r7, pc}
 8005356:	bf00      	nop

08005358 <HAL_TIM_ConfigClockSource>:
 8005358:	b580      	push	{r7, lr}
 800535a:	b084      	sub	sp, #16
 800535c:	af00      	add	r7, sp, #0
 800535e:	6078      	str	r0, [r7, #4]
 8005360:	6039      	str	r1, [r7, #0]
 8005362:	2300      	movs	r3, #0
 8005364:	73fb      	strb	r3, [r7, #15]
 8005366:	687b      	ldr	r3, [r7, #4]
 8005368:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 800536c:	2b01      	cmp	r3, #1
 800536e:	d101      	bne.n	8005374 <HAL_TIM_ConfigClockSource+0x1c>
 8005370:	2302      	movs	r3, #2
 8005372:	e0b6      	b.n	80054e2 <HAL_TIM_ConfigClockSource+0x18a>
 8005374:	687b      	ldr	r3, [r7, #4]
 8005376:	2201      	movs	r2, #1
 8005378:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800537c:	687b      	ldr	r3, [r7, #4]
 800537e:	2202      	movs	r2, #2
 8005380:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005384:	687b      	ldr	r3, [r7, #4]
 8005386:	681b      	ldr	r3, [r3, #0]
 8005388:	689b      	ldr	r3, [r3, #8]
 800538a:	60bb      	str	r3, [r7, #8]
 800538c:	68bb      	ldr	r3, [r7, #8]
 800538e:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8005392:	f023 0377 	bic.w	r3, r3, #119	@ 0x77
 8005396:	60bb      	str	r3, [r7, #8]
 8005398:	68bb      	ldr	r3, [r7, #8]
 800539a:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 800539e:	60bb      	str	r3, [r7, #8]
 80053a0:	687b      	ldr	r3, [r7, #4]
 80053a2:	681b      	ldr	r3, [r3, #0]
 80053a4:	68ba      	ldr	r2, [r7, #8]
 80053a6:	609a      	str	r2, [r3, #8]
 80053a8:	683b      	ldr	r3, [r7, #0]
 80053aa:	681b      	ldr	r3, [r3, #0]
 80053ac:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 80053b0:	d03e      	beq.n	8005430 <HAL_TIM_ConfigClockSource+0xd8>
 80053b2:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 80053b6:	f200 8087 	bhi.w	80054c8 <HAL_TIM_ConfigClockSource+0x170>
 80053ba:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 80053be:	f000 8086 	beq.w	80054ce <HAL_TIM_ConfigClockSource+0x176>
 80053c2:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 80053c6:	d87f      	bhi.n	80054c8 <HAL_TIM_ConfigClockSource+0x170>
 80053c8:	2b70      	cmp	r3, #112	@ 0x70
 80053ca:	d01a      	beq.n	8005402 <HAL_TIM_ConfigClockSource+0xaa>
 80053cc:	2b70      	cmp	r3, #112	@ 0x70
 80053ce:	d87b      	bhi.n	80054c8 <HAL_TIM_ConfigClockSource+0x170>
 80053d0:	2b60      	cmp	r3, #96	@ 0x60
 80053d2:	d050      	beq.n	8005476 <HAL_TIM_ConfigClockSource+0x11e>
 80053d4:	2b60      	cmp	r3, #96	@ 0x60
 80053d6:	d877      	bhi.n	80054c8 <HAL_TIM_ConfigClockSource+0x170>
 80053d8:	2b50      	cmp	r3, #80	@ 0x50
 80053da:	d03c      	beq.n	8005456 <HAL_TIM_ConfigClockSource+0xfe>
 80053dc:	2b50      	cmp	r3, #80	@ 0x50
 80053de:	d873      	bhi.n	80054c8 <HAL_TIM_ConfigClockSource+0x170>
 80053e0:	2b40      	cmp	r3, #64	@ 0x40
 80053e2:	d058      	beq.n	8005496 <HAL_TIM_ConfigClockSource+0x13e>
 80053e4:	2b40      	cmp	r3, #64	@ 0x40
 80053e6:	d86f      	bhi.n	80054c8 <HAL_TIM_ConfigClockSource+0x170>
 80053e8:	2b30      	cmp	r3, #48	@ 0x30
 80053ea:	d064      	beq.n	80054b6 <HAL_TIM_ConfigClockSource+0x15e>
 80053ec:	2b30      	cmp	r3, #48	@ 0x30
 80053ee:	d86b      	bhi.n	80054c8 <HAL_TIM_ConfigClockSource+0x170>
 80053f0:	2b20      	cmp	r3, #32
 80053f2:	d060      	beq.n	80054b6 <HAL_TIM_ConfigClockSource+0x15e>
 80053f4:	2b20      	cmp	r3, #32
 80053f6:	d867      	bhi.n	80054c8 <HAL_TIM_ConfigClockSource+0x170>
 80053f8:	2b00      	cmp	r3, #0
 80053fa:	d05c      	beq.n	80054b6 <HAL_TIM_ConfigClockSource+0x15e>
 80053fc:	2b10      	cmp	r3, #16
 80053fe:	d05a      	beq.n	80054b6 <HAL_TIM_ConfigClockSource+0x15e>
 8005400:	e062      	b.n	80054c8 <HAL_TIM_ConfigClockSource+0x170>
 8005402:	687b      	ldr	r3, [r7, #4]
 8005404:	6818      	ldr	r0, [r3, #0]
 8005406:	683b      	ldr	r3, [r7, #0]
 8005408:	6899      	ldr	r1, [r3, #8]
 800540a:	683b      	ldr	r3, [r7, #0]
 800540c:	685a      	ldr	r2, [r3, #4]
 800540e:	683b      	ldr	r3, [r7, #0]
 8005410:	68db      	ldr	r3, [r3, #12]
 8005412:	f000 fc41 	bl	8005c98 <TIM_ETR_SetConfig>
 8005416:	687b      	ldr	r3, [r7, #4]
 8005418:	681b      	ldr	r3, [r3, #0]
 800541a:	689b      	ldr	r3, [r3, #8]
 800541c:	60bb      	str	r3, [r7, #8]
 800541e:	68bb      	ldr	r3, [r7, #8]
 8005420:	f043 0377 	orr.w	r3, r3, #119	@ 0x77
 8005424:	60bb      	str	r3, [r7, #8]
 8005426:	687b      	ldr	r3, [r7, #4]
 8005428:	681b      	ldr	r3, [r3, #0]
 800542a:	68ba      	ldr	r2, [r7, #8]
 800542c:	609a      	str	r2, [r3, #8]
 800542e:	e04f      	b.n	80054d0 <HAL_TIM_ConfigClockSource+0x178>
 8005430:	687b      	ldr	r3, [r7, #4]
 8005432:	6818      	ldr	r0, [r3, #0]
 8005434:	683b      	ldr	r3, [r7, #0]
 8005436:	6899      	ldr	r1, [r3, #8]
 8005438:	683b      	ldr	r3, [r7, #0]
 800543a:	685a      	ldr	r2, [r3, #4]
 800543c:	683b      	ldr	r3, [r7, #0]
 800543e:	68db      	ldr	r3, [r3, #12]
 8005440:	f000 fc2a 	bl	8005c98 <TIM_ETR_SetConfig>
 8005444:	687b      	ldr	r3, [r7, #4]
 8005446:	681b      	ldr	r3, [r3, #0]
 8005448:	689a      	ldr	r2, [r3, #8]
 800544a:	687b      	ldr	r3, [r7, #4]
 800544c:	681b      	ldr	r3, [r3, #0]
 800544e:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8005452:	609a      	str	r2, [r3, #8]
 8005454:	e03c      	b.n	80054d0 <HAL_TIM_ConfigClockSource+0x178>
 8005456:	687b      	ldr	r3, [r7, #4]
 8005458:	6818      	ldr	r0, [r3, #0]
 800545a:	683b      	ldr	r3, [r7, #0]
 800545c:	6859      	ldr	r1, [r3, #4]
 800545e:	683b      	ldr	r3, [r7, #0]
 8005460:	68db      	ldr	r3, [r3, #12]
 8005462:	461a      	mov	r2, r3
 8005464:	f000 fb9e 	bl	8005ba4 <TIM_TI1_ConfigInputStage>
 8005468:	687b      	ldr	r3, [r7, #4]
 800546a:	681b      	ldr	r3, [r3, #0]
 800546c:	2150      	movs	r1, #80	@ 0x50
 800546e:	4618      	mov	r0, r3
 8005470:	f000 fbf7 	bl	8005c62 <TIM_ITRx_SetConfig>
 8005474:	e02c      	b.n	80054d0 <HAL_TIM_ConfigClockSource+0x178>
 8005476:	687b      	ldr	r3, [r7, #4]
 8005478:	6818      	ldr	r0, [r3, #0]
 800547a:	683b      	ldr	r3, [r7, #0]
 800547c:	6859      	ldr	r1, [r3, #4]
 800547e:	683b      	ldr	r3, [r7, #0]
 8005480:	68db      	ldr	r3, [r3, #12]
 8005482:	461a      	mov	r2, r3
 8005484:	f000 fbbd 	bl	8005c02 <TIM_TI2_ConfigInputStage>
 8005488:	687b      	ldr	r3, [r7, #4]
 800548a:	681b      	ldr	r3, [r3, #0]
 800548c:	2160      	movs	r1, #96	@ 0x60
 800548e:	4618      	mov	r0, r3
 8005490:	f000 fbe7 	bl	8005c62 <TIM_ITRx_SetConfig>
 8005494:	e01c      	b.n	80054d0 <HAL_TIM_ConfigClockSource+0x178>
 8005496:	687b      	ldr	r3, [r7, #4]
 8005498:	6818      	ldr	r0, [r3, #0]
 800549a:	683b      	ldr	r3, [r7, #0]
 800549c:	6859      	ldr	r1, [r3, #4]
 800549e:	683b      	ldr	r3, [r7, #0]
 80054a0:	68db      	ldr	r3, [r3, #12]
 80054a2:	461a      	mov	r2, r3
 80054a4:	f000 fb7e 	bl	8005ba4 <TIM_TI1_ConfigInputStage>
 80054a8:	687b      	ldr	r3, [r7, #4]
 80054aa:	681b      	ldr	r3, [r3, #0]
 80054ac:	2140      	movs	r1, #64	@ 0x40
 80054ae:	4618      	mov	r0, r3
 80054b0:	f000 fbd7 	bl	8005c62 <TIM_ITRx_SetConfig>
 80054b4:	e00c      	b.n	80054d0 <HAL_TIM_ConfigClockSource+0x178>
 80054b6:	687b      	ldr	r3, [r7, #4]
 80054b8:	681a      	ldr	r2, [r3, #0]
 80054ba:	683b      	ldr	r3, [r7, #0]
 80054bc:	681b      	ldr	r3, [r3, #0]
 80054be:	4619      	mov	r1, r3
 80054c0:	4610      	mov	r0, r2
 80054c2:	f000 fbce 	bl	8005c62 <TIM_ITRx_SetConfig>
 80054c6:	e003      	b.n	80054d0 <HAL_TIM_ConfigClockSource+0x178>
 80054c8:	2301      	movs	r3, #1
 80054ca:	73fb      	strb	r3, [r7, #15]
 80054cc:	e000      	b.n	80054d0 <HAL_TIM_ConfigClockSource+0x178>
 80054ce:	bf00      	nop
 80054d0:	687b      	ldr	r3, [r7, #4]
 80054d2:	2201      	movs	r2, #1
 80054d4:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80054d8:	687b      	ldr	r3, [r7, #4]
 80054da:	2200      	movs	r2, #0
 80054dc:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80054e0:	7bfb      	ldrb	r3, [r7, #15]
 80054e2:	4618      	mov	r0, r3
 80054e4:	3710      	adds	r7, #16
 80054e6:	46bd      	mov	sp, r7
 80054e8:	bd80      	pop	{r7, pc}

080054ea <HAL_TIM_PeriodElapsedCallback>:
 80054ea:	b480      	push	{r7}
 80054ec:	b083      	sub	sp, #12
 80054ee:	af00      	add	r7, sp, #0
 80054f0:	6078      	str	r0, [r7, #4]
 80054f2:	bf00      	nop
 80054f4:	370c      	adds	r7, #12
 80054f6:	46bd      	mov	sp, r7
 80054f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80054fc:	4770      	bx	lr

080054fe <HAL_TIM_OC_DelayElapsedCallback>:
 80054fe:	b480      	push	{r7}
 8005500:	b083      	sub	sp, #12
 8005502:	af00      	add	r7, sp, #0
 8005504:	6078      	str	r0, [r7, #4]
 8005506:	bf00      	nop
 8005508:	370c      	adds	r7, #12
 800550a:	46bd      	mov	sp, r7
 800550c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005510:	4770      	bx	lr

08005512 <HAL_TIM_IC_CaptureCallback>:
 8005512:	b480      	push	{r7}
 8005514:	b083      	sub	sp, #12
 8005516:	af00      	add	r7, sp, #0
 8005518:	6078      	str	r0, [r7, #4]
 800551a:	bf00      	nop
 800551c:	370c      	adds	r7, #12
 800551e:	46bd      	mov	sp, r7
 8005520:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005524:	4770      	bx	lr

08005526 <HAL_TIM_PWM_PulseFinishedCallback>:
 8005526:	b480      	push	{r7}
 8005528:	b083      	sub	sp, #12
 800552a:	af00      	add	r7, sp, #0
 800552c:	6078      	str	r0, [r7, #4]
 800552e:	bf00      	nop
 8005530:	370c      	adds	r7, #12
 8005532:	46bd      	mov	sp, r7
 8005534:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005538:	4770      	bx	lr

0800553a <HAL_TIM_TriggerCallback>:
 800553a:	b480      	push	{r7}
 800553c:	b083      	sub	sp, #12
 800553e:	af00      	add	r7, sp, #0
 8005540:	6078      	str	r0, [r7, #4]
 8005542:	bf00      	nop
 8005544:	370c      	adds	r7, #12
 8005546:	46bd      	mov	sp, r7
 8005548:	f85d 7b04 	ldr.w	r7, [sp], #4
 800554c:	4770      	bx	lr
	...

08005550 <TIM_Base_SetConfig>:
 8005550:	b480      	push	{r7}
 8005552:	b085      	sub	sp, #20
 8005554:	af00      	add	r7, sp, #0
 8005556:	6078      	str	r0, [r7, #4]
 8005558:	6039      	str	r1, [r7, #0]
 800555a:	687b      	ldr	r3, [r7, #4]
 800555c:	681b      	ldr	r3, [r3, #0]
 800555e:	60fb      	str	r3, [r7, #12]
 8005560:	687b      	ldr	r3, [r7, #4]
 8005562:	4a38      	ldr	r2, [pc, #224]	@ (8005644 <TIM_Base_SetConfig+0xf4>)
 8005564:	4293      	cmp	r3, r2
 8005566:	d007      	beq.n	8005578 <TIM_Base_SetConfig+0x28>
 8005568:	687b      	ldr	r3, [r7, #4]
 800556a:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800556e:	d003      	beq.n	8005578 <TIM_Base_SetConfig+0x28>
 8005570:	687b      	ldr	r3, [r7, #4]
 8005572:	4a35      	ldr	r2, [pc, #212]	@ (8005648 <TIM_Base_SetConfig+0xf8>)
 8005574:	4293      	cmp	r3, r2
 8005576:	d108      	bne.n	800558a <TIM_Base_SetConfig+0x3a>
 8005578:	68fb      	ldr	r3, [r7, #12]
 800557a:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800557e:	60fb      	str	r3, [r7, #12]
 8005580:	683b      	ldr	r3, [r7, #0]
 8005582:	685b      	ldr	r3, [r3, #4]
 8005584:	68fa      	ldr	r2, [r7, #12]
 8005586:	4313      	orrs	r3, r2
 8005588:	60fb      	str	r3, [r7, #12]
 800558a:	687b      	ldr	r3, [r7, #4]
 800558c:	4a2d      	ldr	r2, [pc, #180]	@ (8005644 <TIM_Base_SetConfig+0xf4>)
 800558e:	4293      	cmp	r3, r2
 8005590:	d013      	beq.n	80055ba <TIM_Base_SetConfig+0x6a>
 8005592:	687b      	ldr	r3, [r7, #4]
 8005594:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8005598:	d00f      	beq.n	80055ba <TIM_Base_SetConfig+0x6a>
 800559a:	687b      	ldr	r3, [r7, #4]
 800559c:	4a2a      	ldr	r2, [pc, #168]	@ (8005648 <TIM_Base_SetConfig+0xf8>)
 800559e:	4293      	cmp	r3, r2
 80055a0:	d00b      	beq.n	80055ba <TIM_Base_SetConfig+0x6a>
 80055a2:	687b      	ldr	r3, [r7, #4]
 80055a4:	4a29      	ldr	r2, [pc, #164]	@ (800564c <TIM_Base_SetConfig+0xfc>)
 80055a6:	4293      	cmp	r3, r2
 80055a8:	d007      	beq.n	80055ba <TIM_Base_SetConfig+0x6a>
 80055aa:	687b      	ldr	r3, [r7, #4]
 80055ac:	4a28      	ldr	r2, [pc, #160]	@ (8005650 <TIM_Base_SetConfig+0x100>)
 80055ae:	4293      	cmp	r3, r2
 80055b0:	d003      	beq.n	80055ba <TIM_Base_SetConfig+0x6a>
 80055b2:	687b      	ldr	r3, [r7, #4]
 80055b4:	4a27      	ldr	r2, [pc, #156]	@ (8005654 <TIM_Base_SetConfig+0x104>)
 80055b6:	4293      	cmp	r3, r2
 80055b8:	d108      	bne.n	80055cc <TIM_Base_SetConfig+0x7c>
 80055ba:	68fb      	ldr	r3, [r7, #12]
 80055bc:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 80055c0:	60fb      	str	r3, [r7, #12]
 80055c2:	683b      	ldr	r3, [r7, #0]
 80055c4:	68db      	ldr	r3, [r3, #12]
 80055c6:	68fa      	ldr	r2, [r7, #12]
 80055c8:	4313      	orrs	r3, r2
 80055ca:	60fb      	str	r3, [r7, #12]
 80055cc:	68fb      	ldr	r3, [r7, #12]
 80055ce:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 80055d2:	683b      	ldr	r3, [r7, #0]
 80055d4:	695b      	ldr	r3, [r3, #20]
 80055d6:	4313      	orrs	r3, r2
 80055d8:	60fb      	str	r3, [r7, #12]
 80055da:	687b      	ldr	r3, [r7, #4]
 80055dc:	68fa      	ldr	r2, [r7, #12]
 80055de:	601a      	str	r2, [r3, #0]
 80055e0:	683b      	ldr	r3, [r7, #0]
 80055e2:	689a      	ldr	r2, [r3, #8]
 80055e4:	687b      	ldr	r3, [r7, #4]
 80055e6:	62da      	str	r2, [r3, #44]	@ 0x2c
 80055e8:	683b      	ldr	r3, [r7, #0]
 80055ea:	681a      	ldr	r2, [r3, #0]
 80055ec:	687b      	ldr	r3, [r7, #4]
 80055ee:	629a      	str	r2, [r3, #40]	@ 0x28
 80055f0:	687b      	ldr	r3, [r7, #4]
 80055f2:	4a14      	ldr	r2, [pc, #80]	@ (8005644 <TIM_Base_SetConfig+0xf4>)
 80055f4:	4293      	cmp	r3, r2
 80055f6:	d00b      	beq.n	8005610 <TIM_Base_SetConfig+0xc0>
 80055f8:	687b      	ldr	r3, [r7, #4]
 80055fa:	4a14      	ldr	r2, [pc, #80]	@ (800564c <TIM_Base_SetConfig+0xfc>)
 80055fc:	4293      	cmp	r3, r2
 80055fe:	d007      	beq.n	8005610 <TIM_Base_SetConfig+0xc0>
 8005600:	687b      	ldr	r3, [r7, #4]
 8005602:	4a13      	ldr	r2, [pc, #76]	@ (8005650 <TIM_Base_SetConfig+0x100>)
 8005604:	4293      	cmp	r3, r2
 8005606:	d003      	beq.n	8005610 <TIM_Base_SetConfig+0xc0>
 8005608:	687b      	ldr	r3, [r7, #4]
 800560a:	4a12      	ldr	r2, [pc, #72]	@ (8005654 <TIM_Base_SetConfig+0x104>)
 800560c:	4293      	cmp	r3, r2
 800560e:	d103      	bne.n	8005618 <TIM_Base_SetConfig+0xc8>
 8005610:	683b      	ldr	r3, [r7, #0]
 8005612:	691a      	ldr	r2, [r3, #16]
 8005614:	687b      	ldr	r3, [r7, #4]
 8005616:	631a      	str	r2, [r3, #48]	@ 0x30
 8005618:	687b      	ldr	r3, [r7, #4]
 800561a:	2201      	movs	r2, #1
 800561c:	615a      	str	r2, [r3, #20]
 800561e:	687b      	ldr	r3, [r7, #4]
 8005620:	691b      	ldr	r3, [r3, #16]
 8005622:	f003 0301 	and.w	r3, r3, #1
 8005626:	2b01      	cmp	r3, #1
 8005628:	d105      	bne.n	8005636 <TIM_Base_SetConfig+0xe6>
 800562a:	687b      	ldr	r3, [r7, #4]
 800562c:	691b      	ldr	r3, [r3, #16]
 800562e:	f023 0201 	bic.w	r2, r3, #1
 8005632:	687b      	ldr	r3, [r7, #4]
 8005634:	611a      	str	r2, [r3, #16]
 8005636:	bf00      	nop
 8005638:	3714      	adds	r7, #20
 800563a:	46bd      	mov	sp, r7
 800563c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005640:	4770      	bx	lr
 8005642:	bf00      	nop
 8005644:	40012c00 	.word	0x40012c00
 8005648:	40000400 	.word	0x40000400
 800564c:	40014000 	.word	0x40014000
 8005650:	40014400 	.word	0x40014400
 8005654:	40014800 	.word	0x40014800

08005658 <TIM_OC1_SetConfig>:
 8005658:	b480      	push	{r7}
 800565a:	b087      	sub	sp, #28
 800565c:	af00      	add	r7, sp, #0
 800565e:	6078      	str	r0, [r7, #4]
 8005660:	6039      	str	r1, [r7, #0]
 8005662:	687b      	ldr	r3, [r7, #4]
 8005664:	6a1b      	ldr	r3, [r3, #32]
 8005666:	617b      	str	r3, [r7, #20]
 8005668:	687b      	ldr	r3, [r7, #4]
 800566a:	6a1b      	ldr	r3, [r3, #32]
 800566c:	f023 0201 	bic.w	r2, r3, #1
 8005670:	687b      	ldr	r3, [r7, #4]
 8005672:	621a      	str	r2, [r3, #32]
 8005674:	687b      	ldr	r3, [r7, #4]
 8005676:	685b      	ldr	r3, [r3, #4]
 8005678:	613b      	str	r3, [r7, #16]
 800567a:	687b      	ldr	r3, [r7, #4]
 800567c:	699b      	ldr	r3, [r3, #24]
 800567e:	60fb      	str	r3, [r7, #12]
 8005680:	68fb      	ldr	r3, [r7, #12]
 8005682:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8005686:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800568a:	60fb      	str	r3, [r7, #12]
 800568c:	68fb      	ldr	r3, [r7, #12]
 800568e:	f023 0303 	bic.w	r3, r3, #3
 8005692:	60fb      	str	r3, [r7, #12]
 8005694:	683b      	ldr	r3, [r7, #0]
 8005696:	681b      	ldr	r3, [r3, #0]
 8005698:	68fa      	ldr	r2, [r7, #12]
 800569a:	4313      	orrs	r3, r2
 800569c:	60fb      	str	r3, [r7, #12]
 800569e:	697b      	ldr	r3, [r7, #20]
 80056a0:	f023 0302 	bic.w	r3, r3, #2
 80056a4:	617b      	str	r3, [r7, #20]
 80056a6:	683b      	ldr	r3, [r7, #0]
 80056a8:	689b      	ldr	r3, [r3, #8]
 80056aa:	697a      	ldr	r2, [r7, #20]
 80056ac:	4313      	orrs	r3, r2
 80056ae:	617b      	str	r3, [r7, #20]
 80056b0:	687b      	ldr	r3, [r7, #4]
 80056b2:	4a28      	ldr	r2, [pc, #160]	@ (8005754 <TIM_OC1_SetConfig+0xfc>)
 80056b4:	4293      	cmp	r3, r2
 80056b6:	d00b      	beq.n	80056d0 <TIM_OC1_SetConfig+0x78>
 80056b8:	687b      	ldr	r3, [r7, #4]
 80056ba:	4a27      	ldr	r2, [pc, #156]	@ (8005758 <TIM_OC1_SetConfig+0x100>)
 80056bc:	4293      	cmp	r3, r2
 80056be:	d007      	beq.n	80056d0 <TIM_OC1_SetConfig+0x78>
 80056c0:	687b      	ldr	r3, [r7, #4]
 80056c2:	4a26      	ldr	r2, [pc, #152]	@ (800575c <TIM_OC1_SetConfig+0x104>)
 80056c4:	4293      	cmp	r3, r2
 80056c6:	d003      	beq.n	80056d0 <TIM_OC1_SetConfig+0x78>
 80056c8:	687b      	ldr	r3, [r7, #4]
 80056ca:	4a25      	ldr	r2, [pc, #148]	@ (8005760 <TIM_OC1_SetConfig+0x108>)
 80056cc:	4293      	cmp	r3, r2
 80056ce:	d10c      	bne.n	80056ea <TIM_OC1_SetConfig+0x92>
 80056d0:	697b      	ldr	r3, [r7, #20]
 80056d2:	f023 0308 	bic.w	r3, r3, #8
 80056d6:	617b      	str	r3, [r7, #20]
 80056d8:	683b      	ldr	r3, [r7, #0]
 80056da:	68db      	ldr	r3, [r3, #12]
 80056dc:	697a      	ldr	r2, [r7, #20]
 80056de:	4313      	orrs	r3, r2
 80056e0:	617b      	str	r3, [r7, #20]
 80056e2:	697b      	ldr	r3, [r7, #20]
 80056e4:	f023 0304 	bic.w	r3, r3, #4
 80056e8:	617b      	str	r3, [r7, #20]
 80056ea:	687b      	ldr	r3, [r7, #4]
 80056ec:	4a19      	ldr	r2, [pc, #100]	@ (8005754 <TIM_OC1_SetConfig+0xfc>)
 80056ee:	4293      	cmp	r3, r2
 80056f0:	d00b      	beq.n	800570a <TIM_OC1_SetConfig+0xb2>
 80056f2:	687b      	ldr	r3, [r7, #4]
 80056f4:	4a18      	ldr	r2, [pc, #96]	@ (8005758 <TIM_OC1_SetConfig+0x100>)
 80056f6:	4293      	cmp	r3, r2
 80056f8:	d007      	beq.n	800570a <TIM_OC1_SetConfig+0xb2>
 80056fa:	687b      	ldr	r3, [r7, #4]
 80056fc:	4a17      	ldr	r2, [pc, #92]	@ (800575c <TIM_OC1_SetConfig+0x104>)
 80056fe:	4293      	cmp	r3, r2
 8005700:	d003      	beq.n	800570a <TIM_OC1_SetConfig+0xb2>
 8005702:	687b      	ldr	r3, [r7, #4]
 8005704:	4a16      	ldr	r2, [pc, #88]	@ (8005760 <TIM_OC1_SetConfig+0x108>)
 8005706:	4293      	cmp	r3, r2
 8005708:	d111      	bne.n	800572e <TIM_OC1_SetConfig+0xd6>
 800570a:	693b      	ldr	r3, [r7, #16]
 800570c:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8005710:	613b      	str	r3, [r7, #16]
 8005712:	693b      	ldr	r3, [r7, #16]
 8005714:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8005718:	613b      	str	r3, [r7, #16]
 800571a:	683b      	ldr	r3, [r7, #0]
 800571c:	695b      	ldr	r3, [r3, #20]
 800571e:	693a      	ldr	r2, [r7, #16]
 8005720:	4313      	orrs	r3, r2
 8005722:	613b      	str	r3, [r7, #16]
 8005724:	683b      	ldr	r3, [r7, #0]
 8005726:	699b      	ldr	r3, [r3, #24]
 8005728:	693a      	ldr	r2, [r7, #16]
 800572a:	4313      	orrs	r3, r2
 800572c:	613b      	str	r3, [r7, #16]
 800572e:	687b      	ldr	r3, [r7, #4]
 8005730:	693a      	ldr	r2, [r7, #16]
 8005732:	605a      	str	r2, [r3, #4]
 8005734:	687b      	ldr	r3, [r7, #4]
 8005736:	68fa      	ldr	r2, [r7, #12]
 8005738:	619a      	str	r2, [r3, #24]
 800573a:	683b      	ldr	r3, [r7, #0]
 800573c:	685a      	ldr	r2, [r3, #4]
 800573e:	687b      	ldr	r3, [r7, #4]
 8005740:	635a      	str	r2, [r3, #52]	@ 0x34
 8005742:	687b      	ldr	r3, [r7, #4]
 8005744:	697a      	ldr	r2, [r7, #20]
 8005746:	621a      	str	r2, [r3, #32]
 8005748:	bf00      	nop
 800574a:	371c      	adds	r7, #28
 800574c:	46bd      	mov	sp, r7
 800574e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005752:	4770      	bx	lr
 8005754:	40012c00 	.word	0x40012c00
 8005758:	40014000 	.word	0x40014000
 800575c:	40014400 	.word	0x40014400
 8005760:	40014800 	.word	0x40014800

08005764 <TIM_OC2_SetConfig>:
 8005764:	b480      	push	{r7}
 8005766:	b087      	sub	sp, #28
 8005768:	af00      	add	r7, sp, #0
 800576a:	6078      	str	r0, [r7, #4]
 800576c:	6039      	str	r1, [r7, #0]
 800576e:	687b      	ldr	r3, [r7, #4]
 8005770:	6a1b      	ldr	r3, [r3, #32]
 8005772:	617b      	str	r3, [r7, #20]
 8005774:	687b      	ldr	r3, [r7, #4]
 8005776:	6a1b      	ldr	r3, [r3, #32]
 8005778:	f023 0210 	bic.w	r2, r3, #16
 800577c:	687b      	ldr	r3, [r7, #4]
 800577e:	621a      	str	r2, [r3, #32]
 8005780:	687b      	ldr	r3, [r7, #4]
 8005782:	685b      	ldr	r3, [r3, #4]
 8005784:	613b      	str	r3, [r7, #16]
 8005786:	687b      	ldr	r3, [r7, #4]
 8005788:	699b      	ldr	r3, [r3, #24]
 800578a:	60fb      	str	r3, [r7, #12]
 800578c:	68fb      	ldr	r3, [r7, #12]
 800578e:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 8005792:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8005796:	60fb      	str	r3, [r7, #12]
 8005798:	68fb      	ldr	r3, [r7, #12]
 800579a:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 800579e:	60fb      	str	r3, [r7, #12]
 80057a0:	683b      	ldr	r3, [r7, #0]
 80057a2:	681b      	ldr	r3, [r3, #0]
 80057a4:	021b      	lsls	r3, r3, #8
 80057a6:	68fa      	ldr	r2, [r7, #12]
 80057a8:	4313      	orrs	r3, r2
 80057aa:	60fb      	str	r3, [r7, #12]
 80057ac:	697b      	ldr	r3, [r7, #20]
 80057ae:	f023 0320 	bic.w	r3, r3, #32
 80057b2:	617b      	str	r3, [r7, #20]
 80057b4:	683b      	ldr	r3, [r7, #0]
 80057b6:	689b      	ldr	r3, [r3, #8]
 80057b8:	011b      	lsls	r3, r3, #4
 80057ba:	697a      	ldr	r2, [r7, #20]
 80057bc:	4313      	orrs	r3, r2
 80057be:	617b      	str	r3, [r7, #20]
 80057c0:	687b      	ldr	r3, [r7, #4]
 80057c2:	4a24      	ldr	r2, [pc, #144]	@ (8005854 <TIM_OC2_SetConfig+0xf0>)
 80057c4:	4293      	cmp	r3, r2
 80057c6:	d10d      	bne.n	80057e4 <TIM_OC2_SetConfig+0x80>
 80057c8:	697b      	ldr	r3, [r7, #20]
 80057ca:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 80057ce:	617b      	str	r3, [r7, #20]
 80057d0:	683b      	ldr	r3, [r7, #0]
 80057d2:	68db      	ldr	r3, [r3, #12]
 80057d4:	011b      	lsls	r3, r3, #4
 80057d6:	697a      	ldr	r2, [r7, #20]
 80057d8:	4313      	orrs	r3, r2
 80057da:	617b      	str	r3, [r7, #20]
 80057dc:	697b      	ldr	r3, [r7, #20]
 80057de:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 80057e2:	617b      	str	r3, [r7, #20]
 80057e4:	687b      	ldr	r3, [r7, #4]
 80057e6:	4a1b      	ldr	r2, [pc, #108]	@ (8005854 <TIM_OC2_SetConfig+0xf0>)
 80057e8:	4293      	cmp	r3, r2
 80057ea:	d00b      	beq.n	8005804 <TIM_OC2_SetConfig+0xa0>
 80057ec:	687b      	ldr	r3, [r7, #4]
 80057ee:	4a1a      	ldr	r2, [pc, #104]	@ (8005858 <TIM_OC2_SetConfig+0xf4>)
 80057f0:	4293      	cmp	r3, r2
 80057f2:	d007      	beq.n	8005804 <TIM_OC2_SetConfig+0xa0>
 80057f4:	687b      	ldr	r3, [r7, #4]
 80057f6:	4a19      	ldr	r2, [pc, #100]	@ (800585c <TIM_OC2_SetConfig+0xf8>)
 80057f8:	4293      	cmp	r3, r2
 80057fa:	d003      	beq.n	8005804 <TIM_OC2_SetConfig+0xa0>
 80057fc:	687b      	ldr	r3, [r7, #4]
 80057fe:	4a18      	ldr	r2, [pc, #96]	@ (8005860 <TIM_OC2_SetConfig+0xfc>)
 8005800:	4293      	cmp	r3, r2
 8005802:	d113      	bne.n	800582c <TIM_OC2_SetConfig+0xc8>
 8005804:	693b      	ldr	r3, [r7, #16]
 8005806:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 800580a:	613b      	str	r3, [r7, #16]
 800580c:	693b      	ldr	r3, [r7, #16]
 800580e:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8005812:	613b      	str	r3, [r7, #16]
 8005814:	683b      	ldr	r3, [r7, #0]
 8005816:	695b      	ldr	r3, [r3, #20]
 8005818:	009b      	lsls	r3, r3, #2
 800581a:	693a      	ldr	r2, [r7, #16]
 800581c:	4313      	orrs	r3, r2
 800581e:	613b      	str	r3, [r7, #16]
 8005820:	683b      	ldr	r3, [r7, #0]
 8005822:	699b      	ldr	r3, [r3, #24]
 8005824:	009b      	lsls	r3, r3, #2
 8005826:	693a      	ldr	r2, [r7, #16]
 8005828:	4313      	orrs	r3, r2
 800582a:	613b      	str	r3, [r7, #16]
 800582c:	687b      	ldr	r3, [r7, #4]
 800582e:	693a      	ldr	r2, [r7, #16]
 8005830:	605a      	str	r2, [r3, #4]
 8005832:	687b      	ldr	r3, [r7, #4]
 8005834:	68fa      	ldr	r2, [r7, #12]
 8005836:	619a      	str	r2, [r3, #24]
 8005838:	683b      	ldr	r3, [r7, #0]
 800583a:	685a      	ldr	r2, [r3, #4]
 800583c:	687b      	ldr	r3, [r7, #4]
 800583e:	639a      	str	r2, [r3, #56]	@ 0x38
 8005840:	687b      	ldr	r3, [r7, #4]
 8005842:	697a      	ldr	r2, [r7, #20]
 8005844:	621a      	str	r2, [r3, #32]
 8005846:	bf00      	nop
 8005848:	371c      	adds	r7, #28
 800584a:	46bd      	mov	sp, r7
 800584c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005850:	4770      	bx	lr
 8005852:	bf00      	nop
 8005854:	40012c00 	.word	0x40012c00
 8005858:	40014000 	.word	0x40014000
 800585c:	40014400 	.word	0x40014400
 8005860:	40014800 	.word	0x40014800

08005864 <TIM_OC3_SetConfig>:
 8005864:	b480      	push	{r7}
 8005866:	b087      	sub	sp, #28
 8005868:	af00      	add	r7, sp, #0
 800586a:	6078      	str	r0, [r7, #4]
 800586c:	6039      	str	r1, [r7, #0]
 800586e:	687b      	ldr	r3, [r7, #4]
 8005870:	6a1b      	ldr	r3, [r3, #32]
 8005872:	617b      	str	r3, [r7, #20]
 8005874:	687b      	ldr	r3, [r7, #4]
 8005876:	6a1b      	ldr	r3, [r3, #32]
 8005878:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 800587c:	687b      	ldr	r3, [r7, #4]
 800587e:	621a      	str	r2, [r3, #32]
 8005880:	687b      	ldr	r3, [r7, #4]
 8005882:	685b      	ldr	r3, [r3, #4]
 8005884:	613b      	str	r3, [r7, #16]
 8005886:	687b      	ldr	r3, [r7, #4]
 8005888:	69db      	ldr	r3, [r3, #28]
 800588a:	60fb      	str	r3, [r7, #12]
 800588c:	68fb      	ldr	r3, [r7, #12]
 800588e:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8005892:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8005896:	60fb      	str	r3, [r7, #12]
 8005898:	68fb      	ldr	r3, [r7, #12]
 800589a:	f023 0303 	bic.w	r3, r3, #3
 800589e:	60fb      	str	r3, [r7, #12]
 80058a0:	683b      	ldr	r3, [r7, #0]
 80058a2:	681b      	ldr	r3, [r3, #0]
 80058a4:	68fa      	ldr	r2, [r7, #12]
 80058a6:	4313      	orrs	r3, r2
 80058a8:	60fb      	str	r3, [r7, #12]
 80058aa:	697b      	ldr	r3, [r7, #20]
 80058ac:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 80058b0:	617b      	str	r3, [r7, #20]
 80058b2:	683b      	ldr	r3, [r7, #0]
 80058b4:	689b      	ldr	r3, [r3, #8]
 80058b6:	021b      	lsls	r3, r3, #8
 80058b8:	697a      	ldr	r2, [r7, #20]
 80058ba:	4313      	orrs	r3, r2
 80058bc:	617b      	str	r3, [r7, #20]
 80058be:	687b      	ldr	r3, [r7, #4]
 80058c0:	4a23      	ldr	r2, [pc, #140]	@ (8005950 <TIM_OC3_SetConfig+0xec>)
 80058c2:	4293      	cmp	r3, r2
 80058c4:	d10d      	bne.n	80058e2 <TIM_OC3_SetConfig+0x7e>
 80058c6:	697b      	ldr	r3, [r7, #20]
 80058c8:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 80058cc:	617b      	str	r3, [r7, #20]
 80058ce:	683b      	ldr	r3, [r7, #0]
 80058d0:	68db      	ldr	r3, [r3, #12]
 80058d2:	021b      	lsls	r3, r3, #8
 80058d4:	697a      	ldr	r2, [r7, #20]
 80058d6:	4313      	orrs	r3, r2
 80058d8:	617b      	str	r3, [r7, #20]
 80058da:	697b      	ldr	r3, [r7, #20]
 80058dc:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 80058e0:	617b      	str	r3, [r7, #20]
 80058e2:	687b      	ldr	r3, [r7, #4]
 80058e4:	4a1a      	ldr	r2, [pc, #104]	@ (8005950 <TIM_OC3_SetConfig+0xec>)
 80058e6:	4293      	cmp	r3, r2
 80058e8:	d00b      	beq.n	8005902 <TIM_OC3_SetConfig+0x9e>
 80058ea:	687b      	ldr	r3, [r7, #4]
 80058ec:	4a19      	ldr	r2, [pc, #100]	@ (8005954 <TIM_OC3_SetConfig+0xf0>)
 80058ee:	4293      	cmp	r3, r2
 80058f0:	d007      	beq.n	8005902 <TIM_OC3_SetConfig+0x9e>
 80058f2:	687b      	ldr	r3, [r7, #4]
 80058f4:	4a18      	ldr	r2, [pc, #96]	@ (8005958 <TIM_OC3_SetConfig+0xf4>)
 80058f6:	4293      	cmp	r3, r2
 80058f8:	d003      	beq.n	8005902 <TIM_OC3_SetConfig+0x9e>
 80058fa:	687b      	ldr	r3, [r7, #4]
 80058fc:	4a17      	ldr	r2, [pc, #92]	@ (800595c <TIM_OC3_SetConfig+0xf8>)
 80058fe:	4293      	cmp	r3, r2
 8005900:	d113      	bne.n	800592a <TIM_OC3_SetConfig+0xc6>
 8005902:	693b      	ldr	r3, [r7, #16]
 8005904:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8005908:	613b      	str	r3, [r7, #16]
 800590a:	693b      	ldr	r3, [r7, #16]
 800590c:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8005910:	613b      	str	r3, [r7, #16]
 8005912:	683b      	ldr	r3, [r7, #0]
 8005914:	695b      	ldr	r3, [r3, #20]
 8005916:	011b      	lsls	r3, r3, #4
 8005918:	693a      	ldr	r2, [r7, #16]
 800591a:	4313      	orrs	r3, r2
 800591c:	613b      	str	r3, [r7, #16]
 800591e:	683b      	ldr	r3, [r7, #0]
 8005920:	699b      	ldr	r3, [r3, #24]
 8005922:	011b      	lsls	r3, r3, #4
 8005924:	693a      	ldr	r2, [r7, #16]
 8005926:	4313      	orrs	r3, r2
 8005928:	613b      	str	r3, [r7, #16]
 800592a:	687b      	ldr	r3, [r7, #4]
 800592c:	693a      	ldr	r2, [r7, #16]
 800592e:	605a      	str	r2, [r3, #4]
 8005930:	687b      	ldr	r3, [r7, #4]
 8005932:	68fa      	ldr	r2, [r7, #12]
 8005934:	61da      	str	r2, [r3, #28]
 8005936:	683b      	ldr	r3, [r7, #0]
 8005938:	685a      	ldr	r2, [r3, #4]
 800593a:	687b      	ldr	r3, [r7, #4]
 800593c:	63da      	str	r2, [r3, #60]	@ 0x3c
 800593e:	687b      	ldr	r3, [r7, #4]
 8005940:	697a      	ldr	r2, [r7, #20]
 8005942:	621a      	str	r2, [r3, #32]
 8005944:	bf00      	nop
 8005946:	371c      	adds	r7, #28
 8005948:	46bd      	mov	sp, r7
 800594a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800594e:	4770      	bx	lr
 8005950:	40012c00 	.word	0x40012c00
 8005954:	40014000 	.word	0x40014000
 8005958:	40014400 	.word	0x40014400
 800595c:	40014800 	.word	0x40014800

08005960 <TIM_OC4_SetConfig>:
 8005960:	b480      	push	{r7}
 8005962:	b087      	sub	sp, #28
 8005964:	af00      	add	r7, sp, #0
 8005966:	6078      	str	r0, [r7, #4]
 8005968:	6039      	str	r1, [r7, #0]
 800596a:	687b      	ldr	r3, [r7, #4]
 800596c:	6a1b      	ldr	r3, [r3, #32]
 800596e:	613b      	str	r3, [r7, #16]
 8005970:	687b      	ldr	r3, [r7, #4]
 8005972:	6a1b      	ldr	r3, [r3, #32]
 8005974:	f423 5280 	bic.w	r2, r3, #4096	@ 0x1000
 8005978:	687b      	ldr	r3, [r7, #4]
 800597a:	621a      	str	r2, [r3, #32]
 800597c:	687b      	ldr	r3, [r7, #4]
 800597e:	685b      	ldr	r3, [r3, #4]
 8005980:	617b      	str	r3, [r7, #20]
 8005982:	687b      	ldr	r3, [r7, #4]
 8005984:	69db      	ldr	r3, [r3, #28]
 8005986:	60fb      	str	r3, [r7, #12]
 8005988:	68fb      	ldr	r3, [r7, #12]
 800598a:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 800598e:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8005992:	60fb      	str	r3, [r7, #12]
 8005994:	68fb      	ldr	r3, [r7, #12]
 8005996:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 800599a:	60fb      	str	r3, [r7, #12]
 800599c:	683b      	ldr	r3, [r7, #0]
 800599e:	681b      	ldr	r3, [r3, #0]
 80059a0:	021b      	lsls	r3, r3, #8
 80059a2:	68fa      	ldr	r2, [r7, #12]
 80059a4:	4313      	orrs	r3, r2
 80059a6:	60fb      	str	r3, [r7, #12]
 80059a8:	693b      	ldr	r3, [r7, #16]
 80059aa:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 80059ae:	613b      	str	r3, [r7, #16]
 80059b0:	683b      	ldr	r3, [r7, #0]
 80059b2:	689b      	ldr	r3, [r3, #8]
 80059b4:	031b      	lsls	r3, r3, #12
 80059b6:	693a      	ldr	r2, [r7, #16]
 80059b8:	4313      	orrs	r3, r2
 80059ba:	613b      	str	r3, [r7, #16]
 80059bc:	687b      	ldr	r3, [r7, #4]
 80059be:	4a16      	ldr	r2, [pc, #88]	@ (8005a18 <TIM_OC4_SetConfig+0xb8>)
 80059c0:	4293      	cmp	r3, r2
 80059c2:	d00b      	beq.n	80059dc <TIM_OC4_SetConfig+0x7c>
 80059c4:	687b      	ldr	r3, [r7, #4]
 80059c6:	4a15      	ldr	r2, [pc, #84]	@ (8005a1c <TIM_OC4_SetConfig+0xbc>)
 80059c8:	4293      	cmp	r3, r2
 80059ca:	d007      	beq.n	80059dc <TIM_OC4_SetConfig+0x7c>
 80059cc:	687b      	ldr	r3, [r7, #4]
 80059ce:	4a14      	ldr	r2, [pc, #80]	@ (8005a20 <TIM_OC4_SetConfig+0xc0>)
 80059d0:	4293      	cmp	r3, r2
 80059d2:	d003      	beq.n	80059dc <TIM_OC4_SetConfig+0x7c>
 80059d4:	687b      	ldr	r3, [r7, #4]
 80059d6:	4a13      	ldr	r2, [pc, #76]	@ (8005a24 <TIM_OC4_SetConfig+0xc4>)
 80059d8:	4293      	cmp	r3, r2
 80059da:	d109      	bne.n	80059f0 <TIM_OC4_SetConfig+0x90>
 80059dc:	697b      	ldr	r3, [r7, #20]
 80059de:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 80059e2:	617b      	str	r3, [r7, #20]
 80059e4:	683b      	ldr	r3, [r7, #0]
 80059e6:	695b      	ldr	r3, [r3, #20]
 80059e8:	019b      	lsls	r3, r3, #6
 80059ea:	697a      	ldr	r2, [r7, #20]
 80059ec:	4313      	orrs	r3, r2
 80059ee:	617b      	str	r3, [r7, #20]
 80059f0:	687b      	ldr	r3, [r7, #4]
 80059f2:	697a      	ldr	r2, [r7, #20]
 80059f4:	605a      	str	r2, [r3, #4]
 80059f6:	687b      	ldr	r3, [r7, #4]
 80059f8:	68fa      	ldr	r2, [r7, #12]
 80059fa:	61da      	str	r2, [r3, #28]
 80059fc:	683b      	ldr	r3, [r7, #0]
 80059fe:	685a      	ldr	r2, [r3, #4]
 8005a00:	687b      	ldr	r3, [r7, #4]
 8005a02:	641a      	str	r2, [r3, #64]	@ 0x40
 8005a04:	687b      	ldr	r3, [r7, #4]
 8005a06:	693a      	ldr	r2, [r7, #16]
 8005a08:	621a      	str	r2, [r3, #32]
 8005a0a:	bf00      	nop
 8005a0c:	371c      	adds	r7, #28
 8005a0e:	46bd      	mov	sp, r7
 8005a10:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005a14:	4770      	bx	lr
 8005a16:	bf00      	nop
 8005a18:	40012c00 	.word	0x40012c00
 8005a1c:	40014000 	.word	0x40014000
 8005a20:	40014400 	.word	0x40014400
 8005a24:	40014800 	.word	0x40014800

08005a28 <TIM_OC5_SetConfig>:
 8005a28:	b480      	push	{r7}
 8005a2a:	b087      	sub	sp, #28
 8005a2c:	af00      	add	r7, sp, #0
 8005a2e:	6078      	str	r0, [r7, #4]
 8005a30:	6039      	str	r1, [r7, #0]
 8005a32:	687b      	ldr	r3, [r7, #4]
 8005a34:	6a1b      	ldr	r3, [r3, #32]
 8005a36:	613b      	str	r3, [r7, #16]
 8005a38:	687b      	ldr	r3, [r7, #4]
 8005a3a:	6a1b      	ldr	r3, [r3, #32]
 8005a3c:	f423 3280 	bic.w	r2, r3, #65536	@ 0x10000
 8005a40:	687b      	ldr	r3, [r7, #4]
 8005a42:	621a      	str	r2, [r3, #32]
 8005a44:	687b      	ldr	r3, [r7, #4]
 8005a46:	685b      	ldr	r3, [r3, #4]
 8005a48:	617b      	str	r3, [r7, #20]
 8005a4a:	687b      	ldr	r3, [r7, #4]
 8005a4c:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8005a4e:	60fb      	str	r3, [r7, #12]
 8005a50:	68fb      	ldr	r3, [r7, #12]
 8005a52:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8005a56:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8005a5a:	60fb      	str	r3, [r7, #12]
 8005a5c:	683b      	ldr	r3, [r7, #0]
 8005a5e:	681b      	ldr	r3, [r3, #0]
 8005a60:	68fa      	ldr	r2, [r7, #12]
 8005a62:	4313      	orrs	r3, r2
 8005a64:	60fb      	str	r3, [r7, #12]
 8005a66:	693b      	ldr	r3, [r7, #16]
 8005a68:	f423 3300 	bic.w	r3, r3, #131072	@ 0x20000
 8005a6c:	613b      	str	r3, [r7, #16]
 8005a6e:	683b      	ldr	r3, [r7, #0]
 8005a70:	689b      	ldr	r3, [r3, #8]
 8005a72:	041b      	lsls	r3, r3, #16
 8005a74:	693a      	ldr	r2, [r7, #16]
 8005a76:	4313      	orrs	r3, r2
 8005a78:	613b      	str	r3, [r7, #16]
 8005a7a:	687b      	ldr	r3, [r7, #4]
 8005a7c:	4a15      	ldr	r2, [pc, #84]	@ (8005ad4 <TIM_OC5_SetConfig+0xac>)
 8005a7e:	4293      	cmp	r3, r2
 8005a80:	d00b      	beq.n	8005a9a <TIM_OC5_SetConfig+0x72>
 8005a82:	687b      	ldr	r3, [r7, #4]
 8005a84:	4a14      	ldr	r2, [pc, #80]	@ (8005ad8 <TIM_OC5_SetConfig+0xb0>)
 8005a86:	4293      	cmp	r3, r2
 8005a88:	d007      	beq.n	8005a9a <TIM_OC5_SetConfig+0x72>
 8005a8a:	687b      	ldr	r3, [r7, #4]
 8005a8c:	4a13      	ldr	r2, [pc, #76]	@ (8005adc <TIM_OC5_SetConfig+0xb4>)
 8005a8e:	4293      	cmp	r3, r2
 8005a90:	d003      	beq.n	8005a9a <TIM_OC5_SetConfig+0x72>
 8005a92:	687b      	ldr	r3, [r7, #4]
 8005a94:	4a12      	ldr	r2, [pc, #72]	@ (8005ae0 <TIM_OC5_SetConfig+0xb8>)
 8005a96:	4293      	cmp	r3, r2
 8005a98:	d109      	bne.n	8005aae <TIM_OC5_SetConfig+0x86>
 8005a9a:	697b      	ldr	r3, [r7, #20]
 8005a9c:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8005aa0:	617b      	str	r3, [r7, #20]
 8005aa2:	683b      	ldr	r3, [r7, #0]
 8005aa4:	695b      	ldr	r3, [r3, #20]
 8005aa6:	021b      	lsls	r3, r3, #8
 8005aa8:	697a      	ldr	r2, [r7, #20]
 8005aaa:	4313      	orrs	r3, r2
 8005aac:	617b      	str	r3, [r7, #20]
 8005aae:	687b      	ldr	r3, [r7, #4]
 8005ab0:	697a      	ldr	r2, [r7, #20]
 8005ab2:	605a      	str	r2, [r3, #4]
 8005ab4:	687b      	ldr	r3, [r7, #4]
 8005ab6:	68fa      	ldr	r2, [r7, #12]
 8005ab8:	655a      	str	r2, [r3, #84]	@ 0x54
 8005aba:	683b      	ldr	r3, [r7, #0]
 8005abc:	685a      	ldr	r2, [r3, #4]
 8005abe:	687b      	ldr	r3, [r7, #4]
 8005ac0:	659a      	str	r2, [r3, #88]	@ 0x58
 8005ac2:	687b      	ldr	r3, [r7, #4]
 8005ac4:	693a      	ldr	r2, [r7, #16]
 8005ac6:	621a      	str	r2, [r3, #32]
 8005ac8:	bf00      	nop
 8005aca:	371c      	adds	r7, #28
 8005acc:	46bd      	mov	sp, r7
 8005ace:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005ad2:	4770      	bx	lr
 8005ad4:	40012c00 	.word	0x40012c00
 8005ad8:	40014000 	.word	0x40014000
 8005adc:	40014400 	.word	0x40014400
 8005ae0:	40014800 	.word	0x40014800

08005ae4 <TIM_OC6_SetConfig>:
 8005ae4:	b480      	push	{r7}
 8005ae6:	b087      	sub	sp, #28
 8005ae8:	af00      	add	r7, sp, #0
 8005aea:	6078      	str	r0, [r7, #4]
 8005aec:	6039      	str	r1, [r7, #0]
 8005aee:	687b      	ldr	r3, [r7, #4]
 8005af0:	6a1b      	ldr	r3, [r3, #32]
 8005af2:	613b      	str	r3, [r7, #16]
 8005af4:	687b      	ldr	r3, [r7, #4]
 8005af6:	6a1b      	ldr	r3, [r3, #32]
 8005af8:	f423 1280 	bic.w	r2, r3, #1048576	@ 0x100000
 8005afc:	687b      	ldr	r3, [r7, #4]
 8005afe:	621a      	str	r2, [r3, #32]
 8005b00:	687b      	ldr	r3, [r7, #4]
 8005b02:	685b      	ldr	r3, [r3, #4]
 8005b04:	617b      	str	r3, [r7, #20]
 8005b06:	687b      	ldr	r3, [r7, #4]
 8005b08:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8005b0a:	60fb      	str	r3, [r7, #12]
 8005b0c:	68fb      	ldr	r3, [r7, #12]
 8005b0e:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 8005b12:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8005b16:	60fb      	str	r3, [r7, #12]
 8005b18:	683b      	ldr	r3, [r7, #0]
 8005b1a:	681b      	ldr	r3, [r3, #0]
 8005b1c:	021b      	lsls	r3, r3, #8
 8005b1e:	68fa      	ldr	r2, [r7, #12]
 8005b20:	4313      	orrs	r3, r2
 8005b22:	60fb      	str	r3, [r7, #12]
 8005b24:	693b      	ldr	r3, [r7, #16]
 8005b26:	f423 1300 	bic.w	r3, r3, #2097152	@ 0x200000
 8005b2a:	613b      	str	r3, [r7, #16]
 8005b2c:	683b      	ldr	r3, [r7, #0]
 8005b2e:	689b      	ldr	r3, [r3, #8]
 8005b30:	051b      	lsls	r3, r3, #20
 8005b32:	693a      	ldr	r2, [r7, #16]
 8005b34:	4313      	orrs	r3, r2
 8005b36:	613b      	str	r3, [r7, #16]
 8005b38:	687b      	ldr	r3, [r7, #4]
 8005b3a:	4a16      	ldr	r2, [pc, #88]	@ (8005b94 <TIM_OC6_SetConfig+0xb0>)
 8005b3c:	4293      	cmp	r3, r2
 8005b3e:	d00b      	beq.n	8005b58 <TIM_OC6_SetConfig+0x74>
 8005b40:	687b      	ldr	r3, [r7, #4]
 8005b42:	4a15      	ldr	r2, [pc, #84]	@ (8005b98 <TIM_OC6_SetConfig+0xb4>)
 8005b44:	4293      	cmp	r3, r2
 8005b46:	d007      	beq.n	8005b58 <TIM_OC6_SetConfig+0x74>
 8005b48:	687b      	ldr	r3, [r7, #4]
 8005b4a:	4a14      	ldr	r2, [pc, #80]	@ (8005b9c <TIM_OC6_SetConfig+0xb8>)
 8005b4c:	4293      	cmp	r3, r2
 8005b4e:	d003      	beq.n	8005b58 <TIM_OC6_SetConfig+0x74>
 8005b50:	687b      	ldr	r3, [r7, #4]
 8005b52:	4a13      	ldr	r2, [pc, #76]	@ (8005ba0 <TIM_OC6_SetConfig+0xbc>)
 8005b54:	4293      	cmp	r3, r2
 8005b56:	d109      	bne.n	8005b6c <TIM_OC6_SetConfig+0x88>
 8005b58:	697b      	ldr	r3, [r7, #20]
 8005b5a:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8005b5e:	617b      	str	r3, [r7, #20]
 8005b60:	683b      	ldr	r3, [r7, #0]
 8005b62:	695b      	ldr	r3, [r3, #20]
 8005b64:	029b      	lsls	r3, r3, #10
 8005b66:	697a      	ldr	r2, [r7, #20]
 8005b68:	4313      	orrs	r3, r2
 8005b6a:	617b      	str	r3, [r7, #20]
 8005b6c:	687b      	ldr	r3, [r7, #4]
 8005b6e:	697a      	ldr	r2, [r7, #20]
 8005b70:	605a      	str	r2, [r3, #4]
 8005b72:	687b      	ldr	r3, [r7, #4]
 8005b74:	68fa      	ldr	r2, [r7, #12]
 8005b76:	655a      	str	r2, [r3, #84]	@ 0x54
 8005b78:	683b      	ldr	r3, [r7, #0]
 8005b7a:	685a      	ldr	r2, [r3, #4]
 8005b7c:	687b      	ldr	r3, [r7, #4]
 8005b7e:	65da      	str	r2, [r3, #92]	@ 0x5c
 8005b80:	687b      	ldr	r3, [r7, #4]
 8005b82:	693a      	ldr	r2, [r7, #16]
 8005b84:	621a      	str	r2, [r3, #32]
 8005b86:	bf00      	nop
 8005b88:	371c      	adds	r7, #28
 8005b8a:	46bd      	mov	sp, r7
 8005b8c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005b90:	4770      	bx	lr
 8005b92:	bf00      	nop
 8005b94:	40012c00 	.word	0x40012c00
 8005b98:	40014000 	.word	0x40014000
 8005b9c:	40014400 	.word	0x40014400
 8005ba0:	40014800 	.word	0x40014800

08005ba4 <TIM_TI1_ConfigInputStage>:
 8005ba4:	b480      	push	{r7}
 8005ba6:	b087      	sub	sp, #28
 8005ba8:	af00      	add	r7, sp, #0
 8005baa:	60f8      	str	r0, [r7, #12]
 8005bac:	60b9      	str	r1, [r7, #8]
 8005bae:	607a      	str	r2, [r7, #4]
 8005bb0:	68fb      	ldr	r3, [r7, #12]
 8005bb2:	6a1b      	ldr	r3, [r3, #32]
 8005bb4:	617b      	str	r3, [r7, #20]
 8005bb6:	68fb      	ldr	r3, [r7, #12]
 8005bb8:	6a1b      	ldr	r3, [r3, #32]
 8005bba:	f023 0201 	bic.w	r2, r3, #1
 8005bbe:	68fb      	ldr	r3, [r7, #12]
 8005bc0:	621a      	str	r2, [r3, #32]
 8005bc2:	68fb      	ldr	r3, [r7, #12]
 8005bc4:	699b      	ldr	r3, [r3, #24]
 8005bc6:	613b      	str	r3, [r7, #16]
 8005bc8:	693b      	ldr	r3, [r7, #16]
 8005bca:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 8005bce:	613b      	str	r3, [r7, #16]
 8005bd0:	687b      	ldr	r3, [r7, #4]
 8005bd2:	011b      	lsls	r3, r3, #4
 8005bd4:	693a      	ldr	r2, [r7, #16]
 8005bd6:	4313      	orrs	r3, r2
 8005bd8:	613b      	str	r3, [r7, #16]
 8005bda:	697b      	ldr	r3, [r7, #20]
 8005bdc:	f023 030a 	bic.w	r3, r3, #10
 8005be0:	617b      	str	r3, [r7, #20]
 8005be2:	697a      	ldr	r2, [r7, #20]
 8005be4:	68bb      	ldr	r3, [r7, #8]
 8005be6:	4313      	orrs	r3, r2
 8005be8:	617b      	str	r3, [r7, #20]
 8005bea:	68fb      	ldr	r3, [r7, #12]
 8005bec:	693a      	ldr	r2, [r7, #16]
 8005bee:	619a      	str	r2, [r3, #24]
 8005bf0:	68fb      	ldr	r3, [r7, #12]
 8005bf2:	697a      	ldr	r2, [r7, #20]
 8005bf4:	621a      	str	r2, [r3, #32]
 8005bf6:	bf00      	nop
 8005bf8:	371c      	adds	r7, #28
 8005bfa:	46bd      	mov	sp, r7
 8005bfc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005c00:	4770      	bx	lr

08005c02 <TIM_TI2_ConfigInputStage>:
 8005c02:	b480      	push	{r7}
 8005c04:	b087      	sub	sp, #28
 8005c06:	af00      	add	r7, sp, #0
 8005c08:	60f8      	str	r0, [r7, #12]
 8005c0a:	60b9      	str	r1, [r7, #8]
 8005c0c:	607a      	str	r2, [r7, #4]
 8005c0e:	68fb      	ldr	r3, [r7, #12]
 8005c10:	6a1b      	ldr	r3, [r3, #32]
 8005c12:	617b      	str	r3, [r7, #20]
 8005c14:	68fb      	ldr	r3, [r7, #12]
 8005c16:	6a1b      	ldr	r3, [r3, #32]
 8005c18:	f023 0210 	bic.w	r2, r3, #16
 8005c1c:	68fb      	ldr	r3, [r7, #12]
 8005c1e:	621a      	str	r2, [r3, #32]
 8005c20:	68fb      	ldr	r3, [r7, #12]
 8005c22:	699b      	ldr	r3, [r3, #24]
 8005c24:	613b      	str	r3, [r7, #16]
 8005c26:	693b      	ldr	r3, [r7, #16]
 8005c28:	f423 4370 	bic.w	r3, r3, #61440	@ 0xf000
 8005c2c:	613b      	str	r3, [r7, #16]
 8005c2e:	687b      	ldr	r3, [r7, #4]
 8005c30:	031b      	lsls	r3, r3, #12
 8005c32:	693a      	ldr	r2, [r7, #16]
 8005c34:	4313      	orrs	r3, r2
 8005c36:	613b      	str	r3, [r7, #16]
 8005c38:	697b      	ldr	r3, [r7, #20]
 8005c3a:	f023 03a0 	bic.w	r3, r3, #160	@ 0xa0
 8005c3e:	617b      	str	r3, [r7, #20]
 8005c40:	68bb      	ldr	r3, [r7, #8]
 8005c42:	011b      	lsls	r3, r3, #4
 8005c44:	697a      	ldr	r2, [r7, #20]
 8005c46:	4313      	orrs	r3, r2
 8005c48:	617b      	str	r3, [r7, #20]
 8005c4a:	68fb      	ldr	r3, [r7, #12]
 8005c4c:	693a      	ldr	r2, [r7, #16]
 8005c4e:	619a      	str	r2, [r3, #24]
 8005c50:	68fb      	ldr	r3, [r7, #12]
 8005c52:	697a      	ldr	r2, [r7, #20]
 8005c54:	621a      	str	r2, [r3, #32]
 8005c56:	bf00      	nop
 8005c58:	371c      	adds	r7, #28
 8005c5a:	46bd      	mov	sp, r7
 8005c5c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005c60:	4770      	bx	lr

08005c62 <TIM_ITRx_SetConfig>:
 8005c62:	b480      	push	{r7}
 8005c64:	b085      	sub	sp, #20
 8005c66:	af00      	add	r7, sp, #0
 8005c68:	6078      	str	r0, [r7, #4]
 8005c6a:	6039      	str	r1, [r7, #0]
 8005c6c:	687b      	ldr	r3, [r7, #4]
 8005c6e:	689b      	ldr	r3, [r3, #8]
 8005c70:	60fb      	str	r3, [r7, #12]
 8005c72:	68fb      	ldr	r3, [r7, #12]
 8005c74:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8005c78:	60fb      	str	r3, [r7, #12]
 8005c7a:	683a      	ldr	r2, [r7, #0]
 8005c7c:	68fb      	ldr	r3, [r7, #12]
 8005c7e:	4313      	orrs	r3, r2
 8005c80:	f043 0307 	orr.w	r3, r3, #7
 8005c84:	60fb      	str	r3, [r7, #12]
 8005c86:	687b      	ldr	r3, [r7, #4]
 8005c88:	68fa      	ldr	r2, [r7, #12]
 8005c8a:	609a      	str	r2, [r3, #8]
 8005c8c:	bf00      	nop
 8005c8e:	3714      	adds	r7, #20
 8005c90:	46bd      	mov	sp, r7
 8005c92:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005c96:	4770      	bx	lr

08005c98 <TIM_ETR_SetConfig>:
 8005c98:	b480      	push	{r7}
 8005c9a:	b087      	sub	sp, #28
 8005c9c:	af00      	add	r7, sp, #0
 8005c9e:	60f8      	str	r0, [r7, #12]
 8005ca0:	60b9      	str	r1, [r7, #8]
 8005ca2:	607a      	str	r2, [r7, #4]
 8005ca4:	603b      	str	r3, [r7, #0]
 8005ca6:	68fb      	ldr	r3, [r7, #12]
 8005ca8:	689b      	ldr	r3, [r3, #8]
 8005caa:	617b      	str	r3, [r7, #20]
 8005cac:	697b      	ldr	r3, [r7, #20]
 8005cae:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 8005cb2:	617b      	str	r3, [r7, #20]
 8005cb4:	683b      	ldr	r3, [r7, #0]
 8005cb6:	021a      	lsls	r2, r3, #8
 8005cb8:	687b      	ldr	r3, [r7, #4]
 8005cba:	431a      	orrs	r2, r3
 8005cbc:	68bb      	ldr	r3, [r7, #8]
 8005cbe:	4313      	orrs	r3, r2
 8005cc0:	697a      	ldr	r2, [r7, #20]
 8005cc2:	4313      	orrs	r3, r2
 8005cc4:	617b      	str	r3, [r7, #20]
 8005cc6:	68fb      	ldr	r3, [r7, #12]
 8005cc8:	697a      	ldr	r2, [r7, #20]
 8005cca:	609a      	str	r2, [r3, #8]
 8005ccc:	bf00      	nop
 8005cce:	371c      	adds	r7, #28
 8005cd0:	46bd      	mov	sp, r7
 8005cd2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005cd6:	4770      	bx	lr

08005cd8 <TIM_CCxChannelCmd>:
 8005cd8:	b480      	push	{r7}
 8005cda:	b087      	sub	sp, #28
 8005cdc:	af00      	add	r7, sp, #0
 8005cde:	60f8      	str	r0, [r7, #12]
 8005ce0:	60b9      	str	r1, [r7, #8]
 8005ce2:	607a      	str	r2, [r7, #4]
 8005ce4:	68bb      	ldr	r3, [r7, #8]
 8005ce6:	f003 031f 	and.w	r3, r3, #31
 8005cea:	2201      	movs	r2, #1
 8005cec:	fa02 f303 	lsl.w	r3, r2, r3
 8005cf0:	617b      	str	r3, [r7, #20]
 8005cf2:	68fb      	ldr	r3, [r7, #12]
 8005cf4:	6a1a      	ldr	r2, [r3, #32]
 8005cf6:	697b      	ldr	r3, [r7, #20]
 8005cf8:	43db      	mvns	r3, r3
 8005cfa:	401a      	ands	r2, r3
 8005cfc:	68fb      	ldr	r3, [r7, #12]
 8005cfe:	621a      	str	r2, [r3, #32]
 8005d00:	68fb      	ldr	r3, [r7, #12]
 8005d02:	6a1a      	ldr	r2, [r3, #32]
 8005d04:	68bb      	ldr	r3, [r7, #8]
 8005d06:	f003 031f 	and.w	r3, r3, #31
 8005d0a:	6879      	ldr	r1, [r7, #4]
 8005d0c:	fa01 f303 	lsl.w	r3, r1, r3
 8005d10:	431a      	orrs	r2, r3
 8005d12:	68fb      	ldr	r3, [r7, #12]
 8005d14:	621a      	str	r2, [r3, #32]
 8005d16:	bf00      	nop
 8005d18:	371c      	adds	r7, #28
 8005d1a:	46bd      	mov	sp, r7
 8005d1c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005d20:	4770      	bx	lr
	...

08005d24 <HAL_TIMEx_MasterConfigSynchronization>:
 8005d24:	b480      	push	{r7}
 8005d26:	b085      	sub	sp, #20
 8005d28:	af00      	add	r7, sp, #0
 8005d2a:	6078      	str	r0, [r7, #4]
 8005d2c:	6039      	str	r1, [r7, #0]
 8005d2e:	687b      	ldr	r3, [r7, #4]
 8005d30:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8005d34:	2b01      	cmp	r3, #1
 8005d36:	d101      	bne.n	8005d3c <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8005d38:	2302      	movs	r3, #2
 8005d3a:	e054      	b.n	8005de6 <HAL_TIMEx_MasterConfigSynchronization+0xc2>
 8005d3c:	687b      	ldr	r3, [r7, #4]
 8005d3e:	2201      	movs	r2, #1
 8005d40:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8005d44:	687b      	ldr	r3, [r7, #4]
 8005d46:	2202      	movs	r2, #2
 8005d48:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005d4c:	687b      	ldr	r3, [r7, #4]
 8005d4e:	681b      	ldr	r3, [r3, #0]
 8005d50:	685b      	ldr	r3, [r3, #4]
 8005d52:	60fb      	str	r3, [r7, #12]
 8005d54:	687b      	ldr	r3, [r7, #4]
 8005d56:	681b      	ldr	r3, [r3, #0]
 8005d58:	689b      	ldr	r3, [r3, #8]
 8005d5a:	60bb      	str	r3, [r7, #8]
 8005d5c:	687b      	ldr	r3, [r7, #4]
 8005d5e:	681b      	ldr	r3, [r3, #0]
 8005d60:	4a24      	ldr	r2, [pc, #144]	@ (8005df4 <HAL_TIMEx_MasterConfigSynchronization+0xd0>)
 8005d62:	4293      	cmp	r3, r2
 8005d64:	d108      	bne.n	8005d78 <HAL_TIMEx_MasterConfigSynchronization+0x54>
 8005d66:	68fb      	ldr	r3, [r7, #12]
 8005d68:	f423 0370 	bic.w	r3, r3, #15728640	@ 0xf00000
 8005d6c:	60fb      	str	r3, [r7, #12]
 8005d6e:	683b      	ldr	r3, [r7, #0]
 8005d70:	685b      	ldr	r3, [r3, #4]
 8005d72:	68fa      	ldr	r2, [r7, #12]
 8005d74:	4313      	orrs	r3, r2
 8005d76:	60fb      	str	r3, [r7, #12]
 8005d78:	68fb      	ldr	r3, [r7, #12]
 8005d7a:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8005d7e:	60fb      	str	r3, [r7, #12]
 8005d80:	683b      	ldr	r3, [r7, #0]
 8005d82:	681b      	ldr	r3, [r3, #0]
 8005d84:	68fa      	ldr	r2, [r7, #12]
 8005d86:	4313      	orrs	r3, r2
 8005d88:	60fb      	str	r3, [r7, #12]
 8005d8a:	687b      	ldr	r3, [r7, #4]
 8005d8c:	681b      	ldr	r3, [r3, #0]
 8005d8e:	68fa      	ldr	r2, [r7, #12]
 8005d90:	605a      	str	r2, [r3, #4]
 8005d92:	687b      	ldr	r3, [r7, #4]
 8005d94:	681b      	ldr	r3, [r3, #0]
 8005d96:	4a17      	ldr	r2, [pc, #92]	@ (8005df4 <HAL_TIMEx_MasterConfigSynchronization+0xd0>)
 8005d98:	4293      	cmp	r3, r2
 8005d9a:	d00e      	beq.n	8005dba <HAL_TIMEx_MasterConfigSynchronization+0x96>
 8005d9c:	687b      	ldr	r3, [r7, #4]
 8005d9e:	681b      	ldr	r3, [r3, #0]
 8005da0:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8005da4:	d009      	beq.n	8005dba <HAL_TIMEx_MasterConfigSynchronization+0x96>
 8005da6:	687b      	ldr	r3, [r7, #4]
 8005da8:	681b      	ldr	r3, [r3, #0]
 8005daa:	4a13      	ldr	r2, [pc, #76]	@ (8005df8 <HAL_TIMEx_MasterConfigSynchronization+0xd4>)
 8005dac:	4293      	cmp	r3, r2
 8005dae:	d004      	beq.n	8005dba <HAL_TIMEx_MasterConfigSynchronization+0x96>
 8005db0:	687b      	ldr	r3, [r7, #4]
 8005db2:	681b      	ldr	r3, [r3, #0]
 8005db4:	4a11      	ldr	r2, [pc, #68]	@ (8005dfc <HAL_TIMEx_MasterConfigSynchronization+0xd8>)
 8005db6:	4293      	cmp	r3, r2
 8005db8:	d10c      	bne.n	8005dd4 <HAL_TIMEx_MasterConfigSynchronization+0xb0>
 8005dba:	68bb      	ldr	r3, [r7, #8]
 8005dbc:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8005dc0:	60bb      	str	r3, [r7, #8]
 8005dc2:	683b      	ldr	r3, [r7, #0]
 8005dc4:	689b      	ldr	r3, [r3, #8]
 8005dc6:	68ba      	ldr	r2, [r7, #8]
 8005dc8:	4313      	orrs	r3, r2
 8005dca:	60bb      	str	r3, [r7, #8]
 8005dcc:	687b      	ldr	r3, [r7, #4]
 8005dce:	681b      	ldr	r3, [r3, #0]
 8005dd0:	68ba      	ldr	r2, [r7, #8]
 8005dd2:	609a      	str	r2, [r3, #8]
 8005dd4:	687b      	ldr	r3, [r7, #4]
 8005dd6:	2201      	movs	r2, #1
 8005dd8:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005ddc:	687b      	ldr	r3, [r7, #4]
 8005dde:	2200      	movs	r2, #0
 8005de0:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8005de4:	2300      	movs	r3, #0
 8005de6:	4618      	mov	r0, r3
 8005de8:	3714      	adds	r7, #20
 8005dea:	46bd      	mov	sp, r7
 8005dec:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005df0:	4770      	bx	lr
 8005df2:	bf00      	nop
 8005df4:	40012c00 	.word	0x40012c00
 8005df8:	40000400 	.word	0x40000400
 8005dfc:	40014000 	.word	0x40014000

08005e00 <HAL_TIMEx_ConfigBreakDeadTime>:
 8005e00:	b480      	push	{r7}
 8005e02:	b085      	sub	sp, #20
 8005e04:	af00      	add	r7, sp, #0
 8005e06:	6078      	str	r0, [r7, #4]
 8005e08:	6039      	str	r1, [r7, #0]
 8005e0a:	2300      	movs	r3, #0
 8005e0c:	60fb      	str	r3, [r7, #12]
 8005e0e:	687b      	ldr	r3, [r7, #4]
 8005e10:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8005e14:	2b01      	cmp	r3, #1
 8005e16:	d101      	bne.n	8005e1c <HAL_TIMEx_ConfigBreakDeadTime+0x1c>
 8005e18:	2302      	movs	r3, #2
 8005e1a:	e060      	b.n	8005ede <HAL_TIMEx_ConfigBreakDeadTime+0xde>
 8005e1c:	687b      	ldr	r3, [r7, #4]
 8005e1e:	2201      	movs	r2, #1
 8005e20:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8005e24:	68fb      	ldr	r3, [r7, #12]
 8005e26:	f023 02ff 	bic.w	r2, r3, #255	@ 0xff
 8005e2a:	683b      	ldr	r3, [r7, #0]
 8005e2c:	68db      	ldr	r3, [r3, #12]
 8005e2e:	4313      	orrs	r3, r2
 8005e30:	60fb      	str	r3, [r7, #12]
 8005e32:	68fb      	ldr	r3, [r7, #12]
 8005e34:	f423 7240 	bic.w	r2, r3, #768	@ 0x300
 8005e38:	683b      	ldr	r3, [r7, #0]
 8005e3a:	689b      	ldr	r3, [r3, #8]
 8005e3c:	4313      	orrs	r3, r2
 8005e3e:	60fb      	str	r3, [r7, #12]
 8005e40:	68fb      	ldr	r3, [r7, #12]
 8005e42:	f423 6280 	bic.w	r2, r3, #1024	@ 0x400
 8005e46:	683b      	ldr	r3, [r7, #0]
 8005e48:	685b      	ldr	r3, [r3, #4]
 8005e4a:	4313      	orrs	r3, r2
 8005e4c:	60fb      	str	r3, [r7, #12]
 8005e4e:	68fb      	ldr	r3, [r7, #12]
 8005e50:	f423 6200 	bic.w	r2, r3, #2048	@ 0x800
 8005e54:	683b      	ldr	r3, [r7, #0]
 8005e56:	681b      	ldr	r3, [r3, #0]
 8005e58:	4313      	orrs	r3, r2
 8005e5a:	60fb      	str	r3, [r7, #12]
 8005e5c:	68fb      	ldr	r3, [r7, #12]
 8005e5e:	f423 5280 	bic.w	r2, r3, #4096	@ 0x1000
 8005e62:	683b      	ldr	r3, [r7, #0]
 8005e64:	691b      	ldr	r3, [r3, #16]
 8005e66:	4313      	orrs	r3, r2
 8005e68:	60fb      	str	r3, [r7, #12]
 8005e6a:	68fb      	ldr	r3, [r7, #12]
 8005e6c:	f423 5200 	bic.w	r2, r3, #8192	@ 0x2000
 8005e70:	683b      	ldr	r3, [r7, #0]
 8005e72:	695b      	ldr	r3, [r3, #20]
 8005e74:	4313      	orrs	r3, r2
 8005e76:	60fb      	str	r3, [r7, #12]
 8005e78:	68fb      	ldr	r3, [r7, #12]
 8005e7a:	f423 4280 	bic.w	r2, r3, #16384	@ 0x4000
 8005e7e:	683b      	ldr	r3, [r7, #0]
 8005e80:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8005e82:	4313      	orrs	r3, r2
 8005e84:	60fb      	str	r3, [r7, #12]
 8005e86:	68fb      	ldr	r3, [r7, #12]
 8005e88:	f423 2270 	bic.w	r2, r3, #983040	@ 0xf0000
 8005e8c:	683b      	ldr	r3, [r7, #0]
 8005e8e:	699b      	ldr	r3, [r3, #24]
 8005e90:	041b      	lsls	r3, r3, #16
 8005e92:	4313      	orrs	r3, r2
 8005e94:	60fb      	str	r3, [r7, #12]
 8005e96:	687b      	ldr	r3, [r7, #4]
 8005e98:	681b      	ldr	r3, [r3, #0]
 8005e9a:	4a14      	ldr	r2, [pc, #80]	@ (8005eec <HAL_TIMEx_ConfigBreakDeadTime+0xec>)
 8005e9c:	4293      	cmp	r3, r2
 8005e9e:	d115      	bne.n	8005ecc <HAL_TIMEx_ConfigBreakDeadTime+0xcc>
 8005ea0:	68fb      	ldr	r3, [r7, #12]
 8005ea2:	f423 0270 	bic.w	r2, r3, #15728640	@ 0xf00000
 8005ea6:	683b      	ldr	r3, [r7, #0]
 8005ea8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005eaa:	051b      	lsls	r3, r3, #20
 8005eac:	4313      	orrs	r3, r2
 8005eae:	60fb      	str	r3, [r7, #12]
 8005eb0:	68fb      	ldr	r3, [r7, #12]
 8005eb2:	f023 7280 	bic.w	r2, r3, #16777216	@ 0x1000000
 8005eb6:	683b      	ldr	r3, [r7, #0]
 8005eb8:	69db      	ldr	r3, [r3, #28]
 8005eba:	4313      	orrs	r3, r2
 8005ebc:	60fb      	str	r3, [r7, #12]
 8005ebe:	68fb      	ldr	r3, [r7, #12]
 8005ec0:	f023 7200 	bic.w	r2, r3, #33554432	@ 0x2000000
 8005ec4:	683b      	ldr	r3, [r7, #0]
 8005ec6:	6a1b      	ldr	r3, [r3, #32]
 8005ec8:	4313      	orrs	r3, r2
 8005eca:	60fb      	str	r3, [r7, #12]
 8005ecc:	687b      	ldr	r3, [r7, #4]
 8005ece:	681b      	ldr	r3, [r3, #0]
 8005ed0:	68fa      	ldr	r2, [r7, #12]
 8005ed2:	645a      	str	r2, [r3, #68]	@ 0x44
 8005ed4:	687b      	ldr	r3, [r7, #4]
 8005ed6:	2200      	movs	r2, #0
 8005ed8:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8005edc:	2300      	movs	r3, #0
 8005ede:	4618      	mov	r0, r3
 8005ee0:	3714      	adds	r7, #20
 8005ee2:	46bd      	mov	sp, r7
 8005ee4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005ee8:	4770      	bx	lr
 8005eea:	bf00      	nop
 8005eec:	40012c00 	.word	0x40012c00

08005ef0 <HAL_TIMEx_CommutCallback>:
 8005ef0:	b480      	push	{r7}
 8005ef2:	b083      	sub	sp, #12
 8005ef4:	af00      	add	r7, sp, #0
 8005ef6:	6078      	str	r0, [r7, #4]
 8005ef8:	bf00      	nop
 8005efa:	370c      	adds	r7, #12
 8005efc:	46bd      	mov	sp, r7
 8005efe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005f02:	4770      	bx	lr

08005f04 <HAL_TIMEx_BreakCallback>:
 8005f04:	b480      	push	{r7}
 8005f06:	b083      	sub	sp, #12
 8005f08:	af00      	add	r7, sp, #0
 8005f0a:	6078      	str	r0, [r7, #4]
 8005f0c:	bf00      	nop
 8005f0e:	370c      	adds	r7, #12
 8005f10:	46bd      	mov	sp, r7
 8005f12:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005f16:	4770      	bx	lr

08005f18 <HAL_TIMEx_Break2Callback>:
 8005f18:	b480      	push	{r7}
 8005f1a:	b083      	sub	sp, #12
 8005f1c:	af00      	add	r7, sp, #0
 8005f1e:	6078      	str	r0, [r7, #4]
 8005f20:	bf00      	nop
 8005f22:	370c      	adds	r7, #12
 8005f24:	46bd      	mov	sp, r7
 8005f26:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005f2a:	4770      	bx	lr

08005f2c <HAL_UART_Init>:
 8005f2c:	b580      	push	{r7, lr}
 8005f2e:	b082      	sub	sp, #8
 8005f30:	af00      	add	r7, sp, #0
 8005f32:	6078      	str	r0, [r7, #4]
 8005f34:	687b      	ldr	r3, [r7, #4]
 8005f36:	2b00      	cmp	r3, #0
 8005f38:	d101      	bne.n	8005f3e <HAL_UART_Init+0x12>
 8005f3a:	2301      	movs	r3, #1
 8005f3c:	e040      	b.n	8005fc0 <HAL_UART_Init+0x94>
 8005f3e:	687b      	ldr	r3, [r7, #4]
 8005f40:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8005f42:	2b00      	cmp	r3, #0
 8005f44:	d106      	bne.n	8005f54 <HAL_UART_Init+0x28>
 8005f46:	687b      	ldr	r3, [r7, #4]
 8005f48:	2200      	movs	r2, #0
 8005f4a:	f883 2078 	strb.w	r2, [r3, #120]	@ 0x78
 8005f4e:	6878      	ldr	r0, [r7, #4]
 8005f50:	f7fb ff06 	bl	8001d60 <HAL_UART_MspInit>
 8005f54:	687b      	ldr	r3, [r7, #4]
 8005f56:	2224      	movs	r2, #36	@ 0x24
 8005f58:	67da      	str	r2, [r3, #124]	@ 0x7c
 8005f5a:	687b      	ldr	r3, [r7, #4]
 8005f5c:	681b      	ldr	r3, [r3, #0]
 8005f5e:	681a      	ldr	r2, [r3, #0]
 8005f60:	687b      	ldr	r3, [r7, #4]
 8005f62:	681b      	ldr	r3, [r3, #0]
 8005f64:	f022 0201 	bic.w	r2, r2, #1
 8005f68:	601a      	str	r2, [r3, #0]
 8005f6a:	687b      	ldr	r3, [r7, #4]
 8005f6c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005f6e:	2b00      	cmp	r3, #0
 8005f70:	d002      	beq.n	8005f78 <HAL_UART_Init+0x4c>
 8005f72:	6878      	ldr	r0, [r7, #4]
 8005f74:	f000 fd32 	bl	80069dc <UART_AdvFeatureConfig>
 8005f78:	6878      	ldr	r0, [r7, #4]
 8005f7a:	f000 fbf9 	bl	8006770 <UART_SetConfig>
 8005f7e:	4603      	mov	r3, r0
 8005f80:	2b01      	cmp	r3, #1
 8005f82:	d101      	bne.n	8005f88 <HAL_UART_Init+0x5c>
 8005f84:	2301      	movs	r3, #1
 8005f86:	e01b      	b.n	8005fc0 <HAL_UART_Init+0x94>
 8005f88:	687b      	ldr	r3, [r7, #4]
 8005f8a:	681b      	ldr	r3, [r3, #0]
 8005f8c:	685a      	ldr	r2, [r3, #4]
 8005f8e:	687b      	ldr	r3, [r7, #4]
 8005f90:	681b      	ldr	r3, [r3, #0]
 8005f92:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
 8005f96:	605a      	str	r2, [r3, #4]
 8005f98:	687b      	ldr	r3, [r7, #4]
 8005f9a:	681b      	ldr	r3, [r3, #0]
 8005f9c:	689a      	ldr	r2, [r3, #8]
 8005f9e:	687b      	ldr	r3, [r7, #4]
 8005fa0:	681b      	ldr	r3, [r3, #0]
 8005fa2:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
 8005fa6:	609a      	str	r2, [r3, #8]
 8005fa8:	687b      	ldr	r3, [r7, #4]
 8005faa:	681b      	ldr	r3, [r3, #0]
 8005fac:	681a      	ldr	r2, [r3, #0]
 8005fae:	687b      	ldr	r3, [r7, #4]
 8005fb0:	681b      	ldr	r3, [r3, #0]
 8005fb2:	f042 0201 	orr.w	r2, r2, #1
 8005fb6:	601a      	str	r2, [r3, #0]
 8005fb8:	6878      	ldr	r0, [r7, #4]
 8005fba:	f000 fdb1 	bl	8006b20 <UART_CheckIdleState>
 8005fbe:	4603      	mov	r3, r0
 8005fc0:	4618      	mov	r0, r3
 8005fc2:	3708      	adds	r7, #8
 8005fc4:	46bd      	mov	sp, r7
 8005fc6:	bd80      	pop	{r7, pc}

08005fc8 <HAL_UART_Transmit>:
 8005fc8:	b580      	push	{r7, lr}
 8005fca:	b08a      	sub	sp, #40	@ 0x28
 8005fcc:	af02      	add	r7, sp, #8
 8005fce:	60f8      	str	r0, [r7, #12]
 8005fd0:	60b9      	str	r1, [r7, #8]
 8005fd2:	603b      	str	r3, [r7, #0]
 8005fd4:	4613      	mov	r3, r2
 8005fd6:	80fb      	strh	r3, [r7, #6]
 8005fd8:	68fb      	ldr	r3, [r7, #12]
 8005fda:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8005fdc:	2b20      	cmp	r3, #32
 8005fde:	d177      	bne.n	80060d0 <HAL_UART_Transmit+0x108>
 8005fe0:	68bb      	ldr	r3, [r7, #8]
 8005fe2:	2b00      	cmp	r3, #0
 8005fe4:	d002      	beq.n	8005fec <HAL_UART_Transmit+0x24>
 8005fe6:	88fb      	ldrh	r3, [r7, #6]
 8005fe8:	2b00      	cmp	r3, #0
 8005fea:	d101      	bne.n	8005ff0 <HAL_UART_Transmit+0x28>
 8005fec:	2301      	movs	r3, #1
 8005fee:	e070      	b.n	80060d2 <HAL_UART_Transmit+0x10a>
 8005ff0:	68fb      	ldr	r3, [r7, #12]
 8005ff2:	2200      	movs	r2, #0
 8005ff4:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 8005ff8:	68fb      	ldr	r3, [r7, #12]
 8005ffa:	2221      	movs	r2, #33	@ 0x21
 8005ffc:	67da      	str	r2, [r3, #124]	@ 0x7c
 8005ffe:	f7fc f8a3 	bl	8002148 <HAL_GetTick>
 8006002:	6178      	str	r0, [r7, #20]
 8006004:	68fb      	ldr	r3, [r7, #12]
 8006006:	88fa      	ldrh	r2, [r7, #6]
 8006008:	f8a3 2050 	strh.w	r2, [r3, #80]	@ 0x50
 800600c:	68fb      	ldr	r3, [r7, #12]
 800600e:	88fa      	ldrh	r2, [r7, #6]
 8006010:	f8a3 2052 	strh.w	r2, [r3, #82]	@ 0x52
 8006014:	68fb      	ldr	r3, [r7, #12]
 8006016:	689b      	ldr	r3, [r3, #8]
 8006018:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 800601c:	d108      	bne.n	8006030 <HAL_UART_Transmit+0x68>
 800601e:	68fb      	ldr	r3, [r7, #12]
 8006020:	691b      	ldr	r3, [r3, #16]
 8006022:	2b00      	cmp	r3, #0
 8006024:	d104      	bne.n	8006030 <HAL_UART_Transmit+0x68>
 8006026:	2300      	movs	r3, #0
 8006028:	61fb      	str	r3, [r7, #28]
 800602a:	68bb      	ldr	r3, [r7, #8]
 800602c:	61bb      	str	r3, [r7, #24]
 800602e:	e003      	b.n	8006038 <HAL_UART_Transmit+0x70>
 8006030:	68bb      	ldr	r3, [r7, #8]
 8006032:	61fb      	str	r3, [r7, #28]
 8006034:	2300      	movs	r3, #0
 8006036:	61bb      	str	r3, [r7, #24]
 8006038:	e02f      	b.n	800609a <HAL_UART_Transmit+0xd2>
 800603a:	683b      	ldr	r3, [r7, #0]
 800603c:	9300      	str	r3, [sp, #0]
 800603e:	697b      	ldr	r3, [r7, #20]
 8006040:	2200      	movs	r2, #0
 8006042:	2180      	movs	r1, #128	@ 0x80
 8006044:	68f8      	ldr	r0, [r7, #12]
 8006046:	f000 fe13 	bl	8006c70 <UART_WaitOnFlagUntilTimeout>
 800604a:	4603      	mov	r3, r0
 800604c:	2b00      	cmp	r3, #0
 800604e:	d004      	beq.n	800605a <HAL_UART_Transmit+0x92>
 8006050:	68fb      	ldr	r3, [r7, #12]
 8006052:	2220      	movs	r2, #32
 8006054:	67da      	str	r2, [r3, #124]	@ 0x7c
 8006056:	2303      	movs	r3, #3
 8006058:	e03b      	b.n	80060d2 <HAL_UART_Transmit+0x10a>
 800605a:	69fb      	ldr	r3, [r7, #28]
 800605c:	2b00      	cmp	r3, #0
 800605e:	d10b      	bne.n	8006078 <HAL_UART_Transmit+0xb0>
 8006060:	69bb      	ldr	r3, [r7, #24]
 8006062:	881a      	ldrh	r2, [r3, #0]
 8006064:	68fb      	ldr	r3, [r7, #12]
 8006066:	681b      	ldr	r3, [r3, #0]
 8006068:	f3c2 0208 	ubfx	r2, r2, #0, #9
 800606c:	b292      	uxth	r2, r2
 800606e:	851a      	strh	r2, [r3, #40]	@ 0x28
 8006070:	69bb      	ldr	r3, [r7, #24]
 8006072:	3302      	adds	r3, #2
 8006074:	61bb      	str	r3, [r7, #24]
 8006076:	e007      	b.n	8006088 <HAL_UART_Transmit+0xc0>
 8006078:	69fb      	ldr	r3, [r7, #28]
 800607a:	781a      	ldrb	r2, [r3, #0]
 800607c:	68fb      	ldr	r3, [r7, #12]
 800607e:	681b      	ldr	r3, [r3, #0]
 8006080:	851a      	strh	r2, [r3, #40]	@ 0x28
 8006082:	69fb      	ldr	r3, [r7, #28]
 8006084:	3301      	adds	r3, #1
 8006086:	61fb      	str	r3, [r7, #28]
 8006088:	68fb      	ldr	r3, [r7, #12]
 800608a:	f8b3 3052 	ldrh.w	r3, [r3, #82]	@ 0x52
 800608e:	b29b      	uxth	r3, r3
 8006090:	3b01      	subs	r3, #1
 8006092:	b29a      	uxth	r2, r3
 8006094:	68fb      	ldr	r3, [r7, #12]
 8006096:	f8a3 2052 	strh.w	r2, [r3, #82]	@ 0x52
 800609a:	68fb      	ldr	r3, [r7, #12]
 800609c:	f8b3 3052 	ldrh.w	r3, [r3, #82]	@ 0x52
 80060a0:	b29b      	uxth	r3, r3
 80060a2:	2b00      	cmp	r3, #0
 80060a4:	d1c9      	bne.n	800603a <HAL_UART_Transmit+0x72>
 80060a6:	683b      	ldr	r3, [r7, #0]
 80060a8:	9300      	str	r3, [sp, #0]
 80060aa:	697b      	ldr	r3, [r7, #20]
 80060ac:	2200      	movs	r2, #0
 80060ae:	2140      	movs	r1, #64	@ 0x40
 80060b0:	68f8      	ldr	r0, [r7, #12]
 80060b2:	f000 fddd 	bl	8006c70 <UART_WaitOnFlagUntilTimeout>
 80060b6:	4603      	mov	r3, r0
 80060b8:	2b00      	cmp	r3, #0
 80060ba:	d004      	beq.n	80060c6 <HAL_UART_Transmit+0xfe>
 80060bc:	68fb      	ldr	r3, [r7, #12]
 80060be:	2220      	movs	r2, #32
 80060c0:	67da      	str	r2, [r3, #124]	@ 0x7c
 80060c2:	2303      	movs	r3, #3
 80060c4:	e005      	b.n	80060d2 <HAL_UART_Transmit+0x10a>
 80060c6:	68fb      	ldr	r3, [r7, #12]
 80060c8:	2220      	movs	r2, #32
 80060ca:	67da      	str	r2, [r3, #124]	@ 0x7c
 80060cc:	2300      	movs	r3, #0
 80060ce:	e000      	b.n	80060d2 <HAL_UART_Transmit+0x10a>
 80060d0:	2302      	movs	r3, #2
 80060d2:	4618      	mov	r0, r3
 80060d4:	3720      	adds	r7, #32
 80060d6:	46bd      	mov	sp, r7
 80060d8:	bd80      	pop	{r7, pc}

080060da <HAL_UART_Receive_IT>:
 80060da:	b580      	push	{r7, lr}
 80060dc:	b08a      	sub	sp, #40	@ 0x28
 80060de:	af00      	add	r7, sp, #0
 80060e0:	60f8      	str	r0, [r7, #12]
 80060e2:	60b9      	str	r1, [r7, #8]
 80060e4:	4613      	mov	r3, r2
 80060e6:	80fb      	strh	r3, [r7, #6]
 80060e8:	68fb      	ldr	r3, [r7, #12]
 80060ea:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 80060ee:	2b20      	cmp	r3, #32
 80060f0:	d132      	bne.n	8006158 <HAL_UART_Receive_IT+0x7e>
 80060f2:	68bb      	ldr	r3, [r7, #8]
 80060f4:	2b00      	cmp	r3, #0
 80060f6:	d002      	beq.n	80060fe <HAL_UART_Receive_IT+0x24>
 80060f8:	88fb      	ldrh	r3, [r7, #6]
 80060fa:	2b00      	cmp	r3, #0
 80060fc:	d101      	bne.n	8006102 <HAL_UART_Receive_IT+0x28>
 80060fe:	2301      	movs	r3, #1
 8006100:	e02b      	b.n	800615a <HAL_UART_Receive_IT+0x80>
 8006102:	68fb      	ldr	r3, [r7, #12]
 8006104:	2200      	movs	r2, #0
 8006106:	661a      	str	r2, [r3, #96]	@ 0x60
 8006108:	68fb      	ldr	r3, [r7, #12]
 800610a:	681b      	ldr	r3, [r3, #0]
 800610c:	685b      	ldr	r3, [r3, #4]
 800610e:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8006112:	2b00      	cmp	r3, #0
 8006114:	d018      	beq.n	8006148 <HAL_UART_Receive_IT+0x6e>
 8006116:	68fb      	ldr	r3, [r7, #12]
 8006118:	681b      	ldr	r3, [r3, #0]
 800611a:	617b      	str	r3, [r7, #20]
 800611c:	697b      	ldr	r3, [r7, #20]
 800611e:	e853 3f00 	ldrex	r3, [r3]
 8006122:	613b      	str	r3, [r7, #16]
 8006124:	693b      	ldr	r3, [r7, #16]
 8006126:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
 800612a:	627b      	str	r3, [r7, #36]	@ 0x24
 800612c:	68fb      	ldr	r3, [r7, #12]
 800612e:	681b      	ldr	r3, [r3, #0]
 8006130:	461a      	mov	r2, r3
 8006132:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006134:	623b      	str	r3, [r7, #32]
 8006136:	61fa      	str	r2, [r7, #28]
 8006138:	69f9      	ldr	r1, [r7, #28]
 800613a:	6a3a      	ldr	r2, [r7, #32]
 800613c:	e841 2300 	strex	r3, r2, [r1]
 8006140:	61bb      	str	r3, [r7, #24]
 8006142:	69bb      	ldr	r3, [r7, #24]
 8006144:	2b00      	cmp	r3, #0
 8006146:	d1e6      	bne.n	8006116 <HAL_UART_Receive_IT+0x3c>
 8006148:	88fb      	ldrh	r3, [r7, #6]
 800614a:	461a      	mov	r2, r3
 800614c:	68b9      	ldr	r1, [r7, #8]
 800614e:	68f8      	ldr	r0, [r7, #12]
 8006150:	f000 fdfc 	bl	8006d4c <UART_Start_Receive_IT>
 8006154:	4603      	mov	r3, r0
 8006156:	e000      	b.n	800615a <HAL_UART_Receive_IT+0x80>
 8006158:	2302      	movs	r3, #2
 800615a:	4618      	mov	r0, r3
 800615c:	3728      	adds	r7, #40	@ 0x28
 800615e:	46bd      	mov	sp, r7
 8006160:	bd80      	pop	{r7, pc}
	...

08006164 <HAL_UART_IRQHandler>:
 8006164:	b580      	push	{r7, lr}
 8006166:	b0ba      	sub	sp, #232	@ 0xe8
 8006168:	af00      	add	r7, sp, #0
 800616a:	6078      	str	r0, [r7, #4]
 800616c:	687b      	ldr	r3, [r7, #4]
 800616e:	681b      	ldr	r3, [r3, #0]
 8006170:	69db      	ldr	r3, [r3, #28]
 8006172:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 8006176:	687b      	ldr	r3, [r7, #4]
 8006178:	681b      	ldr	r3, [r3, #0]
 800617a:	681b      	ldr	r3, [r3, #0]
 800617c:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 8006180:	687b      	ldr	r3, [r7, #4]
 8006182:	681b      	ldr	r3, [r3, #0]
 8006184:	689b      	ldr	r3, [r3, #8]
 8006186:	f8c7 30dc 	str.w	r3, [r7, #220]	@ 0xdc
 800618a:	f8d7 20e4 	ldr.w	r2, [r7, #228]	@ 0xe4
 800618e:	f640 030f 	movw	r3, #2063	@ 0x80f
 8006192:	4013      	ands	r3, r2
 8006194:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 8006198:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 800619c:	2b00      	cmp	r3, #0
 800619e:	d115      	bne.n	80061cc <HAL_UART_IRQHandler+0x68>
 80061a0:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80061a4:	f003 0320 	and.w	r3, r3, #32
 80061a8:	2b00      	cmp	r3, #0
 80061aa:	d00f      	beq.n	80061cc <HAL_UART_IRQHandler+0x68>
 80061ac:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 80061b0:	f003 0320 	and.w	r3, r3, #32
 80061b4:	2b00      	cmp	r3, #0
 80061b6:	d009      	beq.n	80061cc <HAL_UART_IRQHandler+0x68>
 80061b8:	687b      	ldr	r3, [r7, #4]
 80061ba:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 80061bc:	2b00      	cmp	r3, #0
 80061be:	f000 82ab 	beq.w	8006718 <HAL_UART_IRQHandler+0x5b4>
 80061c2:	687b      	ldr	r3, [r7, #4]
 80061c4:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 80061c6:	6878      	ldr	r0, [r7, #4]
 80061c8:	4798      	blx	r3
 80061ca:	e2a5      	b.n	8006718 <HAL_UART_IRQHandler+0x5b4>
 80061cc:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 80061d0:	2b00      	cmp	r3, #0
 80061d2:	f000 8117 	beq.w	8006404 <HAL_UART_IRQHandler+0x2a0>
 80061d6:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 80061da:	f003 0301 	and.w	r3, r3, #1
 80061de:	2b00      	cmp	r3, #0
 80061e0:	d106      	bne.n	80061f0 <HAL_UART_IRQHandler+0x8c>
 80061e2:	f8d7 20e0 	ldr.w	r2, [r7, #224]	@ 0xe0
 80061e6:	4b85      	ldr	r3, [pc, #532]	@ (80063fc <HAL_UART_IRQHandler+0x298>)
 80061e8:	4013      	ands	r3, r2
 80061ea:	2b00      	cmp	r3, #0
 80061ec:	f000 810a 	beq.w	8006404 <HAL_UART_IRQHandler+0x2a0>
 80061f0:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80061f4:	f003 0301 	and.w	r3, r3, #1
 80061f8:	2b00      	cmp	r3, #0
 80061fa:	d011      	beq.n	8006220 <HAL_UART_IRQHandler+0xbc>
 80061fc:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8006200:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8006204:	2b00      	cmp	r3, #0
 8006206:	d00b      	beq.n	8006220 <HAL_UART_IRQHandler+0xbc>
 8006208:	687b      	ldr	r3, [r7, #4]
 800620a:	681b      	ldr	r3, [r3, #0]
 800620c:	2201      	movs	r2, #1
 800620e:	621a      	str	r2, [r3, #32]
 8006210:	687b      	ldr	r3, [r7, #4]
 8006212:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8006216:	f043 0201 	orr.w	r2, r3, #1
 800621a:	687b      	ldr	r3, [r7, #4]
 800621c:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 8006220:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8006224:	f003 0302 	and.w	r3, r3, #2
 8006228:	2b00      	cmp	r3, #0
 800622a:	d011      	beq.n	8006250 <HAL_UART_IRQHandler+0xec>
 800622c:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8006230:	f003 0301 	and.w	r3, r3, #1
 8006234:	2b00      	cmp	r3, #0
 8006236:	d00b      	beq.n	8006250 <HAL_UART_IRQHandler+0xec>
 8006238:	687b      	ldr	r3, [r7, #4]
 800623a:	681b      	ldr	r3, [r3, #0]
 800623c:	2202      	movs	r2, #2
 800623e:	621a      	str	r2, [r3, #32]
 8006240:	687b      	ldr	r3, [r7, #4]
 8006242:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8006246:	f043 0204 	orr.w	r2, r3, #4
 800624a:	687b      	ldr	r3, [r7, #4]
 800624c:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 8006250:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8006254:	f003 0304 	and.w	r3, r3, #4
 8006258:	2b00      	cmp	r3, #0
 800625a:	d011      	beq.n	8006280 <HAL_UART_IRQHandler+0x11c>
 800625c:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8006260:	f003 0301 	and.w	r3, r3, #1
 8006264:	2b00      	cmp	r3, #0
 8006266:	d00b      	beq.n	8006280 <HAL_UART_IRQHandler+0x11c>
 8006268:	687b      	ldr	r3, [r7, #4]
 800626a:	681b      	ldr	r3, [r3, #0]
 800626c:	2204      	movs	r2, #4
 800626e:	621a      	str	r2, [r3, #32]
 8006270:	687b      	ldr	r3, [r7, #4]
 8006272:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8006276:	f043 0202 	orr.w	r2, r3, #2
 800627a:	687b      	ldr	r3, [r7, #4]
 800627c:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 8006280:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8006284:	f003 0308 	and.w	r3, r3, #8
 8006288:	2b00      	cmp	r3, #0
 800628a:	d017      	beq.n	80062bc <HAL_UART_IRQHandler+0x158>
 800628c:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8006290:	f003 0320 	and.w	r3, r3, #32
 8006294:	2b00      	cmp	r3, #0
 8006296:	d105      	bne.n	80062a4 <HAL_UART_IRQHandler+0x140>
 8006298:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 800629c:	f003 0301 	and.w	r3, r3, #1
 80062a0:	2b00      	cmp	r3, #0
 80062a2:	d00b      	beq.n	80062bc <HAL_UART_IRQHandler+0x158>
 80062a4:	687b      	ldr	r3, [r7, #4]
 80062a6:	681b      	ldr	r3, [r3, #0]
 80062a8:	2208      	movs	r2, #8
 80062aa:	621a      	str	r2, [r3, #32]
 80062ac:	687b      	ldr	r3, [r7, #4]
 80062ae:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 80062b2:	f043 0208 	orr.w	r2, r3, #8
 80062b6:	687b      	ldr	r3, [r7, #4]
 80062b8:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 80062bc:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80062c0:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 80062c4:	2b00      	cmp	r3, #0
 80062c6:	d012      	beq.n	80062ee <HAL_UART_IRQHandler+0x18a>
 80062c8:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 80062cc:	f003 6380 	and.w	r3, r3, #67108864	@ 0x4000000
 80062d0:	2b00      	cmp	r3, #0
 80062d2:	d00c      	beq.n	80062ee <HAL_UART_IRQHandler+0x18a>
 80062d4:	687b      	ldr	r3, [r7, #4]
 80062d6:	681b      	ldr	r3, [r3, #0]
 80062d8:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 80062dc:	621a      	str	r2, [r3, #32]
 80062de:	687b      	ldr	r3, [r7, #4]
 80062e0:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 80062e4:	f043 0220 	orr.w	r2, r3, #32
 80062e8:	687b      	ldr	r3, [r7, #4]
 80062ea:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 80062ee:	687b      	ldr	r3, [r7, #4]
 80062f0:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 80062f4:	2b00      	cmp	r3, #0
 80062f6:	f000 8211 	beq.w	800671c <HAL_UART_IRQHandler+0x5b8>
 80062fa:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80062fe:	f003 0320 	and.w	r3, r3, #32
 8006302:	2b00      	cmp	r3, #0
 8006304:	d00d      	beq.n	8006322 <HAL_UART_IRQHandler+0x1be>
 8006306:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 800630a:	f003 0320 	and.w	r3, r3, #32
 800630e:	2b00      	cmp	r3, #0
 8006310:	d007      	beq.n	8006322 <HAL_UART_IRQHandler+0x1be>
 8006312:	687b      	ldr	r3, [r7, #4]
 8006314:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 8006316:	2b00      	cmp	r3, #0
 8006318:	d003      	beq.n	8006322 <HAL_UART_IRQHandler+0x1be>
 800631a:	687b      	ldr	r3, [r7, #4]
 800631c:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 800631e:	6878      	ldr	r0, [r7, #4]
 8006320:	4798      	blx	r3
 8006322:	687b      	ldr	r3, [r7, #4]
 8006324:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8006328:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
 800632c:	687b      	ldr	r3, [r7, #4]
 800632e:	681b      	ldr	r3, [r3, #0]
 8006330:	689b      	ldr	r3, [r3, #8]
 8006332:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8006336:	2b40      	cmp	r3, #64	@ 0x40
 8006338:	d005      	beq.n	8006346 <HAL_UART_IRQHandler+0x1e2>
 800633a:	f8d7 30d4 	ldr.w	r3, [r7, #212]	@ 0xd4
 800633e:	f003 0328 	and.w	r3, r3, #40	@ 0x28
 8006342:	2b00      	cmp	r3, #0
 8006344:	d04f      	beq.n	80063e6 <HAL_UART_IRQHandler+0x282>
 8006346:	6878      	ldr	r0, [r7, #4]
 8006348:	f000 fdc6 	bl	8006ed8 <UART_EndRxTransfer>
 800634c:	687b      	ldr	r3, [r7, #4]
 800634e:	681b      	ldr	r3, [r3, #0]
 8006350:	689b      	ldr	r3, [r3, #8]
 8006352:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8006356:	2b40      	cmp	r3, #64	@ 0x40
 8006358:	d141      	bne.n	80063de <HAL_UART_IRQHandler+0x27a>
 800635a:	687b      	ldr	r3, [r7, #4]
 800635c:	681b      	ldr	r3, [r3, #0]
 800635e:	3308      	adds	r3, #8
 8006360:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 8006364:	f8d7 309c 	ldr.w	r3, [r7, #156]	@ 0x9c
 8006368:	e853 3f00 	ldrex	r3, [r3]
 800636c:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 8006370:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 8006374:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8006378:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 800637c:	687b      	ldr	r3, [r7, #4]
 800637e:	681b      	ldr	r3, [r3, #0]
 8006380:	3308      	adds	r3, #8
 8006382:	f8d7 20d0 	ldr.w	r2, [r7, #208]	@ 0xd0
 8006386:	f8c7 20a8 	str.w	r2, [r7, #168]	@ 0xa8
 800638a:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
 800638e:	f8d7 10a4 	ldr.w	r1, [r7, #164]	@ 0xa4
 8006392:	f8d7 20a8 	ldr.w	r2, [r7, #168]	@ 0xa8
 8006396:	e841 2300 	strex	r3, r2, [r1]
 800639a:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 800639e:	f8d7 30a0 	ldr.w	r3, [r7, #160]	@ 0xa0
 80063a2:	2b00      	cmp	r3, #0
 80063a4:	d1d9      	bne.n	800635a <HAL_UART_IRQHandler+0x1f6>
 80063a6:	687b      	ldr	r3, [r7, #4]
 80063a8:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 80063aa:	2b00      	cmp	r3, #0
 80063ac:	d013      	beq.n	80063d6 <HAL_UART_IRQHandler+0x272>
 80063ae:	687b      	ldr	r3, [r7, #4]
 80063b0:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 80063b2:	4a13      	ldr	r2, [pc, #76]	@ (8006400 <HAL_UART_IRQHandler+0x29c>)
 80063b4:	635a      	str	r2, [r3, #52]	@ 0x34
 80063b6:	687b      	ldr	r3, [r7, #4]
 80063b8:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 80063ba:	4618      	mov	r0, r3
 80063bc:	f7fc f843 	bl	8002446 <HAL_DMA_Abort_IT>
 80063c0:	4603      	mov	r3, r0
 80063c2:	2b00      	cmp	r3, #0
 80063c4:	d017      	beq.n	80063f6 <HAL_UART_IRQHandler+0x292>
 80063c6:	687b      	ldr	r3, [r7, #4]
 80063c8:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 80063ca:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80063cc:	687a      	ldr	r2, [r7, #4]
 80063ce:	6f52      	ldr	r2, [r2, #116]	@ 0x74
 80063d0:	4610      	mov	r0, r2
 80063d2:	4798      	blx	r3
 80063d4:	e00f      	b.n	80063f6 <HAL_UART_IRQHandler+0x292>
 80063d6:	6878      	ldr	r0, [r7, #4]
 80063d8:	f000 f9b4 	bl	8006744 <HAL_UART_ErrorCallback>
 80063dc:	e00b      	b.n	80063f6 <HAL_UART_IRQHandler+0x292>
 80063de:	6878      	ldr	r0, [r7, #4]
 80063e0:	f000 f9b0 	bl	8006744 <HAL_UART_ErrorCallback>
 80063e4:	e007      	b.n	80063f6 <HAL_UART_IRQHandler+0x292>
 80063e6:	6878      	ldr	r0, [r7, #4]
 80063e8:	f000 f9ac 	bl	8006744 <HAL_UART_ErrorCallback>
 80063ec:	687b      	ldr	r3, [r7, #4]
 80063ee:	2200      	movs	r2, #0
 80063f0:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 80063f4:	e192      	b.n	800671c <HAL_UART_IRQHandler+0x5b8>
 80063f6:	bf00      	nop
 80063f8:	e190      	b.n	800671c <HAL_UART_IRQHandler+0x5b8>
 80063fa:	bf00      	nop
 80063fc:	04000120 	.word	0x04000120
 8006400:	08006fa1 	.word	0x08006fa1
 8006404:	687b      	ldr	r3, [r7, #4]
 8006406:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8006408:	2b01      	cmp	r3, #1
 800640a:	f040 814b 	bne.w	80066a4 <HAL_UART_IRQHandler+0x540>
 800640e:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8006412:	f003 0310 	and.w	r3, r3, #16
 8006416:	2b00      	cmp	r3, #0
 8006418:	f000 8144 	beq.w	80066a4 <HAL_UART_IRQHandler+0x540>
 800641c:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8006420:	f003 0310 	and.w	r3, r3, #16
 8006424:	2b00      	cmp	r3, #0
 8006426:	f000 813d 	beq.w	80066a4 <HAL_UART_IRQHandler+0x540>
 800642a:	687b      	ldr	r3, [r7, #4]
 800642c:	681b      	ldr	r3, [r3, #0]
 800642e:	2210      	movs	r2, #16
 8006430:	621a      	str	r2, [r3, #32]
 8006432:	687b      	ldr	r3, [r7, #4]
 8006434:	681b      	ldr	r3, [r3, #0]
 8006436:	689b      	ldr	r3, [r3, #8]
 8006438:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800643c:	2b40      	cmp	r3, #64	@ 0x40
 800643e:	f040 80b5 	bne.w	80065ac <HAL_UART_IRQHandler+0x448>
 8006442:	687b      	ldr	r3, [r7, #4]
 8006444:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8006446:	681b      	ldr	r3, [r3, #0]
 8006448:	685b      	ldr	r3, [r3, #4]
 800644a:	f8a7 30be 	strh.w	r3, [r7, #190]	@ 0xbe
 800644e:	f8b7 30be 	ldrh.w	r3, [r7, #190]	@ 0xbe
 8006452:	2b00      	cmp	r3, #0
 8006454:	f000 8164 	beq.w	8006720 <HAL_UART_IRQHandler+0x5bc>
 8006458:	687b      	ldr	r3, [r7, #4]
 800645a:	f8b3 3058 	ldrh.w	r3, [r3, #88]	@ 0x58
 800645e:	f8b7 20be 	ldrh.w	r2, [r7, #190]	@ 0xbe
 8006462:	429a      	cmp	r2, r3
 8006464:	f080 815c 	bcs.w	8006720 <HAL_UART_IRQHandler+0x5bc>
 8006468:	687b      	ldr	r3, [r7, #4]
 800646a:	f8b7 20be 	ldrh.w	r2, [r7, #190]	@ 0xbe
 800646e:	f8a3 205a 	strh.w	r2, [r3, #90]	@ 0x5a
 8006472:	687b      	ldr	r3, [r7, #4]
 8006474:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8006476:	699b      	ldr	r3, [r3, #24]
 8006478:	2b20      	cmp	r3, #32
 800647a:	f000 8086 	beq.w	800658a <HAL_UART_IRQHandler+0x426>
 800647e:	687b      	ldr	r3, [r7, #4]
 8006480:	681b      	ldr	r3, [r3, #0]
 8006482:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 8006486:	f8d7 3088 	ldr.w	r3, [r7, #136]	@ 0x88
 800648a:	e853 3f00 	ldrex	r3, [r3]
 800648e:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 8006492:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 8006496:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 800649a:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 800649e:	687b      	ldr	r3, [r7, #4]
 80064a0:	681b      	ldr	r3, [r3, #0]
 80064a2:	461a      	mov	r2, r3
 80064a4:	f8d7 30b8 	ldr.w	r3, [r7, #184]	@ 0xb8
 80064a8:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 80064ac:	f8c7 2090 	str.w	r2, [r7, #144]	@ 0x90
 80064b0:	f8d7 1090 	ldr.w	r1, [r7, #144]	@ 0x90
 80064b4:	f8d7 2094 	ldr.w	r2, [r7, #148]	@ 0x94
 80064b8:	e841 2300 	strex	r3, r2, [r1]
 80064bc:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 80064c0:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 80064c4:	2b00      	cmp	r3, #0
 80064c6:	d1da      	bne.n	800647e <HAL_UART_IRQHandler+0x31a>
 80064c8:	687b      	ldr	r3, [r7, #4]
 80064ca:	681b      	ldr	r3, [r3, #0]
 80064cc:	3308      	adds	r3, #8
 80064ce:	677b      	str	r3, [r7, #116]	@ 0x74
 80064d0:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 80064d2:	e853 3f00 	ldrex	r3, [r3]
 80064d6:	673b      	str	r3, [r7, #112]	@ 0x70
 80064d8:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 80064da:	f023 0301 	bic.w	r3, r3, #1
 80064de:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 80064e2:	687b      	ldr	r3, [r7, #4]
 80064e4:	681b      	ldr	r3, [r3, #0]
 80064e6:	3308      	adds	r3, #8
 80064e8:	f8d7 20b4 	ldr.w	r2, [r7, #180]	@ 0xb4
 80064ec:	f8c7 2080 	str.w	r2, [r7, #128]	@ 0x80
 80064f0:	67fb      	str	r3, [r7, #124]	@ 0x7c
 80064f2:	6ff9      	ldr	r1, [r7, #124]	@ 0x7c
 80064f4:	f8d7 2080 	ldr.w	r2, [r7, #128]	@ 0x80
 80064f8:	e841 2300 	strex	r3, r2, [r1]
 80064fc:	67bb      	str	r3, [r7, #120]	@ 0x78
 80064fe:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 8006500:	2b00      	cmp	r3, #0
 8006502:	d1e1      	bne.n	80064c8 <HAL_UART_IRQHandler+0x364>
 8006504:	687b      	ldr	r3, [r7, #4]
 8006506:	681b      	ldr	r3, [r3, #0]
 8006508:	3308      	adds	r3, #8
 800650a:	663b      	str	r3, [r7, #96]	@ 0x60
 800650c:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 800650e:	e853 3f00 	ldrex	r3, [r3]
 8006512:	65fb      	str	r3, [r7, #92]	@ 0x5c
 8006514:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 8006516:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 800651a:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 800651e:	687b      	ldr	r3, [r7, #4]
 8006520:	681b      	ldr	r3, [r3, #0]
 8006522:	3308      	adds	r3, #8
 8006524:	f8d7 20b0 	ldr.w	r2, [r7, #176]	@ 0xb0
 8006528:	66fa      	str	r2, [r7, #108]	@ 0x6c
 800652a:	66bb      	str	r3, [r7, #104]	@ 0x68
 800652c:	6eb9      	ldr	r1, [r7, #104]	@ 0x68
 800652e:	6efa      	ldr	r2, [r7, #108]	@ 0x6c
 8006530:	e841 2300 	strex	r3, r2, [r1]
 8006534:	667b      	str	r3, [r7, #100]	@ 0x64
 8006536:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8006538:	2b00      	cmp	r3, #0
 800653a:	d1e3      	bne.n	8006504 <HAL_UART_IRQHandler+0x3a0>
 800653c:	687b      	ldr	r3, [r7, #4]
 800653e:	2220      	movs	r2, #32
 8006540:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
 8006544:	687b      	ldr	r3, [r7, #4]
 8006546:	2200      	movs	r2, #0
 8006548:	661a      	str	r2, [r3, #96]	@ 0x60
 800654a:	687b      	ldr	r3, [r7, #4]
 800654c:	681b      	ldr	r3, [r3, #0]
 800654e:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8006550:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8006552:	e853 3f00 	ldrex	r3, [r3]
 8006556:	64bb      	str	r3, [r7, #72]	@ 0x48
 8006558:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 800655a:	f023 0310 	bic.w	r3, r3, #16
 800655e:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 8006562:	687b      	ldr	r3, [r7, #4]
 8006564:	681b      	ldr	r3, [r3, #0]
 8006566:	461a      	mov	r2, r3
 8006568:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 800656c:	65bb      	str	r3, [r7, #88]	@ 0x58
 800656e:	657a      	str	r2, [r7, #84]	@ 0x54
 8006570:	6d79      	ldr	r1, [r7, #84]	@ 0x54
 8006572:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 8006574:	e841 2300 	strex	r3, r2, [r1]
 8006578:	653b      	str	r3, [r7, #80]	@ 0x50
 800657a:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 800657c:	2b00      	cmp	r3, #0
 800657e:	d1e4      	bne.n	800654a <HAL_UART_IRQHandler+0x3e6>
 8006580:	687b      	ldr	r3, [r7, #4]
 8006582:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8006584:	4618      	mov	r0, r3
 8006586:	f7fb ff20 	bl	80023ca <HAL_DMA_Abort>
 800658a:	687b      	ldr	r3, [r7, #4]
 800658c:	2202      	movs	r2, #2
 800658e:	665a      	str	r2, [r3, #100]	@ 0x64
 8006590:	687b      	ldr	r3, [r7, #4]
 8006592:	f8b3 2058 	ldrh.w	r2, [r3, #88]	@ 0x58
 8006596:	687b      	ldr	r3, [r7, #4]
 8006598:	f8b3 305a 	ldrh.w	r3, [r3, #90]	@ 0x5a
 800659c:	b29b      	uxth	r3, r3
 800659e:	1ad3      	subs	r3, r2, r3
 80065a0:	b29b      	uxth	r3, r3
 80065a2:	4619      	mov	r1, r3
 80065a4:	6878      	ldr	r0, [r7, #4]
 80065a6:	f000 f8d7 	bl	8006758 <HAL_UARTEx_RxEventCallback>
 80065aa:	e0b9      	b.n	8006720 <HAL_UART_IRQHandler+0x5bc>
 80065ac:	687b      	ldr	r3, [r7, #4]
 80065ae:	f8b3 2058 	ldrh.w	r2, [r3, #88]	@ 0x58
 80065b2:	687b      	ldr	r3, [r7, #4]
 80065b4:	f8b3 305a 	ldrh.w	r3, [r3, #90]	@ 0x5a
 80065b8:	b29b      	uxth	r3, r3
 80065ba:	1ad3      	subs	r3, r2, r3
 80065bc:	f8a7 30ce 	strh.w	r3, [r7, #206]	@ 0xce
 80065c0:	687b      	ldr	r3, [r7, #4]
 80065c2:	f8b3 305a 	ldrh.w	r3, [r3, #90]	@ 0x5a
 80065c6:	b29b      	uxth	r3, r3
 80065c8:	2b00      	cmp	r3, #0
 80065ca:	f000 80ab 	beq.w	8006724 <HAL_UART_IRQHandler+0x5c0>
 80065ce:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	@ 0xce
 80065d2:	2b00      	cmp	r3, #0
 80065d4:	f000 80a6 	beq.w	8006724 <HAL_UART_IRQHandler+0x5c0>
 80065d8:	687b      	ldr	r3, [r7, #4]
 80065da:	681b      	ldr	r3, [r3, #0]
 80065dc:	63bb      	str	r3, [r7, #56]	@ 0x38
 80065de:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80065e0:	e853 3f00 	ldrex	r3, [r3]
 80065e4:	637b      	str	r3, [r7, #52]	@ 0x34
 80065e6:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80065e8:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 80065ec:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 80065f0:	687b      	ldr	r3, [r7, #4]
 80065f2:	681b      	ldr	r3, [r3, #0]
 80065f4:	461a      	mov	r2, r3
 80065f6:	f8d7 30c8 	ldr.w	r3, [r7, #200]	@ 0xc8
 80065fa:	647b      	str	r3, [r7, #68]	@ 0x44
 80065fc:	643a      	str	r2, [r7, #64]	@ 0x40
 80065fe:	6c39      	ldr	r1, [r7, #64]	@ 0x40
 8006600:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 8006602:	e841 2300 	strex	r3, r2, [r1]
 8006606:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8006608:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800660a:	2b00      	cmp	r3, #0
 800660c:	d1e4      	bne.n	80065d8 <HAL_UART_IRQHandler+0x474>
 800660e:	687b      	ldr	r3, [r7, #4]
 8006610:	681b      	ldr	r3, [r3, #0]
 8006612:	3308      	adds	r3, #8
 8006614:	627b      	str	r3, [r7, #36]	@ 0x24
 8006616:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006618:	e853 3f00 	ldrex	r3, [r3]
 800661c:	623b      	str	r3, [r7, #32]
 800661e:	6a3b      	ldr	r3, [r7, #32]
 8006620:	f023 0301 	bic.w	r3, r3, #1
 8006624:	f8c7 30c4 	str.w	r3, [r7, #196]	@ 0xc4
 8006628:	687b      	ldr	r3, [r7, #4]
 800662a:	681b      	ldr	r3, [r3, #0]
 800662c:	3308      	adds	r3, #8
 800662e:	f8d7 20c4 	ldr.w	r2, [r7, #196]	@ 0xc4
 8006632:	633a      	str	r2, [r7, #48]	@ 0x30
 8006634:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8006636:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8006638:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 800663a:	e841 2300 	strex	r3, r2, [r1]
 800663e:	62bb      	str	r3, [r7, #40]	@ 0x28
 8006640:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8006642:	2b00      	cmp	r3, #0
 8006644:	d1e3      	bne.n	800660e <HAL_UART_IRQHandler+0x4aa>
 8006646:	687b      	ldr	r3, [r7, #4]
 8006648:	2220      	movs	r2, #32
 800664a:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
 800664e:	687b      	ldr	r3, [r7, #4]
 8006650:	2200      	movs	r2, #0
 8006652:	661a      	str	r2, [r3, #96]	@ 0x60
 8006654:	687b      	ldr	r3, [r7, #4]
 8006656:	2200      	movs	r2, #0
 8006658:	669a      	str	r2, [r3, #104]	@ 0x68
 800665a:	687b      	ldr	r3, [r7, #4]
 800665c:	681b      	ldr	r3, [r3, #0]
 800665e:	613b      	str	r3, [r7, #16]
 8006660:	693b      	ldr	r3, [r7, #16]
 8006662:	e853 3f00 	ldrex	r3, [r3]
 8006666:	60fb      	str	r3, [r7, #12]
 8006668:	68fb      	ldr	r3, [r7, #12]
 800666a:	f023 0310 	bic.w	r3, r3, #16
 800666e:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 8006672:	687b      	ldr	r3, [r7, #4]
 8006674:	681b      	ldr	r3, [r3, #0]
 8006676:	461a      	mov	r2, r3
 8006678:	f8d7 30c0 	ldr.w	r3, [r7, #192]	@ 0xc0
 800667c:	61fb      	str	r3, [r7, #28]
 800667e:	61ba      	str	r2, [r7, #24]
 8006680:	69b9      	ldr	r1, [r7, #24]
 8006682:	69fa      	ldr	r2, [r7, #28]
 8006684:	e841 2300 	strex	r3, r2, [r1]
 8006688:	617b      	str	r3, [r7, #20]
 800668a:	697b      	ldr	r3, [r7, #20]
 800668c:	2b00      	cmp	r3, #0
 800668e:	d1e4      	bne.n	800665a <HAL_UART_IRQHandler+0x4f6>
 8006690:	687b      	ldr	r3, [r7, #4]
 8006692:	2202      	movs	r2, #2
 8006694:	665a      	str	r2, [r3, #100]	@ 0x64
 8006696:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	@ 0xce
 800669a:	4619      	mov	r1, r3
 800669c:	6878      	ldr	r0, [r7, #4]
 800669e:	f000 f85b 	bl	8006758 <HAL_UARTEx_RxEventCallback>
 80066a2:	e03f      	b.n	8006724 <HAL_UART_IRQHandler+0x5c0>
 80066a4:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80066a8:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 80066ac:	2b00      	cmp	r3, #0
 80066ae:	d00e      	beq.n	80066ce <HAL_UART_IRQHandler+0x56a>
 80066b0:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 80066b4:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 80066b8:	2b00      	cmp	r3, #0
 80066ba:	d008      	beq.n	80066ce <HAL_UART_IRQHandler+0x56a>
 80066bc:	687b      	ldr	r3, [r7, #4]
 80066be:	681b      	ldr	r3, [r3, #0]
 80066c0:	f44f 1280 	mov.w	r2, #1048576	@ 0x100000
 80066c4:	621a      	str	r2, [r3, #32]
 80066c6:	6878      	ldr	r0, [r7, #4]
 80066c8:	f000 fe52 	bl	8007370 <HAL_UARTEx_WakeupCallback>
 80066cc:	e02d      	b.n	800672a <HAL_UART_IRQHandler+0x5c6>
 80066ce:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80066d2:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80066d6:	2b00      	cmp	r3, #0
 80066d8:	d00e      	beq.n	80066f8 <HAL_UART_IRQHandler+0x594>
 80066da:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 80066de:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80066e2:	2b00      	cmp	r3, #0
 80066e4:	d008      	beq.n	80066f8 <HAL_UART_IRQHandler+0x594>
 80066e6:	687b      	ldr	r3, [r7, #4]
 80066e8:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 80066ea:	2b00      	cmp	r3, #0
 80066ec:	d01c      	beq.n	8006728 <HAL_UART_IRQHandler+0x5c4>
 80066ee:	687b      	ldr	r3, [r7, #4]
 80066f0:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 80066f2:	6878      	ldr	r0, [r7, #4]
 80066f4:	4798      	blx	r3
 80066f6:	e017      	b.n	8006728 <HAL_UART_IRQHandler+0x5c4>
 80066f8:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80066fc:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8006700:	2b00      	cmp	r3, #0
 8006702:	d012      	beq.n	800672a <HAL_UART_IRQHandler+0x5c6>
 8006704:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8006708:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800670c:	2b00      	cmp	r3, #0
 800670e:	d00c      	beq.n	800672a <HAL_UART_IRQHandler+0x5c6>
 8006710:	6878      	ldr	r0, [r7, #4]
 8006712:	f000 fc5b 	bl	8006fcc <UART_EndTransmit_IT>
 8006716:	e008      	b.n	800672a <HAL_UART_IRQHandler+0x5c6>
 8006718:	bf00      	nop
 800671a:	e006      	b.n	800672a <HAL_UART_IRQHandler+0x5c6>
 800671c:	bf00      	nop
 800671e:	e004      	b.n	800672a <HAL_UART_IRQHandler+0x5c6>
 8006720:	bf00      	nop
 8006722:	e002      	b.n	800672a <HAL_UART_IRQHandler+0x5c6>
 8006724:	bf00      	nop
 8006726:	e000      	b.n	800672a <HAL_UART_IRQHandler+0x5c6>
 8006728:	bf00      	nop
 800672a:	37e8      	adds	r7, #232	@ 0xe8
 800672c:	46bd      	mov	sp, r7
 800672e:	bd80      	pop	{r7, pc}

08006730 <HAL_UART_TxCpltCallback>:
 8006730:	b480      	push	{r7}
 8006732:	b083      	sub	sp, #12
 8006734:	af00      	add	r7, sp, #0
 8006736:	6078      	str	r0, [r7, #4]
 8006738:	bf00      	nop
 800673a:	370c      	adds	r7, #12
 800673c:	46bd      	mov	sp, r7
 800673e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006742:	4770      	bx	lr

08006744 <HAL_UART_ErrorCallback>:
 8006744:	b480      	push	{r7}
 8006746:	b083      	sub	sp, #12
 8006748:	af00      	add	r7, sp, #0
 800674a:	6078      	str	r0, [r7, #4]
 800674c:	bf00      	nop
 800674e:	370c      	adds	r7, #12
 8006750:	46bd      	mov	sp, r7
 8006752:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006756:	4770      	bx	lr

08006758 <HAL_UARTEx_RxEventCallback>:
 8006758:	b480      	push	{r7}
 800675a:	b083      	sub	sp, #12
 800675c:	af00      	add	r7, sp, #0
 800675e:	6078      	str	r0, [r7, #4]
 8006760:	460b      	mov	r3, r1
 8006762:	807b      	strh	r3, [r7, #2]
 8006764:	bf00      	nop
 8006766:	370c      	adds	r7, #12
 8006768:	46bd      	mov	sp, r7
 800676a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800676e:	4770      	bx	lr

08006770 <UART_SetConfig>:
 8006770:	b580      	push	{r7, lr}
 8006772:	b088      	sub	sp, #32
 8006774:	af00      	add	r7, sp, #0
 8006776:	6078      	str	r0, [r7, #4]
 8006778:	2300      	movs	r3, #0
 800677a:	77bb      	strb	r3, [r7, #30]
 800677c:	687b      	ldr	r3, [r7, #4]
 800677e:	689a      	ldr	r2, [r3, #8]
 8006780:	687b      	ldr	r3, [r7, #4]
 8006782:	691b      	ldr	r3, [r3, #16]
 8006784:	431a      	orrs	r2, r3
 8006786:	687b      	ldr	r3, [r7, #4]
 8006788:	695b      	ldr	r3, [r3, #20]
 800678a:	431a      	orrs	r2, r3
 800678c:	687b      	ldr	r3, [r7, #4]
 800678e:	69db      	ldr	r3, [r3, #28]
 8006790:	4313      	orrs	r3, r2
 8006792:	617b      	str	r3, [r7, #20]
 8006794:	687b      	ldr	r3, [r7, #4]
 8006796:	681b      	ldr	r3, [r3, #0]
 8006798:	681a      	ldr	r2, [r3, #0]
 800679a:	4b8a      	ldr	r3, [pc, #552]	@ (80069c4 <UART_SetConfig+0x254>)
 800679c:	4013      	ands	r3, r2
 800679e:	687a      	ldr	r2, [r7, #4]
 80067a0:	6812      	ldr	r2, [r2, #0]
 80067a2:	6979      	ldr	r1, [r7, #20]
 80067a4:	430b      	orrs	r3, r1
 80067a6:	6013      	str	r3, [r2, #0]
 80067a8:	687b      	ldr	r3, [r7, #4]
 80067aa:	681b      	ldr	r3, [r3, #0]
 80067ac:	685b      	ldr	r3, [r3, #4]
 80067ae:	f423 5140 	bic.w	r1, r3, #12288	@ 0x3000
 80067b2:	687b      	ldr	r3, [r7, #4]
 80067b4:	68da      	ldr	r2, [r3, #12]
 80067b6:	687b      	ldr	r3, [r7, #4]
 80067b8:	681b      	ldr	r3, [r3, #0]
 80067ba:	430a      	orrs	r2, r1
 80067bc:	605a      	str	r2, [r3, #4]
 80067be:	687b      	ldr	r3, [r7, #4]
 80067c0:	699b      	ldr	r3, [r3, #24]
 80067c2:	617b      	str	r3, [r7, #20]
 80067c4:	687b      	ldr	r3, [r7, #4]
 80067c6:	6a1b      	ldr	r3, [r3, #32]
 80067c8:	697a      	ldr	r2, [r7, #20]
 80067ca:	4313      	orrs	r3, r2
 80067cc:	617b      	str	r3, [r7, #20]
 80067ce:	687b      	ldr	r3, [r7, #4]
 80067d0:	681b      	ldr	r3, [r3, #0]
 80067d2:	689b      	ldr	r3, [r3, #8]
 80067d4:	f423 6130 	bic.w	r1, r3, #2816	@ 0xb00
 80067d8:	687b      	ldr	r3, [r7, #4]
 80067da:	681b      	ldr	r3, [r3, #0]
 80067dc:	697a      	ldr	r2, [r7, #20]
 80067de:	430a      	orrs	r2, r1
 80067e0:	609a      	str	r2, [r3, #8]
 80067e2:	687b      	ldr	r3, [r7, #4]
 80067e4:	681b      	ldr	r3, [r3, #0]
 80067e6:	4a78      	ldr	r2, [pc, #480]	@ (80069c8 <UART_SetConfig+0x258>)
 80067e8:	4293      	cmp	r3, r2
 80067ea:	d120      	bne.n	800682e <UART_SetConfig+0xbe>
 80067ec:	4b77      	ldr	r3, [pc, #476]	@ (80069cc <UART_SetConfig+0x25c>)
 80067ee:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80067f0:	f003 0303 	and.w	r3, r3, #3
 80067f4:	2b03      	cmp	r3, #3
 80067f6:	d817      	bhi.n	8006828 <UART_SetConfig+0xb8>
 80067f8:	a201      	add	r2, pc, #4	@ (adr r2, 8006800 <UART_SetConfig+0x90>)
 80067fa:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80067fe:	bf00      	nop
 8006800:	08006811 	.word	0x08006811
 8006804:	0800681d 	.word	0x0800681d
 8006808:	08006823 	.word	0x08006823
 800680c:	08006817 	.word	0x08006817
 8006810:	2300      	movs	r3, #0
 8006812:	77fb      	strb	r3, [r7, #31]
 8006814:	e01d      	b.n	8006852 <UART_SetConfig+0xe2>
 8006816:	2302      	movs	r3, #2
 8006818:	77fb      	strb	r3, [r7, #31]
 800681a:	e01a      	b.n	8006852 <UART_SetConfig+0xe2>
 800681c:	2304      	movs	r3, #4
 800681e:	77fb      	strb	r3, [r7, #31]
 8006820:	e017      	b.n	8006852 <UART_SetConfig+0xe2>
 8006822:	2308      	movs	r3, #8
 8006824:	77fb      	strb	r3, [r7, #31]
 8006826:	e014      	b.n	8006852 <UART_SetConfig+0xe2>
 8006828:	2310      	movs	r3, #16
 800682a:	77fb      	strb	r3, [r7, #31]
 800682c:	e011      	b.n	8006852 <UART_SetConfig+0xe2>
 800682e:	687b      	ldr	r3, [r7, #4]
 8006830:	681b      	ldr	r3, [r3, #0]
 8006832:	4a67      	ldr	r2, [pc, #412]	@ (80069d0 <UART_SetConfig+0x260>)
 8006834:	4293      	cmp	r3, r2
 8006836:	d102      	bne.n	800683e <UART_SetConfig+0xce>
 8006838:	2300      	movs	r3, #0
 800683a:	77fb      	strb	r3, [r7, #31]
 800683c:	e009      	b.n	8006852 <UART_SetConfig+0xe2>
 800683e:	687b      	ldr	r3, [r7, #4]
 8006840:	681b      	ldr	r3, [r3, #0]
 8006842:	4a64      	ldr	r2, [pc, #400]	@ (80069d4 <UART_SetConfig+0x264>)
 8006844:	4293      	cmp	r3, r2
 8006846:	d102      	bne.n	800684e <UART_SetConfig+0xde>
 8006848:	2300      	movs	r3, #0
 800684a:	77fb      	strb	r3, [r7, #31]
 800684c:	e001      	b.n	8006852 <UART_SetConfig+0xe2>
 800684e:	2310      	movs	r3, #16
 8006850:	77fb      	strb	r3, [r7, #31]
 8006852:	687b      	ldr	r3, [r7, #4]
 8006854:	69db      	ldr	r3, [r3, #28]
 8006856:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 800685a:	d15a      	bne.n	8006912 <UART_SetConfig+0x1a2>
 800685c:	7ffb      	ldrb	r3, [r7, #31]
 800685e:	2b08      	cmp	r3, #8
 8006860:	d827      	bhi.n	80068b2 <UART_SetConfig+0x142>
 8006862:	a201      	add	r2, pc, #4	@ (adr r2, 8006868 <UART_SetConfig+0xf8>)
 8006864:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8006868:	0800688d 	.word	0x0800688d
 800686c:	08006895 	.word	0x08006895
 8006870:	0800689d 	.word	0x0800689d
 8006874:	080068b3 	.word	0x080068b3
 8006878:	080068a3 	.word	0x080068a3
 800687c:	080068b3 	.word	0x080068b3
 8006880:	080068b3 	.word	0x080068b3
 8006884:	080068b3 	.word	0x080068b3
 8006888:	080068ab 	.word	0x080068ab
 800688c:	f7fd ffe2 	bl	8004854 <HAL_RCC_GetPCLK1Freq>
 8006890:	61b8      	str	r0, [r7, #24]
 8006892:	e013      	b.n	80068bc <UART_SetConfig+0x14c>
 8006894:	f7fe f800 	bl	8004898 <HAL_RCC_GetPCLK2Freq>
 8006898:	61b8      	str	r0, [r7, #24]
 800689a:	e00f      	b.n	80068bc <UART_SetConfig+0x14c>
 800689c:	4b4e      	ldr	r3, [pc, #312]	@ (80069d8 <UART_SetConfig+0x268>)
 800689e:	61bb      	str	r3, [r7, #24]
 80068a0:	e00c      	b.n	80068bc <UART_SetConfig+0x14c>
 80068a2:	f7fd ff77 	bl	8004794 <HAL_RCC_GetSysClockFreq>
 80068a6:	61b8      	str	r0, [r7, #24]
 80068a8:	e008      	b.n	80068bc <UART_SetConfig+0x14c>
 80068aa:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 80068ae:	61bb      	str	r3, [r7, #24]
 80068b0:	e004      	b.n	80068bc <UART_SetConfig+0x14c>
 80068b2:	2300      	movs	r3, #0
 80068b4:	61bb      	str	r3, [r7, #24]
 80068b6:	2301      	movs	r3, #1
 80068b8:	77bb      	strb	r3, [r7, #30]
 80068ba:	bf00      	nop
 80068bc:	69bb      	ldr	r3, [r7, #24]
 80068be:	2b00      	cmp	r3, #0
 80068c0:	d074      	beq.n	80069ac <UART_SetConfig+0x23c>
 80068c2:	69bb      	ldr	r3, [r7, #24]
 80068c4:	005a      	lsls	r2, r3, #1
 80068c6:	687b      	ldr	r3, [r7, #4]
 80068c8:	685b      	ldr	r3, [r3, #4]
 80068ca:	085b      	lsrs	r3, r3, #1
 80068cc:	441a      	add	r2, r3
 80068ce:	687b      	ldr	r3, [r7, #4]
 80068d0:	685b      	ldr	r3, [r3, #4]
 80068d2:	fbb2 f3f3 	udiv	r3, r2, r3
 80068d6:	613b      	str	r3, [r7, #16]
 80068d8:	693b      	ldr	r3, [r7, #16]
 80068da:	2b0f      	cmp	r3, #15
 80068dc:	d916      	bls.n	800690c <UART_SetConfig+0x19c>
 80068de:	693b      	ldr	r3, [r7, #16]
 80068e0:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 80068e4:	d212      	bcs.n	800690c <UART_SetConfig+0x19c>
 80068e6:	693b      	ldr	r3, [r7, #16]
 80068e8:	b29b      	uxth	r3, r3
 80068ea:	f023 030f 	bic.w	r3, r3, #15
 80068ee:	81fb      	strh	r3, [r7, #14]
 80068f0:	693b      	ldr	r3, [r7, #16]
 80068f2:	085b      	lsrs	r3, r3, #1
 80068f4:	b29b      	uxth	r3, r3
 80068f6:	f003 0307 	and.w	r3, r3, #7
 80068fa:	b29a      	uxth	r2, r3
 80068fc:	89fb      	ldrh	r3, [r7, #14]
 80068fe:	4313      	orrs	r3, r2
 8006900:	81fb      	strh	r3, [r7, #14]
 8006902:	687b      	ldr	r3, [r7, #4]
 8006904:	681b      	ldr	r3, [r3, #0]
 8006906:	89fa      	ldrh	r2, [r7, #14]
 8006908:	60da      	str	r2, [r3, #12]
 800690a:	e04f      	b.n	80069ac <UART_SetConfig+0x23c>
 800690c:	2301      	movs	r3, #1
 800690e:	77bb      	strb	r3, [r7, #30]
 8006910:	e04c      	b.n	80069ac <UART_SetConfig+0x23c>
 8006912:	7ffb      	ldrb	r3, [r7, #31]
 8006914:	2b08      	cmp	r3, #8
 8006916:	d828      	bhi.n	800696a <UART_SetConfig+0x1fa>
 8006918:	a201      	add	r2, pc, #4	@ (adr r2, 8006920 <UART_SetConfig+0x1b0>)
 800691a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800691e:	bf00      	nop
 8006920:	08006945 	.word	0x08006945
 8006924:	0800694d 	.word	0x0800694d
 8006928:	08006955 	.word	0x08006955
 800692c:	0800696b 	.word	0x0800696b
 8006930:	0800695b 	.word	0x0800695b
 8006934:	0800696b 	.word	0x0800696b
 8006938:	0800696b 	.word	0x0800696b
 800693c:	0800696b 	.word	0x0800696b
 8006940:	08006963 	.word	0x08006963
 8006944:	f7fd ff86 	bl	8004854 <HAL_RCC_GetPCLK1Freq>
 8006948:	61b8      	str	r0, [r7, #24]
 800694a:	e013      	b.n	8006974 <UART_SetConfig+0x204>
 800694c:	f7fd ffa4 	bl	8004898 <HAL_RCC_GetPCLK2Freq>
 8006950:	61b8      	str	r0, [r7, #24]
 8006952:	e00f      	b.n	8006974 <UART_SetConfig+0x204>
 8006954:	4b20      	ldr	r3, [pc, #128]	@ (80069d8 <UART_SetConfig+0x268>)
 8006956:	61bb      	str	r3, [r7, #24]
 8006958:	e00c      	b.n	8006974 <UART_SetConfig+0x204>
 800695a:	f7fd ff1b 	bl	8004794 <HAL_RCC_GetSysClockFreq>
 800695e:	61b8      	str	r0, [r7, #24]
 8006960:	e008      	b.n	8006974 <UART_SetConfig+0x204>
 8006962:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8006966:	61bb      	str	r3, [r7, #24]
 8006968:	e004      	b.n	8006974 <UART_SetConfig+0x204>
 800696a:	2300      	movs	r3, #0
 800696c:	61bb      	str	r3, [r7, #24]
 800696e:	2301      	movs	r3, #1
 8006970:	77bb      	strb	r3, [r7, #30]
 8006972:	bf00      	nop
 8006974:	69bb      	ldr	r3, [r7, #24]
 8006976:	2b00      	cmp	r3, #0
 8006978:	d018      	beq.n	80069ac <UART_SetConfig+0x23c>
 800697a:	687b      	ldr	r3, [r7, #4]
 800697c:	685b      	ldr	r3, [r3, #4]
 800697e:	085a      	lsrs	r2, r3, #1
 8006980:	69bb      	ldr	r3, [r7, #24]
 8006982:	441a      	add	r2, r3
 8006984:	687b      	ldr	r3, [r7, #4]
 8006986:	685b      	ldr	r3, [r3, #4]
 8006988:	fbb2 f3f3 	udiv	r3, r2, r3
 800698c:	613b      	str	r3, [r7, #16]
 800698e:	693b      	ldr	r3, [r7, #16]
 8006990:	2b0f      	cmp	r3, #15
 8006992:	d909      	bls.n	80069a8 <UART_SetConfig+0x238>
 8006994:	693b      	ldr	r3, [r7, #16]
 8006996:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 800699a:	d205      	bcs.n	80069a8 <UART_SetConfig+0x238>
 800699c:	693b      	ldr	r3, [r7, #16]
 800699e:	b29a      	uxth	r2, r3
 80069a0:	687b      	ldr	r3, [r7, #4]
 80069a2:	681b      	ldr	r3, [r3, #0]
 80069a4:	60da      	str	r2, [r3, #12]
 80069a6:	e001      	b.n	80069ac <UART_SetConfig+0x23c>
 80069a8:	2301      	movs	r3, #1
 80069aa:	77bb      	strb	r3, [r7, #30]
 80069ac:	687b      	ldr	r3, [r7, #4]
 80069ae:	2200      	movs	r2, #0
 80069b0:	669a      	str	r2, [r3, #104]	@ 0x68
 80069b2:	687b      	ldr	r3, [r7, #4]
 80069b4:	2200      	movs	r2, #0
 80069b6:	66da      	str	r2, [r3, #108]	@ 0x6c
 80069b8:	7fbb      	ldrb	r3, [r7, #30]
 80069ba:	4618      	mov	r0, r3
 80069bc:	3720      	adds	r7, #32
 80069be:	46bd      	mov	sp, r7
 80069c0:	bd80      	pop	{r7, pc}
 80069c2:	bf00      	nop
 80069c4:	efff69f3 	.word	0xefff69f3
 80069c8:	40013800 	.word	0x40013800
 80069cc:	40021000 	.word	0x40021000
 80069d0:	40004400 	.word	0x40004400
 80069d4:	40004800 	.word	0x40004800
 80069d8:	007a1200 	.word	0x007a1200

080069dc <UART_AdvFeatureConfig>:
 80069dc:	b480      	push	{r7}
 80069de:	b083      	sub	sp, #12
 80069e0:	af00      	add	r7, sp, #0
 80069e2:	6078      	str	r0, [r7, #4]
 80069e4:	687b      	ldr	r3, [r7, #4]
 80069e6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80069e8:	f003 0308 	and.w	r3, r3, #8
 80069ec:	2b00      	cmp	r3, #0
 80069ee:	d00a      	beq.n	8006a06 <UART_AdvFeatureConfig+0x2a>
 80069f0:	687b      	ldr	r3, [r7, #4]
 80069f2:	681b      	ldr	r3, [r3, #0]
 80069f4:	685b      	ldr	r3, [r3, #4]
 80069f6:	f423 4100 	bic.w	r1, r3, #32768	@ 0x8000
 80069fa:	687b      	ldr	r3, [r7, #4]
 80069fc:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 80069fe:	687b      	ldr	r3, [r7, #4]
 8006a00:	681b      	ldr	r3, [r3, #0]
 8006a02:	430a      	orrs	r2, r1
 8006a04:	605a      	str	r2, [r3, #4]
 8006a06:	687b      	ldr	r3, [r7, #4]
 8006a08:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8006a0a:	f003 0301 	and.w	r3, r3, #1
 8006a0e:	2b00      	cmp	r3, #0
 8006a10:	d00a      	beq.n	8006a28 <UART_AdvFeatureConfig+0x4c>
 8006a12:	687b      	ldr	r3, [r7, #4]
 8006a14:	681b      	ldr	r3, [r3, #0]
 8006a16:	685b      	ldr	r3, [r3, #4]
 8006a18:	f423 3100 	bic.w	r1, r3, #131072	@ 0x20000
 8006a1c:	687b      	ldr	r3, [r7, #4]
 8006a1e:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8006a20:	687b      	ldr	r3, [r7, #4]
 8006a22:	681b      	ldr	r3, [r3, #0]
 8006a24:	430a      	orrs	r2, r1
 8006a26:	605a      	str	r2, [r3, #4]
 8006a28:	687b      	ldr	r3, [r7, #4]
 8006a2a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8006a2c:	f003 0302 	and.w	r3, r3, #2
 8006a30:	2b00      	cmp	r3, #0
 8006a32:	d00a      	beq.n	8006a4a <UART_AdvFeatureConfig+0x6e>
 8006a34:	687b      	ldr	r3, [r7, #4]
 8006a36:	681b      	ldr	r3, [r3, #0]
 8006a38:	685b      	ldr	r3, [r3, #4]
 8006a3a:	f423 3180 	bic.w	r1, r3, #65536	@ 0x10000
 8006a3e:	687b      	ldr	r3, [r7, #4]
 8006a40:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8006a42:	687b      	ldr	r3, [r7, #4]
 8006a44:	681b      	ldr	r3, [r3, #0]
 8006a46:	430a      	orrs	r2, r1
 8006a48:	605a      	str	r2, [r3, #4]
 8006a4a:	687b      	ldr	r3, [r7, #4]
 8006a4c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8006a4e:	f003 0304 	and.w	r3, r3, #4
 8006a52:	2b00      	cmp	r3, #0
 8006a54:	d00a      	beq.n	8006a6c <UART_AdvFeatureConfig+0x90>
 8006a56:	687b      	ldr	r3, [r7, #4]
 8006a58:	681b      	ldr	r3, [r3, #0]
 8006a5a:	685b      	ldr	r3, [r3, #4]
 8006a5c:	f423 2180 	bic.w	r1, r3, #262144	@ 0x40000
 8006a60:	687b      	ldr	r3, [r7, #4]
 8006a62:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8006a64:	687b      	ldr	r3, [r7, #4]
 8006a66:	681b      	ldr	r3, [r3, #0]
 8006a68:	430a      	orrs	r2, r1
 8006a6a:	605a      	str	r2, [r3, #4]
 8006a6c:	687b      	ldr	r3, [r7, #4]
 8006a6e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8006a70:	f003 0310 	and.w	r3, r3, #16
 8006a74:	2b00      	cmp	r3, #0
 8006a76:	d00a      	beq.n	8006a8e <UART_AdvFeatureConfig+0xb2>
 8006a78:	687b      	ldr	r3, [r7, #4]
 8006a7a:	681b      	ldr	r3, [r3, #0]
 8006a7c:	689b      	ldr	r3, [r3, #8]
 8006a7e:	f423 5180 	bic.w	r1, r3, #4096	@ 0x1000
 8006a82:	687b      	ldr	r3, [r7, #4]
 8006a84:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8006a86:	687b      	ldr	r3, [r7, #4]
 8006a88:	681b      	ldr	r3, [r3, #0]
 8006a8a:	430a      	orrs	r2, r1
 8006a8c:	609a      	str	r2, [r3, #8]
 8006a8e:	687b      	ldr	r3, [r7, #4]
 8006a90:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8006a92:	f003 0320 	and.w	r3, r3, #32
 8006a96:	2b00      	cmp	r3, #0
 8006a98:	d00a      	beq.n	8006ab0 <UART_AdvFeatureConfig+0xd4>
 8006a9a:	687b      	ldr	r3, [r7, #4]
 8006a9c:	681b      	ldr	r3, [r3, #0]
 8006a9e:	689b      	ldr	r3, [r3, #8]
 8006aa0:	f423 5100 	bic.w	r1, r3, #8192	@ 0x2000
 8006aa4:	687b      	ldr	r3, [r7, #4]
 8006aa6:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 8006aa8:	687b      	ldr	r3, [r7, #4]
 8006aaa:	681b      	ldr	r3, [r3, #0]
 8006aac:	430a      	orrs	r2, r1
 8006aae:	609a      	str	r2, [r3, #8]
 8006ab0:	687b      	ldr	r3, [r7, #4]
 8006ab2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8006ab4:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8006ab8:	2b00      	cmp	r3, #0
 8006aba:	d01a      	beq.n	8006af2 <UART_AdvFeatureConfig+0x116>
 8006abc:	687b      	ldr	r3, [r7, #4]
 8006abe:	681b      	ldr	r3, [r3, #0]
 8006ac0:	685b      	ldr	r3, [r3, #4]
 8006ac2:	f423 1180 	bic.w	r1, r3, #1048576	@ 0x100000
 8006ac6:	687b      	ldr	r3, [r7, #4]
 8006ac8:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8006aca:	687b      	ldr	r3, [r7, #4]
 8006acc:	681b      	ldr	r3, [r3, #0]
 8006ace:	430a      	orrs	r2, r1
 8006ad0:	605a      	str	r2, [r3, #4]
 8006ad2:	687b      	ldr	r3, [r7, #4]
 8006ad4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8006ad6:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 8006ada:	d10a      	bne.n	8006af2 <UART_AdvFeatureConfig+0x116>
 8006adc:	687b      	ldr	r3, [r7, #4]
 8006ade:	681b      	ldr	r3, [r3, #0]
 8006ae0:	685b      	ldr	r3, [r3, #4]
 8006ae2:	f423 01c0 	bic.w	r1, r3, #6291456	@ 0x600000
 8006ae6:	687b      	ldr	r3, [r7, #4]
 8006ae8:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8006aea:	687b      	ldr	r3, [r7, #4]
 8006aec:	681b      	ldr	r3, [r3, #0]
 8006aee:	430a      	orrs	r2, r1
 8006af0:	605a      	str	r2, [r3, #4]
 8006af2:	687b      	ldr	r3, [r7, #4]
 8006af4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8006af6:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8006afa:	2b00      	cmp	r3, #0
 8006afc:	d00a      	beq.n	8006b14 <UART_AdvFeatureConfig+0x138>
 8006afe:	687b      	ldr	r3, [r7, #4]
 8006b00:	681b      	ldr	r3, [r3, #0]
 8006b02:	685b      	ldr	r3, [r3, #4]
 8006b04:	f423 2100 	bic.w	r1, r3, #524288	@ 0x80000
 8006b08:	687b      	ldr	r3, [r7, #4]
 8006b0a:	6c9a      	ldr	r2, [r3, #72]	@ 0x48
 8006b0c:	687b      	ldr	r3, [r7, #4]
 8006b0e:	681b      	ldr	r3, [r3, #0]
 8006b10:	430a      	orrs	r2, r1
 8006b12:	605a      	str	r2, [r3, #4]
 8006b14:	bf00      	nop
 8006b16:	370c      	adds	r7, #12
 8006b18:	46bd      	mov	sp, r7
 8006b1a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006b1e:	4770      	bx	lr

08006b20 <UART_CheckIdleState>:
 8006b20:	b580      	push	{r7, lr}
 8006b22:	b098      	sub	sp, #96	@ 0x60
 8006b24:	af02      	add	r7, sp, #8
 8006b26:	6078      	str	r0, [r7, #4]
 8006b28:	687b      	ldr	r3, [r7, #4]
 8006b2a:	2200      	movs	r2, #0
 8006b2c:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 8006b30:	f7fb fb0a 	bl	8002148 <HAL_GetTick>
 8006b34:	6578      	str	r0, [r7, #84]	@ 0x54
 8006b36:	687b      	ldr	r3, [r7, #4]
 8006b38:	681b      	ldr	r3, [r3, #0]
 8006b3a:	681b      	ldr	r3, [r3, #0]
 8006b3c:	f003 0308 	and.w	r3, r3, #8
 8006b40:	2b08      	cmp	r3, #8
 8006b42:	d12e      	bne.n	8006ba2 <UART_CheckIdleState+0x82>
 8006b44:	f06f 437e 	mvn.w	r3, #4261412864	@ 0xfe000000
 8006b48:	9300      	str	r3, [sp, #0]
 8006b4a:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8006b4c:	2200      	movs	r2, #0
 8006b4e:	f44f 1100 	mov.w	r1, #2097152	@ 0x200000
 8006b52:	6878      	ldr	r0, [r7, #4]
 8006b54:	f000 f88c 	bl	8006c70 <UART_WaitOnFlagUntilTimeout>
 8006b58:	4603      	mov	r3, r0
 8006b5a:	2b00      	cmp	r3, #0
 8006b5c:	d021      	beq.n	8006ba2 <UART_CheckIdleState+0x82>
 8006b5e:	687b      	ldr	r3, [r7, #4]
 8006b60:	681b      	ldr	r3, [r3, #0]
 8006b62:	63bb      	str	r3, [r7, #56]	@ 0x38
 8006b64:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8006b66:	e853 3f00 	ldrex	r3, [r3]
 8006b6a:	637b      	str	r3, [r7, #52]	@ 0x34
 8006b6c:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8006b6e:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8006b72:	653b      	str	r3, [r7, #80]	@ 0x50
 8006b74:	687b      	ldr	r3, [r7, #4]
 8006b76:	681b      	ldr	r3, [r3, #0]
 8006b78:	461a      	mov	r2, r3
 8006b7a:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 8006b7c:	647b      	str	r3, [r7, #68]	@ 0x44
 8006b7e:	643a      	str	r2, [r7, #64]	@ 0x40
 8006b80:	6c39      	ldr	r1, [r7, #64]	@ 0x40
 8006b82:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 8006b84:	e841 2300 	strex	r3, r2, [r1]
 8006b88:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8006b8a:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8006b8c:	2b00      	cmp	r3, #0
 8006b8e:	d1e6      	bne.n	8006b5e <UART_CheckIdleState+0x3e>
 8006b90:	687b      	ldr	r3, [r7, #4]
 8006b92:	2220      	movs	r2, #32
 8006b94:	67da      	str	r2, [r3, #124]	@ 0x7c
 8006b96:	687b      	ldr	r3, [r7, #4]
 8006b98:	2200      	movs	r2, #0
 8006b9a:	f883 2078 	strb.w	r2, [r3, #120]	@ 0x78
 8006b9e:	2303      	movs	r3, #3
 8006ba0:	e062      	b.n	8006c68 <UART_CheckIdleState+0x148>
 8006ba2:	687b      	ldr	r3, [r7, #4]
 8006ba4:	681b      	ldr	r3, [r3, #0]
 8006ba6:	681b      	ldr	r3, [r3, #0]
 8006ba8:	f003 0304 	and.w	r3, r3, #4
 8006bac:	2b04      	cmp	r3, #4
 8006bae:	d149      	bne.n	8006c44 <UART_CheckIdleState+0x124>
 8006bb0:	f06f 437e 	mvn.w	r3, #4261412864	@ 0xfe000000
 8006bb4:	9300      	str	r3, [sp, #0]
 8006bb6:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8006bb8:	2200      	movs	r2, #0
 8006bba:	f44f 0180 	mov.w	r1, #4194304	@ 0x400000
 8006bbe:	6878      	ldr	r0, [r7, #4]
 8006bc0:	f000 f856 	bl	8006c70 <UART_WaitOnFlagUntilTimeout>
 8006bc4:	4603      	mov	r3, r0
 8006bc6:	2b00      	cmp	r3, #0
 8006bc8:	d03c      	beq.n	8006c44 <UART_CheckIdleState+0x124>
 8006bca:	687b      	ldr	r3, [r7, #4]
 8006bcc:	681b      	ldr	r3, [r3, #0]
 8006bce:	627b      	str	r3, [r7, #36]	@ 0x24
 8006bd0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006bd2:	e853 3f00 	ldrex	r3, [r3]
 8006bd6:	623b      	str	r3, [r7, #32]
 8006bd8:	6a3b      	ldr	r3, [r7, #32]
 8006bda:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 8006bde:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8006be0:	687b      	ldr	r3, [r7, #4]
 8006be2:	681b      	ldr	r3, [r3, #0]
 8006be4:	461a      	mov	r2, r3
 8006be6:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8006be8:	633b      	str	r3, [r7, #48]	@ 0x30
 8006bea:	62fa      	str	r2, [r7, #44]	@ 0x2c
 8006bec:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8006bee:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8006bf0:	e841 2300 	strex	r3, r2, [r1]
 8006bf4:	62bb      	str	r3, [r7, #40]	@ 0x28
 8006bf6:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8006bf8:	2b00      	cmp	r3, #0
 8006bfa:	d1e6      	bne.n	8006bca <UART_CheckIdleState+0xaa>
 8006bfc:	687b      	ldr	r3, [r7, #4]
 8006bfe:	681b      	ldr	r3, [r3, #0]
 8006c00:	3308      	adds	r3, #8
 8006c02:	613b      	str	r3, [r7, #16]
 8006c04:	693b      	ldr	r3, [r7, #16]
 8006c06:	e853 3f00 	ldrex	r3, [r3]
 8006c0a:	60fb      	str	r3, [r7, #12]
 8006c0c:	68fb      	ldr	r3, [r7, #12]
 8006c0e:	f023 0301 	bic.w	r3, r3, #1
 8006c12:	64bb      	str	r3, [r7, #72]	@ 0x48
 8006c14:	687b      	ldr	r3, [r7, #4]
 8006c16:	681b      	ldr	r3, [r3, #0]
 8006c18:	3308      	adds	r3, #8
 8006c1a:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 8006c1c:	61fa      	str	r2, [r7, #28]
 8006c1e:	61bb      	str	r3, [r7, #24]
 8006c20:	69b9      	ldr	r1, [r7, #24]
 8006c22:	69fa      	ldr	r2, [r7, #28]
 8006c24:	e841 2300 	strex	r3, r2, [r1]
 8006c28:	617b      	str	r3, [r7, #20]
 8006c2a:	697b      	ldr	r3, [r7, #20]
 8006c2c:	2b00      	cmp	r3, #0
 8006c2e:	d1e5      	bne.n	8006bfc <UART_CheckIdleState+0xdc>
 8006c30:	687b      	ldr	r3, [r7, #4]
 8006c32:	2220      	movs	r2, #32
 8006c34:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
 8006c38:	687b      	ldr	r3, [r7, #4]
 8006c3a:	2200      	movs	r2, #0
 8006c3c:	f883 2078 	strb.w	r2, [r3, #120]	@ 0x78
 8006c40:	2303      	movs	r3, #3
 8006c42:	e011      	b.n	8006c68 <UART_CheckIdleState+0x148>
 8006c44:	687b      	ldr	r3, [r7, #4]
 8006c46:	2220      	movs	r2, #32
 8006c48:	67da      	str	r2, [r3, #124]	@ 0x7c
 8006c4a:	687b      	ldr	r3, [r7, #4]
 8006c4c:	2220      	movs	r2, #32
 8006c4e:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
 8006c52:	687b      	ldr	r3, [r7, #4]
 8006c54:	2200      	movs	r2, #0
 8006c56:	661a      	str	r2, [r3, #96]	@ 0x60
 8006c58:	687b      	ldr	r3, [r7, #4]
 8006c5a:	2200      	movs	r2, #0
 8006c5c:	665a      	str	r2, [r3, #100]	@ 0x64
 8006c5e:	687b      	ldr	r3, [r7, #4]
 8006c60:	2200      	movs	r2, #0
 8006c62:	f883 2078 	strb.w	r2, [r3, #120]	@ 0x78
 8006c66:	2300      	movs	r3, #0
 8006c68:	4618      	mov	r0, r3
 8006c6a:	3758      	adds	r7, #88	@ 0x58
 8006c6c:	46bd      	mov	sp, r7
 8006c6e:	bd80      	pop	{r7, pc}

08006c70 <UART_WaitOnFlagUntilTimeout>:
 8006c70:	b580      	push	{r7, lr}
 8006c72:	b084      	sub	sp, #16
 8006c74:	af00      	add	r7, sp, #0
 8006c76:	60f8      	str	r0, [r7, #12]
 8006c78:	60b9      	str	r1, [r7, #8]
 8006c7a:	603b      	str	r3, [r7, #0]
 8006c7c:	4613      	mov	r3, r2
 8006c7e:	71fb      	strb	r3, [r7, #7]
 8006c80:	e04f      	b.n	8006d22 <UART_WaitOnFlagUntilTimeout+0xb2>
 8006c82:	69bb      	ldr	r3, [r7, #24]
 8006c84:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006c88:	d04b      	beq.n	8006d22 <UART_WaitOnFlagUntilTimeout+0xb2>
 8006c8a:	f7fb fa5d 	bl	8002148 <HAL_GetTick>
 8006c8e:	4602      	mov	r2, r0
 8006c90:	683b      	ldr	r3, [r7, #0]
 8006c92:	1ad3      	subs	r3, r2, r3
 8006c94:	69ba      	ldr	r2, [r7, #24]
 8006c96:	429a      	cmp	r2, r3
 8006c98:	d302      	bcc.n	8006ca0 <UART_WaitOnFlagUntilTimeout+0x30>
 8006c9a:	69bb      	ldr	r3, [r7, #24]
 8006c9c:	2b00      	cmp	r3, #0
 8006c9e:	d101      	bne.n	8006ca4 <UART_WaitOnFlagUntilTimeout+0x34>
 8006ca0:	2303      	movs	r3, #3
 8006ca2:	e04e      	b.n	8006d42 <UART_WaitOnFlagUntilTimeout+0xd2>
 8006ca4:	68fb      	ldr	r3, [r7, #12]
 8006ca6:	681b      	ldr	r3, [r3, #0]
 8006ca8:	681b      	ldr	r3, [r3, #0]
 8006caa:	f003 0304 	and.w	r3, r3, #4
 8006cae:	2b00      	cmp	r3, #0
 8006cb0:	d037      	beq.n	8006d22 <UART_WaitOnFlagUntilTimeout+0xb2>
 8006cb2:	68bb      	ldr	r3, [r7, #8]
 8006cb4:	2b80      	cmp	r3, #128	@ 0x80
 8006cb6:	d034      	beq.n	8006d22 <UART_WaitOnFlagUntilTimeout+0xb2>
 8006cb8:	68bb      	ldr	r3, [r7, #8]
 8006cba:	2b40      	cmp	r3, #64	@ 0x40
 8006cbc:	d031      	beq.n	8006d22 <UART_WaitOnFlagUntilTimeout+0xb2>
 8006cbe:	68fb      	ldr	r3, [r7, #12]
 8006cc0:	681b      	ldr	r3, [r3, #0]
 8006cc2:	69db      	ldr	r3, [r3, #28]
 8006cc4:	f003 0308 	and.w	r3, r3, #8
 8006cc8:	2b08      	cmp	r3, #8
 8006cca:	d110      	bne.n	8006cee <UART_WaitOnFlagUntilTimeout+0x7e>
 8006ccc:	68fb      	ldr	r3, [r7, #12]
 8006cce:	681b      	ldr	r3, [r3, #0]
 8006cd0:	2208      	movs	r2, #8
 8006cd2:	621a      	str	r2, [r3, #32]
 8006cd4:	68f8      	ldr	r0, [r7, #12]
 8006cd6:	f000 f8ff 	bl	8006ed8 <UART_EndRxTransfer>
 8006cda:	68fb      	ldr	r3, [r7, #12]
 8006cdc:	2208      	movs	r2, #8
 8006cde:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 8006ce2:	68fb      	ldr	r3, [r7, #12]
 8006ce4:	2200      	movs	r2, #0
 8006ce6:	f883 2078 	strb.w	r2, [r3, #120]	@ 0x78
 8006cea:	2301      	movs	r3, #1
 8006cec:	e029      	b.n	8006d42 <UART_WaitOnFlagUntilTimeout+0xd2>
 8006cee:	68fb      	ldr	r3, [r7, #12]
 8006cf0:	681b      	ldr	r3, [r3, #0]
 8006cf2:	69db      	ldr	r3, [r3, #28]
 8006cf4:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 8006cf8:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 8006cfc:	d111      	bne.n	8006d22 <UART_WaitOnFlagUntilTimeout+0xb2>
 8006cfe:	68fb      	ldr	r3, [r7, #12]
 8006d00:	681b      	ldr	r3, [r3, #0]
 8006d02:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 8006d06:	621a      	str	r2, [r3, #32]
 8006d08:	68f8      	ldr	r0, [r7, #12]
 8006d0a:	f000 f8e5 	bl	8006ed8 <UART_EndRxTransfer>
 8006d0e:	68fb      	ldr	r3, [r7, #12]
 8006d10:	2220      	movs	r2, #32
 8006d12:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 8006d16:	68fb      	ldr	r3, [r7, #12]
 8006d18:	2200      	movs	r2, #0
 8006d1a:	f883 2078 	strb.w	r2, [r3, #120]	@ 0x78
 8006d1e:	2303      	movs	r3, #3
 8006d20:	e00f      	b.n	8006d42 <UART_WaitOnFlagUntilTimeout+0xd2>
 8006d22:	68fb      	ldr	r3, [r7, #12]
 8006d24:	681b      	ldr	r3, [r3, #0]
 8006d26:	69da      	ldr	r2, [r3, #28]
 8006d28:	68bb      	ldr	r3, [r7, #8]
 8006d2a:	4013      	ands	r3, r2
 8006d2c:	68ba      	ldr	r2, [r7, #8]
 8006d2e:	429a      	cmp	r2, r3
 8006d30:	bf0c      	ite	eq
 8006d32:	2301      	moveq	r3, #1
 8006d34:	2300      	movne	r3, #0
 8006d36:	b2db      	uxtb	r3, r3
 8006d38:	461a      	mov	r2, r3
 8006d3a:	79fb      	ldrb	r3, [r7, #7]
 8006d3c:	429a      	cmp	r2, r3
 8006d3e:	d0a0      	beq.n	8006c82 <UART_WaitOnFlagUntilTimeout+0x12>
 8006d40:	2300      	movs	r3, #0
 8006d42:	4618      	mov	r0, r3
 8006d44:	3710      	adds	r7, #16
 8006d46:	46bd      	mov	sp, r7
 8006d48:	bd80      	pop	{r7, pc}
	...

08006d4c <UART_Start_Receive_IT>:
 8006d4c:	b480      	push	{r7}
 8006d4e:	b097      	sub	sp, #92	@ 0x5c
 8006d50:	af00      	add	r7, sp, #0
 8006d52:	60f8      	str	r0, [r7, #12]
 8006d54:	60b9      	str	r1, [r7, #8]
 8006d56:	4613      	mov	r3, r2
 8006d58:	80fb      	strh	r3, [r7, #6]
 8006d5a:	68fb      	ldr	r3, [r7, #12]
 8006d5c:	68ba      	ldr	r2, [r7, #8]
 8006d5e:	655a      	str	r2, [r3, #84]	@ 0x54
 8006d60:	68fb      	ldr	r3, [r7, #12]
 8006d62:	88fa      	ldrh	r2, [r7, #6]
 8006d64:	f8a3 2058 	strh.w	r2, [r3, #88]	@ 0x58
 8006d68:	68fb      	ldr	r3, [r7, #12]
 8006d6a:	88fa      	ldrh	r2, [r7, #6]
 8006d6c:	f8a3 205a 	strh.w	r2, [r3, #90]	@ 0x5a
 8006d70:	68fb      	ldr	r3, [r7, #12]
 8006d72:	2200      	movs	r2, #0
 8006d74:	669a      	str	r2, [r3, #104]	@ 0x68
 8006d76:	68fb      	ldr	r3, [r7, #12]
 8006d78:	689b      	ldr	r3, [r3, #8]
 8006d7a:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8006d7e:	d10e      	bne.n	8006d9e <UART_Start_Receive_IT+0x52>
 8006d80:	68fb      	ldr	r3, [r7, #12]
 8006d82:	691b      	ldr	r3, [r3, #16]
 8006d84:	2b00      	cmp	r3, #0
 8006d86:	d105      	bne.n	8006d94 <UART_Start_Receive_IT+0x48>
 8006d88:	68fb      	ldr	r3, [r7, #12]
 8006d8a:	f240 12ff 	movw	r2, #511	@ 0x1ff
 8006d8e:	f8a3 205c 	strh.w	r2, [r3, #92]	@ 0x5c
 8006d92:	e02d      	b.n	8006df0 <UART_Start_Receive_IT+0xa4>
 8006d94:	68fb      	ldr	r3, [r7, #12]
 8006d96:	22ff      	movs	r2, #255	@ 0xff
 8006d98:	f8a3 205c 	strh.w	r2, [r3, #92]	@ 0x5c
 8006d9c:	e028      	b.n	8006df0 <UART_Start_Receive_IT+0xa4>
 8006d9e:	68fb      	ldr	r3, [r7, #12]
 8006da0:	689b      	ldr	r3, [r3, #8]
 8006da2:	2b00      	cmp	r3, #0
 8006da4:	d10d      	bne.n	8006dc2 <UART_Start_Receive_IT+0x76>
 8006da6:	68fb      	ldr	r3, [r7, #12]
 8006da8:	691b      	ldr	r3, [r3, #16]
 8006daa:	2b00      	cmp	r3, #0
 8006dac:	d104      	bne.n	8006db8 <UART_Start_Receive_IT+0x6c>
 8006dae:	68fb      	ldr	r3, [r7, #12]
 8006db0:	22ff      	movs	r2, #255	@ 0xff
 8006db2:	f8a3 205c 	strh.w	r2, [r3, #92]	@ 0x5c
 8006db6:	e01b      	b.n	8006df0 <UART_Start_Receive_IT+0xa4>
 8006db8:	68fb      	ldr	r3, [r7, #12]
 8006dba:	227f      	movs	r2, #127	@ 0x7f
 8006dbc:	f8a3 205c 	strh.w	r2, [r3, #92]	@ 0x5c
 8006dc0:	e016      	b.n	8006df0 <UART_Start_Receive_IT+0xa4>
 8006dc2:	68fb      	ldr	r3, [r7, #12]
 8006dc4:	689b      	ldr	r3, [r3, #8]
 8006dc6:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 8006dca:	d10d      	bne.n	8006de8 <UART_Start_Receive_IT+0x9c>
 8006dcc:	68fb      	ldr	r3, [r7, #12]
 8006dce:	691b      	ldr	r3, [r3, #16]
 8006dd0:	2b00      	cmp	r3, #0
 8006dd2:	d104      	bne.n	8006dde <UART_Start_Receive_IT+0x92>
 8006dd4:	68fb      	ldr	r3, [r7, #12]
 8006dd6:	227f      	movs	r2, #127	@ 0x7f
 8006dd8:	f8a3 205c 	strh.w	r2, [r3, #92]	@ 0x5c
 8006ddc:	e008      	b.n	8006df0 <UART_Start_Receive_IT+0xa4>
 8006dde:	68fb      	ldr	r3, [r7, #12]
 8006de0:	223f      	movs	r2, #63	@ 0x3f
 8006de2:	f8a3 205c 	strh.w	r2, [r3, #92]	@ 0x5c
 8006de6:	e003      	b.n	8006df0 <UART_Start_Receive_IT+0xa4>
 8006de8:	68fb      	ldr	r3, [r7, #12]
 8006dea:	2200      	movs	r2, #0
 8006dec:	f8a3 205c 	strh.w	r2, [r3, #92]	@ 0x5c
 8006df0:	68fb      	ldr	r3, [r7, #12]
 8006df2:	2200      	movs	r2, #0
 8006df4:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 8006df8:	68fb      	ldr	r3, [r7, #12]
 8006dfa:	2222      	movs	r2, #34	@ 0x22
 8006dfc:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
 8006e00:	68fb      	ldr	r3, [r7, #12]
 8006e02:	681b      	ldr	r3, [r3, #0]
 8006e04:	3308      	adds	r3, #8
 8006e06:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8006e08:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8006e0a:	e853 3f00 	ldrex	r3, [r3]
 8006e0e:	63bb      	str	r3, [r7, #56]	@ 0x38
 8006e10:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8006e12:	f043 0301 	orr.w	r3, r3, #1
 8006e16:	657b      	str	r3, [r7, #84]	@ 0x54
 8006e18:	68fb      	ldr	r3, [r7, #12]
 8006e1a:	681b      	ldr	r3, [r3, #0]
 8006e1c:	3308      	adds	r3, #8
 8006e1e:	6d7a      	ldr	r2, [r7, #84]	@ 0x54
 8006e20:	64ba      	str	r2, [r7, #72]	@ 0x48
 8006e22:	647b      	str	r3, [r7, #68]	@ 0x44
 8006e24:	6c79      	ldr	r1, [r7, #68]	@ 0x44
 8006e26:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 8006e28:	e841 2300 	strex	r3, r2, [r1]
 8006e2c:	643b      	str	r3, [r7, #64]	@ 0x40
 8006e2e:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 8006e30:	2b00      	cmp	r3, #0
 8006e32:	d1e5      	bne.n	8006e00 <UART_Start_Receive_IT+0xb4>
 8006e34:	68fb      	ldr	r3, [r7, #12]
 8006e36:	689b      	ldr	r3, [r3, #8]
 8006e38:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8006e3c:	d107      	bne.n	8006e4e <UART_Start_Receive_IT+0x102>
 8006e3e:	68fb      	ldr	r3, [r7, #12]
 8006e40:	691b      	ldr	r3, [r3, #16]
 8006e42:	2b00      	cmp	r3, #0
 8006e44:	d103      	bne.n	8006e4e <UART_Start_Receive_IT+0x102>
 8006e46:	68fb      	ldr	r3, [r7, #12]
 8006e48:	4a21      	ldr	r2, [pc, #132]	@ (8006ed0 <UART_Start_Receive_IT+0x184>)
 8006e4a:	669a      	str	r2, [r3, #104]	@ 0x68
 8006e4c:	e002      	b.n	8006e54 <UART_Start_Receive_IT+0x108>
 8006e4e:	68fb      	ldr	r3, [r7, #12]
 8006e50:	4a20      	ldr	r2, [pc, #128]	@ (8006ed4 <UART_Start_Receive_IT+0x188>)
 8006e52:	669a      	str	r2, [r3, #104]	@ 0x68
 8006e54:	68fb      	ldr	r3, [r7, #12]
 8006e56:	691b      	ldr	r3, [r3, #16]
 8006e58:	2b00      	cmp	r3, #0
 8006e5a:	d019      	beq.n	8006e90 <UART_Start_Receive_IT+0x144>
 8006e5c:	68fb      	ldr	r3, [r7, #12]
 8006e5e:	681b      	ldr	r3, [r3, #0]
 8006e60:	62bb      	str	r3, [r7, #40]	@ 0x28
 8006e62:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8006e64:	e853 3f00 	ldrex	r3, [r3]
 8006e68:	627b      	str	r3, [r7, #36]	@ 0x24
 8006e6a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006e6c:	f443 7390 	orr.w	r3, r3, #288	@ 0x120
 8006e70:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8006e72:	68fb      	ldr	r3, [r7, #12]
 8006e74:	681b      	ldr	r3, [r3, #0]
 8006e76:	461a      	mov	r2, r3
 8006e78:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8006e7a:	637b      	str	r3, [r7, #52]	@ 0x34
 8006e7c:	633a      	str	r2, [r7, #48]	@ 0x30
 8006e7e:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 8006e80:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 8006e82:	e841 2300 	strex	r3, r2, [r1]
 8006e86:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8006e88:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8006e8a:	2b00      	cmp	r3, #0
 8006e8c:	d1e6      	bne.n	8006e5c <UART_Start_Receive_IT+0x110>
 8006e8e:	e018      	b.n	8006ec2 <UART_Start_Receive_IT+0x176>
 8006e90:	68fb      	ldr	r3, [r7, #12]
 8006e92:	681b      	ldr	r3, [r3, #0]
 8006e94:	617b      	str	r3, [r7, #20]
 8006e96:	697b      	ldr	r3, [r7, #20]
 8006e98:	e853 3f00 	ldrex	r3, [r3]
 8006e9c:	613b      	str	r3, [r7, #16]
 8006e9e:	693b      	ldr	r3, [r7, #16]
 8006ea0:	f043 0320 	orr.w	r3, r3, #32
 8006ea4:	653b      	str	r3, [r7, #80]	@ 0x50
 8006ea6:	68fb      	ldr	r3, [r7, #12]
 8006ea8:	681b      	ldr	r3, [r3, #0]
 8006eaa:	461a      	mov	r2, r3
 8006eac:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 8006eae:	623b      	str	r3, [r7, #32]
 8006eb0:	61fa      	str	r2, [r7, #28]
 8006eb2:	69f9      	ldr	r1, [r7, #28]
 8006eb4:	6a3a      	ldr	r2, [r7, #32]
 8006eb6:	e841 2300 	strex	r3, r2, [r1]
 8006eba:	61bb      	str	r3, [r7, #24]
 8006ebc:	69bb      	ldr	r3, [r7, #24]
 8006ebe:	2b00      	cmp	r3, #0
 8006ec0:	d1e6      	bne.n	8006e90 <UART_Start_Receive_IT+0x144>
 8006ec2:	2300      	movs	r3, #0
 8006ec4:	4618      	mov	r0, r3
 8006ec6:	375c      	adds	r7, #92	@ 0x5c
 8006ec8:	46bd      	mov	sp, r7
 8006eca:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006ece:	4770      	bx	lr
 8006ed0:	080071c9 	.word	0x080071c9
 8006ed4:	08007021 	.word	0x08007021

08006ed8 <UART_EndRxTransfer>:
 8006ed8:	b480      	push	{r7}
 8006eda:	b095      	sub	sp, #84	@ 0x54
 8006edc:	af00      	add	r7, sp, #0
 8006ede:	6078      	str	r0, [r7, #4]
 8006ee0:	687b      	ldr	r3, [r7, #4]
 8006ee2:	681b      	ldr	r3, [r3, #0]
 8006ee4:	637b      	str	r3, [r7, #52]	@ 0x34
 8006ee6:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8006ee8:	e853 3f00 	ldrex	r3, [r3]
 8006eec:	633b      	str	r3, [r7, #48]	@ 0x30
 8006eee:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8006ef0:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 8006ef4:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8006ef6:	687b      	ldr	r3, [r7, #4]
 8006ef8:	681b      	ldr	r3, [r3, #0]
 8006efa:	461a      	mov	r2, r3
 8006efc:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8006efe:	643b      	str	r3, [r7, #64]	@ 0x40
 8006f00:	63fa      	str	r2, [r7, #60]	@ 0x3c
 8006f02:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
 8006f04:	6c3a      	ldr	r2, [r7, #64]	@ 0x40
 8006f06:	e841 2300 	strex	r3, r2, [r1]
 8006f0a:	63bb      	str	r3, [r7, #56]	@ 0x38
 8006f0c:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8006f0e:	2b00      	cmp	r3, #0
 8006f10:	d1e6      	bne.n	8006ee0 <UART_EndRxTransfer+0x8>
 8006f12:	687b      	ldr	r3, [r7, #4]
 8006f14:	681b      	ldr	r3, [r3, #0]
 8006f16:	3308      	adds	r3, #8
 8006f18:	623b      	str	r3, [r7, #32]
 8006f1a:	6a3b      	ldr	r3, [r7, #32]
 8006f1c:	e853 3f00 	ldrex	r3, [r3]
 8006f20:	61fb      	str	r3, [r7, #28]
 8006f22:	69fb      	ldr	r3, [r7, #28]
 8006f24:	f023 0301 	bic.w	r3, r3, #1
 8006f28:	64bb      	str	r3, [r7, #72]	@ 0x48
 8006f2a:	687b      	ldr	r3, [r7, #4]
 8006f2c:	681b      	ldr	r3, [r3, #0]
 8006f2e:	3308      	adds	r3, #8
 8006f30:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 8006f32:	62fa      	str	r2, [r7, #44]	@ 0x2c
 8006f34:	62bb      	str	r3, [r7, #40]	@ 0x28
 8006f36:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 8006f38:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8006f3a:	e841 2300 	strex	r3, r2, [r1]
 8006f3e:	627b      	str	r3, [r7, #36]	@ 0x24
 8006f40:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006f42:	2b00      	cmp	r3, #0
 8006f44:	d1e5      	bne.n	8006f12 <UART_EndRxTransfer+0x3a>
 8006f46:	687b      	ldr	r3, [r7, #4]
 8006f48:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8006f4a:	2b01      	cmp	r3, #1
 8006f4c:	d118      	bne.n	8006f80 <UART_EndRxTransfer+0xa8>
 8006f4e:	687b      	ldr	r3, [r7, #4]
 8006f50:	681b      	ldr	r3, [r3, #0]
 8006f52:	60fb      	str	r3, [r7, #12]
 8006f54:	68fb      	ldr	r3, [r7, #12]
 8006f56:	e853 3f00 	ldrex	r3, [r3]
 8006f5a:	60bb      	str	r3, [r7, #8]
 8006f5c:	68bb      	ldr	r3, [r7, #8]
 8006f5e:	f023 0310 	bic.w	r3, r3, #16
 8006f62:	647b      	str	r3, [r7, #68]	@ 0x44
 8006f64:	687b      	ldr	r3, [r7, #4]
 8006f66:	681b      	ldr	r3, [r3, #0]
 8006f68:	461a      	mov	r2, r3
 8006f6a:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8006f6c:	61bb      	str	r3, [r7, #24]
 8006f6e:	617a      	str	r2, [r7, #20]
 8006f70:	6979      	ldr	r1, [r7, #20]
 8006f72:	69ba      	ldr	r2, [r7, #24]
 8006f74:	e841 2300 	strex	r3, r2, [r1]
 8006f78:	613b      	str	r3, [r7, #16]
 8006f7a:	693b      	ldr	r3, [r7, #16]
 8006f7c:	2b00      	cmp	r3, #0
 8006f7e:	d1e6      	bne.n	8006f4e <UART_EndRxTransfer+0x76>
 8006f80:	687b      	ldr	r3, [r7, #4]
 8006f82:	2220      	movs	r2, #32
 8006f84:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
 8006f88:	687b      	ldr	r3, [r7, #4]
 8006f8a:	2200      	movs	r2, #0
 8006f8c:	661a      	str	r2, [r3, #96]	@ 0x60
 8006f8e:	687b      	ldr	r3, [r7, #4]
 8006f90:	2200      	movs	r2, #0
 8006f92:	669a      	str	r2, [r3, #104]	@ 0x68
 8006f94:	bf00      	nop
 8006f96:	3754      	adds	r7, #84	@ 0x54
 8006f98:	46bd      	mov	sp, r7
 8006f9a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006f9e:	4770      	bx	lr

08006fa0 <UART_DMAAbortOnError>:
 8006fa0:	b580      	push	{r7, lr}
 8006fa2:	b084      	sub	sp, #16
 8006fa4:	af00      	add	r7, sp, #0
 8006fa6:	6078      	str	r0, [r7, #4]
 8006fa8:	687b      	ldr	r3, [r7, #4]
 8006faa:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8006fac:	60fb      	str	r3, [r7, #12]
 8006fae:	68fb      	ldr	r3, [r7, #12]
 8006fb0:	2200      	movs	r2, #0
 8006fb2:	f8a3 205a 	strh.w	r2, [r3, #90]	@ 0x5a
 8006fb6:	68fb      	ldr	r3, [r7, #12]
 8006fb8:	2200      	movs	r2, #0
 8006fba:	f8a3 2052 	strh.w	r2, [r3, #82]	@ 0x52
 8006fbe:	68f8      	ldr	r0, [r7, #12]
 8006fc0:	f7ff fbc0 	bl	8006744 <HAL_UART_ErrorCallback>
 8006fc4:	bf00      	nop
 8006fc6:	3710      	adds	r7, #16
 8006fc8:	46bd      	mov	sp, r7
 8006fca:	bd80      	pop	{r7, pc}

08006fcc <UART_EndTransmit_IT>:
 8006fcc:	b580      	push	{r7, lr}
 8006fce:	b088      	sub	sp, #32
 8006fd0:	af00      	add	r7, sp, #0
 8006fd2:	6078      	str	r0, [r7, #4]
 8006fd4:	687b      	ldr	r3, [r7, #4]
 8006fd6:	681b      	ldr	r3, [r3, #0]
 8006fd8:	60fb      	str	r3, [r7, #12]
 8006fda:	68fb      	ldr	r3, [r7, #12]
 8006fdc:	e853 3f00 	ldrex	r3, [r3]
 8006fe0:	60bb      	str	r3, [r7, #8]
 8006fe2:	68bb      	ldr	r3, [r7, #8]
 8006fe4:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8006fe8:	61fb      	str	r3, [r7, #28]
 8006fea:	687b      	ldr	r3, [r7, #4]
 8006fec:	681b      	ldr	r3, [r3, #0]
 8006fee:	461a      	mov	r2, r3
 8006ff0:	69fb      	ldr	r3, [r7, #28]
 8006ff2:	61bb      	str	r3, [r7, #24]
 8006ff4:	617a      	str	r2, [r7, #20]
 8006ff6:	6979      	ldr	r1, [r7, #20]
 8006ff8:	69ba      	ldr	r2, [r7, #24]
 8006ffa:	e841 2300 	strex	r3, r2, [r1]
 8006ffe:	613b      	str	r3, [r7, #16]
 8007000:	693b      	ldr	r3, [r7, #16]
 8007002:	2b00      	cmp	r3, #0
 8007004:	d1e6      	bne.n	8006fd4 <UART_EndTransmit_IT+0x8>
 8007006:	687b      	ldr	r3, [r7, #4]
 8007008:	2220      	movs	r2, #32
 800700a:	67da      	str	r2, [r3, #124]	@ 0x7c
 800700c:	687b      	ldr	r3, [r7, #4]
 800700e:	2200      	movs	r2, #0
 8007010:	66da      	str	r2, [r3, #108]	@ 0x6c
 8007012:	6878      	ldr	r0, [r7, #4]
 8007014:	f7ff fb8c 	bl	8006730 <HAL_UART_TxCpltCallback>
 8007018:	bf00      	nop
 800701a:	3720      	adds	r7, #32
 800701c:	46bd      	mov	sp, r7
 800701e:	bd80      	pop	{r7, pc}

08007020 <UART_RxISR_8BIT>:
 8007020:	b580      	push	{r7, lr}
 8007022:	b09c      	sub	sp, #112	@ 0x70
 8007024:	af00      	add	r7, sp, #0
 8007026:	6078      	str	r0, [r7, #4]
 8007028:	687b      	ldr	r3, [r7, #4]
 800702a:	f8b3 305c 	ldrh.w	r3, [r3, #92]	@ 0x5c
 800702e:	f8a7 306e 	strh.w	r3, [r7, #110]	@ 0x6e
 8007032:	687b      	ldr	r3, [r7, #4]
 8007034:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8007038:	2b22      	cmp	r3, #34	@ 0x22
 800703a:	f040 80b9 	bne.w	80071b0 <UART_RxISR_8BIT+0x190>
 800703e:	687b      	ldr	r3, [r7, #4]
 8007040:	681b      	ldr	r3, [r3, #0]
 8007042:	8c9b      	ldrh	r3, [r3, #36]	@ 0x24
 8007044:	f8a7 306c 	strh.w	r3, [r7, #108]	@ 0x6c
 8007048:	f8b7 306c 	ldrh.w	r3, [r7, #108]	@ 0x6c
 800704c:	b2d9      	uxtb	r1, r3
 800704e:	f8b7 306e 	ldrh.w	r3, [r7, #110]	@ 0x6e
 8007052:	b2da      	uxtb	r2, r3
 8007054:	687b      	ldr	r3, [r7, #4]
 8007056:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8007058:	400a      	ands	r2, r1
 800705a:	b2d2      	uxtb	r2, r2
 800705c:	701a      	strb	r2, [r3, #0]
 800705e:	687b      	ldr	r3, [r7, #4]
 8007060:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8007062:	1c5a      	adds	r2, r3, #1
 8007064:	687b      	ldr	r3, [r7, #4]
 8007066:	655a      	str	r2, [r3, #84]	@ 0x54
 8007068:	687b      	ldr	r3, [r7, #4]
 800706a:	f8b3 305a 	ldrh.w	r3, [r3, #90]	@ 0x5a
 800706e:	b29b      	uxth	r3, r3
 8007070:	3b01      	subs	r3, #1
 8007072:	b29a      	uxth	r2, r3
 8007074:	687b      	ldr	r3, [r7, #4]
 8007076:	f8a3 205a 	strh.w	r2, [r3, #90]	@ 0x5a
 800707a:	687b      	ldr	r3, [r7, #4]
 800707c:	f8b3 305a 	ldrh.w	r3, [r3, #90]	@ 0x5a
 8007080:	b29b      	uxth	r3, r3
 8007082:	2b00      	cmp	r3, #0
 8007084:	f040 809c 	bne.w	80071c0 <UART_RxISR_8BIT+0x1a0>
 8007088:	687b      	ldr	r3, [r7, #4]
 800708a:	681b      	ldr	r3, [r3, #0]
 800708c:	64fb      	str	r3, [r7, #76]	@ 0x4c
 800708e:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8007090:	e853 3f00 	ldrex	r3, [r3]
 8007094:	64bb      	str	r3, [r7, #72]	@ 0x48
 8007096:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8007098:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 800709c:	66bb      	str	r3, [r7, #104]	@ 0x68
 800709e:	687b      	ldr	r3, [r7, #4]
 80070a0:	681b      	ldr	r3, [r3, #0]
 80070a2:	461a      	mov	r2, r3
 80070a4:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 80070a6:	65bb      	str	r3, [r7, #88]	@ 0x58
 80070a8:	657a      	str	r2, [r7, #84]	@ 0x54
 80070aa:	6d79      	ldr	r1, [r7, #84]	@ 0x54
 80070ac:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 80070ae:	e841 2300 	strex	r3, r2, [r1]
 80070b2:	653b      	str	r3, [r7, #80]	@ 0x50
 80070b4:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 80070b6:	2b00      	cmp	r3, #0
 80070b8:	d1e6      	bne.n	8007088 <UART_RxISR_8BIT+0x68>
 80070ba:	687b      	ldr	r3, [r7, #4]
 80070bc:	681b      	ldr	r3, [r3, #0]
 80070be:	3308      	adds	r3, #8
 80070c0:	63bb      	str	r3, [r7, #56]	@ 0x38
 80070c2:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80070c4:	e853 3f00 	ldrex	r3, [r3]
 80070c8:	637b      	str	r3, [r7, #52]	@ 0x34
 80070ca:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80070cc:	f023 0301 	bic.w	r3, r3, #1
 80070d0:	667b      	str	r3, [r7, #100]	@ 0x64
 80070d2:	687b      	ldr	r3, [r7, #4]
 80070d4:	681b      	ldr	r3, [r3, #0]
 80070d6:	3308      	adds	r3, #8
 80070d8:	6e7a      	ldr	r2, [r7, #100]	@ 0x64
 80070da:	647a      	str	r2, [r7, #68]	@ 0x44
 80070dc:	643b      	str	r3, [r7, #64]	@ 0x40
 80070de:	6c39      	ldr	r1, [r7, #64]	@ 0x40
 80070e0:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 80070e2:	e841 2300 	strex	r3, r2, [r1]
 80070e6:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80070e8:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 80070ea:	2b00      	cmp	r3, #0
 80070ec:	d1e5      	bne.n	80070ba <UART_RxISR_8BIT+0x9a>
 80070ee:	687b      	ldr	r3, [r7, #4]
 80070f0:	2220      	movs	r2, #32
 80070f2:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
 80070f6:	687b      	ldr	r3, [r7, #4]
 80070f8:	2200      	movs	r2, #0
 80070fa:	669a      	str	r2, [r3, #104]	@ 0x68
 80070fc:	687b      	ldr	r3, [r7, #4]
 80070fe:	2200      	movs	r2, #0
 8007100:	665a      	str	r2, [r3, #100]	@ 0x64
 8007102:	687b      	ldr	r3, [r7, #4]
 8007104:	681b      	ldr	r3, [r3, #0]
 8007106:	685b      	ldr	r3, [r3, #4]
 8007108:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 800710c:	2b00      	cmp	r3, #0
 800710e:	d018      	beq.n	8007142 <UART_RxISR_8BIT+0x122>
 8007110:	687b      	ldr	r3, [r7, #4]
 8007112:	681b      	ldr	r3, [r3, #0]
 8007114:	627b      	str	r3, [r7, #36]	@ 0x24
 8007116:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8007118:	e853 3f00 	ldrex	r3, [r3]
 800711c:	623b      	str	r3, [r7, #32]
 800711e:	6a3b      	ldr	r3, [r7, #32]
 8007120:	f023 6380 	bic.w	r3, r3, #67108864	@ 0x4000000
 8007124:	663b      	str	r3, [r7, #96]	@ 0x60
 8007126:	687b      	ldr	r3, [r7, #4]
 8007128:	681b      	ldr	r3, [r3, #0]
 800712a:	461a      	mov	r2, r3
 800712c:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 800712e:	633b      	str	r3, [r7, #48]	@ 0x30
 8007130:	62fa      	str	r2, [r7, #44]	@ 0x2c
 8007132:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8007134:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8007136:	e841 2300 	strex	r3, r2, [r1]
 800713a:	62bb      	str	r3, [r7, #40]	@ 0x28
 800713c:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800713e:	2b00      	cmp	r3, #0
 8007140:	d1e6      	bne.n	8007110 <UART_RxISR_8BIT+0xf0>
 8007142:	687b      	ldr	r3, [r7, #4]
 8007144:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8007146:	2b01      	cmp	r3, #1
 8007148:	d12e      	bne.n	80071a8 <UART_RxISR_8BIT+0x188>
 800714a:	687b      	ldr	r3, [r7, #4]
 800714c:	2200      	movs	r2, #0
 800714e:	661a      	str	r2, [r3, #96]	@ 0x60
 8007150:	687b      	ldr	r3, [r7, #4]
 8007152:	681b      	ldr	r3, [r3, #0]
 8007154:	613b      	str	r3, [r7, #16]
 8007156:	693b      	ldr	r3, [r7, #16]
 8007158:	e853 3f00 	ldrex	r3, [r3]
 800715c:	60fb      	str	r3, [r7, #12]
 800715e:	68fb      	ldr	r3, [r7, #12]
 8007160:	f023 0310 	bic.w	r3, r3, #16
 8007164:	65fb      	str	r3, [r7, #92]	@ 0x5c
 8007166:	687b      	ldr	r3, [r7, #4]
 8007168:	681b      	ldr	r3, [r3, #0]
 800716a:	461a      	mov	r2, r3
 800716c:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 800716e:	61fb      	str	r3, [r7, #28]
 8007170:	61ba      	str	r2, [r7, #24]
 8007172:	69b9      	ldr	r1, [r7, #24]
 8007174:	69fa      	ldr	r2, [r7, #28]
 8007176:	e841 2300 	strex	r3, r2, [r1]
 800717a:	617b      	str	r3, [r7, #20]
 800717c:	697b      	ldr	r3, [r7, #20]
 800717e:	2b00      	cmp	r3, #0
 8007180:	d1e6      	bne.n	8007150 <UART_RxISR_8BIT+0x130>
 8007182:	687b      	ldr	r3, [r7, #4]
 8007184:	681b      	ldr	r3, [r3, #0]
 8007186:	69db      	ldr	r3, [r3, #28]
 8007188:	f003 0310 	and.w	r3, r3, #16
 800718c:	2b10      	cmp	r3, #16
 800718e:	d103      	bne.n	8007198 <UART_RxISR_8BIT+0x178>
 8007190:	687b      	ldr	r3, [r7, #4]
 8007192:	681b      	ldr	r3, [r3, #0]
 8007194:	2210      	movs	r2, #16
 8007196:	621a      	str	r2, [r3, #32]
 8007198:	687b      	ldr	r3, [r7, #4]
 800719a:	f8b3 3058 	ldrh.w	r3, [r3, #88]	@ 0x58
 800719e:	4619      	mov	r1, r3
 80071a0:	6878      	ldr	r0, [r7, #4]
 80071a2:	f7ff fad9 	bl	8006758 <HAL_UARTEx_RxEventCallback>
 80071a6:	e00b      	b.n	80071c0 <UART_RxISR_8BIT+0x1a0>
 80071a8:	6878      	ldr	r0, [r7, #4]
 80071aa:	f7fa fc51 	bl	8001a50 <HAL_UART_RxCpltCallback>
 80071ae:	e007      	b.n	80071c0 <UART_RxISR_8BIT+0x1a0>
 80071b0:	687b      	ldr	r3, [r7, #4]
 80071b2:	681b      	ldr	r3, [r3, #0]
 80071b4:	699a      	ldr	r2, [r3, #24]
 80071b6:	687b      	ldr	r3, [r7, #4]
 80071b8:	681b      	ldr	r3, [r3, #0]
 80071ba:	f042 0208 	orr.w	r2, r2, #8
 80071be:	619a      	str	r2, [r3, #24]
 80071c0:	bf00      	nop
 80071c2:	3770      	adds	r7, #112	@ 0x70
 80071c4:	46bd      	mov	sp, r7
 80071c6:	bd80      	pop	{r7, pc}

080071c8 <UART_RxISR_16BIT>:
 80071c8:	b580      	push	{r7, lr}
 80071ca:	b09c      	sub	sp, #112	@ 0x70
 80071cc:	af00      	add	r7, sp, #0
 80071ce:	6078      	str	r0, [r7, #4]
 80071d0:	687b      	ldr	r3, [r7, #4]
 80071d2:	f8b3 305c 	ldrh.w	r3, [r3, #92]	@ 0x5c
 80071d6:	f8a7 306e 	strh.w	r3, [r7, #110]	@ 0x6e
 80071da:	687b      	ldr	r3, [r7, #4]
 80071dc:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 80071e0:	2b22      	cmp	r3, #34	@ 0x22
 80071e2:	f040 80b9 	bne.w	8007358 <UART_RxISR_16BIT+0x190>
 80071e6:	687b      	ldr	r3, [r7, #4]
 80071e8:	681b      	ldr	r3, [r3, #0]
 80071ea:	8c9b      	ldrh	r3, [r3, #36]	@ 0x24
 80071ec:	f8a7 306c 	strh.w	r3, [r7, #108]	@ 0x6c
 80071f0:	687b      	ldr	r3, [r7, #4]
 80071f2:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80071f4:	66bb      	str	r3, [r7, #104]	@ 0x68
 80071f6:	f8b7 206c 	ldrh.w	r2, [r7, #108]	@ 0x6c
 80071fa:	f8b7 306e 	ldrh.w	r3, [r7, #110]	@ 0x6e
 80071fe:	4013      	ands	r3, r2
 8007200:	b29a      	uxth	r2, r3
 8007202:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 8007204:	801a      	strh	r2, [r3, #0]
 8007206:	687b      	ldr	r3, [r7, #4]
 8007208:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800720a:	1c9a      	adds	r2, r3, #2
 800720c:	687b      	ldr	r3, [r7, #4]
 800720e:	655a      	str	r2, [r3, #84]	@ 0x54
 8007210:	687b      	ldr	r3, [r7, #4]
 8007212:	f8b3 305a 	ldrh.w	r3, [r3, #90]	@ 0x5a
 8007216:	b29b      	uxth	r3, r3
 8007218:	3b01      	subs	r3, #1
 800721a:	b29a      	uxth	r2, r3
 800721c:	687b      	ldr	r3, [r7, #4]
 800721e:	f8a3 205a 	strh.w	r2, [r3, #90]	@ 0x5a
 8007222:	687b      	ldr	r3, [r7, #4]
 8007224:	f8b3 305a 	ldrh.w	r3, [r3, #90]	@ 0x5a
 8007228:	b29b      	uxth	r3, r3
 800722a:	2b00      	cmp	r3, #0
 800722c:	f040 809c 	bne.w	8007368 <UART_RxISR_16BIT+0x1a0>
 8007230:	687b      	ldr	r3, [r7, #4]
 8007232:	681b      	ldr	r3, [r3, #0]
 8007234:	64bb      	str	r3, [r7, #72]	@ 0x48
 8007236:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8007238:	e853 3f00 	ldrex	r3, [r3]
 800723c:	647b      	str	r3, [r7, #68]	@ 0x44
 800723e:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8007240:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 8007244:	667b      	str	r3, [r7, #100]	@ 0x64
 8007246:	687b      	ldr	r3, [r7, #4]
 8007248:	681b      	ldr	r3, [r3, #0]
 800724a:	461a      	mov	r2, r3
 800724c:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 800724e:	657b      	str	r3, [r7, #84]	@ 0x54
 8007250:	653a      	str	r2, [r7, #80]	@ 0x50
 8007252:	6d39      	ldr	r1, [r7, #80]	@ 0x50
 8007254:	6d7a      	ldr	r2, [r7, #84]	@ 0x54
 8007256:	e841 2300 	strex	r3, r2, [r1]
 800725a:	64fb      	str	r3, [r7, #76]	@ 0x4c
 800725c:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 800725e:	2b00      	cmp	r3, #0
 8007260:	d1e6      	bne.n	8007230 <UART_RxISR_16BIT+0x68>
 8007262:	687b      	ldr	r3, [r7, #4]
 8007264:	681b      	ldr	r3, [r3, #0]
 8007266:	3308      	adds	r3, #8
 8007268:	637b      	str	r3, [r7, #52]	@ 0x34
 800726a:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800726c:	e853 3f00 	ldrex	r3, [r3]
 8007270:	633b      	str	r3, [r7, #48]	@ 0x30
 8007272:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8007274:	f023 0301 	bic.w	r3, r3, #1
 8007278:	663b      	str	r3, [r7, #96]	@ 0x60
 800727a:	687b      	ldr	r3, [r7, #4]
 800727c:	681b      	ldr	r3, [r3, #0]
 800727e:	3308      	adds	r3, #8
 8007280:	6e3a      	ldr	r2, [r7, #96]	@ 0x60
 8007282:	643a      	str	r2, [r7, #64]	@ 0x40
 8007284:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8007286:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
 8007288:	6c3a      	ldr	r2, [r7, #64]	@ 0x40
 800728a:	e841 2300 	strex	r3, r2, [r1]
 800728e:	63bb      	str	r3, [r7, #56]	@ 0x38
 8007290:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8007292:	2b00      	cmp	r3, #0
 8007294:	d1e5      	bne.n	8007262 <UART_RxISR_16BIT+0x9a>
 8007296:	687b      	ldr	r3, [r7, #4]
 8007298:	2220      	movs	r2, #32
 800729a:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
 800729e:	687b      	ldr	r3, [r7, #4]
 80072a0:	2200      	movs	r2, #0
 80072a2:	669a      	str	r2, [r3, #104]	@ 0x68
 80072a4:	687b      	ldr	r3, [r7, #4]
 80072a6:	2200      	movs	r2, #0
 80072a8:	665a      	str	r2, [r3, #100]	@ 0x64
 80072aa:	687b      	ldr	r3, [r7, #4]
 80072ac:	681b      	ldr	r3, [r3, #0]
 80072ae:	685b      	ldr	r3, [r3, #4]
 80072b0:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 80072b4:	2b00      	cmp	r3, #0
 80072b6:	d018      	beq.n	80072ea <UART_RxISR_16BIT+0x122>
 80072b8:	687b      	ldr	r3, [r7, #4]
 80072ba:	681b      	ldr	r3, [r3, #0]
 80072bc:	623b      	str	r3, [r7, #32]
 80072be:	6a3b      	ldr	r3, [r7, #32]
 80072c0:	e853 3f00 	ldrex	r3, [r3]
 80072c4:	61fb      	str	r3, [r7, #28]
 80072c6:	69fb      	ldr	r3, [r7, #28]
 80072c8:	f023 6380 	bic.w	r3, r3, #67108864	@ 0x4000000
 80072cc:	65fb      	str	r3, [r7, #92]	@ 0x5c
 80072ce:	687b      	ldr	r3, [r7, #4]
 80072d0:	681b      	ldr	r3, [r3, #0]
 80072d2:	461a      	mov	r2, r3
 80072d4:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 80072d6:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80072d8:	62ba      	str	r2, [r7, #40]	@ 0x28
 80072da:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 80072dc:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 80072de:	e841 2300 	strex	r3, r2, [r1]
 80072e2:	627b      	str	r3, [r7, #36]	@ 0x24
 80072e4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80072e6:	2b00      	cmp	r3, #0
 80072e8:	d1e6      	bne.n	80072b8 <UART_RxISR_16BIT+0xf0>
 80072ea:	687b      	ldr	r3, [r7, #4]
 80072ec:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80072ee:	2b01      	cmp	r3, #1
 80072f0:	d12e      	bne.n	8007350 <UART_RxISR_16BIT+0x188>
 80072f2:	687b      	ldr	r3, [r7, #4]
 80072f4:	2200      	movs	r2, #0
 80072f6:	661a      	str	r2, [r3, #96]	@ 0x60
 80072f8:	687b      	ldr	r3, [r7, #4]
 80072fa:	681b      	ldr	r3, [r3, #0]
 80072fc:	60fb      	str	r3, [r7, #12]
 80072fe:	68fb      	ldr	r3, [r7, #12]
 8007300:	e853 3f00 	ldrex	r3, [r3]
 8007304:	60bb      	str	r3, [r7, #8]
 8007306:	68bb      	ldr	r3, [r7, #8]
 8007308:	f023 0310 	bic.w	r3, r3, #16
 800730c:	65bb      	str	r3, [r7, #88]	@ 0x58
 800730e:	687b      	ldr	r3, [r7, #4]
 8007310:	681b      	ldr	r3, [r3, #0]
 8007312:	461a      	mov	r2, r3
 8007314:	6dbb      	ldr	r3, [r7, #88]	@ 0x58
 8007316:	61bb      	str	r3, [r7, #24]
 8007318:	617a      	str	r2, [r7, #20]
 800731a:	6979      	ldr	r1, [r7, #20]
 800731c:	69ba      	ldr	r2, [r7, #24]
 800731e:	e841 2300 	strex	r3, r2, [r1]
 8007322:	613b      	str	r3, [r7, #16]
 8007324:	693b      	ldr	r3, [r7, #16]
 8007326:	2b00      	cmp	r3, #0
 8007328:	d1e6      	bne.n	80072f8 <UART_RxISR_16BIT+0x130>
 800732a:	687b      	ldr	r3, [r7, #4]
 800732c:	681b      	ldr	r3, [r3, #0]
 800732e:	69db      	ldr	r3, [r3, #28]
 8007330:	f003 0310 	and.w	r3, r3, #16
 8007334:	2b10      	cmp	r3, #16
 8007336:	d103      	bne.n	8007340 <UART_RxISR_16BIT+0x178>
 8007338:	687b      	ldr	r3, [r7, #4]
 800733a:	681b      	ldr	r3, [r3, #0]
 800733c:	2210      	movs	r2, #16
 800733e:	621a      	str	r2, [r3, #32]
 8007340:	687b      	ldr	r3, [r7, #4]
 8007342:	f8b3 3058 	ldrh.w	r3, [r3, #88]	@ 0x58
 8007346:	4619      	mov	r1, r3
 8007348:	6878      	ldr	r0, [r7, #4]
 800734a:	f7ff fa05 	bl	8006758 <HAL_UARTEx_RxEventCallback>
 800734e:	e00b      	b.n	8007368 <UART_RxISR_16BIT+0x1a0>
 8007350:	6878      	ldr	r0, [r7, #4]
 8007352:	f7fa fb7d 	bl	8001a50 <HAL_UART_RxCpltCallback>
 8007356:	e007      	b.n	8007368 <UART_RxISR_16BIT+0x1a0>
 8007358:	687b      	ldr	r3, [r7, #4]
 800735a:	681b      	ldr	r3, [r3, #0]
 800735c:	699a      	ldr	r2, [r3, #24]
 800735e:	687b      	ldr	r3, [r7, #4]
 8007360:	681b      	ldr	r3, [r3, #0]
 8007362:	f042 0208 	orr.w	r2, r2, #8
 8007366:	619a      	str	r2, [r3, #24]
 8007368:	bf00      	nop
 800736a:	3770      	adds	r7, #112	@ 0x70
 800736c:	46bd      	mov	sp, r7
 800736e:	bd80      	pop	{r7, pc}

08007370 <HAL_UARTEx_WakeupCallback>:
 8007370:	b480      	push	{r7}
 8007372:	b083      	sub	sp, #12
 8007374:	af00      	add	r7, sp, #0
 8007376:	6078      	str	r0, [r7, #4]
 8007378:	bf00      	nop
 800737a:	370c      	adds	r7, #12
 800737c:	46bd      	mov	sp, r7
 800737e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007382:	4770      	bx	lr

08007384 <atoi>:
 8007384:	220a      	movs	r2, #10
 8007386:	2100      	movs	r1, #0
 8007388:	f000 b87a 	b.w	8007480 <strtol>

0800738c <_strtol_l.constprop.0>:
 800738c:	2b24      	cmp	r3, #36	@ 0x24
 800738e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8007392:	4686      	mov	lr, r0
 8007394:	4690      	mov	r8, r2
 8007396:	d801      	bhi.n	800739c <_strtol_l.constprop.0+0x10>
 8007398:	2b01      	cmp	r3, #1
 800739a:	d106      	bne.n	80073aa <_strtol_l.constprop.0+0x1e>
 800739c:	f000 f9f2 	bl	8007784 <__errno>
 80073a0:	2316      	movs	r3, #22
 80073a2:	6003      	str	r3, [r0, #0]
 80073a4:	2000      	movs	r0, #0
 80073a6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80073aa:	4834      	ldr	r0, [pc, #208]	@ (800747c <_strtol_l.constprop.0+0xf0>)
 80073ac:	460d      	mov	r5, r1
 80073ae:	462a      	mov	r2, r5
 80073b0:	f815 4b01 	ldrb.w	r4, [r5], #1
 80073b4:	5d06      	ldrb	r6, [r0, r4]
 80073b6:	f016 0608 	ands.w	r6, r6, #8
 80073ba:	d1f8      	bne.n	80073ae <_strtol_l.constprop.0+0x22>
 80073bc:	2c2d      	cmp	r4, #45	@ 0x2d
 80073be:	d12d      	bne.n	800741c <_strtol_l.constprop.0+0x90>
 80073c0:	782c      	ldrb	r4, [r5, #0]
 80073c2:	2601      	movs	r6, #1
 80073c4:	1c95      	adds	r5, r2, #2
 80073c6:	f033 0210 	bics.w	r2, r3, #16
 80073ca:	d109      	bne.n	80073e0 <_strtol_l.constprop.0+0x54>
 80073cc:	2c30      	cmp	r4, #48	@ 0x30
 80073ce:	d12a      	bne.n	8007426 <_strtol_l.constprop.0+0x9a>
 80073d0:	782a      	ldrb	r2, [r5, #0]
 80073d2:	f002 02df 	and.w	r2, r2, #223	@ 0xdf
 80073d6:	2a58      	cmp	r2, #88	@ 0x58
 80073d8:	d125      	bne.n	8007426 <_strtol_l.constprop.0+0x9a>
 80073da:	786c      	ldrb	r4, [r5, #1]
 80073dc:	2310      	movs	r3, #16
 80073de:	3502      	adds	r5, #2
 80073e0:	f106 4c00 	add.w	ip, r6, #2147483648	@ 0x80000000
 80073e4:	f10c 3cff 	add.w	ip, ip, #4294967295
 80073e8:	2200      	movs	r2, #0
 80073ea:	fbbc f9f3 	udiv	r9, ip, r3
 80073ee:	4610      	mov	r0, r2
 80073f0:	fb03 ca19 	mls	sl, r3, r9, ip
 80073f4:	f1a4 0730 	sub.w	r7, r4, #48	@ 0x30
 80073f8:	2f09      	cmp	r7, #9
 80073fa:	d81b      	bhi.n	8007434 <_strtol_l.constprop.0+0xa8>
 80073fc:	463c      	mov	r4, r7
 80073fe:	42a3      	cmp	r3, r4
 8007400:	dd27      	ble.n	8007452 <_strtol_l.constprop.0+0xc6>
 8007402:	1c57      	adds	r7, r2, #1
 8007404:	d007      	beq.n	8007416 <_strtol_l.constprop.0+0x8a>
 8007406:	4581      	cmp	r9, r0
 8007408:	d320      	bcc.n	800744c <_strtol_l.constprop.0+0xc0>
 800740a:	d101      	bne.n	8007410 <_strtol_l.constprop.0+0x84>
 800740c:	45a2      	cmp	sl, r4
 800740e:	db1d      	blt.n	800744c <_strtol_l.constprop.0+0xc0>
 8007410:	fb00 4003 	mla	r0, r0, r3, r4
 8007414:	2201      	movs	r2, #1
 8007416:	f815 4b01 	ldrb.w	r4, [r5], #1
 800741a:	e7eb      	b.n	80073f4 <_strtol_l.constprop.0+0x68>
 800741c:	2c2b      	cmp	r4, #43	@ 0x2b
 800741e:	bf04      	itt	eq
 8007420:	782c      	ldrbeq	r4, [r5, #0]
 8007422:	1c95      	addeq	r5, r2, #2
 8007424:	e7cf      	b.n	80073c6 <_strtol_l.constprop.0+0x3a>
 8007426:	2b00      	cmp	r3, #0
 8007428:	d1da      	bne.n	80073e0 <_strtol_l.constprop.0+0x54>
 800742a:	2c30      	cmp	r4, #48	@ 0x30
 800742c:	bf0c      	ite	eq
 800742e:	2308      	moveq	r3, #8
 8007430:	230a      	movne	r3, #10
 8007432:	e7d5      	b.n	80073e0 <_strtol_l.constprop.0+0x54>
 8007434:	f1a4 0741 	sub.w	r7, r4, #65	@ 0x41
 8007438:	2f19      	cmp	r7, #25
 800743a:	d801      	bhi.n	8007440 <_strtol_l.constprop.0+0xb4>
 800743c:	3c37      	subs	r4, #55	@ 0x37
 800743e:	e7de      	b.n	80073fe <_strtol_l.constprop.0+0x72>
 8007440:	f1a4 0761 	sub.w	r7, r4, #97	@ 0x61
 8007444:	2f19      	cmp	r7, #25
 8007446:	d804      	bhi.n	8007452 <_strtol_l.constprop.0+0xc6>
 8007448:	3c57      	subs	r4, #87	@ 0x57
 800744a:	e7d8      	b.n	80073fe <_strtol_l.constprop.0+0x72>
 800744c:	f04f 32ff 	mov.w	r2, #4294967295
 8007450:	e7e1      	b.n	8007416 <_strtol_l.constprop.0+0x8a>
 8007452:	1c53      	adds	r3, r2, #1
 8007454:	d108      	bne.n	8007468 <_strtol_l.constprop.0+0xdc>
 8007456:	2322      	movs	r3, #34	@ 0x22
 8007458:	f8ce 3000 	str.w	r3, [lr]
 800745c:	4660      	mov	r0, ip
 800745e:	f1b8 0f00 	cmp.w	r8, #0
 8007462:	d0a0      	beq.n	80073a6 <_strtol_l.constprop.0+0x1a>
 8007464:	1e69      	subs	r1, r5, #1
 8007466:	e006      	b.n	8007476 <_strtol_l.constprop.0+0xea>
 8007468:	b106      	cbz	r6, 800746c <_strtol_l.constprop.0+0xe0>
 800746a:	4240      	negs	r0, r0
 800746c:	f1b8 0f00 	cmp.w	r8, #0
 8007470:	d099      	beq.n	80073a6 <_strtol_l.constprop.0+0x1a>
 8007472:	2a00      	cmp	r2, #0
 8007474:	d1f6      	bne.n	8007464 <_strtol_l.constprop.0+0xd8>
 8007476:	f8c8 1000 	str.w	r1, [r8]
 800747a:	e794      	b.n	80073a6 <_strtol_l.constprop.0+0x1a>
 800747c:	0800850d 	.word	0x0800850d

08007480 <strtol>:
 8007480:	4613      	mov	r3, r2
 8007482:	460a      	mov	r2, r1
 8007484:	4601      	mov	r1, r0
 8007486:	4802      	ldr	r0, [pc, #8]	@ (8007490 <strtol+0x10>)
 8007488:	6800      	ldr	r0, [r0, #0]
 800748a:	f7ff bf7f 	b.w	800738c <_strtol_l.constprop.0>
 800748e:	bf00      	nop
 8007490:	20000018 	.word	0x20000018

08007494 <std>:
 8007494:	2300      	movs	r3, #0
 8007496:	b510      	push	{r4, lr}
 8007498:	4604      	mov	r4, r0
 800749a:	e9c0 3300 	strd	r3, r3, [r0]
 800749e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80074a2:	6083      	str	r3, [r0, #8]
 80074a4:	8181      	strh	r1, [r0, #12]
 80074a6:	6643      	str	r3, [r0, #100]	@ 0x64
 80074a8:	81c2      	strh	r2, [r0, #14]
 80074aa:	6183      	str	r3, [r0, #24]
 80074ac:	4619      	mov	r1, r3
 80074ae:	2208      	movs	r2, #8
 80074b0:	305c      	adds	r0, #92	@ 0x5c
 80074b2:	f000 f906 	bl	80076c2 <memset>
 80074b6:	4b0d      	ldr	r3, [pc, #52]	@ (80074ec <std+0x58>)
 80074b8:	6263      	str	r3, [r4, #36]	@ 0x24
 80074ba:	4b0d      	ldr	r3, [pc, #52]	@ (80074f0 <std+0x5c>)
 80074bc:	62a3      	str	r3, [r4, #40]	@ 0x28
 80074be:	4b0d      	ldr	r3, [pc, #52]	@ (80074f4 <std+0x60>)
 80074c0:	62e3      	str	r3, [r4, #44]	@ 0x2c
 80074c2:	4b0d      	ldr	r3, [pc, #52]	@ (80074f8 <std+0x64>)
 80074c4:	6323      	str	r3, [r4, #48]	@ 0x30
 80074c6:	4b0d      	ldr	r3, [pc, #52]	@ (80074fc <std+0x68>)
 80074c8:	6224      	str	r4, [r4, #32]
 80074ca:	429c      	cmp	r4, r3
 80074cc:	d006      	beq.n	80074dc <std+0x48>
 80074ce:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 80074d2:	4294      	cmp	r4, r2
 80074d4:	d002      	beq.n	80074dc <std+0x48>
 80074d6:	33d0      	adds	r3, #208	@ 0xd0
 80074d8:	429c      	cmp	r4, r3
 80074da:	d105      	bne.n	80074e8 <std+0x54>
 80074dc:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 80074e0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80074e4:	f000 b978 	b.w	80077d8 <__retarget_lock_init_recursive>
 80074e8:	bd10      	pop	{r4, pc}
 80074ea:	bf00      	nop
 80074ec:	0800763d 	.word	0x0800763d
 80074f0:	0800765f 	.word	0x0800765f
 80074f4:	08007697 	.word	0x08007697
 80074f8:	080076bb 	.word	0x080076bb
 80074fc:	200003ac 	.word	0x200003ac

08007500 <stdio_exit_handler>:
 8007500:	4a02      	ldr	r2, [pc, #8]	@ (800750c <stdio_exit_handler+0xc>)
 8007502:	4903      	ldr	r1, [pc, #12]	@ (8007510 <stdio_exit_handler+0x10>)
 8007504:	4803      	ldr	r0, [pc, #12]	@ (8007514 <stdio_exit_handler+0x14>)
 8007506:	f000 b869 	b.w	80075dc <_fwalk_sglue>
 800750a:	bf00      	nop
 800750c:	2000000c 	.word	0x2000000c
 8007510:	08008079 	.word	0x08008079
 8007514:	2000001c 	.word	0x2000001c

08007518 <cleanup_stdio>:
 8007518:	6841      	ldr	r1, [r0, #4]
 800751a:	4b0c      	ldr	r3, [pc, #48]	@ (800754c <cleanup_stdio+0x34>)
 800751c:	4299      	cmp	r1, r3
 800751e:	b510      	push	{r4, lr}
 8007520:	4604      	mov	r4, r0
 8007522:	d001      	beq.n	8007528 <cleanup_stdio+0x10>
 8007524:	f000 fda8 	bl	8008078 <_fflush_r>
 8007528:	68a1      	ldr	r1, [r4, #8]
 800752a:	4b09      	ldr	r3, [pc, #36]	@ (8007550 <cleanup_stdio+0x38>)
 800752c:	4299      	cmp	r1, r3
 800752e:	d002      	beq.n	8007536 <cleanup_stdio+0x1e>
 8007530:	4620      	mov	r0, r4
 8007532:	f000 fda1 	bl	8008078 <_fflush_r>
 8007536:	68e1      	ldr	r1, [r4, #12]
 8007538:	4b06      	ldr	r3, [pc, #24]	@ (8007554 <cleanup_stdio+0x3c>)
 800753a:	4299      	cmp	r1, r3
 800753c:	d004      	beq.n	8007548 <cleanup_stdio+0x30>
 800753e:	4620      	mov	r0, r4
 8007540:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8007544:	f000 bd98 	b.w	8008078 <_fflush_r>
 8007548:	bd10      	pop	{r4, pc}
 800754a:	bf00      	nop
 800754c:	200003ac 	.word	0x200003ac
 8007550:	20000414 	.word	0x20000414
 8007554:	2000047c 	.word	0x2000047c

08007558 <global_stdio_init.part.0>:
 8007558:	b510      	push	{r4, lr}
 800755a:	4b0b      	ldr	r3, [pc, #44]	@ (8007588 <global_stdio_init.part.0+0x30>)
 800755c:	4c0b      	ldr	r4, [pc, #44]	@ (800758c <global_stdio_init.part.0+0x34>)
 800755e:	4a0c      	ldr	r2, [pc, #48]	@ (8007590 <global_stdio_init.part.0+0x38>)
 8007560:	601a      	str	r2, [r3, #0]
 8007562:	4620      	mov	r0, r4
 8007564:	2200      	movs	r2, #0
 8007566:	2104      	movs	r1, #4
 8007568:	f7ff ff94 	bl	8007494 <std>
 800756c:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 8007570:	2201      	movs	r2, #1
 8007572:	2109      	movs	r1, #9
 8007574:	f7ff ff8e 	bl	8007494 <std>
 8007578:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 800757c:	2202      	movs	r2, #2
 800757e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8007582:	2112      	movs	r1, #18
 8007584:	f7ff bf86 	b.w	8007494 <std>
 8007588:	200004e4 	.word	0x200004e4
 800758c:	200003ac 	.word	0x200003ac
 8007590:	08007501 	.word	0x08007501

08007594 <__sfp_lock_acquire>:
 8007594:	4801      	ldr	r0, [pc, #4]	@ (800759c <__sfp_lock_acquire+0x8>)
 8007596:	f000 b920 	b.w	80077da <__retarget_lock_acquire_recursive>
 800759a:	bf00      	nop
 800759c:	200004ed 	.word	0x200004ed

080075a0 <__sfp_lock_release>:
 80075a0:	4801      	ldr	r0, [pc, #4]	@ (80075a8 <__sfp_lock_release+0x8>)
 80075a2:	f000 b91b 	b.w	80077dc <__retarget_lock_release_recursive>
 80075a6:	bf00      	nop
 80075a8:	200004ed 	.word	0x200004ed

080075ac <__sinit>:
 80075ac:	b510      	push	{r4, lr}
 80075ae:	4604      	mov	r4, r0
 80075b0:	f7ff fff0 	bl	8007594 <__sfp_lock_acquire>
 80075b4:	6a23      	ldr	r3, [r4, #32]
 80075b6:	b11b      	cbz	r3, 80075c0 <__sinit+0x14>
 80075b8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80075bc:	f7ff bff0 	b.w	80075a0 <__sfp_lock_release>
 80075c0:	4b04      	ldr	r3, [pc, #16]	@ (80075d4 <__sinit+0x28>)
 80075c2:	6223      	str	r3, [r4, #32]
 80075c4:	4b04      	ldr	r3, [pc, #16]	@ (80075d8 <__sinit+0x2c>)
 80075c6:	681b      	ldr	r3, [r3, #0]
 80075c8:	2b00      	cmp	r3, #0
 80075ca:	d1f5      	bne.n	80075b8 <__sinit+0xc>
 80075cc:	f7ff ffc4 	bl	8007558 <global_stdio_init.part.0>
 80075d0:	e7f2      	b.n	80075b8 <__sinit+0xc>
 80075d2:	bf00      	nop
 80075d4:	08007519 	.word	0x08007519
 80075d8:	200004e4 	.word	0x200004e4

080075dc <_fwalk_sglue>:
 80075dc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80075e0:	4607      	mov	r7, r0
 80075e2:	4688      	mov	r8, r1
 80075e4:	4614      	mov	r4, r2
 80075e6:	2600      	movs	r6, #0
 80075e8:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80075ec:	f1b9 0901 	subs.w	r9, r9, #1
 80075f0:	d505      	bpl.n	80075fe <_fwalk_sglue+0x22>
 80075f2:	6824      	ldr	r4, [r4, #0]
 80075f4:	2c00      	cmp	r4, #0
 80075f6:	d1f7      	bne.n	80075e8 <_fwalk_sglue+0xc>
 80075f8:	4630      	mov	r0, r6
 80075fa:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80075fe:	89ab      	ldrh	r3, [r5, #12]
 8007600:	2b01      	cmp	r3, #1
 8007602:	d907      	bls.n	8007614 <_fwalk_sglue+0x38>
 8007604:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8007608:	3301      	adds	r3, #1
 800760a:	d003      	beq.n	8007614 <_fwalk_sglue+0x38>
 800760c:	4629      	mov	r1, r5
 800760e:	4638      	mov	r0, r7
 8007610:	47c0      	blx	r8
 8007612:	4306      	orrs	r6, r0
 8007614:	3568      	adds	r5, #104	@ 0x68
 8007616:	e7e9      	b.n	80075ec <_fwalk_sglue+0x10>

08007618 <iprintf>:
 8007618:	b40f      	push	{r0, r1, r2, r3}
 800761a:	b507      	push	{r0, r1, r2, lr}
 800761c:	4906      	ldr	r1, [pc, #24]	@ (8007638 <iprintf+0x20>)
 800761e:	ab04      	add	r3, sp, #16
 8007620:	6808      	ldr	r0, [r1, #0]
 8007622:	f853 2b04 	ldr.w	r2, [r3], #4
 8007626:	6881      	ldr	r1, [r0, #8]
 8007628:	9301      	str	r3, [sp, #4]
 800762a:	f000 f9fb 	bl	8007a24 <_vfiprintf_r>
 800762e:	b003      	add	sp, #12
 8007630:	f85d eb04 	ldr.w	lr, [sp], #4
 8007634:	b004      	add	sp, #16
 8007636:	4770      	bx	lr
 8007638:	20000018 	.word	0x20000018

0800763c <__sread>:
 800763c:	b510      	push	{r4, lr}
 800763e:	460c      	mov	r4, r1
 8007640:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8007644:	f000 f87a 	bl	800773c <_read_r>
 8007648:	2800      	cmp	r0, #0
 800764a:	bfab      	itete	ge
 800764c:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 800764e:	89a3      	ldrhlt	r3, [r4, #12]
 8007650:	181b      	addge	r3, r3, r0
 8007652:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 8007656:	bfac      	ite	ge
 8007658:	6563      	strge	r3, [r4, #84]	@ 0x54
 800765a:	81a3      	strhlt	r3, [r4, #12]
 800765c:	bd10      	pop	{r4, pc}

0800765e <__swrite>:
 800765e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007662:	461f      	mov	r7, r3
 8007664:	898b      	ldrh	r3, [r1, #12]
 8007666:	05db      	lsls	r3, r3, #23
 8007668:	4605      	mov	r5, r0
 800766a:	460c      	mov	r4, r1
 800766c:	4616      	mov	r6, r2
 800766e:	d505      	bpl.n	800767c <__swrite+0x1e>
 8007670:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8007674:	2302      	movs	r3, #2
 8007676:	2200      	movs	r2, #0
 8007678:	f000 f84e 	bl	8007718 <_lseek_r>
 800767c:	89a3      	ldrh	r3, [r4, #12]
 800767e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8007682:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8007686:	81a3      	strh	r3, [r4, #12]
 8007688:	4632      	mov	r2, r6
 800768a:	463b      	mov	r3, r7
 800768c:	4628      	mov	r0, r5
 800768e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8007692:	f000 b865 	b.w	8007760 <_write_r>

08007696 <__sseek>:
 8007696:	b510      	push	{r4, lr}
 8007698:	460c      	mov	r4, r1
 800769a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800769e:	f000 f83b 	bl	8007718 <_lseek_r>
 80076a2:	1c43      	adds	r3, r0, #1
 80076a4:	89a3      	ldrh	r3, [r4, #12]
 80076a6:	bf15      	itete	ne
 80076a8:	6560      	strne	r0, [r4, #84]	@ 0x54
 80076aa:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 80076ae:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 80076b2:	81a3      	strheq	r3, [r4, #12]
 80076b4:	bf18      	it	ne
 80076b6:	81a3      	strhne	r3, [r4, #12]
 80076b8:	bd10      	pop	{r4, pc}

080076ba <__sclose>:
 80076ba:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80076be:	f000 b81b 	b.w	80076f8 <_close_r>

080076c2 <memset>:
 80076c2:	4402      	add	r2, r0
 80076c4:	4603      	mov	r3, r0
 80076c6:	4293      	cmp	r3, r2
 80076c8:	d100      	bne.n	80076cc <memset+0xa>
 80076ca:	4770      	bx	lr
 80076cc:	f803 1b01 	strb.w	r1, [r3], #1
 80076d0:	e7f9      	b.n	80076c6 <memset+0x4>

080076d2 <strncmp>:
 80076d2:	b510      	push	{r4, lr}
 80076d4:	b16a      	cbz	r2, 80076f2 <strncmp+0x20>
 80076d6:	3901      	subs	r1, #1
 80076d8:	1884      	adds	r4, r0, r2
 80076da:	f810 2b01 	ldrb.w	r2, [r0], #1
 80076de:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 80076e2:	429a      	cmp	r2, r3
 80076e4:	d103      	bne.n	80076ee <strncmp+0x1c>
 80076e6:	42a0      	cmp	r0, r4
 80076e8:	d001      	beq.n	80076ee <strncmp+0x1c>
 80076ea:	2a00      	cmp	r2, #0
 80076ec:	d1f5      	bne.n	80076da <strncmp+0x8>
 80076ee:	1ad0      	subs	r0, r2, r3
 80076f0:	bd10      	pop	{r4, pc}
 80076f2:	4610      	mov	r0, r2
 80076f4:	e7fc      	b.n	80076f0 <strncmp+0x1e>
	...

080076f8 <_close_r>:
 80076f8:	b538      	push	{r3, r4, r5, lr}
 80076fa:	4d06      	ldr	r5, [pc, #24]	@ (8007714 <_close_r+0x1c>)
 80076fc:	2300      	movs	r3, #0
 80076fe:	4604      	mov	r4, r0
 8007700:	4608      	mov	r0, r1
 8007702:	602b      	str	r3, [r5, #0]
 8007704:	f7fa fc1f 	bl	8001f46 <_close>
 8007708:	1c43      	adds	r3, r0, #1
 800770a:	d102      	bne.n	8007712 <_close_r+0x1a>
 800770c:	682b      	ldr	r3, [r5, #0]
 800770e:	b103      	cbz	r3, 8007712 <_close_r+0x1a>
 8007710:	6023      	str	r3, [r4, #0]
 8007712:	bd38      	pop	{r3, r4, r5, pc}
 8007714:	200004e8 	.word	0x200004e8

08007718 <_lseek_r>:
 8007718:	b538      	push	{r3, r4, r5, lr}
 800771a:	4d07      	ldr	r5, [pc, #28]	@ (8007738 <_lseek_r+0x20>)
 800771c:	4604      	mov	r4, r0
 800771e:	4608      	mov	r0, r1
 8007720:	4611      	mov	r1, r2
 8007722:	2200      	movs	r2, #0
 8007724:	602a      	str	r2, [r5, #0]
 8007726:	461a      	mov	r2, r3
 8007728:	f7fa fc34 	bl	8001f94 <_lseek>
 800772c:	1c43      	adds	r3, r0, #1
 800772e:	d102      	bne.n	8007736 <_lseek_r+0x1e>
 8007730:	682b      	ldr	r3, [r5, #0]
 8007732:	b103      	cbz	r3, 8007736 <_lseek_r+0x1e>
 8007734:	6023      	str	r3, [r4, #0]
 8007736:	bd38      	pop	{r3, r4, r5, pc}
 8007738:	200004e8 	.word	0x200004e8

0800773c <_read_r>:
 800773c:	b538      	push	{r3, r4, r5, lr}
 800773e:	4d07      	ldr	r5, [pc, #28]	@ (800775c <_read_r+0x20>)
 8007740:	4604      	mov	r4, r0
 8007742:	4608      	mov	r0, r1
 8007744:	4611      	mov	r1, r2
 8007746:	2200      	movs	r2, #0
 8007748:	602a      	str	r2, [r5, #0]
 800774a:	461a      	mov	r2, r3
 800774c:	f7fa fbde 	bl	8001f0c <_read>
 8007750:	1c43      	adds	r3, r0, #1
 8007752:	d102      	bne.n	800775a <_read_r+0x1e>
 8007754:	682b      	ldr	r3, [r5, #0]
 8007756:	b103      	cbz	r3, 800775a <_read_r+0x1e>
 8007758:	6023      	str	r3, [r4, #0]
 800775a:	bd38      	pop	{r3, r4, r5, pc}
 800775c:	200004e8 	.word	0x200004e8

08007760 <_write_r>:
 8007760:	b538      	push	{r3, r4, r5, lr}
 8007762:	4d07      	ldr	r5, [pc, #28]	@ (8007780 <_write_r+0x20>)
 8007764:	4604      	mov	r4, r0
 8007766:	4608      	mov	r0, r1
 8007768:	4611      	mov	r1, r2
 800776a:	2200      	movs	r2, #0
 800776c:	602a      	str	r2, [r5, #0]
 800776e:	461a      	mov	r2, r3
 8007770:	f7fa f958 	bl	8001a24 <_write>
 8007774:	1c43      	adds	r3, r0, #1
 8007776:	d102      	bne.n	800777e <_write_r+0x1e>
 8007778:	682b      	ldr	r3, [r5, #0]
 800777a:	b103      	cbz	r3, 800777e <_write_r+0x1e>
 800777c:	6023      	str	r3, [r4, #0]
 800777e:	bd38      	pop	{r3, r4, r5, pc}
 8007780:	200004e8 	.word	0x200004e8

08007784 <__errno>:
 8007784:	4b01      	ldr	r3, [pc, #4]	@ (800778c <__errno+0x8>)
 8007786:	6818      	ldr	r0, [r3, #0]
 8007788:	4770      	bx	lr
 800778a:	bf00      	nop
 800778c:	20000018 	.word	0x20000018

08007790 <__libc_init_array>:
 8007790:	b570      	push	{r4, r5, r6, lr}
 8007792:	4d0d      	ldr	r5, [pc, #52]	@ (80077c8 <__libc_init_array+0x38>)
 8007794:	4c0d      	ldr	r4, [pc, #52]	@ (80077cc <__libc_init_array+0x3c>)
 8007796:	1b64      	subs	r4, r4, r5
 8007798:	10a4      	asrs	r4, r4, #2
 800779a:	2600      	movs	r6, #0
 800779c:	42a6      	cmp	r6, r4
 800779e:	d109      	bne.n	80077b4 <__libc_init_array+0x24>
 80077a0:	4d0b      	ldr	r5, [pc, #44]	@ (80077d0 <__libc_init_array+0x40>)
 80077a2:	4c0c      	ldr	r4, [pc, #48]	@ (80077d4 <__libc_init_array+0x44>)
 80077a4:	f000 fdb8 	bl	8008318 <_init>
 80077a8:	1b64      	subs	r4, r4, r5
 80077aa:	10a4      	asrs	r4, r4, #2
 80077ac:	2600      	movs	r6, #0
 80077ae:	42a6      	cmp	r6, r4
 80077b0:	d105      	bne.n	80077be <__libc_init_array+0x2e>
 80077b2:	bd70      	pop	{r4, r5, r6, pc}
 80077b4:	f855 3b04 	ldr.w	r3, [r5], #4
 80077b8:	4798      	blx	r3
 80077ba:	3601      	adds	r6, #1
 80077bc:	e7ee      	b.n	800779c <__libc_init_array+0xc>
 80077be:	f855 3b04 	ldr.w	r3, [r5], #4
 80077c2:	4798      	blx	r3
 80077c4:	3601      	adds	r6, #1
 80077c6:	e7f2      	b.n	80077ae <__libc_init_array+0x1e>
 80077c8:	08008648 	.word	0x08008648
 80077cc:	08008648 	.word	0x08008648
 80077d0:	08008648 	.word	0x08008648
 80077d4:	0800864c 	.word	0x0800864c

080077d8 <__retarget_lock_init_recursive>:
 80077d8:	4770      	bx	lr

080077da <__retarget_lock_acquire_recursive>:
 80077da:	4770      	bx	lr

080077dc <__retarget_lock_release_recursive>:
 80077dc:	4770      	bx	lr
	...

080077e0 <_free_r>:
 80077e0:	b538      	push	{r3, r4, r5, lr}
 80077e2:	4605      	mov	r5, r0
 80077e4:	2900      	cmp	r1, #0
 80077e6:	d041      	beq.n	800786c <_free_r+0x8c>
 80077e8:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80077ec:	1f0c      	subs	r4, r1, #4
 80077ee:	2b00      	cmp	r3, #0
 80077f0:	bfb8      	it	lt
 80077f2:	18e4      	addlt	r4, r4, r3
 80077f4:	f000 f8e0 	bl	80079b8 <__malloc_lock>
 80077f8:	4a1d      	ldr	r2, [pc, #116]	@ (8007870 <_free_r+0x90>)
 80077fa:	6813      	ldr	r3, [r2, #0]
 80077fc:	b933      	cbnz	r3, 800780c <_free_r+0x2c>
 80077fe:	6063      	str	r3, [r4, #4]
 8007800:	6014      	str	r4, [r2, #0]
 8007802:	4628      	mov	r0, r5
 8007804:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8007808:	f000 b8dc 	b.w	80079c4 <__malloc_unlock>
 800780c:	42a3      	cmp	r3, r4
 800780e:	d908      	bls.n	8007822 <_free_r+0x42>
 8007810:	6820      	ldr	r0, [r4, #0]
 8007812:	1821      	adds	r1, r4, r0
 8007814:	428b      	cmp	r3, r1
 8007816:	bf01      	itttt	eq
 8007818:	6819      	ldreq	r1, [r3, #0]
 800781a:	685b      	ldreq	r3, [r3, #4]
 800781c:	1809      	addeq	r1, r1, r0
 800781e:	6021      	streq	r1, [r4, #0]
 8007820:	e7ed      	b.n	80077fe <_free_r+0x1e>
 8007822:	461a      	mov	r2, r3
 8007824:	685b      	ldr	r3, [r3, #4]
 8007826:	b10b      	cbz	r3, 800782c <_free_r+0x4c>
 8007828:	42a3      	cmp	r3, r4
 800782a:	d9fa      	bls.n	8007822 <_free_r+0x42>
 800782c:	6811      	ldr	r1, [r2, #0]
 800782e:	1850      	adds	r0, r2, r1
 8007830:	42a0      	cmp	r0, r4
 8007832:	d10b      	bne.n	800784c <_free_r+0x6c>
 8007834:	6820      	ldr	r0, [r4, #0]
 8007836:	4401      	add	r1, r0
 8007838:	1850      	adds	r0, r2, r1
 800783a:	4283      	cmp	r3, r0
 800783c:	6011      	str	r1, [r2, #0]
 800783e:	d1e0      	bne.n	8007802 <_free_r+0x22>
 8007840:	6818      	ldr	r0, [r3, #0]
 8007842:	685b      	ldr	r3, [r3, #4]
 8007844:	6053      	str	r3, [r2, #4]
 8007846:	4408      	add	r0, r1
 8007848:	6010      	str	r0, [r2, #0]
 800784a:	e7da      	b.n	8007802 <_free_r+0x22>
 800784c:	d902      	bls.n	8007854 <_free_r+0x74>
 800784e:	230c      	movs	r3, #12
 8007850:	602b      	str	r3, [r5, #0]
 8007852:	e7d6      	b.n	8007802 <_free_r+0x22>
 8007854:	6820      	ldr	r0, [r4, #0]
 8007856:	1821      	adds	r1, r4, r0
 8007858:	428b      	cmp	r3, r1
 800785a:	bf04      	itt	eq
 800785c:	6819      	ldreq	r1, [r3, #0]
 800785e:	685b      	ldreq	r3, [r3, #4]
 8007860:	6063      	str	r3, [r4, #4]
 8007862:	bf04      	itt	eq
 8007864:	1809      	addeq	r1, r1, r0
 8007866:	6021      	streq	r1, [r4, #0]
 8007868:	6054      	str	r4, [r2, #4]
 800786a:	e7ca      	b.n	8007802 <_free_r+0x22>
 800786c:	bd38      	pop	{r3, r4, r5, pc}
 800786e:	bf00      	nop
 8007870:	200004f4 	.word	0x200004f4

08007874 <sbrk_aligned>:
 8007874:	b570      	push	{r4, r5, r6, lr}
 8007876:	4e0f      	ldr	r6, [pc, #60]	@ (80078b4 <sbrk_aligned+0x40>)
 8007878:	460c      	mov	r4, r1
 800787a:	6831      	ldr	r1, [r6, #0]
 800787c:	4605      	mov	r5, r0
 800787e:	b911      	cbnz	r1, 8007886 <sbrk_aligned+0x12>
 8007880:	f000 fcb6 	bl	80081f0 <_sbrk_r>
 8007884:	6030      	str	r0, [r6, #0]
 8007886:	4621      	mov	r1, r4
 8007888:	4628      	mov	r0, r5
 800788a:	f000 fcb1 	bl	80081f0 <_sbrk_r>
 800788e:	1c43      	adds	r3, r0, #1
 8007890:	d103      	bne.n	800789a <sbrk_aligned+0x26>
 8007892:	f04f 34ff 	mov.w	r4, #4294967295
 8007896:	4620      	mov	r0, r4
 8007898:	bd70      	pop	{r4, r5, r6, pc}
 800789a:	1cc4      	adds	r4, r0, #3
 800789c:	f024 0403 	bic.w	r4, r4, #3
 80078a0:	42a0      	cmp	r0, r4
 80078a2:	d0f8      	beq.n	8007896 <sbrk_aligned+0x22>
 80078a4:	1a21      	subs	r1, r4, r0
 80078a6:	4628      	mov	r0, r5
 80078a8:	f000 fca2 	bl	80081f0 <_sbrk_r>
 80078ac:	3001      	adds	r0, #1
 80078ae:	d1f2      	bne.n	8007896 <sbrk_aligned+0x22>
 80078b0:	e7ef      	b.n	8007892 <sbrk_aligned+0x1e>
 80078b2:	bf00      	nop
 80078b4:	200004f0 	.word	0x200004f0

080078b8 <_malloc_r>:
 80078b8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80078bc:	1ccd      	adds	r5, r1, #3
 80078be:	f025 0503 	bic.w	r5, r5, #3
 80078c2:	3508      	adds	r5, #8
 80078c4:	2d0c      	cmp	r5, #12
 80078c6:	bf38      	it	cc
 80078c8:	250c      	movcc	r5, #12
 80078ca:	2d00      	cmp	r5, #0
 80078cc:	4606      	mov	r6, r0
 80078ce:	db01      	blt.n	80078d4 <_malloc_r+0x1c>
 80078d0:	42a9      	cmp	r1, r5
 80078d2:	d904      	bls.n	80078de <_malloc_r+0x26>
 80078d4:	230c      	movs	r3, #12
 80078d6:	6033      	str	r3, [r6, #0]
 80078d8:	2000      	movs	r0, #0
 80078da:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80078de:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 80079b4 <_malloc_r+0xfc>
 80078e2:	f000 f869 	bl	80079b8 <__malloc_lock>
 80078e6:	f8d8 3000 	ldr.w	r3, [r8]
 80078ea:	461c      	mov	r4, r3
 80078ec:	bb44      	cbnz	r4, 8007940 <_malloc_r+0x88>
 80078ee:	4629      	mov	r1, r5
 80078f0:	4630      	mov	r0, r6
 80078f2:	f7ff ffbf 	bl	8007874 <sbrk_aligned>
 80078f6:	1c43      	adds	r3, r0, #1
 80078f8:	4604      	mov	r4, r0
 80078fa:	d158      	bne.n	80079ae <_malloc_r+0xf6>
 80078fc:	f8d8 4000 	ldr.w	r4, [r8]
 8007900:	4627      	mov	r7, r4
 8007902:	2f00      	cmp	r7, #0
 8007904:	d143      	bne.n	800798e <_malloc_r+0xd6>
 8007906:	2c00      	cmp	r4, #0
 8007908:	d04b      	beq.n	80079a2 <_malloc_r+0xea>
 800790a:	6823      	ldr	r3, [r4, #0]
 800790c:	4639      	mov	r1, r7
 800790e:	4630      	mov	r0, r6
 8007910:	eb04 0903 	add.w	r9, r4, r3
 8007914:	f000 fc6c 	bl	80081f0 <_sbrk_r>
 8007918:	4581      	cmp	r9, r0
 800791a:	d142      	bne.n	80079a2 <_malloc_r+0xea>
 800791c:	6821      	ldr	r1, [r4, #0]
 800791e:	1a6d      	subs	r5, r5, r1
 8007920:	4629      	mov	r1, r5
 8007922:	4630      	mov	r0, r6
 8007924:	f7ff ffa6 	bl	8007874 <sbrk_aligned>
 8007928:	3001      	adds	r0, #1
 800792a:	d03a      	beq.n	80079a2 <_malloc_r+0xea>
 800792c:	6823      	ldr	r3, [r4, #0]
 800792e:	442b      	add	r3, r5
 8007930:	6023      	str	r3, [r4, #0]
 8007932:	f8d8 3000 	ldr.w	r3, [r8]
 8007936:	685a      	ldr	r2, [r3, #4]
 8007938:	bb62      	cbnz	r2, 8007994 <_malloc_r+0xdc>
 800793a:	f8c8 7000 	str.w	r7, [r8]
 800793e:	e00f      	b.n	8007960 <_malloc_r+0xa8>
 8007940:	6822      	ldr	r2, [r4, #0]
 8007942:	1b52      	subs	r2, r2, r5
 8007944:	d420      	bmi.n	8007988 <_malloc_r+0xd0>
 8007946:	2a0b      	cmp	r2, #11
 8007948:	d917      	bls.n	800797a <_malloc_r+0xc2>
 800794a:	1961      	adds	r1, r4, r5
 800794c:	42a3      	cmp	r3, r4
 800794e:	6025      	str	r5, [r4, #0]
 8007950:	bf18      	it	ne
 8007952:	6059      	strne	r1, [r3, #4]
 8007954:	6863      	ldr	r3, [r4, #4]
 8007956:	bf08      	it	eq
 8007958:	f8c8 1000 	streq.w	r1, [r8]
 800795c:	5162      	str	r2, [r4, r5]
 800795e:	604b      	str	r3, [r1, #4]
 8007960:	4630      	mov	r0, r6
 8007962:	f000 f82f 	bl	80079c4 <__malloc_unlock>
 8007966:	f104 000b 	add.w	r0, r4, #11
 800796a:	1d23      	adds	r3, r4, #4
 800796c:	f020 0007 	bic.w	r0, r0, #7
 8007970:	1ac2      	subs	r2, r0, r3
 8007972:	bf1c      	itt	ne
 8007974:	1a1b      	subne	r3, r3, r0
 8007976:	50a3      	strne	r3, [r4, r2]
 8007978:	e7af      	b.n	80078da <_malloc_r+0x22>
 800797a:	6862      	ldr	r2, [r4, #4]
 800797c:	42a3      	cmp	r3, r4
 800797e:	bf0c      	ite	eq
 8007980:	f8c8 2000 	streq.w	r2, [r8]
 8007984:	605a      	strne	r2, [r3, #4]
 8007986:	e7eb      	b.n	8007960 <_malloc_r+0xa8>
 8007988:	4623      	mov	r3, r4
 800798a:	6864      	ldr	r4, [r4, #4]
 800798c:	e7ae      	b.n	80078ec <_malloc_r+0x34>
 800798e:	463c      	mov	r4, r7
 8007990:	687f      	ldr	r7, [r7, #4]
 8007992:	e7b6      	b.n	8007902 <_malloc_r+0x4a>
 8007994:	461a      	mov	r2, r3
 8007996:	685b      	ldr	r3, [r3, #4]
 8007998:	42a3      	cmp	r3, r4
 800799a:	d1fb      	bne.n	8007994 <_malloc_r+0xdc>
 800799c:	2300      	movs	r3, #0
 800799e:	6053      	str	r3, [r2, #4]
 80079a0:	e7de      	b.n	8007960 <_malloc_r+0xa8>
 80079a2:	230c      	movs	r3, #12
 80079a4:	6033      	str	r3, [r6, #0]
 80079a6:	4630      	mov	r0, r6
 80079a8:	f000 f80c 	bl	80079c4 <__malloc_unlock>
 80079ac:	e794      	b.n	80078d8 <_malloc_r+0x20>
 80079ae:	6005      	str	r5, [r0, #0]
 80079b0:	e7d6      	b.n	8007960 <_malloc_r+0xa8>
 80079b2:	bf00      	nop
 80079b4:	200004f4 	.word	0x200004f4

080079b8 <__malloc_lock>:
 80079b8:	4801      	ldr	r0, [pc, #4]	@ (80079c0 <__malloc_lock+0x8>)
 80079ba:	f7ff bf0e 	b.w	80077da <__retarget_lock_acquire_recursive>
 80079be:	bf00      	nop
 80079c0:	200004ec 	.word	0x200004ec

080079c4 <__malloc_unlock>:
 80079c4:	4801      	ldr	r0, [pc, #4]	@ (80079cc <__malloc_unlock+0x8>)
 80079c6:	f7ff bf09 	b.w	80077dc <__retarget_lock_release_recursive>
 80079ca:	bf00      	nop
 80079cc:	200004ec 	.word	0x200004ec

080079d0 <__sfputc_r>:
 80079d0:	6893      	ldr	r3, [r2, #8]
 80079d2:	3b01      	subs	r3, #1
 80079d4:	2b00      	cmp	r3, #0
 80079d6:	b410      	push	{r4}
 80079d8:	6093      	str	r3, [r2, #8]
 80079da:	da08      	bge.n	80079ee <__sfputc_r+0x1e>
 80079dc:	6994      	ldr	r4, [r2, #24]
 80079de:	42a3      	cmp	r3, r4
 80079e0:	db01      	blt.n	80079e6 <__sfputc_r+0x16>
 80079e2:	290a      	cmp	r1, #10
 80079e4:	d103      	bne.n	80079ee <__sfputc_r+0x1e>
 80079e6:	f85d 4b04 	ldr.w	r4, [sp], #4
 80079ea:	f000 bb6d 	b.w	80080c8 <__swbuf_r>
 80079ee:	6813      	ldr	r3, [r2, #0]
 80079f0:	1c58      	adds	r0, r3, #1
 80079f2:	6010      	str	r0, [r2, #0]
 80079f4:	7019      	strb	r1, [r3, #0]
 80079f6:	4608      	mov	r0, r1
 80079f8:	f85d 4b04 	ldr.w	r4, [sp], #4
 80079fc:	4770      	bx	lr

080079fe <__sfputs_r>:
 80079fe:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007a00:	4606      	mov	r6, r0
 8007a02:	460f      	mov	r7, r1
 8007a04:	4614      	mov	r4, r2
 8007a06:	18d5      	adds	r5, r2, r3
 8007a08:	42ac      	cmp	r4, r5
 8007a0a:	d101      	bne.n	8007a10 <__sfputs_r+0x12>
 8007a0c:	2000      	movs	r0, #0
 8007a0e:	e007      	b.n	8007a20 <__sfputs_r+0x22>
 8007a10:	f814 1b01 	ldrb.w	r1, [r4], #1
 8007a14:	463a      	mov	r2, r7
 8007a16:	4630      	mov	r0, r6
 8007a18:	f7ff ffda 	bl	80079d0 <__sfputc_r>
 8007a1c:	1c43      	adds	r3, r0, #1
 8007a1e:	d1f3      	bne.n	8007a08 <__sfputs_r+0xa>
 8007a20:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08007a24 <_vfiprintf_r>:
 8007a24:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007a28:	460d      	mov	r5, r1
 8007a2a:	b09d      	sub	sp, #116	@ 0x74
 8007a2c:	4614      	mov	r4, r2
 8007a2e:	4698      	mov	r8, r3
 8007a30:	4606      	mov	r6, r0
 8007a32:	b118      	cbz	r0, 8007a3c <_vfiprintf_r+0x18>
 8007a34:	6a03      	ldr	r3, [r0, #32]
 8007a36:	b90b      	cbnz	r3, 8007a3c <_vfiprintf_r+0x18>
 8007a38:	f7ff fdb8 	bl	80075ac <__sinit>
 8007a3c:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8007a3e:	07d9      	lsls	r1, r3, #31
 8007a40:	d405      	bmi.n	8007a4e <_vfiprintf_r+0x2a>
 8007a42:	89ab      	ldrh	r3, [r5, #12]
 8007a44:	059a      	lsls	r2, r3, #22
 8007a46:	d402      	bmi.n	8007a4e <_vfiprintf_r+0x2a>
 8007a48:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8007a4a:	f7ff fec6 	bl	80077da <__retarget_lock_acquire_recursive>
 8007a4e:	89ab      	ldrh	r3, [r5, #12]
 8007a50:	071b      	lsls	r3, r3, #28
 8007a52:	d501      	bpl.n	8007a58 <_vfiprintf_r+0x34>
 8007a54:	692b      	ldr	r3, [r5, #16]
 8007a56:	b99b      	cbnz	r3, 8007a80 <_vfiprintf_r+0x5c>
 8007a58:	4629      	mov	r1, r5
 8007a5a:	4630      	mov	r0, r6
 8007a5c:	f000 fb72 	bl	8008144 <__swsetup_r>
 8007a60:	b170      	cbz	r0, 8007a80 <_vfiprintf_r+0x5c>
 8007a62:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8007a64:	07dc      	lsls	r4, r3, #31
 8007a66:	d504      	bpl.n	8007a72 <_vfiprintf_r+0x4e>
 8007a68:	f04f 30ff 	mov.w	r0, #4294967295
 8007a6c:	b01d      	add	sp, #116	@ 0x74
 8007a6e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007a72:	89ab      	ldrh	r3, [r5, #12]
 8007a74:	0598      	lsls	r0, r3, #22
 8007a76:	d4f7      	bmi.n	8007a68 <_vfiprintf_r+0x44>
 8007a78:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8007a7a:	f7ff feaf 	bl	80077dc <__retarget_lock_release_recursive>
 8007a7e:	e7f3      	b.n	8007a68 <_vfiprintf_r+0x44>
 8007a80:	2300      	movs	r3, #0
 8007a82:	9309      	str	r3, [sp, #36]	@ 0x24
 8007a84:	2320      	movs	r3, #32
 8007a86:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8007a8a:	f8cd 800c 	str.w	r8, [sp, #12]
 8007a8e:	2330      	movs	r3, #48	@ 0x30
 8007a90:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 8007c40 <_vfiprintf_r+0x21c>
 8007a94:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8007a98:	f04f 0901 	mov.w	r9, #1
 8007a9c:	4623      	mov	r3, r4
 8007a9e:	469a      	mov	sl, r3
 8007aa0:	f813 2b01 	ldrb.w	r2, [r3], #1
 8007aa4:	b10a      	cbz	r2, 8007aaa <_vfiprintf_r+0x86>
 8007aa6:	2a25      	cmp	r2, #37	@ 0x25
 8007aa8:	d1f9      	bne.n	8007a9e <_vfiprintf_r+0x7a>
 8007aaa:	ebba 0b04 	subs.w	fp, sl, r4
 8007aae:	d00b      	beq.n	8007ac8 <_vfiprintf_r+0xa4>
 8007ab0:	465b      	mov	r3, fp
 8007ab2:	4622      	mov	r2, r4
 8007ab4:	4629      	mov	r1, r5
 8007ab6:	4630      	mov	r0, r6
 8007ab8:	f7ff ffa1 	bl	80079fe <__sfputs_r>
 8007abc:	3001      	adds	r0, #1
 8007abe:	f000 80a7 	beq.w	8007c10 <_vfiprintf_r+0x1ec>
 8007ac2:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8007ac4:	445a      	add	r2, fp
 8007ac6:	9209      	str	r2, [sp, #36]	@ 0x24
 8007ac8:	f89a 3000 	ldrb.w	r3, [sl]
 8007acc:	2b00      	cmp	r3, #0
 8007ace:	f000 809f 	beq.w	8007c10 <_vfiprintf_r+0x1ec>
 8007ad2:	2300      	movs	r3, #0
 8007ad4:	f04f 32ff 	mov.w	r2, #4294967295
 8007ad8:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8007adc:	f10a 0a01 	add.w	sl, sl, #1
 8007ae0:	9304      	str	r3, [sp, #16]
 8007ae2:	9307      	str	r3, [sp, #28]
 8007ae4:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8007ae8:	931a      	str	r3, [sp, #104]	@ 0x68
 8007aea:	4654      	mov	r4, sl
 8007aec:	2205      	movs	r2, #5
 8007aee:	f814 1b01 	ldrb.w	r1, [r4], #1
 8007af2:	4853      	ldr	r0, [pc, #332]	@ (8007c40 <_vfiprintf_r+0x21c>)
 8007af4:	f7f8 fb74 	bl	80001e0 <memchr>
 8007af8:	9a04      	ldr	r2, [sp, #16]
 8007afa:	b9d8      	cbnz	r0, 8007b34 <_vfiprintf_r+0x110>
 8007afc:	06d1      	lsls	r1, r2, #27
 8007afe:	bf44      	itt	mi
 8007b00:	2320      	movmi	r3, #32
 8007b02:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8007b06:	0713      	lsls	r3, r2, #28
 8007b08:	bf44      	itt	mi
 8007b0a:	232b      	movmi	r3, #43	@ 0x2b
 8007b0c:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8007b10:	f89a 3000 	ldrb.w	r3, [sl]
 8007b14:	2b2a      	cmp	r3, #42	@ 0x2a
 8007b16:	d015      	beq.n	8007b44 <_vfiprintf_r+0x120>
 8007b18:	9a07      	ldr	r2, [sp, #28]
 8007b1a:	4654      	mov	r4, sl
 8007b1c:	2000      	movs	r0, #0
 8007b1e:	f04f 0c0a 	mov.w	ip, #10
 8007b22:	4621      	mov	r1, r4
 8007b24:	f811 3b01 	ldrb.w	r3, [r1], #1
 8007b28:	3b30      	subs	r3, #48	@ 0x30
 8007b2a:	2b09      	cmp	r3, #9
 8007b2c:	d94b      	bls.n	8007bc6 <_vfiprintf_r+0x1a2>
 8007b2e:	b1b0      	cbz	r0, 8007b5e <_vfiprintf_r+0x13a>
 8007b30:	9207      	str	r2, [sp, #28]
 8007b32:	e014      	b.n	8007b5e <_vfiprintf_r+0x13a>
 8007b34:	eba0 0308 	sub.w	r3, r0, r8
 8007b38:	fa09 f303 	lsl.w	r3, r9, r3
 8007b3c:	4313      	orrs	r3, r2
 8007b3e:	9304      	str	r3, [sp, #16]
 8007b40:	46a2      	mov	sl, r4
 8007b42:	e7d2      	b.n	8007aea <_vfiprintf_r+0xc6>
 8007b44:	9b03      	ldr	r3, [sp, #12]
 8007b46:	1d19      	adds	r1, r3, #4
 8007b48:	681b      	ldr	r3, [r3, #0]
 8007b4a:	9103      	str	r1, [sp, #12]
 8007b4c:	2b00      	cmp	r3, #0
 8007b4e:	bfbb      	ittet	lt
 8007b50:	425b      	neglt	r3, r3
 8007b52:	f042 0202 	orrlt.w	r2, r2, #2
 8007b56:	9307      	strge	r3, [sp, #28]
 8007b58:	9307      	strlt	r3, [sp, #28]
 8007b5a:	bfb8      	it	lt
 8007b5c:	9204      	strlt	r2, [sp, #16]
 8007b5e:	7823      	ldrb	r3, [r4, #0]
 8007b60:	2b2e      	cmp	r3, #46	@ 0x2e
 8007b62:	d10a      	bne.n	8007b7a <_vfiprintf_r+0x156>
 8007b64:	7863      	ldrb	r3, [r4, #1]
 8007b66:	2b2a      	cmp	r3, #42	@ 0x2a
 8007b68:	d132      	bne.n	8007bd0 <_vfiprintf_r+0x1ac>
 8007b6a:	9b03      	ldr	r3, [sp, #12]
 8007b6c:	1d1a      	adds	r2, r3, #4
 8007b6e:	681b      	ldr	r3, [r3, #0]
 8007b70:	9203      	str	r2, [sp, #12]
 8007b72:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8007b76:	3402      	adds	r4, #2
 8007b78:	9305      	str	r3, [sp, #20]
 8007b7a:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 8007c50 <_vfiprintf_r+0x22c>
 8007b7e:	7821      	ldrb	r1, [r4, #0]
 8007b80:	2203      	movs	r2, #3
 8007b82:	4650      	mov	r0, sl
 8007b84:	f7f8 fb2c 	bl	80001e0 <memchr>
 8007b88:	b138      	cbz	r0, 8007b9a <_vfiprintf_r+0x176>
 8007b8a:	9b04      	ldr	r3, [sp, #16]
 8007b8c:	eba0 000a 	sub.w	r0, r0, sl
 8007b90:	2240      	movs	r2, #64	@ 0x40
 8007b92:	4082      	lsls	r2, r0
 8007b94:	4313      	orrs	r3, r2
 8007b96:	3401      	adds	r4, #1
 8007b98:	9304      	str	r3, [sp, #16]
 8007b9a:	f814 1b01 	ldrb.w	r1, [r4], #1
 8007b9e:	4829      	ldr	r0, [pc, #164]	@ (8007c44 <_vfiprintf_r+0x220>)
 8007ba0:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8007ba4:	2206      	movs	r2, #6
 8007ba6:	f7f8 fb1b 	bl	80001e0 <memchr>
 8007baa:	2800      	cmp	r0, #0
 8007bac:	d03f      	beq.n	8007c2e <_vfiprintf_r+0x20a>
 8007bae:	4b26      	ldr	r3, [pc, #152]	@ (8007c48 <_vfiprintf_r+0x224>)
 8007bb0:	bb1b      	cbnz	r3, 8007bfa <_vfiprintf_r+0x1d6>
 8007bb2:	9b03      	ldr	r3, [sp, #12]
 8007bb4:	3307      	adds	r3, #7
 8007bb6:	f023 0307 	bic.w	r3, r3, #7
 8007bba:	3308      	adds	r3, #8
 8007bbc:	9303      	str	r3, [sp, #12]
 8007bbe:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8007bc0:	443b      	add	r3, r7
 8007bc2:	9309      	str	r3, [sp, #36]	@ 0x24
 8007bc4:	e76a      	b.n	8007a9c <_vfiprintf_r+0x78>
 8007bc6:	fb0c 3202 	mla	r2, ip, r2, r3
 8007bca:	460c      	mov	r4, r1
 8007bcc:	2001      	movs	r0, #1
 8007bce:	e7a8      	b.n	8007b22 <_vfiprintf_r+0xfe>
 8007bd0:	2300      	movs	r3, #0
 8007bd2:	3401      	adds	r4, #1
 8007bd4:	9305      	str	r3, [sp, #20]
 8007bd6:	4619      	mov	r1, r3
 8007bd8:	f04f 0c0a 	mov.w	ip, #10
 8007bdc:	4620      	mov	r0, r4
 8007bde:	f810 2b01 	ldrb.w	r2, [r0], #1
 8007be2:	3a30      	subs	r2, #48	@ 0x30
 8007be4:	2a09      	cmp	r2, #9
 8007be6:	d903      	bls.n	8007bf0 <_vfiprintf_r+0x1cc>
 8007be8:	2b00      	cmp	r3, #0
 8007bea:	d0c6      	beq.n	8007b7a <_vfiprintf_r+0x156>
 8007bec:	9105      	str	r1, [sp, #20]
 8007bee:	e7c4      	b.n	8007b7a <_vfiprintf_r+0x156>
 8007bf0:	fb0c 2101 	mla	r1, ip, r1, r2
 8007bf4:	4604      	mov	r4, r0
 8007bf6:	2301      	movs	r3, #1
 8007bf8:	e7f0      	b.n	8007bdc <_vfiprintf_r+0x1b8>
 8007bfa:	ab03      	add	r3, sp, #12
 8007bfc:	9300      	str	r3, [sp, #0]
 8007bfe:	462a      	mov	r2, r5
 8007c00:	4b12      	ldr	r3, [pc, #72]	@ (8007c4c <_vfiprintf_r+0x228>)
 8007c02:	a904      	add	r1, sp, #16
 8007c04:	4630      	mov	r0, r6
 8007c06:	f3af 8000 	nop.w
 8007c0a:	4607      	mov	r7, r0
 8007c0c:	1c78      	adds	r0, r7, #1
 8007c0e:	d1d6      	bne.n	8007bbe <_vfiprintf_r+0x19a>
 8007c10:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8007c12:	07d9      	lsls	r1, r3, #31
 8007c14:	d405      	bmi.n	8007c22 <_vfiprintf_r+0x1fe>
 8007c16:	89ab      	ldrh	r3, [r5, #12]
 8007c18:	059a      	lsls	r2, r3, #22
 8007c1a:	d402      	bmi.n	8007c22 <_vfiprintf_r+0x1fe>
 8007c1c:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8007c1e:	f7ff fddd 	bl	80077dc <__retarget_lock_release_recursive>
 8007c22:	89ab      	ldrh	r3, [r5, #12]
 8007c24:	065b      	lsls	r3, r3, #25
 8007c26:	f53f af1f 	bmi.w	8007a68 <_vfiprintf_r+0x44>
 8007c2a:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8007c2c:	e71e      	b.n	8007a6c <_vfiprintf_r+0x48>
 8007c2e:	ab03      	add	r3, sp, #12
 8007c30:	9300      	str	r3, [sp, #0]
 8007c32:	462a      	mov	r2, r5
 8007c34:	4b05      	ldr	r3, [pc, #20]	@ (8007c4c <_vfiprintf_r+0x228>)
 8007c36:	a904      	add	r1, sp, #16
 8007c38:	4630      	mov	r0, r6
 8007c3a:	f000 f879 	bl	8007d30 <_printf_i>
 8007c3e:	e7e4      	b.n	8007c0a <_vfiprintf_r+0x1e6>
 8007c40:	0800860d 	.word	0x0800860d
 8007c44:	08008617 	.word	0x08008617
 8007c48:	00000000 	.word	0x00000000
 8007c4c:	080079ff 	.word	0x080079ff
 8007c50:	08008613 	.word	0x08008613

08007c54 <_printf_common>:
 8007c54:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8007c58:	4616      	mov	r6, r2
 8007c5a:	4698      	mov	r8, r3
 8007c5c:	688a      	ldr	r2, [r1, #8]
 8007c5e:	690b      	ldr	r3, [r1, #16]
 8007c60:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8007c64:	4293      	cmp	r3, r2
 8007c66:	bfb8      	it	lt
 8007c68:	4613      	movlt	r3, r2
 8007c6a:	6033      	str	r3, [r6, #0]
 8007c6c:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8007c70:	4607      	mov	r7, r0
 8007c72:	460c      	mov	r4, r1
 8007c74:	b10a      	cbz	r2, 8007c7a <_printf_common+0x26>
 8007c76:	3301      	adds	r3, #1
 8007c78:	6033      	str	r3, [r6, #0]
 8007c7a:	6823      	ldr	r3, [r4, #0]
 8007c7c:	0699      	lsls	r1, r3, #26
 8007c7e:	bf42      	ittt	mi
 8007c80:	6833      	ldrmi	r3, [r6, #0]
 8007c82:	3302      	addmi	r3, #2
 8007c84:	6033      	strmi	r3, [r6, #0]
 8007c86:	6825      	ldr	r5, [r4, #0]
 8007c88:	f015 0506 	ands.w	r5, r5, #6
 8007c8c:	d106      	bne.n	8007c9c <_printf_common+0x48>
 8007c8e:	f104 0a19 	add.w	sl, r4, #25
 8007c92:	68e3      	ldr	r3, [r4, #12]
 8007c94:	6832      	ldr	r2, [r6, #0]
 8007c96:	1a9b      	subs	r3, r3, r2
 8007c98:	42ab      	cmp	r3, r5
 8007c9a:	dc26      	bgt.n	8007cea <_printf_common+0x96>
 8007c9c:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8007ca0:	6822      	ldr	r2, [r4, #0]
 8007ca2:	3b00      	subs	r3, #0
 8007ca4:	bf18      	it	ne
 8007ca6:	2301      	movne	r3, #1
 8007ca8:	0692      	lsls	r2, r2, #26
 8007caa:	d42b      	bmi.n	8007d04 <_printf_common+0xb0>
 8007cac:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8007cb0:	4641      	mov	r1, r8
 8007cb2:	4638      	mov	r0, r7
 8007cb4:	47c8      	blx	r9
 8007cb6:	3001      	adds	r0, #1
 8007cb8:	d01e      	beq.n	8007cf8 <_printf_common+0xa4>
 8007cba:	6823      	ldr	r3, [r4, #0]
 8007cbc:	6922      	ldr	r2, [r4, #16]
 8007cbe:	f003 0306 	and.w	r3, r3, #6
 8007cc2:	2b04      	cmp	r3, #4
 8007cc4:	bf02      	ittt	eq
 8007cc6:	68e5      	ldreq	r5, [r4, #12]
 8007cc8:	6833      	ldreq	r3, [r6, #0]
 8007cca:	1aed      	subeq	r5, r5, r3
 8007ccc:	68a3      	ldr	r3, [r4, #8]
 8007cce:	bf0c      	ite	eq
 8007cd0:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8007cd4:	2500      	movne	r5, #0
 8007cd6:	4293      	cmp	r3, r2
 8007cd8:	bfc4      	itt	gt
 8007cda:	1a9b      	subgt	r3, r3, r2
 8007cdc:	18ed      	addgt	r5, r5, r3
 8007cde:	2600      	movs	r6, #0
 8007ce0:	341a      	adds	r4, #26
 8007ce2:	42b5      	cmp	r5, r6
 8007ce4:	d11a      	bne.n	8007d1c <_printf_common+0xc8>
 8007ce6:	2000      	movs	r0, #0
 8007ce8:	e008      	b.n	8007cfc <_printf_common+0xa8>
 8007cea:	2301      	movs	r3, #1
 8007cec:	4652      	mov	r2, sl
 8007cee:	4641      	mov	r1, r8
 8007cf0:	4638      	mov	r0, r7
 8007cf2:	47c8      	blx	r9
 8007cf4:	3001      	adds	r0, #1
 8007cf6:	d103      	bne.n	8007d00 <_printf_common+0xac>
 8007cf8:	f04f 30ff 	mov.w	r0, #4294967295
 8007cfc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8007d00:	3501      	adds	r5, #1
 8007d02:	e7c6      	b.n	8007c92 <_printf_common+0x3e>
 8007d04:	18e1      	adds	r1, r4, r3
 8007d06:	1c5a      	adds	r2, r3, #1
 8007d08:	2030      	movs	r0, #48	@ 0x30
 8007d0a:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8007d0e:	4422      	add	r2, r4
 8007d10:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8007d14:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8007d18:	3302      	adds	r3, #2
 8007d1a:	e7c7      	b.n	8007cac <_printf_common+0x58>
 8007d1c:	2301      	movs	r3, #1
 8007d1e:	4622      	mov	r2, r4
 8007d20:	4641      	mov	r1, r8
 8007d22:	4638      	mov	r0, r7
 8007d24:	47c8      	blx	r9
 8007d26:	3001      	adds	r0, #1
 8007d28:	d0e6      	beq.n	8007cf8 <_printf_common+0xa4>
 8007d2a:	3601      	adds	r6, #1
 8007d2c:	e7d9      	b.n	8007ce2 <_printf_common+0x8e>
	...

08007d30 <_printf_i>:
 8007d30:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8007d34:	7e0f      	ldrb	r7, [r1, #24]
 8007d36:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8007d38:	2f78      	cmp	r7, #120	@ 0x78
 8007d3a:	4691      	mov	r9, r2
 8007d3c:	4680      	mov	r8, r0
 8007d3e:	460c      	mov	r4, r1
 8007d40:	469a      	mov	sl, r3
 8007d42:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8007d46:	d807      	bhi.n	8007d58 <_printf_i+0x28>
 8007d48:	2f62      	cmp	r7, #98	@ 0x62
 8007d4a:	d80a      	bhi.n	8007d62 <_printf_i+0x32>
 8007d4c:	2f00      	cmp	r7, #0
 8007d4e:	f000 80d2 	beq.w	8007ef6 <_printf_i+0x1c6>
 8007d52:	2f58      	cmp	r7, #88	@ 0x58
 8007d54:	f000 80b9 	beq.w	8007eca <_printf_i+0x19a>
 8007d58:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8007d5c:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8007d60:	e03a      	b.n	8007dd8 <_printf_i+0xa8>
 8007d62:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8007d66:	2b15      	cmp	r3, #21
 8007d68:	d8f6      	bhi.n	8007d58 <_printf_i+0x28>
 8007d6a:	a101      	add	r1, pc, #4	@ (adr r1, 8007d70 <_printf_i+0x40>)
 8007d6c:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8007d70:	08007dc9 	.word	0x08007dc9
 8007d74:	08007ddd 	.word	0x08007ddd
 8007d78:	08007d59 	.word	0x08007d59
 8007d7c:	08007d59 	.word	0x08007d59
 8007d80:	08007d59 	.word	0x08007d59
 8007d84:	08007d59 	.word	0x08007d59
 8007d88:	08007ddd 	.word	0x08007ddd
 8007d8c:	08007d59 	.word	0x08007d59
 8007d90:	08007d59 	.word	0x08007d59
 8007d94:	08007d59 	.word	0x08007d59
 8007d98:	08007d59 	.word	0x08007d59
 8007d9c:	08007edd 	.word	0x08007edd
 8007da0:	08007e07 	.word	0x08007e07
 8007da4:	08007e97 	.word	0x08007e97
 8007da8:	08007d59 	.word	0x08007d59
 8007dac:	08007d59 	.word	0x08007d59
 8007db0:	08007eff 	.word	0x08007eff
 8007db4:	08007d59 	.word	0x08007d59
 8007db8:	08007e07 	.word	0x08007e07
 8007dbc:	08007d59 	.word	0x08007d59
 8007dc0:	08007d59 	.word	0x08007d59
 8007dc4:	08007e9f 	.word	0x08007e9f
 8007dc8:	6833      	ldr	r3, [r6, #0]
 8007dca:	1d1a      	adds	r2, r3, #4
 8007dcc:	681b      	ldr	r3, [r3, #0]
 8007dce:	6032      	str	r2, [r6, #0]
 8007dd0:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8007dd4:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8007dd8:	2301      	movs	r3, #1
 8007dda:	e09d      	b.n	8007f18 <_printf_i+0x1e8>
 8007ddc:	6833      	ldr	r3, [r6, #0]
 8007dde:	6820      	ldr	r0, [r4, #0]
 8007de0:	1d19      	adds	r1, r3, #4
 8007de2:	6031      	str	r1, [r6, #0]
 8007de4:	0606      	lsls	r6, r0, #24
 8007de6:	d501      	bpl.n	8007dec <_printf_i+0xbc>
 8007de8:	681d      	ldr	r5, [r3, #0]
 8007dea:	e003      	b.n	8007df4 <_printf_i+0xc4>
 8007dec:	0645      	lsls	r5, r0, #25
 8007dee:	d5fb      	bpl.n	8007de8 <_printf_i+0xb8>
 8007df0:	f9b3 5000 	ldrsh.w	r5, [r3]
 8007df4:	2d00      	cmp	r5, #0
 8007df6:	da03      	bge.n	8007e00 <_printf_i+0xd0>
 8007df8:	232d      	movs	r3, #45	@ 0x2d
 8007dfa:	426d      	negs	r5, r5
 8007dfc:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8007e00:	4859      	ldr	r0, [pc, #356]	@ (8007f68 <_printf_i+0x238>)
 8007e02:	230a      	movs	r3, #10
 8007e04:	e011      	b.n	8007e2a <_printf_i+0xfa>
 8007e06:	6821      	ldr	r1, [r4, #0]
 8007e08:	6833      	ldr	r3, [r6, #0]
 8007e0a:	0608      	lsls	r0, r1, #24
 8007e0c:	f853 5b04 	ldr.w	r5, [r3], #4
 8007e10:	d402      	bmi.n	8007e18 <_printf_i+0xe8>
 8007e12:	0649      	lsls	r1, r1, #25
 8007e14:	bf48      	it	mi
 8007e16:	b2ad      	uxthmi	r5, r5
 8007e18:	2f6f      	cmp	r7, #111	@ 0x6f
 8007e1a:	4853      	ldr	r0, [pc, #332]	@ (8007f68 <_printf_i+0x238>)
 8007e1c:	6033      	str	r3, [r6, #0]
 8007e1e:	bf14      	ite	ne
 8007e20:	230a      	movne	r3, #10
 8007e22:	2308      	moveq	r3, #8
 8007e24:	2100      	movs	r1, #0
 8007e26:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8007e2a:	6866      	ldr	r6, [r4, #4]
 8007e2c:	60a6      	str	r6, [r4, #8]
 8007e2e:	2e00      	cmp	r6, #0
 8007e30:	bfa2      	ittt	ge
 8007e32:	6821      	ldrge	r1, [r4, #0]
 8007e34:	f021 0104 	bicge.w	r1, r1, #4
 8007e38:	6021      	strge	r1, [r4, #0]
 8007e3a:	b90d      	cbnz	r5, 8007e40 <_printf_i+0x110>
 8007e3c:	2e00      	cmp	r6, #0
 8007e3e:	d04b      	beq.n	8007ed8 <_printf_i+0x1a8>
 8007e40:	4616      	mov	r6, r2
 8007e42:	fbb5 f1f3 	udiv	r1, r5, r3
 8007e46:	fb03 5711 	mls	r7, r3, r1, r5
 8007e4a:	5dc7      	ldrb	r7, [r0, r7]
 8007e4c:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8007e50:	462f      	mov	r7, r5
 8007e52:	42bb      	cmp	r3, r7
 8007e54:	460d      	mov	r5, r1
 8007e56:	d9f4      	bls.n	8007e42 <_printf_i+0x112>
 8007e58:	2b08      	cmp	r3, #8
 8007e5a:	d10b      	bne.n	8007e74 <_printf_i+0x144>
 8007e5c:	6823      	ldr	r3, [r4, #0]
 8007e5e:	07df      	lsls	r7, r3, #31
 8007e60:	d508      	bpl.n	8007e74 <_printf_i+0x144>
 8007e62:	6923      	ldr	r3, [r4, #16]
 8007e64:	6861      	ldr	r1, [r4, #4]
 8007e66:	4299      	cmp	r1, r3
 8007e68:	bfde      	ittt	le
 8007e6a:	2330      	movle	r3, #48	@ 0x30
 8007e6c:	f806 3c01 	strble.w	r3, [r6, #-1]
 8007e70:	f106 36ff 	addle.w	r6, r6, #4294967295
 8007e74:	1b92      	subs	r2, r2, r6
 8007e76:	6122      	str	r2, [r4, #16]
 8007e78:	f8cd a000 	str.w	sl, [sp]
 8007e7c:	464b      	mov	r3, r9
 8007e7e:	aa03      	add	r2, sp, #12
 8007e80:	4621      	mov	r1, r4
 8007e82:	4640      	mov	r0, r8
 8007e84:	f7ff fee6 	bl	8007c54 <_printf_common>
 8007e88:	3001      	adds	r0, #1
 8007e8a:	d14a      	bne.n	8007f22 <_printf_i+0x1f2>
 8007e8c:	f04f 30ff 	mov.w	r0, #4294967295
 8007e90:	b004      	add	sp, #16
 8007e92:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8007e96:	6823      	ldr	r3, [r4, #0]
 8007e98:	f043 0320 	orr.w	r3, r3, #32
 8007e9c:	6023      	str	r3, [r4, #0]
 8007e9e:	4833      	ldr	r0, [pc, #204]	@ (8007f6c <_printf_i+0x23c>)
 8007ea0:	2778      	movs	r7, #120	@ 0x78
 8007ea2:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8007ea6:	6823      	ldr	r3, [r4, #0]
 8007ea8:	6831      	ldr	r1, [r6, #0]
 8007eaa:	061f      	lsls	r7, r3, #24
 8007eac:	f851 5b04 	ldr.w	r5, [r1], #4
 8007eb0:	d402      	bmi.n	8007eb8 <_printf_i+0x188>
 8007eb2:	065f      	lsls	r7, r3, #25
 8007eb4:	bf48      	it	mi
 8007eb6:	b2ad      	uxthmi	r5, r5
 8007eb8:	6031      	str	r1, [r6, #0]
 8007eba:	07d9      	lsls	r1, r3, #31
 8007ebc:	bf44      	itt	mi
 8007ebe:	f043 0320 	orrmi.w	r3, r3, #32
 8007ec2:	6023      	strmi	r3, [r4, #0]
 8007ec4:	b11d      	cbz	r5, 8007ece <_printf_i+0x19e>
 8007ec6:	2310      	movs	r3, #16
 8007ec8:	e7ac      	b.n	8007e24 <_printf_i+0xf4>
 8007eca:	4827      	ldr	r0, [pc, #156]	@ (8007f68 <_printf_i+0x238>)
 8007ecc:	e7e9      	b.n	8007ea2 <_printf_i+0x172>
 8007ece:	6823      	ldr	r3, [r4, #0]
 8007ed0:	f023 0320 	bic.w	r3, r3, #32
 8007ed4:	6023      	str	r3, [r4, #0]
 8007ed6:	e7f6      	b.n	8007ec6 <_printf_i+0x196>
 8007ed8:	4616      	mov	r6, r2
 8007eda:	e7bd      	b.n	8007e58 <_printf_i+0x128>
 8007edc:	6833      	ldr	r3, [r6, #0]
 8007ede:	6825      	ldr	r5, [r4, #0]
 8007ee0:	6961      	ldr	r1, [r4, #20]
 8007ee2:	1d18      	adds	r0, r3, #4
 8007ee4:	6030      	str	r0, [r6, #0]
 8007ee6:	062e      	lsls	r6, r5, #24
 8007ee8:	681b      	ldr	r3, [r3, #0]
 8007eea:	d501      	bpl.n	8007ef0 <_printf_i+0x1c0>
 8007eec:	6019      	str	r1, [r3, #0]
 8007eee:	e002      	b.n	8007ef6 <_printf_i+0x1c6>
 8007ef0:	0668      	lsls	r0, r5, #25
 8007ef2:	d5fb      	bpl.n	8007eec <_printf_i+0x1bc>
 8007ef4:	8019      	strh	r1, [r3, #0]
 8007ef6:	2300      	movs	r3, #0
 8007ef8:	6123      	str	r3, [r4, #16]
 8007efa:	4616      	mov	r6, r2
 8007efc:	e7bc      	b.n	8007e78 <_printf_i+0x148>
 8007efe:	6833      	ldr	r3, [r6, #0]
 8007f00:	1d1a      	adds	r2, r3, #4
 8007f02:	6032      	str	r2, [r6, #0]
 8007f04:	681e      	ldr	r6, [r3, #0]
 8007f06:	6862      	ldr	r2, [r4, #4]
 8007f08:	2100      	movs	r1, #0
 8007f0a:	4630      	mov	r0, r6
 8007f0c:	f7f8 f968 	bl	80001e0 <memchr>
 8007f10:	b108      	cbz	r0, 8007f16 <_printf_i+0x1e6>
 8007f12:	1b80      	subs	r0, r0, r6
 8007f14:	6060      	str	r0, [r4, #4]
 8007f16:	6863      	ldr	r3, [r4, #4]
 8007f18:	6123      	str	r3, [r4, #16]
 8007f1a:	2300      	movs	r3, #0
 8007f1c:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8007f20:	e7aa      	b.n	8007e78 <_printf_i+0x148>
 8007f22:	6923      	ldr	r3, [r4, #16]
 8007f24:	4632      	mov	r2, r6
 8007f26:	4649      	mov	r1, r9
 8007f28:	4640      	mov	r0, r8
 8007f2a:	47d0      	blx	sl
 8007f2c:	3001      	adds	r0, #1
 8007f2e:	d0ad      	beq.n	8007e8c <_printf_i+0x15c>
 8007f30:	6823      	ldr	r3, [r4, #0]
 8007f32:	079b      	lsls	r3, r3, #30
 8007f34:	d413      	bmi.n	8007f5e <_printf_i+0x22e>
 8007f36:	68e0      	ldr	r0, [r4, #12]
 8007f38:	9b03      	ldr	r3, [sp, #12]
 8007f3a:	4298      	cmp	r0, r3
 8007f3c:	bfb8      	it	lt
 8007f3e:	4618      	movlt	r0, r3
 8007f40:	e7a6      	b.n	8007e90 <_printf_i+0x160>
 8007f42:	2301      	movs	r3, #1
 8007f44:	4632      	mov	r2, r6
 8007f46:	4649      	mov	r1, r9
 8007f48:	4640      	mov	r0, r8
 8007f4a:	47d0      	blx	sl
 8007f4c:	3001      	adds	r0, #1
 8007f4e:	d09d      	beq.n	8007e8c <_printf_i+0x15c>
 8007f50:	3501      	adds	r5, #1
 8007f52:	68e3      	ldr	r3, [r4, #12]
 8007f54:	9903      	ldr	r1, [sp, #12]
 8007f56:	1a5b      	subs	r3, r3, r1
 8007f58:	42ab      	cmp	r3, r5
 8007f5a:	dcf2      	bgt.n	8007f42 <_printf_i+0x212>
 8007f5c:	e7eb      	b.n	8007f36 <_printf_i+0x206>
 8007f5e:	2500      	movs	r5, #0
 8007f60:	f104 0619 	add.w	r6, r4, #25
 8007f64:	e7f5      	b.n	8007f52 <_printf_i+0x222>
 8007f66:	bf00      	nop
 8007f68:	0800861e 	.word	0x0800861e
 8007f6c:	0800862f 	.word	0x0800862f

08007f70 <__sflush_r>:
 8007f70:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8007f74:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007f78:	0716      	lsls	r6, r2, #28
 8007f7a:	4605      	mov	r5, r0
 8007f7c:	460c      	mov	r4, r1
 8007f7e:	d454      	bmi.n	800802a <__sflush_r+0xba>
 8007f80:	684b      	ldr	r3, [r1, #4]
 8007f82:	2b00      	cmp	r3, #0
 8007f84:	dc02      	bgt.n	8007f8c <__sflush_r+0x1c>
 8007f86:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8007f88:	2b00      	cmp	r3, #0
 8007f8a:	dd48      	ble.n	800801e <__sflush_r+0xae>
 8007f8c:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8007f8e:	2e00      	cmp	r6, #0
 8007f90:	d045      	beq.n	800801e <__sflush_r+0xae>
 8007f92:	2300      	movs	r3, #0
 8007f94:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8007f98:	682f      	ldr	r7, [r5, #0]
 8007f9a:	6a21      	ldr	r1, [r4, #32]
 8007f9c:	602b      	str	r3, [r5, #0]
 8007f9e:	d030      	beq.n	8008002 <__sflush_r+0x92>
 8007fa0:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8007fa2:	89a3      	ldrh	r3, [r4, #12]
 8007fa4:	0759      	lsls	r1, r3, #29
 8007fa6:	d505      	bpl.n	8007fb4 <__sflush_r+0x44>
 8007fa8:	6863      	ldr	r3, [r4, #4]
 8007faa:	1ad2      	subs	r2, r2, r3
 8007fac:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8007fae:	b10b      	cbz	r3, 8007fb4 <__sflush_r+0x44>
 8007fb0:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8007fb2:	1ad2      	subs	r2, r2, r3
 8007fb4:	2300      	movs	r3, #0
 8007fb6:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8007fb8:	6a21      	ldr	r1, [r4, #32]
 8007fba:	4628      	mov	r0, r5
 8007fbc:	47b0      	blx	r6
 8007fbe:	1c43      	adds	r3, r0, #1
 8007fc0:	89a3      	ldrh	r3, [r4, #12]
 8007fc2:	d106      	bne.n	8007fd2 <__sflush_r+0x62>
 8007fc4:	6829      	ldr	r1, [r5, #0]
 8007fc6:	291d      	cmp	r1, #29
 8007fc8:	d82b      	bhi.n	8008022 <__sflush_r+0xb2>
 8007fca:	4a2a      	ldr	r2, [pc, #168]	@ (8008074 <__sflush_r+0x104>)
 8007fcc:	410a      	asrs	r2, r1
 8007fce:	07d6      	lsls	r6, r2, #31
 8007fd0:	d427      	bmi.n	8008022 <__sflush_r+0xb2>
 8007fd2:	2200      	movs	r2, #0
 8007fd4:	6062      	str	r2, [r4, #4]
 8007fd6:	04d9      	lsls	r1, r3, #19
 8007fd8:	6922      	ldr	r2, [r4, #16]
 8007fda:	6022      	str	r2, [r4, #0]
 8007fdc:	d504      	bpl.n	8007fe8 <__sflush_r+0x78>
 8007fde:	1c42      	adds	r2, r0, #1
 8007fe0:	d101      	bne.n	8007fe6 <__sflush_r+0x76>
 8007fe2:	682b      	ldr	r3, [r5, #0]
 8007fe4:	b903      	cbnz	r3, 8007fe8 <__sflush_r+0x78>
 8007fe6:	6560      	str	r0, [r4, #84]	@ 0x54
 8007fe8:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8007fea:	602f      	str	r7, [r5, #0]
 8007fec:	b1b9      	cbz	r1, 800801e <__sflush_r+0xae>
 8007fee:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8007ff2:	4299      	cmp	r1, r3
 8007ff4:	d002      	beq.n	8007ffc <__sflush_r+0x8c>
 8007ff6:	4628      	mov	r0, r5
 8007ff8:	f7ff fbf2 	bl	80077e0 <_free_r>
 8007ffc:	2300      	movs	r3, #0
 8007ffe:	6363      	str	r3, [r4, #52]	@ 0x34
 8008000:	e00d      	b.n	800801e <__sflush_r+0xae>
 8008002:	2301      	movs	r3, #1
 8008004:	4628      	mov	r0, r5
 8008006:	47b0      	blx	r6
 8008008:	4602      	mov	r2, r0
 800800a:	1c50      	adds	r0, r2, #1
 800800c:	d1c9      	bne.n	8007fa2 <__sflush_r+0x32>
 800800e:	682b      	ldr	r3, [r5, #0]
 8008010:	2b00      	cmp	r3, #0
 8008012:	d0c6      	beq.n	8007fa2 <__sflush_r+0x32>
 8008014:	2b1d      	cmp	r3, #29
 8008016:	d001      	beq.n	800801c <__sflush_r+0xac>
 8008018:	2b16      	cmp	r3, #22
 800801a:	d11e      	bne.n	800805a <__sflush_r+0xea>
 800801c:	602f      	str	r7, [r5, #0]
 800801e:	2000      	movs	r0, #0
 8008020:	e022      	b.n	8008068 <__sflush_r+0xf8>
 8008022:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8008026:	b21b      	sxth	r3, r3
 8008028:	e01b      	b.n	8008062 <__sflush_r+0xf2>
 800802a:	690f      	ldr	r7, [r1, #16]
 800802c:	2f00      	cmp	r7, #0
 800802e:	d0f6      	beq.n	800801e <__sflush_r+0xae>
 8008030:	0793      	lsls	r3, r2, #30
 8008032:	680e      	ldr	r6, [r1, #0]
 8008034:	bf08      	it	eq
 8008036:	694b      	ldreq	r3, [r1, #20]
 8008038:	600f      	str	r7, [r1, #0]
 800803a:	bf18      	it	ne
 800803c:	2300      	movne	r3, #0
 800803e:	eba6 0807 	sub.w	r8, r6, r7
 8008042:	608b      	str	r3, [r1, #8]
 8008044:	f1b8 0f00 	cmp.w	r8, #0
 8008048:	dde9      	ble.n	800801e <__sflush_r+0xae>
 800804a:	6a21      	ldr	r1, [r4, #32]
 800804c:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 800804e:	4643      	mov	r3, r8
 8008050:	463a      	mov	r2, r7
 8008052:	4628      	mov	r0, r5
 8008054:	47b0      	blx	r6
 8008056:	2800      	cmp	r0, #0
 8008058:	dc08      	bgt.n	800806c <__sflush_r+0xfc>
 800805a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800805e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8008062:	81a3      	strh	r3, [r4, #12]
 8008064:	f04f 30ff 	mov.w	r0, #4294967295
 8008068:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800806c:	4407      	add	r7, r0
 800806e:	eba8 0800 	sub.w	r8, r8, r0
 8008072:	e7e7      	b.n	8008044 <__sflush_r+0xd4>
 8008074:	dfbffffe 	.word	0xdfbffffe

08008078 <_fflush_r>:
 8008078:	b538      	push	{r3, r4, r5, lr}
 800807a:	690b      	ldr	r3, [r1, #16]
 800807c:	4605      	mov	r5, r0
 800807e:	460c      	mov	r4, r1
 8008080:	b913      	cbnz	r3, 8008088 <_fflush_r+0x10>
 8008082:	2500      	movs	r5, #0
 8008084:	4628      	mov	r0, r5
 8008086:	bd38      	pop	{r3, r4, r5, pc}
 8008088:	b118      	cbz	r0, 8008092 <_fflush_r+0x1a>
 800808a:	6a03      	ldr	r3, [r0, #32]
 800808c:	b90b      	cbnz	r3, 8008092 <_fflush_r+0x1a>
 800808e:	f7ff fa8d 	bl	80075ac <__sinit>
 8008092:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8008096:	2b00      	cmp	r3, #0
 8008098:	d0f3      	beq.n	8008082 <_fflush_r+0xa>
 800809a:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 800809c:	07d0      	lsls	r0, r2, #31
 800809e:	d404      	bmi.n	80080aa <_fflush_r+0x32>
 80080a0:	0599      	lsls	r1, r3, #22
 80080a2:	d402      	bmi.n	80080aa <_fflush_r+0x32>
 80080a4:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80080a6:	f7ff fb98 	bl	80077da <__retarget_lock_acquire_recursive>
 80080aa:	4628      	mov	r0, r5
 80080ac:	4621      	mov	r1, r4
 80080ae:	f7ff ff5f 	bl	8007f70 <__sflush_r>
 80080b2:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 80080b4:	07da      	lsls	r2, r3, #31
 80080b6:	4605      	mov	r5, r0
 80080b8:	d4e4      	bmi.n	8008084 <_fflush_r+0xc>
 80080ba:	89a3      	ldrh	r3, [r4, #12]
 80080bc:	059b      	lsls	r3, r3, #22
 80080be:	d4e1      	bmi.n	8008084 <_fflush_r+0xc>
 80080c0:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80080c2:	f7ff fb8b 	bl	80077dc <__retarget_lock_release_recursive>
 80080c6:	e7dd      	b.n	8008084 <_fflush_r+0xc>

080080c8 <__swbuf_r>:
 80080c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80080ca:	460e      	mov	r6, r1
 80080cc:	4614      	mov	r4, r2
 80080ce:	4605      	mov	r5, r0
 80080d0:	b118      	cbz	r0, 80080da <__swbuf_r+0x12>
 80080d2:	6a03      	ldr	r3, [r0, #32]
 80080d4:	b90b      	cbnz	r3, 80080da <__swbuf_r+0x12>
 80080d6:	f7ff fa69 	bl	80075ac <__sinit>
 80080da:	69a3      	ldr	r3, [r4, #24]
 80080dc:	60a3      	str	r3, [r4, #8]
 80080de:	89a3      	ldrh	r3, [r4, #12]
 80080e0:	071a      	lsls	r2, r3, #28
 80080e2:	d501      	bpl.n	80080e8 <__swbuf_r+0x20>
 80080e4:	6923      	ldr	r3, [r4, #16]
 80080e6:	b943      	cbnz	r3, 80080fa <__swbuf_r+0x32>
 80080e8:	4621      	mov	r1, r4
 80080ea:	4628      	mov	r0, r5
 80080ec:	f000 f82a 	bl	8008144 <__swsetup_r>
 80080f0:	b118      	cbz	r0, 80080fa <__swbuf_r+0x32>
 80080f2:	f04f 37ff 	mov.w	r7, #4294967295
 80080f6:	4638      	mov	r0, r7
 80080f8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80080fa:	6823      	ldr	r3, [r4, #0]
 80080fc:	6922      	ldr	r2, [r4, #16]
 80080fe:	1a98      	subs	r0, r3, r2
 8008100:	6963      	ldr	r3, [r4, #20]
 8008102:	b2f6      	uxtb	r6, r6
 8008104:	4283      	cmp	r3, r0
 8008106:	4637      	mov	r7, r6
 8008108:	dc05      	bgt.n	8008116 <__swbuf_r+0x4e>
 800810a:	4621      	mov	r1, r4
 800810c:	4628      	mov	r0, r5
 800810e:	f7ff ffb3 	bl	8008078 <_fflush_r>
 8008112:	2800      	cmp	r0, #0
 8008114:	d1ed      	bne.n	80080f2 <__swbuf_r+0x2a>
 8008116:	68a3      	ldr	r3, [r4, #8]
 8008118:	3b01      	subs	r3, #1
 800811a:	60a3      	str	r3, [r4, #8]
 800811c:	6823      	ldr	r3, [r4, #0]
 800811e:	1c5a      	adds	r2, r3, #1
 8008120:	6022      	str	r2, [r4, #0]
 8008122:	701e      	strb	r6, [r3, #0]
 8008124:	6962      	ldr	r2, [r4, #20]
 8008126:	1c43      	adds	r3, r0, #1
 8008128:	429a      	cmp	r2, r3
 800812a:	d004      	beq.n	8008136 <__swbuf_r+0x6e>
 800812c:	89a3      	ldrh	r3, [r4, #12]
 800812e:	07db      	lsls	r3, r3, #31
 8008130:	d5e1      	bpl.n	80080f6 <__swbuf_r+0x2e>
 8008132:	2e0a      	cmp	r6, #10
 8008134:	d1df      	bne.n	80080f6 <__swbuf_r+0x2e>
 8008136:	4621      	mov	r1, r4
 8008138:	4628      	mov	r0, r5
 800813a:	f7ff ff9d 	bl	8008078 <_fflush_r>
 800813e:	2800      	cmp	r0, #0
 8008140:	d0d9      	beq.n	80080f6 <__swbuf_r+0x2e>
 8008142:	e7d6      	b.n	80080f2 <__swbuf_r+0x2a>

08008144 <__swsetup_r>:
 8008144:	b538      	push	{r3, r4, r5, lr}
 8008146:	4b29      	ldr	r3, [pc, #164]	@ (80081ec <__swsetup_r+0xa8>)
 8008148:	4605      	mov	r5, r0
 800814a:	6818      	ldr	r0, [r3, #0]
 800814c:	460c      	mov	r4, r1
 800814e:	b118      	cbz	r0, 8008158 <__swsetup_r+0x14>
 8008150:	6a03      	ldr	r3, [r0, #32]
 8008152:	b90b      	cbnz	r3, 8008158 <__swsetup_r+0x14>
 8008154:	f7ff fa2a 	bl	80075ac <__sinit>
 8008158:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800815c:	0719      	lsls	r1, r3, #28
 800815e:	d422      	bmi.n	80081a6 <__swsetup_r+0x62>
 8008160:	06da      	lsls	r2, r3, #27
 8008162:	d407      	bmi.n	8008174 <__swsetup_r+0x30>
 8008164:	2209      	movs	r2, #9
 8008166:	602a      	str	r2, [r5, #0]
 8008168:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800816c:	81a3      	strh	r3, [r4, #12]
 800816e:	f04f 30ff 	mov.w	r0, #4294967295
 8008172:	e033      	b.n	80081dc <__swsetup_r+0x98>
 8008174:	0758      	lsls	r0, r3, #29
 8008176:	d512      	bpl.n	800819e <__swsetup_r+0x5a>
 8008178:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 800817a:	b141      	cbz	r1, 800818e <__swsetup_r+0x4a>
 800817c:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8008180:	4299      	cmp	r1, r3
 8008182:	d002      	beq.n	800818a <__swsetup_r+0x46>
 8008184:	4628      	mov	r0, r5
 8008186:	f7ff fb2b 	bl	80077e0 <_free_r>
 800818a:	2300      	movs	r3, #0
 800818c:	6363      	str	r3, [r4, #52]	@ 0x34
 800818e:	89a3      	ldrh	r3, [r4, #12]
 8008190:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8008194:	81a3      	strh	r3, [r4, #12]
 8008196:	2300      	movs	r3, #0
 8008198:	6063      	str	r3, [r4, #4]
 800819a:	6923      	ldr	r3, [r4, #16]
 800819c:	6023      	str	r3, [r4, #0]
 800819e:	89a3      	ldrh	r3, [r4, #12]
 80081a0:	f043 0308 	orr.w	r3, r3, #8
 80081a4:	81a3      	strh	r3, [r4, #12]
 80081a6:	6923      	ldr	r3, [r4, #16]
 80081a8:	b94b      	cbnz	r3, 80081be <__swsetup_r+0x7a>
 80081aa:	89a3      	ldrh	r3, [r4, #12]
 80081ac:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 80081b0:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 80081b4:	d003      	beq.n	80081be <__swsetup_r+0x7a>
 80081b6:	4621      	mov	r1, r4
 80081b8:	4628      	mov	r0, r5
 80081ba:	f000 f84f 	bl	800825c <__smakebuf_r>
 80081be:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80081c2:	f013 0201 	ands.w	r2, r3, #1
 80081c6:	d00a      	beq.n	80081de <__swsetup_r+0x9a>
 80081c8:	2200      	movs	r2, #0
 80081ca:	60a2      	str	r2, [r4, #8]
 80081cc:	6962      	ldr	r2, [r4, #20]
 80081ce:	4252      	negs	r2, r2
 80081d0:	61a2      	str	r2, [r4, #24]
 80081d2:	6922      	ldr	r2, [r4, #16]
 80081d4:	b942      	cbnz	r2, 80081e8 <__swsetup_r+0xa4>
 80081d6:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 80081da:	d1c5      	bne.n	8008168 <__swsetup_r+0x24>
 80081dc:	bd38      	pop	{r3, r4, r5, pc}
 80081de:	0799      	lsls	r1, r3, #30
 80081e0:	bf58      	it	pl
 80081e2:	6962      	ldrpl	r2, [r4, #20]
 80081e4:	60a2      	str	r2, [r4, #8]
 80081e6:	e7f4      	b.n	80081d2 <__swsetup_r+0x8e>
 80081e8:	2000      	movs	r0, #0
 80081ea:	e7f7      	b.n	80081dc <__swsetup_r+0x98>
 80081ec:	20000018 	.word	0x20000018

080081f0 <_sbrk_r>:
 80081f0:	b538      	push	{r3, r4, r5, lr}
 80081f2:	4d06      	ldr	r5, [pc, #24]	@ (800820c <_sbrk_r+0x1c>)
 80081f4:	2300      	movs	r3, #0
 80081f6:	4604      	mov	r4, r0
 80081f8:	4608      	mov	r0, r1
 80081fa:	602b      	str	r3, [r5, #0]
 80081fc:	f7f9 fed8 	bl	8001fb0 <_sbrk>
 8008200:	1c43      	adds	r3, r0, #1
 8008202:	d102      	bne.n	800820a <_sbrk_r+0x1a>
 8008204:	682b      	ldr	r3, [r5, #0]
 8008206:	b103      	cbz	r3, 800820a <_sbrk_r+0x1a>
 8008208:	6023      	str	r3, [r4, #0]
 800820a:	bd38      	pop	{r3, r4, r5, pc}
 800820c:	200004e8 	.word	0x200004e8

08008210 <__swhatbuf_r>:
 8008210:	b570      	push	{r4, r5, r6, lr}
 8008212:	460c      	mov	r4, r1
 8008214:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8008218:	2900      	cmp	r1, #0
 800821a:	b096      	sub	sp, #88	@ 0x58
 800821c:	4615      	mov	r5, r2
 800821e:	461e      	mov	r6, r3
 8008220:	da0d      	bge.n	800823e <__swhatbuf_r+0x2e>
 8008222:	89a3      	ldrh	r3, [r4, #12]
 8008224:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8008228:	f04f 0100 	mov.w	r1, #0
 800822c:	bf14      	ite	ne
 800822e:	2340      	movne	r3, #64	@ 0x40
 8008230:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 8008234:	2000      	movs	r0, #0
 8008236:	6031      	str	r1, [r6, #0]
 8008238:	602b      	str	r3, [r5, #0]
 800823a:	b016      	add	sp, #88	@ 0x58
 800823c:	bd70      	pop	{r4, r5, r6, pc}
 800823e:	466a      	mov	r2, sp
 8008240:	f000 f848 	bl	80082d4 <_fstat_r>
 8008244:	2800      	cmp	r0, #0
 8008246:	dbec      	blt.n	8008222 <__swhatbuf_r+0x12>
 8008248:	9901      	ldr	r1, [sp, #4]
 800824a:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 800824e:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 8008252:	4259      	negs	r1, r3
 8008254:	4159      	adcs	r1, r3
 8008256:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800825a:	e7eb      	b.n	8008234 <__swhatbuf_r+0x24>

0800825c <__smakebuf_r>:
 800825c:	898b      	ldrh	r3, [r1, #12]
 800825e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8008260:	079d      	lsls	r5, r3, #30
 8008262:	4606      	mov	r6, r0
 8008264:	460c      	mov	r4, r1
 8008266:	d507      	bpl.n	8008278 <__smakebuf_r+0x1c>
 8008268:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 800826c:	6023      	str	r3, [r4, #0]
 800826e:	6123      	str	r3, [r4, #16]
 8008270:	2301      	movs	r3, #1
 8008272:	6163      	str	r3, [r4, #20]
 8008274:	b003      	add	sp, #12
 8008276:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008278:	ab01      	add	r3, sp, #4
 800827a:	466a      	mov	r2, sp
 800827c:	f7ff ffc8 	bl	8008210 <__swhatbuf_r>
 8008280:	9f00      	ldr	r7, [sp, #0]
 8008282:	4605      	mov	r5, r0
 8008284:	4639      	mov	r1, r7
 8008286:	4630      	mov	r0, r6
 8008288:	f7ff fb16 	bl	80078b8 <_malloc_r>
 800828c:	b948      	cbnz	r0, 80082a2 <__smakebuf_r+0x46>
 800828e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8008292:	059a      	lsls	r2, r3, #22
 8008294:	d4ee      	bmi.n	8008274 <__smakebuf_r+0x18>
 8008296:	f023 0303 	bic.w	r3, r3, #3
 800829a:	f043 0302 	orr.w	r3, r3, #2
 800829e:	81a3      	strh	r3, [r4, #12]
 80082a0:	e7e2      	b.n	8008268 <__smakebuf_r+0xc>
 80082a2:	89a3      	ldrh	r3, [r4, #12]
 80082a4:	6020      	str	r0, [r4, #0]
 80082a6:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80082aa:	81a3      	strh	r3, [r4, #12]
 80082ac:	9b01      	ldr	r3, [sp, #4]
 80082ae:	e9c4 0704 	strd	r0, r7, [r4, #16]
 80082b2:	b15b      	cbz	r3, 80082cc <__smakebuf_r+0x70>
 80082b4:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80082b8:	4630      	mov	r0, r6
 80082ba:	f000 f81d 	bl	80082f8 <_isatty_r>
 80082be:	b128      	cbz	r0, 80082cc <__smakebuf_r+0x70>
 80082c0:	89a3      	ldrh	r3, [r4, #12]
 80082c2:	f023 0303 	bic.w	r3, r3, #3
 80082c6:	f043 0301 	orr.w	r3, r3, #1
 80082ca:	81a3      	strh	r3, [r4, #12]
 80082cc:	89a3      	ldrh	r3, [r4, #12]
 80082ce:	431d      	orrs	r5, r3
 80082d0:	81a5      	strh	r5, [r4, #12]
 80082d2:	e7cf      	b.n	8008274 <__smakebuf_r+0x18>

080082d4 <_fstat_r>:
 80082d4:	b538      	push	{r3, r4, r5, lr}
 80082d6:	4d07      	ldr	r5, [pc, #28]	@ (80082f4 <_fstat_r+0x20>)
 80082d8:	2300      	movs	r3, #0
 80082da:	4604      	mov	r4, r0
 80082dc:	4608      	mov	r0, r1
 80082de:	4611      	mov	r1, r2
 80082e0:	602b      	str	r3, [r5, #0]
 80082e2:	f7f9 fe3c 	bl	8001f5e <_fstat>
 80082e6:	1c43      	adds	r3, r0, #1
 80082e8:	d102      	bne.n	80082f0 <_fstat_r+0x1c>
 80082ea:	682b      	ldr	r3, [r5, #0]
 80082ec:	b103      	cbz	r3, 80082f0 <_fstat_r+0x1c>
 80082ee:	6023      	str	r3, [r4, #0]
 80082f0:	bd38      	pop	{r3, r4, r5, pc}
 80082f2:	bf00      	nop
 80082f4:	200004e8 	.word	0x200004e8

080082f8 <_isatty_r>:
 80082f8:	b538      	push	{r3, r4, r5, lr}
 80082fa:	4d06      	ldr	r5, [pc, #24]	@ (8008314 <_isatty_r+0x1c>)
 80082fc:	2300      	movs	r3, #0
 80082fe:	4604      	mov	r4, r0
 8008300:	4608      	mov	r0, r1
 8008302:	602b      	str	r3, [r5, #0]
 8008304:	f7f9 fe3b 	bl	8001f7e <_isatty>
 8008308:	1c43      	adds	r3, r0, #1
 800830a:	d102      	bne.n	8008312 <_isatty_r+0x1a>
 800830c:	682b      	ldr	r3, [r5, #0]
 800830e:	b103      	cbz	r3, 8008312 <_isatty_r+0x1a>
 8008310:	6023      	str	r3, [r4, #0]
 8008312:	bd38      	pop	{r3, r4, r5, pc}
 8008314:	200004e8 	.word	0x200004e8

08008318 <_init>:
 8008318:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800831a:	bf00      	nop
 800831c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800831e:	bc08      	pop	{r3}
 8008320:	469e      	mov	lr, r3
 8008322:	4770      	bx	lr

08008324 <_fini>:
 8008324:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008326:	bf00      	nop
 8008328:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800832a:	bc08      	pop	{r3}
 800832c:	469e      	mov	lr, r3
 800832e:	4770      	bx	lr
