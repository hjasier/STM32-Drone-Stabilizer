
FlightController.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000a334  08000190  08000190  00001190  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000550  0800a4c8  0800a4c8  0000b4c8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800aa18  0800aa18  0000c1d4  2**0
                  CONTENTS
  4 .ARM          00000008  0800aa18  0800aa18  0000ba18  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  0800aa20  0800aa20  0000c1d4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800aa20  0800aa20  0000ba20  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  0800aa24  0800aa24  0000ba24  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         000001d4  20000000  0800aa28  0000c000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  0000c1d4  2**0
                  CONTENTS
 10 .bss          000004c0  200001d4  200001d4  0000c1d4  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  20000694  20000694  0000c1d4  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  0000c1d4  2**0
                  CONTENTS, READONLY
 13 .debug_info   00014bfc  00000000  00000000  0000c204  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00002eca  00000000  00000000  00020e00  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000011f0  00000000  00000000  00023cd0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00000e14  00000000  00000000  00024ec0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  0001d4a1  00000000  00000000  00025cd4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00017dc3  00000000  00000000  00043175  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000a8895  00000000  00000000  0005af38  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  001037cd  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00005c84  00000000  00000000  00103810  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 00000097  00000000  00000000  00109494  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000190 <__do_global_dtors_aux>:
 8000190:	b510      	push	{r4, lr}
 8000192:	4c05      	ldr	r4, [pc, #20]	@ (80001a8 <__do_global_dtors_aux+0x18>)
 8000194:	7823      	ldrb	r3, [r4, #0]
 8000196:	b933      	cbnz	r3, 80001a6 <__do_global_dtors_aux+0x16>
 8000198:	4b04      	ldr	r3, [pc, #16]	@ (80001ac <__do_global_dtors_aux+0x1c>)
 800019a:	b113      	cbz	r3, 80001a2 <__do_global_dtors_aux+0x12>
 800019c:	4804      	ldr	r0, [pc, #16]	@ (80001b0 <__do_global_dtors_aux+0x20>)
 800019e:	f3af 8000 	nop.w
 80001a2:	2301      	movs	r3, #1
 80001a4:	7023      	strb	r3, [r4, #0]
 80001a6:	bd10      	pop	{r4, pc}
 80001a8:	200001d4 	.word	0x200001d4
 80001ac:	00000000 	.word	0x00000000
 80001b0:	0800a4ac 	.word	0x0800a4ac

080001b4 <frame_dummy>:
 80001b4:	b508      	push	{r3, lr}
 80001b6:	4b03      	ldr	r3, [pc, #12]	@ (80001c4 <frame_dummy+0x10>)
 80001b8:	b11b      	cbz	r3, 80001c2 <frame_dummy+0xe>
 80001ba:	4903      	ldr	r1, [pc, #12]	@ (80001c8 <frame_dummy+0x14>)
 80001bc:	4803      	ldr	r0, [pc, #12]	@ (80001cc <frame_dummy+0x18>)
 80001be:	f3af 8000 	nop.w
 80001c2:	bd08      	pop	{r3, pc}
 80001c4:	00000000 	.word	0x00000000
 80001c8:	200001d8 	.word	0x200001d8
 80001cc:	0800a4ac 	.word	0x0800a4ac

080001d0 <memchr>:
 80001d0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 80001d4:	2a10      	cmp	r2, #16
 80001d6:	db2b      	blt.n	8000230 <memchr+0x60>
 80001d8:	f010 0f07 	tst.w	r0, #7
 80001dc:	d008      	beq.n	80001f0 <memchr+0x20>
 80001de:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001e2:	3a01      	subs	r2, #1
 80001e4:	428b      	cmp	r3, r1
 80001e6:	d02d      	beq.n	8000244 <memchr+0x74>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	b342      	cbz	r2, 8000240 <memchr+0x70>
 80001ee:	d1f6      	bne.n	80001de <memchr+0xe>
 80001f0:	b4f0      	push	{r4, r5, r6, r7}
 80001f2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80001f6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80001fa:	f022 0407 	bic.w	r4, r2, #7
 80001fe:	f07f 0700 	mvns.w	r7, #0
 8000202:	2300      	movs	r3, #0
 8000204:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000208:	3c08      	subs	r4, #8
 800020a:	ea85 0501 	eor.w	r5, r5, r1
 800020e:	ea86 0601 	eor.w	r6, r6, r1
 8000212:	fa85 f547 	uadd8	r5, r5, r7
 8000216:	faa3 f587 	sel	r5, r3, r7
 800021a:	fa86 f647 	uadd8	r6, r6, r7
 800021e:	faa5 f687 	sel	r6, r5, r7
 8000222:	b98e      	cbnz	r6, 8000248 <memchr+0x78>
 8000224:	d1ee      	bne.n	8000204 <memchr+0x34>
 8000226:	bcf0      	pop	{r4, r5, r6, r7}
 8000228:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800022c:	f002 0207 	and.w	r2, r2, #7
 8000230:	b132      	cbz	r2, 8000240 <memchr+0x70>
 8000232:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000236:	3a01      	subs	r2, #1
 8000238:	ea83 0301 	eor.w	r3, r3, r1
 800023c:	b113      	cbz	r3, 8000244 <memchr+0x74>
 800023e:	d1f8      	bne.n	8000232 <memchr+0x62>
 8000240:	2000      	movs	r0, #0
 8000242:	4770      	bx	lr
 8000244:	3801      	subs	r0, #1
 8000246:	4770      	bx	lr
 8000248:	2d00      	cmp	r5, #0
 800024a:	bf06      	itte	eq
 800024c:	4635      	moveq	r5, r6
 800024e:	3803      	subeq	r0, #3
 8000250:	3807      	subne	r0, #7
 8000252:	f015 0f01 	tst.w	r5, #1
 8000256:	d107      	bne.n	8000268 <memchr+0x98>
 8000258:	3001      	adds	r0, #1
 800025a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800025e:	bf02      	ittt	eq
 8000260:	3001      	addeq	r0, #1
 8000262:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000266:	3001      	addeq	r0, #1
 8000268:	bcf0      	pop	{r4, r5, r6, r7}
 800026a:	3801      	subs	r0, #1
 800026c:	4770      	bx	lr
 800026e:	bf00      	nop

08000270 <strlen>:
 8000270:	4603      	mov	r3, r0
 8000272:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000276:	2a00      	cmp	r2, #0
 8000278:	d1fb      	bne.n	8000272 <strlen+0x2>
 800027a:	1a18      	subs	r0, r3, r0
 800027c:	3801      	subs	r0, #1
 800027e:	4770      	bx	lr

08000280 <__aeabi_drsub>:
 8000280:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 8000284:	e002      	b.n	800028c <__adddf3>
 8000286:	bf00      	nop

08000288 <__aeabi_dsub>:
 8000288:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

0800028c <__adddf3>:
 800028c:	b530      	push	{r4, r5, lr}
 800028e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000292:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000296:	ea94 0f05 	teq	r4, r5
 800029a:	bf08      	it	eq
 800029c:	ea90 0f02 	teqeq	r0, r2
 80002a0:	bf1f      	itttt	ne
 80002a2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002a6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002aa:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002ae:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002b2:	f000 80e2 	beq.w	800047a <__adddf3+0x1ee>
 80002b6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002ba:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002be:	bfb8      	it	lt
 80002c0:	426d      	neglt	r5, r5
 80002c2:	dd0c      	ble.n	80002de <__adddf3+0x52>
 80002c4:	442c      	add	r4, r5
 80002c6:	ea80 0202 	eor.w	r2, r0, r2
 80002ca:	ea81 0303 	eor.w	r3, r1, r3
 80002ce:	ea82 0000 	eor.w	r0, r2, r0
 80002d2:	ea83 0101 	eor.w	r1, r3, r1
 80002d6:	ea80 0202 	eor.w	r2, r0, r2
 80002da:	ea81 0303 	eor.w	r3, r1, r3
 80002de:	2d36      	cmp	r5, #54	@ 0x36
 80002e0:	bf88      	it	hi
 80002e2:	bd30      	pophi	{r4, r5, pc}
 80002e4:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 80002e8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80002ec:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 80002f0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80002f4:	d002      	beq.n	80002fc <__adddf3+0x70>
 80002f6:	4240      	negs	r0, r0
 80002f8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80002fc:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 8000300:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000304:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000308:	d002      	beq.n	8000310 <__adddf3+0x84>
 800030a:	4252      	negs	r2, r2
 800030c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000310:	ea94 0f05 	teq	r4, r5
 8000314:	f000 80a7 	beq.w	8000466 <__adddf3+0x1da>
 8000318:	f1a4 0401 	sub.w	r4, r4, #1
 800031c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000320:	db0d      	blt.n	800033e <__adddf3+0xb2>
 8000322:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000326:	fa22 f205 	lsr.w	r2, r2, r5
 800032a:	1880      	adds	r0, r0, r2
 800032c:	f141 0100 	adc.w	r1, r1, #0
 8000330:	fa03 f20e 	lsl.w	r2, r3, lr
 8000334:	1880      	adds	r0, r0, r2
 8000336:	fa43 f305 	asr.w	r3, r3, r5
 800033a:	4159      	adcs	r1, r3
 800033c:	e00e      	b.n	800035c <__adddf3+0xd0>
 800033e:	f1a5 0520 	sub.w	r5, r5, #32
 8000342:	f10e 0e20 	add.w	lr, lr, #32
 8000346:	2a01      	cmp	r2, #1
 8000348:	fa03 fc0e 	lsl.w	ip, r3, lr
 800034c:	bf28      	it	cs
 800034e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000352:	fa43 f305 	asr.w	r3, r3, r5
 8000356:	18c0      	adds	r0, r0, r3
 8000358:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800035c:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000360:	d507      	bpl.n	8000372 <__adddf3+0xe6>
 8000362:	f04f 0e00 	mov.w	lr, #0
 8000366:	f1dc 0c00 	rsbs	ip, ip, #0
 800036a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800036e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000372:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 8000376:	d31b      	bcc.n	80003b0 <__adddf3+0x124>
 8000378:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 800037c:	d30c      	bcc.n	8000398 <__adddf3+0x10c>
 800037e:	0849      	lsrs	r1, r1, #1
 8000380:	ea5f 0030 	movs.w	r0, r0, rrx
 8000384:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000388:	f104 0401 	add.w	r4, r4, #1
 800038c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000390:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 8000394:	f080 809a 	bcs.w	80004cc <__adddf3+0x240>
 8000398:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 800039c:	bf08      	it	eq
 800039e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003a2:	f150 0000 	adcs.w	r0, r0, #0
 80003a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003aa:	ea41 0105 	orr.w	r1, r1, r5
 80003ae:	bd30      	pop	{r4, r5, pc}
 80003b0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003b4:	4140      	adcs	r0, r0
 80003b6:	eb41 0101 	adc.w	r1, r1, r1
 80003ba:	3c01      	subs	r4, #1
 80003bc:	bf28      	it	cs
 80003be:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 80003c2:	d2e9      	bcs.n	8000398 <__adddf3+0x10c>
 80003c4:	f091 0f00 	teq	r1, #0
 80003c8:	bf04      	itt	eq
 80003ca:	4601      	moveq	r1, r0
 80003cc:	2000      	moveq	r0, #0
 80003ce:	fab1 f381 	clz	r3, r1
 80003d2:	bf08      	it	eq
 80003d4:	3320      	addeq	r3, #32
 80003d6:	f1a3 030b 	sub.w	r3, r3, #11
 80003da:	f1b3 0220 	subs.w	r2, r3, #32
 80003de:	da0c      	bge.n	80003fa <__adddf3+0x16e>
 80003e0:	320c      	adds	r2, #12
 80003e2:	dd08      	ble.n	80003f6 <__adddf3+0x16a>
 80003e4:	f102 0c14 	add.w	ip, r2, #20
 80003e8:	f1c2 020c 	rsb	r2, r2, #12
 80003ec:	fa01 f00c 	lsl.w	r0, r1, ip
 80003f0:	fa21 f102 	lsr.w	r1, r1, r2
 80003f4:	e00c      	b.n	8000410 <__adddf3+0x184>
 80003f6:	f102 0214 	add.w	r2, r2, #20
 80003fa:	bfd8      	it	le
 80003fc:	f1c2 0c20 	rsble	ip, r2, #32
 8000400:	fa01 f102 	lsl.w	r1, r1, r2
 8000404:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000408:	bfdc      	itt	le
 800040a:	ea41 010c 	orrle.w	r1, r1, ip
 800040e:	4090      	lslle	r0, r2
 8000410:	1ae4      	subs	r4, r4, r3
 8000412:	bfa2      	ittt	ge
 8000414:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000418:	4329      	orrge	r1, r5
 800041a:	bd30      	popge	{r4, r5, pc}
 800041c:	ea6f 0404 	mvn.w	r4, r4
 8000420:	3c1f      	subs	r4, #31
 8000422:	da1c      	bge.n	800045e <__adddf3+0x1d2>
 8000424:	340c      	adds	r4, #12
 8000426:	dc0e      	bgt.n	8000446 <__adddf3+0x1ba>
 8000428:	f104 0414 	add.w	r4, r4, #20
 800042c:	f1c4 0220 	rsb	r2, r4, #32
 8000430:	fa20 f004 	lsr.w	r0, r0, r4
 8000434:	fa01 f302 	lsl.w	r3, r1, r2
 8000438:	ea40 0003 	orr.w	r0, r0, r3
 800043c:	fa21 f304 	lsr.w	r3, r1, r4
 8000440:	ea45 0103 	orr.w	r1, r5, r3
 8000444:	bd30      	pop	{r4, r5, pc}
 8000446:	f1c4 040c 	rsb	r4, r4, #12
 800044a:	f1c4 0220 	rsb	r2, r4, #32
 800044e:	fa20 f002 	lsr.w	r0, r0, r2
 8000452:	fa01 f304 	lsl.w	r3, r1, r4
 8000456:	ea40 0003 	orr.w	r0, r0, r3
 800045a:	4629      	mov	r1, r5
 800045c:	bd30      	pop	{r4, r5, pc}
 800045e:	fa21 f004 	lsr.w	r0, r1, r4
 8000462:	4629      	mov	r1, r5
 8000464:	bd30      	pop	{r4, r5, pc}
 8000466:	f094 0f00 	teq	r4, #0
 800046a:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 800046e:	bf06      	itte	eq
 8000470:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 8000474:	3401      	addeq	r4, #1
 8000476:	3d01      	subne	r5, #1
 8000478:	e74e      	b.n	8000318 <__adddf3+0x8c>
 800047a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800047e:	bf18      	it	ne
 8000480:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000484:	d029      	beq.n	80004da <__adddf3+0x24e>
 8000486:	ea94 0f05 	teq	r4, r5
 800048a:	bf08      	it	eq
 800048c:	ea90 0f02 	teqeq	r0, r2
 8000490:	d005      	beq.n	800049e <__adddf3+0x212>
 8000492:	ea54 0c00 	orrs.w	ip, r4, r0
 8000496:	bf04      	itt	eq
 8000498:	4619      	moveq	r1, r3
 800049a:	4610      	moveq	r0, r2
 800049c:	bd30      	pop	{r4, r5, pc}
 800049e:	ea91 0f03 	teq	r1, r3
 80004a2:	bf1e      	ittt	ne
 80004a4:	2100      	movne	r1, #0
 80004a6:	2000      	movne	r0, #0
 80004a8:	bd30      	popne	{r4, r5, pc}
 80004aa:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004ae:	d105      	bne.n	80004bc <__adddf3+0x230>
 80004b0:	0040      	lsls	r0, r0, #1
 80004b2:	4149      	adcs	r1, r1
 80004b4:	bf28      	it	cs
 80004b6:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 80004ba:	bd30      	pop	{r4, r5, pc}
 80004bc:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 80004c0:	bf3c      	itt	cc
 80004c2:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 80004c6:	bd30      	popcc	{r4, r5, pc}
 80004c8:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80004cc:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 80004d0:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 80004d4:	f04f 0000 	mov.w	r0, #0
 80004d8:	bd30      	pop	{r4, r5, pc}
 80004da:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004de:	bf1a      	itte	ne
 80004e0:	4619      	movne	r1, r3
 80004e2:	4610      	movne	r0, r2
 80004e4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80004e8:	bf1c      	itt	ne
 80004ea:	460b      	movne	r3, r1
 80004ec:	4602      	movne	r2, r0
 80004ee:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80004f2:	bf06      	itte	eq
 80004f4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80004f8:	ea91 0f03 	teqeq	r1, r3
 80004fc:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 8000500:	bd30      	pop	{r4, r5, pc}
 8000502:	bf00      	nop

08000504 <__aeabi_ui2d>:
 8000504:	f090 0f00 	teq	r0, #0
 8000508:	bf04      	itt	eq
 800050a:	2100      	moveq	r1, #0
 800050c:	4770      	bxeq	lr
 800050e:	b530      	push	{r4, r5, lr}
 8000510:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000514:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000518:	f04f 0500 	mov.w	r5, #0
 800051c:	f04f 0100 	mov.w	r1, #0
 8000520:	e750      	b.n	80003c4 <__adddf3+0x138>
 8000522:	bf00      	nop

08000524 <__aeabi_i2d>:
 8000524:	f090 0f00 	teq	r0, #0
 8000528:	bf04      	itt	eq
 800052a:	2100      	moveq	r1, #0
 800052c:	4770      	bxeq	lr
 800052e:	b530      	push	{r4, r5, lr}
 8000530:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000534:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000538:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 800053c:	bf48      	it	mi
 800053e:	4240      	negmi	r0, r0
 8000540:	f04f 0100 	mov.w	r1, #0
 8000544:	e73e      	b.n	80003c4 <__adddf3+0x138>
 8000546:	bf00      	nop

08000548 <__aeabi_f2d>:
 8000548:	0042      	lsls	r2, r0, #1
 800054a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800054e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000552:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000556:	bf1f      	itttt	ne
 8000558:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 800055c:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 8000560:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 8000564:	4770      	bxne	lr
 8000566:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 800056a:	bf08      	it	eq
 800056c:	4770      	bxeq	lr
 800056e:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 8000572:	bf04      	itt	eq
 8000574:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 8000578:	4770      	bxeq	lr
 800057a:	b530      	push	{r4, r5, lr}
 800057c:	f44f 7460 	mov.w	r4, #896	@ 0x380
 8000580:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000584:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000588:	e71c      	b.n	80003c4 <__adddf3+0x138>
 800058a:	bf00      	nop

0800058c <__aeabi_ul2d>:
 800058c:	ea50 0201 	orrs.w	r2, r0, r1
 8000590:	bf08      	it	eq
 8000592:	4770      	bxeq	lr
 8000594:	b530      	push	{r4, r5, lr}
 8000596:	f04f 0500 	mov.w	r5, #0
 800059a:	e00a      	b.n	80005b2 <__aeabi_l2d+0x16>

0800059c <__aeabi_l2d>:
 800059c:	ea50 0201 	orrs.w	r2, r0, r1
 80005a0:	bf08      	it	eq
 80005a2:	4770      	bxeq	lr
 80005a4:	b530      	push	{r4, r5, lr}
 80005a6:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 80005aa:	d502      	bpl.n	80005b2 <__aeabi_l2d+0x16>
 80005ac:	4240      	negs	r0, r0
 80005ae:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005b2:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80005b6:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80005ba:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005be:	f43f aed8 	beq.w	8000372 <__adddf3+0xe6>
 80005c2:	f04f 0203 	mov.w	r2, #3
 80005c6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005ca:	bf18      	it	ne
 80005cc:	3203      	addne	r2, #3
 80005ce:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005d2:	bf18      	it	ne
 80005d4:	3203      	addne	r2, #3
 80005d6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005da:	f1c2 0320 	rsb	r3, r2, #32
 80005de:	fa00 fc03 	lsl.w	ip, r0, r3
 80005e2:	fa20 f002 	lsr.w	r0, r0, r2
 80005e6:	fa01 fe03 	lsl.w	lr, r1, r3
 80005ea:	ea40 000e 	orr.w	r0, r0, lr
 80005ee:	fa21 f102 	lsr.w	r1, r1, r2
 80005f2:	4414      	add	r4, r2
 80005f4:	e6bd      	b.n	8000372 <__adddf3+0xe6>
 80005f6:	bf00      	nop

080005f8 <__aeabi_dmul>:
 80005f8:	b570      	push	{r4, r5, r6, lr}
 80005fa:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 80005fe:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000602:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000606:	bf1d      	ittte	ne
 8000608:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800060c:	ea94 0f0c 	teqne	r4, ip
 8000610:	ea95 0f0c 	teqne	r5, ip
 8000614:	f000 f8de 	bleq	80007d4 <__aeabi_dmul+0x1dc>
 8000618:	442c      	add	r4, r5
 800061a:	ea81 0603 	eor.w	r6, r1, r3
 800061e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000622:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000626:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800062a:	bf18      	it	ne
 800062c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000630:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000634:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8000638:	d038      	beq.n	80006ac <__aeabi_dmul+0xb4>
 800063a:	fba0 ce02 	umull	ip, lr, r0, r2
 800063e:	f04f 0500 	mov.w	r5, #0
 8000642:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000646:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 800064a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800064e:	f04f 0600 	mov.w	r6, #0
 8000652:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000656:	f09c 0f00 	teq	ip, #0
 800065a:	bf18      	it	ne
 800065c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000660:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 8000664:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 8000668:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 800066c:	d204      	bcs.n	8000678 <__aeabi_dmul+0x80>
 800066e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000672:	416d      	adcs	r5, r5
 8000674:	eb46 0606 	adc.w	r6, r6, r6
 8000678:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800067c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000680:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000684:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000688:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800068c:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 8000690:	bf88      	it	hi
 8000692:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 8000696:	d81e      	bhi.n	80006d6 <__aeabi_dmul+0xde>
 8000698:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 800069c:	bf08      	it	eq
 800069e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006a2:	f150 0000 	adcs.w	r0, r0, #0
 80006a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006aa:	bd70      	pop	{r4, r5, r6, pc}
 80006ac:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 80006b0:	ea46 0101 	orr.w	r1, r6, r1
 80006b4:	ea40 0002 	orr.w	r0, r0, r2
 80006b8:	ea81 0103 	eor.w	r1, r1, r3
 80006bc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006c0:	bfc2      	ittt	gt
 80006c2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006c6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006ca:	bd70      	popgt	{r4, r5, r6, pc}
 80006cc:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80006d0:	f04f 0e00 	mov.w	lr, #0
 80006d4:	3c01      	subs	r4, #1
 80006d6:	f300 80ab 	bgt.w	8000830 <__aeabi_dmul+0x238>
 80006da:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 80006de:	bfde      	ittt	le
 80006e0:	2000      	movle	r0, #0
 80006e2:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 80006e6:	bd70      	pople	{r4, r5, r6, pc}
 80006e8:	f1c4 0400 	rsb	r4, r4, #0
 80006ec:	3c20      	subs	r4, #32
 80006ee:	da35      	bge.n	800075c <__aeabi_dmul+0x164>
 80006f0:	340c      	adds	r4, #12
 80006f2:	dc1b      	bgt.n	800072c <__aeabi_dmul+0x134>
 80006f4:	f104 0414 	add.w	r4, r4, #20
 80006f8:	f1c4 0520 	rsb	r5, r4, #32
 80006fc:	fa00 f305 	lsl.w	r3, r0, r5
 8000700:	fa20 f004 	lsr.w	r0, r0, r4
 8000704:	fa01 f205 	lsl.w	r2, r1, r5
 8000708:	ea40 0002 	orr.w	r0, r0, r2
 800070c:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 8000710:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000714:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000718:	fa21 f604 	lsr.w	r6, r1, r4
 800071c:	eb42 0106 	adc.w	r1, r2, r6
 8000720:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000724:	bf08      	it	eq
 8000726:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800072a:	bd70      	pop	{r4, r5, r6, pc}
 800072c:	f1c4 040c 	rsb	r4, r4, #12
 8000730:	f1c4 0520 	rsb	r5, r4, #32
 8000734:	fa00 f304 	lsl.w	r3, r0, r4
 8000738:	fa20 f005 	lsr.w	r0, r0, r5
 800073c:	fa01 f204 	lsl.w	r2, r1, r4
 8000740:	ea40 0002 	orr.w	r0, r0, r2
 8000744:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000748:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800074c:	f141 0100 	adc.w	r1, r1, #0
 8000750:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000754:	bf08      	it	eq
 8000756:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800075a:	bd70      	pop	{r4, r5, r6, pc}
 800075c:	f1c4 0520 	rsb	r5, r4, #32
 8000760:	fa00 f205 	lsl.w	r2, r0, r5
 8000764:	ea4e 0e02 	orr.w	lr, lr, r2
 8000768:	fa20 f304 	lsr.w	r3, r0, r4
 800076c:	fa01 f205 	lsl.w	r2, r1, r5
 8000770:	ea43 0302 	orr.w	r3, r3, r2
 8000774:	fa21 f004 	lsr.w	r0, r1, r4
 8000778:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 800077c:	fa21 f204 	lsr.w	r2, r1, r4
 8000780:	ea20 0002 	bic.w	r0, r0, r2
 8000784:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000788:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800078c:	bf08      	it	eq
 800078e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000792:	bd70      	pop	{r4, r5, r6, pc}
 8000794:	f094 0f00 	teq	r4, #0
 8000798:	d10f      	bne.n	80007ba <__aeabi_dmul+0x1c2>
 800079a:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 800079e:	0040      	lsls	r0, r0, #1
 80007a0:	eb41 0101 	adc.w	r1, r1, r1
 80007a4:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 80007a8:	bf08      	it	eq
 80007aa:	3c01      	subeq	r4, #1
 80007ac:	d0f7      	beq.n	800079e <__aeabi_dmul+0x1a6>
 80007ae:	ea41 0106 	orr.w	r1, r1, r6
 80007b2:	f095 0f00 	teq	r5, #0
 80007b6:	bf18      	it	ne
 80007b8:	4770      	bxne	lr
 80007ba:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 80007be:	0052      	lsls	r2, r2, #1
 80007c0:	eb43 0303 	adc.w	r3, r3, r3
 80007c4:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 80007c8:	bf08      	it	eq
 80007ca:	3d01      	subeq	r5, #1
 80007cc:	d0f7      	beq.n	80007be <__aeabi_dmul+0x1c6>
 80007ce:	ea43 0306 	orr.w	r3, r3, r6
 80007d2:	4770      	bx	lr
 80007d4:	ea94 0f0c 	teq	r4, ip
 80007d8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007dc:	bf18      	it	ne
 80007de:	ea95 0f0c 	teqne	r5, ip
 80007e2:	d00c      	beq.n	80007fe <__aeabi_dmul+0x206>
 80007e4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007e8:	bf18      	it	ne
 80007ea:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007ee:	d1d1      	bne.n	8000794 <__aeabi_dmul+0x19c>
 80007f0:	ea81 0103 	eor.w	r1, r1, r3
 80007f4:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80007f8:	f04f 0000 	mov.w	r0, #0
 80007fc:	bd70      	pop	{r4, r5, r6, pc}
 80007fe:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000802:	bf06      	itte	eq
 8000804:	4610      	moveq	r0, r2
 8000806:	4619      	moveq	r1, r3
 8000808:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800080c:	d019      	beq.n	8000842 <__aeabi_dmul+0x24a>
 800080e:	ea94 0f0c 	teq	r4, ip
 8000812:	d102      	bne.n	800081a <__aeabi_dmul+0x222>
 8000814:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000818:	d113      	bne.n	8000842 <__aeabi_dmul+0x24a>
 800081a:	ea95 0f0c 	teq	r5, ip
 800081e:	d105      	bne.n	800082c <__aeabi_dmul+0x234>
 8000820:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000824:	bf1c      	itt	ne
 8000826:	4610      	movne	r0, r2
 8000828:	4619      	movne	r1, r3
 800082a:	d10a      	bne.n	8000842 <__aeabi_dmul+0x24a>
 800082c:	ea81 0103 	eor.w	r1, r1, r3
 8000830:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000834:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000838:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800083c:	f04f 0000 	mov.w	r0, #0
 8000840:	bd70      	pop	{r4, r5, r6, pc}
 8000842:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000846:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 800084a:	bd70      	pop	{r4, r5, r6, pc}

0800084c <__aeabi_ddiv>:
 800084c:	b570      	push	{r4, r5, r6, lr}
 800084e:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000852:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000856:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800085a:	bf1d      	ittte	ne
 800085c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000860:	ea94 0f0c 	teqne	r4, ip
 8000864:	ea95 0f0c 	teqne	r5, ip
 8000868:	f000 f8a7 	bleq	80009ba <__aeabi_ddiv+0x16e>
 800086c:	eba4 0405 	sub.w	r4, r4, r5
 8000870:	ea81 0e03 	eor.w	lr, r1, r3
 8000874:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000878:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800087c:	f000 8088 	beq.w	8000990 <__aeabi_ddiv+0x144>
 8000880:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000884:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
 8000888:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800088c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000890:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000894:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000898:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 800089c:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008a0:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
 80008a4:	429d      	cmp	r5, r3
 80008a6:	bf08      	it	eq
 80008a8:	4296      	cmpeq	r6, r2
 80008aa:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
 80008ae:	f504 7440 	add.w	r4, r4, #768	@ 0x300
 80008b2:	d202      	bcs.n	80008ba <__aeabi_ddiv+0x6e>
 80008b4:	085b      	lsrs	r3, r3, #1
 80008b6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ba:	1ab6      	subs	r6, r6, r2
 80008bc:	eb65 0503 	sbc.w	r5, r5, r3
 80008c0:	085b      	lsrs	r3, r3, #1
 80008c2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008c6:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 80008ca:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
 80008ce:	ebb6 0e02 	subs.w	lr, r6, r2
 80008d2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008d6:	bf22      	ittt	cs
 80008d8:	1ab6      	subcs	r6, r6, r2
 80008da:	4675      	movcs	r5, lr
 80008dc:	ea40 000c 	orrcs.w	r0, r0, ip
 80008e0:	085b      	lsrs	r3, r3, #1
 80008e2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008e6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008ea:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008ee:	bf22      	ittt	cs
 80008f0:	1ab6      	subcs	r6, r6, r2
 80008f2:	4675      	movcs	r5, lr
 80008f4:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80008f8:	085b      	lsrs	r3, r3, #1
 80008fa:	ea4f 0232 	mov.w	r2, r2, rrx
 80008fe:	ebb6 0e02 	subs.w	lr, r6, r2
 8000902:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000906:	bf22      	ittt	cs
 8000908:	1ab6      	subcs	r6, r6, r2
 800090a:	4675      	movcs	r5, lr
 800090c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000910:	085b      	lsrs	r3, r3, #1
 8000912:	ea4f 0232 	mov.w	r2, r2, rrx
 8000916:	ebb6 0e02 	subs.w	lr, r6, r2
 800091a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800091e:	bf22      	ittt	cs
 8000920:	1ab6      	subcs	r6, r6, r2
 8000922:	4675      	movcs	r5, lr
 8000924:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000928:	ea55 0e06 	orrs.w	lr, r5, r6
 800092c:	d018      	beq.n	8000960 <__aeabi_ddiv+0x114>
 800092e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000932:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000936:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800093a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800093e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000942:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000946:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800094a:	d1c0      	bne.n	80008ce <__aeabi_ddiv+0x82>
 800094c:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000950:	d10b      	bne.n	800096a <__aeabi_ddiv+0x11e>
 8000952:	ea41 0100 	orr.w	r1, r1, r0
 8000956:	f04f 0000 	mov.w	r0, #0
 800095a:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 800095e:	e7b6      	b.n	80008ce <__aeabi_ddiv+0x82>
 8000960:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000964:	bf04      	itt	eq
 8000966:	4301      	orreq	r1, r0
 8000968:	2000      	moveq	r0, #0
 800096a:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 800096e:	bf88      	it	hi
 8000970:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 8000974:	f63f aeaf 	bhi.w	80006d6 <__aeabi_dmul+0xde>
 8000978:	ebb5 0c03 	subs.w	ip, r5, r3
 800097c:	bf04      	itt	eq
 800097e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000982:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000986:	f150 0000 	adcs.w	r0, r0, #0
 800098a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800098e:	bd70      	pop	{r4, r5, r6, pc}
 8000990:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
 8000994:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000998:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 800099c:	bfc2      	ittt	gt
 800099e:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009a2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009a6:	bd70      	popgt	{r4, r5, r6, pc}
 80009a8:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80009ac:	f04f 0e00 	mov.w	lr, #0
 80009b0:	3c01      	subs	r4, #1
 80009b2:	e690      	b.n	80006d6 <__aeabi_dmul+0xde>
 80009b4:	ea45 0e06 	orr.w	lr, r5, r6
 80009b8:	e68d      	b.n	80006d6 <__aeabi_dmul+0xde>
 80009ba:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009be:	ea94 0f0c 	teq	r4, ip
 80009c2:	bf08      	it	eq
 80009c4:	ea95 0f0c 	teqeq	r5, ip
 80009c8:	f43f af3b 	beq.w	8000842 <__aeabi_dmul+0x24a>
 80009cc:	ea94 0f0c 	teq	r4, ip
 80009d0:	d10a      	bne.n	80009e8 <__aeabi_ddiv+0x19c>
 80009d2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009d6:	f47f af34 	bne.w	8000842 <__aeabi_dmul+0x24a>
 80009da:	ea95 0f0c 	teq	r5, ip
 80009de:	f47f af25 	bne.w	800082c <__aeabi_dmul+0x234>
 80009e2:	4610      	mov	r0, r2
 80009e4:	4619      	mov	r1, r3
 80009e6:	e72c      	b.n	8000842 <__aeabi_dmul+0x24a>
 80009e8:	ea95 0f0c 	teq	r5, ip
 80009ec:	d106      	bne.n	80009fc <__aeabi_ddiv+0x1b0>
 80009ee:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80009f2:	f43f aefd 	beq.w	80007f0 <__aeabi_dmul+0x1f8>
 80009f6:	4610      	mov	r0, r2
 80009f8:	4619      	mov	r1, r3
 80009fa:	e722      	b.n	8000842 <__aeabi_dmul+0x24a>
 80009fc:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a00:	bf18      	it	ne
 8000a02:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a06:	f47f aec5 	bne.w	8000794 <__aeabi_dmul+0x19c>
 8000a0a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a0e:	f47f af0d 	bne.w	800082c <__aeabi_dmul+0x234>
 8000a12:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a16:	f47f aeeb 	bne.w	80007f0 <__aeabi_dmul+0x1f8>
 8000a1a:	e712      	b.n	8000842 <__aeabi_dmul+0x24a>

08000a1c <__gedf2>:
 8000a1c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a20:	e006      	b.n	8000a30 <__cmpdf2+0x4>
 8000a22:	bf00      	nop

08000a24 <__ledf2>:
 8000a24:	f04f 0c01 	mov.w	ip, #1
 8000a28:	e002      	b.n	8000a30 <__cmpdf2+0x4>
 8000a2a:	bf00      	nop

08000a2c <__cmpdf2>:
 8000a2c:	f04f 0c01 	mov.w	ip, #1
 8000a30:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a34:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a38:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a3c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a40:	bf18      	it	ne
 8000a42:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a46:	d01b      	beq.n	8000a80 <__cmpdf2+0x54>
 8000a48:	b001      	add	sp, #4
 8000a4a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a4e:	bf0c      	ite	eq
 8000a50:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a54:	ea91 0f03 	teqne	r1, r3
 8000a58:	bf02      	ittt	eq
 8000a5a:	ea90 0f02 	teqeq	r0, r2
 8000a5e:	2000      	moveq	r0, #0
 8000a60:	4770      	bxeq	lr
 8000a62:	f110 0f00 	cmn.w	r0, #0
 8000a66:	ea91 0f03 	teq	r1, r3
 8000a6a:	bf58      	it	pl
 8000a6c:	4299      	cmppl	r1, r3
 8000a6e:	bf08      	it	eq
 8000a70:	4290      	cmpeq	r0, r2
 8000a72:	bf2c      	ite	cs
 8000a74:	17d8      	asrcs	r0, r3, #31
 8000a76:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a7a:	f040 0001 	orr.w	r0, r0, #1
 8000a7e:	4770      	bx	lr
 8000a80:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a84:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a88:	d102      	bne.n	8000a90 <__cmpdf2+0x64>
 8000a8a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a8e:	d107      	bne.n	8000aa0 <__cmpdf2+0x74>
 8000a90:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a94:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a98:	d1d6      	bne.n	8000a48 <__cmpdf2+0x1c>
 8000a9a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000a9e:	d0d3      	beq.n	8000a48 <__cmpdf2+0x1c>
 8000aa0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000aa4:	4770      	bx	lr
 8000aa6:	bf00      	nop

08000aa8 <__aeabi_cdrcmple>:
 8000aa8:	4684      	mov	ip, r0
 8000aaa:	4610      	mov	r0, r2
 8000aac:	4662      	mov	r2, ip
 8000aae:	468c      	mov	ip, r1
 8000ab0:	4619      	mov	r1, r3
 8000ab2:	4663      	mov	r3, ip
 8000ab4:	e000      	b.n	8000ab8 <__aeabi_cdcmpeq>
 8000ab6:	bf00      	nop

08000ab8 <__aeabi_cdcmpeq>:
 8000ab8:	b501      	push	{r0, lr}
 8000aba:	f7ff ffb7 	bl	8000a2c <__cmpdf2>
 8000abe:	2800      	cmp	r0, #0
 8000ac0:	bf48      	it	mi
 8000ac2:	f110 0f00 	cmnmi.w	r0, #0
 8000ac6:	bd01      	pop	{r0, pc}

08000ac8 <__aeabi_dcmpeq>:
 8000ac8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000acc:	f7ff fff4 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000ad0:	bf0c      	ite	eq
 8000ad2:	2001      	moveq	r0, #1
 8000ad4:	2000      	movne	r0, #0
 8000ad6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000ada:	bf00      	nop

08000adc <__aeabi_dcmplt>:
 8000adc:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000ae0:	f7ff ffea 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000ae4:	bf34      	ite	cc
 8000ae6:	2001      	movcc	r0, #1
 8000ae8:	2000      	movcs	r0, #0
 8000aea:	f85d fb08 	ldr.w	pc, [sp], #8
 8000aee:	bf00      	nop

08000af0 <__aeabi_dcmple>:
 8000af0:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000af4:	f7ff ffe0 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000af8:	bf94      	ite	ls
 8000afa:	2001      	movls	r0, #1
 8000afc:	2000      	movhi	r0, #0
 8000afe:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b02:	bf00      	nop

08000b04 <__aeabi_dcmpge>:
 8000b04:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b08:	f7ff ffce 	bl	8000aa8 <__aeabi_cdrcmple>
 8000b0c:	bf94      	ite	ls
 8000b0e:	2001      	movls	r0, #1
 8000b10:	2000      	movhi	r0, #0
 8000b12:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b16:	bf00      	nop

08000b18 <__aeabi_dcmpgt>:
 8000b18:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b1c:	f7ff ffc4 	bl	8000aa8 <__aeabi_cdrcmple>
 8000b20:	bf34      	ite	cc
 8000b22:	2001      	movcc	r0, #1
 8000b24:	2000      	movcs	r0, #0
 8000b26:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b2a:	bf00      	nop

08000b2c <__aeabi_dcmpun>:
 8000b2c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b30:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b34:	d102      	bne.n	8000b3c <__aeabi_dcmpun+0x10>
 8000b36:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b3a:	d10a      	bne.n	8000b52 <__aeabi_dcmpun+0x26>
 8000b3c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b40:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b44:	d102      	bne.n	8000b4c <__aeabi_dcmpun+0x20>
 8000b46:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b4a:	d102      	bne.n	8000b52 <__aeabi_dcmpun+0x26>
 8000b4c:	f04f 0000 	mov.w	r0, #0
 8000b50:	4770      	bx	lr
 8000b52:	f04f 0001 	mov.w	r0, #1
 8000b56:	4770      	bx	lr

08000b58 <__aeabi_d2iz>:
 8000b58:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b5c:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000b60:	d215      	bcs.n	8000b8e <__aeabi_d2iz+0x36>
 8000b62:	d511      	bpl.n	8000b88 <__aeabi_d2iz+0x30>
 8000b64:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000b68:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b6c:	d912      	bls.n	8000b94 <__aeabi_d2iz+0x3c>
 8000b6e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b72:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000b76:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b7a:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000b7e:	fa23 f002 	lsr.w	r0, r3, r2
 8000b82:	bf18      	it	ne
 8000b84:	4240      	negne	r0, r0
 8000b86:	4770      	bx	lr
 8000b88:	f04f 0000 	mov.w	r0, #0
 8000b8c:	4770      	bx	lr
 8000b8e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000b92:	d105      	bne.n	8000ba0 <__aeabi_d2iz+0x48>
 8000b94:	f011 4000 	ands.w	r0, r1, #2147483648	@ 0x80000000
 8000b98:	bf08      	it	eq
 8000b9a:	f06f 4000 	mvneq.w	r0, #2147483648	@ 0x80000000
 8000b9e:	4770      	bx	lr
 8000ba0:	f04f 0000 	mov.w	r0, #0
 8000ba4:	4770      	bx	lr
 8000ba6:	bf00      	nop

08000ba8 <__aeabi_d2f>:
 8000ba8:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000bac:	f1b2 43e0 	subs.w	r3, r2, #1879048192	@ 0x70000000
 8000bb0:	bf24      	itt	cs
 8000bb2:	f5b3 1c00 	subscs.w	ip, r3, #2097152	@ 0x200000
 8000bb6:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	@ 0x1fc00000
 8000bba:	d90d      	bls.n	8000bd8 <__aeabi_d2f+0x30>
 8000bbc:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8000bc0:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000bc4:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000bc8:	f1b2 4f00 	cmp.w	r2, #2147483648	@ 0x80000000
 8000bcc:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000bd0:	bf08      	it	eq
 8000bd2:	f020 0001 	biceq.w	r0, r0, #1
 8000bd6:	4770      	bx	lr
 8000bd8:	f011 4f80 	tst.w	r1, #1073741824	@ 0x40000000
 8000bdc:	d121      	bne.n	8000c22 <__aeabi_d2f+0x7a>
 8000bde:	f113 7238 	adds.w	r2, r3, #48234496	@ 0x2e00000
 8000be2:	bfbc      	itt	lt
 8000be4:	f001 4000 	andlt.w	r0, r1, #2147483648	@ 0x80000000
 8000be8:	4770      	bxlt	lr
 8000bea:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000bee:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000bf2:	f1c2 0218 	rsb	r2, r2, #24
 8000bf6:	f1c2 0c20 	rsb	ip, r2, #32
 8000bfa:	fa10 f30c 	lsls.w	r3, r0, ip
 8000bfe:	fa20 f002 	lsr.w	r0, r0, r2
 8000c02:	bf18      	it	ne
 8000c04:	f040 0001 	orrne.w	r0, r0, #1
 8000c08:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000c0c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000c10:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000c14:	ea40 000c 	orr.w	r0, r0, ip
 8000c18:	fa23 f302 	lsr.w	r3, r3, r2
 8000c1c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000c20:	e7cc      	b.n	8000bbc <__aeabi_d2f+0x14>
 8000c22:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000c26:	d107      	bne.n	8000c38 <__aeabi_d2f+0x90>
 8000c28:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000c2c:	bf1e      	ittt	ne
 8000c2e:	f04f 40fe 	movne.w	r0, #2130706432	@ 0x7f000000
 8000c32:	f440 0040 	orrne.w	r0, r0, #12582912	@ 0xc00000
 8000c36:	4770      	bxne	lr
 8000c38:	f001 4000 	and.w	r0, r1, #2147483648	@ 0x80000000
 8000c3c:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 8000c40:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000c44:	4770      	bx	lr
 8000c46:	bf00      	nop

08000c48 <receiveControlCommand>:
    snprintf(cmd_msg, sizeof(cmd_msg), "%s\r\n", command);  // Agregar salto de línea al final del comando
    HAL_UART_Transmit(&huart1, (uint8_t*)cmd_msg, strlen(cmd_msg), HAL_MAX_DELAY);
}

// Función para recibir comandos del ESP8266
void receiveControlCommand(uint8_t *rx_buffer, uint16_t length) {
 8000c48:	b580      	push	{r7, lr}
 8000c4a:	b084      	sub	sp, #16
 8000c4c:	af00      	add	r7, sp, #0
 8000c4e:	6078      	str	r0, [r7, #4]
 8000c50:	460b      	mov	r3, r1
 8000c52:	807b      	strh	r3, [r7, #2]

	if (strncmp((char *)rx_buffer, "Dat", 3) == 0 || strncmp((char *)rx_buffer, "Men", 3) == 0) {
 8000c54:	2203      	movs	r2, #3
 8000c56:	4933      	ldr	r1, [pc, #204]	@ (8000d24 <receiveControlCommand+0xdc>)
 8000c58:	6878      	ldr	r0, [r7, #4]
 8000c5a:	f007 fcfa 	bl	8008652 <strncmp>
 8000c5e:	4603      	mov	r3, r0
 8000c60:	2b00      	cmp	r3, #0
 8000c62:	d007      	beq.n	8000c74 <receiveControlCommand+0x2c>
 8000c64:	2203      	movs	r2, #3
 8000c66:	4930      	ldr	r1, [pc, #192]	@ (8000d28 <receiveControlCommand+0xe0>)
 8000c68:	6878      	ldr	r0, [r7, #4]
 8000c6a:	f007 fcf2 	bl	8008652 <strncmp>
 8000c6e:	4603      	mov	r3, r0
 8000c70:	2b00      	cmp	r3, #0
 8000c72:	d106      	bne.n	8000c82 <receiveControlCommand+0x3a>
	    memset(rx_buffer, 0, length);  // Limpiar el buffer
 8000c74:	887b      	ldrh	r3, [r7, #2]
 8000c76:	461a      	mov	r2, r3
 8000c78:	2100      	movs	r1, #0
 8000c7a:	6878      	ldr	r0, [r7, #4]
 8000c7c:	f007 fce1 	bl	8008642 <memset>
	    return;
 8000c80:	e04d      	b.n	8000d1e <receiveControlCommand+0xd6>
	}

    printData("Comando recibido\n");
 8000c82:	482a      	ldr	r0, [pc, #168]	@ (8000d2c <receiveControlCommand+0xe4>)
 8000c84:	f001 fa5e 	bl	8002144 <printData>

    if (strncmp((char *)rx_buffer, "LED_ON", 6) == 0) {
 8000c88:	2206      	movs	r2, #6
 8000c8a:	4929      	ldr	r1, [pc, #164]	@ (8000d30 <receiveControlCommand+0xe8>)
 8000c8c:	6878      	ldr	r0, [r7, #4]
 8000c8e:	f007 fce0 	bl	8008652 <strncmp>
 8000c92:	4603      	mov	r3, r0
 8000c94:	2b00      	cmp	r3, #0
 8000c96:	d105      	bne.n	8000ca4 <receiveControlCommand+0x5c>
        // Encender el LED (PB3)
        HAL_GPIO_WritePin(GPIOB, GPIO_PIN_3, GPIO_PIN_SET);
 8000c98:	2201      	movs	r2, #1
 8000c9a:	2108      	movs	r1, #8
 8000c9c:	4825      	ldr	r0, [pc, #148]	@ (8000d34 <receiveControlCommand+0xec>)
 8000c9e:	f002 f949 	bl	8002f34 <HAL_GPIO_WritePin>
 8000ca2:	e036      	b.n	8000d12 <receiveControlCommand+0xca>
    } else if (strncmp((char *)rx_buffer, "LED_OFF", 7) == 0) {
 8000ca4:	2207      	movs	r2, #7
 8000ca6:	4924      	ldr	r1, [pc, #144]	@ (8000d38 <receiveControlCommand+0xf0>)
 8000ca8:	6878      	ldr	r0, [r7, #4]
 8000caa:	f007 fcd2 	bl	8008652 <strncmp>
 8000cae:	4603      	mov	r3, r0
 8000cb0:	2b00      	cmp	r3, #0
 8000cb2:	d105      	bne.n	8000cc0 <receiveControlCommand+0x78>
        // Apagar el LED (PB3)
        HAL_GPIO_WritePin(GPIOB, GPIO_PIN_3, GPIO_PIN_RESET);
 8000cb4:	2200      	movs	r2, #0
 8000cb6:	2108      	movs	r1, #8
 8000cb8:	481e      	ldr	r0, [pc, #120]	@ (8000d34 <receiveControlCommand+0xec>)
 8000cba:	f002 f93b 	bl	8002f34 <HAL_GPIO_WritePin>
 8000cbe:	e028      	b.n	8000d12 <receiveControlCommand+0xca>
    }

    else if (strncmp((char*) rx_buffer, "ARM", 3) == 0) {
 8000cc0:	2203      	movs	r2, #3
 8000cc2:	491e      	ldr	r1, [pc, #120]	@ (8000d3c <receiveControlCommand+0xf4>)
 8000cc4:	6878      	ldr	r0, [r7, #4]
 8000cc6:	f007 fcc4 	bl	8008652 <strncmp>
 8000cca:	4603      	mov	r3, r0
 8000ccc:	2b00      	cmp	r3, #0
 8000cce:	d102      	bne.n	8000cd6 <receiveControlCommand+0x8e>
		Control_ArmMotors();
 8000cd0:	f000 f882 	bl	8000dd8 <Control_ArmMotors>
 8000cd4:	e01d      	b.n	8000d12 <receiveControlCommand+0xca>
	} else if (strncmp((char*) rx_buffer, "STOP", 4) == 0) {
 8000cd6:	2204      	movs	r2, #4
 8000cd8:	4919      	ldr	r1, [pc, #100]	@ (8000d40 <receiveControlCommand+0xf8>)
 8000cda:	6878      	ldr	r0, [r7, #4]
 8000cdc:	f007 fcb9 	bl	8008652 <strncmp>
 8000ce0:	4603      	mov	r3, r0
 8000ce2:	2b00      	cmp	r3, #0
 8000ce4:	d102      	bne.n	8000cec <receiveControlCommand+0xa4>
		Control_Stop();
 8000ce6:	f000 fb0d 	bl	8001304 <Control_Stop>
 8000cea:	e012      	b.n	8000d12 <receiveControlCommand+0xca>
	} else if (strncmp((char*) rx_buffer, "PWR", 3) == 0) {
 8000cec:	2203      	movs	r2, #3
 8000cee:	4915      	ldr	r1, [pc, #84]	@ (8000d44 <receiveControlCommand+0xfc>)
 8000cf0:	6878      	ldr	r0, [r7, #4]
 8000cf2:	f007 fcae 	bl	8008652 <strncmp>
 8000cf6:	4603      	mov	r3, r0
 8000cf8:	2b00      	cmp	r3, #0
 8000cfa:	d10a      	bne.n	8000d12 <receiveControlCommand+0xca>
		uint8_t speed = atoi((char*) &rx_buffer[3]);
 8000cfc:	687b      	ldr	r3, [r7, #4]
 8000cfe:	3303      	adds	r3, #3
 8000d00:	4618      	mov	r0, r3
 8000d02:	f006 fea7 	bl	8007a54 <atoi>
 8000d06:	4603      	mov	r3, r0
 8000d08:	73fb      	strb	r3, [r7, #15]
		Control_SetMotorsPower(speed);
 8000d0a:	7bfb      	ldrb	r3, [r7, #15]
 8000d0c:	4618      	mov	r0, r3
 8000d0e:	f000 fadd 	bl	80012cc <Control_SetMotorsPower>
	}


    // Limpiar el buffer después de procesar
    memset(rx_buffer, 0, length);
 8000d12:	887b      	ldrh	r3, [r7, #2]
 8000d14:	461a      	mov	r2, r3
 8000d16:	2100      	movs	r1, #0
 8000d18:	6878      	ldr	r0, [r7, #4]
 8000d1a:	f007 fc92 	bl	8008642 <memset>
}
 8000d1e:	3710      	adds	r7, #16
 8000d20:	46bd      	mov	sp, r7
 8000d22:	bd80      	pop	{r7, pc}
 8000d24:	0800a518 	.word	0x0800a518
 8000d28:	0800a51c 	.word	0x0800a51c
 8000d2c:	0800a520 	.word	0x0800a520
 8000d30:	0800a534 	.word	0x0800a534
 8000d34:	48000400 	.word	0x48000400
 8000d38:	0800a53c 	.word	0x0800a53c
 8000d3c:	0800a544 	.word	0x0800a544
 8000d40:	0800a548 	.word	0x0800a548
 8000d44:	0800a550 	.word	0x0800a550

08000d48 <Control_Init>:
float mz_buffer[MOVING_AVG_SIZE] = {0};
int buffer_index = 0;



void Control_Init(void) {
 8000d48:	b480      	push	{r7}
 8000d4a:	af00      	add	r7, sp, #0
    Control.pid_roll.Kp = 1.0;
 8000d4c:	4b21      	ldr	r3, [pc, #132]	@ (8000dd4 <Control_Init+0x8c>)
 8000d4e:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 8000d52:	601a      	str	r2, [r3, #0]
    Control.pid_roll.Ki = 0.0;
 8000d54:	4b1f      	ldr	r3, [pc, #124]	@ (8000dd4 <Control_Init+0x8c>)
 8000d56:	f04f 0200 	mov.w	r2, #0
 8000d5a:	605a      	str	r2, [r3, #4]
    Control.pid_roll.Kd = 0.0;
 8000d5c:	4b1d      	ldr	r3, [pc, #116]	@ (8000dd4 <Control_Init+0x8c>)
 8000d5e:	f04f 0200 	mov.w	r2, #0
 8000d62:	609a      	str	r2, [r3, #8]
    Control.pid_roll.prev_error = 0.0;
 8000d64:	4b1b      	ldr	r3, [pc, #108]	@ (8000dd4 <Control_Init+0x8c>)
 8000d66:	f04f 0200 	mov.w	r2, #0
 8000d6a:	60da      	str	r2, [r3, #12]
    Control.pid_roll.integral = 0.0;
 8000d6c:	4b19      	ldr	r3, [pc, #100]	@ (8000dd4 <Control_Init+0x8c>)
 8000d6e:	f04f 0200 	mov.w	r2, #0
 8000d72:	611a      	str	r2, [r3, #16]
    Control.base_throttle = 0;
 8000d74:	4b17      	ldr	r3, [pc, #92]	@ (8000dd4 <Control_Init+0x8c>)
 8000d76:	2200      	movs	r2, #0
 8000d78:	63da      	str	r2, [r3, #60]	@ 0x3c

    Control.pid_pitch.Kp = 1.0;
 8000d7a:	4b16      	ldr	r3, [pc, #88]	@ (8000dd4 <Control_Init+0x8c>)
 8000d7c:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 8000d80:	615a      	str	r2, [r3, #20]
    Control.pid_pitch.Ki = 0.0;
 8000d82:	4b14      	ldr	r3, [pc, #80]	@ (8000dd4 <Control_Init+0x8c>)
 8000d84:	f04f 0200 	mov.w	r2, #0
 8000d88:	619a      	str	r2, [r3, #24]
    Control.pid_pitch.Kd = 0.0;
 8000d8a:	4b12      	ldr	r3, [pc, #72]	@ (8000dd4 <Control_Init+0x8c>)
 8000d8c:	f04f 0200 	mov.w	r2, #0
 8000d90:	61da      	str	r2, [r3, #28]
    Control.pid_pitch.prev_error = 0.0;
 8000d92:	4b10      	ldr	r3, [pc, #64]	@ (8000dd4 <Control_Init+0x8c>)
 8000d94:	f04f 0200 	mov.w	r2, #0
 8000d98:	621a      	str	r2, [r3, #32]
    Control.pid_pitch.integral = 0.0;
 8000d9a:	4b0e      	ldr	r3, [pc, #56]	@ (8000dd4 <Control_Init+0x8c>)
 8000d9c:	f04f 0200 	mov.w	r2, #0
 8000da0:	625a      	str	r2, [r3, #36]	@ 0x24

    Control.pid_yaw.Kp = 1.0;
 8000da2:	4b0c      	ldr	r3, [pc, #48]	@ (8000dd4 <Control_Init+0x8c>)
 8000da4:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 8000da8:	629a      	str	r2, [r3, #40]	@ 0x28
    Control.pid_yaw.Ki = 0.0;
 8000daa:	4b0a      	ldr	r3, [pc, #40]	@ (8000dd4 <Control_Init+0x8c>)
 8000dac:	f04f 0200 	mov.w	r2, #0
 8000db0:	62da      	str	r2, [r3, #44]	@ 0x2c
    Control.pid_yaw.Kd = 0.0;
 8000db2:	4b08      	ldr	r3, [pc, #32]	@ (8000dd4 <Control_Init+0x8c>)
 8000db4:	f04f 0200 	mov.w	r2, #0
 8000db8:	631a      	str	r2, [r3, #48]	@ 0x30
    Control.pid_yaw.prev_error = 0.0;
 8000dba:	4b06      	ldr	r3, [pc, #24]	@ (8000dd4 <Control_Init+0x8c>)
 8000dbc:	f04f 0200 	mov.w	r2, #0
 8000dc0:	635a      	str	r2, [r3, #52]	@ 0x34
    Control.pid_yaw.integral = 0.0;
 8000dc2:	4b04      	ldr	r3, [pc, #16]	@ (8000dd4 <Control_Init+0x8c>)
 8000dc4:	f04f 0200 	mov.w	r2, #0
 8000dc8:	639a      	str	r2, [r3, #56]	@ 0x38
}
 8000dca:	bf00      	nop
 8000dcc:	46bd      	mov	sp, r7
 8000dce:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000dd2:	4770      	bx	lr
 8000dd4:	200001f0 	.word	0x200001f0

08000dd8 <Control_ArmMotors>:

void Control_ArmMotors() {
 8000dd8:	b580      	push	{r7, lr}
 8000dda:	af00      	add	r7, sp, #0
	printf("Hadoken");
 8000ddc:	4815      	ldr	r0, [pc, #84]	@ (8000e34 <Control_ArmMotors+0x5c>)
 8000dde:	f007 fbdb 	bl	8008598 <iprintf>
    Control.motor_control.motor1_speed = MOTOR_MAX_SPEED;
 8000de2:	4b15      	ldr	r3, [pc, #84]	@ (8000e38 <Control_ArmMotors+0x60>)
 8000de4:	22c8      	movs	r2, #200	@ 0xc8
 8000de6:	641a      	str	r2, [r3, #64]	@ 0x40
    Control.motor_control.motor2_speed = MOTOR_MAX_SPEED;
 8000de8:	4b13      	ldr	r3, [pc, #76]	@ (8000e38 <Control_ArmMotors+0x60>)
 8000dea:	22c8      	movs	r2, #200	@ 0xc8
 8000dec:	645a      	str	r2, [r3, #68]	@ 0x44
    Control.motor_control.motor3_speed = MOTOR_MAX_SPEED;
 8000dee:	4b12      	ldr	r3, [pc, #72]	@ (8000e38 <Control_ArmMotors+0x60>)
 8000df0:	22c8      	movs	r2, #200	@ 0xc8
 8000df2:	649a      	str	r2, [r3, #72]	@ 0x48
    Control.motor_control.motor4_speed = MOTOR_MAX_SPEED;
 8000df4:	4b10      	ldr	r3, [pc, #64]	@ (8000e38 <Control_ArmMotors+0x60>)
 8000df6:	22c8      	movs	r2, #200	@ 0xc8
 8000df8:	64da      	str	r2, [r3, #76]	@ 0x4c
    Control_SetMotorSpeeds();
 8000dfa:	f000 fa13 	bl	8001224 <Control_SetMotorSpeeds>
    HAL_Delay(3000);
 8000dfe:	f640 30b8 	movw	r0, #3000	@ 0xbb8
 8000e02:	f001 fd73 	bl	80028ec <HAL_Delay>
    Control.motor_control.motor1_speed = MOTOR_MIN_SPEED;
 8000e06:	4b0c      	ldr	r3, [pc, #48]	@ (8000e38 <Control_ArmMotors+0x60>)
 8000e08:	2264      	movs	r2, #100	@ 0x64
 8000e0a:	641a      	str	r2, [r3, #64]	@ 0x40
    Control.motor_control.motor2_speed = MOTOR_MIN_SPEED;
 8000e0c:	4b0a      	ldr	r3, [pc, #40]	@ (8000e38 <Control_ArmMotors+0x60>)
 8000e0e:	2264      	movs	r2, #100	@ 0x64
 8000e10:	645a      	str	r2, [r3, #68]	@ 0x44
    Control.motor_control.motor3_speed = MOTOR_MIN_SPEED;
 8000e12:	4b09      	ldr	r3, [pc, #36]	@ (8000e38 <Control_ArmMotors+0x60>)
 8000e14:	2264      	movs	r2, #100	@ 0x64
 8000e16:	649a      	str	r2, [r3, #72]	@ 0x48
    Control.motor_control.motor4_speed = MOTOR_MIN_SPEED;
 8000e18:	4b07      	ldr	r3, [pc, #28]	@ (8000e38 <Control_ArmMotors+0x60>)
 8000e1a:	2264      	movs	r2, #100	@ 0x64
 8000e1c:	64da      	str	r2, [r3, #76]	@ 0x4c
    Control_SetMotorSpeeds();
 8000e1e:	f000 fa01 	bl	8001224 <Control_SetMotorSpeeds>
    HAL_Delay(3000);
 8000e22:	f640 30b8 	movw	r0, #3000	@ 0xbb8
 8000e26:	f001 fd61 	bl	80028ec <HAL_Delay>

    printData("Motors armed\n");
 8000e2a:	4804      	ldr	r0, [pc, #16]	@ (8000e3c <Control_ArmMotors+0x64>)
 8000e2c:	f001 f98a 	bl	8002144 <printData>
}
 8000e30:	bf00      	nop
 8000e32:	bd80      	pop	{r7, pc}
 8000e34:	0800a554 	.word	0x0800a554
 8000e38:	200001f0 	.word	0x200001f0
 8000e3c:	0800a55c 	.word	0x0800a55c

08000e40 <Control_Update>:

void Control_Update(void) {
 8000e40:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000e42:	b08d      	sub	sp, #52	@ 0x34
 8000e44:	af06      	add	r7, sp, #24
	struct girodata_t giro;
	Sensor_Read(&giro);
 8000e46:	1d3b      	adds	r3, r7, #4
 8000e48:	4618      	mov	r0, r3
 8000e4a:	f000 fb83 	bl	8001554 <Sensor_Read>
	printf("AX: %i, AY: %i, AZ: %i, GX: %i, GY: %i, GZ: %i, MX: %i, MY: %i, MZ: %i\n", giro.ax, giro.ay, giro.az, giro.gx, giro.gy, giro.gz, giro.mx, giro.my, giro.mz);
 8000e4e:	f9b7 3004 	ldrsh.w	r3, [r7, #4]
 8000e52:	461e      	mov	r6, r3
 8000e54:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8000e58:	469c      	mov	ip, r3
 8000e5a:	f9b7 3008 	ldrsh.w	r3, [r7, #8]
 8000e5e:	469e      	mov	lr, r3
 8000e60:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 8000e64:	f9b7 200c 	ldrsh.w	r2, [r7, #12]
 8000e68:	f9b7 100e 	ldrsh.w	r1, [r7, #14]
 8000e6c:	f9b7 0010 	ldrsh.w	r0, [r7, #16]
 8000e70:	f9b7 4012 	ldrsh.w	r4, [r7, #18]
 8000e74:	f9b7 5014 	ldrsh.w	r5, [r7, #20]
 8000e78:	9505      	str	r5, [sp, #20]
 8000e7a:	9404      	str	r4, [sp, #16]
 8000e7c:	9003      	str	r0, [sp, #12]
 8000e7e:	9102      	str	r1, [sp, #8]
 8000e80:	9201      	str	r2, [sp, #4]
 8000e82:	9300      	str	r3, [sp, #0]
 8000e84:	4673      	mov	r3, lr
 8000e86:	4662      	mov	r2, ip
 8000e88:	4631      	mov	r1, r6
 8000e8a:	4806      	ldr	r0, [pc, #24]	@ (8000ea4 <Control_Update+0x64>)
 8000e8c:	f007 fb84 	bl	8008598 <iprintf>
    Control_Compute(&giro);
 8000e90:	1d3b      	adds	r3, r7, #4
 8000e92:	4618      	mov	r0, r3
 8000e94:	f000 f808 	bl	8000ea8 <Control_Compute>

    Control_SetMotorSpeeds();
 8000e98:	f000 f9c4 	bl	8001224 <Control_SetMotorSpeeds>
}
 8000e9c:	bf00      	nop
 8000e9e:	371c      	adds	r7, #28
 8000ea0:	46bd      	mov	sp, r7
 8000ea2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000ea4:	0800a56c 	.word	0x0800a56c

08000ea8 <Control_Compute>:

void Control_Compute(struct girodata_t* giro) {
 8000ea8:	e92d 43b0 	stmdb	sp!, {r4, r5, r7, r8, r9, lr}
 8000eac:	b09c      	sub	sp, #112	@ 0x70
 8000eae:	af04      	add	r7, sp, #16
 8000eb0:	6078      	str	r0, [r7, #4]
    float rateRoll = giro->gx * 70.0 / 1000.0;
 8000eb2:	687b      	ldr	r3, [r7, #4]
 8000eb4:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 8000eb8:	4618      	mov	r0, r3
 8000eba:	f7ff fb33 	bl	8000524 <__aeabi_i2d>
 8000ebe:	f04f 0200 	mov.w	r2, #0
 8000ec2:	4bd2      	ldr	r3, [pc, #840]	@ (800120c <Control_Compute+0x364>)
 8000ec4:	f7ff fb98 	bl	80005f8 <__aeabi_dmul>
 8000ec8:	4602      	mov	r2, r0
 8000eca:	460b      	mov	r3, r1
 8000ecc:	4610      	mov	r0, r2
 8000ece:	4619      	mov	r1, r3
 8000ed0:	f04f 0200 	mov.w	r2, #0
 8000ed4:	4bce      	ldr	r3, [pc, #824]	@ (8001210 <Control_Compute+0x368>)
 8000ed6:	f7ff fcb9 	bl	800084c <__aeabi_ddiv>
 8000eda:	4602      	mov	r2, r0
 8000edc:	460b      	mov	r3, r1
 8000ede:	4610      	mov	r0, r2
 8000ee0:	4619      	mov	r1, r3
 8000ee2:	f7ff fe61 	bl	8000ba8 <__aeabi_d2f>
 8000ee6:	4603      	mov	r3, r0
 8000ee8:	65fb      	str	r3, [r7, #92]	@ 0x5c
    float ratePitch = giro->gy * 70.0 / 1000.0;
 8000eea:	687b      	ldr	r3, [r7, #4]
 8000eec:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8000ef0:	4618      	mov	r0, r3
 8000ef2:	f7ff fb17 	bl	8000524 <__aeabi_i2d>
 8000ef6:	f04f 0200 	mov.w	r2, #0
 8000efa:	4bc4      	ldr	r3, [pc, #784]	@ (800120c <Control_Compute+0x364>)
 8000efc:	f7ff fb7c 	bl	80005f8 <__aeabi_dmul>
 8000f00:	4602      	mov	r2, r0
 8000f02:	460b      	mov	r3, r1
 8000f04:	4610      	mov	r0, r2
 8000f06:	4619      	mov	r1, r3
 8000f08:	f04f 0200 	mov.w	r2, #0
 8000f0c:	4bc0      	ldr	r3, [pc, #768]	@ (8001210 <Control_Compute+0x368>)
 8000f0e:	f7ff fc9d 	bl	800084c <__aeabi_ddiv>
 8000f12:	4602      	mov	r2, r0
 8000f14:	460b      	mov	r3, r1
 8000f16:	4610      	mov	r0, r2
 8000f18:	4619      	mov	r1, r3
 8000f1a:	f7ff fe45 	bl	8000ba8 <__aeabi_d2f>
 8000f1e:	4603      	mov	r3, r0
 8000f20:	65bb      	str	r3, [r7, #88]	@ 0x58
    float rateYaw = giro->gz * 70.0 / 1000.0;
 8000f22:	687b      	ldr	r3, [r7, #4]
 8000f24:	f9b3 300a 	ldrsh.w	r3, [r3, #10]
 8000f28:	4618      	mov	r0, r3
 8000f2a:	f7ff fafb 	bl	8000524 <__aeabi_i2d>
 8000f2e:	f04f 0200 	mov.w	r2, #0
 8000f32:	4bb6      	ldr	r3, [pc, #728]	@ (800120c <Control_Compute+0x364>)
 8000f34:	f7ff fb60 	bl	80005f8 <__aeabi_dmul>
 8000f38:	4602      	mov	r2, r0
 8000f3a:	460b      	mov	r3, r1
 8000f3c:	4610      	mov	r0, r2
 8000f3e:	4619      	mov	r1, r3
 8000f40:	f04f 0200 	mov.w	r2, #0
 8000f44:	4bb2      	ldr	r3, [pc, #712]	@ (8001210 <Control_Compute+0x368>)
 8000f46:	f7ff fc81 	bl	800084c <__aeabi_ddiv>
 8000f4a:	4602      	mov	r2, r0
 8000f4c:	460b      	mov	r3, r1
 8000f4e:	4610      	mov	r0, r2
 8000f50:	4619      	mov	r1, r3
 8000f52:	f7ff fe29 	bl	8000ba8 <__aeabi_d2f>
 8000f56:	4603      	mov	r3, r0
 8000f58:	657b      	str	r3, [r7, #84]	@ 0x54

    float desiredRateRoll = 10.0;
 8000f5a:	4bae      	ldr	r3, [pc, #696]	@ (8001214 <Control_Compute+0x36c>)
 8000f5c:	653b      	str	r3, [r7, #80]	@ 0x50
    float desiredRatePitch = 5.0;
 8000f5e:	4bae      	ldr	r3, [pc, #696]	@ (8001218 <Control_Compute+0x370>)
 8000f60:	64fb      	str	r3, [r7, #76]	@ 0x4c
    float desiredRateYaw = 0.0;
 8000f62:	f04f 0300 	mov.w	r3, #0
 8000f66:	64bb      	str	r3, [r7, #72]	@ 0x48

    // Error
    float errorRoll = desiredRateRoll - rateRoll;
 8000f68:	ed97 7a14 	vldr	s14, [r7, #80]	@ 0x50
 8000f6c:	edd7 7a17 	vldr	s15, [r7, #92]	@ 0x5c
 8000f70:	ee77 7a67 	vsub.f32	s15, s14, s15
 8000f74:	edc7 7a11 	vstr	s15, [r7, #68]	@ 0x44
    float errorPitch = desiredRatePitch - ratePitch;
 8000f78:	ed97 7a13 	vldr	s14, [r7, #76]	@ 0x4c
 8000f7c:	edd7 7a16 	vldr	s15, [r7, #88]	@ 0x58
 8000f80:	ee77 7a67 	vsub.f32	s15, s14, s15
 8000f84:	edc7 7a10 	vstr	s15, [r7, #64]	@ 0x40
    float errorYaw = desiredRateYaw - rateYaw;
 8000f88:	ed97 7a12 	vldr	s14, [r7, #72]	@ 0x48
 8000f8c:	edd7 7a15 	vldr	s15, [r7, #84]	@ 0x54
 8000f90:	ee77 7a67 	vsub.f32	s15, s14, s15
 8000f94:	edc7 7a0f 	vstr	s15, [r7, #60]	@ 0x3c

    // PID Roll
    float pTermRoll = Control.pid_roll.Kp * errorRoll;
 8000f98:	4ba0      	ldr	r3, [pc, #640]	@ (800121c <Control_Compute+0x374>)
 8000f9a:	edd3 7a00 	vldr	s15, [r3]
 8000f9e:	ed97 7a11 	vldr	s14, [r7, #68]	@ 0x44
 8000fa2:	ee67 7a27 	vmul.f32	s15, s14, s15
 8000fa6:	edc7 7a0e 	vstr	s15, [r7, #56]	@ 0x38
    Control.pid_roll.integral += errorRoll; // Acumulador integral
 8000faa:	4b9c      	ldr	r3, [pc, #624]	@ (800121c <Control_Compute+0x374>)
 8000fac:	ed93 7a04 	vldr	s14, [r3, #16]
 8000fb0:	edd7 7a11 	vldr	s15, [r7, #68]	@ 0x44
 8000fb4:	ee77 7a27 	vadd.f32	s15, s14, s15
 8000fb8:	4b98      	ldr	r3, [pc, #608]	@ (800121c <Control_Compute+0x374>)
 8000fba:	edc3 7a04 	vstr	s15, [r3, #16]
    float iTermRoll = Control.pid_roll.Ki * Control.pid_roll.integral;
 8000fbe:	4b97      	ldr	r3, [pc, #604]	@ (800121c <Control_Compute+0x374>)
 8000fc0:	ed93 7a01 	vldr	s14, [r3, #4]
 8000fc4:	4b95      	ldr	r3, [pc, #596]	@ (800121c <Control_Compute+0x374>)
 8000fc6:	edd3 7a04 	vldr	s15, [r3, #16]
 8000fca:	ee67 7a27 	vmul.f32	s15, s14, s15
 8000fce:	edc7 7a0d 	vstr	s15, [r7, #52]	@ 0x34
    float dTermRoll = Control.pid_roll.Kd * (errorRoll - Control.pid_roll.prev_error);
 8000fd2:	4b92      	ldr	r3, [pc, #584]	@ (800121c <Control_Compute+0x374>)
 8000fd4:	ed93 7a02 	vldr	s14, [r3, #8]
 8000fd8:	4b90      	ldr	r3, [pc, #576]	@ (800121c <Control_Compute+0x374>)
 8000fda:	edd3 7a03 	vldr	s15, [r3, #12]
 8000fde:	edd7 6a11 	vldr	s13, [r7, #68]	@ 0x44
 8000fe2:	ee76 7ae7 	vsub.f32	s15, s13, s15
 8000fe6:	ee67 7a27 	vmul.f32	s15, s14, s15
 8000fea:	edc7 7a0c 	vstr	s15, [r7, #48]	@ 0x30
    Control.pid_roll.prev_error = errorRoll;
 8000fee:	4a8b      	ldr	r2, [pc, #556]	@ (800121c <Control_Compute+0x374>)
 8000ff0:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8000ff2:	60d3      	str	r3, [r2, #12]
    float pidOutputRoll = pTermRoll + iTermRoll + dTermRoll;
 8000ff4:	ed97 7a0e 	vldr	s14, [r7, #56]	@ 0x38
 8000ff8:	edd7 7a0d 	vldr	s15, [r7, #52]	@ 0x34
 8000ffc:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001000:	ed97 7a0c 	vldr	s14, [r7, #48]	@ 0x30
 8001004:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001008:	edc7 7a0b 	vstr	s15, [r7, #44]	@ 0x2c

    // PID Pitch
    float pTermPitch = Control.pid_pitch.Kp * errorPitch;
 800100c:	4b83      	ldr	r3, [pc, #524]	@ (800121c <Control_Compute+0x374>)
 800100e:	edd3 7a05 	vldr	s15, [r3, #20]
 8001012:	ed97 7a10 	vldr	s14, [r7, #64]	@ 0x40
 8001016:	ee67 7a27 	vmul.f32	s15, s14, s15
 800101a:	edc7 7a0a 	vstr	s15, [r7, #40]	@ 0x28
    Control.pid_pitch.integral += errorPitch;
 800101e:	4b7f      	ldr	r3, [pc, #508]	@ (800121c <Control_Compute+0x374>)
 8001020:	ed93 7a09 	vldr	s14, [r3, #36]	@ 0x24
 8001024:	edd7 7a10 	vldr	s15, [r7, #64]	@ 0x40
 8001028:	ee77 7a27 	vadd.f32	s15, s14, s15
 800102c:	4b7b      	ldr	r3, [pc, #492]	@ (800121c <Control_Compute+0x374>)
 800102e:	edc3 7a09 	vstr	s15, [r3, #36]	@ 0x24
    float iTermPitch = Control.pid_pitch.Ki * Control.pid_pitch.integral;
 8001032:	4b7a      	ldr	r3, [pc, #488]	@ (800121c <Control_Compute+0x374>)
 8001034:	ed93 7a06 	vldr	s14, [r3, #24]
 8001038:	4b78      	ldr	r3, [pc, #480]	@ (800121c <Control_Compute+0x374>)
 800103a:	edd3 7a09 	vldr	s15, [r3, #36]	@ 0x24
 800103e:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001042:	edc7 7a09 	vstr	s15, [r7, #36]	@ 0x24
    float dTermPitch = Control.pid_pitch.Kd * (errorPitch - Control.pid_pitch.prev_error);
 8001046:	4b75      	ldr	r3, [pc, #468]	@ (800121c <Control_Compute+0x374>)
 8001048:	ed93 7a07 	vldr	s14, [r3, #28]
 800104c:	4b73      	ldr	r3, [pc, #460]	@ (800121c <Control_Compute+0x374>)
 800104e:	edd3 7a08 	vldr	s15, [r3, #32]
 8001052:	edd7 6a10 	vldr	s13, [r7, #64]	@ 0x40
 8001056:	ee76 7ae7 	vsub.f32	s15, s13, s15
 800105a:	ee67 7a27 	vmul.f32	s15, s14, s15
 800105e:	edc7 7a08 	vstr	s15, [r7, #32]
    Control.pid_pitch.prev_error = errorPitch;
 8001062:	4a6e      	ldr	r2, [pc, #440]	@ (800121c <Control_Compute+0x374>)
 8001064:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 8001066:	6213      	str	r3, [r2, #32]
    float pidOutputPitch = pTermPitch + iTermPitch + dTermPitch;
 8001068:	ed97 7a0a 	vldr	s14, [r7, #40]	@ 0x28
 800106c:	edd7 7a09 	vldr	s15, [r7, #36]	@ 0x24
 8001070:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001074:	ed97 7a08 	vldr	s14, [r7, #32]
 8001078:	ee77 7a27 	vadd.f32	s15, s14, s15
 800107c:	edc7 7a07 	vstr	s15, [r7, #28]

    // PID Yaw
    float pTermYaw = Control.pid_yaw.Kp * errorYaw;
 8001080:	4b66      	ldr	r3, [pc, #408]	@ (800121c <Control_Compute+0x374>)
 8001082:	edd3 7a0a 	vldr	s15, [r3, #40]	@ 0x28
 8001086:	ed97 7a0f 	vldr	s14, [r7, #60]	@ 0x3c
 800108a:	ee67 7a27 	vmul.f32	s15, s14, s15
 800108e:	edc7 7a06 	vstr	s15, [r7, #24]
    Control.pid_yaw.integral += errorYaw;
 8001092:	4b62      	ldr	r3, [pc, #392]	@ (800121c <Control_Compute+0x374>)
 8001094:	ed93 7a0e 	vldr	s14, [r3, #56]	@ 0x38
 8001098:	edd7 7a0f 	vldr	s15, [r7, #60]	@ 0x3c
 800109c:	ee77 7a27 	vadd.f32	s15, s14, s15
 80010a0:	4b5e      	ldr	r3, [pc, #376]	@ (800121c <Control_Compute+0x374>)
 80010a2:	edc3 7a0e 	vstr	s15, [r3, #56]	@ 0x38
    float iTermYaw = Control.pid_yaw.Ki * Control.pid_yaw.integral;
 80010a6:	4b5d      	ldr	r3, [pc, #372]	@ (800121c <Control_Compute+0x374>)
 80010a8:	ed93 7a0b 	vldr	s14, [r3, #44]	@ 0x2c
 80010ac:	4b5b      	ldr	r3, [pc, #364]	@ (800121c <Control_Compute+0x374>)
 80010ae:	edd3 7a0e 	vldr	s15, [r3, #56]	@ 0x38
 80010b2:	ee67 7a27 	vmul.f32	s15, s14, s15
 80010b6:	edc7 7a05 	vstr	s15, [r7, #20]
    float dTermYaw = Control.pid_yaw.Kd * (errorYaw - Control.pid_yaw.prev_error);
 80010ba:	4b58      	ldr	r3, [pc, #352]	@ (800121c <Control_Compute+0x374>)
 80010bc:	ed93 7a0c 	vldr	s14, [r3, #48]	@ 0x30
 80010c0:	4b56      	ldr	r3, [pc, #344]	@ (800121c <Control_Compute+0x374>)
 80010c2:	edd3 7a0d 	vldr	s15, [r3, #52]	@ 0x34
 80010c6:	edd7 6a0f 	vldr	s13, [r7, #60]	@ 0x3c
 80010ca:	ee76 7ae7 	vsub.f32	s15, s13, s15
 80010ce:	ee67 7a27 	vmul.f32	s15, s14, s15
 80010d2:	edc7 7a04 	vstr	s15, [r7, #16]
    Control.pid_yaw.prev_error = errorYaw;
 80010d6:	4a51      	ldr	r2, [pc, #324]	@ (800121c <Control_Compute+0x374>)
 80010d8:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 80010da:	6353      	str	r3, [r2, #52]	@ 0x34
    float pidOutputYaw = pTermYaw + iTermYaw + dTermYaw;
 80010dc:	ed97 7a06 	vldr	s14, [r7, #24]
 80010e0:	edd7 7a05 	vldr	s15, [r7, #20]
 80010e4:	ee77 7a27 	vadd.f32	s15, s14, s15
 80010e8:	ed97 7a04 	vldr	s14, [r7, #16]
 80010ec:	ee77 7a27 	vadd.f32	s15, s14, s15
 80010f0:	edc7 7a03 	vstr	s15, [r7, #12]


    int baseThrottle = Control.base_throttle;
 80010f4:	4b49      	ldr	r3, [pc, #292]	@ (800121c <Control_Compute+0x374>)
 80010f6:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80010f8:	60bb      	str	r3, [r7, #8]


    printf("Roll: %f;Pitch: %f;Yaw: %f\n", pidOutputRoll, pidOutputPitch, pidOutputYaw);
 80010fa:	6af8      	ldr	r0, [r7, #44]	@ 0x2c
 80010fc:	f7ff fa24 	bl	8000548 <__aeabi_f2d>
 8001100:	4680      	mov	r8, r0
 8001102:	4689      	mov	r9, r1
 8001104:	69f8      	ldr	r0, [r7, #28]
 8001106:	f7ff fa1f 	bl	8000548 <__aeabi_f2d>
 800110a:	4604      	mov	r4, r0
 800110c:	460d      	mov	r5, r1
 800110e:	68f8      	ldr	r0, [r7, #12]
 8001110:	f7ff fa1a 	bl	8000548 <__aeabi_f2d>
 8001114:	4602      	mov	r2, r0
 8001116:	460b      	mov	r3, r1
 8001118:	e9cd 2302 	strd	r2, r3, [sp, #8]
 800111c:	e9cd 4500 	strd	r4, r5, [sp]
 8001120:	4642      	mov	r2, r8
 8001122:	464b      	mov	r3, r9
 8001124:	483e      	ldr	r0, [pc, #248]	@ (8001220 <Control_Compute+0x378>)
 8001126:	f007 fa37 	bl	8008598 <iprintf>

    if (baseThrottle <= MOTOR_MIN_SPEED) {
 800112a:	68bb      	ldr	r3, [r7, #8]
 800112c:	2b64      	cmp	r3, #100	@ 0x64
 800112e:	dc0c      	bgt.n	800114a <Control_Compute+0x2a2>
        Control.motor_control.motor1_speed = MOTOR_MIN_SPEED;
 8001130:	4b3a      	ldr	r3, [pc, #232]	@ (800121c <Control_Compute+0x374>)
 8001132:	2264      	movs	r2, #100	@ 0x64
 8001134:	641a      	str	r2, [r3, #64]	@ 0x40
        Control.motor_control.motor2_speed = MOTOR_MIN_SPEED;
 8001136:	4b39      	ldr	r3, [pc, #228]	@ (800121c <Control_Compute+0x374>)
 8001138:	2264      	movs	r2, #100	@ 0x64
 800113a:	645a      	str	r2, [r3, #68]	@ 0x44
        Control.motor_control.motor3_speed = MOTOR_MIN_SPEED;
 800113c:	4b37      	ldr	r3, [pc, #220]	@ (800121c <Control_Compute+0x374>)
 800113e:	2264      	movs	r2, #100	@ 0x64
 8001140:	649a      	str	r2, [r3, #72]	@ 0x48
        Control.motor_control.motor4_speed = MOTOR_MIN_SPEED;
 8001142:	4b36      	ldr	r3, [pc, #216]	@ (800121c <Control_Compute+0x374>)
 8001144:	2264      	movs	r2, #100	@ 0x64
 8001146:	64da      	str	r2, [r3, #76]	@ 0x4c
        return;
 8001148:	e05b      	b.n	8001202 <Control_Compute+0x35a>
    };


    Control.motor_control.motor1_speed = baseThrottle + pidOutputPitch - pidOutputRoll - pidOutputYaw;
 800114a:	68bb      	ldr	r3, [r7, #8]
 800114c:	ee07 3a90 	vmov	s15, r3
 8001150:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8001154:	edd7 7a07 	vldr	s15, [r7, #28]
 8001158:	ee37 7a27 	vadd.f32	s14, s14, s15
 800115c:	edd7 7a0b 	vldr	s15, [r7, #44]	@ 0x2c
 8001160:	ee37 7a67 	vsub.f32	s14, s14, s15
 8001164:	edd7 7a03 	vldr	s15, [r7, #12]
 8001168:	ee77 7a67 	vsub.f32	s15, s14, s15
 800116c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8001170:	ee17 2a90 	vmov	r2, s15
 8001174:	4b29      	ldr	r3, [pc, #164]	@ (800121c <Control_Compute+0x374>)
 8001176:	641a      	str	r2, [r3, #64]	@ 0x40
    Control.motor_control.motor2_speed = baseThrottle + pidOutputPitch + pidOutputRoll + pidOutputYaw;
 8001178:	68bb      	ldr	r3, [r7, #8]
 800117a:	ee07 3a90 	vmov	s15, r3
 800117e:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8001182:	edd7 7a07 	vldr	s15, [r7, #28]
 8001186:	ee37 7a27 	vadd.f32	s14, s14, s15
 800118a:	edd7 7a0b 	vldr	s15, [r7, #44]	@ 0x2c
 800118e:	ee37 7a27 	vadd.f32	s14, s14, s15
 8001192:	edd7 7a03 	vldr	s15, [r7, #12]
 8001196:	ee77 7a27 	vadd.f32	s15, s14, s15
 800119a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800119e:	ee17 2a90 	vmov	r2, s15
 80011a2:	4b1e      	ldr	r3, [pc, #120]	@ (800121c <Control_Compute+0x374>)
 80011a4:	645a      	str	r2, [r3, #68]	@ 0x44
    Control.motor_control.motor3_speed = baseThrottle - pidOutputPitch + pidOutputRoll - pidOutputYaw;
 80011a6:	68bb      	ldr	r3, [r7, #8]
 80011a8:	ee07 3a90 	vmov	s15, r3
 80011ac:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80011b0:	edd7 7a07 	vldr	s15, [r7, #28]
 80011b4:	ee37 7a67 	vsub.f32	s14, s14, s15
 80011b8:	edd7 7a0b 	vldr	s15, [r7, #44]	@ 0x2c
 80011bc:	ee37 7a27 	vadd.f32	s14, s14, s15
 80011c0:	edd7 7a03 	vldr	s15, [r7, #12]
 80011c4:	ee77 7a67 	vsub.f32	s15, s14, s15
 80011c8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80011cc:	ee17 2a90 	vmov	r2, s15
 80011d0:	4b12      	ldr	r3, [pc, #72]	@ (800121c <Control_Compute+0x374>)
 80011d2:	649a      	str	r2, [r3, #72]	@ 0x48
    Control.motor_control.motor4_speed = baseThrottle - pidOutputPitch - pidOutputRoll + pidOutputYaw;
 80011d4:	68bb      	ldr	r3, [r7, #8]
 80011d6:	ee07 3a90 	vmov	s15, r3
 80011da:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80011de:	edd7 7a07 	vldr	s15, [r7, #28]
 80011e2:	ee37 7a67 	vsub.f32	s14, s14, s15
 80011e6:	edd7 7a0b 	vldr	s15, [r7, #44]	@ 0x2c
 80011ea:	ee37 7a67 	vsub.f32	s14, s14, s15
 80011ee:	edd7 7a03 	vldr	s15, [r7, #12]
 80011f2:	ee77 7a27 	vadd.f32	s15, s14, s15
 80011f6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80011fa:	ee17 2a90 	vmov	r2, s15
 80011fe:	4b07      	ldr	r3, [pc, #28]	@ (800121c <Control_Compute+0x374>)
 8001200:	64da      	str	r2, [r3, #76]	@ 0x4c
//    Control.motor_control.motor1_speed = constrain(Control.motor_control.motor1_speed, MOTOR_MIN_SPEED, MOTOR_MAX_SPEED);
//    Control.motor_control.motor2_speed = constrain(Control.motor_control.motor2_speed, MOTOR_MIN_SPEED, MOTOR_MAX_SPEED);
//    Control.motor_control.motor3_speed = constrain(Control.motor_control.motor3_speed, MOTOR_MIN_SPEED, MOTOR_MAX_SPEED);
//    Control.motor_control.motor4_speed = constrain(Control.motor_control.motor4_speed, MOTOR_MIN_SPEED, MOTOR_MAX_SPEED);

}
 8001202:	3760      	adds	r7, #96	@ 0x60
 8001204:	46bd      	mov	sp, r7
 8001206:	e8bd 83b0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, pc}
 800120a:	bf00      	nop
 800120c:	40518000 	.word	0x40518000
 8001210:	408f4000 	.word	0x408f4000
 8001214:	41200000 	.word	0x41200000
 8001218:	40a00000 	.word	0x40a00000
 800121c:	200001f0 	.word	0x200001f0
 8001220:	0800a5b4 	.word	0x0800a5b4

08001224 <Control_SetMotorSpeeds>:




void Control_SetMotorSpeeds(void) {
 8001224:	b580      	push	{r7, lr}
 8001226:	b086      	sub	sp, #24
 8001228:	af02      	add	r7, sp, #8
    int motor1_speed = (Control.motor_control.motor1_speed < 0) ? 0 : (Control.motor_control.motor1_speed > MOTOR_MAX_SPEED ? MOTOR_MAX_SPEED : Control.motor_control.motor1_speed);
 800122a:	4b25      	ldr	r3, [pc, #148]	@ (80012c0 <Control_SetMotorSpeeds+0x9c>)
 800122c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800122e:	2b00      	cmp	r3, #0
 8001230:	db05      	blt.n	800123e <Control_SetMotorSpeeds+0x1a>
 8001232:	4b23      	ldr	r3, [pc, #140]	@ (80012c0 <Control_SetMotorSpeeds+0x9c>)
 8001234:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001236:	2bc8      	cmp	r3, #200	@ 0xc8
 8001238:	bfa8      	it	ge
 800123a:	23c8      	movge	r3, #200	@ 0xc8
 800123c:	e000      	b.n	8001240 <Control_SetMotorSpeeds+0x1c>
 800123e:	2300      	movs	r3, #0
 8001240:	60fb      	str	r3, [r7, #12]
    int motor2_speed = (Control.motor_control.motor2_speed < 0) ? 0 : (Control.motor_control.motor2_speed > MOTOR_MAX_SPEED ? MOTOR_MAX_SPEED : Control.motor_control.motor2_speed);
 8001242:	4b1f      	ldr	r3, [pc, #124]	@ (80012c0 <Control_SetMotorSpeeds+0x9c>)
 8001244:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001246:	2b00      	cmp	r3, #0
 8001248:	db05      	blt.n	8001256 <Control_SetMotorSpeeds+0x32>
 800124a:	4b1d      	ldr	r3, [pc, #116]	@ (80012c0 <Control_SetMotorSpeeds+0x9c>)
 800124c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800124e:	2bc8      	cmp	r3, #200	@ 0xc8
 8001250:	bfa8      	it	ge
 8001252:	23c8      	movge	r3, #200	@ 0xc8
 8001254:	e000      	b.n	8001258 <Control_SetMotorSpeeds+0x34>
 8001256:	2300      	movs	r3, #0
 8001258:	60bb      	str	r3, [r7, #8]
    int motor3_speed = (Control.motor_control.motor3_speed < 0) ? 0 : (Control.motor_control.motor3_speed > MOTOR_MAX_SPEED ? MOTOR_MAX_SPEED : Control.motor_control.motor3_speed);
 800125a:	4b19      	ldr	r3, [pc, #100]	@ (80012c0 <Control_SetMotorSpeeds+0x9c>)
 800125c:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800125e:	2b00      	cmp	r3, #0
 8001260:	db05      	blt.n	800126e <Control_SetMotorSpeeds+0x4a>
 8001262:	4b17      	ldr	r3, [pc, #92]	@ (80012c0 <Control_SetMotorSpeeds+0x9c>)
 8001264:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8001266:	2bc8      	cmp	r3, #200	@ 0xc8
 8001268:	bfa8      	it	ge
 800126a:	23c8      	movge	r3, #200	@ 0xc8
 800126c:	e000      	b.n	8001270 <Control_SetMotorSpeeds+0x4c>
 800126e:	2300      	movs	r3, #0
 8001270:	607b      	str	r3, [r7, #4]
    int motor4_speed = (Control.motor_control.motor4_speed < 0) ? 0 : (Control.motor_control.motor4_speed > MOTOR_MAX_SPEED ? MOTOR_MAX_SPEED : Control.motor_control.motor4_speed);
 8001272:	4b13      	ldr	r3, [pc, #76]	@ (80012c0 <Control_SetMotorSpeeds+0x9c>)
 8001274:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001276:	2b00      	cmp	r3, #0
 8001278:	db05      	blt.n	8001286 <Control_SetMotorSpeeds+0x62>
 800127a:	4b11      	ldr	r3, [pc, #68]	@ (80012c0 <Control_SetMotorSpeeds+0x9c>)
 800127c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800127e:	2bc8      	cmp	r3, #200	@ 0xc8
 8001280:	bfa8      	it	ge
 8001282:	23c8      	movge	r3, #200	@ 0xc8
 8001284:	e000      	b.n	8001288 <Control_SetMotorSpeeds+0x64>
 8001286:	2300      	movs	r3, #0
 8001288:	603b      	str	r3, [r7, #0]

    TIM1->CCR1 = motor1_speed;
 800128a:	4a0e      	ldr	r2, [pc, #56]	@ (80012c4 <Control_SetMotorSpeeds+0xa0>)
 800128c:	68fb      	ldr	r3, [r7, #12]
 800128e:	6353      	str	r3, [r2, #52]	@ 0x34
    TIM1->CCR4 = motor2_speed;
 8001290:	4a0c      	ldr	r2, [pc, #48]	@ (80012c4 <Control_SetMotorSpeeds+0xa0>)
 8001292:	68bb      	ldr	r3, [r7, #8]
 8001294:	6413      	str	r3, [r2, #64]	@ 0x40
    TIM2->CCR1 = motor3_speed;
 8001296:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 800129a:	687b      	ldr	r3, [r7, #4]
 800129c:	6353      	str	r3, [r2, #52]	@ 0x34
    TIM2->CCR2 = motor4_speed;
 800129e:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 80012a2:	683b      	ldr	r3, [r7, #0]
 80012a4:	6393      	str	r3, [r2, #56]	@ 0x38

    printf("Motor Speeds: %d, %d, %d, %d\n", motor1_speed, motor2_speed, motor3_speed, motor4_speed);
 80012a6:	683b      	ldr	r3, [r7, #0]
 80012a8:	9300      	str	r3, [sp, #0]
 80012aa:	687b      	ldr	r3, [r7, #4]
 80012ac:	68ba      	ldr	r2, [r7, #8]
 80012ae:	68f9      	ldr	r1, [r7, #12]
 80012b0:	4805      	ldr	r0, [pc, #20]	@ (80012c8 <Control_SetMotorSpeeds+0xa4>)
 80012b2:	f007 f971 	bl	8008598 <iprintf>
}
 80012b6:	bf00      	nop
 80012b8:	3710      	adds	r7, #16
 80012ba:	46bd      	mov	sp, r7
 80012bc:	bd80      	pop	{r7, pc}
 80012be:	bf00      	nop
 80012c0:	200001f0 	.word	0x200001f0
 80012c4:	40012c00 	.word	0x40012c00
 80012c8:	0800a5d0 	.word	0x0800a5d0

080012cc <Control_SetMotorsPower>:

void Control_SetMotorsPower(uint8_t base_power_percentage) {
 80012cc:	b580      	push	{r7, lr}
 80012ce:	b082      	sub	sp, #8
 80012d0:	af00      	add	r7, sp, #0
 80012d2:	4603      	mov	r3, r0
 80012d4:	71fb      	strb	r3, [r7, #7]
    if (base_power_percentage < 0) base_power_percentage = 0;
    if (base_power_percentage > 100) base_power_percentage = 100;
 80012d6:	79fb      	ldrb	r3, [r7, #7]
 80012d8:	2b64      	cmp	r3, #100	@ 0x64
 80012da:	d901      	bls.n	80012e0 <Control_SetMotorsPower+0x14>
 80012dc:	2364      	movs	r3, #100	@ 0x64
 80012de:	71fb      	strb	r3, [r7, #7]

    printf("Base power percentage: %d\n", base_power_percentage);
 80012e0:	79fb      	ldrb	r3, [r7, #7]
 80012e2:	4619      	mov	r1, r3
 80012e4:	4805      	ldr	r0, [pc, #20]	@ (80012fc <Control_SetMotorsPower+0x30>)
 80012e6:	f007 f957 	bl	8008598 <iprintf>

    Control.base_throttle = MOTOR_MIN_SPEED + ((MOTOR_MAX_SPEED - MOTOR_MIN_SPEED) * base_power_percentage) / 100;
 80012ea:	79fb      	ldrb	r3, [r7, #7]
 80012ec:	3364      	adds	r3, #100	@ 0x64
 80012ee:	4a04      	ldr	r2, [pc, #16]	@ (8001300 <Control_SetMotorsPower+0x34>)
 80012f0:	63d3      	str	r3, [r2, #60]	@ 0x3c
}
 80012f2:	bf00      	nop
 80012f4:	3708      	adds	r7, #8
 80012f6:	46bd      	mov	sp, r7
 80012f8:	bd80      	pop	{r7, pc}
 80012fa:	bf00      	nop
 80012fc:	0800a5f0 	.word	0x0800a5f0
 8001300:	200001f0 	.word	0x200001f0

08001304 <Control_Stop>:
    printf("Motor 2 speed: %d\n", Control.motor_control.motor2_speed);
    printf("Motor 3 speed: %d\n", Control.motor_control.motor3_speed);
    printf("Motor 4 speed: %d\n", Control.motor_control.motor4_speed);
}

void Control_Stop(void) {
 8001304:	b580      	push	{r7, lr}
 8001306:	af00      	add	r7, sp, #0
	Control.base_throttle = 0;
 8001308:	4b0a      	ldr	r3, [pc, #40]	@ (8001334 <Control_Stop+0x30>)
 800130a:	2200      	movs	r2, #0
 800130c:	63da      	str	r2, [r3, #60]	@ 0x3c
    Control.motor_control.motor1_speed = 0;
 800130e:	4b09      	ldr	r3, [pc, #36]	@ (8001334 <Control_Stop+0x30>)
 8001310:	2200      	movs	r2, #0
 8001312:	641a      	str	r2, [r3, #64]	@ 0x40
    Control.motor_control.motor2_speed = 0;
 8001314:	4b07      	ldr	r3, [pc, #28]	@ (8001334 <Control_Stop+0x30>)
 8001316:	2200      	movs	r2, #0
 8001318:	645a      	str	r2, [r3, #68]	@ 0x44
    Control.motor_control.motor3_speed = 0;
 800131a:	4b06      	ldr	r3, [pc, #24]	@ (8001334 <Control_Stop+0x30>)
 800131c:	2200      	movs	r2, #0
 800131e:	649a      	str	r2, [r3, #72]	@ 0x48
    Control.motor_control.motor4_speed = 0;
 8001320:	4b04      	ldr	r3, [pc, #16]	@ (8001334 <Control_Stop+0x30>)
 8001322:	2200      	movs	r2, #0
 8001324:	64da      	str	r2, [r3, #76]	@ 0x4c
    Control_SetMotorSpeeds();
 8001326:	f7ff ff7d 	bl	8001224 <Control_SetMotorSpeeds>

    printData("Motors stopped\n");
 800132a:	4803      	ldr	r0, [pc, #12]	@ (8001338 <Control_Stop+0x34>)
 800132c:	f000 ff0a 	bl	8002144 <printData>
}
 8001330:	bf00      	nop
 8001332:	bd80      	pop	{r7, pc}
 8001334:	200001f0 	.word	0x200001f0
 8001338:	0800a65c 	.word	0x0800a65c

0800133c <GY85_Init>:
static Kalman_t kalman_pitch, kalman_roll; // Instancias del filtro Kalman
static float pitch = 0.0f, roll = 0.0f;



void GY85_Init() {
 800133c:	b580      	push	{r7, lr}
 800133e:	b086      	sub	sp, #24
 8001340:	af04      	add	r7, sp, #16
    uint8_t data;

    // Inicializar el acelerómetro (ADXL345)
    data = 0x08; // Encender el sensor
 8001342:	2308      	movs	r3, #8
 8001344:	71fb      	strb	r3, [r7, #7]
    HAL_I2C_Mem_Write(&hi2c1, (ADXL345_ADDR << 1), 0x2D, I2C_MEMADD_SIZE_8BIT, &data, 1, HAL_MAX_DELAY);
 8001346:	f04f 33ff 	mov.w	r3, #4294967295
 800134a:	9302      	str	r3, [sp, #8]
 800134c:	2301      	movs	r3, #1
 800134e:	9301      	str	r3, [sp, #4]
 8001350:	1dfb      	adds	r3, r7, #7
 8001352:	9300      	str	r3, [sp, #0]
 8001354:	2301      	movs	r3, #1
 8001356:	222d      	movs	r2, #45	@ 0x2d
 8001358:	21a6      	movs	r1, #166	@ 0xa6
 800135a:	482c      	ldr	r0, [pc, #176]	@ (800140c <GY85_Init+0xd0>)
 800135c:	f001 fe9e 	bl	800309c <HAL_I2C_Mem_Write>
    data = 0x01; // Configurar rango ±4g
 8001360:	2301      	movs	r3, #1
 8001362:	71fb      	strb	r3, [r7, #7]
    HAL_I2C_Mem_Write(&hi2c1, (ADXL345_ADDR << 1), 0x31, I2C_MEMADD_SIZE_8BIT, &data, 1, HAL_MAX_DELAY);
 8001364:	f04f 33ff 	mov.w	r3, #4294967295
 8001368:	9302      	str	r3, [sp, #8]
 800136a:	2301      	movs	r3, #1
 800136c:	9301      	str	r3, [sp, #4]
 800136e:	1dfb      	adds	r3, r7, #7
 8001370:	9300      	str	r3, [sp, #0]
 8001372:	2301      	movs	r3, #1
 8001374:	2231      	movs	r2, #49	@ 0x31
 8001376:	21a6      	movs	r1, #166	@ 0xa6
 8001378:	4824      	ldr	r0, [pc, #144]	@ (800140c <GY85_Init+0xd0>)
 800137a:	f001 fe8f 	bl	800309c <HAL_I2C_Mem_Write>

    // Inicializar el magnetómetro (HMC5883L)
    data = 0x70; // Configurar promedio y frecuencia
 800137e:	2370      	movs	r3, #112	@ 0x70
 8001380:	71fb      	strb	r3, [r7, #7]
    HAL_I2C_Mem_Write(&hi2c1, (HMC5883L_ADDR << 1), 0x00, I2C_MEMADD_SIZE_8BIT, &data, 1, HAL_MAX_DELAY);
 8001382:	f04f 33ff 	mov.w	r3, #4294967295
 8001386:	9302      	str	r3, [sp, #8]
 8001388:	2301      	movs	r3, #1
 800138a:	9301      	str	r3, [sp, #4]
 800138c:	1dfb      	adds	r3, r7, #7
 800138e:	9300      	str	r3, [sp, #0]
 8001390:	2301      	movs	r3, #1
 8001392:	2200      	movs	r2, #0
 8001394:	213c      	movs	r1, #60	@ 0x3c
 8001396:	481d      	ldr	r0, [pc, #116]	@ (800140c <GY85_Init+0xd0>)
 8001398:	f001 fe80 	bl	800309c <HAL_I2C_Mem_Write>
    data = 0x00; // Modo continuo
 800139c:	2300      	movs	r3, #0
 800139e:	71fb      	strb	r3, [r7, #7]
    HAL_I2C_Mem_Write(&hi2c1, (HMC5883L_ADDR << 1), 0x02, I2C_MEMADD_SIZE_8BIT, &data, 1, HAL_MAX_DELAY);
 80013a0:	f04f 33ff 	mov.w	r3, #4294967295
 80013a4:	9302      	str	r3, [sp, #8]
 80013a6:	2301      	movs	r3, #1
 80013a8:	9301      	str	r3, [sp, #4]
 80013aa:	1dfb      	adds	r3, r7, #7
 80013ac:	9300      	str	r3, [sp, #0]
 80013ae:	2301      	movs	r3, #1
 80013b0:	2202      	movs	r2, #2
 80013b2:	213c      	movs	r1, #60	@ 0x3c
 80013b4:	4815      	ldr	r0, [pc, #84]	@ (800140c <GY85_Init+0xd0>)
 80013b6:	f001 fe71 	bl	800309c <HAL_I2C_Mem_Write>

    // Inicializar el giroscopio (ITG-3205)
    data = 0x03; // Usar PLL con eje Z
 80013ba:	2303      	movs	r3, #3
 80013bc:	71fb      	strb	r3, [r7, #7]
    HAL_I2C_Mem_Write(&hi2c1, (ITG3205_ADDR << 1), 0x3E, I2C_MEMADD_SIZE_8BIT, &data, 1, HAL_MAX_DELAY);
 80013be:	f04f 33ff 	mov.w	r3, #4294967295
 80013c2:	9302      	str	r3, [sp, #8]
 80013c4:	2301      	movs	r3, #1
 80013c6:	9301      	str	r3, [sp, #4]
 80013c8:	1dfb      	adds	r3, r7, #7
 80013ca:	9300      	str	r3, [sp, #0]
 80013cc:	2301      	movs	r3, #1
 80013ce:	223e      	movs	r2, #62	@ 0x3e
 80013d0:	21d0      	movs	r1, #208	@ 0xd0
 80013d2:	480e      	ldr	r0, [pc, #56]	@ (800140c <GY85_Init+0xd0>)
 80013d4:	f001 fe62 	bl	800309c <HAL_I2C_Mem_Write>
    data = 0x18; // Configurar rango ±2000°/s
 80013d8:	2318      	movs	r3, #24
 80013da:	71fb      	strb	r3, [r7, #7]
    HAL_I2C_Mem_Write(&hi2c1, (ITG3205_ADDR << 1), 0x16, I2C_MEMADD_SIZE_8BIT, &data, 1, HAL_MAX_DELAY);
 80013dc:	f04f 33ff 	mov.w	r3, #4294967295
 80013e0:	9302      	str	r3, [sp, #8]
 80013e2:	2301      	movs	r3, #1
 80013e4:	9301      	str	r3, [sp, #4]
 80013e6:	1dfb      	adds	r3, r7, #7
 80013e8:	9300      	str	r3, [sp, #0]
 80013ea:	2301      	movs	r3, #1
 80013ec:	2216      	movs	r2, #22
 80013ee:	21d0      	movs	r1, #208	@ 0xd0
 80013f0:	4806      	ldr	r0, [pc, #24]	@ (800140c <GY85_Init+0xd0>)
 80013f2:	f001 fe53 	bl	800309c <HAL_I2C_Mem_Write>

    CalibrateAccelerometer();
 80013f6:	f000 fa3f 	bl	8001878 <CalibrateAccelerometer>
    CalibrateGyroscope();
 80013fa:	f000 fae9 	bl	80019d0 <CalibrateGyroscope>
    CalibrateMagnetometer();
 80013fe:	f000 f8eb 	bl	80015d8 <CalibrateMagnetometer>
}
 8001402:	bf00      	nop
 8001404:	3708      	adds	r7, #8
 8001406:	46bd      	mov	sp, r7
 8001408:	bd80      	pop	{r7, pc}
 800140a:	bf00      	nop
 800140c:	20000270 	.word	0x20000270

08001410 <ADXL345_ReadData>:


void ADXL345_ReadData(int16_t *x, int16_t *y, int16_t *z) {
 8001410:	b580      	push	{r7, lr}
 8001412:	b08a      	sub	sp, #40	@ 0x28
 8001414:	af04      	add	r7, sp, #16
 8001416:	60f8      	str	r0, [r7, #12]
 8001418:	60b9      	str	r1, [r7, #8]
 800141a:	607a      	str	r2, [r7, #4]
    uint8_t buffer[6];
    HAL_I2C_Mem_Read(&hi2c1, (ADXL345_ADDR << 1), 0x32, I2C_MEMADD_SIZE_8BIT, buffer, 6, HAL_MAX_DELAY);
 800141c:	f04f 33ff 	mov.w	r3, #4294967295
 8001420:	9302      	str	r3, [sp, #8]
 8001422:	2306      	movs	r3, #6
 8001424:	9301      	str	r3, [sp, #4]
 8001426:	f107 0310 	add.w	r3, r7, #16
 800142a:	9300      	str	r3, [sp, #0]
 800142c:	2301      	movs	r3, #1
 800142e:	2232      	movs	r2, #50	@ 0x32
 8001430:	21a6      	movs	r1, #166	@ 0xa6
 8001432:	4811      	ldr	r0, [pc, #68]	@ (8001478 <ADXL345_ReadData+0x68>)
 8001434:	f001 ff46 	bl	80032c4 <HAL_I2C_Mem_Read>
    *x = (int16_t)((buffer[1] << 8) | buffer[0]);
 8001438:	7c7b      	ldrb	r3, [r7, #17]
 800143a:	021b      	lsls	r3, r3, #8
 800143c:	b21a      	sxth	r2, r3
 800143e:	7c3b      	ldrb	r3, [r7, #16]
 8001440:	b21b      	sxth	r3, r3
 8001442:	4313      	orrs	r3, r2
 8001444:	b21a      	sxth	r2, r3
 8001446:	68fb      	ldr	r3, [r7, #12]
 8001448:	801a      	strh	r2, [r3, #0]
    *y = (int16_t)((buffer[3] << 8) | buffer[2]);
 800144a:	7cfb      	ldrb	r3, [r7, #19]
 800144c:	021b      	lsls	r3, r3, #8
 800144e:	b21a      	sxth	r2, r3
 8001450:	7cbb      	ldrb	r3, [r7, #18]
 8001452:	b21b      	sxth	r3, r3
 8001454:	4313      	orrs	r3, r2
 8001456:	b21a      	sxth	r2, r3
 8001458:	68bb      	ldr	r3, [r7, #8]
 800145a:	801a      	strh	r2, [r3, #0]
    *z = (int16_t)((buffer[5] << 8) | buffer[4]);
 800145c:	7d7b      	ldrb	r3, [r7, #21]
 800145e:	021b      	lsls	r3, r3, #8
 8001460:	b21a      	sxth	r2, r3
 8001462:	7d3b      	ldrb	r3, [r7, #20]
 8001464:	b21b      	sxth	r3, r3
 8001466:	4313      	orrs	r3, r2
 8001468:	b21a      	sxth	r2, r3
 800146a:	687b      	ldr	r3, [r7, #4]
 800146c:	801a      	strh	r2, [r3, #0]
}
 800146e:	bf00      	nop
 8001470:	3718      	adds	r7, #24
 8001472:	46bd      	mov	sp, r7
 8001474:	bd80      	pop	{r7, pc}
 8001476:	bf00      	nop
 8001478:	20000270 	.word	0x20000270

0800147c <HMC5883L_ReadData>:

void HMC5883L_ReadData(int16_t *x, int16_t *y, int16_t *z) {
 800147c:	b580      	push	{r7, lr}
 800147e:	b08a      	sub	sp, #40	@ 0x28
 8001480:	af04      	add	r7, sp, #16
 8001482:	60f8      	str	r0, [r7, #12]
 8001484:	60b9      	str	r1, [r7, #8]
 8001486:	607a      	str	r2, [r7, #4]
    uint8_t buffer[6];
    HAL_I2C_Mem_Read(&hi2c1, (HMC5883L_ADDR << 1), 0x03, I2C_MEMADD_SIZE_8BIT, buffer, 6, HAL_MAX_DELAY);
 8001488:	f04f 33ff 	mov.w	r3, #4294967295
 800148c:	9302      	str	r3, [sp, #8]
 800148e:	2306      	movs	r3, #6
 8001490:	9301      	str	r3, [sp, #4]
 8001492:	f107 0310 	add.w	r3, r7, #16
 8001496:	9300      	str	r3, [sp, #0]
 8001498:	2301      	movs	r3, #1
 800149a:	2203      	movs	r2, #3
 800149c:	213c      	movs	r1, #60	@ 0x3c
 800149e:	4811      	ldr	r0, [pc, #68]	@ (80014e4 <HMC5883L_ReadData+0x68>)
 80014a0:	f001 ff10 	bl	80032c4 <HAL_I2C_Mem_Read>
    *x = (int16_t)((buffer[0] << 8) | buffer[1]);
 80014a4:	7c3b      	ldrb	r3, [r7, #16]
 80014a6:	021b      	lsls	r3, r3, #8
 80014a8:	b21a      	sxth	r2, r3
 80014aa:	7c7b      	ldrb	r3, [r7, #17]
 80014ac:	b21b      	sxth	r3, r3
 80014ae:	4313      	orrs	r3, r2
 80014b0:	b21a      	sxth	r2, r3
 80014b2:	68fb      	ldr	r3, [r7, #12]
 80014b4:	801a      	strh	r2, [r3, #0]
    *z = (int16_t)((buffer[2] << 8) | buffer[3]);
 80014b6:	7cbb      	ldrb	r3, [r7, #18]
 80014b8:	021b      	lsls	r3, r3, #8
 80014ba:	b21a      	sxth	r2, r3
 80014bc:	7cfb      	ldrb	r3, [r7, #19]
 80014be:	b21b      	sxth	r3, r3
 80014c0:	4313      	orrs	r3, r2
 80014c2:	b21a      	sxth	r2, r3
 80014c4:	687b      	ldr	r3, [r7, #4]
 80014c6:	801a      	strh	r2, [r3, #0]
    *y = (int16_t)((buffer[4] << 8) | buffer[5]);
 80014c8:	7d3b      	ldrb	r3, [r7, #20]
 80014ca:	021b      	lsls	r3, r3, #8
 80014cc:	b21a      	sxth	r2, r3
 80014ce:	7d7b      	ldrb	r3, [r7, #21]
 80014d0:	b21b      	sxth	r3, r3
 80014d2:	4313      	orrs	r3, r2
 80014d4:	b21a      	sxth	r2, r3
 80014d6:	68bb      	ldr	r3, [r7, #8]
 80014d8:	801a      	strh	r2, [r3, #0]
}
 80014da:	bf00      	nop
 80014dc:	3718      	adds	r7, #24
 80014de:	46bd      	mov	sp, r7
 80014e0:	bd80      	pop	{r7, pc}
 80014e2:	bf00      	nop
 80014e4:	20000270 	.word	0x20000270

080014e8 <ITG3205_ReadData>:

void ITG3205_ReadData(int16_t *x, int16_t *y, int16_t *z) {
 80014e8:	b580      	push	{r7, lr}
 80014ea:	b08a      	sub	sp, #40	@ 0x28
 80014ec:	af04      	add	r7, sp, #16
 80014ee:	60f8      	str	r0, [r7, #12]
 80014f0:	60b9      	str	r1, [r7, #8]
 80014f2:	607a      	str	r2, [r7, #4]
    uint8_t buffer[6];
    HAL_I2C_Mem_Read(&hi2c1, (ITG3205_ADDR << 1), 0x1D, I2C_MEMADD_SIZE_8BIT, buffer, 6, HAL_MAX_DELAY);
 80014f4:	f04f 33ff 	mov.w	r3, #4294967295
 80014f8:	9302      	str	r3, [sp, #8]
 80014fa:	2306      	movs	r3, #6
 80014fc:	9301      	str	r3, [sp, #4]
 80014fe:	f107 0310 	add.w	r3, r7, #16
 8001502:	9300      	str	r3, [sp, #0]
 8001504:	2301      	movs	r3, #1
 8001506:	221d      	movs	r2, #29
 8001508:	21d0      	movs	r1, #208	@ 0xd0
 800150a:	4811      	ldr	r0, [pc, #68]	@ (8001550 <ITG3205_ReadData+0x68>)
 800150c:	f001 feda 	bl	80032c4 <HAL_I2C_Mem_Read>
    *x = (int16_t)((buffer[0] << 8) | buffer[1]);
 8001510:	7c3b      	ldrb	r3, [r7, #16]
 8001512:	021b      	lsls	r3, r3, #8
 8001514:	b21a      	sxth	r2, r3
 8001516:	7c7b      	ldrb	r3, [r7, #17]
 8001518:	b21b      	sxth	r3, r3
 800151a:	4313      	orrs	r3, r2
 800151c:	b21a      	sxth	r2, r3
 800151e:	68fb      	ldr	r3, [r7, #12]
 8001520:	801a      	strh	r2, [r3, #0]
    *y = (int16_t)((buffer[2] << 8) | buffer[3]);
 8001522:	7cbb      	ldrb	r3, [r7, #18]
 8001524:	021b      	lsls	r3, r3, #8
 8001526:	b21a      	sxth	r2, r3
 8001528:	7cfb      	ldrb	r3, [r7, #19]
 800152a:	b21b      	sxth	r3, r3
 800152c:	4313      	orrs	r3, r2
 800152e:	b21a      	sxth	r2, r3
 8001530:	68bb      	ldr	r3, [r7, #8]
 8001532:	801a      	strh	r2, [r3, #0]
    *z = (int16_t)((buffer[4] << 8) | buffer[5]);
 8001534:	7d3b      	ldrb	r3, [r7, #20]
 8001536:	021b      	lsls	r3, r3, #8
 8001538:	b21a      	sxth	r2, r3
 800153a:	7d7b      	ldrb	r3, [r7, #21]
 800153c:	b21b      	sxth	r3, r3
 800153e:	4313      	orrs	r3, r2
 8001540:	b21a      	sxth	r2, r3
 8001542:	687b      	ldr	r3, [r7, #4]
 8001544:	801a      	strh	r2, [r3, #0]
}
 8001546:	bf00      	nop
 8001548:	3718      	adds	r7, #24
 800154a:	46bd      	mov	sp, r7
 800154c:	bd80      	pop	{r7, pc}
 800154e:	bf00      	nop
 8001550:	20000270 	.word	0x20000270

08001554 <Sensor_Read>:

void Sensor_Read(struct girodata_t* giro) {
 8001554:	b580      	push	{r7, lr}
 8001556:	b082      	sub	sp, #8
 8001558:	af00      	add	r7, sp, #0
 800155a:	6078      	str	r0, [r7, #4]
    // Leer datos crudos de sensores
    ADXL345_ReadData(&giro->ax, &giro->ay, &giro->az);
 800155c:	6878      	ldr	r0, [r7, #4]
 800155e:	687b      	ldr	r3, [r7, #4]
 8001560:	1c99      	adds	r1, r3, #2
 8001562:	687b      	ldr	r3, [r7, #4]
 8001564:	3304      	adds	r3, #4
 8001566:	461a      	mov	r2, r3
 8001568:	f7ff ff52 	bl	8001410 <ADXL345_ReadData>
    ITG3205_ReadData(&giro->gx, &giro->gy, &giro->gz);
 800156c:	687b      	ldr	r3, [r7, #4]
 800156e:	1d98      	adds	r0, r3, #6
 8001570:	687b      	ldr	r3, [r7, #4]
 8001572:	f103 0108 	add.w	r1, r3, #8
 8001576:	687b      	ldr	r3, [r7, #4]
 8001578:	330a      	adds	r3, #10
 800157a:	461a      	mov	r2, r3
 800157c:	f7ff ffb4 	bl	80014e8 <ITG3205_ReadData>
    HMC5883L_ReadData(&giro->mx, &giro->my, &giro->mz);
 8001580:	687b      	ldr	r3, [r7, #4]
 8001582:	f103 000c 	add.w	r0, r3, #12
 8001586:	687b      	ldr	r3, [r7, #4]
 8001588:	f103 010e 	add.w	r1, r3, #14
 800158c:	687b      	ldr	r3, [r7, #4]
 800158e:	3310      	adds	r3, #16
 8001590:	461a      	mov	r2, r3
 8001592:	f7ff ff73 	bl	800147c <HMC5883L_ReadData>

    // Compensar datos
    CompensateAccelerometer(&giro->ax, &giro->ay, &giro->az);
 8001596:	6878      	ldr	r0, [r7, #4]
 8001598:	687b      	ldr	r3, [r7, #4]
 800159a:	1c99      	adds	r1, r3, #2
 800159c:	687b      	ldr	r3, [r7, #4]
 800159e:	3304      	adds	r3, #4
 80015a0:	461a      	mov	r2, r3
 80015a2:	f000 f9c9 	bl	8001938 <CompensateAccelerometer>
    CompensateGyroscope(&giro->gx, &giro->gy, &giro->gz);
 80015a6:	687b      	ldr	r3, [r7, #4]
 80015a8:	1d98      	adds	r0, r3, #6
 80015aa:	687b      	ldr	r3, [r7, #4]
 80015ac:	f103 0108 	add.w	r1, r3, #8
 80015b0:	687b      	ldr	r3, [r7, #4]
 80015b2:	330a      	adds	r3, #10
 80015b4:	461a      	mov	r2, r3
 80015b6:	f000 fa69 	bl	8001a8c <CompensateGyroscope>
    CompensateMagnetometer(&giro->mx, &giro->my, &giro->mz);
 80015ba:	687b      	ldr	r3, [r7, #4]
 80015bc:	f103 000c 	add.w	r0, r3, #12
 80015c0:	687b      	ldr	r3, [r7, #4]
 80015c2:	f103 010e 	add.w	r1, r3, #14
 80015c6:	687b      	ldr	r3, [r7, #4]
 80015c8:	3310      	adds	r3, #16
 80015ca:	461a      	mov	r2, r3
 80015cc:	f000 f8d2 	bl	8001774 <CompensateMagnetometer>

}
 80015d0:	bf00      	nop
 80015d2:	3708      	adds	r7, #8
 80015d4:	46bd      	mov	sp, r7
 80015d6:	bd80      	pop	{r7, pc}

080015d8 <CalibrateMagnetometer>:
// Variables globales para compensación
float mag_min_x = 0, mag_max_x = 0;
float mag_min_y = 0, mag_max_y = 0;
float mag_min_z = 0, mag_max_z = 0;

void CalibrateMagnetometer() {
 80015d8:	b580      	push	{r7, lr}
 80015da:	b084      	sub	sp, #16
 80015dc:	af00      	add	r7, sp, #0
    mag_min_x = mag_min_y = mag_min_z = 32767;
 80015de:	4b5e      	ldr	r3, [pc, #376]	@ (8001758 <CalibrateMagnetometer+0x180>)
 80015e0:	4a5e      	ldr	r2, [pc, #376]	@ (800175c <CalibrateMagnetometer+0x184>)
 80015e2:	601a      	str	r2, [r3, #0]
 80015e4:	4b5c      	ldr	r3, [pc, #368]	@ (8001758 <CalibrateMagnetometer+0x180>)
 80015e6:	681b      	ldr	r3, [r3, #0]
 80015e8:	4a5d      	ldr	r2, [pc, #372]	@ (8001760 <CalibrateMagnetometer+0x188>)
 80015ea:	6013      	str	r3, [r2, #0]
 80015ec:	4b5c      	ldr	r3, [pc, #368]	@ (8001760 <CalibrateMagnetometer+0x188>)
 80015ee:	681b      	ldr	r3, [r3, #0]
 80015f0:	4a5c      	ldr	r2, [pc, #368]	@ (8001764 <CalibrateMagnetometer+0x18c>)
 80015f2:	6013      	str	r3, [r2, #0]
    mag_max_x = mag_max_y = mag_max_z = -32768;
 80015f4:	4b5c      	ldr	r3, [pc, #368]	@ (8001768 <CalibrateMagnetometer+0x190>)
 80015f6:	f04f 4247 	mov.w	r2, #3338665984	@ 0xc7000000
 80015fa:	601a      	str	r2, [r3, #0]
 80015fc:	4b5a      	ldr	r3, [pc, #360]	@ (8001768 <CalibrateMagnetometer+0x190>)
 80015fe:	681b      	ldr	r3, [r3, #0]
 8001600:	4a5a      	ldr	r2, [pc, #360]	@ (800176c <CalibrateMagnetometer+0x194>)
 8001602:	6013      	str	r3, [r2, #0]
 8001604:	4b59      	ldr	r3, [pc, #356]	@ (800176c <CalibrateMagnetometer+0x194>)
 8001606:	681b      	ldr	r3, [r3, #0]
 8001608:	4a59      	ldr	r2, [pc, #356]	@ (8001770 <CalibrateMagnetometer+0x198>)
 800160a:	6013      	str	r3, [r2, #0]

    for (int i = 0; i < 1000; i++) {
 800160c:	2300      	movs	r3, #0
 800160e:	60fb      	str	r3, [r7, #12]
 8001610:	e097      	b.n	8001742 <CalibrateMagnetometer+0x16a>
        int16_t x, y, z;
        HMC5883L_ReadData(&x, &y, &z);
 8001612:	1dba      	adds	r2, r7, #6
 8001614:	f107 0108 	add.w	r1, r7, #8
 8001618:	f107 030a 	add.w	r3, r7, #10
 800161c:	4618      	mov	r0, r3
 800161e:	f7ff ff2d 	bl	800147c <HMC5883L_ReadData>

        if (x < mag_min_x) mag_min_x = x;
 8001622:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 8001626:	ee07 3a90 	vmov	s15, r3
 800162a:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800162e:	4b4d      	ldr	r3, [pc, #308]	@ (8001764 <CalibrateMagnetometer+0x18c>)
 8001630:	edd3 7a00 	vldr	s15, [r3]
 8001634:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8001638:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800163c:	d508      	bpl.n	8001650 <CalibrateMagnetometer+0x78>
 800163e:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 8001642:	ee07 3a90 	vmov	s15, r3
 8001646:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800164a:	4b46      	ldr	r3, [pc, #280]	@ (8001764 <CalibrateMagnetometer+0x18c>)
 800164c:	edc3 7a00 	vstr	s15, [r3]
        if (x > mag_max_x) mag_max_x = x;
 8001650:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 8001654:	ee07 3a90 	vmov	s15, r3
 8001658:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800165c:	4b44      	ldr	r3, [pc, #272]	@ (8001770 <CalibrateMagnetometer+0x198>)
 800165e:	edd3 7a00 	vldr	s15, [r3]
 8001662:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8001666:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800166a:	dd08      	ble.n	800167e <CalibrateMagnetometer+0xa6>
 800166c:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 8001670:	ee07 3a90 	vmov	s15, r3
 8001674:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001678:	4b3d      	ldr	r3, [pc, #244]	@ (8001770 <CalibrateMagnetometer+0x198>)
 800167a:	edc3 7a00 	vstr	s15, [r3]
        if (y < mag_min_y) mag_min_y = y;
 800167e:	f9b7 3008 	ldrsh.w	r3, [r7, #8]
 8001682:	ee07 3a90 	vmov	s15, r3
 8001686:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800168a:	4b35      	ldr	r3, [pc, #212]	@ (8001760 <CalibrateMagnetometer+0x188>)
 800168c:	edd3 7a00 	vldr	s15, [r3]
 8001690:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8001694:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001698:	d508      	bpl.n	80016ac <CalibrateMagnetometer+0xd4>
 800169a:	f9b7 3008 	ldrsh.w	r3, [r7, #8]
 800169e:	ee07 3a90 	vmov	s15, r3
 80016a2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80016a6:	4b2e      	ldr	r3, [pc, #184]	@ (8001760 <CalibrateMagnetometer+0x188>)
 80016a8:	edc3 7a00 	vstr	s15, [r3]
        if (y > mag_max_y) mag_max_y = y;
 80016ac:	f9b7 3008 	ldrsh.w	r3, [r7, #8]
 80016b0:	ee07 3a90 	vmov	s15, r3
 80016b4:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80016b8:	4b2c      	ldr	r3, [pc, #176]	@ (800176c <CalibrateMagnetometer+0x194>)
 80016ba:	edd3 7a00 	vldr	s15, [r3]
 80016be:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80016c2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80016c6:	dd08      	ble.n	80016da <CalibrateMagnetometer+0x102>
 80016c8:	f9b7 3008 	ldrsh.w	r3, [r7, #8]
 80016cc:	ee07 3a90 	vmov	s15, r3
 80016d0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80016d4:	4b25      	ldr	r3, [pc, #148]	@ (800176c <CalibrateMagnetometer+0x194>)
 80016d6:	edc3 7a00 	vstr	s15, [r3]
        if (z < mag_min_z) mag_min_z = z;
 80016da:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 80016de:	ee07 3a90 	vmov	s15, r3
 80016e2:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80016e6:	4b1c      	ldr	r3, [pc, #112]	@ (8001758 <CalibrateMagnetometer+0x180>)
 80016e8:	edd3 7a00 	vldr	s15, [r3]
 80016ec:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80016f0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80016f4:	d508      	bpl.n	8001708 <CalibrateMagnetometer+0x130>
 80016f6:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 80016fa:	ee07 3a90 	vmov	s15, r3
 80016fe:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001702:	4b15      	ldr	r3, [pc, #84]	@ (8001758 <CalibrateMagnetometer+0x180>)
 8001704:	edc3 7a00 	vstr	s15, [r3]
        if (z > mag_max_z) mag_max_z = z;
 8001708:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 800170c:	ee07 3a90 	vmov	s15, r3
 8001710:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8001714:	4b14      	ldr	r3, [pc, #80]	@ (8001768 <CalibrateMagnetometer+0x190>)
 8001716:	edd3 7a00 	vldr	s15, [r3]
 800171a:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800171e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001722:	dd08      	ble.n	8001736 <CalibrateMagnetometer+0x15e>
 8001724:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8001728:	ee07 3a90 	vmov	s15, r3
 800172c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001730:	4b0d      	ldr	r3, [pc, #52]	@ (8001768 <CalibrateMagnetometer+0x190>)
 8001732:	edc3 7a00 	vstr	s15, [r3]

        HAL_Delay(10);
 8001736:	200a      	movs	r0, #10
 8001738:	f001 f8d8 	bl	80028ec <HAL_Delay>
    for (int i = 0; i < 1000; i++) {
 800173c:	68fb      	ldr	r3, [r7, #12]
 800173e:	3301      	adds	r3, #1
 8001740:	60fb      	str	r3, [r7, #12]
 8001742:	68fb      	ldr	r3, [r7, #12]
 8001744:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 8001748:	f6ff af63 	blt.w	8001612 <CalibrateMagnetometer+0x3a>
    }
}
 800174c:	bf00      	nop
 800174e:	bf00      	nop
 8001750:	3710      	adds	r7, #16
 8001752:	46bd      	mov	sp, r7
 8001754:	bd80      	pop	{r7, pc}
 8001756:	bf00      	nop
 8001758:	20000268 	.word	0x20000268
 800175c:	46fffe00 	.word	0x46fffe00
 8001760:	20000260 	.word	0x20000260
 8001764:	20000258 	.word	0x20000258
 8001768:	2000026c 	.word	0x2000026c
 800176c:	20000264 	.word	0x20000264
 8001770:	2000025c 	.word	0x2000025c

08001774 <CompensateMagnetometer>:

void CompensateMagnetometer(int16_t *x, int16_t *y, int16_t *z) {
 8001774:	b480      	push	{r7}
 8001776:	b085      	sub	sp, #20
 8001778:	af00      	add	r7, sp, #0
 800177a:	60f8      	str	r0, [r7, #12]
 800177c:	60b9      	str	r1, [r7, #8]
 800177e:	607a      	str	r2, [r7, #4]
    *x = 2 * (*x - mag_min_x) / (mag_max_x - mag_min_x) - 1;
 8001780:	68fb      	ldr	r3, [r7, #12]
 8001782:	f9b3 3000 	ldrsh.w	r3, [r3]
 8001786:	ee07 3a90 	vmov	s15, r3
 800178a:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800178e:	4b34      	ldr	r3, [pc, #208]	@ (8001860 <CompensateMagnetometer+0xec>)
 8001790:	edd3 7a00 	vldr	s15, [r3]
 8001794:	ee77 7a67 	vsub.f32	s15, s14, s15
 8001798:	ee77 6aa7 	vadd.f32	s13, s15, s15
 800179c:	4b31      	ldr	r3, [pc, #196]	@ (8001864 <CompensateMagnetometer+0xf0>)
 800179e:	ed93 7a00 	vldr	s14, [r3]
 80017a2:	4b2f      	ldr	r3, [pc, #188]	@ (8001860 <CompensateMagnetometer+0xec>)
 80017a4:	edd3 7a00 	vldr	s15, [r3]
 80017a8:	ee37 7a67 	vsub.f32	s14, s14, s15
 80017ac:	eec6 7a87 	vdiv.f32	s15, s13, s14
 80017b0:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80017b4:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80017b8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80017bc:	ee17 3a90 	vmov	r3, s15
 80017c0:	b21a      	sxth	r2, r3
 80017c2:	68fb      	ldr	r3, [r7, #12]
 80017c4:	801a      	strh	r2, [r3, #0]
    *y = 2 * (*y - mag_min_y) / (mag_max_y - mag_min_y) - 1;
 80017c6:	68bb      	ldr	r3, [r7, #8]
 80017c8:	f9b3 3000 	ldrsh.w	r3, [r3]
 80017cc:	ee07 3a90 	vmov	s15, r3
 80017d0:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80017d4:	4b24      	ldr	r3, [pc, #144]	@ (8001868 <CompensateMagnetometer+0xf4>)
 80017d6:	edd3 7a00 	vldr	s15, [r3]
 80017da:	ee77 7a67 	vsub.f32	s15, s14, s15
 80017de:	ee77 6aa7 	vadd.f32	s13, s15, s15
 80017e2:	4b22      	ldr	r3, [pc, #136]	@ (800186c <CompensateMagnetometer+0xf8>)
 80017e4:	ed93 7a00 	vldr	s14, [r3]
 80017e8:	4b1f      	ldr	r3, [pc, #124]	@ (8001868 <CompensateMagnetometer+0xf4>)
 80017ea:	edd3 7a00 	vldr	s15, [r3]
 80017ee:	ee37 7a67 	vsub.f32	s14, s14, s15
 80017f2:	eec6 7a87 	vdiv.f32	s15, s13, s14
 80017f6:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80017fa:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80017fe:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8001802:	ee17 3a90 	vmov	r3, s15
 8001806:	b21a      	sxth	r2, r3
 8001808:	68bb      	ldr	r3, [r7, #8]
 800180a:	801a      	strh	r2, [r3, #0]
    *z = 2 * (*z - mag_min_z) / (mag_max_z - mag_min_z) - 1;
 800180c:	687b      	ldr	r3, [r7, #4]
 800180e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8001812:	ee07 3a90 	vmov	s15, r3
 8001816:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800181a:	4b15      	ldr	r3, [pc, #84]	@ (8001870 <CompensateMagnetometer+0xfc>)
 800181c:	edd3 7a00 	vldr	s15, [r3]
 8001820:	ee77 7a67 	vsub.f32	s15, s14, s15
 8001824:	ee77 6aa7 	vadd.f32	s13, s15, s15
 8001828:	4b12      	ldr	r3, [pc, #72]	@ (8001874 <CompensateMagnetometer+0x100>)
 800182a:	ed93 7a00 	vldr	s14, [r3]
 800182e:	4b10      	ldr	r3, [pc, #64]	@ (8001870 <CompensateMagnetometer+0xfc>)
 8001830:	edd3 7a00 	vldr	s15, [r3]
 8001834:	ee37 7a67 	vsub.f32	s14, s14, s15
 8001838:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800183c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8001840:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8001844:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8001848:	ee17 3a90 	vmov	r3, s15
 800184c:	b21a      	sxth	r2, r3
 800184e:	687b      	ldr	r3, [r7, #4]
 8001850:	801a      	strh	r2, [r3, #0]
}
 8001852:	bf00      	nop
 8001854:	3714      	adds	r7, #20
 8001856:	46bd      	mov	sp, r7
 8001858:	f85d 7b04 	ldr.w	r7, [sp], #4
 800185c:	4770      	bx	lr
 800185e:	bf00      	nop
 8001860:	20000258 	.word	0x20000258
 8001864:	2000025c 	.word	0x2000025c
 8001868:	20000260 	.word	0x20000260
 800186c:	20000264 	.word	0x20000264
 8001870:	20000268 	.word	0x20000268
 8001874:	2000026c 	.word	0x2000026c

08001878 <CalibrateAccelerometer>:


void CalibrateAccelerometer() {
 8001878:	b580      	push	{r7, lr}
 800187a:	b088      	sub	sp, #32
 800187c:	af00      	add	r7, sp, #0
    int32_t sum_x = 0, sum_y = 0, sum_z = 0;
 800187e:	2300      	movs	r3, #0
 8001880:	61fb      	str	r3, [r7, #28]
 8001882:	2300      	movs	r3, #0
 8001884:	61bb      	str	r3, [r7, #24]
 8001886:	2300      	movs	r3, #0
 8001888:	617b      	str	r3, [r7, #20]
    int samples = 1000;
 800188a:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 800188e:	60fb      	str	r3, [r7, #12]

    for (int i = 0; i < samples; i++) {
 8001890:	2300      	movs	r3, #0
 8001892:	613b      	str	r3, [r7, #16]
 8001894:	e01f      	b.n	80018d6 <CalibrateAccelerometer+0x5e>
        int16_t x, y, z;
        ADXL345_ReadData(&x, &y, &z);
 8001896:	1dba      	adds	r2, r7, #6
 8001898:	f107 0108 	add.w	r1, r7, #8
 800189c:	f107 030a 	add.w	r3, r7, #10
 80018a0:	4618      	mov	r0, r3
 80018a2:	f7ff fdb5 	bl	8001410 <ADXL345_ReadData>
        sum_x += x;
 80018a6:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 80018aa:	461a      	mov	r2, r3
 80018ac:	69fb      	ldr	r3, [r7, #28]
 80018ae:	4413      	add	r3, r2
 80018b0:	61fb      	str	r3, [r7, #28]
        sum_y += y;
 80018b2:	f9b7 3008 	ldrsh.w	r3, [r7, #8]
 80018b6:	461a      	mov	r2, r3
 80018b8:	69bb      	ldr	r3, [r7, #24]
 80018ba:	4413      	add	r3, r2
 80018bc:	61bb      	str	r3, [r7, #24]
        sum_z += z;
 80018be:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 80018c2:	461a      	mov	r2, r3
 80018c4:	697b      	ldr	r3, [r7, #20]
 80018c6:	4413      	add	r3, r2
 80018c8:	617b      	str	r3, [r7, #20]
        HAL_Delay(5);  // Esperar un poco entre lecturas
 80018ca:	2005      	movs	r0, #5
 80018cc:	f001 f80e 	bl	80028ec <HAL_Delay>
    for (int i = 0; i < samples; i++) {
 80018d0:	693b      	ldr	r3, [r7, #16]
 80018d2:	3301      	adds	r3, #1
 80018d4:	613b      	str	r3, [r7, #16]
 80018d6:	693a      	ldr	r2, [r7, #16]
 80018d8:	68fb      	ldr	r3, [r7, #12]
 80018da:	429a      	cmp	r2, r3
 80018dc:	dbdb      	blt.n	8001896 <CalibrateAccelerometer+0x1e>
    }

    accel_offset_x = sum_x / samples;
 80018de:	69fa      	ldr	r2, [r7, #28]
 80018e0:	68fb      	ldr	r3, [r7, #12]
 80018e2:	fb92 f3f3 	sdiv	r3, r2, r3
 80018e6:	ee07 3a90 	vmov	s15, r3
 80018ea:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80018ee:	4b0f      	ldr	r3, [pc, #60]	@ (800192c <CalibrateAccelerometer+0xb4>)
 80018f0:	edc3 7a00 	vstr	s15, [r3]
    accel_offset_y = sum_y / samples;
 80018f4:	69ba      	ldr	r2, [r7, #24]
 80018f6:	68fb      	ldr	r3, [r7, #12]
 80018f8:	fb92 f3f3 	sdiv	r3, r2, r3
 80018fc:	ee07 3a90 	vmov	s15, r3
 8001900:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001904:	4b0a      	ldr	r3, [pc, #40]	@ (8001930 <CalibrateAccelerometer+0xb8>)
 8001906:	edc3 7a00 	vstr	s15, [r3]
    accel_offset_z = (sum_z / samples) - 16384; // Compensar gravedad (1g ≈ 16384 en ±2g)
 800190a:	697a      	ldr	r2, [r7, #20]
 800190c:	68fb      	ldr	r3, [r7, #12]
 800190e:	fb92 f3f3 	sdiv	r3, r2, r3
 8001912:	f5a3 4380 	sub.w	r3, r3, #16384	@ 0x4000
 8001916:	ee07 3a90 	vmov	s15, r3
 800191a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800191e:	4b05      	ldr	r3, [pc, #20]	@ (8001934 <CalibrateAccelerometer+0xbc>)
 8001920:	edc3 7a00 	vstr	s15, [r3]
}
 8001924:	bf00      	nop
 8001926:	3720      	adds	r7, #32
 8001928:	46bd      	mov	sp, r7
 800192a:	bd80      	pop	{r7, pc}
 800192c:	20000240 	.word	0x20000240
 8001930:	20000244 	.word	0x20000244
 8001934:	20000248 	.word	0x20000248

08001938 <CompensateAccelerometer>:

void CompensateAccelerometer(int16_t *x, int16_t *y, int16_t *z) {
 8001938:	b480      	push	{r7}
 800193a:	b085      	sub	sp, #20
 800193c:	af00      	add	r7, sp, #0
 800193e:	60f8      	str	r0, [r7, #12]
 8001940:	60b9      	str	r1, [r7, #8]
 8001942:	607a      	str	r2, [r7, #4]
    *x -= accel_offset_x;
 8001944:	68fb      	ldr	r3, [r7, #12]
 8001946:	f9b3 3000 	ldrsh.w	r3, [r3]
 800194a:	ee07 3a90 	vmov	s15, r3
 800194e:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8001952:	4b1c      	ldr	r3, [pc, #112]	@ (80019c4 <CompensateAccelerometer+0x8c>)
 8001954:	edd3 7a00 	vldr	s15, [r3]
 8001958:	ee77 7a67 	vsub.f32	s15, s14, s15
 800195c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8001960:	ee17 3a90 	vmov	r3, s15
 8001964:	b21a      	sxth	r2, r3
 8001966:	68fb      	ldr	r3, [r7, #12]
 8001968:	801a      	strh	r2, [r3, #0]
    *y -= accel_offset_y;
 800196a:	68bb      	ldr	r3, [r7, #8]
 800196c:	f9b3 3000 	ldrsh.w	r3, [r3]
 8001970:	ee07 3a90 	vmov	s15, r3
 8001974:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8001978:	4b13      	ldr	r3, [pc, #76]	@ (80019c8 <CompensateAccelerometer+0x90>)
 800197a:	edd3 7a00 	vldr	s15, [r3]
 800197e:	ee77 7a67 	vsub.f32	s15, s14, s15
 8001982:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8001986:	ee17 3a90 	vmov	r3, s15
 800198a:	b21a      	sxth	r2, r3
 800198c:	68bb      	ldr	r3, [r7, #8]
 800198e:	801a      	strh	r2, [r3, #0]
    *z -= accel_offset_z;
 8001990:	687b      	ldr	r3, [r7, #4]
 8001992:	f9b3 3000 	ldrsh.w	r3, [r3]
 8001996:	ee07 3a90 	vmov	s15, r3
 800199a:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800199e:	4b0b      	ldr	r3, [pc, #44]	@ (80019cc <CompensateAccelerometer+0x94>)
 80019a0:	edd3 7a00 	vldr	s15, [r3]
 80019a4:	ee77 7a67 	vsub.f32	s15, s14, s15
 80019a8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80019ac:	ee17 3a90 	vmov	r3, s15
 80019b0:	b21a      	sxth	r2, r3
 80019b2:	687b      	ldr	r3, [r7, #4]
 80019b4:	801a      	strh	r2, [r3, #0]
}
 80019b6:	bf00      	nop
 80019b8:	3714      	adds	r7, #20
 80019ba:	46bd      	mov	sp, r7
 80019bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80019c0:	4770      	bx	lr
 80019c2:	bf00      	nop
 80019c4:	20000240 	.word	0x20000240
 80019c8:	20000244 	.word	0x20000244
 80019cc:	20000248 	.word	0x20000248

080019d0 <CalibrateGyroscope>:



void CalibrateGyroscope() {
 80019d0:	b580      	push	{r7, lr}
 80019d2:	b088      	sub	sp, #32
 80019d4:	af00      	add	r7, sp, #0
    int32_t sum_x = 0, sum_y = 0, sum_z = 0;
 80019d6:	2300      	movs	r3, #0
 80019d8:	61fb      	str	r3, [r7, #28]
 80019da:	2300      	movs	r3, #0
 80019dc:	61bb      	str	r3, [r7, #24]
 80019de:	2300      	movs	r3, #0
 80019e0:	617b      	str	r3, [r7, #20]
    int samples = 1000;
 80019e2:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 80019e6:	60fb      	str	r3, [r7, #12]

    for (int i = 0; i < samples; i++) {
 80019e8:	2300      	movs	r3, #0
 80019ea:	613b      	str	r3, [r7, #16]
 80019ec:	e01f      	b.n	8001a2e <CalibrateGyroscope+0x5e>
        int16_t x, y, z;
        ITG3205_ReadData(&x, &y, &z);
 80019ee:	1dba      	adds	r2, r7, #6
 80019f0:	f107 0108 	add.w	r1, r7, #8
 80019f4:	f107 030a 	add.w	r3, r7, #10
 80019f8:	4618      	mov	r0, r3
 80019fa:	f7ff fd75 	bl	80014e8 <ITG3205_ReadData>
        sum_x += x;
 80019fe:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 8001a02:	461a      	mov	r2, r3
 8001a04:	69fb      	ldr	r3, [r7, #28]
 8001a06:	4413      	add	r3, r2
 8001a08:	61fb      	str	r3, [r7, #28]
        sum_y += y;
 8001a0a:	f9b7 3008 	ldrsh.w	r3, [r7, #8]
 8001a0e:	461a      	mov	r2, r3
 8001a10:	69bb      	ldr	r3, [r7, #24]
 8001a12:	4413      	add	r3, r2
 8001a14:	61bb      	str	r3, [r7, #24]
        sum_z += z;
 8001a16:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8001a1a:	461a      	mov	r2, r3
 8001a1c:	697b      	ldr	r3, [r7, #20]
 8001a1e:	4413      	add	r3, r2
 8001a20:	617b      	str	r3, [r7, #20]
        HAL_Delay(5);
 8001a22:	2005      	movs	r0, #5
 8001a24:	f000 ff62 	bl	80028ec <HAL_Delay>
    for (int i = 0; i < samples; i++) {
 8001a28:	693b      	ldr	r3, [r7, #16]
 8001a2a:	3301      	adds	r3, #1
 8001a2c:	613b      	str	r3, [r7, #16]
 8001a2e:	693a      	ldr	r2, [r7, #16]
 8001a30:	68fb      	ldr	r3, [r7, #12]
 8001a32:	429a      	cmp	r2, r3
 8001a34:	dbdb      	blt.n	80019ee <CalibrateGyroscope+0x1e>
    }

    gyro_offset_x = sum_x / samples;
 8001a36:	69fa      	ldr	r2, [r7, #28]
 8001a38:	68fb      	ldr	r3, [r7, #12]
 8001a3a:	fb92 f3f3 	sdiv	r3, r2, r3
 8001a3e:	ee07 3a90 	vmov	s15, r3
 8001a42:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001a46:	4b0e      	ldr	r3, [pc, #56]	@ (8001a80 <CalibrateGyroscope+0xb0>)
 8001a48:	edc3 7a00 	vstr	s15, [r3]
    gyro_offset_y = sum_y / samples;
 8001a4c:	69ba      	ldr	r2, [r7, #24]
 8001a4e:	68fb      	ldr	r3, [r7, #12]
 8001a50:	fb92 f3f3 	sdiv	r3, r2, r3
 8001a54:	ee07 3a90 	vmov	s15, r3
 8001a58:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001a5c:	4b09      	ldr	r3, [pc, #36]	@ (8001a84 <CalibrateGyroscope+0xb4>)
 8001a5e:	edc3 7a00 	vstr	s15, [r3]
    gyro_offset_z = sum_z / samples;
 8001a62:	697a      	ldr	r2, [r7, #20]
 8001a64:	68fb      	ldr	r3, [r7, #12]
 8001a66:	fb92 f3f3 	sdiv	r3, r2, r3
 8001a6a:	ee07 3a90 	vmov	s15, r3
 8001a6e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001a72:	4b05      	ldr	r3, [pc, #20]	@ (8001a88 <CalibrateGyroscope+0xb8>)
 8001a74:	edc3 7a00 	vstr	s15, [r3]
}
 8001a78:	bf00      	nop
 8001a7a:	3720      	adds	r7, #32
 8001a7c:	46bd      	mov	sp, r7
 8001a7e:	bd80      	pop	{r7, pc}
 8001a80:	2000024c 	.word	0x2000024c
 8001a84:	20000250 	.word	0x20000250
 8001a88:	20000254 	.word	0x20000254

08001a8c <CompensateGyroscope>:

void CompensateGyroscope(int16_t *x, int16_t *y, int16_t *z) {
 8001a8c:	b480      	push	{r7}
 8001a8e:	b085      	sub	sp, #20
 8001a90:	af00      	add	r7, sp, #0
 8001a92:	60f8      	str	r0, [r7, #12]
 8001a94:	60b9      	str	r1, [r7, #8]
 8001a96:	607a      	str	r2, [r7, #4]
    *x -= gyro_offset_x;
 8001a98:	68fb      	ldr	r3, [r7, #12]
 8001a9a:	f9b3 3000 	ldrsh.w	r3, [r3]
 8001a9e:	ee07 3a90 	vmov	s15, r3
 8001aa2:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8001aa6:	4b1c      	ldr	r3, [pc, #112]	@ (8001b18 <CompensateGyroscope+0x8c>)
 8001aa8:	edd3 7a00 	vldr	s15, [r3]
 8001aac:	ee77 7a67 	vsub.f32	s15, s14, s15
 8001ab0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8001ab4:	ee17 3a90 	vmov	r3, s15
 8001ab8:	b21a      	sxth	r2, r3
 8001aba:	68fb      	ldr	r3, [r7, #12]
 8001abc:	801a      	strh	r2, [r3, #0]
    *y -= gyro_offset_y;
 8001abe:	68bb      	ldr	r3, [r7, #8]
 8001ac0:	f9b3 3000 	ldrsh.w	r3, [r3]
 8001ac4:	ee07 3a90 	vmov	s15, r3
 8001ac8:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8001acc:	4b13      	ldr	r3, [pc, #76]	@ (8001b1c <CompensateGyroscope+0x90>)
 8001ace:	edd3 7a00 	vldr	s15, [r3]
 8001ad2:	ee77 7a67 	vsub.f32	s15, s14, s15
 8001ad6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8001ada:	ee17 3a90 	vmov	r3, s15
 8001ade:	b21a      	sxth	r2, r3
 8001ae0:	68bb      	ldr	r3, [r7, #8]
 8001ae2:	801a      	strh	r2, [r3, #0]
    *z -= gyro_offset_z;
 8001ae4:	687b      	ldr	r3, [r7, #4]
 8001ae6:	f9b3 3000 	ldrsh.w	r3, [r3]
 8001aea:	ee07 3a90 	vmov	s15, r3
 8001aee:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8001af2:	4b0b      	ldr	r3, [pc, #44]	@ (8001b20 <CompensateGyroscope+0x94>)
 8001af4:	edd3 7a00 	vldr	s15, [r3]
 8001af8:	ee77 7a67 	vsub.f32	s15, s14, s15
 8001afc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8001b00:	ee17 3a90 	vmov	r3, s15
 8001b04:	b21a      	sxth	r2, r3
 8001b06:	687b      	ldr	r3, [r7, #4]
 8001b08:	801a      	strh	r2, [r3, #0]
}
 8001b0a:	bf00      	nop
 8001b0c:	3714      	adds	r7, #20
 8001b0e:	46bd      	mov	sp, r7
 8001b10:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b14:	4770      	bx	lr
 8001b16:	bf00      	nop
 8001b18:	2000024c 	.word	0x2000024c
 8001b1c:	20000250 	.word	0x20000250
 8001b20:	20000254 	.word	0x20000254

08001b24 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8001b24:	b580      	push	{r7, lr}
 8001b26:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8001b28:	f000 fe7a 	bl	8002820 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8001b2c:	f000 f83e 	bl	8001bac <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8001b30:	f000 fabe 	bl	80020b0 <MX_GPIO_Init>
  MX_USART2_UART_Init();
 8001b34:	f000 fa8c 	bl	8002050 <MX_USART2_UART_Init>
  MX_USART1_UART_Init();
 8001b38:	f000 fa5a 	bl	8001ff0 <MX_USART1_UART_Init>
  MX_I2C1_Init();
 8001b3c:	f000 f890 	bl	8001c60 <MX_I2C1_Init>
  MX_TIM1_Init();
 8001b40:	f000 f8ce 	bl	8001ce0 <MX_TIM1_Init>
  MX_TIM2_Init();
 8001b44:	f000 f984 	bl	8001e50 <MX_TIM2_Init>
  MX_TIM3_Init();
 8001b48:	f000 fa04 	bl	8001f54 <MX_TIM3_Init>
  /* USER CODE BEGIN 2 */
  // Inicializar el sensor GY-85
  GY85_Init();
 8001b4c:	f7ff fbf6 	bl	800133c <GY85_Init>

  Control_Init();
 8001b50:	f7ff f8fa 	bl	8000d48 <Control_Init>

  HAL_UART_Receive_IT(&huart1, rx_buffer, sizeof(rx_buffer));
 8001b54:	2280      	movs	r2, #128	@ 0x80
 8001b56:	4910      	ldr	r1, [pc, #64]	@ (8001b98 <main+0x74>)
 8001b58:	4810      	ldr	r0, [pc, #64]	@ (8001b9c <main+0x78>)
 8001b5a:	f004 fe26 	bl	80067aa <HAL_UART_Receive_IT>

  HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_1);
 8001b5e:	2100      	movs	r1, #0
 8001b60:	480f      	ldr	r0, [pc, #60]	@ (8001ba0 <main+0x7c>)
 8001b62:	f003 fc5f 	bl	8005424 <HAL_TIM_PWM_Start>
  HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_4);
 8001b66:	210c      	movs	r1, #12
 8001b68:	480d      	ldr	r0, [pc, #52]	@ (8001ba0 <main+0x7c>)
 8001b6a:	f003 fc5b 	bl	8005424 <HAL_TIM_PWM_Start>
  HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_1);
 8001b6e:	2100      	movs	r1, #0
 8001b70:	480c      	ldr	r0, [pc, #48]	@ (8001ba4 <main+0x80>)
 8001b72:	f003 fc57 	bl	8005424 <HAL_TIM_PWM_Start>
  HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_2);
 8001b76:	2104      	movs	r1, #4
 8001b78:	480a      	ldr	r0, [pc, #40]	@ (8001ba4 <main+0x80>)
 8001b7a:	f003 fc53 	bl	8005424 <HAL_TIM_PWM_Start>

#if Calibrate
  Control_ArmMotors();
 8001b7e:	f7ff f92b 	bl	8000dd8 <Control_ArmMotors>

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
  {
	if (control_update_flag) {
 8001b82:	4b09      	ldr	r3, [pc, #36]	@ (8001ba8 <main+0x84>)
 8001b84:	781b      	ldrb	r3, [r3, #0]
 8001b86:	2b00      	cmp	r3, #0
 8001b88:	d0fb      	beq.n	8001b82 <main+0x5e>
		control_update_flag = 0;
 8001b8a:	4b07      	ldr	r3, [pc, #28]	@ (8001ba8 <main+0x84>)
 8001b8c:	2200      	movs	r2, #0
 8001b8e:	701a      	strb	r2, [r3, #0]
		Control_Update();
 8001b90:	f7ff f956 	bl	8000e40 <Control_Update>
	if (control_update_flag) {
 8001b94:	e7f5      	b.n	8001b82 <main+0x5e>
 8001b96:	bf00      	nop
 8001b98:	200004b8 	.word	0x200004b8
 8001b9c:	200003a8 	.word	0x200003a8
 8001ba0:	200002c4 	.word	0x200002c4
 8001ba4:	20000310 	.word	0x20000310
 8001ba8:	2000053e 	.word	0x2000053e

08001bac <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8001bac:	b580      	push	{r7, lr}
 8001bae:	b096      	sub	sp, #88	@ 0x58
 8001bb0:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001bb2:	f107 0330 	add.w	r3, r7, #48	@ 0x30
 8001bb6:	2228      	movs	r2, #40	@ 0x28
 8001bb8:	2100      	movs	r1, #0
 8001bba:	4618      	mov	r0, r3
 8001bbc:	f006 fd41 	bl	8008642 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001bc0:	f107 031c 	add.w	r3, r7, #28
 8001bc4:	2200      	movs	r2, #0
 8001bc6:	601a      	str	r2, [r3, #0]
 8001bc8:	605a      	str	r2, [r3, #4]
 8001bca:	609a      	str	r2, [r3, #8]
 8001bcc:	60da      	str	r2, [r3, #12]
 8001bce:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 8001bd0:	1d3b      	adds	r3, r7, #4
 8001bd2:	2200      	movs	r2, #0
 8001bd4:	601a      	str	r2, [r3, #0]
 8001bd6:	605a      	str	r2, [r3, #4]
 8001bd8:	609a      	str	r2, [r3, #8]
 8001bda:	60da      	str	r2, [r3, #12]
 8001bdc:	611a      	str	r2, [r3, #16]
 8001bde:	615a      	str	r2, [r3, #20]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 8001be0:	2302      	movs	r3, #2
 8001be2:	633b      	str	r3, [r7, #48]	@ 0x30
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8001be4:	2301      	movs	r3, #1
 8001be6:	643b      	str	r3, [r7, #64]	@ 0x40
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8001be8:	2310      	movs	r3, #16
 8001bea:	647b      	str	r3, [r7, #68]	@ 0x44
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 8001bec:	2300      	movs	r3, #0
 8001bee:	64fb      	str	r3, [r7, #76]	@ 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001bf0:	f107 0330 	add.w	r3, r7, #48	@ 0x30
 8001bf4:	4618      	mov	r0, r3
 8001bf6:	f001 ffd9 	bl	8003bac <HAL_RCC_OscConfig>
 8001bfa:	4603      	mov	r3, r0
 8001bfc:	2b00      	cmp	r3, #0
 8001bfe:	d001      	beq.n	8001c04 <SystemClock_Config+0x58>
  {
    Error_Handler();
 8001c00:	f000 fb2c 	bl	800225c <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001c04:	230f      	movs	r3, #15
 8001c06:	61fb      	str	r3, [r7, #28]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 8001c08:	2300      	movs	r3, #0
 8001c0a:	623b      	str	r3, [r7, #32]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8001c0c:	2300      	movs	r3, #0
 8001c0e:	627b      	str	r3, [r7, #36]	@ 0x24
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 8001c10:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8001c14:	62bb      	str	r3, [r7, #40]	@ 0x28
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8001c16:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8001c1a:	62fb      	str	r3, [r7, #44]	@ 0x2c

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 8001c1c:	f107 031c 	add.w	r3, r7, #28
 8001c20:	2100      	movs	r1, #0
 8001c22:	4618      	mov	r0, r3
 8001c24:	f003 f800 	bl	8004c28 <HAL_RCC_ClockConfig>
 8001c28:	4603      	mov	r3, r0
 8001c2a:	2b00      	cmp	r3, #0
 8001c2c:	d001      	beq.n	8001c32 <SystemClock_Config+0x86>
  {
    Error_Handler();
 8001c2e:	f000 fb15 	bl	800225c <Error_Handler>
  }
  PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART1|RCC_PERIPHCLK_I2C1
 8001c32:	f241 0321 	movw	r3, #4129	@ 0x1021
 8001c36:	607b      	str	r3, [r7, #4]
                              |RCC_PERIPHCLK_TIM1;
  PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK1;
 8001c38:	2300      	movs	r3, #0
 8001c3a:	60fb      	str	r3, [r7, #12]
  PeriphClkInit.I2c1ClockSelection = RCC_I2C1CLKSOURCE_HSI;
 8001c3c:	2300      	movs	r3, #0
 8001c3e:	613b      	str	r3, [r7, #16]
  PeriphClkInit.Tim1ClockSelection = RCC_TIM1CLK_HCLK;
 8001c40:	2300      	movs	r3, #0
 8001c42:	61bb      	str	r3, [r7, #24]
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8001c44:	1d3b      	adds	r3, r7, #4
 8001c46:	4618      	mov	r0, r3
 8001c48:	f003 fa0e 	bl	8005068 <HAL_RCCEx_PeriphCLKConfig>
 8001c4c:	4603      	mov	r3, r0
 8001c4e:	2b00      	cmp	r3, #0
 8001c50:	d001      	beq.n	8001c56 <SystemClock_Config+0xaa>
  {
    Error_Handler();
 8001c52:	f000 fb03 	bl	800225c <Error_Handler>
  }
}
 8001c56:	bf00      	nop
 8001c58:	3758      	adds	r7, #88	@ 0x58
 8001c5a:	46bd      	mov	sp, r7
 8001c5c:	bd80      	pop	{r7, pc}
	...

08001c60 <MX_I2C1_Init>:
  * @brief I2C1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_I2C1_Init(void)
{
 8001c60:	b580      	push	{r7, lr}
 8001c62:	af00      	add	r7, sp, #0
  /* USER CODE END I2C1_Init 0 */

  /* USER CODE BEGIN I2C1_Init 1 */

  /* USER CODE END I2C1_Init 1 */
  hi2c1.Instance = I2C1;
 8001c64:	4b1b      	ldr	r3, [pc, #108]	@ (8001cd4 <MX_I2C1_Init+0x74>)
 8001c66:	4a1c      	ldr	r2, [pc, #112]	@ (8001cd8 <MX_I2C1_Init+0x78>)
 8001c68:	601a      	str	r2, [r3, #0]
  hi2c1.Init.Timing = 0x00201D2B;
 8001c6a:	4b1a      	ldr	r3, [pc, #104]	@ (8001cd4 <MX_I2C1_Init+0x74>)
 8001c6c:	4a1b      	ldr	r2, [pc, #108]	@ (8001cdc <MX_I2C1_Init+0x7c>)
 8001c6e:	605a      	str	r2, [r3, #4]
  hi2c1.Init.OwnAddress1 = 0;
 8001c70:	4b18      	ldr	r3, [pc, #96]	@ (8001cd4 <MX_I2C1_Init+0x74>)
 8001c72:	2200      	movs	r2, #0
 8001c74:	609a      	str	r2, [r3, #8]
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8001c76:	4b17      	ldr	r3, [pc, #92]	@ (8001cd4 <MX_I2C1_Init+0x74>)
 8001c78:	2201      	movs	r2, #1
 8001c7a:	60da      	str	r2, [r3, #12]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8001c7c:	4b15      	ldr	r3, [pc, #84]	@ (8001cd4 <MX_I2C1_Init+0x74>)
 8001c7e:	2200      	movs	r2, #0
 8001c80:	611a      	str	r2, [r3, #16]
  hi2c1.Init.OwnAddress2 = 0;
 8001c82:	4b14      	ldr	r3, [pc, #80]	@ (8001cd4 <MX_I2C1_Init+0x74>)
 8001c84:	2200      	movs	r2, #0
 8001c86:	615a      	str	r2, [r3, #20]
  hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 8001c88:	4b12      	ldr	r3, [pc, #72]	@ (8001cd4 <MX_I2C1_Init+0x74>)
 8001c8a:	2200      	movs	r2, #0
 8001c8c:	619a      	str	r2, [r3, #24]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8001c8e:	4b11      	ldr	r3, [pc, #68]	@ (8001cd4 <MX_I2C1_Init+0x74>)
 8001c90:	2200      	movs	r2, #0
 8001c92:	61da      	str	r2, [r3, #28]
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8001c94:	4b0f      	ldr	r3, [pc, #60]	@ (8001cd4 <MX_I2C1_Init+0x74>)
 8001c96:	2200      	movs	r2, #0
 8001c98:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 8001c9a:	480e      	ldr	r0, [pc, #56]	@ (8001cd4 <MX_I2C1_Init+0x74>)
 8001c9c:	f001 f962 	bl	8002f64 <HAL_I2C_Init>
 8001ca0:	4603      	mov	r3, r0
 8001ca2:	2b00      	cmp	r3, #0
 8001ca4:	d001      	beq.n	8001caa <MX_I2C1_Init+0x4a>
  {
    Error_Handler();
 8001ca6:	f000 fad9 	bl	800225c <Error_Handler>
  }

  /** Configure Analogue filter
  */
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c1, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 8001caa:	2100      	movs	r1, #0
 8001cac:	4809      	ldr	r0, [pc, #36]	@ (8001cd4 <MX_I2C1_Init+0x74>)
 8001cae:	f001 fee5 	bl	8003a7c <HAL_I2CEx_ConfigAnalogFilter>
 8001cb2:	4603      	mov	r3, r0
 8001cb4:	2b00      	cmp	r3, #0
 8001cb6:	d001      	beq.n	8001cbc <MX_I2C1_Init+0x5c>
  {
    Error_Handler();
 8001cb8:	f000 fad0 	bl	800225c <Error_Handler>
  }

  /** Configure Digital filter
  */
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c1, 0) != HAL_OK)
 8001cbc:	2100      	movs	r1, #0
 8001cbe:	4805      	ldr	r0, [pc, #20]	@ (8001cd4 <MX_I2C1_Init+0x74>)
 8001cc0:	f001 ff27 	bl	8003b12 <HAL_I2CEx_ConfigDigitalFilter>
 8001cc4:	4603      	mov	r3, r0
 8001cc6:	2b00      	cmp	r3, #0
 8001cc8:	d001      	beq.n	8001cce <MX_I2C1_Init+0x6e>
  {
    Error_Handler();
 8001cca:	f000 fac7 	bl	800225c <Error_Handler>
  }
  /* USER CODE BEGIN I2C1_Init 2 */

  /* USER CODE END I2C1_Init 2 */

}
 8001cce:	bf00      	nop
 8001cd0:	bd80      	pop	{r7, pc}
 8001cd2:	bf00      	nop
 8001cd4:	20000270 	.word	0x20000270
 8001cd8:	40005400 	.word	0x40005400
 8001cdc:	00201d2b 	.word	0x00201d2b

08001ce0 <MX_TIM1_Init>:
  * @brief TIM1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM1_Init(void)
{
 8001ce0:	b580      	push	{r7, lr}
 8001ce2:	b09a      	sub	sp, #104	@ 0x68
 8001ce4:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM1_Init 0 */

  /* USER CODE END TIM1_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001ce6:	f107 0358 	add.w	r3, r7, #88	@ 0x58
 8001cea:	2200      	movs	r2, #0
 8001cec:	601a      	str	r2, [r3, #0]
 8001cee:	605a      	str	r2, [r3, #4]
 8001cf0:	609a      	str	r2, [r3, #8]
 8001cf2:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001cf4:	f107 034c 	add.w	r3, r7, #76	@ 0x4c
 8001cf8:	2200      	movs	r2, #0
 8001cfa:	601a      	str	r2, [r3, #0]
 8001cfc:	605a      	str	r2, [r3, #4]
 8001cfe:	609a      	str	r2, [r3, #8]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8001d00:	f107 0330 	add.w	r3, r7, #48	@ 0x30
 8001d04:	2200      	movs	r2, #0
 8001d06:	601a      	str	r2, [r3, #0]
 8001d08:	605a      	str	r2, [r3, #4]
 8001d0a:	609a      	str	r2, [r3, #8]
 8001d0c:	60da      	str	r2, [r3, #12]
 8001d0e:	611a      	str	r2, [r3, #16]
 8001d10:	615a      	str	r2, [r3, #20]
 8001d12:	619a      	str	r2, [r3, #24]
  TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 8001d14:	1d3b      	adds	r3, r7, #4
 8001d16:	222c      	movs	r2, #44	@ 0x2c
 8001d18:	2100      	movs	r1, #0
 8001d1a:	4618      	mov	r0, r3
 8001d1c:	f006 fc91 	bl	8008642 <memset>

  /* USER CODE BEGIN TIM1_Init 1 */

  /* USER CODE END TIM1_Init 1 */
  htim1.Instance = TIM1;
 8001d20:	4b49      	ldr	r3, [pc, #292]	@ (8001e48 <MX_TIM1_Init+0x168>)
 8001d22:	4a4a      	ldr	r2, [pc, #296]	@ (8001e4c <MX_TIM1_Init+0x16c>)
 8001d24:	601a      	str	r2, [r3, #0]
  htim1.Init.Prescaler = 80-1;
 8001d26:	4b48      	ldr	r3, [pc, #288]	@ (8001e48 <MX_TIM1_Init+0x168>)
 8001d28:	224f      	movs	r2, #79	@ 0x4f
 8001d2a:	605a      	str	r2, [r3, #4]
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001d2c:	4b46      	ldr	r3, [pc, #280]	@ (8001e48 <MX_TIM1_Init+0x168>)
 8001d2e:	2200      	movs	r2, #0
 8001d30:	609a      	str	r2, [r3, #8]
  htim1.Init.Period = 2000-1;
 8001d32:	4b45      	ldr	r3, [pc, #276]	@ (8001e48 <MX_TIM1_Init+0x168>)
 8001d34:	f240 72cf 	movw	r2, #1999	@ 0x7cf
 8001d38:	60da      	str	r2, [r3, #12]
  htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001d3a:	4b43      	ldr	r3, [pc, #268]	@ (8001e48 <MX_TIM1_Init+0x168>)
 8001d3c:	2200      	movs	r2, #0
 8001d3e:	611a      	str	r2, [r3, #16]
  htim1.Init.RepetitionCounter = 0;
 8001d40:	4b41      	ldr	r3, [pc, #260]	@ (8001e48 <MX_TIM1_Init+0x168>)
 8001d42:	2200      	movs	r2, #0
 8001d44:	615a      	str	r2, [r3, #20]
  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001d46:	4b40      	ldr	r3, [pc, #256]	@ (8001e48 <MX_TIM1_Init+0x168>)
 8001d48:	2200      	movs	r2, #0
 8001d4a:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 8001d4c:	483e      	ldr	r0, [pc, #248]	@ (8001e48 <MX_TIM1_Init+0x168>)
 8001d4e:	f003 fab1 	bl	80052b4 <HAL_TIM_Base_Init>
 8001d52:	4603      	mov	r3, r0
 8001d54:	2b00      	cmp	r3, #0
 8001d56:	d001      	beq.n	8001d5c <MX_TIM1_Init+0x7c>
  {
    Error_Handler();
 8001d58:	f000 fa80 	bl	800225c <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001d5c:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8001d60:	65bb      	str	r3, [r7, #88]	@ 0x58
  if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 8001d62:	f107 0358 	add.w	r3, r7, #88	@ 0x58
 8001d66:	4619      	mov	r1, r3
 8001d68:	4837      	ldr	r0, [pc, #220]	@ (8001e48 <MX_TIM1_Init+0x168>)
 8001d6a:	f003 fe5d 	bl	8005a28 <HAL_TIM_ConfigClockSource>
 8001d6e:	4603      	mov	r3, r0
 8001d70:	2b00      	cmp	r3, #0
 8001d72:	d001      	beq.n	8001d78 <MX_TIM1_Init+0x98>
  {
    Error_Handler();
 8001d74:	f000 fa72 	bl	800225c <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 8001d78:	4833      	ldr	r0, [pc, #204]	@ (8001e48 <MX_TIM1_Init+0x168>)
 8001d7a:	f003 faf2 	bl	8005362 <HAL_TIM_PWM_Init>
 8001d7e:	4603      	mov	r3, r0
 8001d80:	2b00      	cmp	r3, #0
 8001d82:	d001      	beq.n	8001d88 <MX_TIM1_Init+0xa8>
  {
    Error_Handler();
 8001d84:	f000 fa6a 	bl	800225c <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8001d88:	2300      	movs	r3, #0
 8001d8a:	64fb      	str	r3, [r7, #76]	@ 0x4c
  sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 8001d8c:	2300      	movs	r3, #0
 8001d8e:	653b      	str	r3, [r7, #80]	@ 0x50
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001d90:	2300      	movs	r3, #0
 8001d92:	657b      	str	r3, [r7, #84]	@ 0x54
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 8001d94:	f107 034c 	add.w	r3, r7, #76	@ 0x4c
 8001d98:	4619      	mov	r1, r3
 8001d9a:	482b      	ldr	r0, [pc, #172]	@ (8001e48 <MX_TIM1_Init+0x168>)
 8001d9c:	f004 fb2a 	bl	80063f4 <HAL_TIMEx_MasterConfigSynchronization>
 8001da0:	4603      	mov	r3, r0
 8001da2:	2b00      	cmp	r3, #0
 8001da4:	d001      	beq.n	8001daa <MX_TIM1_Init+0xca>
  {
    Error_Handler();
 8001da6:	f000 fa59 	bl	800225c <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8001daa:	2360      	movs	r3, #96	@ 0x60
 8001dac:	633b      	str	r3, [r7, #48]	@ 0x30
  sConfigOC.Pulse = 0;
 8001dae:	2300      	movs	r3, #0
 8001db0:	637b      	str	r3, [r7, #52]	@ 0x34
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8001db2:	2300      	movs	r3, #0
 8001db4:	63bb      	str	r3, [r7, #56]	@ 0x38
  sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 8001db6:	2300      	movs	r3, #0
 8001db8:	63fb      	str	r3, [r7, #60]	@ 0x3c
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8001dba:	2300      	movs	r3, #0
 8001dbc:	643b      	str	r3, [r7, #64]	@ 0x40
  sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 8001dbe:	2300      	movs	r3, #0
 8001dc0:	647b      	str	r3, [r7, #68]	@ 0x44
  sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 8001dc2:	2300      	movs	r3, #0
 8001dc4:	64bb      	str	r3, [r7, #72]	@ 0x48
  if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8001dc6:	f107 0330 	add.w	r3, r7, #48	@ 0x30
 8001dca:	2200      	movs	r2, #0
 8001dcc:	4619      	mov	r1, r3
 8001dce:	481e      	ldr	r0, [pc, #120]	@ (8001e48 <MX_TIM1_Init+0x168>)
 8001dd0:	f003 fd16 	bl	8005800 <HAL_TIM_PWM_ConfigChannel>
 8001dd4:	4603      	mov	r3, r0
 8001dd6:	2b00      	cmp	r3, #0
 8001dd8:	d001      	beq.n	8001dde <MX_TIM1_Init+0xfe>
  {
    Error_Handler();
 8001dda:	f000 fa3f 	bl	800225c <Error_Handler>
  }
  if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 8001dde:	f107 0330 	add.w	r3, r7, #48	@ 0x30
 8001de2:	220c      	movs	r2, #12
 8001de4:	4619      	mov	r1, r3
 8001de6:	4818      	ldr	r0, [pc, #96]	@ (8001e48 <MX_TIM1_Init+0x168>)
 8001de8:	f003 fd0a 	bl	8005800 <HAL_TIM_PWM_ConfigChannel>
 8001dec:	4603      	mov	r3, r0
 8001dee:	2b00      	cmp	r3, #0
 8001df0:	d001      	beq.n	8001df6 <MX_TIM1_Init+0x116>
  {
    Error_Handler();
 8001df2:	f000 fa33 	bl	800225c <Error_Handler>
  }
  sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 8001df6:	2300      	movs	r3, #0
 8001df8:	607b      	str	r3, [r7, #4]
  sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 8001dfa:	2300      	movs	r3, #0
 8001dfc:	60bb      	str	r3, [r7, #8]
  sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 8001dfe:	2300      	movs	r3, #0
 8001e00:	60fb      	str	r3, [r7, #12]
  sBreakDeadTimeConfig.DeadTime = 0;
 8001e02:	2300      	movs	r3, #0
 8001e04:	613b      	str	r3, [r7, #16]
  sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 8001e06:	2300      	movs	r3, #0
 8001e08:	617b      	str	r3, [r7, #20]
  sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 8001e0a:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 8001e0e:	61bb      	str	r3, [r7, #24]
  sBreakDeadTimeConfig.BreakFilter = 0;
 8001e10:	2300      	movs	r3, #0
 8001e12:	61fb      	str	r3, [r7, #28]
  sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
 8001e14:	2300      	movs	r3, #0
 8001e16:	623b      	str	r3, [r7, #32]
  sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 8001e18:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
 8001e1c:	627b      	str	r3, [r7, #36]	@ 0x24
  sBreakDeadTimeConfig.Break2Filter = 0;
 8001e1e:	2300      	movs	r3, #0
 8001e20:	62bb      	str	r3, [r7, #40]	@ 0x28
  sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 8001e22:	2300      	movs	r3, #0
 8001e24:	62fb      	str	r3, [r7, #44]	@ 0x2c
  if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 8001e26:	1d3b      	adds	r3, r7, #4
 8001e28:	4619      	mov	r1, r3
 8001e2a:	4807      	ldr	r0, [pc, #28]	@ (8001e48 <MX_TIM1_Init+0x168>)
 8001e2c:	f004 fb50 	bl	80064d0 <HAL_TIMEx_ConfigBreakDeadTime>
 8001e30:	4603      	mov	r3, r0
 8001e32:	2b00      	cmp	r3, #0
 8001e34:	d001      	beq.n	8001e3a <MX_TIM1_Init+0x15a>
  {
    Error_Handler();
 8001e36:	f000 fa11 	bl	800225c <Error_Handler>
  }
  /* USER CODE BEGIN TIM1_Init 2 */

  /* USER CODE END TIM1_Init 2 */
  HAL_TIM_MspPostInit(&htim1);
 8001e3a:	4803      	ldr	r0, [pc, #12]	@ (8001e48 <MX_TIM1_Init+0x168>)
 8001e3c:	f000 fac8 	bl	80023d0 <HAL_TIM_MspPostInit>

}
 8001e40:	bf00      	nop
 8001e42:	3768      	adds	r7, #104	@ 0x68
 8001e44:	46bd      	mov	sp, r7
 8001e46:	bd80      	pop	{r7, pc}
 8001e48:	200002c4 	.word	0x200002c4
 8001e4c:	40012c00 	.word	0x40012c00

08001e50 <MX_TIM2_Init>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 8001e50:	b580      	push	{r7, lr}
 8001e52:	b08e      	sub	sp, #56	@ 0x38
 8001e54:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001e56:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 8001e5a:	2200      	movs	r2, #0
 8001e5c:	601a      	str	r2, [r3, #0]
 8001e5e:	605a      	str	r2, [r3, #4]
 8001e60:	609a      	str	r2, [r3, #8]
 8001e62:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001e64:	f107 031c 	add.w	r3, r7, #28
 8001e68:	2200      	movs	r2, #0
 8001e6a:	601a      	str	r2, [r3, #0]
 8001e6c:	605a      	str	r2, [r3, #4]
 8001e6e:	609a      	str	r2, [r3, #8]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8001e70:	463b      	mov	r3, r7
 8001e72:	2200      	movs	r2, #0
 8001e74:	601a      	str	r2, [r3, #0]
 8001e76:	605a      	str	r2, [r3, #4]
 8001e78:	609a      	str	r2, [r3, #8]
 8001e7a:	60da      	str	r2, [r3, #12]
 8001e7c:	611a      	str	r2, [r3, #16]
 8001e7e:	615a      	str	r2, [r3, #20]
 8001e80:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 8001e82:	4b33      	ldr	r3, [pc, #204]	@ (8001f50 <MX_TIM2_Init+0x100>)
 8001e84:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 8001e88:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 80-1;
 8001e8a:	4b31      	ldr	r3, [pc, #196]	@ (8001f50 <MX_TIM2_Init+0x100>)
 8001e8c:	224f      	movs	r2, #79	@ 0x4f
 8001e8e:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001e90:	4b2f      	ldr	r3, [pc, #188]	@ (8001f50 <MX_TIM2_Init+0x100>)
 8001e92:	2200      	movs	r2, #0
 8001e94:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 2000-1;
 8001e96:	4b2e      	ldr	r3, [pc, #184]	@ (8001f50 <MX_TIM2_Init+0x100>)
 8001e98:	f240 72cf 	movw	r2, #1999	@ 0x7cf
 8001e9c:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001e9e:	4b2c      	ldr	r3, [pc, #176]	@ (8001f50 <MX_TIM2_Init+0x100>)
 8001ea0:	2200      	movs	r2, #0
 8001ea2:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001ea4:	4b2a      	ldr	r3, [pc, #168]	@ (8001f50 <MX_TIM2_Init+0x100>)
 8001ea6:	2200      	movs	r2, #0
 8001ea8:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8001eaa:	4829      	ldr	r0, [pc, #164]	@ (8001f50 <MX_TIM2_Init+0x100>)
 8001eac:	f003 fa02 	bl	80052b4 <HAL_TIM_Base_Init>
 8001eb0:	4603      	mov	r3, r0
 8001eb2:	2b00      	cmp	r3, #0
 8001eb4:	d001      	beq.n	8001eba <MX_TIM2_Init+0x6a>
  {
    Error_Handler();
 8001eb6:	f000 f9d1 	bl	800225c <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001eba:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8001ebe:	62bb      	str	r3, [r7, #40]	@ 0x28
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8001ec0:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 8001ec4:	4619      	mov	r1, r3
 8001ec6:	4822      	ldr	r0, [pc, #136]	@ (8001f50 <MX_TIM2_Init+0x100>)
 8001ec8:	f003 fdae 	bl	8005a28 <HAL_TIM_ConfigClockSource>
 8001ecc:	4603      	mov	r3, r0
 8001ece:	2b00      	cmp	r3, #0
 8001ed0:	d001      	beq.n	8001ed6 <MX_TIM2_Init+0x86>
  {
    Error_Handler();
 8001ed2:	f000 f9c3 	bl	800225c <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 8001ed6:	481e      	ldr	r0, [pc, #120]	@ (8001f50 <MX_TIM2_Init+0x100>)
 8001ed8:	f003 fa43 	bl	8005362 <HAL_TIM_PWM_Init>
 8001edc:	4603      	mov	r3, r0
 8001ede:	2b00      	cmp	r3, #0
 8001ee0:	d001      	beq.n	8001ee6 <MX_TIM2_Init+0x96>
  {
    Error_Handler();
 8001ee2:	f000 f9bb 	bl	800225c <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8001ee6:	2300      	movs	r3, #0
 8001ee8:	61fb      	str	r3, [r7, #28]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001eea:	2300      	movs	r3, #0
 8001eec:	627b      	str	r3, [r7, #36]	@ 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8001eee:	f107 031c 	add.w	r3, r7, #28
 8001ef2:	4619      	mov	r1, r3
 8001ef4:	4816      	ldr	r0, [pc, #88]	@ (8001f50 <MX_TIM2_Init+0x100>)
 8001ef6:	f004 fa7d 	bl	80063f4 <HAL_TIMEx_MasterConfigSynchronization>
 8001efa:	4603      	mov	r3, r0
 8001efc:	2b00      	cmp	r3, #0
 8001efe:	d001      	beq.n	8001f04 <MX_TIM2_Init+0xb4>
  {
    Error_Handler();
 8001f00:	f000 f9ac 	bl	800225c <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8001f04:	2360      	movs	r3, #96	@ 0x60
 8001f06:	603b      	str	r3, [r7, #0]
  sConfigOC.Pulse = 0;
 8001f08:	2300      	movs	r3, #0
 8001f0a:	607b      	str	r3, [r7, #4]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8001f0c:	2300      	movs	r3, #0
 8001f0e:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8001f10:	2300      	movs	r3, #0
 8001f12:	613b      	str	r3, [r7, #16]
  if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8001f14:	463b      	mov	r3, r7
 8001f16:	2200      	movs	r2, #0
 8001f18:	4619      	mov	r1, r3
 8001f1a:	480d      	ldr	r0, [pc, #52]	@ (8001f50 <MX_TIM2_Init+0x100>)
 8001f1c:	f003 fc70 	bl	8005800 <HAL_TIM_PWM_ConfigChannel>
 8001f20:	4603      	mov	r3, r0
 8001f22:	2b00      	cmp	r3, #0
 8001f24:	d001      	beq.n	8001f2a <MX_TIM2_Init+0xda>
  {
    Error_Handler();
 8001f26:	f000 f999 	bl	800225c <Error_Handler>
  }
  if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 8001f2a:	463b      	mov	r3, r7
 8001f2c:	2204      	movs	r2, #4
 8001f2e:	4619      	mov	r1, r3
 8001f30:	4807      	ldr	r0, [pc, #28]	@ (8001f50 <MX_TIM2_Init+0x100>)
 8001f32:	f003 fc65 	bl	8005800 <HAL_TIM_PWM_ConfigChannel>
 8001f36:	4603      	mov	r3, r0
 8001f38:	2b00      	cmp	r3, #0
 8001f3a:	d001      	beq.n	8001f40 <MX_TIM2_Init+0xf0>
  {
    Error_Handler();
 8001f3c:	f000 f98e 	bl	800225c <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */
  HAL_TIM_MspPostInit(&htim2);
 8001f40:	4803      	ldr	r0, [pc, #12]	@ (8001f50 <MX_TIM2_Init+0x100>)
 8001f42:	f000 fa45 	bl	80023d0 <HAL_TIM_MspPostInit>

}
 8001f46:	bf00      	nop
 8001f48:	3738      	adds	r7, #56	@ 0x38
 8001f4a:	46bd      	mov	sp, r7
 8001f4c:	bd80      	pop	{r7, pc}
 8001f4e:	bf00      	nop
 8001f50:	20000310 	.word	0x20000310

08001f54 <MX_TIM3_Init>:
  * @brief TIM3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM3_Init(void)
{
 8001f54:	b580      	push	{r7, lr}
 8001f56:	b088      	sub	sp, #32
 8001f58:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM3_Init 0 */

  /* USER CODE END TIM3_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001f5a:	f107 0310 	add.w	r3, r7, #16
 8001f5e:	2200      	movs	r2, #0
 8001f60:	601a      	str	r2, [r3, #0]
 8001f62:	605a      	str	r2, [r3, #4]
 8001f64:	609a      	str	r2, [r3, #8]
 8001f66:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001f68:	1d3b      	adds	r3, r7, #4
 8001f6a:	2200      	movs	r2, #0
 8001f6c:	601a      	str	r2, [r3, #0]
 8001f6e:	605a      	str	r2, [r3, #4]
 8001f70:	609a      	str	r2, [r3, #8]

  /* USER CODE BEGIN TIM3_Init 1 */

  /* USER CODE END TIM3_Init 1 */
  htim3.Instance = TIM3;
 8001f72:	4b1d      	ldr	r3, [pc, #116]	@ (8001fe8 <MX_TIM3_Init+0x94>)
 8001f74:	4a1d      	ldr	r2, [pc, #116]	@ (8001fec <MX_TIM3_Init+0x98>)
 8001f76:	601a      	str	r2, [r3, #0]
  htim3.Init.Prescaler = 8-1;
 8001f78:	4b1b      	ldr	r3, [pc, #108]	@ (8001fe8 <MX_TIM3_Init+0x94>)
 8001f7a:	2207      	movs	r2, #7
 8001f7c:	605a      	str	r2, [r3, #4]
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001f7e:	4b1a      	ldr	r3, [pc, #104]	@ (8001fe8 <MX_TIM3_Init+0x94>)
 8001f80:	2200      	movs	r2, #0
 8001f82:	609a      	str	r2, [r3, #8]
  htim3.Init.Period = 1000-1;
 8001f84:	4b18      	ldr	r3, [pc, #96]	@ (8001fe8 <MX_TIM3_Init+0x94>)
 8001f86:	f240 32e7 	movw	r2, #999	@ 0x3e7
 8001f8a:	60da      	str	r2, [r3, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001f8c:	4b16      	ldr	r3, [pc, #88]	@ (8001fe8 <MX_TIM3_Init+0x94>)
 8001f8e:	2200      	movs	r2, #0
 8001f90:	611a      	str	r2, [r3, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001f92:	4b15      	ldr	r3, [pc, #84]	@ (8001fe8 <MX_TIM3_Init+0x94>)
 8001f94:	2200      	movs	r2, #0
 8001f96:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 8001f98:	4813      	ldr	r0, [pc, #76]	@ (8001fe8 <MX_TIM3_Init+0x94>)
 8001f9a:	f003 f98b 	bl	80052b4 <HAL_TIM_Base_Init>
 8001f9e:	4603      	mov	r3, r0
 8001fa0:	2b00      	cmp	r3, #0
 8001fa2:	d001      	beq.n	8001fa8 <MX_TIM3_Init+0x54>
  {
    Error_Handler();
 8001fa4:	f000 f95a 	bl	800225c <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001fa8:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8001fac:	613b      	str	r3, [r7, #16]
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 8001fae:	f107 0310 	add.w	r3, r7, #16
 8001fb2:	4619      	mov	r1, r3
 8001fb4:	480c      	ldr	r0, [pc, #48]	@ (8001fe8 <MX_TIM3_Init+0x94>)
 8001fb6:	f003 fd37 	bl	8005a28 <HAL_TIM_ConfigClockSource>
 8001fba:	4603      	mov	r3, r0
 8001fbc:	2b00      	cmp	r3, #0
 8001fbe:	d001      	beq.n	8001fc4 <MX_TIM3_Init+0x70>
  {
    Error_Handler();
 8001fc0:	f000 f94c 	bl	800225c <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8001fc4:	2300      	movs	r3, #0
 8001fc6:	607b      	str	r3, [r7, #4]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001fc8:	2300      	movs	r3, #0
 8001fca:	60fb      	str	r3, [r7, #12]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 8001fcc:	1d3b      	adds	r3, r7, #4
 8001fce:	4619      	mov	r1, r3
 8001fd0:	4805      	ldr	r0, [pc, #20]	@ (8001fe8 <MX_TIM3_Init+0x94>)
 8001fd2:	f004 fa0f 	bl	80063f4 <HAL_TIMEx_MasterConfigSynchronization>
 8001fd6:	4603      	mov	r3, r0
 8001fd8:	2b00      	cmp	r3, #0
 8001fda:	d001      	beq.n	8001fe0 <MX_TIM3_Init+0x8c>
  {
    Error_Handler();
 8001fdc:	f000 f93e 	bl	800225c <Error_Handler>
  }
  /* USER CODE BEGIN TIM3_Init 2 */

  /* USER CODE END TIM3_Init 2 */

}
 8001fe0:	bf00      	nop
 8001fe2:	3720      	adds	r7, #32
 8001fe4:	46bd      	mov	sp, r7
 8001fe6:	bd80      	pop	{r7, pc}
 8001fe8:	2000035c 	.word	0x2000035c
 8001fec:	40000400 	.word	0x40000400

08001ff0 <MX_USART1_UART_Init>:
  * @brief USART1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART1_UART_Init(void)
{
 8001ff0:	b580      	push	{r7, lr}
 8001ff2:	af00      	add	r7, sp, #0
  /* USER CODE END USART1_Init 0 */

  /* USER CODE BEGIN USART1_Init 1 */

  /* USER CODE END USART1_Init 1 */
  huart1.Instance = USART1;
 8001ff4:	4b14      	ldr	r3, [pc, #80]	@ (8002048 <MX_USART1_UART_Init+0x58>)
 8001ff6:	4a15      	ldr	r2, [pc, #84]	@ (800204c <MX_USART1_UART_Init+0x5c>)
 8001ff8:	601a      	str	r2, [r3, #0]
  huart1.Init.BaudRate = 9600;
 8001ffa:	4b13      	ldr	r3, [pc, #76]	@ (8002048 <MX_USART1_UART_Init+0x58>)
 8001ffc:	f44f 5216 	mov.w	r2, #9600	@ 0x2580
 8002000:	605a      	str	r2, [r3, #4]
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
 8002002:	4b11      	ldr	r3, [pc, #68]	@ (8002048 <MX_USART1_UART_Init+0x58>)
 8002004:	2200      	movs	r2, #0
 8002006:	609a      	str	r2, [r3, #8]
  huart1.Init.StopBits = UART_STOPBITS_1;
 8002008:	4b0f      	ldr	r3, [pc, #60]	@ (8002048 <MX_USART1_UART_Init+0x58>)
 800200a:	2200      	movs	r2, #0
 800200c:	60da      	str	r2, [r3, #12]
  huart1.Init.Parity = UART_PARITY_NONE;
 800200e:	4b0e      	ldr	r3, [pc, #56]	@ (8002048 <MX_USART1_UART_Init+0x58>)
 8002010:	2200      	movs	r2, #0
 8002012:	611a      	str	r2, [r3, #16]
  huart1.Init.Mode = UART_MODE_TX_RX;
 8002014:	4b0c      	ldr	r3, [pc, #48]	@ (8002048 <MX_USART1_UART_Init+0x58>)
 8002016:	220c      	movs	r2, #12
 8002018:	615a      	str	r2, [r3, #20]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 800201a:	4b0b      	ldr	r3, [pc, #44]	@ (8002048 <MX_USART1_UART_Init+0x58>)
 800201c:	2200      	movs	r2, #0
 800201e:	619a      	str	r2, [r3, #24]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 8002020:	4b09      	ldr	r3, [pc, #36]	@ (8002048 <MX_USART1_UART_Init+0x58>)
 8002022:	2200      	movs	r2, #0
 8002024:	61da      	str	r2, [r3, #28]
  huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 8002026:	4b08      	ldr	r3, [pc, #32]	@ (8002048 <MX_USART1_UART_Init+0x58>)
 8002028:	2200      	movs	r2, #0
 800202a:	621a      	str	r2, [r3, #32]
  huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 800202c:	4b06      	ldr	r3, [pc, #24]	@ (8002048 <MX_USART1_UART_Init+0x58>)
 800202e:	2200      	movs	r2, #0
 8002030:	625a      	str	r2, [r3, #36]	@ 0x24
  if (HAL_UART_Init(&huart1) != HAL_OK)
 8002032:	4805      	ldr	r0, [pc, #20]	@ (8002048 <MX_USART1_UART_Init+0x58>)
 8002034:	f004 fae2 	bl	80065fc <HAL_UART_Init>
 8002038:	4603      	mov	r3, r0
 800203a:	2b00      	cmp	r3, #0
 800203c:	d001      	beq.n	8002042 <MX_USART1_UART_Init+0x52>
  {
    Error_Handler();
 800203e:	f000 f90d 	bl	800225c <Error_Handler>
  }
  /* USER CODE BEGIN USART1_Init 2 */

  /* USER CODE END USART1_Init 2 */

}
 8002042:	bf00      	nop
 8002044:	bd80      	pop	{r7, pc}
 8002046:	bf00      	nop
 8002048:	200003a8 	.word	0x200003a8
 800204c:	40013800 	.word	0x40013800

08002050 <MX_USART2_UART_Init>:
  * @brief USART2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART2_UART_Init(void)
{
 8002050:	b580      	push	{r7, lr}
 8002052:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 8002054:	4b14      	ldr	r3, [pc, #80]	@ (80020a8 <MX_USART2_UART_Init+0x58>)
 8002056:	4a15      	ldr	r2, [pc, #84]	@ (80020ac <MX_USART2_UART_Init+0x5c>)
 8002058:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 115200;
 800205a:	4b13      	ldr	r3, [pc, #76]	@ (80020a8 <MX_USART2_UART_Init+0x58>)
 800205c:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 8002060:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 8002062:	4b11      	ldr	r3, [pc, #68]	@ (80020a8 <MX_USART2_UART_Init+0x58>)
 8002064:	2200      	movs	r2, #0
 8002066:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 8002068:	4b0f      	ldr	r3, [pc, #60]	@ (80020a8 <MX_USART2_UART_Init+0x58>)
 800206a:	2200      	movs	r2, #0
 800206c:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 800206e:	4b0e      	ldr	r3, [pc, #56]	@ (80020a8 <MX_USART2_UART_Init+0x58>)
 8002070:	2200      	movs	r2, #0
 8002072:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 8002074:	4b0c      	ldr	r3, [pc, #48]	@ (80020a8 <MX_USART2_UART_Init+0x58>)
 8002076:	220c      	movs	r2, #12
 8002078:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 800207a:	4b0b      	ldr	r3, [pc, #44]	@ (80020a8 <MX_USART2_UART_Init+0x58>)
 800207c:	2200      	movs	r2, #0
 800207e:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 8002080:	4b09      	ldr	r3, [pc, #36]	@ (80020a8 <MX_USART2_UART_Init+0x58>)
 8002082:	2200      	movs	r2, #0
 8002084:	61da      	str	r2, [r3, #28]
  huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 8002086:	4b08      	ldr	r3, [pc, #32]	@ (80020a8 <MX_USART2_UART_Init+0x58>)
 8002088:	2200      	movs	r2, #0
 800208a:	621a      	str	r2, [r3, #32]
  huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 800208c:	4b06      	ldr	r3, [pc, #24]	@ (80020a8 <MX_USART2_UART_Init+0x58>)
 800208e:	2200      	movs	r2, #0
 8002090:	625a      	str	r2, [r3, #36]	@ 0x24
  if (HAL_UART_Init(&huart2) != HAL_OK)
 8002092:	4805      	ldr	r0, [pc, #20]	@ (80020a8 <MX_USART2_UART_Init+0x58>)
 8002094:	f004 fab2 	bl	80065fc <HAL_UART_Init>
 8002098:	4603      	mov	r3, r0
 800209a:	2b00      	cmp	r3, #0
 800209c:	d001      	beq.n	80020a2 <MX_USART2_UART_Init+0x52>
  {
    Error_Handler();
 800209e:	f000 f8dd 	bl	800225c <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 80020a2:	bf00      	nop
 80020a4:	bd80      	pop	{r7, pc}
 80020a6:	bf00      	nop
 80020a8:	20000430 	.word	0x20000430
 80020ac:	40004400 	.word	0x40004400

080020b0 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 80020b0:	b580      	push	{r7, lr}
 80020b2:	b088      	sub	sp, #32
 80020b4:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80020b6:	f107 030c 	add.w	r3, r7, #12
 80020ba:	2200      	movs	r2, #0
 80020bc:	601a      	str	r2, [r3, #0]
 80020be:	605a      	str	r2, [r3, #4]
 80020c0:	609a      	str	r2, [r3, #8]
 80020c2:	60da      	str	r2, [r3, #12]
 80020c4:	611a      	str	r2, [r3, #16]
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOF_CLK_ENABLE();
 80020c6:	4b1d      	ldr	r3, [pc, #116]	@ (800213c <MX_GPIO_Init+0x8c>)
 80020c8:	695b      	ldr	r3, [r3, #20]
 80020ca:	4a1c      	ldr	r2, [pc, #112]	@ (800213c <MX_GPIO_Init+0x8c>)
 80020cc:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 80020d0:	6153      	str	r3, [r2, #20]
 80020d2:	4b1a      	ldr	r3, [pc, #104]	@ (800213c <MX_GPIO_Init+0x8c>)
 80020d4:	695b      	ldr	r3, [r3, #20]
 80020d6:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 80020da:	60bb      	str	r3, [r7, #8]
 80020dc:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80020de:	4b17      	ldr	r3, [pc, #92]	@ (800213c <MX_GPIO_Init+0x8c>)
 80020e0:	695b      	ldr	r3, [r3, #20]
 80020e2:	4a16      	ldr	r2, [pc, #88]	@ (800213c <MX_GPIO_Init+0x8c>)
 80020e4:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 80020e8:	6153      	str	r3, [r2, #20]
 80020ea:	4b14      	ldr	r3, [pc, #80]	@ (800213c <MX_GPIO_Init+0x8c>)
 80020ec:	695b      	ldr	r3, [r3, #20]
 80020ee:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80020f2:	607b      	str	r3, [r7, #4]
 80020f4:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80020f6:	4b11      	ldr	r3, [pc, #68]	@ (800213c <MX_GPIO_Init+0x8c>)
 80020f8:	695b      	ldr	r3, [r3, #20]
 80020fa:	4a10      	ldr	r2, [pc, #64]	@ (800213c <MX_GPIO_Init+0x8c>)
 80020fc:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8002100:	6153      	str	r3, [r2, #20]
 8002102:	4b0e      	ldr	r3, [pc, #56]	@ (800213c <MX_GPIO_Init+0x8c>)
 8002104:	695b      	ldr	r3, [r3, #20]
 8002106:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 800210a:	603b      	str	r3, [r7, #0]
 800210c:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_3, GPIO_PIN_RESET);
 800210e:	2200      	movs	r2, #0
 8002110:	2108      	movs	r1, #8
 8002112:	480b      	ldr	r0, [pc, #44]	@ (8002140 <MX_GPIO_Init+0x90>)
 8002114:	f000 ff0e 	bl	8002f34 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : PB3 */
  GPIO_InitStruct.Pin = GPIO_PIN_3;
 8002118:	2308      	movs	r3, #8
 800211a:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800211c:	2301      	movs	r3, #1
 800211e:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002120:	2300      	movs	r3, #0
 8002122:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002124:	2300      	movs	r3, #0
 8002126:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002128:	f107 030c 	add.w	r3, r7, #12
 800212c:	4619      	mov	r1, r3
 800212e:	4804      	ldr	r0, [pc, #16]	@ (8002140 <MX_GPIO_Init+0x90>)
 8002130:	f000 fd8e 	bl	8002c50 <HAL_GPIO_Init>

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 8002134:	bf00      	nop
 8002136:	3720      	adds	r7, #32
 8002138:	46bd      	mov	sp, r7
 800213a:	bd80      	pop	{r7, pc}
 800213c:	40021000 	.word	0x40021000
 8002140:	48000400 	.word	0x48000400

08002144 <printData>:
/* USER CODE BEGIN 4 */




void printData(char* data) {
 8002144:	b580      	push	{r7, lr}
 8002146:	b082      	sub	sp, #8
 8002148:	af00      	add	r7, sp, #0
 800214a:	6078      	str	r0, [r7, #4]
  HAL_UART_Transmit(&huart2, (uint8_t*)data, strlen(data), 100);
 800214c:	6878      	ldr	r0, [r7, #4]
 800214e:	f7fe f88f 	bl	8000270 <strlen>
 8002152:	4603      	mov	r3, r0
 8002154:	b29a      	uxth	r2, r3
 8002156:	2364      	movs	r3, #100	@ 0x64
 8002158:	6879      	ldr	r1, [r7, #4]
 800215a:	4803      	ldr	r0, [pc, #12]	@ (8002168 <printData+0x24>)
 800215c:	f004 fa9c 	bl	8006698 <HAL_UART_Transmit>
}
 8002160:	bf00      	nop
 8002162:	3708      	adds	r7, #8
 8002164:	46bd      	mov	sp, r7
 8002166:	bd80      	pop	{r7, pc}
 8002168:	20000430 	.word	0x20000430

0800216c <_write>:

void sendData(char* data) {
  HAL_UART_Transmit(&huart1, (uint8_t*)data, strlen(data), 100);
}

int _write(int file, char *data, int len) {
 800216c:	b580      	push	{r7, lr}
 800216e:	b084      	sub	sp, #16
 8002170:	af00      	add	r7, sp, #0
 8002172:	60f8      	str	r0, [r7, #12]
 8002174:	60b9      	str	r1, [r7, #8]
 8002176:	607a      	str	r2, [r7, #4]
    HAL_UART_Transmit(&huart2, (uint8_t*)data, len, HAL_MAX_DELAY);
 8002178:	687b      	ldr	r3, [r7, #4]
 800217a:	b29a      	uxth	r2, r3
 800217c:	f04f 33ff 	mov.w	r3, #4294967295
 8002180:	68b9      	ldr	r1, [r7, #8]
 8002182:	4804      	ldr	r0, [pc, #16]	@ (8002194 <_write+0x28>)
 8002184:	f004 fa88 	bl	8006698 <HAL_UART_Transmit>
    return len;
 8002188:	687b      	ldr	r3, [r7, #4]
}
 800218a:	4618      	mov	r0, r3
 800218c:	3710      	adds	r7, #16
 800218e:	46bd      	mov	sp, r7
 8002190:	bd80      	pop	{r7, pc}
 8002192:	bf00      	nop
 8002194:	20000430 	.word	0x20000430

08002198 <HAL_UART_RxCpltCallback>:


// Función que se llama cuando un byte es recibido
void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart) {
 8002198:	b580      	push	{r7, lr}
 800219a:	b084      	sub	sp, #16
 800219c:	af00      	add	r7, sp, #0
 800219e:	6078      	str	r0, [r7, #4]
	//Control_Update();// por probar
    if (huart->Instance == USART1) {
 80021a0:	687b      	ldr	r3, [r7, #4]
 80021a2:	681b      	ldr	r3, [r3, #0]
 80021a4:	4a27      	ldr	r2, [pc, #156]	@ (8002244 <HAL_UART_RxCpltCallback+0xac>)
 80021a6:	4293      	cmp	r3, r2
 80021a8:	d148      	bne.n	800223c <HAL_UART_RxCpltCallback+0xa4>
        // Almacenar el byte recibido en el buffer circular
        rx_buffer[write_index++] = temp_byte;
 80021aa:	4b27      	ldr	r3, [pc, #156]	@ (8002248 <HAL_UART_RxCpltCallback+0xb0>)
 80021ac:	881b      	ldrh	r3, [r3, #0]
 80021ae:	b29b      	uxth	r3, r3
 80021b0:	1c5a      	adds	r2, r3, #1
 80021b2:	b291      	uxth	r1, r2
 80021b4:	4a24      	ldr	r2, [pc, #144]	@ (8002248 <HAL_UART_RxCpltCallback+0xb0>)
 80021b6:	8011      	strh	r1, [r2, #0]
 80021b8:	461a      	mov	r2, r3
 80021ba:	4b24      	ldr	r3, [pc, #144]	@ (800224c <HAL_UART_RxCpltCallback+0xb4>)
 80021bc:	7819      	ldrb	r1, [r3, #0]
 80021be:	4b24      	ldr	r3, [pc, #144]	@ (8002250 <HAL_UART_RxCpltCallback+0xb8>)
 80021c0:	5499      	strb	r1, [r3, r2]

        // Asegurar que el índice no se desborde
        if (write_index >= RX_BUFFER_SIZE) {
 80021c2:	4b21      	ldr	r3, [pc, #132]	@ (8002248 <HAL_UART_RxCpltCallback+0xb0>)
 80021c4:	881b      	ldrh	r3, [r3, #0]
 80021c6:	b29b      	uxth	r3, r3
 80021c8:	2b7f      	cmp	r3, #127	@ 0x7f
 80021ca:	d902      	bls.n	80021d2 <HAL_UART_RxCpltCallback+0x3a>
            write_index = 0;
 80021cc:	4b1e      	ldr	r3, [pc, #120]	@ (8002248 <HAL_UART_RxCpltCallback+0xb0>)
 80021ce:	2200      	movs	r2, #0
 80021d0:	801a      	strh	r2, [r3, #0]
        }

        // Si el byte recibido es un delimitador (por ejemplo, '\n'), procesamos el mensaje
        if (temp_byte == '\n') {
 80021d2:	4b1e      	ldr	r3, [pc, #120]	@ (800224c <HAL_UART_RxCpltCallback+0xb4>)
 80021d4:	781b      	ldrb	r3, [r3, #0]
 80021d6:	2b0a      	cmp	r3, #10
 80021d8:	d12b      	bne.n	8002232 <HAL_UART_RxCpltCallback+0x9a>
            // Procesar el buffer hasta la posición de lectura
            uint16_t length = (write_index > read_index) ? (write_index - read_index) : (RX_BUFFER_SIZE - read_index + write_index);
 80021da:	4b1b      	ldr	r3, [pc, #108]	@ (8002248 <HAL_UART_RxCpltCallback+0xb0>)
 80021dc:	881b      	ldrh	r3, [r3, #0]
 80021de:	b29a      	uxth	r2, r3
 80021e0:	4b1c      	ldr	r3, [pc, #112]	@ (8002254 <HAL_UART_RxCpltCallback+0xbc>)
 80021e2:	881b      	ldrh	r3, [r3, #0]
 80021e4:	b29b      	uxth	r3, r3
 80021e6:	429a      	cmp	r2, r3
 80021e8:	d908      	bls.n	80021fc <HAL_UART_RxCpltCallback+0x64>
 80021ea:	4b17      	ldr	r3, [pc, #92]	@ (8002248 <HAL_UART_RxCpltCallback+0xb0>)
 80021ec:	881b      	ldrh	r3, [r3, #0]
 80021ee:	b29a      	uxth	r2, r3
 80021f0:	4b18      	ldr	r3, [pc, #96]	@ (8002254 <HAL_UART_RxCpltCallback+0xbc>)
 80021f2:	881b      	ldrh	r3, [r3, #0]
 80021f4:	b29b      	uxth	r3, r3
 80021f6:	1ad3      	subs	r3, r2, r3
 80021f8:	b29b      	uxth	r3, r3
 80021fa:	e009      	b.n	8002210 <HAL_UART_RxCpltCallback+0x78>
 80021fc:	4b12      	ldr	r3, [pc, #72]	@ (8002248 <HAL_UART_RxCpltCallback+0xb0>)
 80021fe:	881b      	ldrh	r3, [r3, #0]
 8002200:	b29a      	uxth	r2, r3
 8002202:	4b14      	ldr	r3, [pc, #80]	@ (8002254 <HAL_UART_RxCpltCallback+0xbc>)
 8002204:	881b      	ldrh	r3, [r3, #0]
 8002206:	b29b      	uxth	r3, r3
 8002208:	1ad3      	subs	r3, r2, r3
 800220a:	b29b      	uxth	r3, r3
 800220c:	3380      	adds	r3, #128	@ 0x80
 800220e:	b29b      	uxth	r3, r3
 8002210:	81fb      	strh	r3, [r7, #14]
            receiveControlCommand(&rx_buffer[read_index], length);
 8002212:	4b10      	ldr	r3, [pc, #64]	@ (8002254 <HAL_UART_RxCpltCallback+0xbc>)
 8002214:	881b      	ldrh	r3, [r3, #0]
 8002216:	b29b      	uxth	r3, r3
 8002218:	461a      	mov	r2, r3
 800221a:	4b0d      	ldr	r3, [pc, #52]	@ (8002250 <HAL_UART_RxCpltCallback+0xb8>)
 800221c:	4413      	add	r3, r2
 800221e:	89fa      	ldrh	r2, [r7, #14]
 8002220:	4611      	mov	r1, r2
 8002222:	4618      	mov	r0, r3
 8002224:	f7fe fd10 	bl	8000c48 <receiveControlCommand>

            // Avanzar el índice de lectura
            read_index = write_index;
 8002228:	4b07      	ldr	r3, [pc, #28]	@ (8002248 <HAL_UART_RxCpltCallback+0xb0>)
 800222a:	881b      	ldrh	r3, [r3, #0]
 800222c:	b29a      	uxth	r2, r3
 800222e:	4b09      	ldr	r3, [pc, #36]	@ (8002254 <HAL_UART_RxCpltCallback+0xbc>)
 8002230:	801a      	strh	r2, [r3, #0]
        }

        // Continuar recibiendo el siguiente byte
        HAL_UART_Receive_IT(&huart1, &temp_byte, 1);
 8002232:	2201      	movs	r2, #1
 8002234:	4905      	ldr	r1, [pc, #20]	@ (800224c <HAL_UART_RxCpltCallback+0xb4>)
 8002236:	4808      	ldr	r0, [pc, #32]	@ (8002258 <HAL_UART_RxCpltCallback+0xc0>)
 8002238:	f004 fab7 	bl	80067aa <HAL_UART_Receive_IT>
    }
}
 800223c:	bf00      	nop
 800223e:	3710      	adds	r7, #16
 8002240:	46bd      	mov	sp, r7
 8002242:	bd80      	pop	{r7, pc}
 8002244:	40013800 	.word	0x40013800
 8002248:	2000053a 	.word	0x2000053a
 800224c:	20000538 	.word	0x20000538
 8002250:	200004b8 	.word	0x200004b8
 8002254:	2000053c 	.word	0x2000053c
 8002258:	200003a8 	.word	0x200003a8

0800225c <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 800225c:	b480      	push	{r7}
 800225e:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8002260:	b672      	cpsid	i
}
 8002262:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8002264:	bf00      	nop
 8002266:	e7fd      	b.n	8002264 <Error_Handler+0x8>

08002268 <HAL_MspInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);
                                        /**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8002268:	b480      	push	{r7}
 800226a:	b083      	sub	sp, #12
 800226c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 800226e:	4b0f      	ldr	r3, [pc, #60]	@ (80022ac <HAL_MspInit+0x44>)
 8002270:	699b      	ldr	r3, [r3, #24]
 8002272:	4a0e      	ldr	r2, [pc, #56]	@ (80022ac <HAL_MspInit+0x44>)
 8002274:	f043 0301 	orr.w	r3, r3, #1
 8002278:	6193      	str	r3, [r2, #24]
 800227a:	4b0c      	ldr	r3, [pc, #48]	@ (80022ac <HAL_MspInit+0x44>)
 800227c:	699b      	ldr	r3, [r3, #24]
 800227e:	f003 0301 	and.w	r3, r3, #1
 8002282:	607b      	str	r3, [r7, #4]
 8002284:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 8002286:	4b09      	ldr	r3, [pc, #36]	@ (80022ac <HAL_MspInit+0x44>)
 8002288:	69db      	ldr	r3, [r3, #28]
 800228a:	4a08      	ldr	r2, [pc, #32]	@ (80022ac <HAL_MspInit+0x44>)
 800228c:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8002290:	61d3      	str	r3, [r2, #28]
 8002292:	4b06      	ldr	r3, [pc, #24]	@ (80022ac <HAL_MspInit+0x44>)
 8002294:	69db      	ldr	r3, [r3, #28]
 8002296:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800229a:	603b      	str	r3, [r7, #0]
 800229c:	683b      	ldr	r3, [r7, #0]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 800229e:	bf00      	nop
 80022a0:	370c      	adds	r7, #12
 80022a2:	46bd      	mov	sp, r7
 80022a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80022a8:	4770      	bx	lr
 80022aa:	bf00      	nop
 80022ac:	40021000 	.word	0x40021000

080022b0 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 80022b0:	b580      	push	{r7, lr}
 80022b2:	b08a      	sub	sp, #40	@ 0x28
 80022b4:	af00      	add	r7, sp, #0
 80022b6:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80022b8:	f107 0314 	add.w	r3, r7, #20
 80022bc:	2200      	movs	r2, #0
 80022be:	601a      	str	r2, [r3, #0]
 80022c0:	605a      	str	r2, [r3, #4]
 80022c2:	609a      	str	r2, [r3, #8]
 80022c4:	60da      	str	r2, [r3, #12]
 80022c6:	611a      	str	r2, [r3, #16]
  if(hi2c->Instance==I2C1)
 80022c8:	687b      	ldr	r3, [r7, #4]
 80022ca:	681b      	ldr	r3, [r3, #0]
 80022cc:	4a17      	ldr	r2, [pc, #92]	@ (800232c <HAL_I2C_MspInit+0x7c>)
 80022ce:	4293      	cmp	r3, r2
 80022d0:	d127      	bne.n	8002322 <HAL_I2C_MspInit+0x72>
  {
  /* USER CODE BEGIN I2C1_MspInit 0 */

  /* USER CODE END I2C1_MspInit 0 */

    __HAL_RCC_GPIOB_CLK_ENABLE();
 80022d2:	4b17      	ldr	r3, [pc, #92]	@ (8002330 <HAL_I2C_MspInit+0x80>)
 80022d4:	695b      	ldr	r3, [r3, #20]
 80022d6:	4a16      	ldr	r2, [pc, #88]	@ (8002330 <HAL_I2C_MspInit+0x80>)
 80022d8:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 80022dc:	6153      	str	r3, [r2, #20]
 80022de:	4b14      	ldr	r3, [pc, #80]	@ (8002330 <HAL_I2C_MspInit+0x80>)
 80022e0:	695b      	ldr	r3, [r3, #20]
 80022e2:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 80022e6:	613b      	str	r3, [r7, #16]
 80022e8:	693b      	ldr	r3, [r7, #16]
    /**I2C1 GPIO Configuration
    PB6     ------> I2C1_SCL
    PB7     ------> I2C1_SDA
    */
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 80022ea:	23c0      	movs	r3, #192	@ 0xc0
 80022ec:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 80022ee:	2312      	movs	r3, #18
 80022f0:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80022f2:	2300      	movs	r3, #0
 80022f4:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80022f6:	2303      	movs	r3, #3
 80022f8:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 80022fa:	2304      	movs	r3, #4
 80022fc:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80022fe:	f107 0314 	add.w	r3, r7, #20
 8002302:	4619      	mov	r1, r3
 8002304:	480b      	ldr	r0, [pc, #44]	@ (8002334 <HAL_I2C_MspInit+0x84>)
 8002306:	f000 fca3 	bl	8002c50 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C1_CLK_ENABLE();
 800230a:	4b09      	ldr	r3, [pc, #36]	@ (8002330 <HAL_I2C_MspInit+0x80>)
 800230c:	69db      	ldr	r3, [r3, #28]
 800230e:	4a08      	ldr	r2, [pc, #32]	@ (8002330 <HAL_I2C_MspInit+0x80>)
 8002310:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 8002314:	61d3      	str	r3, [r2, #28]
 8002316:	4b06      	ldr	r3, [pc, #24]	@ (8002330 <HAL_I2C_MspInit+0x80>)
 8002318:	69db      	ldr	r3, [r3, #28]
 800231a:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 800231e:	60fb      	str	r3, [r7, #12]
 8002320:	68fb      	ldr	r3, [r7, #12]

  /* USER CODE END I2C1_MspInit 1 */

  }

}
 8002322:	bf00      	nop
 8002324:	3728      	adds	r7, #40	@ 0x28
 8002326:	46bd      	mov	sp, r7
 8002328:	bd80      	pop	{r7, pc}
 800232a:	bf00      	nop
 800232c:	40005400 	.word	0x40005400
 8002330:	40021000 	.word	0x40021000
 8002334:	48000400 	.word	0x48000400

08002338 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 8002338:	b580      	push	{r7, lr}
 800233a:	b086      	sub	sp, #24
 800233c:	af00      	add	r7, sp, #0
 800233e:	6078      	str	r0, [r7, #4]
  if(htim_base->Instance==TIM1)
 8002340:	687b      	ldr	r3, [r7, #4]
 8002342:	681b      	ldr	r3, [r3, #0]
 8002344:	4a1f      	ldr	r2, [pc, #124]	@ (80023c4 <HAL_TIM_Base_MspInit+0x8c>)
 8002346:	4293      	cmp	r3, r2
 8002348:	d10c      	bne.n	8002364 <HAL_TIM_Base_MspInit+0x2c>
  {
  /* USER CODE BEGIN TIM1_MspInit 0 */

  /* USER CODE END TIM1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM1_CLK_ENABLE();
 800234a:	4b1f      	ldr	r3, [pc, #124]	@ (80023c8 <HAL_TIM_Base_MspInit+0x90>)
 800234c:	699b      	ldr	r3, [r3, #24]
 800234e:	4a1e      	ldr	r2, [pc, #120]	@ (80023c8 <HAL_TIM_Base_MspInit+0x90>)
 8002350:	f443 6300 	orr.w	r3, r3, #2048	@ 0x800
 8002354:	6193      	str	r3, [r2, #24]
 8002356:	4b1c      	ldr	r3, [pc, #112]	@ (80023c8 <HAL_TIM_Base_MspInit+0x90>)
 8002358:	699b      	ldr	r3, [r3, #24]
 800235a:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 800235e:	617b      	str	r3, [r7, #20]
 8002360:	697b      	ldr	r3, [r7, #20]
  /* USER CODE BEGIN TIM3_MspInit 1 */

  /* USER CODE END TIM3_MspInit 1 */
  }

}
 8002362:	e02a      	b.n	80023ba <HAL_TIM_Base_MspInit+0x82>
  else if(htim_base->Instance==TIM2)
 8002364:	687b      	ldr	r3, [r7, #4]
 8002366:	681b      	ldr	r3, [r3, #0]
 8002368:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800236c:	d10c      	bne.n	8002388 <HAL_TIM_Base_MspInit+0x50>
    __HAL_RCC_TIM2_CLK_ENABLE();
 800236e:	4b16      	ldr	r3, [pc, #88]	@ (80023c8 <HAL_TIM_Base_MspInit+0x90>)
 8002370:	69db      	ldr	r3, [r3, #28]
 8002372:	4a15      	ldr	r2, [pc, #84]	@ (80023c8 <HAL_TIM_Base_MspInit+0x90>)
 8002374:	f043 0301 	orr.w	r3, r3, #1
 8002378:	61d3      	str	r3, [r2, #28]
 800237a:	4b13      	ldr	r3, [pc, #76]	@ (80023c8 <HAL_TIM_Base_MspInit+0x90>)
 800237c:	69db      	ldr	r3, [r3, #28]
 800237e:	f003 0301 	and.w	r3, r3, #1
 8002382:	613b      	str	r3, [r7, #16]
 8002384:	693b      	ldr	r3, [r7, #16]
}
 8002386:	e018      	b.n	80023ba <HAL_TIM_Base_MspInit+0x82>
  else if(htim_base->Instance==TIM3)
 8002388:	687b      	ldr	r3, [r7, #4]
 800238a:	681b      	ldr	r3, [r3, #0]
 800238c:	4a0f      	ldr	r2, [pc, #60]	@ (80023cc <HAL_TIM_Base_MspInit+0x94>)
 800238e:	4293      	cmp	r3, r2
 8002390:	d113      	bne.n	80023ba <HAL_TIM_Base_MspInit+0x82>
    __HAL_RCC_TIM3_CLK_ENABLE();
 8002392:	4b0d      	ldr	r3, [pc, #52]	@ (80023c8 <HAL_TIM_Base_MspInit+0x90>)
 8002394:	69db      	ldr	r3, [r3, #28]
 8002396:	4a0c      	ldr	r2, [pc, #48]	@ (80023c8 <HAL_TIM_Base_MspInit+0x90>)
 8002398:	f043 0302 	orr.w	r3, r3, #2
 800239c:	61d3      	str	r3, [r2, #28]
 800239e:	4b0a      	ldr	r3, [pc, #40]	@ (80023c8 <HAL_TIM_Base_MspInit+0x90>)
 80023a0:	69db      	ldr	r3, [r3, #28]
 80023a2:	f003 0302 	and.w	r3, r3, #2
 80023a6:	60fb      	str	r3, [r7, #12]
 80023a8:	68fb      	ldr	r3, [r7, #12]
    HAL_NVIC_SetPriority(TIM3_IRQn, 0, 0);
 80023aa:	2200      	movs	r2, #0
 80023ac:	2100      	movs	r1, #0
 80023ae:	201d      	movs	r0, #29
 80023b0:	f000 fb9b 	bl	8002aea <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM3_IRQn);
 80023b4:	201d      	movs	r0, #29
 80023b6:	f000 fbb4 	bl	8002b22 <HAL_NVIC_EnableIRQ>
}
 80023ba:	bf00      	nop
 80023bc:	3718      	adds	r7, #24
 80023be:	46bd      	mov	sp, r7
 80023c0:	bd80      	pop	{r7, pc}
 80023c2:	bf00      	nop
 80023c4:	40012c00 	.word	0x40012c00
 80023c8:	40021000 	.word	0x40021000
 80023cc:	40000400 	.word	0x40000400

080023d0 <HAL_TIM_MspPostInit>:

void HAL_TIM_MspPostInit(TIM_HandleTypeDef* htim)
{
 80023d0:	b580      	push	{r7, lr}
 80023d2:	b08a      	sub	sp, #40	@ 0x28
 80023d4:	af00      	add	r7, sp, #0
 80023d6:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80023d8:	f107 0314 	add.w	r3, r7, #20
 80023dc:	2200      	movs	r2, #0
 80023de:	601a      	str	r2, [r3, #0]
 80023e0:	605a      	str	r2, [r3, #4]
 80023e2:	609a      	str	r2, [r3, #8]
 80023e4:	60da      	str	r2, [r3, #12]
 80023e6:	611a      	str	r2, [r3, #16]
  if(htim->Instance==TIM1)
 80023e8:	687b      	ldr	r3, [r7, #4]
 80023ea:	681b      	ldr	r3, [r3, #0]
 80023ec:	4a2c      	ldr	r2, [pc, #176]	@ (80024a0 <HAL_TIM_MspPostInit+0xd0>)
 80023ee:	4293      	cmp	r3, r2
 80023f0:	d130      	bne.n	8002454 <HAL_TIM_MspPostInit+0x84>
  {
  /* USER CODE BEGIN TIM1_MspPostInit 0 */

  /* USER CODE END TIM1_MspPostInit 0 */
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80023f2:	4b2c      	ldr	r3, [pc, #176]	@ (80024a4 <HAL_TIM_MspPostInit+0xd4>)
 80023f4:	695b      	ldr	r3, [r3, #20]
 80023f6:	4a2b      	ldr	r2, [pc, #172]	@ (80024a4 <HAL_TIM_MspPostInit+0xd4>)
 80023f8:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 80023fc:	6153      	str	r3, [r2, #20]
 80023fe:	4b29      	ldr	r3, [pc, #164]	@ (80024a4 <HAL_TIM_MspPostInit+0xd4>)
 8002400:	695b      	ldr	r3, [r3, #20]
 8002402:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002406:	613b      	str	r3, [r7, #16]
 8002408:	693b      	ldr	r3, [r7, #16]
    /**TIM1 GPIO Configuration
    PA8     ------> TIM1_CH1
    PA11     ------> TIM1_CH4
    */
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 800240a:	f44f 7380 	mov.w	r3, #256	@ 0x100
 800240e:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002410:	2302      	movs	r3, #2
 8002412:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002414:	2300      	movs	r3, #0
 8002416:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002418:	2300      	movs	r3, #0
 800241a:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF6_TIM1;
 800241c:	2306      	movs	r3, #6
 800241e:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002420:	f107 0314 	add.w	r3, r7, #20
 8002424:	4619      	mov	r1, r3
 8002426:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 800242a:	f000 fc11 	bl	8002c50 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_11;
 800242e:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 8002432:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002434:	2302      	movs	r3, #2
 8002436:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002438:	2300      	movs	r3, #0
 800243a:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800243c:	2300      	movs	r3, #0
 800243e:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF11_TIM1;
 8002440:	230b      	movs	r3, #11
 8002442:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002444:	f107 0314 	add.w	r3, r7, #20
 8002448:	4619      	mov	r1, r3
 800244a:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 800244e:	f000 fbff 	bl	8002c50 <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM2_MspPostInit 1 */

  /* USER CODE END TIM2_MspPostInit 1 */
  }

}
 8002452:	e021      	b.n	8002498 <HAL_TIM_MspPostInit+0xc8>
  else if(htim->Instance==TIM2)
 8002454:	687b      	ldr	r3, [r7, #4]
 8002456:	681b      	ldr	r3, [r3, #0]
 8002458:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800245c:	d11c      	bne.n	8002498 <HAL_TIM_MspPostInit+0xc8>
    __HAL_RCC_GPIOA_CLK_ENABLE();
 800245e:	4b11      	ldr	r3, [pc, #68]	@ (80024a4 <HAL_TIM_MspPostInit+0xd4>)
 8002460:	695b      	ldr	r3, [r3, #20]
 8002462:	4a10      	ldr	r2, [pc, #64]	@ (80024a4 <HAL_TIM_MspPostInit+0xd4>)
 8002464:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8002468:	6153      	str	r3, [r2, #20]
 800246a:	4b0e      	ldr	r3, [pc, #56]	@ (80024a4 <HAL_TIM_MspPostInit+0xd4>)
 800246c:	695b      	ldr	r3, [r3, #20]
 800246e:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002472:	60fb      	str	r3, [r7, #12]
 8002474:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8002476:	2303      	movs	r3, #3
 8002478:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800247a:	2302      	movs	r3, #2
 800247c:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800247e:	2300      	movs	r3, #0
 8002480:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002482:	2300      	movs	r3, #0
 8002484:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF1_TIM2;
 8002486:	2301      	movs	r3, #1
 8002488:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800248a:	f107 0314 	add.w	r3, r7, #20
 800248e:	4619      	mov	r1, r3
 8002490:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8002494:	f000 fbdc 	bl	8002c50 <HAL_GPIO_Init>
}
 8002498:	bf00      	nop
 800249a:	3728      	adds	r7, #40	@ 0x28
 800249c:	46bd      	mov	sp, r7
 800249e:	bd80      	pop	{r7, pc}
 80024a0:	40012c00 	.word	0x40012c00
 80024a4:	40021000 	.word	0x40021000

080024a8 <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 80024a8:	b580      	push	{r7, lr}
 80024aa:	b08c      	sub	sp, #48	@ 0x30
 80024ac:	af00      	add	r7, sp, #0
 80024ae:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80024b0:	f107 031c 	add.w	r3, r7, #28
 80024b4:	2200      	movs	r2, #0
 80024b6:	601a      	str	r2, [r3, #0]
 80024b8:	605a      	str	r2, [r3, #4]
 80024ba:	609a      	str	r2, [r3, #8]
 80024bc:	60da      	str	r2, [r3, #12]
 80024be:	611a      	str	r2, [r3, #16]
  if(huart->Instance==USART1)
 80024c0:	687b      	ldr	r3, [r7, #4]
 80024c2:	681b      	ldr	r3, [r3, #0]
 80024c4:	4a37      	ldr	r2, [pc, #220]	@ (80025a4 <HAL_UART_MspInit+0xfc>)
 80024c6:	4293      	cmp	r3, r2
 80024c8:	d132      	bne.n	8002530 <HAL_UART_MspInit+0x88>
  {
  /* USER CODE BEGIN USART1_MspInit 0 */

  /* USER CODE END USART1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_USART1_CLK_ENABLE();
 80024ca:	4b37      	ldr	r3, [pc, #220]	@ (80025a8 <HAL_UART_MspInit+0x100>)
 80024cc:	699b      	ldr	r3, [r3, #24]
 80024ce:	4a36      	ldr	r2, [pc, #216]	@ (80025a8 <HAL_UART_MspInit+0x100>)
 80024d0:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 80024d4:	6193      	str	r3, [r2, #24]
 80024d6:	4b34      	ldr	r3, [pc, #208]	@ (80025a8 <HAL_UART_MspInit+0x100>)
 80024d8:	699b      	ldr	r3, [r3, #24]
 80024da:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 80024de:	61bb      	str	r3, [r7, #24]
 80024e0:	69bb      	ldr	r3, [r7, #24]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 80024e2:	4b31      	ldr	r3, [pc, #196]	@ (80025a8 <HAL_UART_MspInit+0x100>)
 80024e4:	695b      	ldr	r3, [r3, #20]
 80024e6:	4a30      	ldr	r2, [pc, #192]	@ (80025a8 <HAL_UART_MspInit+0x100>)
 80024e8:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 80024ec:	6153      	str	r3, [r2, #20]
 80024ee:	4b2e      	ldr	r3, [pc, #184]	@ (80025a8 <HAL_UART_MspInit+0x100>)
 80024f0:	695b      	ldr	r3, [r3, #20]
 80024f2:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80024f6:	617b      	str	r3, [r7, #20]
 80024f8:	697b      	ldr	r3, [r7, #20]
    /**USART1 GPIO Configuration
    PA9     ------> USART1_TX
    PA10     ------> USART1_RX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_10;
 80024fa:	f44f 63c0 	mov.w	r3, #1536	@ 0x600
 80024fe:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002500:	2302      	movs	r3, #2
 8002502:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002504:	2300      	movs	r3, #0
 8002506:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002508:	2303      	movs	r3, #3
 800250a:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 800250c:	2307      	movs	r3, #7
 800250e:	62fb      	str	r3, [r7, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002510:	f107 031c 	add.w	r3, r7, #28
 8002514:	4619      	mov	r1, r3
 8002516:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 800251a:	f000 fb99 	bl	8002c50 <HAL_GPIO_Init>

    /* USART1 interrupt Init */
    HAL_NVIC_SetPriority(USART1_IRQn, 0, 0);
 800251e:	2200      	movs	r2, #0
 8002520:	2100      	movs	r1, #0
 8002522:	2025      	movs	r0, #37	@ 0x25
 8002524:	f000 fae1 	bl	8002aea <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART1_IRQn);
 8002528:	2025      	movs	r0, #37	@ 0x25
 800252a:	f000 fafa 	bl	8002b22 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN USART2_MspInit 1 */

  /* USER CODE END USART2_MspInit 1 */
  }

}
 800252e:	e035      	b.n	800259c <HAL_UART_MspInit+0xf4>
  else if(huart->Instance==USART2)
 8002530:	687b      	ldr	r3, [r7, #4]
 8002532:	681b      	ldr	r3, [r3, #0]
 8002534:	4a1d      	ldr	r2, [pc, #116]	@ (80025ac <HAL_UART_MspInit+0x104>)
 8002536:	4293      	cmp	r3, r2
 8002538:	d130      	bne.n	800259c <HAL_UART_MspInit+0xf4>
    __HAL_RCC_USART2_CLK_ENABLE();
 800253a:	4b1b      	ldr	r3, [pc, #108]	@ (80025a8 <HAL_UART_MspInit+0x100>)
 800253c:	69db      	ldr	r3, [r3, #28]
 800253e:	4a1a      	ldr	r2, [pc, #104]	@ (80025a8 <HAL_UART_MspInit+0x100>)
 8002540:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8002544:	61d3      	str	r3, [r2, #28]
 8002546:	4b18      	ldr	r3, [pc, #96]	@ (80025a8 <HAL_UART_MspInit+0x100>)
 8002548:	69db      	ldr	r3, [r3, #28]
 800254a:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800254e:	613b      	str	r3, [r7, #16]
 8002550:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002552:	4b15      	ldr	r3, [pc, #84]	@ (80025a8 <HAL_UART_MspInit+0x100>)
 8002554:	695b      	ldr	r3, [r3, #20]
 8002556:	4a14      	ldr	r2, [pc, #80]	@ (80025a8 <HAL_UART_MspInit+0x100>)
 8002558:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 800255c:	6153      	str	r3, [r2, #20]
 800255e:	4b12      	ldr	r3, [pc, #72]	@ (80025a8 <HAL_UART_MspInit+0x100>)
 8002560:	695b      	ldr	r3, [r3, #20]
 8002562:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002566:	60fb      	str	r3, [r7, #12]
 8002568:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = VCP_TX_Pin|VCP_RX_Pin;
 800256a:	230c      	movs	r3, #12
 800256c:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800256e:	2302      	movs	r3, #2
 8002570:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002572:	2300      	movs	r3, #0
 8002574:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002576:	2303      	movs	r3, #3
 8002578:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 800257a:	2307      	movs	r3, #7
 800257c:	62fb      	str	r3, [r7, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800257e:	f107 031c 	add.w	r3, r7, #28
 8002582:	4619      	mov	r1, r3
 8002584:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8002588:	f000 fb62 	bl	8002c50 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(USART2_IRQn, 0, 0);
 800258c:	2200      	movs	r2, #0
 800258e:	2100      	movs	r1, #0
 8002590:	2026      	movs	r0, #38	@ 0x26
 8002592:	f000 faaa 	bl	8002aea <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART2_IRQn);
 8002596:	2026      	movs	r0, #38	@ 0x26
 8002598:	f000 fac3 	bl	8002b22 <HAL_NVIC_EnableIRQ>
}
 800259c:	bf00      	nop
 800259e:	3730      	adds	r7, #48	@ 0x30
 80025a0:	46bd      	mov	sp, r7
 80025a2:	bd80      	pop	{r7, pc}
 80025a4:	40013800 	.word	0x40013800
 80025a8:	40021000 	.word	0x40021000
 80025ac:	40004400 	.word	0x40004400

080025b0 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 80025b0:	b480      	push	{r7}
 80025b2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 80025b4:	bf00      	nop
 80025b6:	e7fd      	b.n	80025b4 <NMI_Handler+0x4>

080025b8 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 80025b8:	b480      	push	{r7}
 80025ba:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 80025bc:	bf00      	nop
 80025be:	e7fd      	b.n	80025bc <HardFault_Handler+0x4>

080025c0 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 80025c0:	b480      	push	{r7}
 80025c2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 80025c4:	bf00      	nop
 80025c6:	e7fd      	b.n	80025c4 <MemManage_Handler+0x4>

080025c8 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 80025c8:	b480      	push	{r7}
 80025ca:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 80025cc:	bf00      	nop
 80025ce:	e7fd      	b.n	80025cc <BusFault_Handler+0x4>

080025d0 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 80025d0:	b480      	push	{r7}
 80025d2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 80025d4:	bf00      	nop
 80025d6:	e7fd      	b.n	80025d4 <UsageFault_Handler+0x4>

080025d8 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 80025d8:	b480      	push	{r7}
 80025da:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 80025dc:	bf00      	nop
 80025de:	46bd      	mov	sp, r7
 80025e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80025e4:	4770      	bx	lr

080025e6 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 80025e6:	b480      	push	{r7}
 80025e8:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 80025ea:	bf00      	nop
 80025ec:	46bd      	mov	sp, r7
 80025ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80025f2:	4770      	bx	lr

080025f4 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 80025f4:	b480      	push	{r7}
 80025f6:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 80025f8:	bf00      	nop
 80025fa:	46bd      	mov	sp, r7
 80025fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002600:	4770      	bx	lr

08002602 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8002602:	b580      	push	{r7, lr}
 8002604:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8002606:	f000 f951 	bl	80028ac <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 800260a:	bf00      	nop
 800260c:	bd80      	pop	{r7, pc}
	...

08002610 <TIM3_IRQHandler>:

/**
  * @brief This function handles TIM3 global interrupt.
  */
void TIM3_IRQHandler(void)
{
 8002610:	b580      	push	{r7, lr}
 8002612:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM3_IRQn 0 */

  /* USER CODE END TIM3_IRQn 0 */
  HAL_TIM_IRQHandler(&htim3);
 8002614:	4803      	ldr	r0, [pc, #12]	@ (8002624 <TIM3_IRQHandler+0x14>)
 8002616:	f002 fff1 	bl	80055fc <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM3_IRQn 1 */
  control_update_flag = 1;
 800261a:	4b03      	ldr	r3, [pc, #12]	@ (8002628 <TIM3_IRQHandler+0x18>)
 800261c:	2201      	movs	r2, #1
 800261e:	701a      	strb	r2, [r3, #0]
  /* USER CODE END TIM3_IRQn 1 */
}
 8002620:	bf00      	nop
 8002622:	bd80      	pop	{r7, pc}
 8002624:	2000035c 	.word	0x2000035c
 8002628:	2000053e 	.word	0x2000053e

0800262c <USART1_IRQHandler>:

/**
  * @brief This function handles USART1 global interrupt / USART1 wake-up interrupt through EXT line 25.
  */
void USART1_IRQHandler(void)
{
 800262c:	b580      	push	{r7, lr}
 800262e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USART1_IRQn 0 */

  /* USER CODE END USART1_IRQn 0 */
  HAL_UART_IRQHandler(&huart1);
 8002630:	4802      	ldr	r0, [pc, #8]	@ (800263c <USART1_IRQHandler+0x10>)
 8002632:	f004 f8ff 	bl	8006834 <HAL_UART_IRQHandler>
  /* USER CODE BEGIN USART1_IRQn 1 */

  /* USER CODE END USART1_IRQn 1 */
}
 8002636:	bf00      	nop
 8002638:	bd80      	pop	{r7, pc}
 800263a:	bf00      	nop
 800263c:	200003a8 	.word	0x200003a8

08002640 <USART2_IRQHandler>:

/**
  * @brief This function handles USART2 global interrupt / USART2 wake-up interrupt through EXT line 26.
  */
void USART2_IRQHandler(void)
{
 8002640:	b580      	push	{r7, lr}
 8002642:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USART2_IRQn 0 */

  /* USER CODE END USART2_IRQn 0 */
  HAL_UART_IRQHandler(&huart2);
 8002644:	4802      	ldr	r0, [pc, #8]	@ (8002650 <USART2_IRQHandler+0x10>)
 8002646:	f004 f8f5 	bl	8006834 <HAL_UART_IRQHandler>
  /* USER CODE BEGIN USART2_IRQn 1 */

  /* USER CODE END USART2_IRQn 1 */
}
 800264a:	bf00      	nop
 800264c:	bd80      	pop	{r7, pc}
 800264e:	bf00      	nop
 8002650:	20000430 	.word	0x20000430

08002654 <_getpid>:
 8002654:	b480      	push	{r7}
 8002656:	af00      	add	r7, sp, #0
 8002658:	2301      	movs	r3, #1
 800265a:	4618      	mov	r0, r3
 800265c:	46bd      	mov	sp, r7
 800265e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002662:	4770      	bx	lr

08002664 <_kill>:
 8002664:	b580      	push	{r7, lr}
 8002666:	b082      	sub	sp, #8
 8002668:	af00      	add	r7, sp, #0
 800266a:	6078      	str	r0, [r7, #4]
 800266c:	6039      	str	r1, [r7, #0]
 800266e:	f006 f84d 	bl	800870c <__errno>
 8002672:	4603      	mov	r3, r0
 8002674:	2216      	movs	r2, #22
 8002676:	601a      	str	r2, [r3, #0]
 8002678:	f04f 33ff 	mov.w	r3, #4294967295
 800267c:	4618      	mov	r0, r3
 800267e:	3708      	adds	r7, #8
 8002680:	46bd      	mov	sp, r7
 8002682:	bd80      	pop	{r7, pc}

08002684 <_exit>:
 8002684:	b580      	push	{r7, lr}
 8002686:	b082      	sub	sp, #8
 8002688:	af00      	add	r7, sp, #0
 800268a:	6078      	str	r0, [r7, #4]
 800268c:	f04f 31ff 	mov.w	r1, #4294967295
 8002690:	6878      	ldr	r0, [r7, #4]
 8002692:	f7ff ffe7 	bl	8002664 <_kill>
 8002696:	bf00      	nop
 8002698:	e7fd      	b.n	8002696 <_exit+0x12>

0800269a <_read>:
 800269a:	b580      	push	{r7, lr}
 800269c:	b086      	sub	sp, #24
 800269e:	af00      	add	r7, sp, #0
 80026a0:	60f8      	str	r0, [r7, #12]
 80026a2:	60b9      	str	r1, [r7, #8]
 80026a4:	607a      	str	r2, [r7, #4]
 80026a6:	2300      	movs	r3, #0
 80026a8:	617b      	str	r3, [r7, #20]
 80026aa:	e00a      	b.n	80026c2 <_read+0x28>
 80026ac:	f3af 8000 	nop.w
 80026b0:	4601      	mov	r1, r0
 80026b2:	68bb      	ldr	r3, [r7, #8]
 80026b4:	1c5a      	adds	r2, r3, #1
 80026b6:	60ba      	str	r2, [r7, #8]
 80026b8:	b2ca      	uxtb	r2, r1
 80026ba:	701a      	strb	r2, [r3, #0]
 80026bc:	697b      	ldr	r3, [r7, #20]
 80026be:	3301      	adds	r3, #1
 80026c0:	617b      	str	r3, [r7, #20]
 80026c2:	697a      	ldr	r2, [r7, #20]
 80026c4:	687b      	ldr	r3, [r7, #4]
 80026c6:	429a      	cmp	r2, r3
 80026c8:	dbf0      	blt.n	80026ac <_read+0x12>
 80026ca:	687b      	ldr	r3, [r7, #4]
 80026cc:	4618      	mov	r0, r3
 80026ce:	3718      	adds	r7, #24
 80026d0:	46bd      	mov	sp, r7
 80026d2:	bd80      	pop	{r7, pc}

080026d4 <_close>:
 80026d4:	b480      	push	{r7}
 80026d6:	b083      	sub	sp, #12
 80026d8:	af00      	add	r7, sp, #0
 80026da:	6078      	str	r0, [r7, #4]
 80026dc:	f04f 33ff 	mov.w	r3, #4294967295
 80026e0:	4618      	mov	r0, r3
 80026e2:	370c      	adds	r7, #12
 80026e4:	46bd      	mov	sp, r7
 80026e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80026ea:	4770      	bx	lr

080026ec <_fstat>:
 80026ec:	b480      	push	{r7}
 80026ee:	b083      	sub	sp, #12
 80026f0:	af00      	add	r7, sp, #0
 80026f2:	6078      	str	r0, [r7, #4]
 80026f4:	6039      	str	r1, [r7, #0]
 80026f6:	683b      	ldr	r3, [r7, #0]
 80026f8:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 80026fc:	605a      	str	r2, [r3, #4]
 80026fe:	2300      	movs	r3, #0
 8002700:	4618      	mov	r0, r3
 8002702:	370c      	adds	r7, #12
 8002704:	46bd      	mov	sp, r7
 8002706:	f85d 7b04 	ldr.w	r7, [sp], #4
 800270a:	4770      	bx	lr

0800270c <_isatty>:
 800270c:	b480      	push	{r7}
 800270e:	b083      	sub	sp, #12
 8002710:	af00      	add	r7, sp, #0
 8002712:	6078      	str	r0, [r7, #4]
 8002714:	2301      	movs	r3, #1
 8002716:	4618      	mov	r0, r3
 8002718:	370c      	adds	r7, #12
 800271a:	46bd      	mov	sp, r7
 800271c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002720:	4770      	bx	lr

08002722 <_lseek>:
 8002722:	b480      	push	{r7}
 8002724:	b085      	sub	sp, #20
 8002726:	af00      	add	r7, sp, #0
 8002728:	60f8      	str	r0, [r7, #12]
 800272a:	60b9      	str	r1, [r7, #8]
 800272c:	607a      	str	r2, [r7, #4]
 800272e:	2300      	movs	r3, #0
 8002730:	4618      	mov	r0, r3
 8002732:	3714      	adds	r7, #20
 8002734:	46bd      	mov	sp, r7
 8002736:	f85d 7b04 	ldr.w	r7, [sp], #4
 800273a:	4770      	bx	lr

0800273c <_sbrk>:
 800273c:	b580      	push	{r7, lr}
 800273e:	b086      	sub	sp, #24
 8002740:	af00      	add	r7, sp, #0
 8002742:	6078      	str	r0, [r7, #4]
 8002744:	4a14      	ldr	r2, [pc, #80]	@ (8002798 <_sbrk+0x5c>)
 8002746:	4b15      	ldr	r3, [pc, #84]	@ (800279c <_sbrk+0x60>)
 8002748:	1ad3      	subs	r3, r2, r3
 800274a:	617b      	str	r3, [r7, #20]
 800274c:	697b      	ldr	r3, [r7, #20]
 800274e:	613b      	str	r3, [r7, #16]
 8002750:	4b13      	ldr	r3, [pc, #76]	@ (80027a0 <_sbrk+0x64>)
 8002752:	681b      	ldr	r3, [r3, #0]
 8002754:	2b00      	cmp	r3, #0
 8002756:	d102      	bne.n	800275e <_sbrk+0x22>
 8002758:	4b11      	ldr	r3, [pc, #68]	@ (80027a0 <_sbrk+0x64>)
 800275a:	4a12      	ldr	r2, [pc, #72]	@ (80027a4 <_sbrk+0x68>)
 800275c:	601a      	str	r2, [r3, #0]
 800275e:	4b10      	ldr	r3, [pc, #64]	@ (80027a0 <_sbrk+0x64>)
 8002760:	681a      	ldr	r2, [r3, #0]
 8002762:	687b      	ldr	r3, [r7, #4]
 8002764:	4413      	add	r3, r2
 8002766:	693a      	ldr	r2, [r7, #16]
 8002768:	429a      	cmp	r2, r3
 800276a:	d207      	bcs.n	800277c <_sbrk+0x40>
 800276c:	f005 ffce 	bl	800870c <__errno>
 8002770:	4603      	mov	r3, r0
 8002772:	220c      	movs	r2, #12
 8002774:	601a      	str	r2, [r3, #0]
 8002776:	f04f 33ff 	mov.w	r3, #4294967295
 800277a:	e009      	b.n	8002790 <_sbrk+0x54>
 800277c:	4b08      	ldr	r3, [pc, #32]	@ (80027a0 <_sbrk+0x64>)
 800277e:	681b      	ldr	r3, [r3, #0]
 8002780:	60fb      	str	r3, [r7, #12]
 8002782:	4b07      	ldr	r3, [pc, #28]	@ (80027a0 <_sbrk+0x64>)
 8002784:	681a      	ldr	r2, [r3, #0]
 8002786:	687b      	ldr	r3, [r7, #4]
 8002788:	4413      	add	r3, r2
 800278a:	4a05      	ldr	r2, [pc, #20]	@ (80027a0 <_sbrk+0x64>)
 800278c:	6013      	str	r3, [r2, #0]
 800278e:	68fb      	ldr	r3, [r7, #12]
 8002790:	4618      	mov	r0, r3
 8002792:	3718      	adds	r7, #24
 8002794:	46bd      	mov	sp, r7
 8002796:	bd80      	pop	{r7, pc}
 8002798:	20003000 	.word	0x20003000
 800279c:	00000400 	.word	0x00000400
 80027a0:	20000540 	.word	0x20000540
 80027a4:	20000698 	.word	0x20000698

080027a8 <SystemInit>:
 80027a8:	b480      	push	{r7}
 80027aa:	af00      	add	r7, sp, #0
 80027ac:	4b06      	ldr	r3, [pc, #24]	@ (80027c8 <SystemInit+0x20>)
 80027ae:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80027b2:	4a05      	ldr	r2, [pc, #20]	@ (80027c8 <SystemInit+0x20>)
 80027b4:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 80027b8:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
 80027bc:	bf00      	nop
 80027be:	46bd      	mov	sp, r7
 80027c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80027c4:	4770      	bx	lr
 80027c6:	bf00      	nop
 80027c8:	e000ed00 	.word	0xe000ed00

080027cc <Reset_Handler>:
 80027cc:	f8df d034 	ldr.w	sp, [pc, #52]	@ 8002804 <LoopForever+0x2>
 80027d0:	f7ff ffea 	bl	80027a8 <SystemInit>
 80027d4:	480c      	ldr	r0, [pc, #48]	@ (8002808 <LoopForever+0x6>)
 80027d6:	490d      	ldr	r1, [pc, #52]	@ (800280c <LoopForever+0xa>)
 80027d8:	4a0d      	ldr	r2, [pc, #52]	@ (8002810 <LoopForever+0xe>)
 80027da:	2300      	movs	r3, #0
 80027dc:	e002      	b.n	80027e4 <LoopCopyDataInit>

080027de <CopyDataInit>:
 80027de:	58d4      	ldr	r4, [r2, r3]
 80027e0:	50c4      	str	r4, [r0, r3]
 80027e2:	3304      	adds	r3, #4

080027e4 <LoopCopyDataInit>:
 80027e4:	18c4      	adds	r4, r0, r3
 80027e6:	428c      	cmp	r4, r1
 80027e8:	d3f9      	bcc.n	80027de <CopyDataInit>
 80027ea:	4a0a      	ldr	r2, [pc, #40]	@ (8002814 <LoopForever+0x12>)
 80027ec:	4c0a      	ldr	r4, [pc, #40]	@ (8002818 <LoopForever+0x16>)
 80027ee:	2300      	movs	r3, #0
 80027f0:	e001      	b.n	80027f6 <LoopFillZerobss>

080027f2 <FillZerobss>:
 80027f2:	6013      	str	r3, [r2, #0]
 80027f4:	3204      	adds	r2, #4

080027f6 <LoopFillZerobss>:
 80027f6:	42a2      	cmp	r2, r4
 80027f8:	d3fb      	bcc.n	80027f2 <FillZerobss>
 80027fa:	f005 ff8d 	bl	8008718 <__libc_init_array>
 80027fe:	f7ff f991 	bl	8001b24 <main>

08002802 <LoopForever>:
 8002802:	e7fe      	b.n	8002802 <LoopForever>
 8002804:	20003000 	.word	0x20003000
 8002808:	20000000 	.word	0x20000000
 800280c:	200001d4 	.word	0x200001d4
 8002810:	0800aa28 	.word	0x0800aa28
 8002814:	200001d4 	.word	0x200001d4
 8002818:	20000694 	.word	0x20000694

0800281c <ADC1_2_IRQHandler>:
 800281c:	e7fe      	b.n	800281c <ADC1_2_IRQHandler>
	...

08002820 <HAL_Init>:
 8002820:	b580      	push	{r7, lr}
 8002822:	af00      	add	r7, sp, #0
 8002824:	4b08      	ldr	r3, [pc, #32]	@ (8002848 <HAL_Init+0x28>)
 8002826:	681b      	ldr	r3, [r3, #0]
 8002828:	4a07      	ldr	r2, [pc, #28]	@ (8002848 <HAL_Init+0x28>)
 800282a:	f043 0310 	orr.w	r3, r3, #16
 800282e:	6013      	str	r3, [r2, #0]
 8002830:	2003      	movs	r0, #3
 8002832:	f000 f94f 	bl	8002ad4 <HAL_NVIC_SetPriorityGrouping>
 8002836:	2000      	movs	r0, #0
 8002838:	f000 f808 	bl	800284c <HAL_InitTick>
 800283c:	f7ff fd14 	bl	8002268 <HAL_MspInit>
 8002840:	2300      	movs	r3, #0
 8002842:	4618      	mov	r0, r3
 8002844:	bd80      	pop	{r7, pc}
 8002846:	bf00      	nop
 8002848:	40022000 	.word	0x40022000

0800284c <HAL_InitTick>:
 800284c:	b580      	push	{r7, lr}
 800284e:	b082      	sub	sp, #8
 8002850:	af00      	add	r7, sp, #0
 8002852:	6078      	str	r0, [r7, #4]
 8002854:	4b12      	ldr	r3, [pc, #72]	@ (80028a0 <HAL_InitTick+0x54>)
 8002856:	681a      	ldr	r2, [r3, #0]
 8002858:	4b12      	ldr	r3, [pc, #72]	@ (80028a4 <HAL_InitTick+0x58>)
 800285a:	781b      	ldrb	r3, [r3, #0]
 800285c:	4619      	mov	r1, r3
 800285e:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8002862:	fbb3 f3f1 	udiv	r3, r3, r1
 8002866:	fbb2 f3f3 	udiv	r3, r2, r3
 800286a:	4618      	mov	r0, r3
 800286c:	f000 f967 	bl	8002b3e <HAL_SYSTICK_Config>
 8002870:	4603      	mov	r3, r0
 8002872:	2b00      	cmp	r3, #0
 8002874:	d001      	beq.n	800287a <HAL_InitTick+0x2e>
 8002876:	2301      	movs	r3, #1
 8002878:	e00e      	b.n	8002898 <HAL_InitTick+0x4c>
 800287a:	687b      	ldr	r3, [r7, #4]
 800287c:	2b0f      	cmp	r3, #15
 800287e:	d80a      	bhi.n	8002896 <HAL_InitTick+0x4a>
 8002880:	2200      	movs	r2, #0
 8002882:	6879      	ldr	r1, [r7, #4]
 8002884:	f04f 30ff 	mov.w	r0, #4294967295
 8002888:	f000 f92f 	bl	8002aea <HAL_NVIC_SetPriority>
 800288c:	4a06      	ldr	r2, [pc, #24]	@ (80028a8 <HAL_InitTick+0x5c>)
 800288e:	687b      	ldr	r3, [r7, #4]
 8002890:	6013      	str	r3, [r2, #0]
 8002892:	2300      	movs	r3, #0
 8002894:	e000      	b.n	8002898 <HAL_InitTick+0x4c>
 8002896:	2301      	movs	r3, #1
 8002898:	4618      	mov	r0, r3
 800289a:	3708      	adds	r7, #8
 800289c:	46bd      	mov	sp, r7
 800289e:	bd80      	pop	{r7, pc}
 80028a0:	20000000 	.word	0x20000000
 80028a4:	20000008 	.word	0x20000008
 80028a8:	20000004 	.word	0x20000004

080028ac <HAL_IncTick>:
 80028ac:	b480      	push	{r7}
 80028ae:	af00      	add	r7, sp, #0
 80028b0:	4b06      	ldr	r3, [pc, #24]	@ (80028cc <HAL_IncTick+0x20>)
 80028b2:	781b      	ldrb	r3, [r3, #0]
 80028b4:	461a      	mov	r2, r3
 80028b6:	4b06      	ldr	r3, [pc, #24]	@ (80028d0 <HAL_IncTick+0x24>)
 80028b8:	681b      	ldr	r3, [r3, #0]
 80028ba:	4413      	add	r3, r2
 80028bc:	4a04      	ldr	r2, [pc, #16]	@ (80028d0 <HAL_IncTick+0x24>)
 80028be:	6013      	str	r3, [r2, #0]
 80028c0:	bf00      	nop
 80028c2:	46bd      	mov	sp, r7
 80028c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80028c8:	4770      	bx	lr
 80028ca:	bf00      	nop
 80028cc:	20000008 	.word	0x20000008
 80028d0:	20000544 	.word	0x20000544

080028d4 <HAL_GetTick>:
 80028d4:	b480      	push	{r7}
 80028d6:	af00      	add	r7, sp, #0
 80028d8:	4b03      	ldr	r3, [pc, #12]	@ (80028e8 <HAL_GetTick+0x14>)
 80028da:	681b      	ldr	r3, [r3, #0]
 80028dc:	4618      	mov	r0, r3
 80028de:	46bd      	mov	sp, r7
 80028e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80028e4:	4770      	bx	lr
 80028e6:	bf00      	nop
 80028e8:	20000544 	.word	0x20000544

080028ec <HAL_Delay>:
 80028ec:	b580      	push	{r7, lr}
 80028ee:	b084      	sub	sp, #16
 80028f0:	af00      	add	r7, sp, #0
 80028f2:	6078      	str	r0, [r7, #4]
 80028f4:	f7ff ffee 	bl	80028d4 <HAL_GetTick>
 80028f8:	60b8      	str	r0, [r7, #8]
 80028fa:	687b      	ldr	r3, [r7, #4]
 80028fc:	60fb      	str	r3, [r7, #12]
 80028fe:	68fb      	ldr	r3, [r7, #12]
 8002900:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002904:	d005      	beq.n	8002912 <HAL_Delay+0x26>
 8002906:	4b0a      	ldr	r3, [pc, #40]	@ (8002930 <HAL_Delay+0x44>)
 8002908:	781b      	ldrb	r3, [r3, #0]
 800290a:	461a      	mov	r2, r3
 800290c:	68fb      	ldr	r3, [r7, #12]
 800290e:	4413      	add	r3, r2
 8002910:	60fb      	str	r3, [r7, #12]
 8002912:	bf00      	nop
 8002914:	f7ff ffde 	bl	80028d4 <HAL_GetTick>
 8002918:	4602      	mov	r2, r0
 800291a:	68bb      	ldr	r3, [r7, #8]
 800291c:	1ad3      	subs	r3, r2, r3
 800291e:	68fa      	ldr	r2, [r7, #12]
 8002920:	429a      	cmp	r2, r3
 8002922:	d8f7      	bhi.n	8002914 <HAL_Delay+0x28>
 8002924:	bf00      	nop
 8002926:	bf00      	nop
 8002928:	3710      	adds	r7, #16
 800292a:	46bd      	mov	sp, r7
 800292c:	bd80      	pop	{r7, pc}
 800292e:	bf00      	nop
 8002930:	20000008 	.word	0x20000008

08002934 <__NVIC_SetPriorityGrouping>:
 8002934:	b480      	push	{r7}
 8002936:	b085      	sub	sp, #20
 8002938:	af00      	add	r7, sp, #0
 800293a:	6078      	str	r0, [r7, #4]
 800293c:	687b      	ldr	r3, [r7, #4]
 800293e:	f003 0307 	and.w	r3, r3, #7
 8002942:	60fb      	str	r3, [r7, #12]
 8002944:	4b0c      	ldr	r3, [pc, #48]	@ (8002978 <__NVIC_SetPriorityGrouping+0x44>)
 8002946:	68db      	ldr	r3, [r3, #12]
 8002948:	60bb      	str	r3, [r7, #8]
 800294a:	68ba      	ldr	r2, [r7, #8]
 800294c:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 8002950:	4013      	ands	r3, r2
 8002952:	60bb      	str	r3, [r7, #8]
 8002954:	68fb      	ldr	r3, [r7, #12]
 8002956:	021a      	lsls	r2, r3, #8
 8002958:	68bb      	ldr	r3, [r7, #8]
 800295a:	4313      	orrs	r3, r2
 800295c:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 8002960:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8002964:	60bb      	str	r3, [r7, #8]
 8002966:	4a04      	ldr	r2, [pc, #16]	@ (8002978 <__NVIC_SetPriorityGrouping+0x44>)
 8002968:	68bb      	ldr	r3, [r7, #8]
 800296a:	60d3      	str	r3, [r2, #12]
 800296c:	bf00      	nop
 800296e:	3714      	adds	r7, #20
 8002970:	46bd      	mov	sp, r7
 8002972:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002976:	4770      	bx	lr
 8002978:	e000ed00 	.word	0xe000ed00

0800297c <__NVIC_GetPriorityGrouping>:
 800297c:	b480      	push	{r7}
 800297e:	af00      	add	r7, sp, #0
 8002980:	4b04      	ldr	r3, [pc, #16]	@ (8002994 <__NVIC_GetPriorityGrouping+0x18>)
 8002982:	68db      	ldr	r3, [r3, #12]
 8002984:	0a1b      	lsrs	r3, r3, #8
 8002986:	f003 0307 	and.w	r3, r3, #7
 800298a:	4618      	mov	r0, r3
 800298c:	46bd      	mov	sp, r7
 800298e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002992:	4770      	bx	lr
 8002994:	e000ed00 	.word	0xe000ed00

08002998 <__NVIC_EnableIRQ>:
 8002998:	b480      	push	{r7}
 800299a:	b083      	sub	sp, #12
 800299c:	af00      	add	r7, sp, #0
 800299e:	4603      	mov	r3, r0
 80029a0:	71fb      	strb	r3, [r7, #7]
 80029a2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80029a6:	2b00      	cmp	r3, #0
 80029a8:	db0b      	blt.n	80029c2 <__NVIC_EnableIRQ+0x2a>
 80029aa:	79fb      	ldrb	r3, [r7, #7]
 80029ac:	f003 021f 	and.w	r2, r3, #31
 80029b0:	4907      	ldr	r1, [pc, #28]	@ (80029d0 <__NVIC_EnableIRQ+0x38>)
 80029b2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80029b6:	095b      	lsrs	r3, r3, #5
 80029b8:	2001      	movs	r0, #1
 80029ba:	fa00 f202 	lsl.w	r2, r0, r2
 80029be:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80029c2:	bf00      	nop
 80029c4:	370c      	adds	r7, #12
 80029c6:	46bd      	mov	sp, r7
 80029c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80029cc:	4770      	bx	lr
 80029ce:	bf00      	nop
 80029d0:	e000e100 	.word	0xe000e100

080029d4 <__NVIC_SetPriority>:
 80029d4:	b480      	push	{r7}
 80029d6:	b083      	sub	sp, #12
 80029d8:	af00      	add	r7, sp, #0
 80029da:	4603      	mov	r3, r0
 80029dc:	6039      	str	r1, [r7, #0]
 80029de:	71fb      	strb	r3, [r7, #7]
 80029e0:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80029e4:	2b00      	cmp	r3, #0
 80029e6:	db0a      	blt.n	80029fe <__NVIC_SetPriority+0x2a>
 80029e8:	683b      	ldr	r3, [r7, #0]
 80029ea:	b2da      	uxtb	r2, r3
 80029ec:	490c      	ldr	r1, [pc, #48]	@ (8002a20 <__NVIC_SetPriority+0x4c>)
 80029ee:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80029f2:	0112      	lsls	r2, r2, #4
 80029f4:	b2d2      	uxtb	r2, r2
 80029f6:	440b      	add	r3, r1
 80029f8:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 80029fc:	e00a      	b.n	8002a14 <__NVIC_SetPriority+0x40>
 80029fe:	683b      	ldr	r3, [r7, #0]
 8002a00:	b2da      	uxtb	r2, r3
 8002a02:	4908      	ldr	r1, [pc, #32]	@ (8002a24 <__NVIC_SetPriority+0x50>)
 8002a04:	79fb      	ldrb	r3, [r7, #7]
 8002a06:	f003 030f 	and.w	r3, r3, #15
 8002a0a:	3b04      	subs	r3, #4
 8002a0c:	0112      	lsls	r2, r2, #4
 8002a0e:	b2d2      	uxtb	r2, r2
 8002a10:	440b      	add	r3, r1
 8002a12:	761a      	strb	r2, [r3, #24]
 8002a14:	bf00      	nop
 8002a16:	370c      	adds	r7, #12
 8002a18:	46bd      	mov	sp, r7
 8002a1a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002a1e:	4770      	bx	lr
 8002a20:	e000e100 	.word	0xe000e100
 8002a24:	e000ed00 	.word	0xe000ed00

08002a28 <NVIC_EncodePriority>:
 8002a28:	b480      	push	{r7}
 8002a2a:	b089      	sub	sp, #36	@ 0x24
 8002a2c:	af00      	add	r7, sp, #0
 8002a2e:	60f8      	str	r0, [r7, #12]
 8002a30:	60b9      	str	r1, [r7, #8]
 8002a32:	607a      	str	r2, [r7, #4]
 8002a34:	68fb      	ldr	r3, [r7, #12]
 8002a36:	f003 0307 	and.w	r3, r3, #7
 8002a3a:	61fb      	str	r3, [r7, #28]
 8002a3c:	69fb      	ldr	r3, [r7, #28]
 8002a3e:	f1c3 0307 	rsb	r3, r3, #7
 8002a42:	2b04      	cmp	r3, #4
 8002a44:	bf28      	it	cs
 8002a46:	2304      	movcs	r3, #4
 8002a48:	61bb      	str	r3, [r7, #24]
 8002a4a:	69fb      	ldr	r3, [r7, #28]
 8002a4c:	3304      	adds	r3, #4
 8002a4e:	2b06      	cmp	r3, #6
 8002a50:	d902      	bls.n	8002a58 <NVIC_EncodePriority+0x30>
 8002a52:	69fb      	ldr	r3, [r7, #28]
 8002a54:	3b03      	subs	r3, #3
 8002a56:	e000      	b.n	8002a5a <NVIC_EncodePriority+0x32>
 8002a58:	2300      	movs	r3, #0
 8002a5a:	617b      	str	r3, [r7, #20]
 8002a5c:	f04f 32ff 	mov.w	r2, #4294967295
 8002a60:	69bb      	ldr	r3, [r7, #24]
 8002a62:	fa02 f303 	lsl.w	r3, r2, r3
 8002a66:	43da      	mvns	r2, r3
 8002a68:	68bb      	ldr	r3, [r7, #8]
 8002a6a:	401a      	ands	r2, r3
 8002a6c:	697b      	ldr	r3, [r7, #20]
 8002a6e:	409a      	lsls	r2, r3
 8002a70:	f04f 31ff 	mov.w	r1, #4294967295
 8002a74:	697b      	ldr	r3, [r7, #20]
 8002a76:	fa01 f303 	lsl.w	r3, r1, r3
 8002a7a:	43d9      	mvns	r1, r3
 8002a7c:	687b      	ldr	r3, [r7, #4]
 8002a7e:	400b      	ands	r3, r1
 8002a80:	4313      	orrs	r3, r2
 8002a82:	4618      	mov	r0, r3
 8002a84:	3724      	adds	r7, #36	@ 0x24
 8002a86:	46bd      	mov	sp, r7
 8002a88:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002a8c:	4770      	bx	lr
	...

08002a90 <SysTick_Config>:
 8002a90:	b580      	push	{r7, lr}
 8002a92:	b082      	sub	sp, #8
 8002a94:	af00      	add	r7, sp, #0
 8002a96:	6078      	str	r0, [r7, #4]
 8002a98:	687b      	ldr	r3, [r7, #4]
 8002a9a:	3b01      	subs	r3, #1
 8002a9c:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8002aa0:	d301      	bcc.n	8002aa6 <SysTick_Config+0x16>
 8002aa2:	2301      	movs	r3, #1
 8002aa4:	e00f      	b.n	8002ac6 <SysTick_Config+0x36>
 8002aa6:	4a0a      	ldr	r2, [pc, #40]	@ (8002ad0 <SysTick_Config+0x40>)
 8002aa8:	687b      	ldr	r3, [r7, #4]
 8002aaa:	3b01      	subs	r3, #1
 8002aac:	6053      	str	r3, [r2, #4]
 8002aae:	210f      	movs	r1, #15
 8002ab0:	f04f 30ff 	mov.w	r0, #4294967295
 8002ab4:	f7ff ff8e 	bl	80029d4 <__NVIC_SetPriority>
 8002ab8:	4b05      	ldr	r3, [pc, #20]	@ (8002ad0 <SysTick_Config+0x40>)
 8002aba:	2200      	movs	r2, #0
 8002abc:	609a      	str	r2, [r3, #8]
 8002abe:	4b04      	ldr	r3, [pc, #16]	@ (8002ad0 <SysTick_Config+0x40>)
 8002ac0:	2207      	movs	r2, #7
 8002ac2:	601a      	str	r2, [r3, #0]
 8002ac4:	2300      	movs	r3, #0
 8002ac6:	4618      	mov	r0, r3
 8002ac8:	3708      	adds	r7, #8
 8002aca:	46bd      	mov	sp, r7
 8002acc:	bd80      	pop	{r7, pc}
 8002ace:	bf00      	nop
 8002ad0:	e000e010 	.word	0xe000e010

08002ad4 <HAL_NVIC_SetPriorityGrouping>:
 8002ad4:	b580      	push	{r7, lr}
 8002ad6:	b082      	sub	sp, #8
 8002ad8:	af00      	add	r7, sp, #0
 8002ada:	6078      	str	r0, [r7, #4]
 8002adc:	6878      	ldr	r0, [r7, #4]
 8002ade:	f7ff ff29 	bl	8002934 <__NVIC_SetPriorityGrouping>
 8002ae2:	bf00      	nop
 8002ae4:	3708      	adds	r7, #8
 8002ae6:	46bd      	mov	sp, r7
 8002ae8:	bd80      	pop	{r7, pc}

08002aea <HAL_NVIC_SetPriority>:
 8002aea:	b580      	push	{r7, lr}
 8002aec:	b086      	sub	sp, #24
 8002aee:	af00      	add	r7, sp, #0
 8002af0:	4603      	mov	r3, r0
 8002af2:	60b9      	str	r1, [r7, #8]
 8002af4:	607a      	str	r2, [r7, #4]
 8002af6:	73fb      	strb	r3, [r7, #15]
 8002af8:	2300      	movs	r3, #0
 8002afa:	617b      	str	r3, [r7, #20]
 8002afc:	f7ff ff3e 	bl	800297c <__NVIC_GetPriorityGrouping>
 8002b00:	6178      	str	r0, [r7, #20]
 8002b02:	687a      	ldr	r2, [r7, #4]
 8002b04:	68b9      	ldr	r1, [r7, #8]
 8002b06:	6978      	ldr	r0, [r7, #20]
 8002b08:	f7ff ff8e 	bl	8002a28 <NVIC_EncodePriority>
 8002b0c:	4602      	mov	r2, r0
 8002b0e:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8002b12:	4611      	mov	r1, r2
 8002b14:	4618      	mov	r0, r3
 8002b16:	f7ff ff5d 	bl	80029d4 <__NVIC_SetPriority>
 8002b1a:	bf00      	nop
 8002b1c:	3718      	adds	r7, #24
 8002b1e:	46bd      	mov	sp, r7
 8002b20:	bd80      	pop	{r7, pc}

08002b22 <HAL_NVIC_EnableIRQ>:
 8002b22:	b580      	push	{r7, lr}
 8002b24:	b082      	sub	sp, #8
 8002b26:	af00      	add	r7, sp, #0
 8002b28:	4603      	mov	r3, r0
 8002b2a:	71fb      	strb	r3, [r7, #7]
 8002b2c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002b30:	4618      	mov	r0, r3
 8002b32:	f7ff ff31 	bl	8002998 <__NVIC_EnableIRQ>
 8002b36:	bf00      	nop
 8002b38:	3708      	adds	r7, #8
 8002b3a:	46bd      	mov	sp, r7
 8002b3c:	bd80      	pop	{r7, pc}

08002b3e <HAL_SYSTICK_Config>:
 8002b3e:	b580      	push	{r7, lr}
 8002b40:	b082      	sub	sp, #8
 8002b42:	af00      	add	r7, sp, #0
 8002b44:	6078      	str	r0, [r7, #4]
 8002b46:	6878      	ldr	r0, [r7, #4]
 8002b48:	f7ff ffa2 	bl	8002a90 <SysTick_Config>
 8002b4c:	4603      	mov	r3, r0
 8002b4e:	4618      	mov	r0, r3
 8002b50:	3708      	adds	r7, #8
 8002b52:	46bd      	mov	sp, r7
 8002b54:	bd80      	pop	{r7, pc}

08002b56 <HAL_DMA_Abort>:
 8002b56:	b480      	push	{r7}
 8002b58:	b083      	sub	sp, #12
 8002b5a:	af00      	add	r7, sp, #0
 8002b5c:	6078      	str	r0, [r7, #4]
 8002b5e:	687b      	ldr	r3, [r7, #4]
 8002b60:	2b00      	cmp	r3, #0
 8002b62:	d101      	bne.n	8002b68 <HAL_DMA_Abort+0x12>
 8002b64:	2301      	movs	r3, #1
 8002b66:	e02e      	b.n	8002bc6 <HAL_DMA_Abort+0x70>
 8002b68:	687b      	ldr	r3, [r7, #4]
 8002b6a:	f893 3021 	ldrb.w	r3, [r3, #33]	@ 0x21
 8002b6e:	2b02      	cmp	r3, #2
 8002b70:	d008      	beq.n	8002b84 <HAL_DMA_Abort+0x2e>
 8002b72:	687b      	ldr	r3, [r7, #4]
 8002b74:	2204      	movs	r2, #4
 8002b76:	639a      	str	r2, [r3, #56]	@ 0x38
 8002b78:	687b      	ldr	r3, [r7, #4]
 8002b7a:	2200      	movs	r2, #0
 8002b7c:	f883 2020 	strb.w	r2, [r3, #32]
 8002b80:	2301      	movs	r3, #1
 8002b82:	e020      	b.n	8002bc6 <HAL_DMA_Abort+0x70>
 8002b84:	687b      	ldr	r3, [r7, #4]
 8002b86:	681b      	ldr	r3, [r3, #0]
 8002b88:	681a      	ldr	r2, [r3, #0]
 8002b8a:	687b      	ldr	r3, [r7, #4]
 8002b8c:	681b      	ldr	r3, [r3, #0]
 8002b8e:	f022 020e 	bic.w	r2, r2, #14
 8002b92:	601a      	str	r2, [r3, #0]
 8002b94:	687b      	ldr	r3, [r7, #4]
 8002b96:	681b      	ldr	r3, [r3, #0]
 8002b98:	681a      	ldr	r2, [r3, #0]
 8002b9a:	687b      	ldr	r3, [r7, #4]
 8002b9c:	681b      	ldr	r3, [r3, #0]
 8002b9e:	f022 0201 	bic.w	r2, r2, #1
 8002ba2:	601a      	str	r2, [r3, #0]
 8002ba4:	687b      	ldr	r3, [r7, #4]
 8002ba6:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8002ba8:	687b      	ldr	r3, [r7, #4]
 8002baa:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8002bac:	2101      	movs	r1, #1
 8002bae:	fa01 f202 	lsl.w	r2, r1, r2
 8002bb2:	605a      	str	r2, [r3, #4]
 8002bb4:	687b      	ldr	r3, [r7, #4]
 8002bb6:	2201      	movs	r2, #1
 8002bb8:	f883 2021 	strb.w	r2, [r3, #33]	@ 0x21
 8002bbc:	687b      	ldr	r3, [r7, #4]
 8002bbe:	2200      	movs	r2, #0
 8002bc0:	f883 2020 	strb.w	r2, [r3, #32]
 8002bc4:	2300      	movs	r3, #0
 8002bc6:	4618      	mov	r0, r3
 8002bc8:	370c      	adds	r7, #12
 8002bca:	46bd      	mov	sp, r7
 8002bcc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002bd0:	4770      	bx	lr

08002bd2 <HAL_DMA_Abort_IT>:
 8002bd2:	b580      	push	{r7, lr}
 8002bd4:	b084      	sub	sp, #16
 8002bd6:	af00      	add	r7, sp, #0
 8002bd8:	6078      	str	r0, [r7, #4]
 8002bda:	2300      	movs	r3, #0
 8002bdc:	73fb      	strb	r3, [r7, #15]
 8002bde:	687b      	ldr	r3, [r7, #4]
 8002be0:	f893 3021 	ldrb.w	r3, [r3, #33]	@ 0x21
 8002be4:	2b02      	cmp	r3, #2
 8002be6:	d005      	beq.n	8002bf4 <HAL_DMA_Abort_IT+0x22>
 8002be8:	687b      	ldr	r3, [r7, #4]
 8002bea:	2204      	movs	r2, #4
 8002bec:	639a      	str	r2, [r3, #56]	@ 0x38
 8002bee:	2301      	movs	r3, #1
 8002bf0:	73fb      	strb	r3, [r7, #15]
 8002bf2:	e027      	b.n	8002c44 <HAL_DMA_Abort_IT+0x72>
 8002bf4:	687b      	ldr	r3, [r7, #4]
 8002bf6:	681b      	ldr	r3, [r3, #0]
 8002bf8:	681a      	ldr	r2, [r3, #0]
 8002bfa:	687b      	ldr	r3, [r7, #4]
 8002bfc:	681b      	ldr	r3, [r3, #0]
 8002bfe:	f022 020e 	bic.w	r2, r2, #14
 8002c02:	601a      	str	r2, [r3, #0]
 8002c04:	687b      	ldr	r3, [r7, #4]
 8002c06:	681b      	ldr	r3, [r3, #0]
 8002c08:	681a      	ldr	r2, [r3, #0]
 8002c0a:	687b      	ldr	r3, [r7, #4]
 8002c0c:	681b      	ldr	r3, [r3, #0]
 8002c0e:	f022 0201 	bic.w	r2, r2, #1
 8002c12:	601a      	str	r2, [r3, #0]
 8002c14:	687b      	ldr	r3, [r7, #4]
 8002c16:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8002c18:	687b      	ldr	r3, [r7, #4]
 8002c1a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8002c1c:	2101      	movs	r1, #1
 8002c1e:	fa01 f202 	lsl.w	r2, r1, r2
 8002c22:	605a      	str	r2, [r3, #4]
 8002c24:	687b      	ldr	r3, [r7, #4]
 8002c26:	2201      	movs	r2, #1
 8002c28:	f883 2021 	strb.w	r2, [r3, #33]	@ 0x21
 8002c2c:	687b      	ldr	r3, [r7, #4]
 8002c2e:	2200      	movs	r2, #0
 8002c30:	f883 2020 	strb.w	r2, [r3, #32]
 8002c34:	687b      	ldr	r3, [r7, #4]
 8002c36:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8002c38:	2b00      	cmp	r3, #0
 8002c3a:	d003      	beq.n	8002c44 <HAL_DMA_Abort_IT+0x72>
 8002c3c:	687b      	ldr	r3, [r7, #4]
 8002c3e:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8002c40:	6878      	ldr	r0, [r7, #4]
 8002c42:	4798      	blx	r3
 8002c44:	7bfb      	ldrb	r3, [r7, #15]
 8002c46:	4618      	mov	r0, r3
 8002c48:	3710      	adds	r7, #16
 8002c4a:	46bd      	mov	sp, r7
 8002c4c:	bd80      	pop	{r7, pc}
	...

08002c50 <HAL_GPIO_Init>:
 8002c50:	b480      	push	{r7}
 8002c52:	b087      	sub	sp, #28
 8002c54:	af00      	add	r7, sp, #0
 8002c56:	6078      	str	r0, [r7, #4]
 8002c58:	6039      	str	r1, [r7, #0]
 8002c5a:	2300      	movs	r3, #0
 8002c5c:	617b      	str	r3, [r7, #20]
 8002c5e:	e14e      	b.n	8002efe <HAL_GPIO_Init+0x2ae>
 8002c60:	683b      	ldr	r3, [r7, #0]
 8002c62:	681a      	ldr	r2, [r3, #0]
 8002c64:	2101      	movs	r1, #1
 8002c66:	697b      	ldr	r3, [r7, #20]
 8002c68:	fa01 f303 	lsl.w	r3, r1, r3
 8002c6c:	4013      	ands	r3, r2
 8002c6e:	60fb      	str	r3, [r7, #12]
 8002c70:	68fb      	ldr	r3, [r7, #12]
 8002c72:	2b00      	cmp	r3, #0
 8002c74:	f000 8140 	beq.w	8002ef8 <HAL_GPIO_Init+0x2a8>
 8002c78:	683b      	ldr	r3, [r7, #0]
 8002c7a:	685b      	ldr	r3, [r3, #4]
 8002c7c:	f003 0303 	and.w	r3, r3, #3
 8002c80:	2b01      	cmp	r3, #1
 8002c82:	d005      	beq.n	8002c90 <HAL_GPIO_Init+0x40>
 8002c84:	683b      	ldr	r3, [r7, #0]
 8002c86:	685b      	ldr	r3, [r3, #4]
 8002c88:	f003 0303 	and.w	r3, r3, #3
 8002c8c:	2b02      	cmp	r3, #2
 8002c8e:	d130      	bne.n	8002cf2 <HAL_GPIO_Init+0xa2>
 8002c90:	687b      	ldr	r3, [r7, #4]
 8002c92:	689b      	ldr	r3, [r3, #8]
 8002c94:	613b      	str	r3, [r7, #16]
 8002c96:	697b      	ldr	r3, [r7, #20]
 8002c98:	005b      	lsls	r3, r3, #1
 8002c9a:	2203      	movs	r2, #3
 8002c9c:	fa02 f303 	lsl.w	r3, r2, r3
 8002ca0:	43db      	mvns	r3, r3
 8002ca2:	693a      	ldr	r2, [r7, #16]
 8002ca4:	4013      	ands	r3, r2
 8002ca6:	613b      	str	r3, [r7, #16]
 8002ca8:	683b      	ldr	r3, [r7, #0]
 8002caa:	68da      	ldr	r2, [r3, #12]
 8002cac:	697b      	ldr	r3, [r7, #20]
 8002cae:	005b      	lsls	r3, r3, #1
 8002cb0:	fa02 f303 	lsl.w	r3, r2, r3
 8002cb4:	693a      	ldr	r2, [r7, #16]
 8002cb6:	4313      	orrs	r3, r2
 8002cb8:	613b      	str	r3, [r7, #16]
 8002cba:	687b      	ldr	r3, [r7, #4]
 8002cbc:	693a      	ldr	r2, [r7, #16]
 8002cbe:	609a      	str	r2, [r3, #8]
 8002cc0:	687b      	ldr	r3, [r7, #4]
 8002cc2:	685b      	ldr	r3, [r3, #4]
 8002cc4:	613b      	str	r3, [r7, #16]
 8002cc6:	2201      	movs	r2, #1
 8002cc8:	697b      	ldr	r3, [r7, #20]
 8002cca:	fa02 f303 	lsl.w	r3, r2, r3
 8002cce:	43db      	mvns	r3, r3
 8002cd0:	693a      	ldr	r2, [r7, #16]
 8002cd2:	4013      	ands	r3, r2
 8002cd4:	613b      	str	r3, [r7, #16]
 8002cd6:	683b      	ldr	r3, [r7, #0]
 8002cd8:	685b      	ldr	r3, [r3, #4]
 8002cda:	091b      	lsrs	r3, r3, #4
 8002cdc:	f003 0201 	and.w	r2, r3, #1
 8002ce0:	697b      	ldr	r3, [r7, #20]
 8002ce2:	fa02 f303 	lsl.w	r3, r2, r3
 8002ce6:	693a      	ldr	r2, [r7, #16]
 8002ce8:	4313      	orrs	r3, r2
 8002cea:	613b      	str	r3, [r7, #16]
 8002cec:	687b      	ldr	r3, [r7, #4]
 8002cee:	693a      	ldr	r2, [r7, #16]
 8002cf0:	605a      	str	r2, [r3, #4]
 8002cf2:	683b      	ldr	r3, [r7, #0]
 8002cf4:	685b      	ldr	r3, [r3, #4]
 8002cf6:	f003 0303 	and.w	r3, r3, #3
 8002cfa:	2b03      	cmp	r3, #3
 8002cfc:	d017      	beq.n	8002d2e <HAL_GPIO_Init+0xde>
 8002cfe:	687b      	ldr	r3, [r7, #4]
 8002d00:	68db      	ldr	r3, [r3, #12]
 8002d02:	613b      	str	r3, [r7, #16]
 8002d04:	697b      	ldr	r3, [r7, #20]
 8002d06:	005b      	lsls	r3, r3, #1
 8002d08:	2203      	movs	r2, #3
 8002d0a:	fa02 f303 	lsl.w	r3, r2, r3
 8002d0e:	43db      	mvns	r3, r3
 8002d10:	693a      	ldr	r2, [r7, #16]
 8002d12:	4013      	ands	r3, r2
 8002d14:	613b      	str	r3, [r7, #16]
 8002d16:	683b      	ldr	r3, [r7, #0]
 8002d18:	689a      	ldr	r2, [r3, #8]
 8002d1a:	697b      	ldr	r3, [r7, #20]
 8002d1c:	005b      	lsls	r3, r3, #1
 8002d1e:	fa02 f303 	lsl.w	r3, r2, r3
 8002d22:	693a      	ldr	r2, [r7, #16]
 8002d24:	4313      	orrs	r3, r2
 8002d26:	613b      	str	r3, [r7, #16]
 8002d28:	687b      	ldr	r3, [r7, #4]
 8002d2a:	693a      	ldr	r2, [r7, #16]
 8002d2c:	60da      	str	r2, [r3, #12]
 8002d2e:	683b      	ldr	r3, [r7, #0]
 8002d30:	685b      	ldr	r3, [r3, #4]
 8002d32:	f003 0303 	and.w	r3, r3, #3
 8002d36:	2b02      	cmp	r3, #2
 8002d38:	d123      	bne.n	8002d82 <HAL_GPIO_Init+0x132>
 8002d3a:	697b      	ldr	r3, [r7, #20]
 8002d3c:	08da      	lsrs	r2, r3, #3
 8002d3e:	687b      	ldr	r3, [r7, #4]
 8002d40:	3208      	adds	r2, #8
 8002d42:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8002d46:	613b      	str	r3, [r7, #16]
 8002d48:	697b      	ldr	r3, [r7, #20]
 8002d4a:	f003 0307 	and.w	r3, r3, #7
 8002d4e:	009b      	lsls	r3, r3, #2
 8002d50:	220f      	movs	r2, #15
 8002d52:	fa02 f303 	lsl.w	r3, r2, r3
 8002d56:	43db      	mvns	r3, r3
 8002d58:	693a      	ldr	r2, [r7, #16]
 8002d5a:	4013      	ands	r3, r2
 8002d5c:	613b      	str	r3, [r7, #16]
 8002d5e:	683b      	ldr	r3, [r7, #0]
 8002d60:	691a      	ldr	r2, [r3, #16]
 8002d62:	697b      	ldr	r3, [r7, #20]
 8002d64:	f003 0307 	and.w	r3, r3, #7
 8002d68:	009b      	lsls	r3, r3, #2
 8002d6a:	fa02 f303 	lsl.w	r3, r2, r3
 8002d6e:	693a      	ldr	r2, [r7, #16]
 8002d70:	4313      	orrs	r3, r2
 8002d72:	613b      	str	r3, [r7, #16]
 8002d74:	697b      	ldr	r3, [r7, #20]
 8002d76:	08da      	lsrs	r2, r3, #3
 8002d78:	687b      	ldr	r3, [r7, #4]
 8002d7a:	3208      	adds	r2, #8
 8002d7c:	6939      	ldr	r1, [r7, #16]
 8002d7e:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8002d82:	687b      	ldr	r3, [r7, #4]
 8002d84:	681b      	ldr	r3, [r3, #0]
 8002d86:	613b      	str	r3, [r7, #16]
 8002d88:	697b      	ldr	r3, [r7, #20]
 8002d8a:	005b      	lsls	r3, r3, #1
 8002d8c:	2203      	movs	r2, #3
 8002d8e:	fa02 f303 	lsl.w	r3, r2, r3
 8002d92:	43db      	mvns	r3, r3
 8002d94:	693a      	ldr	r2, [r7, #16]
 8002d96:	4013      	ands	r3, r2
 8002d98:	613b      	str	r3, [r7, #16]
 8002d9a:	683b      	ldr	r3, [r7, #0]
 8002d9c:	685b      	ldr	r3, [r3, #4]
 8002d9e:	f003 0203 	and.w	r2, r3, #3
 8002da2:	697b      	ldr	r3, [r7, #20]
 8002da4:	005b      	lsls	r3, r3, #1
 8002da6:	fa02 f303 	lsl.w	r3, r2, r3
 8002daa:	693a      	ldr	r2, [r7, #16]
 8002dac:	4313      	orrs	r3, r2
 8002dae:	613b      	str	r3, [r7, #16]
 8002db0:	687b      	ldr	r3, [r7, #4]
 8002db2:	693a      	ldr	r2, [r7, #16]
 8002db4:	601a      	str	r2, [r3, #0]
 8002db6:	683b      	ldr	r3, [r7, #0]
 8002db8:	685b      	ldr	r3, [r3, #4]
 8002dba:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 8002dbe:	2b00      	cmp	r3, #0
 8002dc0:	f000 809a 	beq.w	8002ef8 <HAL_GPIO_Init+0x2a8>
 8002dc4:	4b55      	ldr	r3, [pc, #340]	@ (8002f1c <HAL_GPIO_Init+0x2cc>)
 8002dc6:	699b      	ldr	r3, [r3, #24]
 8002dc8:	4a54      	ldr	r2, [pc, #336]	@ (8002f1c <HAL_GPIO_Init+0x2cc>)
 8002dca:	f043 0301 	orr.w	r3, r3, #1
 8002dce:	6193      	str	r3, [r2, #24]
 8002dd0:	4b52      	ldr	r3, [pc, #328]	@ (8002f1c <HAL_GPIO_Init+0x2cc>)
 8002dd2:	699b      	ldr	r3, [r3, #24]
 8002dd4:	f003 0301 	and.w	r3, r3, #1
 8002dd8:	60bb      	str	r3, [r7, #8]
 8002dda:	68bb      	ldr	r3, [r7, #8]
 8002ddc:	4a50      	ldr	r2, [pc, #320]	@ (8002f20 <HAL_GPIO_Init+0x2d0>)
 8002dde:	697b      	ldr	r3, [r7, #20]
 8002de0:	089b      	lsrs	r3, r3, #2
 8002de2:	3302      	adds	r3, #2
 8002de4:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8002de8:	613b      	str	r3, [r7, #16]
 8002dea:	697b      	ldr	r3, [r7, #20]
 8002dec:	f003 0303 	and.w	r3, r3, #3
 8002df0:	009b      	lsls	r3, r3, #2
 8002df2:	220f      	movs	r2, #15
 8002df4:	fa02 f303 	lsl.w	r3, r2, r3
 8002df8:	43db      	mvns	r3, r3
 8002dfa:	693a      	ldr	r2, [r7, #16]
 8002dfc:	4013      	ands	r3, r2
 8002dfe:	613b      	str	r3, [r7, #16]
 8002e00:	687b      	ldr	r3, [r7, #4]
 8002e02:	f1b3 4f90 	cmp.w	r3, #1207959552	@ 0x48000000
 8002e06:	d013      	beq.n	8002e30 <HAL_GPIO_Init+0x1e0>
 8002e08:	687b      	ldr	r3, [r7, #4]
 8002e0a:	4a46      	ldr	r2, [pc, #280]	@ (8002f24 <HAL_GPIO_Init+0x2d4>)
 8002e0c:	4293      	cmp	r3, r2
 8002e0e:	d00d      	beq.n	8002e2c <HAL_GPIO_Init+0x1dc>
 8002e10:	687b      	ldr	r3, [r7, #4]
 8002e12:	4a45      	ldr	r2, [pc, #276]	@ (8002f28 <HAL_GPIO_Init+0x2d8>)
 8002e14:	4293      	cmp	r3, r2
 8002e16:	d007      	beq.n	8002e28 <HAL_GPIO_Init+0x1d8>
 8002e18:	687b      	ldr	r3, [r7, #4]
 8002e1a:	4a44      	ldr	r2, [pc, #272]	@ (8002f2c <HAL_GPIO_Init+0x2dc>)
 8002e1c:	4293      	cmp	r3, r2
 8002e1e:	d101      	bne.n	8002e24 <HAL_GPIO_Init+0x1d4>
 8002e20:	2303      	movs	r3, #3
 8002e22:	e006      	b.n	8002e32 <HAL_GPIO_Init+0x1e2>
 8002e24:	2305      	movs	r3, #5
 8002e26:	e004      	b.n	8002e32 <HAL_GPIO_Init+0x1e2>
 8002e28:	2302      	movs	r3, #2
 8002e2a:	e002      	b.n	8002e32 <HAL_GPIO_Init+0x1e2>
 8002e2c:	2301      	movs	r3, #1
 8002e2e:	e000      	b.n	8002e32 <HAL_GPIO_Init+0x1e2>
 8002e30:	2300      	movs	r3, #0
 8002e32:	697a      	ldr	r2, [r7, #20]
 8002e34:	f002 0203 	and.w	r2, r2, #3
 8002e38:	0092      	lsls	r2, r2, #2
 8002e3a:	4093      	lsls	r3, r2
 8002e3c:	693a      	ldr	r2, [r7, #16]
 8002e3e:	4313      	orrs	r3, r2
 8002e40:	613b      	str	r3, [r7, #16]
 8002e42:	4937      	ldr	r1, [pc, #220]	@ (8002f20 <HAL_GPIO_Init+0x2d0>)
 8002e44:	697b      	ldr	r3, [r7, #20]
 8002e46:	089b      	lsrs	r3, r3, #2
 8002e48:	3302      	adds	r3, #2
 8002e4a:	693a      	ldr	r2, [r7, #16]
 8002e4c:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8002e50:	4b37      	ldr	r3, [pc, #220]	@ (8002f30 <HAL_GPIO_Init+0x2e0>)
 8002e52:	689b      	ldr	r3, [r3, #8]
 8002e54:	613b      	str	r3, [r7, #16]
 8002e56:	68fb      	ldr	r3, [r7, #12]
 8002e58:	43db      	mvns	r3, r3
 8002e5a:	693a      	ldr	r2, [r7, #16]
 8002e5c:	4013      	ands	r3, r2
 8002e5e:	613b      	str	r3, [r7, #16]
 8002e60:	683b      	ldr	r3, [r7, #0]
 8002e62:	685b      	ldr	r3, [r3, #4]
 8002e64:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 8002e68:	2b00      	cmp	r3, #0
 8002e6a:	d003      	beq.n	8002e74 <HAL_GPIO_Init+0x224>
 8002e6c:	693a      	ldr	r2, [r7, #16]
 8002e6e:	68fb      	ldr	r3, [r7, #12]
 8002e70:	4313      	orrs	r3, r2
 8002e72:	613b      	str	r3, [r7, #16]
 8002e74:	4a2e      	ldr	r2, [pc, #184]	@ (8002f30 <HAL_GPIO_Init+0x2e0>)
 8002e76:	693b      	ldr	r3, [r7, #16]
 8002e78:	6093      	str	r3, [r2, #8]
 8002e7a:	4b2d      	ldr	r3, [pc, #180]	@ (8002f30 <HAL_GPIO_Init+0x2e0>)
 8002e7c:	68db      	ldr	r3, [r3, #12]
 8002e7e:	613b      	str	r3, [r7, #16]
 8002e80:	68fb      	ldr	r3, [r7, #12]
 8002e82:	43db      	mvns	r3, r3
 8002e84:	693a      	ldr	r2, [r7, #16]
 8002e86:	4013      	ands	r3, r2
 8002e88:	613b      	str	r3, [r7, #16]
 8002e8a:	683b      	ldr	r3, [r7, #0]
 8002e8c:	685b      	ldr	r3, [r3, #4]
 8002e8e:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8002e92:	2b00      	cmp	r3, #0
 8002e94:	d003      	beq.n	8002e9e <HAL_GPIO_Init+0x24e>
 8002e96:	693a      	ldr	r2, [r7, #16]
 8002e98:	68fb      	ldr	r3, [r7, #12]
 8002e9a:	4313      	orrs	r3, r2
 8002e9c:	613b      	str	r3, [r7, #16]
 8002e9e:	4a24      	ldr	r2, [pc, #144]	@ (8002f30 <HAL_GPIO_Init+0x2e0>)
 8002ea0:	693b      	ldr	r3, [r7, #16]
 8002ea2:	60d3      	str	r3, [r2, #12]
 8002ea4:	4b22      	ldr	r3, [pc, #136]	@ (8002f30 <HAL_GPIO_Init+0x2e0>)
 8002ea6:	685b      	ldr	r3, [r3, #4]
 8002ea8:	613b      	str	r3, [r7, #16]
 8002eaa:	68fb      	ldr	r3, [r7, #12]
 8002eac:	43db      	mvns	r3, r3
 8002eae:	693a      	ldr	r2, [r7, #16]
 8002eb0:	4013      	ands	r3, r2
 8002eb2:	613b      	str	r3, [r7, #16]
 8002eb4:	683b      	ldr	r3, [r7, #0]
 8002eb6:	685b      	ldr	r3, [r3, #4]
 8002eb8:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002ebc:	2b00      	cmp	r3, #0
 8002ebe:	d003      	beq.n	8002ec8 <HAL_GPIO_Init+0x278>
 8002ec0:	693a      	ldr	r2, [r7, #16]
 8002ec2:	68fb      	ldr	r3, [r7, #12]
 8002ec4:	4313      	orrs	r3, r2
 8002ec6:	613b      	str	r3, [r7, #16]
 8002ec8:	4a19      	ldr	r2, [pc, #100]	@ (8002f30 <HAL_GPIO_Init+0x2e0>)
 8002eca:	693b      	ldr	r3, [r7, #16]
 8002ecc:	6053      	str	r3, [r2, #4]
 8002ece:	4b18      	ldr	r3, [pc, #96]	@ (8002f30 <HAL_GPIO_Init+0x2e0>)
 8002ed0:	681b      	ldr	r3, [r3, #0]
 8002ed2:	613b      	str	r3, [r7, #16]
 8002ed4:	68fb      	ldr	r3, [r7, #12]
 8002ed6:	43db      	mvns	r3, r3
 8002ed8:	693a      	ldr	r2, [r7, #16]
 8002eda:	4013      	ands	r3, r2
 8002edc:	613b      	str	r3, [r7, #16]
 8002ede:	683b      	ldr	r3, [r7, #0]
 8002ee0:	685b      	ldr	r3, [r3, #4]
 8002ee2:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8002ee6:	2b00      	cmp	r3, #0
 8002ee8:	d003      	beq.n	8002ef2 <HAL_GPIO_Init+0x2a2>
 8002eea:	693a      	ldr	r2, [r7, #16]
 8002eec:	68fb      	ldr	r3, [r7, #12]
 8002eee:	4313      	orrs	r3, r2
 8002ef0:	613b      	str	r3, [r7, #16]
 8002ef2:	4a0f      	ldr	r2, [pc, #60]	@ (8002f30 <HAL_GPIO_Init+0x2e0>)
 8002ef4:	693b      	ldr	r3, [r7, #16]
 8002ef6:	6013      	str	r3, [r2, #0]
 8002ef8:	697b      	ldr	r3, [r7, #20]
 8002efa:	3301      	adds	r3, #1
 8002efc:	617b      	str	r3, [r7, #20]
 8002efe:	683b      	ldr	r3, [r7, #0]
 8002f00:	681a      	ldr	r2, [r3, #0]
 8002f02:	697b      	ldr	r3, [r7, #20]
 8002f04:	fa22 f303 	lsr.w	r3, r2, r3
 8002f08:	2b00      	cmp	r3, #0
 8002f0a:	f47f aea9 	bne.w	8002c60 <HAL_GPIO_Init+0x10>
 8002f0e:	bf00      	nop
 8002f10:	bf00      	nop
 8002f12:	371c      	adds	r7, #28
 8002f14:	46bd      	mov	sp, r7
 8002f16:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002f1a:	4770      	bx	lr
 8002f1c:	40021000 	.word	0x40021000
 8002f20:	40010000 	.word	0x40010000
 8002f24:	48000400 	.word	0x48000400
 8002f28:	48000800 	.word	0x48000800
 8002f2c:	48000c00 	.word	0x48000c00
 8002f30:	40010400 	.word	0x40010400

08002f34 <HAL_GPIO_WritePin>:
 8002f34:	b480      	push	{r7}
 8002f36:	b083      	sub	sp, #12
 8002f38:	af00      	add	r7, sp, #0
 8002f3a:	6078      	str	r0, [r7, #4]
 8002f3c:	460b      	mov	r3, r1
 8002f3e:	807b      	strh	r3, [r7, #2]
 8002f40:	4613      	mov	r3, r2
 8002f42:	707b      	strb	r3, [r7, #1]
 8002f44:	787b      	ldrb	r3, [r7, #1]
 8002f46:	2b00      	cmp	r3, #0
 8002f48:	d003      	beq.n	8002f52 <HAL_GPIO_WritePin+0x1e>
 8002f4a:	887a      	ldrh	r2, [r7, #2]
 8002f4c:	687b      	ldr	r3, [r7, #4]
 8002f4e:	619a      	str	r2, [r3, #24]
 8002f50:	e002      	b.n	8002f58 <HAL_GPIO_WritePin+0x24>
 8002f52:	887a      	ldrh	r2, [r7, #2]
 8002f54:	687b      	ldr	r3, [r7, #4]
 8002f56:	629a      	str	r2, [r3, #40]	@ 0x28
 8002f58:	bf00      	nop
 8002f5a:	370c      	adds	r7, #12
 8002f5c:	46bd      	mov	sp, r7
 8002f5e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002f62:	4770      	bx	lr

08002f64 <HAL_I2C_Init>:
 8002f64:	b580      	push	{r7, lr}
 8002f66:	b082      	sub	sp, #8
 8002f68:	af00      	add	r7, sp, #0
 8002f6a:	6078      	str	r0, [r7, #4]
 8002f6c:	687b      	ldr	r3, [r7, #4]
 8002f6e:	2b00      	cmp	r3, #0
 8002f70:	d101      	bne.n	8002f76 <HAL_I2C_Init+0x12>
 8002f72:	2301      	movs	r3, #1
 8002f74:	e08d      	b.n	8003092 <HAL_I2C_Init+0x12e>
 8002f76:	687b      	ldr	r3, [r7, #4]
 8002f78:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8002f7c:	b2db      	uxtb	r3, r3
 8002f7e:	2b00      	cmp	r3, #0
 8002f80:	d106      	bne.n	8002f90 <HAL_I2C_Init+0x2c>
 8002f82:	687b      	ldr	r3, [r7, #4]
 8002f84:	2200      	movs	r2, #0
 8002f86:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8002f8a:	6878      	ldr	r0, [r7, #4]
 8002f8c:	f7ff f990 	bl	80022b0 <HAL_I2C_MspInit>
 8002f90:	687b      	ldr	r3, [r7, #4]
 8002f92:	2224      	movs	r2, #36	@ 0x24
 8002f94:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8002f98:	687b      	ldr	r3, [r7, #4]
 8002f9a:	681b      	ldr	r3, [r3, #0]
 8002f9c:	681a      	ldr	r2, [r3, #0]
 8002f9e:	687b      	ldr	r3, [r7, #4]
 8002fa0:	681b      	ldr	r3, [r3, #0]
 8002fa2:	f022 0201 	bic.w	r2, r2, #1
 8002fa6:	601a      	str	r2, [r3, #0]
 8002fa8:	687b      	ldr	r3, [r7, #4]
 8002faa:	685a      	ldr	r2, [r3, #4]
 8002fac:	687b      	ldr	r3, [r7, #4]
 8002fae:	681b      	ldr	r3, [r3, #0]
 8002fb0:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
 8002fb4:	611a      	str	r2, [r3, #16]
 8002fb6:	687b      	ldr	r3, [r7, #4]
 8002fb8:	681b      	ldr	r3, [r3, #0]
 8002fba:	689a      	ldr	r2, [r3, #8]
 8002fbc:	687b      	ldr	r3, [r7, #4]
 8002fbe:	681b      	ldr	r3, [r3, #0]
 8002fc0:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 8002fc4:	609a      	str	r2, [r3, #8]
 8002fc6:	687b      	ldr	r3, [r7, #4]
 8002fc8:	68db      	ldr	r3, [r3, #12]
 8002fca:	2b01      	cmp	r3, #1
 8002fcc:	d107      	bne.n	8002fde <HAL_I2C_Init+0x7a>
 8002fce:	687b      	ldr	r3, [r7, #4]
 8002fd0:	689a      	ldr	r2, [r3, #8]
 8002fd2:	687b      	ldr	r3, [r7, #4]
 8002fd4:	681b      	ldr	r3, [r3, #0]
 8002fd6:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8002fda:	609a      	str	r2, [r3, #8]
 8002fdc:	e006      	b.n	8002fec <HAL_I2C_Init+0x88>
 8002fde:	687b      	ldr	r3, [r7, #4]
 8002fe0:	689a      	ldr	r2, [r3, #8]
 8002fe2:	687b      	ldr	r3, [r7, #4]
 8002fe4:	681b      	ldr	r3, [r3, #0]
 8002fe6:	f442 4204 	orr.w	r2, r2, #33792	@ 0x8400
 8002fea:	609a      	str	r2, [r3, #8]
 8002fec:	687b      	ldr	r3, [r7, #4]
 8002fee:	68db      	ldr	r3, [r3, #12]
 8002ff0:	2b02      	cmp	r3, #2
 8002ff2:	d108      	bne.n	8003006 <HAL_I2C_Init+0xa2>
 8002ff4:	687b      	ldr	r3, [r7, #4]
 8002ff6:	681b      	ldr	r3, [r3, #0]
 8002ff8:	685a      	ldr	r2, [r3, #4]
 8002ffa:	687b      	ldr	r3, [r7, #4]
 8002ffc:	681b      	ldr	r3, [r3, #0]
 8002ffe:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8003002:	605a      	str	r2, [r3, #4]
 8003004:	e007      	b.n	8003016 <HAL_I2C_Init+0xb2>
 8003006:	687b      	ldr	r3, [r7, #4]
 8003008:	681b      	ldr	r3, [r3, #0]
 800300a:	685a      	ldr	r2, [r3, #4]
 800300c:	687b      	ldr	r3, [r7, #4]
 800300e:	681b      	ldr	r3, [r3, #0]
 8003010:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8003014:	605a      	str	r2, [r3, #4]
 8003016:	687b      	ldr	r3, [r7, #4]
 8003018:	681b      	ldr	r3, [r3, #0]
 800301a:	685b      	ldr	r3, [r3, #4]
 800301c:	687a      	ldr	r2, [r7, #4]
 800301e:	6812      	ldr	r2, [r2, #0]
 8003020:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 8003024:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8003028:	6053      	str	r3, [r2, #4]
 800302a:	687b      	ldr	r3, [r7, #4]
 800302c:	681b      	ldr	r3, [r3, #0]
 800302e:	68da      	ldr	r2, [r3, #12]
 8003030:	687b      	ldr	r3, [r7, #4]
 8003032:	681b      	ldr	r3, [r3, #0]
 8003034:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 8003038:	60da      	str	r2, [r3, #12]
 800303a:	687b      	ldr	r3, [r7, #4]
 800303c:	691a      	ldr	r2, [r3, #16]
 800303e:	687b      	ldr	r3, [r7, #4]
 8003040:	695b      	ldr	r3, [r3, #20]
 8003042:	ea42 0103 	orr.w	r1, r2, r3
 8003046:	687b      	ldr	r3, [r7, #4]
 8003048:	699b      	ldr	r3, [r3, #24]
 800304a:	021a      	lsls	r2, r3, #8
 800304c:	687b      	ldr	r3, [r7, #4]
 800304e:	681b      	ldr	r3, [r3, #0]
 8003050:	430a      	orrs	r2, r1
 8003052:	60da      	str	r2, [r3, #12]
 8003054:	687b      	ldr	r3, [r7, #4]
 8003056:	69d9      	ldr	r1, [r3, #28]
 8003058:	687b      	ldr	r3, [r7, #4]
 800305a:	6a1a      	ldr	r2, [r3, #32]
 800305c:	687b      	ldr	r3, [r7, #4]
 800305e:	681b      	ldr	r3, [r3, #0]
 8003060:	430a      	orrs	r2, r1
 8003062:	601a      	str	r2, [r3, #0]
 8003064:	687b      	ldr	r3, [r7, #4]
 8003066:	681b      	ldr	r3, [r3, #0]
 8003068:	681a      	ldr	r2, [r3, #0]
 800306a:	687b      	ldr	r3, [r7, #4]
 800306c:	681b      	ldr	r3, [r3, #0]
 800306e:	f042 0201 	orr.w	r2, r2, #1
 8003072:	601a      	str	r2, [r3, #0]
 8003074:	687b      	ldr	r3, [r7, #4]
 8003076:	2200      	movs	r2, #0
 8003078:	645a      	str	r2, [r3, #68]	@ 0x44
 800307a:	687b      	ldr	r3, [r7, #4]
 800307c:	2220      	movs	r2, #32
 800307e:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8003082:	687b      	ldr	r3, [r7, #4]
 8003084:	2200      	movs	r2, #0
 8003086:	631a      	str	r2, [r3, #48]	@ 0x30
 8003088:	687b      	ldr	r3, [r7, #4]
 800308a:	2200      	movs	r2, #0
 800308c:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8003090:	2300      	movs	r3, #0
 8003092:	4618      	mov	r0, r3
 8003094:	3708      	adds	r7, #8
 8003096:	46bd      	mov	sp, r7
 8003098:	bd80      	pop	{r7, pc}
	...

0800309c <HAL_I2C_Mem_Write>:
 800309c:	b580      	push	{r7, lr}
 800309e:	b088      	sub	sp, #32
 80030a0:	af02      	add	r7, sp, #8
 80030a2:	60f8      	str	r0, [r7, #12]
 80030a4:	4608      	mov	r0, r1
 80030a6:	4611      	mov	r1, r2
 80030a8:	461a      	mov	r2, r3
 80030aa:	4603      	mov	r3, r0
 80030ac:	817b      	strh	r3, [r7, #10]
 80030ae:	460b      	mov	r3, r1
 80030b0:	813b      	strh	r3, [r7, #8]
 80030b2:	4613      	mov	r3, r2
 80030b4:	80fb      	strh	r3, [r7, #6]
 80030b6:	68fb      	ldr	r3, [r7, #12]
 80030b8:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 80030bc:	b2db      	uxtb	r3, r3
 80030be:	2b20      	cmp	r3, #32
 80030c0:	f040 80f9 	bne.w	80032b6 <HAL_I2C_Mem_Write+0x21a>
 80030c4:	6a3b      	ldr	r3, [r7, #32]
 80030c6:	2b00      	cmp	r3, #0
 80030c8:	d002      	beq.n	80030d0 <HAL_I2C_Mem_Write+0x34>
 80030ca:	8cbb      	ldrh	r3, [r7, #36]	@ 0x24
 80030cc:	2b00      	cmp	r3, #0
 80030ce:	d105      	bne.n	80030dc <HAL_I2C_Mem_Write+0x40>
 80030d0:	68fb      	ldr	r3, [r7, #12]
 80030d2:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80030d6:	645a      	str	r2, [r3, #68]	@ 0x44
 80030d8:	2301      	movs	r3, #1
 80030da:	e0ed      	b.n	80032b8 <HAL_I2C_Mem_Write+0x21c>
 80030dc:	68fb      	ldr	r3, [r7, #12]
 80030de:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 80030e2:	2b01      	cmp	r3, #1
 80030e4:	d101      	bne.n	80030ea <HAL_I2C_Mem_Write+0x4e>
 80030e6:	2302      	movs	r3, #2
 80030e8:	e0e6      	b.n	80032b8 <HAL_I2C_Mem_Write+0x21c>
 80030ea:	68fb      	ldr	r3, [r7, #12]
 80030ec:	2201      	movs	r2, #1
 80030ee:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 80030f2:	f7ff fbef 	bl	80028d4 <HAL_GetTick>
 80030f6:	6178      	str	r0, [r7, #20]
 80030f8:	697b      	ldr	r3, [r7, #20]
 80030fa:	9300      	str	r3, [sp, #0]
 80030fc:	2319      	movs	r3, #25
 80030fe:	2201      	movs	r2, #1
 8003100:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 8003104:	68f8      	ldr	r0, [r7, #12]
 8003106:	f000 fac3 	bl	8003690 <I2C_WaitOnFlagUntilTimeout>
 800310a:	4603      	mov	r3, r0
 800310c:	2b00      	cmp	r3, #0
 800310e:	d001      	beq.n	8003114 <HAL_I2C_Mem_Write+0x78>
 8003110:	2301      	movs	r3, #1
 8003112:	e0d1      	b.n	80032b8 <HAL_I2C_Mem_Write+0x21c>
 8003114:	68fb      	ldr	r3, [r7, #12]
 8003116:	2221      	movs	r2, #33	@ 0x21
 8003118:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800311c:	68fb      	ldr	r3, [r7, #12]
 800311e:	2240      	movs	r2, #64	@ 0x40
 8003120:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8003124:	68fb      	ldr	r3, [r7, #12]
 8003126:	2200      	movs	r2, #0
 8003128:	645a      	str	r2, [r3, #68]	@ 0x44
 800312a:	68fb      	ldr	r3, [r7, #12]
 800312c:	6a3a      	ldr	r2, [r7, #32]
 800312e:	625a      	str	r2, [r3, #36]	@ 0x24
 8003130:	68fb      	ldr	r3, [r7, #12]
 8003132:	8cba      	ldrh	r2, [r7, #36]	@ 0x24
 8003134:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8003136:	68fb      	ldr	r3, [r7, #12]
 8003138:	2200      	movs	r2, #0
 800313a:	635a      	str	r2, [r3, #52]	@ 0x34
 800313c:	88f8      	ldrh	r0, [r7, #6]
 800313e:	893a      	ldrh	r2, [r7, #8]
 8003140:	8979      	ldrh	r1, [r7, #10]
 8003142:	697b      	ldr	r3, [r7, #20]
 8003144:	9301      	str	r3, [sp, #4]
 8003146:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8003148:	9300      	str	r3, [sp, #0]
 800314a:	4603      	mov	r3, r0
 800314c:	68f8      	ldr	r0, [r7, #12]
 800314e:	f000 f9d3 	bl	80034f8 <I2C_RequestMemoryWrite>
 8003152:	4603      	mov	r3, r0
 8003154:	2b00      	cmp	r3, #0
 8003156:	d005      	beq.n	8003164 <HAL_I2C_Mem_Write+0xc8>
 8003158:	68fb      	ldr	r3, [r7, #12]
 800315a:	2200      	movs	r2, #0
 800315c:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8003160:	2301      	movs	r3, #1
 8003162:	e0a9      	b.n	80032b8 <HAL_I2C_Mem_Write+0x21c>
 8003164:	68fb      	ldr	r3, [r7, #12]
 8003166:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8003168:	b29b      	uxth	r3, r3
 800316a:	2bff      	cmp	r3, #255	@ 0xff
 800316c:	d90e      	bls.n	800318c <HAL_I2C_Mem_Write+0xf0>
 800316e:	68fb      	ldr	r3, [r7, #12]
 8003170:	22ff      	movs	r2, #255	@ 0xff
 8003172:	851a      	strh	r2, [r3, #40]	@ 0x28
 8003174:	68fb      	ldr	r3, [r7, #12]
 8003176:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003178:	b2da      	uxtb	r2, r3
 800317a:	8979      	ldrh	r1, [r7, #10]
 800317c:	2300      	movs	r3, #0
 800317e:	9300      	str	r3, [sp, #0]
 8003180:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 8003184:	68f8      	ldr	r0, [r7, #12]
 8003186:	f000 fc47 	bl	8003a18 <I2C_TransferConfig>
 800318a:	e00f      	b.n	80031ac <HAL_I2C_Mem_Write+0x110>
 800318c:	68fb      	ldr	r3, [r7, #12]
 800318e:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8003190:	b29a      	uxth	r2, r3
 8003192:	68fb      	ldr	r3, [r7, #12]
 8003194:	851a      	strh	r2, [r3, #40]	@ 0x28
 8003196:	68fb      	ldr	r3, [r7, #12]
 8003198:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800319a:	b2da      	uxtb	r2, r3
 800319c:	8979      	ldrh	r1, [r7, #10]
 800319e:	2300      	movs	r3, #0
 80031a0:	9300      	str	r3, [sp, #0]
 80031a2:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
 80031a6:	68f8      	ldr	r0, [r7, #12]
 80031a8:	f000 fc36 	bl	8003a18 <I2C_TransferConfig>
 80031ac:	697a      	ldr	r2, [r7, #20]
 80031ae:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 80031b0:	68f8      	ldr	r0, [r7, #12]
 80031b2:	f000 fac6 	bl	8003742 <I2C_WaitOnTXISFlagUntilTimeout>
 80031b6:	4603      	mov	r3, r0
 80031b8:	2b00      	cmp	r3, #0
 80031ba:	d001      	beq.n	80031c0 <HAL_I2C_Mem_Write+0x124>
 80031bc:	2301      	movs	r3, #1
 80031be:	e07b      	b.n	80032b8 <HAL_I2C_Mem_Write+0x21c>
 80031c0:	68fb      	ldr	r3, [r7, #12]
 80031c2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80031c4:	781a      	ldrb	r2, [r3, #0]
 80031c6:	68fb      	ldr	r3, [r7, #12]
 80031c8:	681b      	ldr	r3, [r3, #0]
 80031ca:	629a      	str	r2, [r3, #40]	@ 0x28
 80031cc:	68fb      	ldr	r3, [r7, #12]
 80031ce:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80031d0:	1c5a      	adds	r2, r3, #1
 80031d2:	68fb      	ldr	r3, [r7, #12]
 80031d4:	625a      	str	r2, [r3, #36]	@ 0x24
 80031d6:	68fb      	ldr	r3, [r7, #12]
 80031d8:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80031da:	b29b      	uxth	r3, r3
 80031dc:	3b01      	subs	r3, #1
 80031de:	b29a      	uxth	r2, r3
 80031e0:	68fb      	ldr	r3, [r7, #12]
 80031e2:	855a      	strh	r2, [r3, #42]	@ 0x2a
 80031e4:	68fb      	ldr	r3, [r7, #12]
 80031e6:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80031e8:	3b01      	subs	r3, #1
 80031ea:	b29a      	uxth	r2, r3
 80031ec:	68fb      	ldr	r3, [r7, #12]
 80031ee:	851a      	strh	r2, [r3, #40]	@ 0x28
 80031f0:	68fb      	ldr	r3, [r7, #12]
 80031f2:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80031f4:	b29b      	uxth	r3, r3
 80031f6:	2b00      	cmp	r3, #0
 80031f8:	d034      	beq.n	8003264 <HAL_I2C_Mem_Write+0x1c8>
 80031fa:	68fb      	ldr	r3, [r7, #12]
 80031fc:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80031fe:	2b00      	cmp	r3, #0
 8003200:	d130      	bne.n	8003264 <HAL_I2C_Mem_Write+0x1c8>
 8003202:	697b      	ldr	r3, [r7, #20]
 8003204:	9300      	str	r3, [sp, #0]
 8003206:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8003208:	2200      	movs	r2, #0
 800320a:	2180      	movs	r1, #128	@ 0x80
 800320c:	68f8      	ldr	r0, [r7, #12]
 800320e:	f000 fa3f 	bl	8003690 <I2C_WaitOnFlagUntilTimeout>
 8003212:	4603      	mov	r3, r0
 8003214:	2b00      	cmp	r3, #0
 8003216:	d001      	beq.n	800321c <HAL_I2C_Mem_Write+0x180>
 8003218:	2301      	movs	r3, #1
 800321a:	e04d      	b.n	80032b8 <HAL_I2C_Mem_Write+0x21c>
 800321c:	68fb      	ldr	r3, [r7, #12]
 800321e:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8003220:	b29b      	uxth	r3, r3
 8003222:	2bff      	cmp	r3, #255	@ 0xff
 8003224:	d90e      	bls.n	8003244 <HAL_I2C_Mem_Write+0x1a8>
 8003226:	68fb      	ldr	r3, [r7, #12]
 8003228:	22ff      	movs	r2, #255	@ 0xff
 800322a:	851a      	strh	r2, [r3, #40]	@ 0x28
 800322c:	68fb      	ldr	r3, [r7, #12]
 800322e:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003230:	b2da      	uxtb	r2, r3
 8003232:	8979      	ldrh	r1, [r7, #10]
 8003234:	2300      	movs	r3, #0
 8003236:	9300      	str	r3, [sp, #0]
 8003238:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 800323c:	68f8      	ldr	r0, [r7, #12]
 800323e:	f000 fbeb 	bl	8003a18 <I2C_TransferConfig>
 8003242:	e00f      	b.n	8003264 <HAL_I2C_Mem_Write+0x1c8>
 8003244:	68fb      	ldr	r3, [r7, #12]
 8003246:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8003248:	b29a      	uxth	r2, r3
 800324a:	68fb      	ldr	r3, [r7, #12]
 800324c:	851a      	strh	r2, [r3, #40]	@ 0x28
 800324e:	68fb      	ldr	r3, [r7, #12]
 8003250:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003252:	b2da      	uxtb	r2, r3
 8003254:	8979      	ldrh	r1, [r7, #10]
 8003256:	2300      	movs	r3, #0
 8003258:	9300      	str	r3, [sp, #0]
 800325a:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
 800325e:	68f8      	ldr	r0, [r7, #12]
 8003260:	f000 fbda 	bl	8003a18 <I2C_TransferConfig>
 8003264:	68fb      	ldr	r3, [r7, #12]
 8003266:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8003268:	b29b      	uxth	r3, r3
 800326a:	2b00      	cmp	r3, #0
 800326c:	d19e      	bne.n	80031ac <HAL_I2C_Mem_Write+0x110>
 800326e:	697a      	ldr	r2, [r7, #20]
 8003270:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 8003272:	68f8      	ldr	r0, [r7, #12]
 8003274:	f000 faac 	bl	80037d0 <I2C_WaitOnSTOPFlagUntilTimeout>
 8003278:	4603      	mov	r3, r0
 800327a:	2b00      	cmp	r3, #0
 800327c:	d001      	beq.n	8003282 <HAL_I2C_Mem_Write+0x1e6>
 800327e:	2301      	movs	r3, #1
 8003280:	e01a      	b.n	80032b8 <HAL_I2C_Mem_Write+0x21c>
 8003282:	68fb      	ldr	r3, [r7, #12]
 8003284:	681b      	ldr	r3, [r3, #0]
 8003286:	2220      	movs	r2, #32
 8003288:	61da      	str	r2, [r3, #28]
 800328a:	68fb      	ldr	r3, [r7, #12]
 800328c:	681b      	ldr	r3, [r3, #0]
 800328e:	6859      	ldr	r1, [r3, #4]
 8003290:	68fb      	ldr	r3, [r7, #12]
 8003292:	681a      	ldr	r2, [r3, #0]
 8003294:	4b0a      	ldr	r3, [pc, #40]	@ (80032c0 <HAL_I2C_Mem_Write+0x224>)
 8003296:	400b      	ands	r3, r1
 8003298:	6053      	str	r3, [r2, #4]
 800329a:	68fb      	ldr	r3, [r7, #12]
 800329c:	2220      	movs	r2, #32
 800329e:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80032a2:	68fb      	ldr	r3, [r7, #12]
 80032a4:	2200      	movs	r2, #0
 80032a6:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80032aa:	68fb      	ldr	r3, [r7, #12]
 80032ac:	2200      	movs	r2, #0
 80032ae:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 80032b2:	2300      	movs	r3, #0
 80032b4:	e000      	b.n	80032b8 <HAL_I2C_Mem_Write+0x21c>
 80032b6:	2302      	movs	r3, #2
 80032b8:	4618      	mov	r0, r3
 80032ba:	3718      	adds	r7, #24
 80032bc:	46bd      	mov	sp, r7
 80032be:	bd80      	pop	{r7, pc}
 80032c0:	fe00e800 	.word	0xfe00e800

080032c4 <HAL_I2C_Mem_Read>:
 80032c4:	b580      	push	{r7, lr}
 80032c6:	b088      	sub	sp, #32
 80032c8:	af02      	add	r7, sp, #8
 80032ca:	60f8      	str	r0, [r7, #12]
 80032cc:	4608      	mov	r0, r1
 80032ce:	4611      	mov	r1, r2
 80032d0:	461a      	mov	r2, r3
 80032d2:	4603      	mov	r3, r0
 80032d4:	817b      	strh	r3, [r7, #10]
 80032d6:	460b      	mov	r3, r1
 80032d8:	813b      	strh	r3, [r7, #8]
 80032da:	4613      	mov	r3, r2
 80032dc:	80fb      	strh	r3, [r7, #6]
 80032de:	68fb      	ldr	r3, [r7, #12]
 80032e0:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 80032e4:	b2db      	uxtb	r3, r3
 80032e6:	2b20      	cmp	r3, #32
 80032e8:	f040 80fd 	bne.w	80034e6 <HAL_I2C_Mem_Read+0x222>
 80032ec:	6a3b      	ldr	r3, [r7, #32]
 80032ee:	2b00      	cmp	r3, #0
 80032f0:	d002      	beq.n	80032f8 <HAL_I2C_Mem_Read+0x34>
 80032f2:	8cbb      	ldrh	r3, [r7, #36]	@ 0x24
 80032f4:	2b00      	cmp	r3, #0
 80032f6:	d105      	bne.n	8003304 <HAL_I2C_Mem_Read+0x40>
 80032f8:	68fb      	ldr	r3, [r7, #12]
 80032fa:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80032fe:	645a      	str	r2, [r3, #68]	@ 0x44
 8003300:	2301      	movs	r3, #1
 8003302:	e0f1      	b.n	80034e8 <HAL_I2C_Mem_Read+0x224>
 8003304:	68fb      	ldr	r3, [r7, #12]
 8003306:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 800330a:	2b01      	cmp	r3, #1
 800330c:	d101      	bne.n	8003312 <HAL_I2C_Mem_Read+0x4e>
 800330e:	2302      	movs	r3, #2
 8003310:	e0ea      	b.n	80034e8 <HAL_I2C_Mem_Read+0x224>
 8003312:	68fb      	ldr	r3, [r7, #12]
 8003314:	2201      	movs	r2, #1
 8003316:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 800331a:	f7ff fadb 	bl	80028d4 <HAL_GetTick>
 800331e:	6178      	str	r0, [r7, #20]
 8003320:	697b      	ldr	r3, [r7, #20]
 8003322:	9300      	str	r3, [sp, #0]
 8003324:	2319      	movs	r3, #25
 8003326:	2201      	movs	r2, #1
 8003328:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 800332c:	68f8      	ldr	r0, [r7, #12]
 800332e:	f000 f9af 	bl	8003690 <I2C_WaitOnFlagUntilTimeout>
 8003332:	4603      	mov	r3, r0
 8003334:	2b00      	cmp	r3, #0
 8003336:	d001      	beq.n	800333c <HAL_I2C_Mem_Read+0x78>
 8003338:	2301      	movs	r3, #1
 800333a:	e0d5      	b.n	80034e8 <HAL_I2C_Mem_Read+0x224>
 800333c:	68fb      	ldr	r3, [r7, #12]
 800333e:	2222      	movs	r2, #34	@ 0x22
 8003340:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8003344:	68fb      	ldr	r3, [r7, #12]
 8003346:	2240      	movs	r2, #64	@ 0x40
 8003348:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 800334c:	68fb      	ldr	r3, [r7, #12]
 800334e:	2200      	movs	r2, #0
 8003350:	645a      	str	r2, [r3, #68]	@ 0x44
 8003352:	68fb      	ldr	r3, [r7, #12]
 8003354:	6a3a      	ldr	r2, [r7, #32]
 8003356:	625a      	str	r2, [r3, #36]	@ 0x24
 8003358:	68fb      	ldr	r3, [r7, #12]
 800335a:	8cba      	ldrh	r2, [r7, #36]	@ 0x24
 800335c:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800335e:	68fb      	ldr	r3, [r7, #12]
 8003360:	2200      	movs	r2, #0
 8003362:	635a      	str	r2, [r3, #52]	@ 0x34
 8003364:	88f8      	ldrh	r0, [r7, #6]
 8003366:	893a      	ldrh	r2, [r7, #8]
 8003368:	8979      	ldrh	r1, [r7, #10]
 800336a:	697b      	ldr	r3, [r7, #20]
 800336c:	9301      	str	r3, [sp, #4]
 800336e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8003370:	9300      	str	r3, [sp, #0]
 8003372:	4603      	mov	r3, r0
 8003374:	68f8      	ldr	r0, [r7, #12]
 8003376:	f000 f913 	bl	80035a0 <I2C_RequestMemoryRead>
 800337a:	4603      	mov	r3, r0
 800337c:	2b00      	cmp	r3, #0
 800337e:	d005      	beq.n	800338c <HAL_I2C_Mem_Read+0xc8>
 8003380:	68fb      	ldr	r3, [r7, #12]
 8003382:	2200      	movs	r2, #0
 8003384:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8003388:	2301      	movs	r3, #1
 800338a:	e0ad      	b.n	80034e8 <HAL_I2C_Mem_Read+0x224>
 800338c:	68fb      	ldr	r3, [r7, #12]
 800338e:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8003390:	b29b      	uxth	r3, r3
 8003392:	2bff      	cmp	r3, #255	@ 0xff
 8003394:	d90e      	bls.n	80033b4 <HAL_I2C_Mem_Read+0xf0>
 8003396:	68fb      	ldr	r3, [r7, #12]
 8003398:	2201      	movs	r2, #1
 800339a:	851a      	strh	r2, [r3, #40]	@ 0x28
 800339c:	68fb      	ldr	r3, [r7, #12]
 800339e:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80033a0:	b2da      	uxtb	r2, r3
 80033a2:	8979      	ldrh	r1, [r7, #10]
 80033a4:	4b52      	ldr	r3, [pc, #328]	@ (80034f0 <HAL_I2C_Mem_Read+0x22c>)
 80033a6:	9300      	str	r3, [sp, #0]
 80033a8:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 80033ac:	68f8      	ldr	r0, [r7, #12]
 80033ae:	f000 fb33 	bl	8003a18 <I2C_TransferConfig>
 80033b2:	e00f      	b.n	80033d4 <HAL_I2C_Mem_Read+0x110>
 80033b4:	68fb      	ldr	r3, [r7, #12]
 80033b6:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80033b8:	b29a      	uxth	r2, r3
 80033ba:	68fb      	ldr	r3, [r7, #12]
 80033bc:	851a      	strh	r2, [r3, #40]	@ 0x28
 80033be:	68fb      	ldr	r3, [r7, #12]
 80033c0:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80033c2:	b2da      	uxtb	r2, r3
 80033c4:	8979      	ldrh	r1, [r7, #10]
 80033c6:	4b4a      	ldr	r3, [pc, #296]	@ (80034f0 <HAL_I2C_Mem_Read+0x22c>)
 80033c8:	9300      	str	r3, [sp, #0]
 80033ca:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
 80033ce:	68f8      	ldr	r0, [r7, #12]
 80033d0:	f000 fb22 	bl	8003a18 <I2C_TransferConfig>
 80033d4:	697b      	ldr	r3, [r7, #20]
 80033d6:	9300      	str	r3, [sp, #0]
 80033d8:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80033da:	2200      	movs	r2, #0
 80033dc:	2104      	movs	r1, #4
 80033de:	68f8      	ldr	r0, [r7, #12]
 80033e0:	f000 f956 	bl	8003690 <I2C_WaitOnFlagUntilTimeout>
 80033e4:	4603      	mov	r3, r0
 80033e6:	2b00      	cmp	r3, #0
 80033e8:	d001      	beq.n	80033ee <HAL_I2C_Mem_Read+0x12a>
 80033ea:	2301      	movs	r3, #1
 80033ec:	e07c      	b.n	80034e8 <HAL_I2C_Mem_Read+0x224>
 80033ee:	68fb      	ldr	r3, [r7, #12]
 80033f0:	681b      	ldr	r3, [r3, #0]
 80033f2:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 80033f4:	68fb      	ldr	r3, [r7, #12]
 80033f6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80033f8:	b2d2      	uxtb	r2, r2
 80033fa:	701a      	strb	r2, [r3, #0]
 80033fc:	68fb      	ldr	r3, [r7, #12]
 80033fe:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003400:	1c5a      	adds	r2, r3, #1
 8003402:	68fb      	ldr	r3, [r7, #12]
 8003404:	625a      	str	r2, [r3, #36]	@ 0x24
 8003406:	68fb      	ldr	r3, [r7, #12]
 8003408:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800340a:	3b01      	subs	r3, #1
 800340c:	b29a      	uxth	r2, r3
 800340e:	68fb      	ldr	r3, [r7, #12]
 8003410:	851a      	strh	r2, [r3, #40]	@ 0x28
 8003412:	68fb      	ldr	r3, [r7, #12]
 8003414:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8003416:	b29b      	uxth	r3, r3
 8003418:	3b01      	subs	r3, #1
 800341a:	b29a      	uxth	r2, r3
 800341c:	68fb      	ldr	r3, [r7, #12]
 800341e:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8003420:	68fb      	ldr	r3, [r7, #12]
 8003422:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8003424:	b29b      	uxth	r3, r3
 8003426:	2b00      	cmp	r3, #0
 8003428:	d034      	beq.n	8003494 <HAL_I2C_Mem_Read+0x1d0>
 800342a:	68fb      	ldr	r3, [r7, #12]
 800342c:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800342e:	2b00      	cmp	r3, #0
 8003430:	d130      	bne.n	8003494 <HAL_I2C_Mem_Read+0x1d0>
 8003432:	697b      	ldr	r3, [r7, #20]
 8003434:	9300      	str	r3, [sp, #0]
 8003436:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8003438:	2200      	movs	r2, #0
 800343a:	2180      	movs	r1, #128	@ 0x80
 800343c:	68f8      	ldr	r0, [r7, #12]
 800343e:	f000 f927 	bl	8003690 <I2C_WaitOnFlagUntilTimeout>
 8003442:	4603      	mov	r3, r0
 8003444:	2b00      	cmp	r3, #0
 8003446:	d001      	beq.n	800344c <HAL_I2C_Mem_Read+0x188>
 8003448:	2301      	movs	r3, #1
 800344a:	e04d      	b.n	80034e8 <HAL_I2C_Mem_Read+0x224>
 800344c:	68fb      	ldr	r3, [r7, #12]
 800344e:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8003450:	b29b      	uxth	r3, r3
 8003452:	2bff      	cmp	r3, #255	@ 0xff
 8003454:	d90e      	bls.n	8003474 <HAL_I2C_Mem_Read+0x1b0>
 8003456:	68fb      	ldr	r3, [r7, #12]
 8003458:	2201      	movs	r2, #1
 800345a:	851a      	strh	r2, [r3, #40]	@ 0x28
 800345c:	68fb      	ldr	r3, [r7, #12]
 800345e:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003460:	b2da      	uxtb	r2, r3
 8003462:	8979      	ldrh	r1, [r7, #10]
 8003464:	2300      	movs	r3, #0
 8003466:	9300      	str	r3, [sp, #0]
 8003468:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 800346c:	68f8      	ldr	r0, [r7, #12]
 800346e:	f000 fad3 	bl	8003a18 <I2C_TransferConfig>
 8003472:	e00f      	b.n	8003494 <HAL_I2C_Mem_Read+0x1d0>
 8003474:	68fb      	ldr	r3, [r7, #12]
 8003476:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8003478:	b29a      	uxth	r2, r3
 800347a:	68fb      	ldr	r3, [r7, #12]
 800347c:	851a      	strh	r2, [r3, #40]	@ 0x28
 800347e:	68fb      	ldr	r3, [r7, #12]
 8003480:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003482:	b2da      	uxtb	r2, r3
 8003484:	8979      	ldrh	r1, [r7, #10]
 8003486:	2300      	movs	r3, #0
 8003488:	9300      	str	r3, [sp, #0]
 800348a:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
 800348e:	68f8      	ldr	r0, [r7, #12]
 8003490:	f000 fac2 	bl	8003a18 <I2C_TransferConfig>
 8003494:	68fb      	ldr	r3, [r7, #12]
 8003496:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8003498:	b29b      	uxth	r3, r3
 800349a:	2b00      	cmp	r3, #0
 800349c:	d19a      	bne.n	80033d4 <HAL_I2C_Mem_Read+0x110>
 800349e:	697a      	ldr	r2, [r7, #20]
 80034a0:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 80034a2:	68f8      	ldr	r0, [r7, #12]
 80034a4:	f000 f994 	bl	80037d0 <I2C_WaitOnSTOPFlagUntilTimeout>
 80034a8:	4603      	mov	r3, r0
 80034aa:	2b00      	cmp	r3, #0
 80034ac:	d001      	beq.n	80034b2 <HAL_I2C_Mem_Read+0x1ee>
 80034ae:	2301      	movs	r3, #1
 80034b0:	e01a      	b.n	80034e8 <HAL_I2C_Mem_Read+0x224>
 80034b2:	68fb      	ldr	r3, [r7, #12]
 80034b4:	681b      	ldr	r3, [r3, #0]
 80034b6:	2220      	movs	r2, #32
 80034b8:	61da      	str	r2, [r3, #28]
 80034ba:	68fb      	ldr	r3, [r7, #12]
 80034bc:	681b      	ldr	r3, [r3, #0]
 80034be:	6859      	ldr	r1, [r3, #4]
 80034c0:	68fb      	ldr	r3, [r7, #12]
 80034c2:	681a      	ldr	r2, [r3, #0]
 80034c4:	4b0b      	ldr	r3, [pc, #44]	@ (80034f4 <HAL_I2C_Mem_Read+0x230>)
 80034c6:	400b      	ands	r3, r1
 80034c8:	6053      	str	r3, [r2, #4]
 80034ca:	68fb      	ldr	r3, [r7, #12]
 80034cc:	2220      	movs	r2, #32
 80034ce:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80034d2:	68fb      	ldr	r3, [r7, #12]
 80034d4:	2200      	movs	r2, #0
 80034d6:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80034da:	68fb      	ldr	r3, [r7, #12]
 80034dc:	2200      	movs	r2, #0
 80034de:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 80034e2:	2300      	movs	r3, #0
 80034e4:	e000      	b.n	80034e8 <HAL_I2C_Mem_Read+0x224>
 80034e6:	2302      	movs	r3, #2
 80034e8:	4618      	mov	r0, r3
 80034ea:	3718      	adds	r7, #24
 80034ec:	46bd      	mov	sp, r7
 80034ee:	bd80      	pop	{r7, pc}
 80034f0:	80002400 	.word	0x80002400
 80034f4:	fe00e800 	.word	0xfe00e800

080034f8 <I2C_RequestMemoryWrite>:
 80034f8:	b580      	push	{r7, lr}
 80034fa:	b086      	sub	sp, #24
 80034fc:	af02      	add	r7, sp, #8
 80034fe:	60f8      	str	r0, [r7, #12]
 8003500:	4608      	mov	r0, r1
 8003502:	4611      	mov	r1, r2
 8003504:	461a      	mov	r2, r3
 8003506:	4603      	mov	r3, r0
 8003508:	817b      	strh	r3, [r7, #10]
 800350a:	460b      	mov	r3, r1
 800350c:	813b      	strh	r3, [r7, #8]
 800350e:	4613      	mov	r3, r2
 8003510:	80fb      	strh	r3, [r7, #6]
 8003512:	88fb      	ldrh	r3, [r7, #6]
 8003514:	b2da      	uxtb	r2, r3
 8003516:	8979      	ldrh	r1, [r7, #10]
 8003518:	4b20      	ldr	r3, [pc, #128]	@ (800359c <I2C_RequestMemoryWrite+0xa4>)
 800351a:	9300      	str	r3, [sp, #0]
 800351c:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 8003520:	68f8      	ldr	r0, [r7, #12]
 8003522:	f000 fa79 	bl	8003a18 <I2C_TransferConfig>
 8003526:	69fa      	ldr	r2, [r7, #28]
 8003528:	69b9      	ldr	r1, [r7, #24]
 800352a:	68f8      	ldr	r0, [r7, #12]
 800352c:	f000 f909 	bl	8003742 <I2C_WaitOnTXISFlagUntilTimeout>
 8003530:	4603      	mov	r3, r0
 8003532:	2b00      	cmp	r3, #0
 8003534:	d001      	beq.n	800353a <I2C_RequestMemoryWrite+0x42>
 8003536:	2301      	movs	r3, #1
 8003538:	e02c      	b.n	8003594 <I2C_RequestMemoryWrite+0x9c>
 800353a:	88fb      	ldrh	r3, [r7, #6]
 800353c:	2b01      	cmp	r3, #1
 800353e:	d105      	bne.n	800354c <I2C_RequestMemoryWrite+0x54>
 8003540:	893b      	ldrh	r3, [r7, #8]
 8003542:	b2da      	uxtb	r2, r3
 8003544:	68fb      	ldr	r3, [r7, #12]
 8003546:	681b      	ldr	r3, [r3, #0]
 8003548:	629a      	str	r2, [r3, #40]	@ 0x28
 800354a:	e015      	b.n	8003578 <I2C_RequestMemoryWrite+0x80>
 800354c:	893b      	ldrh	r3, [r7, #8]
 800354e:	0a1b      	lsrs	r3, r3, #8
 8003550:	b29b      	uxth	r3, r3
 8003552:	b2da      	uxtb	r2, r3
 8003554:	68fb      	ldr	r3, [r7, #12]
 8003556:	681b      	ldr	r3, [r3, #0]
 8003558:	629a      	str	r2, [r3, #40]	@ 0x28
 800355a:	69fa      	ldr	r2, [r7, #28]
 800355c:	69b9      	ldr	r1, [r7, #24]
 800355e:	68f8      	ldr	r0, [r7, #12]
 8003560:	f000 f8ef 	bl	8003742 <I2C_WaitOnTXISFlagUntilTimeout>
 8003564:	4603      	mov	r3, r0
 8003566:	2b00      	cmp	r3, #0
 8003568:	d001      	beq.n	800356e <I2C_RequestMemoryWrite+0x76>
 800356a:	2301      	movs	r3, #1
 800356c:	e012      	b.n	8003594 <I2C_RequestMemoryWrite+0x9c>
 800356e:	893b      	ldrh	r3, [r7, #8]
 8003570:	b2da      	uxtb	r2, r3
 8003572:	68fb      	ldr	r3, [r7, #12]
 8003574:	681b      	ldr	r3, [r3, #0]
 8003576:	629a      	str	r2, [r3, #40]	@ 0x28
 8003578:	69fb      	ldr	r3, [r7, #28]
 800357a:	9300      	str	r3, [sp, #0]
 800357c:	69bb      	ldr	r3, [r7, #24]
 800357e:	2200      	movs	r2, #0
 8003580:	2180      	movs	r1, #128	@ 0x80
 8003582:	68f8      	ldr	r0, [r7, #12]
 8003584:	f000 f884 	bl	8003690 <I2C_WaitOnFlagUntilTimeout>
 8003588:	4603      	mov	r3, r0
 800358a:	2b00      	cmp	r3, #0
 800358c:	d001      	beq.n	8003592 <I2C_RequestMemoryWrite+0x9a>
 800358e:	2301      	movs	r3, #1
 8003590:	e000      	b.n	8003594 <I2C_RequestMemoryWrite+0x9c>
 8003592:	2300      	movs	r3, #0
 8003594:	4618      	mov	r0, r3
 8003596:	3710      	adds	r7, #16
 8003598:	46bd      	mov	sp, r7
 800359a:	bd80      	pop	{r7, pc}
 800359c:	80002000 	.word	0x80002000

080035a0 <I2C_RequestMemoryRead>:
 80035a0:	b580      	push	{r7, lr}
 80035a2:	b086      	sub	sp, #24
 80035a4:	af02      	add	r7, sp, #8
 80035a6:	60f8      	str	r0, [r7, #12]
 80035a8:	4608      	mov	r0, r1
 80035aa:	4611      	mov	r1, r2
 80035ac:	461a      	mov	r2, r3
 80035ae:	4603      	mov	r3, r0
 80035b0:	817b      	strh	r3, [r7, #10]
 80035b2:	460b      	mov	r3, r1
 80035b4:	813b      	strh	r3, [r7, #8]
 80035b6:	4613      	mov	r3, r2
 80035b8:	80fb      	strh	r3, [r7, #6]
 80035ba:	88fb      	ldrh	r3, [r7, #6]
 80035bc:	b2da      	uxtb	r2, r3
 80035be:	8979      	ldrh	r1, [r7, #10]
 80035c0:	4b20      	ldr	r3, [pc, #128]	@ (8003644 <I2C_RequestMemoryRead+0xa4>)
 80035c2:	9300      	str	r3, [sp, #0]
 80035c4:	2300      	movs	r3, #0
 80035c6:	68f8      	ldr	r0, [r7, #12]
 80035c8:	f000 fa26 	bl	8003a18 <I2C_TransferConfig>
 80035cc:	69fa      	ldr	r2, [r7, #28]
 80035ce:	69b9      	ldr	r1, [r7, #24]
 80035d0:	68f8      	ldr	r0, [r7, #12]
 80035d2:	f000 f8b6 	bl	8003742 <I2C_WaitOnTXISFlagUntilTimeout>
 80035d6:	4603      	mov	r3, r0
 80035d8:	2b00      	cmp	r3, #0
 80035da:	d001      	beq.n	80035e0 <I2C_RequestMemoryRead+0x40>
 80035dc:	2301      	movs	r3, #1
 80035de:	e02c      	b.n	800363a <I2C_RequestMemoryRead+0x9a>
 80035e0:	88fb      	ldrh	r3, [r7, #6]
 80035e2:	2b01      	cmp	r3, #1
 80035e4:	d105      	bne.n	80035f2 <I2C_RequestMemoryRead+0x52>
 80035e6:	893b      	ldrh	r3, [r7, #8]
 80035e8:	b2da      	uxtb	r2, r3
 80035ea:	68fb      	ldr	r3, [r7, #12]
 80035ec:	681b      	ldr	r3, [r3, #0]
 80035ee:	629a      	str	r2, [r3, #40]	@ 0x28
 80035f0:	e015      	b.n	800361e <I2C_RequestMemoryRead+0x7e>
 80035f2:	893b      	ldrh	r3, [r7, #8]
 80035f4:	0a1b      	lsrs	r3, r3, #8
 80035f6:	b29b      	uxth	r3, r3
 80035f8:	b2da      	uxtb	r2, r3
 80035fa:	68fb      	ldr	r3, [r7, #12]
 80035fc:	681b      	ldr	r3, [r3, #0]
 80035fe:	629a      	str	r2, [r3, #40]	@ 0x28
 8003600:	69fa      	ldr	r2, [r7, #28]
 8003602:	69b9      	ldr	r1, [r7, #24]
 8003604:	68f8      	ldr	r0, [r7, #12]
 8003606:	f000 f89c 	bl	8003742 <I2C_WaitOnTXISFlagUntilTimeout>
 800360a:	4603      	mov	r3, r0
 800360c:	2b00      	cmp	r3, #0
 800360e:	d001      	beq.n	8003614 <I2C_RequestMemoryRead+0x74>
 8003610:	2301      	movs	r3, #1
 8003612:	e012      	b.n	800363a <I2C_RequestMemoryRead+0x9a>
 8003614:	893b      	ldrh	r3, [r7, #8]
 8003616:	b2da      	uxtb	r2, r3
 8003618:	68fb      	ldr	r3, [r7, #12]
 800361a:	681b      	ldr	r3, [r3, #0]
 800361c:	629a      	str	r2, [r3, #40]	@ 0x28
 800361e:	69fb      	ldr	r3, [r7, #28]
 8003620:	9300      	str	r3, [sp, #0]
 8003622:	69bb      	ldr	r3, [r7, #24]
 8003624:	2200      	movs	r2, #0
 8003626:	2140      	movs	r1, #64	@ 0x40
 8003628:	68f8      	ldr	r0, [r7, #12]
 800362a:	f000 f831 	bl	8003690 <I2C_WaitOnFlagUntilTimeout>
 800362e:	4603      	mov	r3, r0
 8003630:	2b00      	cmp	r3, #0
 8003632:	d001      	beq.n	8003638 <I2C_RequestMemoryRead+0x98>
 8003634:	2301      	movs	r3, #1
 8003636:	e000      	b.n	800363a <I2C_RequestMemoryRead+0x9a>
 8003638:	2300      	movs	r3, #0
 800363a:	4618      	mov	r0, r3
 800363c:	3710      	adds	r7, #16
 800363e:	46bd      	mov	sp, r7
 8003640:	bd80      	pop	{r7, pc}
 8003642:	bf00      	nop
 8003644:	80002000 	.word	0x80002000

08003648 <I2C_Flush_TXDR>:
 8003648:	b480      	push	{r7}
 800364a:	b083      	sub	sp, #12
 800364c:	af00      	add	r7, sp, #0
 800364e:	6078      	str	r0, [r7, #4]
 8003650:	687b      	ldr	r3, [r7, #4]
 8003652:	681b      	ldr	r3, [r3, #0]
 8003654:	699b      	ldr	r3, [r3, #24]
 8003656:	f003 0302 	and.w	r3, r3, #2
 800365a:	2b02      	cmp	r3, #2
 800365c:	d103      	bne.n	8003666 <I2C_Flush_TXDR+0x1e>
 800365e:	687b      	ldr	r3, [r7, #4]
 8003660:	681b      	ldr	r3, [r3, #0]
 8003662:	2200      	movs	r2, #0
 8003664:	629a      	str	r2, [r3, #40]	@ 0x28
 8003666:	687b      	ldr	r3, [r7, #4]
 8003668:	681b      	ldr	r3, [r3, #0]
 800366a:	699b      	ldr	r3, [r3, #24]
 800366c:	f003 0301 	and.w	r3, r3, #1
 8003670:	2b01      	cmp	r3, #1
 8003672:	d007      	beq.n	8003684 <I2C_Flush_TXDR+0x3c>
 8003674:	687b      	ldr	r3, [r7, #4]
 8003676:	681b      	ldr	r3, [r3, #0]
 8003678:	699a      	ldr	r2, [r3, #24]
 800367a:	687b      	ldr	r3, [r7, #4]
 800367c:	681b      	ldr	r3, [r3, #0]
 800367e:	f042 0201 	orr.w	r2, r2, #1
 8003682:	619a      	str	r2, [r3, #24]
 8003684:	bf00      	nop
 8003686:	370c      	adds	r7, #12
 8003688:	46bd      	mov	sp, r7
 800368a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800368e:	4770      	bx	lr

08003690 <I2C_WaitOnFlagUntilTimeout>:
 8003690:	b580      	push	{r7, lr}
 8003692:	b084      	sub	sp, #16
 8003694:	af00      	add	r7, sp, #0
 8003696:	60f8      	str	r0, [r7, #12]
 8003698:	60b9      	str	r1, [r7, #8]
 800369a:	603b      	str	r3, [r7, #0]
 800369c:	4613      	mov	r3, r2
 800369e:	71fb      	strb	r3, [r7, #7]
 80036a0:	e03b      	b.n	800371a <I2C_WaitOnFlagUntilTimeout+0x8a>
 80036a2:	69ba      	ldr	r2, [r7, #24]
 80036a4:	6839      	ldr	r1, [r7, #0]
 80036a6:	68f8      	ldr	r0, [r7, #12]
 80036a8:	f000 f8d6 	bl	8003858 <I2C_IsErrorOccurred>
 80036ac:	4603      	mov	r3, r0
 80036ae:	2b00      	cmp	r3, #0
 80036b0:	d001      	beq.n	80036b6 <I2C_WaitOnFlagUntilTimeout+0x26>
 80036b2:	2301      	movs	r3, #1
 80036b4:	e041      	b.n	800373a <I2C_WaitOnFlagUntilTimeout+0xaa>
 80036b6:	683b      	ldr	r3, [r7, #0]
 80036b8:	f1b3 3fff 	cmp.w	r3, #4294967295
 80036bc:	d02d      	beq.n	800371a <I2C_WaitOnFlagUntilTimeout+0x8a>
 80036be:	f7ff f909 	bl	80028d4 <HAL_GetTick>
 80036c2:	4602      	mov	r2, r0
 80036c4:	69bb      	ldr	r3, [r7, #24]
 80036c6:	1ad3      	subs	r3, r2, r3
 80036c8:	683a      	ldr	r2, [r7, #0]
 80036ca:	429a      	cmp	r2, r3
 80036cc:	d302      	bcc.n	80036d4 <I2C_WaitOnFlagUntilTimeout+0x44>
 80036ce:	683b      	ldr	r3, [r7, #0]
 80036d0:	2b00      	cmp	r3, #0
 80036d2:	d122      	bne.n	800371a <I2C_WaitOnFlagUntilTimeout+0x8a>
 80036d4:	68fb      	ldr	r3, [r7, #12]
 80036d6:	681b      	ldr	r3, [r3, #0]
 80036d8:	699a      	ldr	r2, [r3, #24]
 80036da:	68bb      	ldr	r3, [r7, #8]
 80036dc:	4013      	ands	r3, r2
 80036de:	68ba      	ldr	r2, [r7, #8]
 80036e0:	429a      	cmp	r2, r3
 80036e2:	bf0c      	ite	eq
 80036e4:	2301      	moveq	r3, #1
 80036e6:	2300      	movne	r3, #0
 80036e8:	b2db      	uxtb	r3, r3
 80036ea:	461a      	mov	r2, r3
 80036ec:	79fb      	ldrb	r3, [r7, #7]
 80036ee:	429a      	cmp	r2, r3
 80036f0:	d113      	bne.n	800371a <I2C_WaitOnFlagUntilTimeout+0x8a>
 80036f2:	68fb      	ldr	r3, [r7, #12]
 80036f4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80036f6:	f043 0220 	orr.w	r2, r3, #32
 80036fa:	68fb      	ldr	r3, [r7, #12]
 80036fc:	645a      	str	r2, [r3, #68]	@ 0x44
 80036fe:	68fb      	ldr	r3, [r7, #12]
 8003700:	2220      	movs	r2, #32
 8003702:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8003706:	68fb      	ldr	r3, [r7, #12]
 8003708:	2200      	movs	r2, #0
 800370a:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 800370e:	68fb      	ldr	r3, [r7, #12]
 8003710:	2200      	movs	r2, #0
 8003712:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8003716:	2301      	movs	r3, #1
 8003718:	e00f      	b.n	800373a <I2C_WaitOnFlagUntilTimeout+0xaa>
 800371a:	68fb      	ldr	r3, [r7, #12]
 800371c:	681b      	ldr	r3, [r3, #0]
 800371e:	699a      	ldr	r2, [r3, #24]
 8003720:	68bb      	ldr	r3, [r7, #8]
 8003722:	4013      	ands	r3, r2
 8003724:	68ba      	ldr	r2, [r7, #8]
 8003726:	429a      	cmp	r2, r3
 8003728:	bf0c      	ite	eq
 800372a:	2301      	moveq	r3, #1
 800372c:	2300      	movne	r3, #0
 800372e:	b2db      	uxtb	r3, r3
 8003730:	461a      	mov	r2, r3
 8003732:	79fb      	ldrb	r3, [r7, #7]
 8003734:	429a      	cmp	r2, r3
 8003736:	d0b4      	beq.n	80036a2 <I2C_WaitOnFlagUntilTimeout+0x12>
 8003738:	2300      	movs	r3, #0
 800373a:	4618      	mov	r0, r3
 800373c:	3710      	adds	r7, #16
 800373e:	46bd      	mov	sp, r7
 8003740:	bd80      	pop	{r7, pc}

08003742 <I2C_WaitOnTXISFlagUntilTimeout>:
 8003742:	b580      	push	{r7, lr}
 8003744:	b084      	sub	sp, #16
 8003746:	af00      	add	r7, sp, #0
 8003748:	60f8      	str	r0, [r7, #12]
 800374a:	60b9      	str	r1, [r7, #8]
 800374c:	607a      	str	r2, [r7, #4]
 800374e:	e033      	b.n	80037b8 <I2C_WaitOnTXISFlagUntilTimeout+0x76>
 8003750:	687a      	ldr	r2, [r7, #4]
 8003752:	68b9      	ldr	r1, [r7, #8]
 8003754:	68f8      	ldr	r0, [r7, #12]
 8003756:	f000 f87f 	bl	8003858 <I2C_IsErrorOccurred>
 800375a:	4603      	mov	r3, r0
 800375c:	2b00      	cmp	r3, #0
 800375e:	d001      	beq.n	8003764 <I2C_WaitOnTXISFlagUntilTimeout+0x22>
 8003760:	2301      	movs	r3, #1
 8003762:	e031      	b.n	80037c8 <I2C_WaitOnTXISFlagUntilTimeout+0x86>
 8003764:	68bb      	ldr	r3, [r7, #8]
 8003766:	f1b3 3fff 	cmp.w	r3, #4294967295
 800376a:	d025      	beq.n	80037b8 <I2C_WaitOnTXISFlagUntilTimeout+0x76>
 800376c:	f7ff f8b2 	bl	80028d4 <HAL_GetTick>
 8003770:	4602      	mov	r2, r0
 8003772:	687b      	ldr	r3, [r7, #4]
 8003774:	1ad3      	subs	r3, r2, r3
 8003776:	68ba      	ldr	r2, [r7, #8]
 8003778:	429a      	cmp	r2, r3
 800377a:	d302      	bcc.n	8003782 <I2C_WaitOnTXISFlagUntilTimeout+0x40>
 800377c:	68bb      	ldr	r3, [r7, #8]
 800377e:	2b00      	cmp	r3, #0
 8003780:	d11a      	bne.n	80037b8 <I2C_WaitOnTXISFlagUntilTimeout+0x76>
 8003782:	68fb      	ldr	r3, [r7, #12]
 8003784:	681b      	ldr	r3, [r3, #0]
 8003786:	699b      	ldr	r3, [r3, #24]
 8003788:	f003 0302 	and.w	r3, r3, #2
 800378c:	2b02      	cmp	r3, #2
 800378e:	d013      	beq.n	80037b8 <I2C_WaitOnTXISFlagUntilTimeout+0x76>
 8003790:	68fb      	ldr	r3, [r7, #12]
 8003792:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003794:	f043 0220 	orr.w	r2, r3, #32
 8003798:	68fb      	ldr	r3, [r7, #12]
 800379a:	645a      	str	r2, [r3, #68]	@ 0x44
 800379c:	68fb      	ldr	r3, [r7, #12]
 800379e:	2220      	movs	r2, #32
 80037a0:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80037a4:	68fb      	ldr	r3, [r7, #12]
 80037a6:	2200      	movs	r2, #0
 80037a8:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80037ac:	68fb      	ldr	r3, [r7, #12]
 80037ae:	2200      	movs	r2, #0
 80037b0:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 80037b4:	2301      	movs	r3, #1
 80037b6:	e007      	b.n	80037c8 <I2C_WaitOnTXISFlagUntilTimeout+0x86>
 80037b8:	68fb      	ldr	r3, [r7, #12]
 80037ba:	681b      	ldr	r3, [r3, #0]
 80037bc:	699b      	ldr	r3, [r3, #24]
 80037be:	f003 0302 	and.w	r3, r3, #2
 80037c2:	2b02      	cmp	r3, #2
 80037c4:	d1c4      	bne.n	8003750 <I2C_WaitOnTXISFlagUntilTimeout+0xe>
 80037c6:	2300      	movs	r3, #0
 80037c8:	4618      	mov	r0, r3
 80037ca:	3710      	adds	r7, #16
 80037cc:	46bd      	mov	sp, r7
 80037ce:	bd80      	pop	{r7, pc}

080037d0 <I2C_WaitOnSTOPFlagUntilTimeout>:
 80037d0:	b580      	push	{r7, lr}
 80037d2:	b084      	sub	sp, #16
 80037d4:	af00      	add	r7, sp, #0
 80037d6:	60f8      	str	r0, [r7, #12]
 80037d8:	60b9      	str	r1, [r7, #8]
 80037da:	607a      	str	r2, [r7, #4]
 80037dc:	e02f      	b.n	800383e <I2C_WaitOnSTOPFlagUntilTimeout+0x6e>
 80037de:	687a      	ldr	r2, [r7, #4]
 80037e0:	68b9      	ldr	r1, [r7, #8]
 80037e2:	68f8      	ldr	r0, [r7, #12]
 80037e4:	f000 f838 	bl	8003858 <I2C_IsErrorOccurred>
 80037e8:	4603      	mov	r3, r0
 80037ea:	2b00      	cmp	r3, #0
 80037ec:	d001      	beq.n	80037f2 <I2C_WaitOnSTOPFlagUntilTimeout+0x22>
 80037ee:	2301      	movs	r3, #1
 80037f0:	e02d      	b.n	800384e <I2C_WaitOnSTOPFlagUntilTimeout+0x7e>
 80037f2:	f7ff f86f 	bl	80028d4 <HAL_GetTick>
 80037f6:	4602      	mov	r2, r0
 80037f8:	687b      	ldr	r3, [r7, #4]
 80037fa:	1ad3      	subs	r3, r2, r3
 80037fc:	68ba      	ldr	r2, [r7, #8]
 80037fe:	429a      	cmp	r2, r3
 8003800:	d302      	bcc.n	8003808 <I2C_WaitOnSTOPFlagUntilTimeout+0x38>
 8003802:	68bb      	ldr	r3, [r7, #8]
 8003804:	2b00      	cmp	r3, #0
 8003806:	d11a      	bne.n	800383e <I2C_WaitOnSTOPFlagUntilTimeout+0x6e>
 8003808:	68fb      	ldr	r3, [r7, #12]
 800380a:	681b      	ldr	r3, [r3, #0]
 800380c:	699b      	ldr	r3, [r3, #24]
 800380e:	f003 0320 	and.w	r3, r3, #32
 8003812:	2b20      	cmp	r3, #32
 8003814:	d013      	beq.n	800383e <I2C_WaitOnSTOPFlagUntilTimeout+0x6e>
 8003816:	68fb      	ldr	r3, [r7, #12]
 8003818:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800381a:	f043 0220 	orr.w	r2, r3, #32
 800381e:	68fb      	ldr	r3, [r7, #12]
 8003820:	645a      	str	r2, [r3, #68]	@ 0x44
 8003822:	68fb      	ldr	r3, [r7, #12]
 8003824:	2220      	movs	r2, #32
 8003826:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800382a:	68fb      	ldr	r3, [r7, #12]
 800382c:	2200      	movs	r2, #0
 800382e:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8003832:	68fb      	ldr	r3, [r7, #12]
 8003834:	2200      	movs	r2, #0
 8003836:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 800383a:	2301      	movs	r3, #1
 800383c:	e007      	b.n	800384e <I2C_WaitOnSTOPFlagUntilTimeout+0x7e>
 800383e:	68fb      	ldr	r3, [r7, #12]
 8003840:	681b      	ldr	r3, [r3, #0]
 8003842:	699b      	ldr	r3, [r3, #24]
 8003844:	f003 0320 	and.w	r3, r3, #32
 8003848:	2b20      	cmp	r3, #32
 800384a:	d1c8      	bne.n	80037de <I2C_WaitOnSTOPFlagUntilTimeout+0xe>
 800384c:	2300      	movs	r3, #0
 800384e:	4618      	mov	r0, r3
 8003850:	3710      	adds	r7, #16
 8003852:	46bd      	mov	sp, r7
 8003854:	bd80      	pop	{r7, pc}
	...

08003858 <I2C_IsErrorOccurred>:
 8003858:	b580      	push	{r7, lr}
 800385a:	b08a      	sub	sp, #40	@ 0x28
 800385c:	af00      	add	r7, sp, #0
 800385e:	60f8      	str	r0, [r7, #12]
 8003860:	60b9      	str	r1, [r7, #8]
 8003862:	607a      	str	r2, [r7, #4]
 8003864:	2300      	movs	r3, #0
 8003866:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 800386a:	68fb      	ldr	r3, [r7, #12]
 800386c:	681b      	ldr	r3, [r3, #0]
 800386e:	699b      	ldr	r3, [r3, #24]
 8003870:	61bb      	str	r3, [r7, #24]
 8003872:	2300      	movs	r3, #0
 8003874:	623b      	str	r3, [r7, #32]
 8003876:	687b      	ldr	r3, [r7, #4]
 8003878:	61fb      	str	r3, [r7, #28]
 800387a:	69bb      	ldr	r3, [r7, #24]
 800387c:	f003 0310 	and.w	r3, r3, #16
 8003880:	2b00      	cmp	r3, #0
 8003882:	d068      	beq.n	8003956 <I2C_IsErrorOccurred+0xfe>
 8003884:	68fb      	ldr	r3, [r7, #12]
 8003886:	681b      	ldr	r3, [r3, #0]
 8003888:	2210      	movs	r2, #16
 800388a:	61da      	str	r2, [r3, #28]
 800388c:	e049      	b.n	8003922 <I2C_IsErrorOccurred+0xca>
 800388e:	68bb      	ldr	r3, [r7, #8]
 8003890:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003894:	d045      	beq.n	8003922 <I2C_IsErrorOccurred+0xca>
 8003896:	f7ff f81d 	bl	80028d4 <HAL_GetTick>
 800389a:	4602      	mov	r2, r0
 800389c:	69fb      	ldr	r3, [r7, #28]
 800389e:	1ad3      	subs	r3, r2, r3
 80038a0:	68ba      	ldr	r2, [r7, #8]
 80038a2:	429a      	cmp	r2, r3
 80038a4:	d302      	bcc.n	80038ac <I2C_IsErrorOccurred+0x54>
 80038a6:	68bb      	ldr	r3, [r7, #8]
 80038a8:	2b00      	cmp	r3, #0
 80038aa:	d13a      	bne.n	8003922 <I2C_IsErrorOccurred+0xca>
 80038ac:	68fb      	ldr	r3, [r7, #12]
 80038ae:	681b      	ldr	r3, [r3, #0]
 80038b0:	685b      	ldr	r3, [r3, #4]
 80038b2:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 80038b6:	617b      	str	r3, [r7, #20]
 80038b8:	68fb      	ldr	r3, [r7, #12]
 80038ba:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 80038be:	74fb      	strb	r3, [r7, #19]
 80038c0:	68fb      	ldr	r3, [r7, #12]
 80038c2:	681b      	ldr	r3, [r3, #0]
 80038c4:	699b      	ldr	r3, [r3, #24]
 80038c6:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 80038ca:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 80038ce:	d121      	bne.n	8003914 <I2C_IsErrorOccurred+0xbc>
 80038d0:	697b      	ldr	r3, [r7, #20]
 80038d2:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 80038d6:	d01d      	beq.n	8003914 <I2C_IsErrorOccurred+0xbc>
 80038d8:	7cfb      	ldrb	r3, [r7, #19]
 80038da:	2b20      	cmp	r3, #32
 80038dc:	d01a      	beq.n	8003914 <I2C_IsErrorOccurred+0xbc>
 80038de:	68fb      	ldr	r3, [r7, #12]
 80038e0:	681b      	ldr	r3, [r3, #0]
 80038e2:	685a      	ldr	r2, [r3, #4]
 80038e4:	68fb      	ldr	r3, [r7, #12]
 80038e6:	681b      	ldr	r3, [r3, #0]
 80038e8:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 80038ec:	605a      	str	r2, [r3, #4]
 80038ee:	f7fe fff1 	bl	80028d4 <HAL_GetTick>
 80038f2:	61f8      	str	r0, [r7, #28]
 80038f4:	e00e      	b.n	8003914 <I2C_IsErrorOccurred+0xbc>
 80038f6:	f7fe ffed 	bl	80028d4 <HAL_GetTick>
 80038fa:	4602      	mov	r2, r0
 80038fc:	69fb      	ldr	r3, [r7, #28]
 80038fe:	1ad3      	subs	r3, r2, r3
 8003900:	2b19      	cmp	r3, #25
 8003902:	d907      	bls.n	8003914 <I2C_IsErrorOccurred+0xbc>
 8003904:	6a3b      	ldr	r3, [r7, #32]
 8003906:	f043 0320 	orr.w	r3, r3, #32
 800390a:	623b      	str	r3, [r7, #32]
 800390c:	2301      	movs	r3, #1
 800390e:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 8003912:	e006      	b.n	8003922 <I2C_IsErrorOccurred+0xca>
 8003914:	68fb      	ldr	r3, [r7, #12]
 8003916:	681b      	ldr	r3, [r3, #0]
 8003918:	699b      	ldr	r3, [r3, #24]
 800391a:	f003 0320 	and.w	r3, r3, #32
 800391e:	2b20      	cmp	r3, #32
 8003920:	d1e9      	bne.n	80038f6 <I2C_IsErrorOccurred+0x9e>
 8003922:	68fb      	ldr	r3, [r7, #12]
 8003924:	681b      	ldr	r3, [r3, #0]
 8003926:	699b      	ldr	r3, [r3, #24]
 8003928:	f003 0320 	and.w	r3, r3, #32
 800392c:	2b20      	cmp	r3, #32
 800392e:	d003      	beq.n	8003938 <I2C_IsErrorOccurred+0xe0>
 8003930:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 8003934:	2b00      	cmp	r3, #0
 8003936:	d0aa      	beq.n	800388e <I2C_IsErrorOccurred+0x36>
 8003938:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 800393c:	2b00      	cmp	r3, #0
 800393e:	d103      	bne.n	8003948 <I2C_IsErrorOccurred+0xf0>
 8003940:	68fb      	ldr	r3, [r7, #12]
 8003942:	681b      	ldr	r3, [r3, #0]
 8003944:	2220      	movs	r2, #32
 8003946:	61da      	str	r2, [r3, #28]
 8003948:	6a3b      	ldr	r3, [r7, #32]
 800394a:	f043 0304 	orr.w	r3, r3, #4
 800394e:	623b      	str	r3, [r7, #32]
 8003950:	2301      	movs	r3, #1
 8003952:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 8003956:	68fb      	ldr	r3, [r7, #12]
 8003958:	681b      	ldr	r3, [r3, #0]
 800395a:	699b      	ldr	r3, [r3, #24]
 800395c:	61bb      	str	r3, [r7, #24]
 800395e:	69bb      	ldr	r3, [r7, #24]
 8003960:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003964:	2b00      	cmp	r3, #0
 8003966:	d00b      	beq.n	8003980 <I2C_IsErrorOccurred+0x128>
 8003968:	6a3b      	ldr	r3, [r7, #32]
 800396a:	f043 0301 	orr.w	r3, r3, #1
 800396e:	623b      	str	r3, [r7, #32]
 8003970:	68fb      	ldr	r3, [r7, #12]
 8003972:	681b      	ldr	r3, [r3, #0]
 8003974:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8003978:	61da      	str	r2, [r3, #28]
 800397a:	2301      	movs	r3, #1
 800397c:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 8003980:	69bb      	ldr	r3, [r7, #24]
 8003982:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8003986:	2b00      	cmp	r3, #0
 8003988:	d00b      	beq.n	80039a2 <I2C_IsErrorOccurred+0x14a>
 800398a:	6a3b      	ldr	r3, [r7, #32]
 800398c:	f043 0308 	orr.w	r3, r3, #8
 8003990:	623b      	str	r3, [r7, #32]
 8003992:	68fb      	ldr	r3, [r7, #12]
 8003994:	681b      	ldr	r3, [r3, #0]
 8003996:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 800399a:	61da      	str	r2, [r3, #28]
 800399c:	2301      	movs	r3, #1
 800399e:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 80039a2:	69bb      	ldr	r3, [r7, #24]
 80039a4:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 80039a8:	2b00      	cmp	r3, #0
 80039aa:	d00b      	beq.n	80039c4 <I2C_IsErrorOccurred+0x16c>
 80039ac:	6a3b      	ldr	r3, [r7, #32]
 80039ae:	f043 0302 	orr.w	r3, r3, #2
 80039b2:	623b      	str	r3, [r7, #32]
 80039b4:	68fb      	ldr	r3, [r7, #12]
 80039b6:	681b      	ldr	r3, [r3, #0]
 80039b8:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80039bc:	61da      	str	r2, [r3, #28]
 80039be:	2301      	movs	r3, #1
 80039c0:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 80039c4:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 80039c8:	2b00      	cmp	r3, #0
 80039ca:	d01c      	beq.n	8003a06 <I2C_IsErrorOccurred+0x1ae>
 80039cc:	68f8      	ldr	r0, [r7, #12]
 80039ce:	f7ff fe3b 	bl	8003648 <I2C_Flush_TXDR>
 80039d2:	68fb      	ldr	r3, [r7, #12]
 80039d4:	681b      	ldr	r3, [r3, #0]
 80039d6:	6859      	ldr	r1, [r3, #4]
 80039d8:	68fb      	ldr	r3, [r7, #12]
 80039da:	681a      	ldr	r2, [r3, #0]
 80039dc:	4b0d      	ldr	r3, [pc, #52]	@ (8003a14 <I2C_IsErrorOccurred+0x1bc>)
 80039de:	400b      	ands	r3, r1
 80039e0:	6053      	str	r3, [r2, #4]
 80039e2:	68fb      	ldr	r3, [r7, #12]
 80039e4:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 80039e6:	6a3b      	ldr	r3, [r7, #32]
 80039e8:	431a      	orrs	r2, r3
 80039ea:	68fb      	ldr	r3, [r7, #12]
 80039ec:	645a      	str	r2, [r3, #68]	@ 0x44
 80039ee:	68fb      	ldr	r3, [r7, #12]
 80039f0:	2220      	movs	r2, #32
 80039f2:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80039f6:	68fb      	ldr	r3, [r7, #12]
 80039f8:	2200      	movs	r2, #0
 80039fa:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80039fe:	68fb      	ldr	r3, [r7, #12]
 8003a00:	2200      	movs	r2, #0
 8003a02:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8003a06:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 8003a0a:	4618      	mov	r0, r3
 8003a0c:	3728      	adds	r7, #40	@ 0x28
 8003a0e:	46bd      	mov	sp, r7
 8003a10:	bd80      	pop	{r7, pc}
 8003a12:	bf00      	nop
 8003a14:	fe00e800 	.word	0xfe00e800

08003a18 <I2C_TransferConfig>:
 8003a18:	b480      	push	{r7}
 8003a1a:	b087      	sub	sp, #28
 8003a1c:	af00      	add	r7, sp, #0
 8003a1e:	60f8      	str	r0, [r7, #12]
 8003a20:	607b      	str	r3, [r7, #4]
 8003a22:	460b      	mov	r3, r1
 8003a24:	817b      	strh	r3, [r7, #10]
 8003a26:	4613      	mov	r3, r2
 8003a28:	727b      	strb	r3, [r7, #9]
 8003a2a:	897b      	ldrh	r3, [r7, #10]
 8003a2c:	f3c3 0209 	ubfx	r2, r3, #0, #10
 8003a30:	7a7b      	ldrb	r3, [r7, #9]
 8003a32:	041b      	lsls	r3, r3, #16
 8003a34:	f403 037f 	and.w	r3, r3, #16711680	@ 0xff0000
 8003a38:	431a      	orrs	r2, r3
 8003a3a:	687b      	ldr	r3, [r7, #4]
 8003a3c:	431a      	orrs	r2, r3
 8003a3e:	6a3b      	ldr	r3, [r7, #32]
 8003a40:	4313      	orrs	r3, r2
 8003a42:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8003a46:	617b      	str	r3, [r7, #20]
 8003a48:	68fb      	ldr	r3, [r7, #12]
 8003a4a:	681b      	ldr	r3, [r3, #0]
 8003a4c:	685a      	ldr	r2, [r3, #4]
 8003a4e:	6a3b      	ldr	r3, [r7, #32]
 8003a50:	0d5b      	lsrs	r3, r3, #21
 8003a52:	f403 6180 	and.w	r1, r3, #1024	@ 0x400
 8003a56:	4b08      	ldr	r3, [pc, #32]	@ (8003a78 <I2C_TransferConfig+0x60>)
 8003a58:	430b      	orrs	r3, r1
 8003a5a:	43db      	mvns	r3, r3
 8003a5c:	ea02 0103 	and.w	r1, r2, r3
 8003a60:	68fb      	ldr	r3, [r7, #12]
 8003a62:	681b      	ldr	r3, [r3, #0]
 8003a64:	697a      	ldr	r2, [r7, #20]
 8003a66:	430a      	orrs	r2, r1
 8003a68:	605a      	str	r2, [r3, #4]
 8003a6a:	bf00      	nop
 8003a6c:	371c      	adds	r7, #28
 8003a6e:	46bd      	mov	sp, r7
 8003a70:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003a74:	4770      	bx	lr
 8003a76:	bf00      	nop
 8003a78:	03ff63ff 	.word	0x03ff63ff

08003a7c <HAL_I2CEx_ConfigAnalogFilter>:
 8003a7c:	b480      	push	{r7}
 8003a7e:	b083      	sub	sp, #12
 8003a80:	af00      	add	r7, sp, #0
 8003a82:	6078      	str	r0, [r7, #4]
 8003a84:	6039      	str	r1, [r7, #0]
 8003a86:	687b      	ldr	r3, [r7, #4]
 8003a88:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8003a8c:	b2db      	uxtb	r3, r3
 8003a8e:	2b20      	cmp	r3, #32
 8003a90:	d138      	bne.n	8003b04 <HAL_I2CEx_ConfigAnalogFilter+0x88>
 8003a92:	687b      	ldr	r3, [r7, #4]
 8003a94:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 8003a98:	2b01      	cmp	r3, #1
 8003a9a:	d101      	bne.n	8003aa0 <HAL_I2CEx_ConfigAnalogFilter+0x24>
 8003a9c:	2302      	movs	r3, #2
 8003a9e:	e032      	b.n	8003b06 <HAL_I2CEx_ConfigAnalogFilter+0x8a>
 8003aa0:	687b      	ldr	r3, [r7, #4]
 8003aa2:	2201      	movs	r2, #1
 8003aa4:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8003aa8:	687b      	ldr	r3, [r7, #4]
 8003aaa:	2224      	movs	r2, #36	@ 0x24
 8003aac:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8003ab0:	687b      	ldr	r3, [r7, #4]
 8003ab2:	681b      	ldr	r3, [r3, #0]
 8003ab4:	681a      	ldr	r2, [r3, #0]
 8003ab6:	687b      	ldr	r3, [r7, #4]
 8003ab8:	681b      	ldr	r3, [r3, #0]
 8003aba:	f022 0201 	bic.w	r2, r2, #1
 8003abe:	601a      	str	r2, [r3, #0]
 8003ac0:	687b      	ldr	r3, [r7, #4]
 8003ac2:	681b      	ldr	r3, [r3, #0]
 8003ac4:	681a      	ldr	r2, [r3, #0]
 8003ac6:	687b      	ldr	r3, [r7, #4]
 8003ac8:	681b      	ldr	r3, [r3, #0]
 8003aca:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
 8003ace:	601a      	str	r2, [r3, #0]
 8003ad0:	687b      	ldr	r3, [r7, #4]
 8003ad2:	681b      	ldr	r3, [r3, #0]
 8003ad4:	6819      	ldr	r1, [r3, #0]
 8003ad6:	687b      	ldr	r3, [r7, #4]
 8003ad8:	681b      	ldr	r3, [r3, #0]
 8003ada:	683a      	ldr	r2, [r7, #0]
 8003adc:	430a      	orrs	r2, r1
 8003ade:	601a      	str	r2, [r3, #0]
 8003ae0:	687b      	ldr	r3, [r7, #4]
 8003ae2:	681b      	ldr	r3, [r3, #0]
 8003ae4:	681a      	ldr	r2, [r3, #0]
 8003ae6:	687b      	ldr	r3, [r7, #4]
 8003ae8:	681b      	ldr	r3, [r3, #0]
 8003aea:	f042 0201 	orr.w	r2, r2, #1
 8003aee:	601a      	str	r2, [r3, #0]
 8003af0:	687b      	ldr	r3, [r7, #4]
 8003af2:	2220      	movs	r2, #32
 8003af4:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8003af8:	687b      	ldr	r3, [r7, #4]
 8003afa:	2200      	movs	r2, #0
 8003afc:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8003b00:	2300      	movs	r3, #0
 8003b02:	e000      	b.n	8003b06 <HAL_I2CEx_ConfigAnalogFilter+0x8a>
 8003b04:	2302      	movs	r3, #2
 8003b06:	4618      	mov	r0, r3
 8003b08:	370c      	adds	r7, #12
 8003b0a:	46bd      	mov	sp, r7
 8003b0c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003b10:	4770      	bx	lr

08003b12 <HAL_I2CEx_ConfigDigitalFilter>:
 8003b12:	b480      	push	{r7}
 8003b14:	b085      	sub	sp, #20
 8003b16:	af00      	add	r7, sp, #0
 8003b18:	6078      	str	r0, [r7, #4]
 8003b1a:	6039      	str	r1, [r7, #0]
 8003b1c:	687b      	ldr	r3, [r7, #4]
 8003b1e:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8003b22:	b2db      	uxtb	r3, r3
 8003b24:	2b20      	cmp	r3, #32
 8003b26:	d139      	bne.n	8003b9c <HAL_I2CEx_ConfigDigitalFilter+0x8a>
 8003b28:	687b      	ldr	r3, [r7, #4]
 8003b2a:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 8003b2e:	2b01      	cmp	r3, #1
 8003b30:	d101      	bne.n	8003b36 <HAL_I2CEx_ConfigDigitalFilter+0x24>
 8003b32:	2302      	movs	r3, #2
 8003b34:	e033      	b.n	8003b9e <HAL_I2CEx_ConfigDigitalFilter+0x8c>
 8003b36:	687b      	ldr	r3, [r7, #4]
 8003b38:	2201      	movs	r2, #1
 8003b3a:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8003b3e:	687b      	ldr	r3, [r7, #4]
 8003b40:	2224      	movs	r2, #36	@ 0x24
 8003b42:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8003b46:	687b      	ldr	r3, [r7, #4]
 8003b48:	681b      	ldr	r3, [r3, #0]
 8003b4a:	681a      	ldr	r2, [r3, #0]
 8003b4c:	687b      	ldr	r3, [r7, #4]
 8003b4e:	681b      	ldr	r3, [r3, #0]
 8003b50:	f022 0201 	bic.w	r2, r2, #1
 8003b54:	601a      	str	r2, [r3, #0]
 8003b56:	687b      	ldr	r3, [r7, #4]
 8003b58:	681b      	ldr	r3, [r3, #0]
 8003b5a:	681b      	ldr	r3, [r3, #0]
 8003b5c:	60fb      	str	r3, [r7, #12]
 8003b5e:	68fb      	ldr	r3, [r7, #12]
 8003b60:	f423 6370 	bic.w	r3, r3, #3840	@ 0xf00
 8003b64:	60fb      	str	r3, [r7, #12]
 8003b66:	683b      	ldr	r3, [r7, #0]
 8003b68:	021b      	lsls	r3, r3, #8
 8003b6a:	68fa      	ldr	r2, [r7, #12]
 8003b6c:	4313      	orrs	r3, r2
 8003b6e:	60fb      	str	r3, [r7, #12]
 8003b70:	687b      	ldr	r3, [r7, #4]
 8003b72:	681b      	ldr	r3, [r3, #0]
 8003b74:	68fa      	ldr	r2, [r7, #12]
 8003b76:	601a      	str	r2, [r3, #0]
 8003b78:	687b      	ldr	r3, [r7, #4]
 8003b7a:	681b      	ldr	r3, [r3, #0]
 8003b7c:	681a      	ldr	r2, [r3, #0]
 8003b7e:	687b      	ldr	r3, [r7, #4]
 8003b80:	681b      	ldr	r3, [r3, #0]
 8003b82:	f042 0201 	orr.w	r2, r2, #1
 8003b86:	601a      	str	r2, [r3, #0]
 8003b88:	687b      	ldr	r3, [r7, #4]
 8003b8a:	2220      	movs	r2, #32
 8003b8c:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8003b90:	687b      	ldr	r3, [r7, #4]
 8003b92:	2200      	movs	r2, #0
 8003b94:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8003b98:	2300      	movs	r3, #0
 8003b9a:	e000      	b.n	8003b9e <HAL_I2CEx_ConfigDigitalFilter+0x8c>
 8003b9c:	2302      	movs	r3, #2
 8003b9e:	4618      	mov	r0, r3
 8003ba0:	3714      	adds	r7, #20
 8003ba2:	46bd      	mov	sp, r7
 8003ba4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003ba8:	4770      	bx	lr
	...

08003bac <HAL_RCC_OscConfig>:
 8003bac:	b580      	push	{r7, lr}
 8003bae:	f5ad 7d00 	sub.w	sp, sp, #512	@ 0x200
 8003bb2:	af00      	add	r7, sp, #0
 8003bb4:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8003bb8:	f5a3 73fe 	sub.w	r3, r3, #508	@ 0x1fc
 8003bbc:	6018      	str	r0, [r3, #0]
 8003bbe:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8003bc2:	f5a3 73fe 	sub.w	r3, r3, #508	@ 0x1fc
 8003bc6:	681b      	ldr	r3, [r3, #0]
 8003bc8:	2b00      	cmp	r3, #0
 8003bca:	d102      	bne.n	8003bd2 <HAL_RCC_OscConfig+0x26>
 8003bcc:	2301      	movs	r3, #1
 8003bce:	f001 b823 	b.w	8004c18 <HAL_RCC_OscConfig+0x106c>
 8003bd2:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8003bd6:	f5a3 73fe 	sub.w	r3, r3, #508	@ 0x1fc
 8003bda:	681b      	ldr	r3, [r3, #0]
 8003bdc:	681b      	ldr	r3, [r3, #0]
 8003bde:	f003 0301 	and.w	r3, r3, #1
 8003be2:	2b00      	cmp	r3, #0
 8003be4:	f000 817d 	beq.w	8003ee2 <HAL_RCC_OscConfig+0x336>
 8003be8:	4bbc      	ldr	r3, [pc, #752]	@ (8003edc <HAL_RCC_OscConfig+0x330>)
 8003bea:	685b      	ldr	r3, [r3, #4]
 8003bec:	f003 030c 	and.w	r3, r3, #12
 8003bf0:	2b04      	cmp	r3, #4
 8003bf2:	d00c      	beq.n	8003c0e <HAL_RCC_OscConfig+0x62>
 8003bf4:	4bb9      	ldr	r3, [pc, #740]	@ (8003edc <HAL_RCC_OscConfig+0x330>)
 8003bf6:	685b      	ldr	r3, [r3, #4]
 8003bf8:	f003 030c 	and.w	r3, r3, #12
 8003bfc:	2b08      	cmp	r3, #8
 8003bfe:	d15c      	bne.n	8003cba <HAL_RCC_OscConfig+0x10e>
 8003c00:	4bb6      	ldr	r3, [pc, #728]	@ (8003edc <HAL_RCC_OscConfig+0x330>)
 8003c02:	685b      	ldr	r3, [r3, #4]
 8003c04:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8003c08:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8003c0c:	d155      	bne.n	8003cba <HAL_RCC_OscConfig+0x10e>
 8003c0e:	f44f 3300 	mov.w	r3, #131072	@ 0x20000
 8003c12:	f8c7 31f0 	str.w	r3, [r7, #496]	@ 0x1f0
 8003c16:	f8d7 31f0 	ldr.w	r3, [r7, #496]	@ 0x1f0
 8003c1a:	fa93 f3a3 	rbit	r3, r3
 8003c1e:	f8c7 31ec 	str.w	r3, [r7, #492]	@ 0x1ec
 8003c22:	f8d7 31ec 	ldr.w	r3, [r7, #492]	@ 0x1ec
 8003c26:	fab3 f383 	clz	r3, r3
 8003c2a:	b2db      	uxtb	r3, r3
 8003c2c:	095b      	lsrs	r3, r3, #5
 8003c2e:	b2db      	uxtb	r3, r3
 8003c30:	f043 0301 	orr.w	r3, r3, #1
 8003c34:	b2db      	uxtb	r3, r3
 8003c36:	2b01      	cmp	r3, #1
 8003c38:	d102      	bne.n	8003c40 <HAL_RCC_OscConfig+0x94>
 8003c3a:	4ba8      	ldr	r3, [pc, #672]	@ (8003edc <HAL_RCC_OscConfig+0x330>)
 8003c3c:	681b      	ldr	r3, [r3, #0]
 8003c3e:	e015      	b.n	8003c6c <HAL_RCC_OscConfig+0xc0>
 8003c40:	f44f 3300 	mov.w	r3, #131072	@ 0x20000
 8003c44:	f8c7 31e8 	str.w	r3, [r7, #488]	@ 0x1e8
 8003c48:	f8d7 31e8 	ldr.w	r3, [r7, #488]	@ 0x1e8
 8003c4c:	fa93 f3a3 	rbit	r3, r3
 8003c50:	f8c7 31e4 	str.w	r3, [r7, #484]	@ 0x1e4
 8003c54:	f44f 3300 	mov.w	r3, #131072	@ 0x20000
 8003c58:	f8c7 31e0 	str.w	r3, [r7, #480]	@ 0x1e0
 8003c5c:	f8d7 31e0 	ldr.w	r3, [r7, #480]	@ 0x1e0
 8003c60:	fa93 f3a3 	rbit	r3, r3
 8003c64:	f8c7 31dc 	str.w	r3, [r7, #476]	@ 0x1dc
 8003c68:	4b9c      	ldr	r3, [pc, #624]	@ (8003edc <HAL_RCC_OscConfig+0x330>)
 8003c6a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003c6c:	f44f 3200 	mov.w	r2, #131072	@ 0x20000
 8003c70:	f8c7 21d8 	str.w	r2, [r7, #472]	@ 0x1d8
 8003c74:	f8d7 21d8 	ldr.w	r2, [r7, #472]	@ 0x1d8
 8003c78:	fa92 f2a2 	rbit	r2, r2
 8003c7c:	f8c7 21d4 	str.w	r2, [r7, #468]	@ 0x1d4
 8003c80:	f8d7 21d4 	ldr.w	r2, [r7, #468]	@ 0x1d4
 8003c84:	fab2 f282 	clz	r2, r2
 8003c88:	b2d2      	uxtb	r2, r2
 8003c8a:	f042 0220 	orr.w	r2, r2, #32
 8003c8e:	b2d2      	uxtb	r2, r2
 8003c90:	f002 021f 	and.w	r2, r2, #31
 8003c94:	2101      	movs	r1, #1
 8003c96:	fa01 f202 	lsl.w	r2, r1, r2
 8003c9a:	4013      	ands	r3, r2
 8003c9c:	2b00      	cmp	r3, #0
 8003c9e:	f000 811f 	beq.w	8003ee0 <HAL_RCC_OscConfig+0x334>
 8003ca2:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8003ca6:	f5a3 73fe 	sub.w	r3, r3, #508	@ 0x1fc
 8003caa:	681b      	ldr	r3, [r3, #0]
 8003cac:	685b      	ldr	r3, [r3, #4]
 8003cae:	2b00      	cmp	r3, #0
 8003cb0:	f040 8116 	bne.w	8003ee0 <HAL_RCC_OscConfig+0x334>
 8003cb4:	2301      	movs	r3, #1
 8003cb6:	f000 bfaf 	b.w	8004c18 <HAL_RCC_OscConfig+0x106c>
 8003cba:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8003cbe:	f5a3 73fe 	sub.w	r3, r3, #508	@ 0x1fc
 8003cc2:	681b      	ldr	r3, [r3, #0]
 8003cc4:	685b      	ldr	r3, [r3, #4]
 8003cc6:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8003cca:	d106      	bne.n	8003cda <HAL_RCC_OscConfig+0x12e>
 8003ccc:	4b83      	ldr	r3, [pc, #524]	@ (8003edc <HAL_RCC_OscConfig+0x330>)
 8003cce:	681b      	ldr	r3, [r3, #0]
 8003cd0:	4a82      	ldr	r2, [pc, #520]	@ (8003edc <HAL_RCC_OscConfig+0x330>)
 8003cd2:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8003cd6:	6013      	str	r3, [r2, #0]
 8003cd8:	e036      	b.n	8003d48 <HAL_RCC_OscConfig+0x19c>
 8003cda:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8003cde:	f5a3 73fe 	sub.w	r3, r3, #508	@ 0x1fc
 8003ce2:	681b      	ldr	r3, [r3, #0]
 8003ce4:	685b      	ldr	r3, [r3, #4]
 8003ce6:	2b00      	cmp	r3, #0
 8003ce8:	d10c      	bne.n	8003d04 <HAL_RCC_OscConfig+0x158>
 8003cea:	4b7c      	ldr	r3, [pc, #496]	@ (8003edc <HAL_RCC_OscConfig+0x330>)
 8003cec:	681b      	ldr	r3, [r3, #0]
 8003cee:	4a7b      	ldr	r2, [pc, #492]	@ (8003edc <HAL_RCC_OscConfig+0x330>)
 8003cf0:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8003cf4:	6013      	str	r3, [r2, #0]
 8003cf6:	4b79      	ldr	r3, [pc, #484]	@ (8003edc <HAL_RCC_OscConfig+0x330>)
 8003cf8:	681b      	ldr	r3, [r3, #0]
 8003cfa:	4a78      	ldr	r2, [pc, #480]	@ (8003edc <HAL_RCC_OscConfig+0x330>)
 8003cfc:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8003d00:	6013      	str	r3, [r2, #0]
 8003d02:	e021      	b.n	8003d48 <HAL_RCC_OscConfig+0x19c>
 8003d04:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8003d08:	f5a3 73fe 	sub.w	r3, r3, #508	@ 0x1fc
 8003d0c:	681b      	ldr	r3, [r3, #0]
 8003d0e:	685b      	ldr	r3, [r3, #4]
 8003d10:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8003d14:	d10c      	bne.n	8003d30 <HAL_RCC_OscConfig+0x184>
 8003d16:	4b71      	ldr	r3, [pc, #452]	@ (8003edc <HAL_RCC_OscConfig+0x330>)
 8003d18:	681b      	ldr	r3, [r3, #0]
 8003d1a:	4a70      	ldr	r2, [pc, #448]	@ (8003edc <HAL_RCC_OscConfig+0x330>)
 8003d1c:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8003d20:	6013      	str	r3, [r2, #0]
 8003d22:	4b6e      	ldr	r3, [pc, #440]	@ (8003edc <HAL_RCC_OscConfig+0x330>)
 8003d24:	681b      	ldr	r3, [r3, #0]
 8003d26:	4a6d      	ldr	r2, [pc, #436]	@ (8003edc <HAL_RCC_OscConfig+0x330>)
 8003d28:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8003d2c:	6013      	str	r3, [r2, #0]
 8003d2e:	e00b      	b.n	8003d48 <HAL_RCC_OscConfig+0x19c>
 8003d30:	4b6a      	ldr	r3, [pc, #424]	@ (8003edc <HAL_RCC_OscConfig+0x330>)
 8003d32:	681b      	ldr	r3, [r3, #0]
 8003d34:	4a69      	ldr	r2, [pc, #420]	@ (8003edc <HAL_RCC_OscConfig+0x330>)
 8003d36:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8003d3a:	6013      	str	r3, [r2, #0]
 8003d3c:	4b67      	ldr	r3, [pc, #412]	@ (8003edc <HAL_RCC_OscConfig+0x330>)
 8003d3e:	681b      	ldr	r3, [r3, #0]
 8003d40:	4a66      	ldr	r2, [pc, #408]	@ (8003edc <HAL_RCC_OscConfig+0x330>)
 8003d42:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8003d46:	6013      	str	r3, [r2, #0]
 8003d48:	4b64      	ldr	r3, [pc, #400]	@ (8003edc <HAL_RCC_OscConfig+0x330>)
 8003d4a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003d4c:	f023 020f 	bic.w	r2, r3, #15
 8003d50:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8003d54:	f5a3 73fe 	sub.w	r3, r3, #508	@ 0x1fc
 8003d58:	681b      	ldr	r3, [r3, #0]
 8003d5a:	689b      	ldr	r3, [r3, #8]
 8003d5c:	495f      	ldr	r1, [pc, #380]	@ (8003edc <HAL_RCC_OscConfig+0x330>)
 8003d5e:	4313      	orrs	r3, r2
 8003d60:	62cb      	str	r3, [r1, #44]	@ 0x2c
 8003d62:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8003d66:	f5a3 73fe 	sub.w	r3, r3, #508	@ 0x1fc
 8003d6a:	681b      	ldr	r3, [r3, #0]
 8003d6c:	685b      	ldr	r3, [r3, #4]
 8003d6e:	2b00      	cmp	r3, #0
 8003d70:	d059      	beq.n	8003e26 <HAL_RCC_OscConfig+0x27a>
 8003d72:	f7fe fdaf 	bl	80028d4 <HAL_GetTick>
 8003d76:	f8c7 01f8 	str.w	r0, [r7, #504]	@ 0x1f8
 8003d7a:	e00a      	b.n	8003d92 <HAL_RCC_OscConfig+0x1e6>
 8003d7c:	f7fe fdaa 	bl	80028d4 <HAL_GetTick>
 8003d80:	4602      	mov	r2, r0
 8003d82:	f8d7 31f8 	ldr.w	r3, [r7, #504]	@ 0x1f8
 8003d86:	1ad3      	subs	r3, r2, r3
 8003d88:	2b64      	cmp	r3, #100	@ 0x64
 8003d8a:	d902      	bls.n	8003d92 <HAL_RCC_OscConfig+0x1e6>
 8003d8c:	2303      	movs	r3, #3
 8003d8e:	f000 bf43 	b.w	8004c18 <HAL_RCC_OscConfig+0x106c>
 8003d92:	f44f 3300 	mov.w	r3, #131072	@ 0x20000
 8003d96:	f8c7 31d0 	str.w	r3, [r7, #464]	@ 0x1d0
 8003d9a:	f8d7 31d0 	ldr.w	r3, [r7, #464]	@ 0x1d0
 8003d9e:	fa93 f3a3 	rbit	r3, r3
 8003da2:	f8c7 31cc 	str.w	r3, [r7, #460]	@ 0x1cc
 8003da6:	f8d7 31cc 	ldr.w	r3, [r7, #460]	@ 0x1cc
 8003daa:	fab3 f383 	clz	r3, r3
 8003dae:	b2db      	uxtb	r3, r3
 8003db0:	095b      	lsrs	r3, r3, #5
 8003db2:	b2db      	uxtb	r3, r3
 8003db4:	f043 0301 	orr.w	r3, r3, #1
 8003db8:	b2db      	uxtb	r3, r3
 8003dba:	2b01      	cmp	r3, #1
 8003dbc:	d102      	bne.n	8003dc4 <HAL_RCC_OscConfig+0x218>
 8003dbe:	4b47      	ldr	r3, [pc, #284]	@ (8003edc <HAL_RCC_OscConfig+0x330>)
 8003dc0:	681b      	ldr	r3, [r3, #0]
 8003dc2:	e015      	b.n	8003df0 <HAL_RCC_OscConfig+0x244>
 8003dc4:	f44f 3300 	mov.w	r3, #131072	@ 0x20000
 8003dc8:	f8c7 31c8 	str.w	r3, [r7, #456]	@ 0x1c8
 8003dcc:	f8d7 31c8 	ldr.w	r3, [r7, #456]	@ 0x1c8
 8003dd0:	fa93 f3a3 	rbit	r3, r3
 8003dd4:	f8c7 31c4 	str.w	r3, [r7, #452]	@ 0x1c4
 8003dd8:	f44f 3300 	mov.w	r3, #131072	@ 0x20000
 8003ddc:	f8c7 31c0 	str.w	r3, [r7, #448]	@ 0x1c0
 8003de0:	f8d7 31c0 	ldr.w	r3, [r7, #448]	@ 0x1c0
 8003de4:	fa93 f3a3 	rbit	r3, r3
 8003de8:	f8c7 31bc 	str.w	r3, [r7, #444]	@ 0x1bc
 8003dec:	4b3b      	ldr	r3, [pc, #236]	@ (8003edc <HAL_RCC_OscConfig+0x330>)
 8003dee:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003df0:	f44f 3200 	mov.w	r2, #131072	@ 0x20000
 8003df4:	f8c7 21b8 	str.w	r2, [r7, #440]	@ 0x1b8
 8003df8:	f8d7 21b8 	ldr.w	r2, [r7, #440]	@ 0x1b8
 8003dfc:	fa92 f2a2 	rbit	r2, r2
 8003e00:	f8c7 21b4 	str.w	r2, [r7, #436]	@ 0x1b4
 8003e04:	f8d7 21b4 	ldr.w	r2, [r7, #436]	@ 0x1b4
 8003e08:	fab2 f282 	clz	r2, r2
 8003e0c:	b2d2      	uxtb	r2, r2
 8003e0e:	f042 0220 	orr.w	r2, r2, #32
 8003e12:	b2d2      	uxtb	r2, r2
 8003e14:	f002 021f 	and.w	r2, r2, #31
 8003e18:	2101      	movs	r1, #1
 8003e1a:	fa01 f202 	lsl.w	r2, r1, r2
 8003e1e:	4013      	ands	r3, r2
 8003e20:	2b00      	cmp	r3, #0
 8003e22:	d0ab      	beq.n	8003d7c <HAL_RCC_OscConfig+0x1d0>
 8003e24:	e05d      	b.n	8003ee2 <HAL_RCC_OscConfig+0x336>
 8003e26:	f7fe fd55 	bl	80028d4 <HAL_GetTick>
 8003e2a:	f8c7 01f8 	str.w	r0, [r7, #504]	@ 0x1f8
 8003e2e:	e00a      	b.n	8003e46 <HAL_RCC_OscConfig+0x29a>
 8003e30:	f7fe fd50 	bl	80028d4 <HAL_GetTick>
 8003e34:	4602      	mov	r2, r0
 8003e36:	f8d7 31f8 	ldr.w	r3, [r7, #504]	@ 0x1f8
 8003e3a:	1ad3      	subs	r3, r2, r3
 8003e3c:	2b64      	cmp	r3, #100	@ 0x64
 8003e3e:	d902      	bls.n	8003e46 <HAL_RCC_OscConfig+0x29a>
 8003e40:	2303      	movs	r3, #3
 8003e42:	f000 bee9 	b.w	8004c18 <HAL_RCC_OscConfig+0x106c>
 8003e46:	f44f 3300 	mov.w	r3, #131072	@ 0x20000
 8003e4a:	f8c7 31b0 	str.w	r3, [r7, #432]	@ 0x1b0
 8003e4e:	f8d7 31b0 	ldr.w	r3, [r7, #432]	@ 0x1b0
 8003e52:	fa93 f3a3 	rbit	r3, r3
 8003e56:	f8c7 31ac 	str.w	r3, [r7, #428]	@ 0x1ac
 8003e5a:	f8d7 31ac 	ldr.w	r3, [r7, #428]	@ 0x1ac
 8003e5e:	fab3 f383 	clz	r3, r3
 8003e62:	b2db      	uxtb	r3, r3
 8003e64:	095b      	lsrs	r3, r3, #5
 8003e66:	b2db      	uxtb	r3, r3
 8003e68:	f043 0301 	orr.w	r3, r3, #1
 8003e6c:	b2db      	uxtb	r3, r3
 8003e6e:	2b01      	cmp	r3, #1
 8003e70:	d102      	bne.n	8003e78 <HAL_RCC_OscConfig+0x2cc>
 8003e72:	4b1a      	ldr	r3, [pc, #104]	@ (8003edc <HAL_RCC_OscConfig+0x330>)
 8003e74:	681b      	ldr	r3, [r3, #0]
 8003e76:	e015      	b.n	8003ea4 <HAL_RCC_OscConfig+0x2f8>
 8003e78:	f44f 3300 	mov.w	r3, #131072	@ 0x20000
 8003e7c:	f8c7 31a8 	str.w	r3, [r7, #424]	@ 0x1a8
 8003e80:	f8d7 31a8 	ldr.w	r3, [r7, #424]	@ 0x1a8
 8003e84:	fa93 f3a3 	rbit	r3, r3
 8003e88:	f8c7 31a4 	str.w	r3, [r7, #420]	@ 0x1a4
 8003e8c:	f44f 3300 	mov.w	r3, #131072	@ 0x20000
 8003e90:	f8c7 31a0 	str.w	r3, [r7, #416]	@ 0x1a0
 8003e94:	f8d7 31a0 	ldr.w	r3, [r7, #416]	@ 0x1a0
 8003e98:	fa93 f3a3 	rbit	r3, r3
 8003e9c:	f8c7 319c 	str.w	r3, [r7, #412]	@ 0x19c
 8003ea0:	4b0e      	ldr	r3, [pc, #56]	@ (8003edc <HAL_RCC_OscConfig+0x330>)
 8003ea2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003ea4:	f44f 3200 	mov.w	r2, #131072	@ 0x20000
 8003ea8:	f8c7 2198 	str.w	r2, [r7, #408]	@ 0x198
 8003eac:	f8d7 2198 	ldr.w	r2, [r7, #408]	@ 0x198
 8003eb0:	fa92 f2a2 	rbit	r2, r2
 8003eb4:	f8c7 2194 	str.w	r2, [r7, #404]	@ 0x194
 8003eb8:	f8d7 2194 	ldr.w	r2, [r7, #404]	@ 0x194
 8003ebc:	fab2 f282 	clz	r2, r2
 8003ec0:	b2d2      	uxtb	r2, r2
 8003ec2:	f042 0220 	orr.w	r2, r2, #32
 8003ec6:	b2d2      	uxtb	r2, r2
 8003ec8:	f002 021f 	and.w	r2, r2, #31
 8003ecc:	2101      	movs	r1, #1
 8003ece:	fa01 f202 	lsl.w	r2, r1, r2
 8003ed2:	4013      	ands	r3, r2
 8003ed4:	2b00      	cmp	r3, #0
 8003ed6:	d1ab      	bne.n	8003e30 <HAL_RCC_OscConfig+0x284>
 8003ed8:	e003      	b.n	8003ee2 <HAL_RCC_OscConfig+0x336>
 8003eda:	bf00      	nop
 8003edc:	40021000 	.word	0x40021000
 8003ee0:	bf00      	nop
 8003ee2:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8003ee6:	f5a3 73fe 	sub.w	r3, r3, #508	@ 0x1fc
 8003eea:	681b      	ldr	r3, [r3, #0]
 8003eec:	681b      	ldr	r3, [r3, #0]
 8003eee:	f003 0302 	and.w	r3, r3, #2
 8003ef2:	2b00      	cmp	r3, #0
 8003ef4:	f000 817d 	beq.w	80041f2 <HAL_RCC_OscConfig+0x646>
 8003ef8:	4ba6      	ldr	r3, [pc, #664]	@ (8004194 <HAL_RCC_OscConfig+0x5e8>)
 8003efa:	685b      	ldr	r3, [r3, #4]
 8003efc:	f003 030c 	and.w	r3, r3, #12
 8003f00:	2b00      	cmp	r3, #0
 8003f02:	d00b      	beq.n	8003f1c <HAL_RCC_OscConfig+0x370>
 8003f04:	4ba3      	ldr	r3, [pc, #652]	@ (8004194 <HAL_RCC_OscConfig+0x5e8>)
 8003f06:	685b      	ldr	r3, [r3, #4]
 8003f08:	f003 030c 	and.w	r3, r3, #12
 8003f0c:	2b08      	cmp	r3, #8
 8003f0e:	d172      	bne.n	8003ff6 <HAL_RCC_OscConfig+0x44a>
 8003f10:	4ba0      	ldr	r3, [pc, #640]	@ (8004194 <HAL_RCC_OscConfig+0x5e8>)
 8003f12:	685b      	ldr	r3, [r3, #4]
 8003f14:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8003f18:	2b00      	cmp	r3, #0
 8003f1a:	d16c      	bne.n	8003ff6 <HAL_RCC_OscConfig+0x44a>
 8003f1c:	2302      	movs	r3, #2
 8003f1e:	f8c7 3190 	str.w	r3, [r7, #400]	@ 0x190
 8003f22:	f8d7 3190 	ldr.w	r3, [r7, #400]	@ 0x190
 8003f26:	fa93 f3a3 	rbit	r3, r3
 8003f2a:	f8c7 318c 	str.w	r3, [r7, #396]	@ 0x18c
 8003f2e:	f8d7 318c 	ldr.w	r3, [r7, #396]	@ 0x18c
 8003f32:	fab3 f383 	clz	r3, r3
 8003f36:	b2db      	uxtb	r3, r3
 8003f38:	095b      	lsrs	r3, r3, #5
 8003f3a:	b2db      	uxtb	r3, r3
 8003f3c:	f043 0301 	orr.w	r3, r3, #1
 8003f40:	b2db      	uxtb	r3, r3
 8003f42:	2b01      	cmp	r3, #1
 8003f44:	d102      	bne.n	8003f4c <HAL_RCC_OscConfig+0x3a0>
 8003f46:	4b93      	ldr	r3, [pc, #588]	@ (8004194 <HAL_RCC_OscConfig+0x5e8>)
 8003f48:	681b      	ldr	r3, [r3, #0]
 8003f4a:	e013      	b.n	8003f74 <HAL_RCC_OscConfig+0x3c8>
 8003f4c:	2302      	movs	r3, #2
 8003f4e:	f8c7 3188 	str.w	r3, [r7, #392]	@ 0x188
 8003f52:	f8d7 3188 	ldr.w	r3, [r7, #392]	@ 0x188
 8003f56:	fa93 f3a3 	rbit	r3, r3
 8003f5a:	f8c7 3184 	str.w	r3, [r7, #388]	@ 0x184
 8003f5e:	2302      	movs	r3, #2
 8003f60:	f8c7 3180 	str.w	r3, [r7, #384]	@ 0x180
 8003f64:	f8d7 3180 	ldr.w	r3, [r7, #384]	@ 0x180
 8003f68:	fa93 f3a3 	rbit	r3, r3
 8003f6c:	f8c7 317c 	str.w	r3, [r7, #380]	@ 0x17c
 8003f70:	4b88      	ldr	r3, [pc, #544]	@ (8004194 <HAL_RCC_OscConfig+0x5e8>)
 8003f72:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003f74:	2202      	movs	r2, #2
 8003f76:	f8c7 2178 	str.w	r2, [r7, #376]	@ 0x178
 8003f7a:	f8d7 2178 	ldr.w	r2, [r7, #376]	@ 0x178
 8003f7e:	fa92 f2a2 	rbit	r2, r2
 8003f82:	f8c7 2174 	str.w	r2, [r7, #372]	@ 0x174
 8003f86:	f8d7 2174 	ldr.w	r2, [r7, #372]	@ 0x174
 8003f8a:	fab2 f282 	clz	r2, r2
 8003f8e:	b2d2      	uxtb	r2, r2
 8003f90:	f042 0220 	orr.w	r2, r2, #32
 8003f94:	b2d2      	uxtb	r2, r2
 8003f96:	f002 021f 	and.w	r2, r2, #31
 8003f9a:	2101      	movs	r1, #1
 8003f9c:	fa01 f202 	lsl.w	r2, r1, r2
 8003fa0:	4013      	ands	r3, r2
 8003fa2:	2b00      	cmp	r3, #0
 8003fa4:	d00a      	beq.n	8003fbc <HAL_RCC_OscConfig+0x410>
 8003fa6:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8003faa:	f5a3 73fe 	sub.w	r3, r3, #508	@ 0x1fc
 8003fae:	681b      	ldr	r3, [r3, #0]
 8003fb0:	691b      	ldr	r3, [r3, #16]
 8003fb2:	2b01      	cmp	r3, #1
 8003fb4:	d002      	beq.n	8003fbc <HAL_RCC_OscConfig+0x410>
 8003fb6:	2301      	movs	r3, #1
 8003fb8:	f000 be2e 	b.w	8004c18 <HAL_RCC_OscConfig+0x106c>
 8003fbc:	4b75      	ldr	r3, [pc, #468]	@ (8004194 <HAL_RCC_OscConfig+0x5e8>)
 8003fbe:	681b      	ldr	r3, [r3, #0]
 8003fc0:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8003fc4:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8003fc8:	f5a3 73fe 	sub.w	r3, r3, #508	@ 0x1fc
 8003fcc:	681b      	ldr	r3, [r3, #0]
 8003fce:	695b      	ldr	r3, [r3, #20]
 8003fd0:	21f8      	movs	r1, #248	@ 0xf8
 8003fd2:	f8c7 1170 	str.w	r1, [r7, #368]	@ 0x170
 8003fd6:	f8d7 1170 	ldr.w	r1, [r7, #368]	@ 0x170
 8003fda:	fa91 f1a1 	rbit	r1, r1
 8003fde:	f8c7 116c 	str.w	r1, [r7, #364]	@ 0x16c
 8003fe2:	f8d7 116c 	ldr.w	r1, [r7, #364]	@ 0x16c
 8003fe6:	fab1 f181 	clz	r1, r1
 8003fea:	b2c9      	uxtb	r1, r1
 8003fec:	408b      	lsls	r3, r1
 8003fee:	4969      	ldr	r1, [pc, #420]	@ (8004194 <HAL_RCC_OscConfig+0x5e8>)
 8003ff0:	4313      	orrs	r3, r2
 8003ff2:	600b      	str	r3, [r1, #0]
 8003ff4:	e0fd      	b.n	80041f2 <HAL_RCC_OscConfig+0x646>
 8003ff6:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8003ffa:	f5a3 73fe 	sub.w	r3, r3, #508	@ 0x1fc
 8003ffe:	681b      	ldr	r3, [r3, #0]
 8004000:	691b      	ldr	r3, [r3, #16]
 8004002:	2b00      	cmp	r3, #0
 8004004:	f000 8088 	beq.w	8004118 <HAL_RCC_OscConfig+0x56c>
 8004008:	2301      	movs	r3, #1
 800400a:	f8c7 3168 	str.w	r3, [r7, #360]	@ 0x168
 800400e:	f8d7 3168 	ldr.w	r3, [r7, #360]	@ 0x168
 8004012:	fa93 f3a3 	rbit	r3, r3
 8004016:	f8c7 3164 	str.w	r3, [r7, #356]	@ 0x164
 800401a:	f8d7 3164 	ldr.w	r3, [r7, #356]	@ 0x164
 800401e:	fab3 f383 	clz	r3, r3
 8004022:	b2db      	uxtb	r3, r3
 8004024:	f103 5384 	add.w	r3, r3, #276824064	@ 0x10800000
 8004028:	f503 1384 	add.w	r3, r3, #1081344	@ 0x108000
 800402c:	009b      	lsls	r3, r3, #2
 800402e:	461a      	mov	r2, r3
 8004030:	2301      	movs	r3, #1
 8004032:	6013      	str	r3, [r2, #0]
 8004034:	f7fe fc4e 	bl	80028d4 <HAL_GetTick>
 8004038:	f8c7 01f8 	str.w	r0, [r7, #504]	@ 0x1f8
 800403c:	e00a      	b.n	8004054 <HAL_RCC_OscConfig+0x4a8>
 800403e:	f7fe fc49 	bl	80028d4 <HAL_GetTick>
 8004042:	4602      	mov	r2, r0
 8004044:	f8d7 31f8 	ldr.w	r3, [r7, #504]	@ 0x1f8
 8004048:	1ad3      	subs	r3, r2, r3
 800404a:	2b02      	cmp	r3, #2
 800404c:	d902      	bls.n	8004054 <HAL_RCC_OscConfig+0x4a8>
 800404e:	2303      	movs	r3, #3
 8004050:	f000 bde2 	b.w	8004c18 <HAL_RCC_OscConfig+0x106c>
 8004054:	2302      	movs	r3, #2
 8004056:	f8c7 3160 	str.w	r3, [r7, #352]	@ 0x160
 800405a:	f8d7 3160 	ldr.w	r3, [r7, #352]	@ 0x160
 800405e:	fa93 f3a3 	rbit	r3, r3
 8004062:	f8c7 315c 	str.w	r3, [r7, #348]	@ 0x15c
 8004066:	f8d7 315c 	ldr.w	r3, [r7, #348]	@ 0x15c
 800406a:	fab3 f383 	clz	r3, r3
 800406e:	b2db      	uxtb	r3, r3
 8004070:	095b      	lsrs	r3, r3, #5
 8004072:	b2db      	uxtb	r3, r3
 8004074:	f043 0301 	orr.w	r3, r3, #1
 8004078:	b2db      	uxtb	r3, r3
 800407a:	2b01      	cmp	r3, #1
 800407c:	d102      	bne.n	8004084 <HAL_RCC_OscConfig+0x4d8>
 800407e:	4b45      	ldr	r3, [pc, #276]	@ (8004194 <HAL_RCC_OscConfig+0x5e8>)
 8004080:	681b      	ldr	r3, [r3, #0]
 8004082:	e013      	b.n	80040ac <HAL_RCC_OscConfig+0x500>
 8004084:	2302      	movs	r3, #2
 8004086:	f8c7 3158 	str.w	r3, [r7, #344]	@ 0x158
 800408a:	f8d7 3158 	ldr.w	r3, [r7, #344]	@ 0x158
 800408e:	fa93 f3a3 	rbit	r3, r3
 8004092:	f8c7 3154 	str.w	r3, [r7, #340]	@ 0x154
 8004096:	2302      	movs	r3, #2
 8004098:	f8c7 3150 	str.w	r3, [r7, #336]	@ 0x150
 800409c:	f8d7 3150 	ldr.w	r3, [r7, #336]	@ 0x150
 80040a0:	fa93 f3a3 	rbit	r3, r3
 80040a4:	f8c7 314c 	str.w	r3, [r7, #332]	@ 0x14c
 80040a8:	4b3a      	ldr	r3, [pc, #232]	@ (8004194 <HAL_RCC_OscConfig+0x5e8>)
 80040aa:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80040ac:	2202      	movs	r2, #2
 80040ae:	f8c7 2148 	str.w	r2, [r7, #328]	@ 0x148
 80040b2:	f8d7 2148 	ldr.w	r2, [r7, #328]	@ 0x148
 80040b6:	fa92 f2a2 	rbit	r2, r2
 80040ba:	f8c7 2144 	str.w	r2, [r7, #324]	@ 0x144
 80040be:	f8d7 2144 	ldr.w	r2, [r7, #324]	@ 0x144
 80040c2:	fab2 f282 	clz	r2, r2
 80040c6:	b2d2      	uxtb	r2, r2
 80040c8:	f042 0220 	orr.w	r2, r2, #32
 80040cc:	b2d2      	uxtb	r2, r2
 80040ce:	f002 021f 	and.w	r2, r2, #31
 80040d2:	2101      	movs	r1, #1
 80040d4:	fa01 f202 	lsl.w	r2, r1, r2
 80040d8:	4013      	ands	r3, r2
 80040da:	2b00      	cmp	r3, #0
 80040dc:	d0af      	beq.n	800403e <HAL_RCC_OscConfig+0x492>
 80040de:	4b2d      	ldr	r3, [pc, #180]	@ (8004194 <HAL_RCC_OscConfig+0x5e8>)
 80040e0:	681b      	ldr	r3, [r3, #0]
 80040e2:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 80040e6:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80040ea:	f5a3 73fe 	sub.w	r3, r3, #508	@ 0x1fc
 80040ee:	681b      	ldr	r3, [r3, #0]
 80040f0:	695b      	ldr	r3, [r3, #20]
 80040f2:	21f8      	movs	r1, #248	@ 0xf8
 80040f4:	f8c7 1140 	str.w	r1, [r7, #320]	@ 0x140
 80040f8:	f8d7 1140 	ldr.w	r1, [r7, #320]	@ 0x140
 80040fc:	fa91 f1a1 	rbit	r1, r1
 8004100:	f8c7 113c 	str.w	r1, [r7, #316]	@ 0x13c
 8004104:	f8d7 113c 	ldr.w	r1, [r7, #316]	@ 0x13c
 8004108:	fab1 f181 	clz	r1, r1
 800410c:	b2c9      	uxtb	r1, r1
 800410e:	408b      	lsls	r3, r1
 8004110:	4920      	ldr	r1, [pc, #128]	@ (8004194 <HAL_RCC_OscConfig+0x5e8>)
 8004112:	4313      	orrs	r3, r2
 8004114:	600b      	str	r3, [r1, #0]
 8004116:	e06c      	b.n	80041f2 <HAL_RCC_OscConfig+0x646>
 8004118:	2301      	movs	r3, #1
 800411a:	f8c7 3138 	str.w	r3, [r7, #312]	@ 0x138
 800411e:	f8d7 3138 	ldr.w	r3, [r7, #312]	@ 0x138
 8004122:	fa93 f3a3 	rbit	r3, r3
 8004126:	f8c7 3134 	str.w	r3, [r7, #308]	@ 0x134
 800412a:	f8d7 3134 	ldr.w	r3, [r7, #308]	@ 0x134
 800412e:	fab3 f383 	clz	r3, r3
 8004132:	b2db      	uxtb	r3, r3
 8004134:	f103 5384 	add.w	r3, r3, #276824064	@ 0x10800000
 8004138:	f503 1384 	add.w	r3, r3, #1081344	@ 0x108000
 800413c:	009b      	lsls	r3, r3, #2
 800413e:	461a      	mov	r2, r3
 8004140:	2300      	movs	r3, #0
 8004142:	6013      	str	r3, [r2, #0]
 8004144:	f7fe fbc6 	bl	80028d4 <HAL_GetTick>
 8004148:	f8c7 01f8 	str.w	r0, [r7, #504]	@ 0x1f8
 800414c:	e00a      	b.n	8004164 <HAL_RCC_OscConfig+0x5b8>
 800414e:	f7fe fbc1 	bl	80028d4 <HAL_GetTick>
 8004152:	4602      	mov	r2, r0
 8004154:	f8d7 31f8 	ldr.w	r3, [r7, #504]	@ 0x1f8
 8004158:	1ad3      	subs	r3, r2, r3
 800415a:	2b02      	cmp	r3, #2
 800415c:	d902      	bls.n	8004164 <HAL_RCC_OscConfig+0x5b8>
 800415e:	2303      	movs	r3, #3
 8004160:	f000 bd5a 	b.w	8004c18 <HAL_RCC_OscConfig+0x106c>
 8004164:	2302      	movs	r3, #2
 8004166:	f8c7 3130 	str.w	r3, [r7, #304]	@ 0x130
 800416a:	f8d7 3130 	ldr.w	r3, [r7, #304]	@ 0x130
 800416e:	fa93 f3a3 	rbit	r3, r3
 8004172:	f8c7 312c 	str.w	r3, [r7, #300]	@ 0x12c
 8004176:	f8d7 312c 	ldr.w	r3, [r7, #300]	@ 0x12c
 800417a:	fab3 f383 	clz	r3, r3
 800417e:	b2db      	uxtb	r3, r3
 8004180:	095b      	lsrs	r3, r3, #5
 8004182:	b2db      	uxtb	r3, r3
 8004184:	f043 0301 	orr.w	r3, r3, #1
 8004188:	b2db      	uxtb	r3, r3
 800418a:	2b01      	cmp	r3, #1
 800418c:	d104      	bne.n	8004198 <HAL_RCC_OscConfig+0x5ec>
 800418e:	4b01      	ldr	r3, [pc, #4]	@ (8004194 <HAL_RCC_OscConfig+0x5e8>)
 8004190:	681b      	ldr	r3, [r3, #0]
 8004192:	e015      	b.n	80041c0 <HAL_RCC_OscConfig+0x614>
 8004194:	40021000 	.word	0x40021000
 8004198:	2302      	movs	r3, #2
 800419a:	f8c7 3128 	str.w	r3, [r7, #296]	@ 0x128
 800419e:	f8d7 3128 	ldr.w	r3, [r7, #296]	@ 0x128
 80041a2:	fa93 f3a3 	rbit	r3, r3
 80041a6:	f8c7 3124 	str.w	r3, [r7, #292]	@ 0x124
 80041aa:	2302      	movs	r3, #2
 80041ac:	f8c7 3120 	str.w	r3, [r7, #288]	@ 0x120
 80041b0:	f8d7 3120 	ldr.w	r3, [r7, #288]	@ 0x120
 80041b4:	fa93 f3a3 	rbit	r3, r3
 80041b8:	f8c7 311c 	str.w	r3, [r7, #284]	@ 0x11c
 80041bc:	4bc8      	ldr	r3, [pc, #800]	@ (80044e0 <HAL_RCC_OscConfig+0x934>)
 80041be:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80041c0:	2202      	movs	r2, #2
 80041c2:	f8c7 2118 	str.w	r2, [r7, #280]	@ 0x118
 80041c6:	f8d7 2118 	ldr.w	r2, [r7, #280]	@ 0x118
 80041ca:	fa92 f2a2 	rbit	r2, r2
 80041ce:	f8c7 2114 	str.w	r2, [r7, #276]	@ 0x114
 80041d2:	f8d7 2114 	ldr.w	r2, [r7, #276]	@ 0x114
 80041d6:	fab2 f282 	clz	r2, r2
 80041da:	b2d2      	uxtb	r2, r2
 80041dc:	f042 0220 	orr.w	r2, r2, #32
 80041e0:	b2d2      	uxtb	r2, r2
 80041e2:	f002 021f 	and.w	r2, r2, #31
 80041e6:	2101      	movs	r1, #1
 80041e8:	fa01 f202 	lsl.w	r2, r1, r2
 80041ec:	4013      	ands	r3, r2
 80041ee:	2b00      	cmp	r3, #0
 80041f0:	d1ad      	bne.n	800414e <HAL_RCC_OscConfig+0x5a2>
 80041f2:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80041f6:	f5a3 73fe 	sub.w	r3, r3, #508	@ 0x1fc
 80041fa:	681b      	ldr	r3, [r3, #0]
 80041fc:	681b      	ldr	r3, [r3, #0]
 80041fe:	f003 0308 	and.w	r3, r3, #8
 8004202:	2b00      	cmp	r3, #0
 8004204:	f000 8110 	beq.w	8004428 <HAL_RCC_OscConfig+0x87c>
 8004208:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 800420c:	f5a3 73fe 	sub.w	r3, r3, #508	@ 0x1fc
 8004210:	681b      	ldr	r3, [r3, #0]
 8004212:	699b      	ldr	r3, [r3, #24]
 8004214:	2b00      	cmp	r3, #0
 8004216:	d079      	beq.n	800430c <HAL_RCC_OscConfig+0x760>
 8004218:	2301      	movs	r3, #1
 800421a:	f8c7 3110 	str.w	r3, [r7, #272]	@ 0x110
 800421e:	f8d7 3110 	ldr.w	r3, [r7, #272]	@ 0x110
 8004222:	fa93 f3a3 	rbit	r3, r3
 8004226:	f8c7 310c 	str.w	r3, [r7, #268]	@ 0x10c
 800422a:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 800422e:	fab3 f383 	clz	r3, r3
 8004232:	b2db      	uxtb	r3, r3
 8004234:	461a      	mov	r2, r3
 8004236:	4bab      	ldr	r3, [pc, #684]	@ (80044e4 <HAL_RCC_OscConfig+0x938>)
 8004238:	4413      	add	r3, r2
 800423a:	009b      	lsls	r3, r3, #2
 800423c:	461a      	mov	r2, r3
 800423e:	2301      	movs	r3, #1
 8004240:	6013      	str	r3, [r2, #0]
 8004242:	f7fe fb47 	bl	80028d4 <HAL_GetTick>
 8004246:	f8c7 01f8 	str.w	r0, [r7, #504]	@ 0x1f8
 800424a:	e00a      	b.n	8004262 <HAL_RCC_OscConfig+0x6b6>
 800424c:	f7fe fb42 	bl	80028d4 <HAL_GetTick>
 8004250:	4602      	mov	r2, r0
 8004252:	f8d7 31f8 	ldr.w	r3, [r7, #504]	@ 0x1f8
 8004256:	1ad3      	subs	r3, r2, r3
 8004258:	2b02      	cmp	r3, #2
 800425a:	d902      	bls.n	8004262 <HAL_RCC_OscConfig+0x6b6>
 800425c:	2303      	movs	r3, #3
 800425e:	f000 bcdb 	b.w	8004c18 <HAL_RCC_OscConfig+0x106c>
 8004262:	2302      	movs	r3, #2
 8004264:	f8c7 3108 	str.w	r3, [r7, #264]	@ 0x108
 8004268:	f8d7 3108 	ldr.w	r3, [r7, #264]	@ 0x108
 800426c:	fa93 f3a3 	rbit	r3, r3
 8004270:	f8c7 3104 	str.w	r3, [r7, #260]	@ 0x104
 8004274:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004278:	f5a3 7380 	sub.w	r3, r3, #256	@ 0x100
 800427c:	2202      	movs	r2, #2
 800427e:	601a      	str	r2, [r3, #0]
 8004280:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004284:	f5a3 7380 	sub.w	r3, r3, #256	@ 0x100
 8004288:	681b      	ldr	r3, [r3, #0]
 800428a:	fa93 f2a3 	rbit	r2, r3
 800428e:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004292:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 8004296:	601a      	str	r2, [r3, #0]
 8004298:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 800429c:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 80042a0:	2202      	movs	r2, #2
 80042a2:	601a      	str	r2, [r3, #0]
 80042a4:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80042a8:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 80042ac:	681b      	ldr	r3, [r3, #0]
 80042ae:	fa93 f2a3 	rbit	r2, r3
 80042b2:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80042b6:	f5a3 7386 	sub.w	r3, r3, #268	@ 0x10c
 80042ba:	601a      	str	r2, [r3, #0]
 80042bc:	4b88      	ldr	r3, [pc, #544]	@ (80044e0 <HAL_RCC_OscConfig+0x934>)
 80042be:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 80042c0:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80042c4:	f5a3 7388 	sub.w	r3, r3, #272	@ 0x110
 80042c8:	2102      	movs	r1, #2
 80042ca:	6019      	str	r1, [r3, #0]
 80042cc:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80042d0:	f5a3 7388 	sub.w	r3, r3, #272	@ 0x110
 80042d4:	681b      	ldr	r3, [r3, #0]
 80042d6:	fa93 f1a3 	rbit	r1, r3
 80042da:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80042de:	f5a3 738a 	sub.w	r3, r3, #276	@ 0x114
 80042e2:	6019      	str	r1, [r3, #0]
 80042e4:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80042e8:	f5a3 738a 	sub.w	r3, r3, #276	@ 0x114
 80042ec:	681b      	ldr	r3, [r3, #0]
 80042ee:	fab3 f383 	clz	r3, r3
 80042f2:	b2db      	uxtb	r3, r3
 80042f4:	f043 0360 	orr.w	r3, r3, #96	@ 0x60
 80042f8:	b2db      	uxtb	r3, r3
 80042fa:	f003 031f 	and.w	r3, r3, #31
 80042fe:	2101      	movs	r1, #1
 8004300:	fa01 f303 	lsl.w	r3, r1, r3
 8004304:	4013      	ands	r3, r2
 8004306:	2b00      	cmp	r3, #0
 8004308:	d0a0      	beq.n	800424c <HAL_RCC_OscConfig+0x6a0>
 800430a:	e08d      	b.n	8004428 <HAL_RCC_OscConfig+0x87c>
 800430c:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004310:	f5a3 738c 	sub.w	r3, r3, #280	@ 0x118
 8004314:	2201      	movs	r2, #1
 8004316:	601a      	str	r2, [r3, #0]
 8004318:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 800431c:	f5a3 738c 	sub.w	r3, r3, #280	@ 0x118
 8004320:	681b      	ldr	r3, [r3, #0]
 8004322:	fa93 f2a3 	rbit	r2, r3
 8004326:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 800432a:	f5a3 738e 	sub.w	r3, r3, #284	@ 0x11c
 800432e:	601a      	str	r2, [r3, #0]
 8004330:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004334:	f5a3 738e 	sub.w	r3, r3, #284	@ 0x11c
 8004338:	681b      	ldr	r3, [r3, #0]
 800433a:	fab3 f383 	clz	r3, r3
 800433e:	b2db      	uxtb	r3, r3
 8004340:	461a      	mov	r2, r3
 8004342:	4b68      	ldr	r3, [pc, #416]	@ (80044e4 <HAL_RCC_OscConfig+0x938>)
 8004344:	4413      	add	r3, r2
 8004346:	009b      	lsls	r3, r3, #2
 8004348:	461a      	mov	r2, r3
 800434a:	2300      	movs	r3, #0
 800434c:	6013      	str	r3, [r2, #0]
 800434e:	f7fe fac1 	bl	80028d4 <HAL_GetTick>
 8004352:	f8c7 01f8 	str.w	r0, [r7, #504]	@ 0x1f8
 8004356:	e00a      	b.n	800436e <HAL_RCC_OscConfig+0x7c2>
 8004358:	f7fe fabc 	bl	80028d4 <HAL_GetTick>
 800435c:	4602      	mov	r2, r0
 800435e:	f8d7 31f8 	ldr.w	r3, [r7, #504]	@ 0x1f8
 8004362:	1ad3      	subs	r3, r2, r3
 8004364:	2b02      	cmp	r3, #2
 8004366:	d902      	bls.n	800436e <HAL_RCC_OscConfig+0x7c2>
 8004368:	2303      	movs	r3, #3
 800436a:	f000 bc55 	b.w	8004c18 <HAL_RCC_OscConfig+0x106c>
 800436e:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004372:	f5a3 7390 	sub.w	r3, r3, #288	@ 0x120
 8004376:	2202      	movs	r2, #2
 8004378:	601a      	str	r2, [r3, #0]
 800437a:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 800437e:	f5a3 7390 	sub.w	r3, r3, #288	@ 0x120
 8004382:	681b      	ldr	r3, [r3, #0]
 8004384:	fa93 f2a3 	rbit	r2, r3
 8004388:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 800438c:	f5a3 7392 	sub.w	r3, r3, #292	@ 0x124
 8004390:	601a      	str	r2, [r3, #0]
 8004392:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004396:	f5a3 7394 	sub.w	r3, r3, #296	@ 0x128
 800439a:	2202      	movs	r2, #2
 800439c:	601a      	str	r2, [r3, #0]
 800439e:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80043a2:	f5a3 7394 	sub.w	r3, r3, #296	@ 0x128
 80043a6:	681b      	ldr	r3, [r3, #0]
 80043a8:	fa93 f2a3 	rbit	r2, r3
 80043ac:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80043b0:	f5a3 7396 	sub.w	r3, r3, #300	@ 0x12c
 80043b4:	601a      	str	r2, [r3, #0]
 80043b6:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80043ba:	f5a3 7398 	sub.w	r3, r3, #304	@ 0x130
 80043be:	2202      	movs	r2, #2
 80043c0:	601a      	str	r2, [r3, #0]
 80043c2:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80043c6:	f5a3 7398 	sub.w	r3, r3, #304	@ 0x130
 80043ca:	681b      	ldr	r3, [r3, #0]
 80043cc:	fa93 f2a3 	rbit	r2, r3
 80043d0:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80043d4:	f5a3 739a 	sub.w	r3, r3, #308	@ 0x134
 80043d8:	601a      	str	r2, [r3, #0]
 80043da:	4b41      	ldr	r3, [pc, #260]	@ (80044e0 <HAL_RCC_OscConfig+0x934>)
 80043dc:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 80043de:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80043e2:	f5a3 739c 	sub.w	r3, r3, #312	@ 0x138
 80043e6:	2102      	movs	r1, #2
 80043e8:	6019      	str	r1, [r3, #0]
 80043ea:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80043ee:	f5a3 739c 	sub.w	r3, r3, #312	@ 0x138
 80043f2:	681b      	ldr	r3, [r3, #0]
 80043f4:	fa93 f1a3 	rbit	r1, r3
 80043f8:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80043fc:	f5a3 739e 	sub.w	r3, r3, #316	@ 0x13c
 8004400:	6019      	str	r1, [r3, #0]
 8004402:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004406:	f5a3 739e 	sub.w	r3, r3, #316	@ 0x13c
 800440a:	681b      	ldr	r3, [r3, #0]
 800440c:	fab3 f383 	clz	r3, r3
 8004410:	b2db      	uxtb	r3, r3
 8004412:	f043 0360 	orr.w	r3, r3, #96	@ 0x60
 8004416:	b2db      	uxtb	r3, r3
 8004418:	f003 031f 	and.w	r3, r3, #31
 800441c:	2101      	movs	r1, #1
 800441e:	fa01 f303 	lsl.w	r3, r1, r3
 8004422:	4013      	ands	r3, r2
 8004424:	2b00      	cmp	r3, #0
 8004426:	d197      	bne.n	8004358 <HAL_RCC_OscConfig+0x7ac>
 8004428:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 800442c:	f5a3 73fe 	sub.w	r3, r3, #508	@ 0x1fc
 8004430:	681b      	ldr	r3, [r3, #0]
 8004432:	681b      	ldr	r3, [r3, #0]
 8004434:	f003 0304 	and.w	r3, r3, #4
 8004438:	2b00      	cmp	r3, #0
 800443a:	f000 81a1 	beq.w	8004780 <HAL_RCC_OscConfig+0xbd4>
 800443e:	2300      	movs	r3, #0
 8004440:	f887 31ff 	strb.w	r3, [r7, #511]	@ 0x1ff
 8004444:	4b26      	ldr	r3, [pc, #152]	@ (80044e0 <HAL_RCC_OscConfig+0x934>)
 8004446:	69db      	ldr	r3, [r3, #28]
 8004448:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800444c:	2b00      	cmp	r3, #0
 800444e:	d116      	bne.n	800447e <HAL_RCC_OscConfig+0x8d2>
 8004450:	4b23      	ldr	r3, [pc, #140]	@ (80044e0 <HAL_RCC_OscConfig+0x934>)
 8004452:	69db      	ldr	r3, [r3, #28]
 8004454:	4a22      	ldr	r2, [pc, #136]	@ (80044e0 <HAL_RCC_OscConfig+0x934>)
 8004456:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 800445a:	61d3      	str	r3, [r2, #28]
 800445c:	4b20      	ldr	r3, [pc, #128]	@ (80044e0 <HAL_RCC_OscConfig+0x934>)
 800445e:	69db      	ldr	r3, [r3, #28]
 8004460:	f003 5280 	and.w	r2, r3, #268435456	@ 0x10000000
 8004464:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004468:	f5a3 73fc 	sub.w	r3, r3, #504	@ 0x1f8
 800446c:	601a      	str	r2, [r3, #0]
 800446e:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004472:	f5a3 73fc 	sub.w	r3, r3, #504	@ 0x1f8
 8004476:	681b      	ldr	r3, [r3, #0]
 8004478:	2301      	movs	r3, #1
 800447a:	f887 31ff 	strb.w	r3, [r7, #511]	@ 0x1ff
 800447e:	4b1a      	ldr	r3, [pc, #104]	@ (80044e8 <HAL_RCC_OscConfig+0x93c>)
 8004480:	681b      	ldr	r3, [r3, #0]
 8004482:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8004486:	2b00      	cmp	r3, #0
 8004488:	d11a      	bne.n	80044c0 <HAL_RCC_OscConfig+0x914>
 800448a:	4b17      	ldr	r3, [pc, #92]	@ (80044e8 <HAL_RCC_OscConfig+0x93c>)
 800448c:	681b      	ldr	r3, [r3, #0]
 800448e:	4a16      	ldr	r2, [pc, #88]	@ (80044e8 <HAL_RCC_OscConfig+0x93c>)
 8004490:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8004494:	6013      	str	r3, [r2, #0]
 8004496:	f7fe fa1d 	bl	80028d4 <HAL_GetTick>
 800449a:	f8c7 01f8 	str.w	r0, [r7, #504]	@ 0x1f8
 800449e:	e009      	b.n	80044b4 <HAL_RCC_OscConfig+0x908>
 80044a0:	f7fe fa18 	bl	80028d4 <HAL_GetTick>
 80044a4:	4602      	mov	r2, r0
 80044a6:	f8d7 31f8 	ldr.w	r3, [r7, #504]	@ 0x1f8
 80044aa:	1ad3      	subs	r3, r2, r3
 80044ac:	2b64      	cmp	r3, #100	@ 0x64
 80044ae:	d901      	bls.n	80044b4 <HAL_RCC_OscConfig+0x908>
 80044b0:	2303      	movs	r3, #3
 80044b2:	e3b1      	b.n	8004c18 <HAL_RCC_OscConfig+0x106c>
 80044b4:	4b0c      	ldr	r3, [pc, #48]	@ (80044e8 <HAL_RCC_OscConfig+0x93c>)
 80044b6:	681b      	ldr	r3, [r3, #0]
 80044b8:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80044bc:	2b00      	cmp	r3, #0
 80044be:	d0ef      	beq.n	80044a0 <HAL_RCC_OscConfig+0x8f4>
 80044c0:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80044c4:	f5a3 73fe 	sub.w	r3, r3, #508	@ 0x1fc
 80044c8:	681b      	ldr	r3, [r3, #0]
 80044ca:	68db      	ldr	r3, [r3, #12]
 80044cc:	2b01      	cmp	r3, #1
 80044ce:	d10d      	bne.n	80044ec <HAL_RCC_OscConfig+0x940>
 80044d0:	4b03      	ldr	r3, [pc, #12]	@ (80044e0 <HAL_RCC_OscConfig+0x934>)
 80044d2:	6a1b      	ldr	r3, [r3, #32]
 80044d4:	4a02      	ldr	r2, [pc, #8]	@ (80044e0 <HAL_RCC_OscConfig+0x934>)
 80044d6:	f043 0301 	orr.w	r3, r3, #1
 80044da:	6213      	str	r3, [r2, #32]
 80044dc:	e03c      	b.n	8004558 <HAL_RCC_OscConfig+0x9ac>
 80044de:	bf00      	nop
 80044e0:	40021000 	.word	0x40021000
 80044e4:	10908120 	.word	0x10908120
 80044e8:	40007000 	.word	0x40007000
 80044ec:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80044f0:	f5a3 73fe 	sub.w	r3, r3, #508	@ 0x1fc
 80044f4:	681b      	ldr	r3, [r3, #0]
 80044f6:	68db      	ldr	r3, [r3, #12]
 80044f8:	2b00      	cmp	r3, #0
 80044fa:	d10c      	bne.n	8004516 <HAL_RCC_OscConfig+0x96a>
 80044fc:	4bc1      	ldr	r3, [pc, #772]	@ (8004804 <HAL_RCC_OscConfig+0xc58>)
 80044fe:	6a1b      	ldr	r3, [r3, #32]
 8004500:	4ac0      	ldr	r2, [pc, #768]	@ (8004804 <HAL_RCC_OscConfig+0xc58>)
 8004502:	f023 0301 	bic.w	r3, r3, #1
 8004506:	6213      	str	r3, [r2, #32]
 8004508:	4bbe      	ldr	r3, [pc, #760]	@ (8004804 <HAL_RCC_OscConfig+0xc58>)
 800450a:	6a1b      	ldr	r3, [r3, #32]
 800450c:	4abd      	ldr	r2, [pc, #756]	@ (8004804 <HAL_RCC_OscConfig+0xc58>)
 800450e:	f023 0304 	bic.w	r3, r3, #4
 8004512:	6213      	str	r3, [r2, #32]
 8004514:	e020      	b.n	8004558 <HAL_RCC_OscConfig+0x9ac>
 8004516:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 800451a:	f5a3 73fe 	sub.w	r3, r3, #508	@ 0x1fc
 800451e:	681b      	ldr	r3, [r3, #0]
 8004520:	68db      	ldr	r3, [r3, #12]
 8004522:	2b05      	cmp	r3, #5
 8004524:	d10c      	bne.n	8004540 <HAL_RCC_OscConfig+0x994>
 8004526:	4bb7      	ldr	r3, [pc, #732]	@ (8004804 <HAL_RCC_OscConfig+0xc58>)
 8004528:	6a1b      	ldr	r3, [r3, #32]
 800452a:	4ab6      	ldr	r2, [pc, #728]	@ (8004804 <HAL_RCC_OscConfig+0xc58>)
 800452c:	f043 0304 	orr.w	r3, r3, #4
 8004530:	6213      	str	r3, [r2, #32]
 8004532:	4bb4      	ldr	r3, [pc, #720]	@ (8004804 <HAL_RCC_OscConfig+0xc58>)
 8004534:	6a1b      	ldr	r3, [r3, #32]
 8004536:	4ab3      	ldr	r2, [pc, #716]	@ (8004804 <HAL_RCC_OscConfig+0xc58>)
 8004538:	f043 0301 	orr.w	r3, r3, #1
 800453c:	6213      	str	r3, [r2, #32]
 800453e:	e00b      	b.n	8004558 <HAL_RCC_OscConfig+0x9ac>
 8004540:	4bb0      	ldr	r3, [pc, #704]	@ (8004804 <HAL_RCC_OscConfig+0xc58>)
 8004542:	6a1b      	ldr	r3, [r3, #32]
 8004544:	4aaf      	ldr	r2, [pc, #700]	@ (8004804 <HAL_RCC_OscConfig+0xc58>)
 8004546:	f023 0301 	bic.w	r3, r3, #1
 800454a:	6213      	str	r3, [r2, #32]
 800454c:	4bad      	ldr	r3, [pc, #692]	@ (8004804 <HAL_RCC_OscConfig+0xc58>)
 800454e:	6a1b      	ldr	r3, [r3, #32]
 8004550:	4aac      	ldr	r2, [pc, #688]	@ (8004804 <HAL_RCC_OscConfig+0xc58>)
 8004552:	f023 0304 	bic.w	r3, r3, #4
 8004556:	6213      	str	r3, [r2, #32]
 8004558:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 800455c:	f5a3 73fe 	sub.w	r3, r3, #508	@ 0x1fc
 8004560:	681b      	ldr	r3, [r3, #0]
 8004562:	68db      	ldr	r3, [r3, #12]
 8004564:	2b00      	cmp	r3, #0
 8004566:	f000 8081 	beq.w	800466c <HAL_RCC_OscConfig+0xac0>
 800456a:	f7fe f9b3 	bl	80028d4 <HAL_GetTick>
 800456e:	f8c7 01f8 	str.w	r0, [r7, #504]	@ 0x1f8
 8004572:	e00b      	b.n	800458c <HAL_RCC_OscConfig+0x9e0>
 8004574:	f7fe f9ae 	bl	80028d4 <HAL_GetTick>
 8004578:	4602      	mov	r2, r0
 800457a:	f8d7 31f8 	ldr.w	r3, [r7, #504]	@ 0x1f8
 800457e:	1ad3      	subs	r3, r2, r3
 8004580:	f241 3288 	movw	r2, #5000	@ 0x1388
 8004584:	4293      	cmp	r3, r2
 8004586:	d901      	bls.n	800458c <HAL_RCC_OscConfig+0x9e0>
 8004588:	2303      	movs	r3, #3
 800458a:	e345      	b.n	8004c18 <HAL_RCC_OscConfig+0x106c>
 800458c:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004590:	f5a3 73a0 	sub.w	r3, r3, #320	@ 0x140
 8004594:	2202      	movs	r2, #2
 8004596:	601a      	str	r2, [r3, #0]
 8004598:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 800459c:	f5a3 73a0 	sub.w	r3, r3, #320	@ 0x140
 80045a0:	681b      	ldr	r3, [r3, #0]
 80045a2:	fa93 f2a3 	rbit	r2, r3
 80045a6:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80045aa:	f5a3 73a2 	sub.w	r3, r3, #324	@ 0x144
 80045ae:	601a      	str	r2, [r3, #0]
 80045b0:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80045b4:	f5a3 73a4 	sub.w	r3, r3, #328	@ 0x148
 80045b8:	2202      	movs	r2, #2
 80045ba:	601a      	str	r2, [r3, #0]
 80045bc:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80045c0:	f5a3 73a4 	sub.w	r3, r3, #328	@ 0x148
 80045c4:	681b      	ldr	r3, [r3, #0]
 80045c6:	fa93 f2a3 	rbit	r2, r3
 80045ca:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80045ce:	f5a3 73a6 	sub.w	r3, r3, #332	@ 0x14c
 80045d2:	601a      	str	r2, [r3, #0]
 80045d4:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80045d8:	f5a3 73a6 	sub.w	r3, r3, #332	@ 0x14c
 80045dc:	681b      	ldr	r3, [r3, #0]
 80045de:	fab3 f383 	clz	r3, r3
 80045e2:	b2db      	uxtb	r3, r3
 80045e4:	095b      	lsrs	r3, r3, #5
 80045e6:	b2db      	uxtb	r3, r3
 80045e8:	f043 0302 	orr.w	r3, r3, #2
 80045ec:	b2db      	uxtb	r3, r3
 80045ee:	2b02      	cmp	r3, #2
 80045f0:	d102      	bne.n	80045f8 <HAL_RCC_OscConfig+0xa4c>
 80045f2:	4b84      	ldr	r3, [pc, #528]	@ (8004804 <HAL_RCC_OscConfig+0xc58>)
 80045f4:	6a1b      	ldr	r3, [r3, #32]
 80045f6:	e013      	b.n	8004620 <HAL_RCC_OscConfig+0xa74>
 80045f8:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80045fc:	f5a3 73a8 	sub.w	r3, r3, #336	@ 0x150
 8004600:	2202      	movs	r2, #2
 8004602:	601a      	str	r2, [r3, #0]
 8004604:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004608:	f5a3 73a8 	sub.w	r3, r3, #336	@ 0x150
 800460c:	681b      	ldr	r3, [r3, #0]
 800460e:	fa93 f2a3 	rbit	r2, r3
 8004612:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004616:	f5a3 73aa 	sub.w	r3, r3, #340	@ 0x154
 800461a:	601a      	str	r2, [r3, #0]
 800461c:	4b79      	ldr	r3, [pc, #484]	@ (8004804 <HAL_RCC_OscConfig+0xc58>)
 800461e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004620:	f507 7200 	add.w	r2, r7, #512	@ 0x200
 8004624:	f5a2 72ac 	sub.w	r2, r2, #344	@ 0x158
 8004628:	2102      	movs	r1, #2
 800462a:	6011      	str	r1, [r2, #0]
 800462c:	f507 7200 	add.w	r2, r7, #512	@ 0x200
 8004630:	f5a2 72ac 	sub.w	r2, r2, #344	@ 0x158
 8004634:	6812      	ldr	r2, [r2, #0]
 8004636:	fa92 f1a2 	rbit	r1, r2
 800463a:	f507 7200 	add.w	r2, r7, #512	@ 0x200
 800463e:	f5a2 72ae 	sub.w	r2, r2, #348	@ 0x15c
 8004642:	6011      	str	r1, [r2, #0]
 8004644:	f507 7200 	add.w	r2, r7, #512	@ 0x200
 8004648:	f5a2 72ae 	sub.w	r2, r2, #348	@ 0x15c
 800464c:	6812      	ldr	r2, [r2, #0]
 800464e:	fab2 f282 	clz	r2, r2
 8004652:	b2d2      	uxtb	r2, r2
 8004654:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8004658:	b2d2      	uxtb	r2, r2
 800465a:	f002 021f 	and.w	r2, r2, #31
 800465e:	2101      	movs	r1, #1
 8004660:	fa01 f202 	lsl.w	r2, r1, r2
 8004664:	4013      	ands	r3, r2
 8004666:	2b00      	cmp	r3, #0
 8004668:	d084      	beq.n	8004574 <HAL_RCC_OscConfig+0x9c8>
 800466a:	e07f      	b.n	800476c <HAL_RCC_OscConfig+0xbc0>
 800466c:	f7fe f932 	bl	80028d4 <HAL_GetTick>
 8004670:	f8c7 01f8 	str.w	r0, [r7, #504]	@ 0x1f8
 8004674:	e00b      	b.n	800468e <HAL_RCC_OscConfig+0xae2>
 8004676:	f7fe f92d 	bl	80028d4 <HAL_GetTick>
 800467a:	4602      	mov	r2, r0
 800467c:	f8d7 31f8 	ldr.w	r3, [r7, #504]	@ 0x1f8
 8004680:	1ad3      	subs	r3, r2, r3
 8004682:	f241 3288 	movw	r2, #5000	@ 0x1388
 8004686:	4293      	cmp	r3, r2
 8004688:	d901      	bls.n	800468e <HAL_RCC_OscConfig+0xae2>
 800468a:	2303      	movs	r3, #3
 800468c:	e2c4      	b.n	8004c18 <HAL_RCC_OscConfig+0x106c>
 800468e:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004692:	f5a3 73b0 	sub.w	r3, r3, #352	@ 0x160
 8004696:	2202      	movs	r2, #2
 8004698:	601a      	str	r2, [r3, #0]
 800469a:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 800469e:	f5a3 73b0 	sub.w	r3, r3, #352	@ 0x160
 80046a2:	681b      	ldr	r3, [r3, #0]
 80046a4:	fa93 f2a3 	rbit	r2, r3
 80046a8:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80046ac:	f5a3 73b2 	sub.w	r3, r3, #356	@ 0x164
 80046b0:	601a      	str	r2, [r3, #0]
 80046b2:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80046b6:	f5a3 73b4 	sub.w	r3, r3, #360	@ 0x168
 80046ba:	2202      	movs	r2, #2
 80046bc:	601a      	str	r2, [r3, #0]
 80046be:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80046c2:	f5a3 73b4 	sub.w	r3, r3, #360	@ 0x168
 80046c6:	681b      	ldr	r3, [r3, #0]
 80046c8:	fa93 f2a3 	rbit	r2, r3
 80046cc:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80046d0:	f5a3 73b6 	sub.w	r3, r3, #364	@ 0x16c
 80046d4:	601a      	str	r2, [r3, #0]
 80046d6:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80046da:	f5a3 73b6 	sub.w	r3, r3, #364	@ 0x16c
 80046de:	681b      	ldr	r3, [r3, #0]
 80046e0:	fab3 f383 	clz	r3, r3
 80046e4:	b2db      	uxtb	r3, r3
 80046e6:	095b      	lsrs	r3, r3, #5
 80046e8:	b2db      	uxtb	r3, r3
 80046ea:	f043 0302 	orr.w	r3, r3, #2
 80046ee:	b2db      	uxtb	r3, r3
 80046f0:	2b02      	cmp	r3, #2
 80046f2:	d102      	bne.n	80046fa <HAL_RCC_OscConfig+0xb4e>
 80046f4:	4b43      	ldr	r3, [pc, #268]	@ (8004804 <HAL_RCC_OscConfig+0xc58>)
 80046f6:	6a1b      	ldr	r3, [r3, #32]
 80046f8:	e013      	b.n	8004722 <HAL_RCC_OscConfig+0xb76>
 80046fa:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80046fe:	f5a3 73b8 	sub.w	r3, r3, #368	@ 0x170
 8004702:	2202      	movs	r2, #2
 8004704:	601a      	str	r2, [r3, #0]
 8004706:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 800470a:	f5a3 73b8 	sub.w	r3, r3, #368	@ 0x170
 800470e:	681b      	ldr	r3, [r3, #0]
 8004710:	fa93 f2a3 	rbit	r2, r3
 8004714:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004718:	f5a3 73ba 	sub.w	r3, r3, #372	@ 0x174
 800471c:	601a      	str	r2, [r3, #0]
 800471e:	4b39      	ldr	r3, [pc, #228]	@ (8004804 <HAL_RCC_OscConfig+0xc58>)
 8004720:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004722:	f507 7200 	add.w	r2, r7, #512	@ 0x200
 8004726:	f5a2 72bc 	sub.w	r2, r2, #376	@ 0x178
 800472a:	2102      	movs	r1, #2
 800472c:	6011      	str	r1, [r2, #0]
 800472e:	f507 7200 	add.w	r2, r7, #512	@ 0x200
 8004732:	f5a2 72bc 	sub.w	r2, r2, #376	@ 0x178
 8004736:	6812      	ldr	r2, [r2, #0]
 8004738:	fa92 f1a2 	rbit	r1, r2
 800473c:	f507 7200 	add.w	r2, r7, #512	@ 0x200
 8004740:	f5a2 72be 	sub.w	r2, r2, #380	@ 0x17c
 8004744:	6011      	str	r1, [r2, #0]
 8004746:	f507 7200 	add.w	r2, r7, #512	@ 0x200
 800474a:	f5a2 72be 	sub.w	r2, r2, #380	@ 0x17c
 800474e:	6812      	ldr	r2, [r2, #0]
 8004750:	fab2 f282 	clz	r2, r2
 8004754:	b2d2      	uxtb	r2, r2
 8004756:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 800475a:	b2d2      	uxtb	r2, r2
 800475c:	f002 021f 	and.w	r2, r2, #31
 8004760:	2101      	movs	r1, #1
 8004762:	fa01 f202 	lsl.w	r2, r1, r2
 8004766:	4013      	ands	r3, r2
 8004768:	2b00      	cmp	r3, #0
 800476a:	d184      	bne.n	8004676 <HAL_RCC_OscConfig+0xaca>
 800476c:	f897 31ff 	ldrb.w	r3, [r7, #511]	@ 0x1ff
 8004770:	2b01      	cmp	r3, #1
 8004772:	d105      	bne.n	8004780 <HAL_RCC_OscConfig+0xbd4>
 8004774:	4b23      	ldr	r3, [pc, #140]	@ (8004804 <HAL_RCC_OscConfig+0xc58>)
 8004776:	69db      	ldr	r3, [r3, #28]
 8004778:	4a22      	ldr	r2, [pc, #136]	@ (8004804 <HAL_RCC_OscConfig+0xc58>)
 800477a:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 800477e:	61d3      	str	r3, [r2, #28]
 8004780:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004784:	f5a3 73fe 	sub.w	r3, r3, #508	@ 0x1fc
 8004788:	681b      	ldr	r3, [r3, #0]
 800478a:	69db      	ldr	r3, [r3, #28]
 800478c:	2b00      	cmp	r3, #0
 800478e:	f000 8242 	beq.w	8004c16 <HAL_RCC_OscConfig+0x106a>
 8004792:	4b1c      	ldr	r3, [pc, #112]	@ (8004804 <HAL_RCC_OscConfig+0xc58>)
 8004794:	685b      	ldr	r3, [r3, #4]
 8004796:	f003 030c 	and.w	r3, r3, #12
 800479a:	2b08      	cmp	r3, #8
 800479c:	f000 8213 	beq.w	8004bc6 <HAL_RCC_OscConfig+0x101a>
 80047a0:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80047a4:	f5a3 73fe 	sub.w	r3, r3, #508	@ 0x1fc
 80047a8:	681b      	ldr	r3, [r3, #0]
 80047aa:	69db      	ldr	r3, [r3, #28]
 80047ac:	2b02      	cmp	r3, #2
 80047ae:	f040 8162 	bne.w	8004a76 <HAL_RCC_OscConfig+0xeca>
 80047b2:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80047b6:	f5a3 73c0 	sub.w	r3, r3, #384	@ 0x180
 80047ba:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 80047be:	601a      	str	r2, [r3, #0]
 80047c0:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80047c4:	f5a3 73c0 	sub.w	r3, r3, #384	@ 0x180
 80047c8:	681b      	ldr	r3, [r3, #0]
 80047ca:	fa93 f2a3 	rbit	r2, r3
 80047ce:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80047d2:	f5a3 73c2 	sub.w	r3, r3, #388	@ 0x184
 80047d6:	601a      	str	r2, [r3, #0]
 80047d8:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80047dc:	f5a3 73c2 	sub.w	r3, r3, #388	@ 0x184
 80047e0:	681b      	ldr	r3, [r3, #0]
 80047e2:	fab3 f383 	clz	r3, r3
 80047e6:	b2db      	uxtb	r3, r3
 80047e8:	f103 5384 	add.w	r3, r3, #276824064	@ 0x10800000
 80047ec:	f503 1384 	add.w	r3, r3, #1081344	@ 0x108000
 80047f0:	009b      	lsls	r3, r3, #2
 80047f2:	461a      	mov	r2, r3
 80047f4:	2300      	movs	r3, #0
 80047f6:	6013      	str	r3, [r2, #0]
 80047f8:	f7fe f86c 	bl	80028d4 <HAL_GetTick>
 80047fc:	f8c7 01f8 	str.w	r0, [r7, #504]	@ 0x1f8
 8004800:	e00c      	b.n	800481c <HAL_RCC_OscConfig+0xc70>
 8004802:	bf00      	nop
 8004804:	40021000 	.word	0x40021000
 8004808:	f7fe f864 	bl	80028d4 <HAL_GetTick>
 800480c:	4602      	mov	r2, r0
 800480e:	f8d7 31f8 	ldr.w	r3, [r7, #504]	@ 0x1f8
 8004812:	1ad3      	subs	r3, r2, r3
 8004814:	2b02      	cmp	r3, #2
 8004816:	d901      	bls.n	800481c <HAL_RCC_OscConfig+0xc70>
 8004818:	2303      	movs	r3, #3
 800481a:	e1fd      	b.n	8004c18 <HAL_RCC_OscConfig+0x106c>
 800481c:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004820:	f5a3 73c4 	sub.w	r3, r3, #392	@ 0x188
 8004824:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8004828:	601a      	str	r2, [r3, #0]
 800482a:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 800482e:	f5a3 73c4 	sub.w	r3, r3, #392	@ 0x188
 8004832:	681b      	ldr	r3, [r3, #0]
 8004834:	fa93 f2a3 	rbit	r2, r3
 8004838:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 800483c:	f5a3 73c6 	sub.w	r3, r3, #396	@ 0x18c
 8004840:	601a      	str	r2, [r3, #0]
 8004842:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004846:	f5a3 73c6 	sub.w	r3, r3, #396	@ 0x18c
 800484a:	681b      	ldr	r3, [r3, #0]
 800484c:	fab3 f383 	clz	r3, r3
 8004850:	b2db      	uxtb	r3, r3
 8004852:	095b      	lsrs	r3, r3, #5
 8004854:	b2db      	uxtb	r3, r3
 8004856:	f043 0301 	orr.w	r3, r3, #1
 800485a:	b2db      	uxtb	r3, r3
 800485c:	2b01      	cmp	r3, #1
 800485e:	d102      	bne.n	8004866 <HAL_RCC_OscConfig+0xcba>
 8004860:	4bb0      	ldr	r3, [pc, #704]	@ (8004b24 <HAL_RCC_OscConfig+0xf78>)
 8004862:	681b      	ldr	r3, [r3, #0]
 8004864:	e027      	b.n	80048b6 <HAL_RCC_OscConfig+0xd0a>
 8004866:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 800486a:	f5a3 73c8 	sub.w	r3, r3, #400	@ 0x190
 800486e:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8004872:	601a      	str	r2, [r3, #0]
 8004874:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004878:	f5a3 73c8 	sub.w	r3, r3, #400	@ 0x190
 800487c:	681b      	ldr	r3, [r3, #0]
 800487e:	fa93 f2a3 	rbit	r2, r3
 8004882:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004886:	f5a3 73ca 	sub.w	r3, r3, #404	@ 0x194
 800488a:	601a      	str	r2, [r3, #0]
 800488c:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004890:	f5a3 73cc 	sub.w	r3, r3, #408	@ 0x198
 8004894:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8004898:	601a      	str	r2, [r3, #0]
 800489a:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 800489e:	f5a3 73cc 	sub.w	r3, r3, #408	@ 0x198
 80048a2:	681b      	ldr	r3, [r3, #0]
 80048a4:	fa93 f2a3 	rbit	r2, r3
 80048a8:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80048ac:	f5a3 73ce 	sub.w	r3, r3, #412	@ 0x19c
 80048b0:	601a      	str	r2, [r3, #0]
 80048b2:	4b9c      	ldr	r3, [pc, #624]	@ (8004b24 <HAL_RCC_OscConfig+0xf78>)
 80048b4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80048b6:	f507 7200 	add.w	r2, r7, #512	@ 0x200
 80048ba:	f5a2 72d0 	sub.w	r2, r2, #416	@ 0x1a0
 80048be:	f04f 7100 	mov.w	r1, #33554432	@ 0x2000000
 80048c2:	6011      	str	r1, [r2, #0]
 80048c4:	f507 7200 	add.w	r2, r7, #512	@ 0x200
 80048c8:	f5a2 72d0 	sub.w	r2, r2, #416	@ 0x1a0
 80048cc:	6812      	ldr	r2, [r2, #0]
 80048ce:	fa92 f1a2 	rbit	r1, r2
 80048d2:	f507 7200 	add.w	r2, r7, #512	@ 0x200
 80048d6:	f5a2 72d2 	sub.w	r2, r2, #420	@ 0x1a4
 80048da:	6011      	str	r1, [r2, #0]
 80048dc:	f507 7200 	add.w	r2, r7, #512	@ 0x200
 80048e0:	f5a2 72d2 	sub.w	r2, r2, #420	@ 0x1a4
 80048e4:	6812      	ldr	r2, [r2, #0]
 80048e6:	fab2 f282 	clz	r2, r2
 80048ea:	b2d2      	uxtb	r2, r2
 80048ec:	f042 0220 	orr.w	r2, r2, #32
 80048f0:	b2d2      	uxtb	r2, r2
 80048f2:	f002 021f 	and.w	r2, r2, #31
 80048f6:	2101      	movs	r1, #1
 80048f8:	fa01 f202 	lsl.w	r2, r1, r2
 80048fc:	4013      	ands	r3, r2
 80048fe:	2b00      	cmp	r3, #0
 8004900:	d182      	bne.n	8004808 <HAL_RCC_OscConfig+0xc5c>
 8004902:	4b88      	ldr	r3, [pc, #544]	@ (8004b24 <HAL_RCC_OscConfig+0xf78>)
 8004904:	685b      	ldr	r3, [r3, #4]
 8004906:	f423 1274 	bic.w	r2, r3, #3997696	@ 0x3d0000
 800490a:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 800490e:	f5a3 73fe 	sub.w	r3, r3, #508	@ 0x1fc
 8004912:	681b      	ldr	r3, [r3, #0]
 8004914:	6a59      	ldr	r1, [r3, #36]	@ 0x24
 8004916:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 800491a:	f5a3 73fe 	sub.w	r3, r3, #508	@ 0x1fc
 800491e:	681b      	ldr	r3, [r3, #0]
 8004920:	6a1b      	ldr	r3, [r3, #32]
 8004922:	430b      	orrs	r3, r1
 8004924:	497f      	ldr	r1, [pc, #508]	@ (8004b24 <HAL_RCC_OscConfig+0xf78>)
 8004926:	4313      	orrs	r3, r2
 8004928:	604b      	str	r3, [r1, #4]
 800492a:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 800492e:	f5a3 73d4 	sub.w	r3, r3, #424	@ 0x1a8
 8004932:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8004936:	601a      	str	r2, [r3, #0]
 8004938:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 800493c:	f5a3 73d4 	sub.w	r3, r3, #424	@ 0x1a8
 8004940:	681b      	ldr	r3, [r3, #0]
 8004942:	fa93 f2a3 	rbit	r2, r3
 8004946:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 800494a:	f5a3 73d6 	sub.w	r3, r3, #428	@ 0x1ac
 800494e:	601a      	str	r2, [r3, #0]
 8004950:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004954:	f5a3 73d6 	sub.w	r3, r3, #428	@ 0x1ac
 8004958:	681b      	ldr	r3, [r3, #0]
 800495a:	fab3 f383 	clz	r3, r3
 800495e:	b2db      	uxtb	r3, r3
 8004960:	f103 5384 	add.w	r3, r3, #276824064	@ 0x10800000
 8004964:	f503 1384 	add.w	r3, r3, #1081344	@ 0x108000
 8004968:	009b      	lsls	r3, r3, #2
 800496a:	461a      	mov	r2, r3
 800496c:	2301      	movs	r3, #1
 800496e:	6013      	str	r3, [r2, #0]
 8004970:	f7fd ffb0 	bl	80028d4 <HAL_GetTick>
 8004974:	f8c7 01f8 	str.w	r0, [r7, #504]	@ 0x1f8
 8004978:	e009      	b.n	800498e <HAL_RCC_OscConfig+0xde2>
 800497a:	f7fd ffab 	bl	80028d4 <HAL_GetTick>
 800497e:	4602      	mov	r2, r0
 8004980:	f8d7 31f8 	ldr.w	r3, [r7, #504]	@ 0x1f8
 8004984:	1ad3      	subs	r3, r2, r3
 8004986:	2b02      	cmp	r3, #2
 8004988:	d901      	bls.n	800498e <HAL_RCC_OscConfig+0xde2>
 800498a:	2303      	movs	r3, #3
 800498c:	e144      	b.n	8004c18 <HAL_RCC_OscConfig+0x106c>
 800498e:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004992:	f5a3 73d8 	sub.w	r3, r3, #432	@ 0x1b0
 8004996:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 800499a:	601a      	str	r2, [r3, #0]
 800499c:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80049a0:	f5a3 73d8 	sub.w	r3, r3, #432	@ 0x1b0
 80049a4:	681b      	ldr	r3, [r3, #0]
 80049a6:	fa93 f2a3 	rbit	r2, r3
 80049aa:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80049ae:	f5a3 73da 	sub.w	r3, r3, #436	@ 0x1b4
 80049b2:	601a      	str	r2, [r3, #0]
 80049b4:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80049b8:	f5a3 73da 	sub.w	r3, r3, #436	@ 0x1b4
 80049bc:	681b      	ldr	r3, [r3, #0]
 80049be:	fab3 f383 	clz	r3, r3
 80049c2:	b2db      	uxtb	r3, r3
 80049c4:	095b      	lsrs	r3, r3, #5
 80049c6:	b2db      	uxtb	r3, r3
 80049c8:	f043 0301 	orr.w	r3, r3, #1
 80049cc:	b2db      	uxtb	r3, r3
 80049ce:	2b01      	cmp	r3, #1
 80049d0:	d102      	bne.n	80049d8 <HAL_RCC_OscConfig+0xe2c>
 80049d2:	4b54      	ldr	r3, [pc, #336]	@ (8004b24 <HAL_RCC_OscConfig+0xf78>)
 80049d4:	681b      	ldr	r3, [r3, #0]
 80049d6:	e027      	b.n	8004a28 <HAL_RCC_OscConfig+0xe7c>
 80049d8:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80049dc:	f5a3 73dc 	sub.w	r3, r3, #440	@ 0x1b8
 80049e0:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 80049e4:	601a      	str	r2, [r3, #0]
 80049e6:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80049ea:	f5a3 73dc 	sub.w	r3, r3, #440	@ 0x1b8
 80049ee:	681b      	ldr	r3, [r3, #0]
 80049f0:	fa93 f2a3 	rbit	r2, r3
 80049f4:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80049f8:	f5a3 73de 	sub.w	r3, r3, #444	@ 0x1bc
 80049fc:	601a      	str	r2, [r3, #0]
 80049fe:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004a02:	f5a3 73e0 	sub.w	r3, r3, #448	@ 0x1c0
 8004a06:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8004a0a:	601a      	str	r2, [r3, #0]
 8004a0c:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004a10:	f5a3 73e0 	sub.w	r3, r3, #448	@ 0x1c0
 8004a14:	681b      	ldr	r3, [r3, #0]
 8004a16:	fa93 f2a3 	rbit	r2, r3
 8004a1a:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004a1e:	f5a3 73e2 	sub.w	r3, r3, #452	@ 0x1c4
 8004a22:	601a      	str	r2, [r3, #0]
 8004a24:	4b3f      	ldr	r3, [pc, #252]	@ (8004b24 <HAL_RCC_OscConfig+0xf78>)
 8004a26:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004a28:	f507 7200 	add.w	r2, r7, #512	@ 0x200
 8004a2c:	f5a2 72e4 	sub.w	r2, r2, #456	@ 0x1c8
 8004a30:	f04f 7100 	mov.w	r1, #33554432	@ 0x2000000
 8004a34:	6011      	str	r1, [r2, #0]
 8004a36:	f507 7200 	add.w	r2, r7, #512	@ 0x200
 8004a3a:	f5a2 72e4 	sub.w	r2, r2, #456	@ 0x1c8
 8004a3e:	6812      	ldr	r2, [r2, #0]
 8004a40:	fa92 f1a2 	rbit	r1, r2
 8004a44:	f507 7200 	add.w	r2, r7, #512	@ 0x200
 8004a48:	f5a2 72e6 	sub.w	r2, r2, #460	@ 0x1cc
 8004a4c:	6011      	str	r1, [r2, #0]
 8004a4e:	f507 7200 	add.w	r2, r7, #512	@ 0x200
 8004a52:	f5a2 72e6 	sub.w	r2, r2, #460	@ 0x1cc
 8004a56:	6812      	ldr	r2, [r2, #0]
 8004a58:	fab2 f282 	clz	r2, r2
 8004a5c:	b2d2      	uxtb	r2, r2
 8004a5e:	f042 0220 	orr.w	r2, r2, #32
 8004a62:	b2d2      	uxtb	r2, r2
 8004a64:	f002 021f 	and.w	r2, r2, #31
 8004a68:	2101      	movs	r1, #1
 8004a6a:	fa01 f202 	lsl.w	r2, r1, r2
 8004a6e:	4013      	ands	r3, r2
 8004a70:	2b00      	cmp	r3, #0
 8004a72:	d082      	beq.n	800497a <HAL_RCC_OscConfig+0xdce>
 8004a74:	e0cf      	b.n	8004c16 <HAL_RCC_OscConfig+0x106a>
 8004a76:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004a7a:	f5a3 73e8 	sub.w	r3, r3, #464	@ 0x1d0
 8004a7e:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8004a82:	601a      	str	r2, [r3, #0]
 8004a84:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004a88:	f5a3 73e8 	sub.w	r3, r3, #464	@ 0x1d0
 8004a8c:	681b      	ldr	r3, [r3, #0]
 8004a8e:	fa93 f2a3 	rbit	r2, r3
 8004a92:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004a96:	f5a3 73ea 	sub.w	r3, r3, #468	@ 0x1d4
 8004a9a:	601a      	str	r2, [r3, #0]
 8004a9c:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004aa0:	f5a3 73ea 	sub.w	r3, r3, #468	@ 0x1d4
 8004aa4:	681b      	ldr	r3, [r3, #0]
 8004aa6:	fab3 f383 	clz	r3, r3
 8004aaa:	b2db      	uxtb	r3, r3
 8004aac:	f103 5384 	add.w	r3, r3, #276824064	@ 0x10800000
 8004ab0:	f503 1384 	add.w	r3, r3, #1081344	@ 0x108000
 8004ab4:	009b      	lsls	r3, r3, #2
 8004ab6:	461a      	mov	r2, r3
 8004ab8:	2300      	movs	r3, #0
 8004aba:	6013      	str	r3, [r2, #0]
 8004abc:	f7fd ff0a 	bl	80028d4 <HAL_GetTick>
 8004ac0:	f8c7 01f8 	str.w	r0, [r7, #504]	@ 0x1f8
 8004ac4:	e009      	b.n	8004ada <HAL_RCC_OscConfig+0xf2e>
 8004ac6:	f7fd ff05 	bl	80028d4 <HAL_GetTick>
 8004aca:	4602      	mov	r2, r0
 8004acc:	f8d7 31f8 	ldr.w	r3, [r7, #504]	@ 0x1f8
 8004ad0:	1ad3      	subs	r3, r2, r3
 8004ad2:	2b02      	cmp	r3, #2
 8004ad4:	d901      	bls.n	8004ada <HAL_RCC_OscConfig+0xf2e>
 8004ad6:	2303      	movs	r3, #3
 8004ad8:	e09e      	b.n	8004c18 <HAL_RCC_OscConfig+0x106c>
 8004ada:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004ade:	f5a3 73ec 	sub.w	r3, r3, #472	@ 0x1d8
 8004ae2:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8004ae6:	601a      	str	r2, [r3, #0]
 8004ae8:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004aec:	f5a3 73ec 	sub.w	r3, r3, #472	@ 0x1d8
 8004af0:	681b      	ldr	r3, [r3, #0]
 8004af2:	fa93 f2a3 	rbit	r2, r3
 8004af6:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004afa:	f5a3 73ee 	sub.w	r3, r3, #476	@ 0x1dc
 8004afe:	601a      	str	r2, [r3, #0]
 8004b00:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004b04:	f5a3 73ee 	sub.w	r3, r3, #476	@ 0x1dc
 8004b08:	681b      	ldr	r3, [r3, #0]
 8004b0a:	fab3 f383 	clz	r3, r3
 8004b0e:	b2db      	uxtb	r3, r3
 8004b10:	095b      	lsrs	r3, r3, #5
 8004b12:	b2db      	uxtb	r3, r3
 8004b14:	f043 0301 	orr.w	r3, r3, #1
 8004b18:	b2db      	uxtb	r3, r3
 8004b1a:	2b01      	cmp	r3, #1
 8004b1c:	d104      	bne.n	8004b28 <HAL_RCC_OscConfig+0xf7c>
 8004b1e:	4b01      	ldr	r3, [pc, #4]	@ (8004b24 <HAL_RCC_OscConfig+0xf78>)
 8004b20:	681b      	ldr	r3, [r3, #0]
 8004b22:	e029      	b.n	8004b78 <HAL_RCC_OscConfig+0xfcc>
 8004b24:	40021000 	.word	0x40021000
 8004b28:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004b2c:	f5a3 73f0 	sub.w	r3, r3, #480	@ 0x1e0
 8004b30:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8004b34:	601a      	str	r2, [r3, #0]
 8004b36:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004b3a:	f5a3 73f0 	sub.w	r3, r3, #480	@ 0x1e0
 8004b3e:	681b      	ldr	r3, [r3, #0]
 8004b40:	fa93 f2a3 	rbit	r2, r3
 8004b44:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004b48:	f5a3 73f2 	sub.w	r3, r3, #484	@ 0x1e4
 8004b4c:	601a      	str	r2, [r3, #0]
 8004b4e:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004b52:	f5a3 73f4 	sub.w	r3, r3, #488	@ 0x1e8
 8004b56:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8004b5a:	601a      	str	r2, [r3, #0]
 8004b5c:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004b60:	f5a3 73f4 	sub.w	r3, r3, #488	@ 0x1e8
 8004b64:	681b      	ldr	r3, [r3, #0]
 8004b66:	fa93 f2a3 	rbit	r2, r3
 8004b6a:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004b6e:	f5a3 73f6 	sub.w	r3, r3, #492	@ 0x1ec
 8004b72:	601a      	str	r2, [r3, #0]
 8004b74:	4b2b      	ldr	r3, [pc, #172]	@ (8004c24 <HAL_RCC_OscConfig+0x1078>)
 8004b76:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004b78:	f507 7200 	add.w	r2, r7, #512	@ 0x200
 8004b7c:	f5a2 72f8 	sub.w	r2, r2, #496	@ 0x1f0
 8004b80:	f04f 7100 	mov.w	r1, #33554432	@ 0x2000000
 8004b84:	6011      	str	r1, [r2, #0]
 8004b86:	f507 7200 	add.w	r2, r7, #512	@ 0x200
 8004b8a:	f5a2 72f8 	sub.w	r2, r2, #496	@ 0x1f0
 8004b8e:	6812      	ldr	r2, [r2, #0]
 8004b90:	fa92 f1a2 	rbit	r1, r2
 8004b94:	f507 7200 	add.w	r2, r7, #512	@ 0x200
 8004b98:	f5a2 72fa 	sub.w	r2, r2, #500	@ 0x1f4
 8004b9c:	6011      	str	r1, [r2, #0]
 8004b9e:	f507 7200 	add.w	r2, r7, #512	@ 0x200
 8004ba2:	f5a2 72fa 	sub.w	r2, r2, #500	@ 0x1f4
 8004ba6:	6812      	ldr	r2, [r2, #0]
 8004ba8:	fab2 f282 	clz	r2, r2
 8004bac:	b2d2      	uxtb	r2, r2
 8004bae:	f042 0220 	orr.w	r2, r2, #32
 8004bb2:	b2d2      	uxtb	r2, r2
 8004bb4:	f002 021f 	and.w	r2, r2, #31
 8004bb8:	2101      	movs	r1, #1
 8004bba:	fa01 f202 	lsl.w	r2, r1, r2
 8004bbe:	4013      	ands	r3, r2
 8004bc0:	2b00      	cmp	r3, #0
 8004bc2:	d180      	bne.n	8004ac6 <HAL_RCC_OscConfig+0xf1a>
 8004bc4:	e027      	b.n	8004c16 <HAL_RCC_OscConfig+0x106a>
 8004bc6:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004bca:	f5a3 73fe 	sub.w	r3, r3, #508	@ 0x1fc
 8004bce:	681b      	ldr	r3, [r3, #0]
 8004bd0:	69db      	ldr	r3, [r3, #28]
 8004bd2:	2b01      	cmp	r3, #1
 8004bd4:	d101      	bne.n	8004bda <HAL_RCC_OscConfig+0x102e>
 8004bd6:	2301      	movs	r3, #1
 8004bd8:	e01e      	b.n	8004c18 <HAL_RCC_OscConfig+0x106c>
 8004bda:	4b12      	ldr	r3, [pc, #72]	@ (8004c24 <HAL_RCC_OscConfig+0x1078>)
 8004bdc:	685b      	ldr	r3, [r3, #4]
 8004bde:	f8c7 31f4 	str.w	r3, [r7, #500]	@ 0x1f4
 8004be2:	f8d7 31f4 	ldr.w	r3, [r7, #500]	@ 0x1f4
 8004be6:	f403 3280 	and.w	r2, r3, #65536	@ 0x10000
 8004bea:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004bee:	f5a3 73fe 	sub.w	r3, r3, #508	@ 0x1fc
 8004bf2:	681b      	ldr	r3, [r3, #0]
 8004bf4:	6a1b      	ldr	r3, [r3, #32]
 8004bf6:	429a      	cmp	r2, r3
 8004bf8:	d10b      	bne.n	8004c12 <HAL_RCC_OscConfig+0x1066>
 8004bfa:	f8d7 31f4 	ldr.w	r3, [r7, #500]	@ 0x1f4
 8004bfe:	f403 1270 	and.w	r2, r3, #3932160	@ 0x3c0000
 8004c02:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004c06:	f5a3 73fe 	sub.w	r3, r3, #508	@ 0x1fc
 8004c0a:	681b      	ldr	r3, [r3, #0]
 8004c0c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004c0e:	429a      	cmp	r2, r3
 8004c10:	d001      	beq.n	8004c16 <HAL_RCC_OscConfig+0x106a>
 8004c12:	2301      	movs	r3, #1
 8004c14:	e000      	b.n	8004c18 <HAL_RCC_OscConfig+0x106c>
 8004c16:	2300      	movs	r3, #0
 8004c18:	4618      	mov	r0, r3
 8004c1a:	f507 7700 	add.w	r7, r7, #512	@ 0x200
 8004c1e:	46bd      	mov	sp, r7
 8004c20:	bd80      	pop	{r7, pc}
 8004c22:	bf00      	nop
 8004c24:	40021000 	.word	0x40021000

08004c28 <HAL_RCC_ClockConfig>:
 8004c28:	b580      	push	{r7, lr}
 8004c2a:	b09e      	sub	sp, #120	@ 0x78
 8004c2c:	af00      	add	r7, sp, #0
 8004c2e:	6078      	str	r0, [r7, #4]
 8004c30:	6039      	str	r1, [r7, #0]
 8004c32:	2300      	movs	r3, #0
 8004c34:	677b      	str	r3, [r7, #116]	@ 0x74
 8004c36:	687b      	ldr	r3, [r7, #4]
 8004c38:	2b00      	cmp	r3, #0
 8004c3a:	d101      	bne.n	8004c40 <HAL_RCC_ClockConfig+0x18>
 8004c3c:	2301      	movs	r3, #1
 8004c3e:	e162      	b.n	8004f06 <HAL_RCC_ClockConfig+0x2de>
 8004c40:	4b90      	ldr	r3, [pc, #576]	@ (8004e84 <HAL_RCC_ClockConfig+0x25c>)
 8004c42:	681b      	ldr	r3, [r3, #0]
 8004c44:	f003 0307 	and.w	r3, r3, #7
 8004c48:	683a      	ldr	r2, [r7, #0]
 8004c4a:	429a      	cmp	r2, r3
 8004c4c:	d910      	bls.n	8004c70 <HAL_RCC_ClockConfig+0x48>
 8004c4e:	4b8d      	ldr	r3, [pc, #564]	@ (8004e84 <HAL_RCC_ClockConfig+0x25c>)
 8004c50:	681b      	ldr	r3, [r3, #0]
 8004c52:	f023 0207 	bic.w	r2, r3, #7
 8004c56:	498b      	ldr	r1, [pc, #556]	@ (8004e84 <HAL_RCC_ClockConfig+0x25c>)
 8004c58:	683b      	ldr	r3, [r7, #0]
 8004c5a:	4313      	orrs	r3, r2
 8004c5c:	600b      	str	r3, [r1, #0]
 8004c5e:	4b89      	ldr	r3, [pc, #548]	@ (8004e84 <HAL_RCC_ClockConfig+0x25c>)
 8004c60:	681b      	ldr	r3, [r3, #0]
 8004c62:	f003 0307 	and.w	r3, r3, #7
 8004c66:	683a      	ldr	r2, [r7, #0]
 8004c68:	429a      	cmp	r2, r3
 8004c6a:	d001      	beq.n	8004c70 <HAL_RCC_ClockConfig+0x48>
 8004c6c:	2301      	movs	r3, #1
 8004c6e:	e14a      	b.n	8004f06 <HAL_RCC_ClockConfig+0x2de>
 8004c70:	687b      	ldr	r3, [r7, #4]
 8004c72:	681b      	ldr	r3, [r3, #0]
 8004c74:	f003 0302 	and.w	r3, r3, #2
 8004c78:	2b00      	cmp	r3, #0
 8004c7a:	d008      	beq.n	8004c8e <HAL_RCC_ClockConfig+0x66>
 8004c7c:	4b82      	ldr	r3, [pc, #520]	@ (8004e88 <HAL_RCC_ClockConfig+0x260>)
 8004c7e:	685b      	ldr	r3, [r3, #4]
 8004c80:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 8004c84:	687b      	ldr	r3, [r7, #4]
 8004c86:	689b      	ldr	r3, [r3, #8]
 8004c88:	497f      	ldr	r1, [pc, #508]	@ (8004e88 <HAL_RCC_ClockConfig+0x260>)
 8004c8a:	4313      	orrs	r3, r2
 8004c8c:	604b      	str	r3, [r1, #4]
 8004c8e:	687b      	ldr	r3, [r7, #4]
 8004c90:	681b      	ldr	r3, [r3, #0]
 8004c92:	f003 0301 	and.w	r3, r3, #1
 8004c96:	2b00      	cmp	r3, #0
 8004c98:	f000 80dc 	beq.w	8004e54 <HAL_RCC_ClockConfig+0x22c>
 8004c9c:	687b      	ldr	r3, [r7, #4]
 8004c9e:	685b      	ldr	r3, [r3, #4]
 8004ca0:	2b01      	cmp	r3, #1
 8004ca2:	d13c      	bne.n	8004d1e <HAL_RCC_ClockConfig+0xf6>
 8004ca4:	f44f 3300 	mov.w	r3, #131072	@ 0x20000
 8004ca8:	673b      	str	r3, [r7, #112]	@ 0x70
 8004caa:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 8004cac:	fa93 f3a3 	rbit	r3, r3
 8004cb0:	66fb      	str	r3, [r7, #108]	@ 0x6c
 8004cb2:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8004cb4:	fab3 f383 	clz	r3, r3
 8004cb8:	b2db      	uxtb	r3, r3
 8004cba:	095b      	lsrs	r3, r3, #5
 8004cbc:	b2db      	uxtb	r3, r3
 8004cbe:	f043 0301 	orr.w	r3, r3, #1
 8004cc2:	b2db      	uxtb	r3, r3
 8004cc4:	2b01      	cmp	r3, #1
 8004cc6:	d102      	bne.n	8004cce <HAL_RCC_ClockConfig+0xa6>
 8004cc8:	4b6f      	ldr	r3, [pc, #444]	@ (8004e88 <HAL_RCC_ClockConfig+0x260>)
 8004cca:	681b      	ldr	r3, [r3, #0]
 8004ccc:	e00f      	b.n	8004cee <HAL_RCC_ClockConfig+0xc6>
 8004cce:	f44f 3300 	mov.w	r3, #131072	@ 0x20000
 8004cd2:	66bb      	str	r3, [r7, #104]	@ 0x68
 8004cd4:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 8004cd6:	fa93 f3a3 	rbit	r3, r3
 8004cda:	667b      	str	r3, [r7, #100]	@ 0x64
 8004cdc:	f44f 3300 	mov.w	r3, #131072	@ 0x20000
 8004ce0:	663b      	str	r3, [r7, #96]	@ 0x60
 8004ce2:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 8004ce4:	fa93 f3a3 	rbit	r3, r3
 8004ce8:	65fb      	str	r3, [r7, #92]	@ 0x5c
 8004cea:	4b67      	ldr	r3, [pc, #412]	@ (8004e88 <HAL_RCC_ClockConfig+0x260>)
 8004cec:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004cee:	f44f 3200 	mov.w	r2, #131072	@ 0x20000
 8004cf2:	65ba      	str	r2, [r7, #88]	@ 0x58
 8004cf4:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 8004cf6:	fa92 f2a2 	rbit	r2, r2
 8004cfa:	657a      	str	r2, [r7, #84]	@ 0x54
 8004cfc:	6d7a      	ldr	r2, [r7, #84]	@ 0x54
 8004cfe:	fab2 f282 	clz	r2, r2
 8004d02:	b2d2      	uxtb	r2, r2
 8004d04:	f042 0220 	orr.w	r2, r2, #32
 8004d08:	b2d2      	uxtb	r2, r2
 8004d0a:	f002 021f 	and.w	r2, r2, #31
 8004d0e:	2101      	movs	r1, #1
 8004d10:	fa01 f202 	lsl.w	r2, r1, r2
 8004d14:	4013      	ands	r3, r2
 8004d16:	2b00      	cmp	r3, #0
 8004d18:	d17b      	bne.n	8004e12 <HAL_RCC_ClockConfig+0x1ea>
 8004d1a:	2301      	movs	r3, #1
 8004d1c:	e0f3      	b.n	8004f06 <HAL_RCC_ClockConfig+0x2de>
 8004d1e:	687b      	ldr	r3, [r7, #4]
 8004d20:	685b      	ldr	r3, [r3, #4]
 8004d22:	2b02      	cmp	r3, #2
 8004d24:	d13c      	bne.n	8004da0 <HAL_RCC_ClockConfig+0x178>
 8004d26:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
 8004d2a:	653b      	str	r3, [r7, #80]	@ 0x50
 8004d2c:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 8004d2e:	fa93 f3a3 	rbit	r3, r3
 8004d32:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8004d34:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8004d36:	fab3 f383 	clz	r3, r3
 8004d3a:	b2db      	uxtb	r3, r3
 8004d3c:	095b      	lsrs	r3, r3, #5
 8004d3e:	b2db      	uxtb	r3, r3
 8004d40:	f043 0301 	orr.w	r3, r3, #1
 8004d44:	b2db      	uxtb	r3, r3
 8004d46:	2b01      	cmp	r3, #1
 8004d48:	d102      	bne.n	8004d50 <HAL_RCC_ClockConfig+0x128>
 8004d4a:	4b4f      	ldr	r3, [pc, #316]	@ (8004e88 <HAL_RCC_ClockConfig+0x260>)
 8004d4c:	681b      	ldr	r3, [r3, #0]
 8004d4e:	e00f      	b.n	8004d70 <HAL_RCC_ClockConfig+0x148>
 8004d50:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
 8004d54:	64bb      	str	r3, [r7, #72]	@ 0x48
 8004d56:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8004d58:	fa93 f3a3 	rbit	r3, r3
 8004d5c:	647b      	str	r3, [r7, #68]	@ 0x44
 8004d5e:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
 8004d62:	643b      	str	r3, [r7, #64]	@ 0x40
 8004d64:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 8004d66:	fa93 f3a3 	rbit	r3, r3
 8004d6a:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8004d6c:	4b46      	ldr	r3, [pc, #280]	@ (8004e88 <HAL_RCC_ClockConfig+0x260>)
 8004d6e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004d70:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8004d74:	63ba      	str	r2, [r7, #56]	@ 0x38
 8004d76:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 8004d78:	fa92 f2a2 	rbit	r2, r2
 8004d7c:	637a      	str	r2, [r7, #52]	@ 0x34
 8004d7e:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 8004d80:	fab2 f282 	clz	r2, r2
 8004d84:	b2d2      	uxtb	r2, r2
 8004d86:	f042 0220 	orr.w	r2, r2, #32
 8004d8a:	b2d2      	uxtb	r2, r2
 8004d8c:	f002 021f 	and.w	r2, r2, #31
 8004d90:	2101      	movs	r1, #1
 8004d92:	fa01 f202 	lsl.w	r2, r1, r2
 8004d96:	4013      	ands	r3, r2
 8004d98:	2b00      	cmp	r3, #0
 8004d9a:	d13a      	bne.n	8004e12 <HAL_RCC_ClockConfig+0x1ea>
 8004d9c:	2301      	movs	r3, #1
 8004d9e:	e0b2      	b.n	8004f06 <HAL_RCC_ClockConfig+0x2de>
 8004da0:	2302      	movs	r3, #2
 8004da2:	633b      	str	r3, [r7, #48]	@ 0x30
 8004da4:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004da6:	fa93 f3a3 	rbit	r3, r3
 8004daa:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8004dac:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8004dae:	fab3 f383 	clz	r3, r3
 8004db2:	b2db      	uxtb	r3, r3
 8004db4:	095b      	lsrs	r3, r3, #5
 8004db6:	b2db      	uxtb	r3, r3
 8004db8:	f043 0301 	orr.w	r3, r3, #1
 8004dbc:	b2db      	uxtb	r3, r3
 8004dbe:	2b01      	cmp	r3, #1
 8004dc0:	d102      	bne.n	8004dc8 <HAL_RCC_ClockConfig+0x1a0>
 8004dc2:	4b31      	ldr	r3, [pc, #196]	@ (8004e88 <HAL_RCC_ClockConfig+0x260>)
 8004dc4:	681b      	ldr	r3, [r3, #0]
 8004dc6:	e00d      	b.n	8004de4 <HAL_RCC_ClockConfig+0x1bc>
 8004dc8:	2302      	movs	r3, #2
 8004dca:	62bb      	str	r3, [r7, #40]	@ 0x28
 8004dcc:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8004dce:	fa93 f3a3 	rbit	r3, r3
 8004dd2:	627b      	str	r3, [r7, #36]	@ 0x24
 8004dd4:	2302      	movs	r3, #2
 8004dd6:	623b      	str	r3, [r7, #32]
 8004dd8:	6a3b      	ldr	r3, [r7, #32]
 8004dda:	fa93 f3a3 	rbit	r3, r3
 8004dde:	61fb      	str	r3, [r7, #28]
 8004de0:	4b29      	ldr	r3, [pc, #164]	@ (8004e88 <HAL_RCC_ClockConfig+0x260>)
 8004de2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004de4:	2202      	movs	r2, #2
 8004de6:	61ba      	str	r2, [r7, #24]
 8004de8:	69ba      	ldr	r2, [r7, #24]
 8004dea:	fa92 f2a2 	rbit	r2, r2
 8004dee:	617a      	str	r2, [r7, #20]
 8004df0:	697a      	ldr	r2, [r7, #20]
 8004df2:	fab2 f282 	clz	r2, r2
 8004df6:	b2d2      	uxtb	r2, r2
 8004df8:	f042 0220 	orr.w	r2, r2, #32
 8004dfc:	b2d2      	uxtb	r2, r2
 8004dfe:	f002 021f 	and.w	r2, r2, #31
 8004e02:	2101      	movs	r1, #1
 8004e04:	fa01 f202 	lsl.w	r2, r1, r2
 8004e08:	4013      	ands	r3, r2
 8004e0a:	2b00      	cmp	r3, #0
 8004e0c:	d101      	bne.n	8004e12 <HAL_RCC_ClockConfig+0x1ea>
 8004e0e:	2301      	movs	r3, #1
 8004e10:	e079      	b.n	8004f06 <HAL_RCC_ClockConfig+0x2de>
 8004e12:	4b1d      	ldr	r3, [pc, #116]	@ (8004e88 <HAL_RCC_ClockConfig+0x260>)
 8004e14:	685b      	ldr	r3, [r3, #4]
 8004e16:	f023 0203 	bic.w	r2, r3, #3
 8004e1a:	687b      	ldr	r3, [r7, #4]
 8004e1c:	685b      	ldr	r3, [r3, #4]
 8004e1e:	491a      	ldr	r1, [pc, #104]	@ (8004e88 <HAL_RCC_ClockConfig+0x260>)
 8004e20:	4313      	orrs	r3, r2
 8004e22:	604b      	str	r3, [r1, #4]
 8004e24:	f7fd fd56 	bl	80028d4 <HAL_GetTick>
 8004e28:	6778      	str	r0, [r7, #116]	@ 0x74
 8004e2a:	e00a      	b.n	8004e42 <HAL_RCC_ClockConfig+0x21a>
 8004e2c:	f7fd fd52 	bl	80028d4 <HAL_GetTick>
 8004e30:	4602      	mov	r2, r0
 8004e32:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 8004e34:	1ad3      	subs	r3, r2, r3
 8004e36:	f241 3288 	movw	r2, #5000	@ 0x1388
 8004e3a:	4293      	cmp	r3, r2
 8004e3c:	d901      	bls.n	8004e42 <HAL_RCC_ClockConfig+0x21a>
 8004e3e:	2303      	movs	r3, #3
 8004e40:	e061      	b.n	8004f06 <HAL_RCC_ClockConfig+0x2de>
 8004e42:	4b11      	ldr	r3, [pc, #68]	@ (8004e88 <HAL_RCC_ClockConfig+0x260>)
 8004e44:	685b      	ldr	r3, [r3, #4]
 8004e46:	f003 020c 	and.w	r2, r3, #12
 8004e4a:	687b      	ldr	r3, [r7, #4]
 8004e4c:	685b      	ldr	r3, [r3, #4]
 8004e4e:	009b      	lsls	r3, r3, #2
 8004e50:	429a      	cmp	r2, r3
 8004e52:	d1eb      	bne.n	8004e2c <HAL_RCC_ClockConfig+0x204>
 8004e54:	4b0b      	ldr	r3, [pc, #44]	@ (8004e84 <HAL_RCC_ClockConfig+0x25c>)
 8004e56:	681b      	ldr	r3, [r3, #0]
 8004e58:	f003 0307 	and.w	r3, r3, #7
 8004e5c:	683a      	ldr	r2, [r7, #0]
 8004e5e:	429a      	cmp	r2, r3
 8004e60:	d214      	bcs.n	8004e8c <HAL_RCC_ClockConfig+0x264>
 8004e62:	4b08      	ldr	r3, [pc, #32]	@ (8004e84 <HAL_RCC_ClockConfig+0x25c>)
 8004e64:	681b      	ldr	r3, [r3, #0]
 8004e66:	f023 0207 	bic.w	r2, r3, #7
 8004e6a:	4906      	ldr	r1, [pc, #24]	@ (8004e84 <HAL_RCC_ClockConfig+0x25c>)
 8004e6c:	683b      	ldr	r3, [r7, #0]
 8004e6e:	4313      	orrs	r3, r2
 8004e70:	600b      	str	r3, [r1, #0]
 8004e72:	4b04      	ldr	r3, [pc, #16]	@ (8004e84 <HAL_RCC_ClockConfig+0x25c>)
 8004e74:	681b      	ldr	r3, [r3, #0]
 8004e76:	f003 0307 	and.w	r3, r3, #7
 8004e7a:	683a      	ldr	r2, [r7, #0]
 8004e7c:	429a      	cmp	r2, r3
 8004e7e:	d005      	beq.n	8004e8c <HAL_RCC_ClockConfig+0x264>
 8004e80:	2301      	movs	r3, #1
 8004e82:	e040      	b.n	8004f06 <HAL_RCC_ClockConfig+0x2de>
 8004e84:	40022000 	.word	0x40022000
 8004e88:	40021000 	.word	0x40021000
 8004e8c:	687b      	ldr	r3, [r7, #4]
 8004e8e:	681b      	ldr	r3, [r3, #0]
 8004e90:	f003 0304 	and.w	r3, r3, #4
 8004e94:	2b00      	cmp	r3, #0
 8004e96:	d008      	beq.n	8004eaa <HAL_RCC_ClockConfig+0x282>
 8004e98:	4b1d      	ldr	r3, [pc, #116]	@ (8004f10 <HAL_RCC_ClockConfig+0x2e8>)
 8004e9a:	685b      	ldr	r3, [r3, #4]
 8004e9c:	f423 62e0 	bic.w	r2, r3, #1792	@ 0x700
 8004ea0:	687b      	ldr	r3, [r7, #4]
 8004ea2:	68db      	ldr	r3, [r3, #12]
 8004ea4:	491a      	ldr	r1, [pc, #104]	@ (8004f10 <HAL_RCC_ClockConfig+0x2e8>)
 8004ea6:	4313      	orrs	r3, r2
 8004ea8:	604b      	str	r3, [r1, #4]
 8004eaa:	687b      	ldr	r3, [r7, #4]
 8004eac:	681b      	ldr	r3, [r3, #0]
 8004eae:	f003 0308 	and.w	r3, r3, #8
 8004eb2:	2b00      	cmp	r3, #0
 8004eb4:	d009      	beq.n	8004eca <HAL_RCC_ClockConfig+0x2a2>
 8004eb6:	4b16      	ldr	r3, [pc, #88]	@ (8004f10 <HAL_RCC_ClockConfig+0x2e8>)
 8004eb8:	685b      	ldr	r3, [r3, #4]
 8004eba:	f423 5260 	bic.w	r2, r3, #14336	@ 0x3800
 8004ebe:	687b      	ldr	r3, [r7, #4]
 8004ec0:	691b      	ldr	r3, [r3, #16]
 8004ec2:	00db      	lsls	r3, r3, #3
 8004ec4:	4912      	ldr	r1, [pc, #72]	@ (8004f10 <HAL_RCC_ClockConfig+0x2e8>)
 8004ec6:	4313      	orrs	r3, r2
 8004ec8:	604b      	str	r3, [r1, #4]
 8004eca:	f000 f829 	bl	8004f20 <HAL_RCC_GetSysClockFreq>
 8004ece:	4601      	mov	r1, r0
 8004ed0:	4b0f      	ldr	r3, [pc, #60]	@ (8004f10 <HAL_RCC_ClockConfig+0x2e8>)
 8004ed2:	685b      	ldr	r3, [r3, #4]
 8004ed4:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 8004ed8:	22f0      	movs	r2, #240	@ 0xf0
 8004eda:	613a      	str	r2, [r7, #16]
 8004edc:	693a      	ldr	r2, [r7, #16]
 8004ede:	fa92 f2a2 	rbit	r2, r2
 8004ee2:	60fa      	str	r2, [r7, #12]
 8004ee4:	68fa      	ldr	r2, [r7, #12]
 8004ee6:	fab2 f282 	clz	r2, r2
 8004eea:	b2d2      	uxtb	r2, r2
 8004eec:	40d3      	lsrs	r3, r2
 8004eee:	4a09      	ldr	r2, [pc, #36]	@ (8004f14 <HAL_RCC_ClockConfig+0x2ec>)
 8004ef0:	5cd3      	ldrb	r3, [r2, r3]
 8004ef2:	fa21 f303 	lsr.w	r3, r1, r3
 8004ef6:	4a08      	ldr	r2, [pc, #32]	@ (8004f18 <HAL_RCC_ClockConfig+0x2f0>)
 8004ef8:	6013      	str	r3, [r2, #0]
 8004efa:	4b08      	ldr	r3, [pc, #32]	@ (8004f1c <HAL_RCC_ClockConfig+0x2f4>)
 8004efc:	681b      	ldr	r3, [r3, #0]
 8004efe:	4618      	mov	r0, r3
 8004f00:	f7fd fca4 	bl	800284c <HAL_InitTick>
 8004f04:	2300      	movs	r3, #0
 8004f06:	4618      	mov	r0, r3
 8004f08:	3778      	adds	r7, #120	@ 0x78
 8004f0a:	46bd      	mov	sp, r7
 8004f0c:	bd80      	pop	{r7, pc}
 8004f0e:	bf00      	nop
 8004f10:	40021000 	.word	0x40021000
 8004f14:	0800a66c 	.word	0x0800a66c
 8004f18:	20000000 	.word	0x20000000
 8004f1c:	20000004 	.word	0x20000004

08004f20 <HAL_RCC_GetSysClockFreq>:
 8004f20:	b480      	push	{r7}
 8004f22:	b087      	sub	sp, #28
 8004f24:	af00      	add	r7, sp, #0
 8004f26:	2300      	movs	r3, #0
 8004f28:	60fb      	str	r3, [r7, #12]
 8004f2a:	2300      	movs	r3, #0
 8004f2c:	60bb      	str	r3, [r7, #8]
 8004f2e:	2300      	movs	r3, #0
 8004f30:	617b      	str	r3, [r7, #20]
 8004f32:	2300      	movs	r3, #0
 8004f34:	607b      	str	r3, [r7, #4]
 8004f36:	2300      	movs	r3, #0
 8004f38:	613b      	str	r3, [r7, #16]
 8004f3a:	4b1e      	ldr	r3, [pc, #120]	@ (8004fb4 <HAL_RCC_GetSysClockFreq+0x94>)
 8004f3c:	685b      	ldr	r3, [r3, #4]
 8004f3e:	60fb      	str	r3, [r7, #12]
 8004f40:	68fb      	ldr	r3, [r7, #12]
 8004f42:	f003 030c 	and.w	r3, r3, #12
 8004f46:	2b04      	cmp	r3, #4
 8004f48:	d002      	beq.n	8004f50 <HAL_RCC_GetSysClockFreq+0x30>
 8004f4a:	2b08      	cmp	r3, #8
 8004f4c:	d003      	beq.n	8004f56 <HAL_RCC_GetSysClockFreq+0x36>
 8004f4e:	e026      	b.n	8004f9e <HAL_RCC_GetSysClockFreq+0x7e>
 8004f50:	4b19      	ldr	r3, [pc, #100]	@ (8004fb8 <HAL_RCC_GetSysClockFreq+0x98>)
 8004f52:	613b      	str	r3, [r7, #16]
 8004f54:	e026      	b.n	8004fa4 <HAL_RCC_GetSysClockFreq+0x84>
 8004f56:	68fb      	ldr	r3, [r7, #12]
 8004f58:	0c9b      	lsrs	r3, r3, #18
 8004f5a:	f003 030f 	and.w	r3, r3, #15
 8004f5e:	4a17      	ldr	r2, [pc, #92]	@ (8004fbc <HAL_RCC_GetSysClockFreq+0x9c>)
 8004f60:	5cd3      	ldrb	r3, [r2, r3]
 8004f62:	607b      	str	r3, [r7, #4]
 8004f64:	4b13      	ldr	r3, [pc, #76]	@ (8004fb4 <HAL_RCC_GetSysClockFreq+0x94>)
 8004f66:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8004f68:	f003 030f 	and.w	r3, r3, #15
 8004f6c:	4a14      	ldr	r2, [pc, #80]	@ (8004fc0 <HAL_RCC_GetSysClockFreq+0xa0>)
 8004f6e:	5cd3      	ldrb	r3, [r2, r3]
 8004f70:	60bb      	str	r3, [r7, #8]
 8004f72:	68fb      	ldr	r3, [r7, #12]
 8004f74:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8004f78:	2b00      	cmp	r3, #0
 8004f7a:	d008      	beq.n	8004f8e <HAL_RCC_GetSysClockFreq+0x6e>
 8004f7c:	4a0e      	ldr	r2, [pc, #56]	@ (8004fb8 <HAL_RCC_GetSysClockFreq+0x98>)
 8004f7e:	68bb      	ldr	r3, [r7, #8]
 8004f80:	fbb2 f2f3 	udiv	r2, r2, r3
 8004f84:	687b      	ldr	r3, [r7, #4]
 8004f86:	fb02 f303 	mul.w	r3, r2, r3
 8004f8a:	617b      	str	r3, [r7, #20]
 8004f8c:	e004      	b.n	8004f98 <HAL_RCC_GetSysClockFreq+0x78>
 8004f8e:	687b      	ldr	r3, [r7, #4]
 8004f90:	4a0c      	ldr	r2, [pc, #48]	@ (8004fc4 <HAL_RCC_GetSysClockFreq+0xa4>)
 8004f92:	fb02 f303 	mul.w	r3, r2, r3
 8004f96:	617b      	str	r3, [r7, #20]
 8004f98:	697b      	ldr	r3, [r7, #20]
 8004f9a:	613b      	str	r3, [r7, #16]
 8004f9c:	e002      	b.n	8004fa4 <HAL_RCC_GetSysClockFreq+0x84>
 8004f9e:	4b06      	ldr	r3, [pc, #24]	@ (8004fb8 <HAL_RCC_GetSysClockFreq+0x98>)
 8004fa0:	613b      	str	r3, [r7, #16]
 8004fa2:	bf00      	nop
 8004fa4:	693b      	ldr	r3, [r7, #16]
 8004fa6:	4618      	mov	r0, r3
 8004fa8:	371c      	adds	r7, #28
 8004faa:	46bd      	mov	sp, r7
 8004fac:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004fb0:	4770      	bx	lr
 8004fb2:	bf00      	nop
 8004fb4:	40021000 	.word	0x40021000
 8004fb8:	007a1200 	.word	0x007a1200
 8004fbc:	0800a684 	.word	0x0800a684
 8004fc0:	0800a694 	.word	0x0800a694
 8004fc4:	003d0900 	.word	0x003d0900

08004fc8 <HAL_RCC_GetHCLKFreq>:
 8004fc8:	b480      	push	{r7}
 8004fca:	af00      	add	r7, sp, #0
 8004fcc:	4b03      	ldr	r3, [pc, #12]	@ (8004fdc <HAL_RCC_GetHCLKFreq+0x14>)
 8004fce:	681b      	ldr	r3, [r3, #0]
 8004fd0:	4618      	mov	r0, r3
 8004fd2:	46bd      	mov	sp, r7
 8004fd4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004fd8:	4770      	bx	lr
 8004fda:	bf00      	nop
 8004fdc:	20000000 	.word	0x20000000

08004fe0 <HAL_RCC_GetPCLK1Freq>:
 8004fe0:	b580      	push	{r7, lr}
 8004fe2:	b082      	sub	sp, #8
 8004fe4:	af00      	add	r7, sp, #0
 8004fe6:	f7ff ffef 	bl	8004fc8 <HAL_RCC_GetHCLKFreq>
 8004fea:	4601      	mov	r1, r0
 8004fec:	4b0b      	ldr	r3, [pc, #44]	@ (800501c <HAL_RCC_GetPCLK1Freq+0x3c>)
 8004fee:	685b      	ldr	r3, [r3, #4]
 8004ff0:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
 8004ff4:	f44f 62e0 	mov.w	r2, #1792	@ 0x700
 8004ff8:	607a      	str	r2, [r7, #4]
 8004ffa:	687a      	ldr	r2, [r7, #4]
 8004ffc:	fa92 f2a2 	rbit	r2, r2
 8005000:	603a      	str	r2, [r7, #0]
 8005002:	683a      	ldr	r2, [r7, #0]
 8005004:	fab2 f282 	clz	r2, r2
 8005008:	b2d2      	uxtb	r2, r2
 800500a:	40d3      	lsrs	r3, r2
 800500c:	4a04      	ldr	r2, [pc, #16]	@ (8005020 <HAL_RCC_GetPCLK1Freq+0x40>)
 800500e:	5cd3      	ldrb	r3, [r2, r3]
 8005010:	fa21 f303 	lsr.w	r3, r1, r3
 8005014:	4618      	mov	r0, r3
 8005016:	3708      	adds	r7, #8
 8005018:	46bd      	mov	sp, r7
 800501a:	bd80      	pop	{r7, pc}
 800501c:	40021000 	.word	0x40021000
 8005020:	0800a67c 	.word	0x0800a67c

08005024 <HAL_RCC_GetPCLK2Freq>:
 8005024:	b580      	push	{r7, lr}
 8005026:	b082      	sub	sp, #8
 8005028:	af00      	add	r7, sp, #0
 800502a:	f7ff ffcd 	bl	8004fc8 <HAL_RCC_GetHCLKFreq>
 800502e:	4601      	mov	r1, r0
 8005030:	4b0b      	ldr	r3, [pc, #44]	@ (8005060 <HAL_RCC_GetPCLK2Freq+0x3c>)
 8005032:	685b      	ldr	r3, [r3, #4]
 8005034:	f403 5360 	and.w	r3, r3, #14336	@ 0x3800
 8005038:	f44f 5260 	mov.w	r2, #14336	@ 0x3800
 800503c:	607a      	str	r2, [r7, #4]
 800503e:	687a      	ldr	r2, [r7, #4]
 8005040:	fa92 f2a2 	rbit	r2, r2
 8005044:	603a      	str	r2, [r7, #0]
 8005046:	683a      	ldr	r2, [r7, #0]
 8005048:	fab2 f282 	clz	r2, r2
 800504c:	b2d2      	uxtb	r2, r2
 800504e:	40d3      	lsrs	r3, r2
 8005050:	4a04      	ldr	r2, [pc, #16]	@ (8005064 <HAL_RCC_GetPCLK2Freq+0x40>)
 8005052:	5cd3      	ldrb	r3, [r2, r3]
 8005054:	fa21 f303 	lsr.w	r3, r1, r3
 8005058:	4618      	mov	r0, r3
 800505a:	3708      	adds	r7, #8
 800505c:	46bd      	mov	sp, r7
 800505e:	bd80      	pop	{r7, pc}
 8005060:	40021000 	.word	0x40021000
 8005064:	0800a67c 	.word	0x0800a67c

08005068 <HAL_RCCEx_PeriphCLKConfig>:
 8005068:	b580      	push	{r7, lr}
 800506a:	b092      	sub	sp, #72	@ 0x48
 800506c:	af00      	add	r7, sp, #0
 800506e:	6078      	str	r0, [r7, #4]
 8005070:	2300      	movs	r3, #0
 8005072:	643b      	str	r3, [r7, #64]	@ 0x40
 8005074:	2300      	movs	r3, #0
 8005076:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8005078:	2300      	movs	r3, #0
 800507a:	f887 3047 	strb.w	r3, [r7, #71]	@ 0x47
 800507e:	687b      	ldr	r3, [r7, #4]
 8005080:	681b      	ldr	r3, [r3, #0]
 8005082:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8005086:	2b00      	cmp	r3, #0
 8005088:	f000 80cd 	beq.w	8005226 <HAL_RCCEx_PeriphCLKConfig+0x1be>
 800508c:	4b86      	ldr	r3, [pc, #536]	@ (80052a8 <HAL_RCCEx_PeriphCLKConfig+0x240>)
 800508e:	69db      	ldr	r3, [r3, #28]
 8005090:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8005094:	2b00      	cmp	r3, #0
 8005096:	d10e      	bne.n	80050b6 <HAL_RCCEx_PeriphCLKConfig+0x4e>
 8005098:	4b83      	ldr	r3, [pc, #524]	@ (80052a8 <HAL_RCCEx_PeriphCLKConfig+0x240>)
 800509a:	69db      	ldr	r3, [r3, #28]
 800509c:	4a82      	ldr	r2, [pc, #520]	@ (80052a8 <HAL_RCCEx_PeriphCLKConfig+0x240>)
 800509e:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80050a2:	61d3      	str	r3, [r2, #28]
 80050a4:	4b80      	ldr	r3, [pc, #512]	@ (80052a8 <HAL_RCCEx_PeriphCLKConfig+0x240>)
 80050a6:	69db      	ldr	r3, [r3, #28]
 80050a8:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80050ac:	60bb      	str	r3, [r7, #8]
 80050ae:	68bb      	ldr	r3, [r7, #8]
 80050b0:	2301      	movs	r3, #1
 80050b2:	f887 3047 	strb.w	r3, [r7, #71]	@ 0x47
 80050b6:	4b7d      	ldr	r3, [pc, #500]	@ (80052ac <HAL_RCCEx_PeriphCLKConfig+0x244>)
 80050b8:	681b      	ldr	r3, [r3, #0]
 80050ba:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80050be:	2b00      	cmp	r3, #0
 80050c0:	d118      	bne.n	80050f4 <HAL_RCCEx_PeriphCLKConfig+0x8c>
 80050c2:	4b7a      	ldr	r3, [pc, #488]	@ (80052ac <HAL_RCCEx_PeriphCLKConfig+0x244>)
 80050c4:	681b      	ldr	r3, [r3, #0]
 80050c6:	4a79      	ldr	r2, [pc, #484]	@ (80052ac <HAL_RCCEx_PeriphCLKConfig+0x244>)
 80050c8:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80050cc:	6013      	str	r3, [r2, #0]
 80050ce:	f7fd fc01 	bl	80028d4 <HAL_GetTick>
 80050d2:	6438      	str	r0, [r7, #64]	@ 0x40
 80050d4:	e008      	b.n	80050e8 <HAL_RCCEx_PeriphCLKConfig+0x80>
 80050d6:	f7fd fbfd 	bl	80028d4 <HAL_GetTick>
 80050da:	4602      	mov	r2, r0
 80050dc:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 80050de:	1ad3      	subs	r3, r2, r3
 80050e0:	2b64      	cmp	r3, #100	@ 0x64
 80050e2:	d901      	bls.n	80050e8 <HAL_RCCEx_PeriphCLKConfig+0x80>
 80050e4:	2303      	movs	r3, #3
 80050e6:	e0db      	b.n	80052a0 <HAL_RCCEx_PeriphCLKConfig+0x238>
 80050e8:	4b70      	ldr	r3, [pc, #448]	@ (80052ac <HAL_RCCEx_PeriphCLKConfig+0x244>)
 80050ea:	681b      	ldr	r3, [r3, #0]
 80050ec:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80050f0:	2b00      	cmp	r3, #0
 80050f2:	d0f0      	beq.n	80050d6 <HAL_RCCEx_PeriphCLKConfig+0x6e>
 80050f4:	4b6c      	ldr	r3, [pc, #432]	@ (80052a8 <HAL_RCCEx_PeriphCLKConfig+0x240>)
 80050f6:	6a1b      	ldr	r3, [r3, #32]
 80050f8:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 80050fc:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80050fe:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8005100:	2b00      	cmp	r3, #0
 8005102:	d07d      	beq.n	8005200 <HAL_RCCEx_PeriphCLKConfig+0x198>
 8005104:	687b      	ldr	r3, [r7, #4]
 8005106:	685b      	ldr	r3, [r3, #4]
 8005108:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 800510c:	6bfa      	ldr	r2, [r7, #60]	@ 0x3c
 800510e:	429a      	cmp	r2, r3
 8005110:	d076      	beq.n	8005200 <HAL_RCCEx_PeriphCLKConfig+0x198>
 8005112:	4b65      	ldr	r3, [pc, #404]	@ (80052a8 <HAL_RCCEx_PeriphCLKConfig+0x240>)
 8005114:	6a1b      	ldr	r3, [r3, #32]
 8005116:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 800511a:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800511c:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 8005120:	633b      	str	r3, [r7, #48]	@ 0x30
 8005122:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8005124:	fa93 f3a3 	rbit	r3, r3
 8005128:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800512a:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800512c:	fab3 f383 	clz	r3, r3
 8005130:	b2db      	uxtb	r3, r3
 8005132:	461a      	mov	r2, r3
 8005134:	4b5e      	ldr	r3, [pc, #376]	@ (80052b0 <HAL_RCCEx_PeriphCLKConfig+0x248>)
 8005136:	4413      	add	r3, r2
 8005138:	009b      	lsls	r3, r3, #2
 800513a:	461a      	mov	r2, r3
 800513c:	2301      	movs	r3, #1
 800513e:	6013      	str	r3, [r2, #0]
 8005140:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 8005144:	63bb      	str	r3, [r7, #56]	@ 0x38
 8005146:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8005148:	fa93 f3a3 	rbit	r3, r3
 800514c:	637b      	str	r3, [r7, #52]	@ 0x34
 800514e:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8005150:	fab3 f383 	clz	r3, r3
 8005154:	b2db      	uxtb	r3, r3
 8005156:	461a      	mov	r2, r3
 8005158:	4b55      	ldr	r3, [pc, #340]	@ (80052b0 <HAL_RCCEx_PeriphCLKConfig+0x248>)
 800515a:	4413      	add	r3, r2
 800515c:	009b      	lsls	r3, r3, #2
 800515e:	461a      	mov	r2, r3
 8005160:	2300      	movs	r3, #0
 8005162:	6013      	str	r3, [r2, #0]
 8005164:	4a50      	ldr	r2, [pc, #320]	@ (80052a8 <HAL_RCCEx_PeriphCLKConfig+0x240>)
 8005166:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8005168:	6213      	str	r3, [r2, #32]
 800516a:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800516c:	f003 0301 	and.w	r3, r3, #1
 8005170:	2b00      	cmp	r3, #0
 8005172:	d045      	beq.n	8005200 <HAL_RCCEx_PeriphCLKConfig+0x198>
 8005174:	f7fd fbae 	bl	80028d4 <HAL_GetTick>
 8005178:	6438      	str	r0, [r7, #64]	@ 0x40
 800517a:	e00a      	b.n	8005192 <HAL_RCCEx_PeriphCLKConfig+0x12a>
 800517c:	f7fd fbaa 	bl	80028d4 <HAL_GetTick>
 8005180:	4602      	mov	r2, r0
 8005182:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 8005184:	1ad3      	subs	r3, r2, r3
 8005186:	f241 3288 	movw	r2, #5000	@ 0x1388
 800518a:	4293      	cmp	r3, r2
 800518c:	d901      	bls.n	8005192 <HAL_RCCEx_PeriphCLKConfig+0x12a>
 800518e:	2303      	movs	r3, #3
 8005190:	e086      	b.n	80052a0 <HAL_RCCEx_PeriphCLKConfig+0x238>
 8005192:	2302      	movs	r3, #2
 8005194:	62bb      	str	r3, [r7, #40]	@ 0x28
 8005196:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8005198:	fa93 f3a3 	rbit	r3, r3
 800519c:	627b      	str	r3, [r7, #36]	@ 0x24
 800519e:	2302      	movs	r3, #2
 80051a0:	623b      	str	r3, [r7, #32]
 80051a2:	6a3b      	ldr	r3, [r7, #32]
 80051a4:	fa93 f3a3 	rbit	r3, r3
 80051a8:	61fb      	str	r3, [r7, #28]
 80051aa:	69fb      	ldr	r3, [r7, #28]
 80051ac:	fab3 f383 	clz	r3, r3
 80051b0:	b2db      	uxtb	r3, r3
 80051b2:	095b      	lsrs	r3, r3, #5
 80051b4:	b2db      	uxtb	r3, r3
 80051b6:	f043 0302 	orr.w	r3, r3, #2
 80051ba:	b2db      	uxtb	r3, r3
 80051bc:	2b02      	cmp	r3, #2
 80051be:	d102      	bne.n	80051c6 <HAL_RCCEx_PeriphCLKConfig+0x15e>
 80051c0:	4b39      	ldr	r3, [pc, #228]	@ (80052a8 <HAL_RCCEx_PeriphCLKConfig+0x240>)
 80051c2:	6a1b      	ldr	r3, [r3, #32]
 80051c4:	e007      	b.n	80051d6 <HAL_RCCEx_PeriphCLKConfig+0x16e>
 80051c6:	2302      	movs	r3, #2
 80051c8:	61bb      	str	r3, [r7, #24]
 80051ca:	69bb      	ldr	r3, [r7, #24]
 80051cc:	fa93 f3a3 	rbit	r3, r3
 80051d0:	617b      	str	r3, [r7, #20]
 80051d2:	4b35      	ldr	r3, [pc, #212]	@ (80052a8 <HAL_RCCEx_PeriphCLKConfig+0x240>)
 80051d4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80051d6:	2202      	movs	r2, #2
 80051d8:	613a      	str	r2, [r7, #16]
 80051da:	693a      	ldr	r2, [r7, #16]
 80051dc:	fa92 f2a2 	rbit	r2, r2
 80051e0:	60fa      	str	r2, [r7, #12]
 80051e2:	68fa      	ldr	r2, [r7, #12]
 80051e4:	fab2 f282 	clz	r2, r2
 80051e8:	b2d2      	uxtb	r2, r2
 80051ea:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 80051ee:	b2d2      	uxtb	r2, r2
 80051f0:	f002 021f 	and.w	r2, r2, #31
 80051f4:	2101      	movs	r1, #1
 80051f6:	fa01 f202 	lsl.w	r2, r1, r2
 80051fa:	4013      	ands	r3, r2
 80051fc:	2b00      	cmp	r3, #0
 80051fe:	d0bd      	beq.n	800517c <HAL_RCCEx_PeriphCLKConfig+0x114>
 8005200:	4b29      	ldr	r3, [pc, #164]	@ (80052a8 <HAL_RCCEx_PeriphCLKConfig+0x240>)
 8005202:	6a1b      	ldr	r3, [r3, #32]
 8005204:	f423 7240 	bic.w	r2, r3, #768	@ 0x300
 8005208:	687b      	ldr	r3, [r7, #4]
 800520a:	685b      	ldr	r3, [r3, #4]
 800520c:	4926      	ldr	r1, [pc, #152]	@ (80052a8 <HAL_RCCEx_PeriphCLKConfig+0x240>)
 800520e:	4313      	orrs	r3, r2
 8005210:	620b      	str	r3, [r1, #32]
 8005212:	f897 3047 	ldrb.w	r3, [r7, #71]	@ 0x47
 8005216:	2b01      	cmp	r3, #1
 8005218:	d105      	bne.n	8005226 <HAL_RCCEx_PeriphCLKConfig+0x1be>
 800521a:	4b23      	ldr	r3, [pc, #140]	@ (80052a8 <HAL_RCCEx_PeriphCLKConfig+0x240>)
 800521c:	69db      	ldr	r3, [r3, #28]
 800521e:	4a22      	ldr	r2, [pc, #136]	@ (80052a8 <HAL_RCCEx_PeriphCLKConfig+0x240>)
 8005220:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8005224:	61d3      	str	r3, [r2, #28]
 8005226:	687b      	ldr	r3, [r7, #4]
 8005228:	681b      	ldr	r3, [r3, #0]
 800522a:	f003 0301 	and.w	r3, r3, #1
 800522e:	2b00      	cmp	r3, #0
 8005230:	d008      	beq.n	8005244 <HAL_RCCEx_PeriphCLKConfig+0x1dc>
 8005232:	4b1d      	ldr	r3, [pc, #116]	@ (80052a8 <HAL_RCCEx_PeriphCLKConfig+0x240>)
 8005234:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005236:	f023 0203 	bic.w	r2, r3, #3
 800523a:	687b      	ldr	r3, [r7, #4]
 800523c:	689b      	ldr	r3, [r3, #8]
 800523e:	491a      	ldr	r1, [pc, #104]	@ (80052a8 <HAL_RCCEx_PeriphCLKConfig+0x240>)
 8005240:	4313      	orrs	r3, r2
 8005242:	630b      	str	r3, [r1, #48]	@ 0x30
 8005244:	687b      	ldr	r3, [r7, #4]
 8005246:	681b      	ldr	r3, [r3, #0]
 8005248:	f003 0320 	and.w	r3, r3, #32
 800524c:	2b00      	cmp	r3, #0
 800524e:	d008      	beq.n	8005262 <HAL_RCCEx_PeriphCLKConfig+0x1fa>
 8005250:	4b15      	ldr	r3, [pc, #84]	@ (80052a8 <HAL_RCCEx_PeriphCLKConfig+0x240>)
 8005252:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005254:	f023 0210 	bic.w	r2, r3, #16
 8005258:	687b      	ldr	r3, [r7, #4]
 800525a:	68db      	ldr	r3, [r3, #12]
 800525c:	4912      	ldr	r1, [pc, #72]	@ (80052a8 <HAL_RCCEx_PeriphCLKConfig+0x240>)
 800525e:	4313      	orrs	r3, r2
 8005260:	630b      	str	r3, [r1, #48]	@ 0x30
 8005262:	687b      	ldr	r3, [r7, #4]
 8005264:	681b      	ldr	r3, [r3, #0]
 8005266:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800526a:	2b00      	cmp	r3, #0
 800526c:	d008      	beq.n	8005280 <HAL_RCCEx_PeriphCLKConfig+0x218>
 800526e:	4b0e      	ldr	r3, [pc, #56]	@ (80052a8 <HAL_RCCEx_PeriphCLKConfig+0x240>)
 8005270:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8005272:	f423 72f8 	bic.w	r2, r3, #496	@ 0x1f0
 8005276:	687b      	ldr	r3, [r7, #4]
 8005278:	691b      	ldr	r3, [r3, #16]
 800527a:	490b      	ldr	r1, [pc, #44]	@ (80052a8 <HAL_RCCEx_PeriphCLKConfig+0x240>)
 800527c:	4313      	orrs	r3, r2
 800527e:	62cb      	str	r3, [r1, #44]	@ 0x2c
 8005280:	687b      	ldr	r3, [r7, #4]
 8005282:	681b      	ldr	r3, [r3, #0]
 8005284:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8005288:	2b00      	cmp	r3, #0
 800528a:	d008      	beq.n	800529e <HAL_RCCEx_PeriphCLKConfig+0x236>
 800528c:	4b06      	ldr	r3, [pc, #24]	@ (80052a8 <HAL_RCCEx_PeriphCLKConfig+0x240>)
 800528e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005290:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 8005294:	687b      	ldr	r3, [r7, #4]
 8005296:	695b      	ldr	r3, [r3, #20]
 8005298:	4903      	ldr	r1, [pc, #12]	@ (80052a8 <HAL_RCCEx_PeriphCLKConfig+0x240>)
 800529a:	4313      	orrs	r3, r2
 800529c:	630b      	str	r3, [r1, #48]	@ 0x30
 800529e:	2300      	movs	r3, #0
 80052a0:	4618      	mov	r0, r3
 80052a2:	3748      	adds	r7, #72	@ 0x48
 80052a4:	46bd      	mov	sp, r7
 80052a6:	bd80      	pop	{r7, pc}
 80052a8:	40021000 	.word	0x40021000
 80052ac:	40007000 	.word	0x40007000
 80052b0:	10908100 	.word	0x10908100

080052b4 <HAL_TIM_Base_Init>:
 80052b4:	b580      	push	{r7, lr}
 80052b6:	b082      	sub	sp, #8
 80052b8:	af00      	add	r7, sp, #0
 80052ba:	6078      	str	r0, [r7, #4]
 80052bc:	687b      	ldr	r3, [r7, #4]
 80052be:	2b00      	cmp	r3, #0
 80052c0:	d101      	bne.n	80052c6 <HAL_TIM_Base_Init+0x12>
 80052c2:	2301      	movs	r3, #1
 80052c4:	e049      	b.n	800535a <HAL_TIM_Base_Init+0xa6>
 80052c6:	687b      	ldr	r3, [r7, #4]
 80052c8:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 80052cc:	b2db      	uxtb	r3, r3
 80052ce:	2b00      	cmp	r3, #0
 80052d0:	d106      	bne.n	80052e0 <HAL_TIM_Base_Init+0x2c>
 80052d2:	687b      	ldr	r3, [r7, #4]
 80052d4:	2200      	movs	r2, #0
 80052d6:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80052da:	6878      	ldr	r0, [r7, #4]
 80052dc:	f7fd f82c 	bl	8002338 <HAL_TIM_Base_MspInit>
 80052e0:	687b      	ldr	r3, [r7, #4]
 80052e2:	2202      	movs	r2, #2
 80052e4:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80052e8:	687b      	ldr	r3, [r7, #4]
 80052ea:	681a      	ldr	r2, [r3, #0]
 80052ec:	687b      	ldr	r3, [r7, #4]
 80052ee:	3304      	adds	r3, #4
 80052f0:	4619      	mov	r1, r3
 80052f2:	4610      	mov	r0, r2
 80052f4:	f000 fc94 	bl	8005c20 <TIM_Base_SetConfig>
 80052f8:	687b      	ldr	r3, [r7, #4]
 80052fa:	2201      	movs	r2, #1
 80052fc:	f883 2048 	strb.w	r2, [r3, #72]	@ 0x48
 8005300:	687b      	ldr	r3, [r7, #4]
 8005302:	2201      	movs	r2, #1
 8005304:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8005308:	687b      	ldr	r3, [r7, #4]
 800530a:	2201      	movs	r2, #1
 800530c:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8005310:	687b      	ldr	r3, [r7, #4]
 8005312:	2201      	movs	r2, #1
 8005314:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8005318:	687b      	ldr	r3, [r7, #4]
 800531a:	2201      	movs	r2, #1
 800531c:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8005320:	687b      	ldr	r3, [r7, #4]
 8005322:	2201      	movs	r2, #1
 8005324:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8005328:	687b      	ldr	r3, [r7, #4]
 800532a:	2201      	movs	r2, #1
 800532c:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8005330:	687b      	ldr	r3, [r7, #4]
 8005332:	2201      	movs	r2, #1
 8005334:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8005338:	687b      	ldr	r3, [r7, #4]
 800533a:	2201      	movs	r2, #1
 800533c:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8005340:	687b      	ldr	r3, [r7, #4]
 8005342:	2201      	movs	r2, #1
 8005344:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 8005348:	687b      	ldr	r3, [r7, #4]
 800534a:	2201      	movs	r2, #1
 800534c:	f883 2047 	strb.w	r2, [r3, #71]	@ 0x47
 8005350:	687b      	ldr	r3, [r7, #4]
 8005352:	2201      	movs	r2, #1
 8005354:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005358:	2300      	movs	r3, #0
 800535a:	4618      	mov	r0, r3
 800535c:	3708      	adds	r7, #8
 800535e:	46bd      	mov	sp, r7
 8005360:	bd80      	pop	{r7, pc}

08005362 <HAL_TIM_PWM_Init>:
 8005362:	b580      	push	{r7, lr}
 8005364:	b082      	sub	sp, #8
 8005366:	af00      	add	r7, sp, #0
 8005368:	6078      	str	r0, [r7, #4]
 800536a:	687b      	ldr	r3, [r7, #4]
 800536c:	2b00      	cmp	r3, #0
 800536e:	d101      	bne.n	8005374 <HAL_TIM_PWM_Init+0x12>
 8005370:	2301      	movs	r3, #1
 8005372:	e049      	b.n	8005408 <HAL_TIM_PWM_Init+0xa6>
 8005374:	687b      	ldr	r3, [r7, #4]
 8005376:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 800537a:	b2db      	uxtb	r3, r3
 800537c:	2b00      	cmp	r3, #0
 800537e:	d106      	bne.n	800538e <HAL_TIM_PWM_Init+0x2c>
 8005380:	687b      	ldr	r3, [r7, #4]
 8005382:	2200      	movs	r2, #0
 8005384:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8005388:	6878      	ldr	r0, [r7, #4]
 800538a:	f000 f841 	bl	8005410 <HAL_TIM_PWM_MspInit>
 800538e:	687b      	ldr	r3, [r7, #4]
 8005390:	2202      	movs	r2, #2
 8005392:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005396:	687b      	ldr	r3, [r7, #4]
 8005398:	681a      	ldr	r2, [r3, #0]
 800539a:	687b      	ldr	r3, [r7, #4]
 800539c:	3304      	adds	r3, #4
 800539e:	4619      	mov	r1, r3
 80053a0:	4610      	mov	r0, r2
 80053a2:	f000 fc3d 	bl	8005c20 <TIM_Base_SetConfig>
 80053a6:	687b      	ldr	r3, [r7, #4]
 80053a8:	2201      	movs	r2, #1
 80053aa:	f883 2048 	strb.w	r2, [r3, #72]	@ 0x48
 80053ae:	687b      	ldr	r3, [r7, #4]
 80053b0:	2201      	movs	r2, #1
 80053b2:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80053b6:	687b      	ldr	r3, [r7, #4]
 80053b8:	2201      	movs	r2, #1
 80053ba:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 80053be:	687b      	ldr	r3, [r7, #4]
 80053c0:	2201      	movs	r2, #1
 80053c2:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 80053c6:	687b      	ldr	r3, [r7, #4]
 80053c8:	2201      	movs	r2, #1
 80053ca:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80053ce:	687b      	ldr	r3, [r7, #4]
 80053d0:	2201      	movs	r2, #1
 80053d2:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80053d6:	687b      	ldr	r3, [r7, #4]
 80053d8:	2201      	movs	r2, #1
 80053da:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 80053de:	687b      	ldr	r3, [r7, #4]
 80053e0:	2201      	movs	r2, #1
 80053e2:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 80053e6:	687b      	ldr	r3, [r7, #4]
 80053e8:	2201      	movs	r2, #1
 80053ea:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 80053ee:	687b      	ldr	r3, [r7, #4]
 80053f0:	2201      	movs	r2, #1
 80053f2:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 80053f6:	687b      	ldr	r3, [r7, #4]
 80053f8:	2201      	movs	r2, #1
 80053fa:	f883 2047 	strb.w	r2, [r3, #71]	@ 0x47
 80053fe:	687b      	ldr	r3, [r7, #4]
 8005400:	2201      	movs	r2, #1
 8005402:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005406:	2300      	movs	r3, #0
 8005408:	4618      	mov	r0, r3
 800540a:	3708      	adds	r7, #8
 800540c:	46bd      	mov	sp, r7
 800540e:	bd80      	pop	{r7, pc}

08005410 <HAL_TIM_PWM_MspInit>:
 8005410:	b480      	push	{r7}
 8005412:	b083      	sub	sp, #12
 8005414:	af00      	add	r7, sp, #0
 8005416:	6078      	str	r0, [r7, #4]
 8005418:	bf00      	nop
 800541a:	370c      	adds	r7, #12
 800541c:	46bd      	mov	sp, r7
 800541e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005422:	4770      	bx	lr

08005424 <HAL_TIM_PWM_Start>:
 8005424:	b580      	push	{r7, lr}
 8005426:	b084      	sub	sp, #16
 8005428:	af00      	add	r7, sp, #0
 800542a:	6078      	str	r0, [r7, #4]
 800542c:	6039      	str	r1, [r7, #0]
 800542e:	683b      	ldr	r3, [r7, #0]
 8005430:	2b00      	cmp	r3, #0
 8005432:	d109      	bne.n	8005448 <HAL_TIM_PWM_Start+0x24>
 8005434:	687b      	ldr	r3, [r7, #4]
 8005436:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 800543a:	b2db      	uxtb	r3, r3
 800543c:	2b01      	cmp	r3, #1
 800543e:	bf14      	ite	ne
 8005440:	2301      	movne	r3, #1
 8005442:	2300      	moveq	r3, #0
 8005444:	b2db      	uxtb	r3, r3
 8005446:	e03c      	b.n	80054c2 <HAL_TIM_PWM_Start+0x9e>
 8005448:	683b      	ldr	r3, [r7, #0]
 800544a:	2b04      	cmp	r3, #4
 800544c:	d109      	bne.n	8005462 <HAL_TIM_PWM_Start+0x3e>
 800544e:	687b      	ldr	r3, [r7, #4]
 8005450:	f893 303f 	ldrb.w	r3, [r3, #63]	@ 0x3f
 8005454:	b2db      	uxtb	r3, r3
 8005456:	2b01      	cmp	r3, #1
 8005458:	bf14      	ite	ne
 800545a:	2301      	movne	r3, #1
 800545c:	2300      	moveq	r3, #0
 800545e:	b2db      	uxtb	r3, r3
 8005460:	e02f      	b.n	80054c2 <HAL_TIM_PWM_Start+0x9e>
 8005462:	683b      	ldr	r3, [r7, #0]
 8005464:	2b08      	cmp	r3, #8
 8005466:	d109      	bne.n	800547c <HAL_TIM_PWM_Start+0x58>
 8005468:	687b      	ldr	r3, [r7, #4]
 800546a:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 800546e:	b2db      	uxtb	r3, r3
 8005470:	2b01      	cmp	r3, #1
 8005472:	bf14      	ite	ne
 8005474:	2301      	movne	r3, #1
 8005476:	2300      	moveq	r3, #0
 8005478:	b2db      	uxtb	r3, r3
 800547a:	e022      	b.n	80054c2 <HAL_TIM_PWM_Start+0x9e>
 800547c:	683b      	ldr	r3, [r7, #0]
 800547e:	2b0c      	cmp	r3, #12
 8005480:	d109      	bne.n	8005496 <HAL_TIM_PWM_Start+0x72>
 8005482:	687b      	ldr	r3, [r7, #4]
 8005484:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8005488:	b2db      	uxtb	r3, r3
 800548a:	2b01      	cmp	r3, #1
 800548c:	bf14      	ite	ne
 800548e:	2301      	movne	r3, #1
 8005490:	2300      	moveq	r3, #0
 8005492:	b2db      	uxtb	r3, r3
 8005494:	e015      	b.n	80054c2 <HAL_TIM_PWM_Start+0x9e>
 8005496:	683b      	ldr	r3, [r7, #0]
 8005498:	2b10      	cmp	r3, #16
 800549a:	d109      	bne.n	80054b0 <HAL_TIM_PWM_Start+0x8c>
 800549c:	687b      	ldr	r3, [r7, #4]
 800549e:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 80054a2:	b2db      	uxtb	r3, r3
 80054a4:	2b01      	cmp	r3, #1
 80054a6:	bf14      	ite	ne
 80054a8:	2301      	movne	r3, #1
 80054aa:	2300      	moveq	r3, #0
 80054ac:	b2db      	uxtb	r3, r3
 80054ae:	e008      	b.n	80054c2 <HAL_TIM_PWM_Start+0x9e>
 80054b0:	687b      	ldr	r3, [r7, #4]
 80054b2:	f893 3043 	ldrb.w	r3, [r3, #67]	@ 0x43
 80054b6:	b2db      	uxtb	r3, r3
 80054b8:	2b01      	cmp	r3, #1
 80054ba:	bf14      	ite	ne
 80054bc:	2301      	movne	r3, #1
 80054be:	2300      	moveq	r3, #0
 80054c0:	b2db      	uxtb	r3, r3
 80054c2:	2b00      	cmp	r3, #0
 80054c4:	d001      	beq.n	80054ca <HAL_TIM_PWM_Start+0xa6>
 80054c6:	2301      	movs	r3, #1
 80054c8:	e088      	b.n	80055dc <HAL_TIM_PWM_Start+0x1b8>
 80054ca:	683b      	ldr	r3, [r7, #0]
 80054cc:	2b00      	cmp	r3, #0
 80054ce:	d104      	bne.n	80054da <HAL_TIM_PWM_Start+0xb6>
 80054d0:	687b      	ldr	r3, [r7, #4]
 80054d2:	2202      	movs	r2, #2
 80054d4:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80054d8:	e023      	b.n	8005522 <HAL_TIM_PWM_Start+0xfe>
 80054da:	683b      	ldr	r3, [r7, #0]
 80054dc:	2b04      	cmp	r3, #4
 80054de:	d104      	bne.n	80054ea <HAL_TIM_PWM_Start+0xc6>
 80054e0:	687b      	ldr	r3, [r7, #4]
 80054e2:	2202      	movs	r2, #2
 80054e4:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 80054e8:	e01b      	b.n	8005522 <HAL_TIM_PWM_Start+0xfe>
 80054ea:	683b      	ldr	r3, [r7, #0]
 80054ec:	2b08      	cmp	r3, #8
 80054ee:	d104      	bne.n	80054fa <HAL_TIM_PWM_Start+0xd6>
 80054f0:	687b      	ldr	r3, [r7, #4]
 80054f2:	2202      	movs	r2, #2
 80054f4:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 80054f8:	e013      	b.n	8005522 <HAL_TIM_PWM_Start+0xfe>
 80054fa:	683b      	ldr	r3, [r7, #0]
 80054fc:	2b0c      	cmp	r3, #12
 80054fe:	d104      	bne.n	800550a <HAL_TIM_PWM_Start+0xe6>
 8005500:	687b      	ldr	r3, [r7, #4]
 8005502:	2202      	movs	r2, #2
 8005504:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8005508:	e00b      	b.n	8005522 <HAL_TIM_PWM_Start+0xfe>
 800550a:	683b      	ldr	r3, [r7, #0]
 800550c:	2b10      	cmp	r3, #16
 800550e:	d104      	bne.n	800551a <HAL_TIM_PWM_Start+0xf6>
 8005510:	687b      	ldr	r3, [r7, #4]
 8005512:	2202      	movs	r2, #2
 8005514:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8005518:	e003      	b.n	8005522 <HAL_TIM_PWM_Start+0xfe>
 800551a:	687b      	ldr	r3, [r7, #4]
 800551c:	2202      	movs	r2, #2
 800551e:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8005522:	687b      	ldr	r3, [r7, #4]
 8005524:	681b      	ldr	r3, [r3, #0]
 8005526:	2201      	movs	r2, #1
 8005528:	6839      	ldr	r1, [r7, #0]
 800552a:	4618      	mov	r0, r3
 800552c:	f000 ff3c 	bl	80063a8 <TIM_CCxChannelCmd>
 8005530:	687b      	ldr	r3, [r7, #4]
 8005532:	681b      	ldr	r3, [r3, #0]
 8005534:	4a2b      	ldr	r2, [pc, #172]	@ (80055e4 <HAL_TIM_PWM_Start+0x1c0>)
 8005536:	4293      	cmp	r3, r2
 8005538:	d00e      	beq.n	8005558 <HAL_TIM_PWM_Start+0x134>
 800553a:	687b      	ldr	r3, [r7, #4]
 800553c:	681b      	ldr	r3, [r3, #0]
 800553e:	4a2a      	ldr	r2, [pc, #168]	@ (80055e8 <HAL_TIM_PWM_Start+0x1c4>)
 8005540:	4293      	cmp	r3, r2
 8005542:	d009      	beq.n	8005558 <HAL_TIM_PWM_Start+0x134>
 8005544:	687b      	ldr	r3, [r7, #4]
 8005546:	681b      	ldr	r3, [r3, #0]
 8005548:	4a28      	ldr	r2, [pc, #160]	@ (80055ec <HAL_TIM_PWM_Start+0x1c8>)
 800554a:	4293      	cmp	r3, r2
 800554c:	d004      	beq.n	8005558 <HAL_TIM_PWM_Start+0x134>
 800554e:	687b      	ldr	r3, [r7, #4]
 8005550:	681b      	ldr	r3, [r3, #0]
 8005552:	4a27      	ldr	r2, [pc, #156]	@ (80055f0 <HAL_TIM_PWM_Start+0x1cc>)
 8005554:	4293      	cmp	r3, r2
 8005556:	d101      	bne.n	800555c <HAL_TIM_PWM_Start+0x138>
 8005558:	2301      	movs	r3, #1
 800555a:	e000      	b.n	800555e <HAL_TIM_PWM_Start+0x13a>
 800555c:	2300      	movs	r3, #0
 800555e:	2b00      	cmp	r3, #0
 8005560:	d007      	beq.n	8005572 <HAL_TIM_PWM_Start+0x14e>
 8005562:	687b      	ldr	r3, [r7, #4]
 8005564:	681b      	ldr	r3, [r3, #0]
 8005566:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8005568:	687b      	ldr	r3, [r7, #4]
 800556a:	681b      	ldr	r3, [r3, #0]
 800556c:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8005570:	645a      	str	r2, [r3, #68]	@ 0x44
 8005572:	687b      	ldr	r3, [r7, #4]
 8005574:	681b      	ldr	r3, [r3, #0]
 8005576:	4a1b      	ldr	r2, [pc, #108]	@ (80055e4 <HAL_TIM_PWM_Start+0x1c0>)
 8005578:	4293      	cmp	r3, r2
 800557a:	d00e      	beq.n	800559a <HAL_TIM_PWM_Start+0x176>
 800557c:	687b      	ldr	r3, [r7, #4]
 800557e:	681b      	ldr	r3, [r3, #0]
 8005580:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8005584:	d009      	beq.n	800559a <HAL_TIM_PWM_Start+0x176>
 8005586:	687b      	ldr	r3, [r7, #4]
 8005588:	681b      	ldr	r3, [r3, #0]
 800558a:	4a1a      	ldr	r2, [pc, #104]	@ (80055f4 <HAL_TIM_PWM_Start+0x1d0>)
 800558c:	4293      	cmp	r3, r2
 800558e:	d004      	beq.n	800559a <HAL_TIM_PWM_Start+0x176>
 8005590:	687b      	ldr	r3, [r7, #4]
 8005592:	681b      	ldr	r3, [r3, #0]
 8005594:	4a14      	ldr	r2, [pc, #80]	@ (80055e8 <HAL_TIM_PWM_Start+0x1c4>)
 8005596:	4293      	cmp	r3, r2
 8005598:	d115      	bne.n	80055c6 <HAL_TIM_PWM_Start+0x1a2>
 800559a:	687b      	ldr	r3, [r7, #4]
 800559c:	681b      	ldr	r3, [r3, #0]
 800559e:	689a      	ldr	r2, [r3, #8]
 80055a0:	4b15      	ldr	r3, [pc, #84]	@ (80055f8 <HAL_TIM_PWM_Start+0x1d4>)
 80055a2:	4013      	ands	r3, r2
 80055a4:	60fb      	str	r3, [r7, #12]
 80055a6:	68fb      	ldr	r3, [r7, #12]
 80055a8:	2b06      	cmp	r3, #6
 80055aa:	d015      	beq.n	80055d8 <HAL_TIM_PWM_Start+0x1b4>
 80055ac:	68fb      	ldr	r3, [r7, #12]
 80055ae:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 80055b2:	d011      	beq.n	80055d8 <HAL_TIM_PWM_Start+0x1b4>
 80055b4:	687b      	ldr	r3, [r7, #4]
 80055b6:	681b      	ldr	r3, [r3, #0]
 80055b8:	681a      	ldr	r2, [r3, #0]
 80055ba:	687b      	ldr	r3, [r7, #4]
 80055bc:	681b      	ldr	r3, [r3, #0]
 80055be:	f042 0201 	orr.w	r2, r2, #1
 80055c2:	601a      	str	r2, [r3, #0]
 80055c4:	e008      	b.n	80055d8 <HAL_TIM_PWM_Start+0x1b4>
 80055c6:	687b      	ldr	r3, [r7, #4]
 80055c8:	681b      	ldr	r3, [r3, #0]
 80055ca:	681a      	ldr	r2, [r3, #0]
 80055cc:	687b      	ldr	r3, [r7, #4]
 80055ce:	681b      	ldr	r3, [r3, #0]
 80055d0:	f042 0201 	orr.w	r2, r2, #1
 80055d4:	601a      	str	r2, [r3, #0]
 80055d6:	e000      	b.n	80055da <HAL_TIM_PWM_Start+0x1b6>
 80055d8:	bf00      	nop
 80055da:	2300      	movs	r3, #0
 80055dc:	4618      	mov	r0, r3
 80055de:	3710      	adds	r7, #16
 80055e0:	46bd      	mov	sp, r7
 80055e2:	bd80      	pop	{r7, pc}
 80055e4:	40012c00 	.word	0x40012c00
 80055e8:	40014000 	.word	0x40014000
 80055ec:	40014400 	.word	0x40014400
 80055f0:	40014800 	.word	0x40014800
 80055f4:	40000400 	.word	0x40000400
 80055f8:	00010007 	.word	0x00010007

080055fc <HAL_TIM_IRQHandler>:
 80055fc:	b580      	push	{r7, lr}
 80055fe:	b084      	sub	sp, #16
 8005600:	af00      	add	r7, sp, #0
 8005602:	6078      	str	r0, [r7, #4]
 8005604:	687b      	ldr	r3, [r7, #4]
 8005606:	681b      	ldr	r3, [r3, #0]
 8005608:	68db      	ldr	r3, [r3, #12]
 800560a:	60fb      	str	r3, [r7, #12]
 800560c:	687b      	ldr	r3, [r7, #4]
 800560e:	681b      	ldr	r3, [r3, #0]
 8005610:	691b      	ldr	r3, [r3, #16]
 8005612:	60bb      	str	r3, [r7, #8]
 8005614:	68bb      	ldr	r3, [r7, #8]
 8005616:	f003 0302 	and.w	r3, r3, #2
 800561a:	2b00      	cmp	r3, #0
 800561c:	d020      	beq.n	8005660 <HAL_TIM_IRQHandler+0x64>
 800561e:	68fb      	ldr	r3, [r7, #12]
 8005620:	f003 0302 	and.w	r3, r3, #2
 8005624:	2b00      	cmp	r3, #0
 8005626:	d01b      	beq.n	8005660 <HAL_TIM_IRQHandler+0x64>
 8005628:	687b      	ldr	r3, [r7, #4]
 800562a:	681b      	ldr	r3, [r3, #0]
 800562c:	f06f 0202 	mvn.w	r2, #2
 8005630:	611a      	str	r2, [r3, #16]
 8005632:	687b      	ldr	r3, [r7, #4]
 8005634:	2201      	movs	r2, #1
 8005636:	771a      	strb	r2, [r3, #28]
 8005638:	687b      	ldr	r3, [r7, #4]
 800563a:	681b      	ldr	r3, [r3, #0]
 800563c:	699b      	ldr	r3, [r3, #24]
 800563e:	f003 0303 	and.w	r3, r3, #3
 8005642:	2b00      	cmp	r3, #0
 8005644:	d003      	beq.n	800564e <HAL_TIM_IRQHandler+0x52>
 8005646:	6878      	ldr	r0, [r7, #4]
 8005648:	f000 facb 	bl	8005be2 <HAL_TIM_IC_CaptureCallback>
 800564c:	e005      	b.n	800565a <HAL_TIM_IRQHandler+0x5e>
 800564e:	6878      	ldr	r0, [r7, #4]
 8005650:	f000 fabd 	bl	8005bce <HAL_TIM_OC_DelayElapsedCallback>
 8005654:	6878      	ldr	r0, [r7, #4]
 8005656:	f000 face 	bl	8005bf6 <HAL_TIM_PWM_PulseFinishedCallback>
 800565a:	687b      	ldr	r3, [r7, #4]
 800565c:	2200      	movs	r2, #0
 800565e:	771a      	strb	r2, [r3, #28]
 8005660:	68bb      	ldr	r3, [r7, #8]
 8005662:	f003 0304 	and.w	r3, r3, #4
 8005666:	2b00      	cmp	r3, #0
 8005668:	d020      	beq.n	80056ac <HAL_TIM_IRQHandler+0xb0>
 800566a:	68fb      	ldr	r3, [r7, #12]
 800566c:	f003 0304 	and.w	r3, r3, #4
 8005670:	2b00      	cmp	r3, #0
 8005672:	d01b      	beq.n	80056ac <HAL_TIM_IRQHandler+0xb0>
 8005674:	687b      	ldr	r3, [r7, #4]
 8005676:	681b      	ldr	r3, [r3, #0]
 8005678:	f06f 0204 	mvn.w	r2, #4
 800567c:	611a      	str	r2, [r3, #16]
 800567e:	687b      	ldr	r3, [r7, #4]
 8005680:	2202      	movs	r2, #2
 8005682:	771a      	strb	r2, [r3, #28]
 8005684:	687b      	ldr	r3, [r7, #4]
 8005686:	681b      	ldr	r3, [r3, #0]
 8005688:	699b      	ldr	r3, [r3, #24]
 800568a:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 800568e:	2b00      	cmp	r3, #0
 8005690:	d003      	beq.n	800569a <HAL_TIM_IRQHandler+0x9e>
 8005692:	6878      	ldr	r0, [r7, #4]
 8005694:	f000 faa5 	bl	8005be2 <HAL_TIM_IC_CaptureCallback>
 8005698:	e005      	b.n	80056a6 <HAL_TIM_IRQHandler+0xaa>
 800569a:	6878      	ldr	r0, [r7, #4]
 800569c:	f000 fa97 	bl	8005bce <HAL_TIM_OC_DelayElapsedCallback>
 80056a0:	6878      	ldr	r0, [r7, #4]
 80056a2:	f000 faa8 	bl	8005bf6 <HAL_TIM_PWM_PulseFinishedCallback>
 80056a6:	687b      	ldr	r3, [r7, #4]
 80056a8:	2200      	movs	r2, #0
 80056aa:	771a      	strb	r2, [r3, #28]
 80056ac:	68bb      	ldr	r3, [r7, #8]
 80056ae:	f003 0308 	and.w	r3, r3, #8
 80056b2:	2b00      	cmp	r3, #0
 80056b4:	d020      	beq.n	80056f8 <HAL_TIM_IRQHandler+0xfc>
 80056b6:	68fb      	ldr	r3, [r7, #12]
 80056b8:	f003 0308 	and.w	r3, r3, #8
 80056bc:	2b00      	cmp	r3, #0
 80056be:	d01b      	beq.n	80056f8 <HAL_TIM_IRQHandler+0xfc>
 80056c0:	687b      	ldr	r3, [r7, #4]
 80056c2:	681b      	ldr	r3, [r3, #0]
 80056c4:	f06f 0208 	mvn.w	r2, #8
 80056c8:	611a      	str	r2, [r3, #16]
 80056ca:	687b      	ldr	r3, [r7, #4]
 80056cc:	2204      	movs	r2, #4
 80056ce:	771a      	strb	r2, [r3, #28]
 80056d0:	687b      	ldr	r3, [r7, #4]
 80056d2:	681b      	ldr	r3, [r3, #0]
 80056d4:	69db      	ldr	r3, [r3, #28]
 80056d6:	f003 0303 	and.w	r3, r3, #3
 80056da:	2b00      	cmp	r3, #0
 80056dc:	d003      	beq.n	80056e6 <HAL_TIM_IRQHandler+0xea>
 80056de:	6878      	ldr	r0, [r7, #4]
 80056e0:	f000 fa7f 	bl	8005be2 <HAL_TIM_IC_CaptureCallback>
 80056e4:	e005      	b.n	80056f2 <HAL_TIM_IRQHandler+0xf6>
 80056e6:	6878      	ldr	r0, [r7, #4]
 80056e8:	f000 fa71 	bl	8005bce <HAL_TIM_OC_DelayElapsedCallback>
 80056ec:	6878      	ldr	r0, [r7, #4]
 80056ee:	f000 fa82 	bl	8005bf6 <HAL_TIM_PWM_PulseFinishedCallback>
 80056f2:	687b      	ldr	r3, [r7, #4]
 80056f4:	2200      	movs	r2, #0
 80056f6:	771a      	strb	r2, [r3, #28]
 80056f8:	68bb      	ldr	r3, [r7, #8]
 80056fa:	f003 0310 	and.w	r3, r3, #16
 80056fe:	2b00      	cmp	r3, #0
 8005700:	d020      	beq.n	8005744 <HAL_TIM_IRQHandler+0x148>
 8005702:	68fb      	ldr	r3, [r7, #12]
 8005704:	f003 0310 	and.w	r3, r3, #16
 8005708:	2b00      	cmp	r3, #0
 800570a:	d01b      	beq.n	8005744 <HAL_TIM_IRQHandler+0x148>
 800570c:	687b      	ldr	r3, [r7, #4]
 800570e:	681b      	ldr	r3, [r3, #0]
 8005710:	f06f 0210 	mvn.w	r2, #16
 8005714:	611a      	str	r2, [r3, #16]
 8005716:	687b      	ldr	r3, [r7, #4]
 8005718:	2208      	movs	r2, #8
 800571a:	771a      	strb	r2, [r3, #28]
 800571c:	687b      	ldr	r3, [r7, #4]
 800571e:	681b      	ldr	r3, [r3, #0]
 8005720:	69db      	ldr	r3, [r3, #28]
 8005722:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8005726:	2b00      	cmp	r3, #0
 8005728:	d003      	beq.n	8005732 <HAL_TIM_IRQHandler+0x136>
 800572a:	6878      	ldr	r0, [r7, #4]
 800572c:	f000 fa59 	bl	8005be2 <HAL_TIM_IC_CaptureCallback>
 8005730:	e005      	b.n	800573e <HAL_TIM_IRQHandler+0x142>
 8005732:	6878      	ldr	r0, [r7, #4]
 8005734:	f000 fa4b 	bl	8005bce <HAL_TIM_OC_DelayElapsedCallback>
 8005738:	6878      	ldr	r0, [r7, #4]
 800573a:	f000 fa5c 	bl	8005bf6 <HAL_TIM_PWM_PulseFinishedCallback>
 800573e:	687b      	ldr	r3, [r7, #4]
 8005740:	2200      	movs	r2, #0
 8005742:	771a      	strb	r2, [r3, #28]
 8005744:	68bb      	ldr	r3, [r7, #8]
 8005746:	f003 0301 	and.w	r3, r3, #1
 800574a:	2b00      	cmp	r3, #0
 800574c:	d00c      	beq.n	8005768 <HAL_TIM_IRQHandler+0x16c>
 800574e:	68fb      	ldr	r3, [r7, #12]
 8005750:	f003 0301 	and.w	r3, r3, #1
 8005754:	2b00      	cmp	r3, #0
 8005756:	d007      	beq.n	8005768 <HAL_TIM_IRQHandler+0x16c>
 8005758:	687b      	ldr	r3, [r7, #4]
 800575a:	681b      	ldr	r3, [r3, #0]
 800575c:	f06f 0201 	mvn.w	r2, #1
 8005760:	611a      	str	r2, [r3, #16]
 8005762:	6878      	ldr	r0, [r7, #4]
 8005764:	f000 fa29 	bl	8005bba <HAL_TIM_PeriodElapsedCallback>
 8005768:	68bb      	ldr	r3, [r7, #8]
 800576a:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800576e:	2b00      	cmp	r3, #0
 8005770:	d00c      	beq.n	800578c <HAL_TIM_IRQHandler+0x190>
 8005772:	68fb      	ldr	r3, [r7, #12]
 8005774:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8005778:	2b00      	cmp	r3, #0
 800577a:	d007      	beq.n	800578c <HAL_TIM_IRQHandler+0x190>
 800577c:	687b      	ldr	r3, [r7, #4]
 800577e:	681b      	ldr	r3, [r3, #0]
 8005780:	f06f 0280 	mvn.w	r2, #128	@ 0x80
 8005784:	611a      	str	r2, [r3, #16]
 8005786:	6878      	ldr	r0, [r7, #4]
 8005788:	f000 ff24 	bl	80065d4 <HAL_TIMEx_BreakCallback>
 800578c:	68bb      	ldr	r3, [r7, #8]
 800578e:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8005792:	2b00      	cmp	r3, #0
 8005794:	d00c      	beq.n	80057b0 <HAL_TIM_IRQHandler+0x1b4>
 8005796:	68fb      	ldr	r3, [r7, #12]
 8005798:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800579c:	2b00      	cmp	r3, #0
 800579e:	d007      	beq.n	80057b0 <HAL_TIM_IRQHandler+0x1b4>
 80057a0:	687b      	ldr	r3, [r7, #4]
 80057a2:	681b      	ldr	r3, [r3, #0]
 80057a4:	f46f 7280 	mvn.w	r2, #256	@ 0x100
 80057a8:	611a      	str	r2, [r3, #16]
 80057aa:	6878      	ldr	r0, [r7, #4]
 80057ac:	f000 ff1c 	bl	80065e8 <HAL_TIMEx_Break2Callback>
 80057b0:	68bb      	ldr	r3, [r7, #8]
 80057b2:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80057b6:	2b00      	cmp	r3, #0
 80057b8:	d00c      	beq.n	80057d4 <HAL_TIM_IRQHandler+0x1d8>
 80057ba:	68fb      	ldr	r3, [r7, #12]
 80057bc:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80057c0:	2b00      	cmp	r3, #0
 80057c2:	d007      	beq.n	80057d4 <HAL_TIM_IRQHandler+0x1d8>
 80057c4:	687b      	ldr	r3, [r7, #4]
 80057c6:	681b      	ldr	r3, [r3, #0]
 80057c8:	f06f 0240 	mvn.w	r2, #64	@ 0x40
 80057cc:	611a      	str	r2, [r3, #16]
 80057ce:	6878      	ldr	r0, [r7, #4]
 80057d0:	f000 fa1b 	bl	8005c0a <HAL_TIM_TriggerCallback>
 80057d4:	68bb      	ldr	r3, [r7, #8]
 80057d6:	f003 0320 	and.w	r3, r3, #32
 80057da:	2b00      	cmp	r3, #0
 80057dc:	d00c      	beq.n	80057f8 <HAL_TIM_IRQHandler+0x1fc>
 80057de:	68fb      	ldr	r3, [r7, #12]
 80057e0:	f003 0320 	and.w	r3, r3, #32
 80057e4:	2b00      	cmp	r3, #0
 80057e6:	d007      	beq.n	80057f8 <HAL_TIM_IRQHandler+0x1fc>
 80057e8:	687b      	ldr	r3, [r7, #4]
 80057ea:	681b      	ldr	r3, [r3, #0]
 80057ec:	f06f 0220 	mvn.w	r2, #32
 80057f0:	611a      	str	r2, [r3, #16]
 80057f2:	6878      	ldr	r0, [r7, #4]
 80057f4:	f000 fee4 	bl	80065c0 <HAL_TIMEx_CommutCallback>
 80057f8:	bf00      	nop
 80057fa:	3710      	adds	r7, #16
 80057fc:	46bd      	mov	sp, r7
 80057fe:	bd80      	pop	{r7, pc}

08005800 <HAL_TIM_PWM_ConfigChannel>:
 8005800:	b580      	push	{r7, lr}
 8005802:	b086      	sub	sp, #24
 8005804:	af00      	add	r7, sp, #0
 8005806:	60f8      	str	r0, [r7, #12]
 8005808:	60b9      	str	r1, [r7, #8]
 800580a:	607a      	str	r2, [r7, #4]
 800580c:	2300      	movs	r3, #0
 800580e:	75fb      	strb	r3, [r7, #23]
 8005810:	68fb      	ldr	r3, [r7, #12]
 8005812:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8005816:	2b01      	cmp	r3, #1
 8005818:	d101      	bne.n	800581e <HAL_TIM_PWM_ConfigChannel+0x1e>
 800581a:	2302      	movs	r3, #2
 800581c:	e0ff      	b.n	8005a1e <HAL_TIM_PWM_ConfigChannel+0x21e>
 800581e:	68fb      	ldr	r3, [r7, #12]
 8005820:	2201      	movs	r2, #1
 8005822:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8005826:	687b      	ldr	r3, [r7, #4]
 8005828:	2b14      	cmp	r3, #20
 800582a:	f200 80f0 	bhi.w	8005a0e <HAL_TIM_PWM_ConfigChannel+0x20e>
 800582e:	a201      	add	r2, pc, #4	@ (adr r2, 8005834 <HAL_TIM_PWM_ConfigChannel+0x34>)
 8005830:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8005834:	08005889 	.word	0x08005889
 8005838:	08005a0f 	.word	0x08005a0f
 800583c:	08005a0f 	.word	0x08005a0f
 8005840:	08005a0f 	.word	0x08005a0f
 8005844:	080058c9 	.word	0x080058c9
 8005848:	08005a0f 	.word	0x08005a0f
 800584c:	08005a0f 	.word	0x08005a0f
 8005850:	08005a0f 	.word	0x08005a0f
 8005854:	0800590b 	.word	0x0800590b
 8005858:	08005a0f 	.word	0x08005a0f
 800585c:	08005a0f 	.word	0x08005a0f
 8005860:	08005a0f 	.word	0x08005a0f
 8005864:	0800594b 	.word	0x0800594b
 8005868:	08005a0f 	.word	0x08005a0f
 800586c:	08005a0f 	.word	0x08005a0f
 8005870:	08005a0f 	.word	0x08005a0f
 8005874:	0800598d 	.word	0x0800598d
 8005878:	08005a0f 	.word	0x08005a0f
 800587c:	08005a0f 	.word	0x08005a0f
 8005880:	08005a0f 	.word	0x08005a0f
 8005884:	080059cd 	.word	0x080059cd
 8005888:	68fb      	ldr	r3, [r7, #12]
 800588a:	681b      	ldr	r3, [r3, #0]
 800588c:	68b9      	ldr	r1, [r7, #8]
 800588e:	4618      	mov	r0, r3
 8005890:	f000 fa4a 	bl	8005d28 <TIM_OC1_SetConfig>
 8005894:	68fb      	ldr	r3, [r7, #12]
 8005896:	681b      	ldr	r3, [r3, #0]
 8005898:	699a      	ldr	r2, [r3, #24]
 800589a:	68fb      	ldr	r3, [r7, #12]
 800589c:	681b      	ldr	r3, [r3, #0]
 800589e:	f042 0208 	orr.w	r2, r2, #8
 80058a2:	619a      	str	r2, [r3, #24]
 80058a4:	68fb      	ldr	r3, [r7, #12]
 80058a6:	681b      	ldr	r3, [r3, #0]
 80058a8:	699a      	ldr	r2, [r3, #24]
 80058aa:	68fb      	ldr	r3, [r7, #12]
 80058ac:	681b      	ldr	r3, [r3, #0]
 80058ae:	f022 0204 	bic.w	r2, r2, #4
 80058b2:	619a      	str	r2, [r3, #24]
 80058b4:	68fb      	ldr	r3, [r7, #12]
 80058b6:	681b      	ldr	r3, [r3, #0]
 80058b8:	6999      	ldr	r1, [r3, #24]
 80058ba:	68bb      	ldr	r3, [r7, #8]
 80058bc:	691a      	ldr	r2, [r3, #16]
 80058be:	68fb      	ldr	r3, [r7, #12]
 80058c0:	681b      	ldr	r3, [r3, #0]
 80058c2:	430a      	orrs	r2, r1
 80058c4:	619a      	str	r2, [r3, #24]
 80058c6:	e0a5      	b.n	8005a14 <HAL_TIM_PWM_ConfigChannel+0x214>
 80058c8:	68fb      	ldr	r3, [r7, #12]
 80058ca:	681b      	ldr	r3, [r3, #0]
 80058cc:	68b9      	ldr	r1, [r7, #8]
 80058ce:	4618      	mov	r0, r3
 80058d0:	f000 fab0 	bl	8005e34 <TIM_OC2_SetConfig>
 80058d4:	68fb      	ldr	r3, [r7, #12]
 80058d6:	681b      	ldr	r3, [r3, #0]
 80058d8:	699a      	ldr	r2, [r3, #24]
 80058da:	68fb      	ldr	r3, [r7, #12]
 80058dc:	681b      	ldr	r3, [r3, #0]
 80058de:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 80058e2:	619a      	str	r2, [r3, #24]
 80058e4:	68fb      	ldr	r3, [r7, #12]
 80058e6:	681b      	ldr	r3, [r3, #0]
 80058e8:	699a      	ldr	r2, [r3, #24]
 80058ea:	68fb      	ldr	r3, [r7, #12]
 80058ec:	681b      	ldr	r3, [r3, #0]
 80058ee:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 80058f2:	619a      	str	r2, [r3, #24]
 80058f4:	68fb      	ldr	r3, [r7, #12]
 80058f6:	681b      	ldr	r3, [r3, #0]
 80058f8:	6999      	ldr	r1, [r3, #24]
 80058fa:	68bb      	ldr	r3, [r7, #8]
 80058fc:	691b      	ldr	r3, [r3, #16]
 80058fe:	021a      	lsls	r2, r3, #8
 8005900:	68fb      	ldr	r3, [r7, #12]
 8005902:	681b      	ldr	r3, [r3, #0]
 8005904:	430a      	orrs	r2, r1
 8005906:	619a      	str	r2, [r3, #24]
 8005908:	e084      	b.n	8005a14 <HAL_TIM_PWM_ConfigChannel+0x214>
 800590a:	68fb      	ldr	r3, [r7, #12]
 800590c:	681b      	ldr	r3, [r3, #0]
 800590e:	68b9      	ldr	r1, [r7, #8]
 8005910:	4618      	mov	r0, r3
 8005912:	f000 fb0f 	bl	8005f34 <TIM_OC3_SetConfig>
 8005916:	68fb      	ldr	r3, [r7, #12]
 8005918:	681b      	ldr	r3, [r3, #0]
 800591a:	69da      	ldr	r2, [r3, #28]
 800591c:	68fb      	ldr	r3, [r7, #12]
 800591e:	681b      	ldr	r3, [r3, #0]
 8005920:	f042 0208 	orr.w	r2, r2, #8
 8005924:	61da      	str	r2, [r3, #28]
 8005926:	68fb      	ldr	r3, [r7, #12]
 8005928:	681b      	ldr	r3, [r3, #0]
 800592a:	69da      	ldr	r2, [r3, #28]
 800592c:	68fb      	ldr	r3, [r7, #12]
 800592e:	681b      	ldr	r3, [r3, #0]
 8005930:	f022 0204 	bic.w	r2, r2, #4
 8005934:	61da      	str	r2, [r3, #28]
 8005936:	68fb      	ldr	r3, [r7, #12]
 8005938:	681b      	ldr	r3, [r3, #0]
 800593a:	69d9      	ldr	r1, [r3, #28]
 800593c:	68bb      	ldr	r3, [r7, #8]
 800593e:	691a      	ldr	r2, [r3, #16]
 8005940:	68fb      	ldr	r3, [r7, #12]
 8005942:	681b      	ldr	r3, [r3, #0]
 8005944:	430a      	orrs	r2, r1
 8005946:	61da      	str	r2, [r3, #28]
 8005948:	e064      	b.n	8005a14 <HAL_TIM_PWM_ConfigChannel+0x214>
 800594a:	68fb      	ldr	r3, [r7, #12]
 800594c:	681b      	ldr	r3, [r3, #0]
 800594e:	68b9      	ldr	r1, [r7, #8]
 8005950:	4618      	mov	r0, r3
 8005952:	f000 fb6d 	bl	8006030 <TIM_OC4_SetConfig>
 8005956:	68fb      	ldr	r3, [r7, #12]
 8005958:	681b      	ldr	r3, [r3, #0]
 800595a:	69da      	ldr	r2, [r3, #28]
 800595c:	68fb      	ldr	r3, [r7, #12]
 800595e:	681b      	ldr	r3, [r3, #0]
 8005960:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8005964:	61da      	str	r2, [r3, #28]
 8005966:	68fb      	ldr	r3, [r7, #12]
 8005968:	681b      	ldr	r3, [r3, #0]
 800596a:	69da      	ldr	r2, [r3, #28]
 800596c:	68fb      	ldr	r3, [r7, #12]
 800596e:	681b      	ldr	r3, [r3, #0]
 8005970:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8005974:	61da      	str	r2, [r3, #28]
 8005976:	68fb      	ldr	r3, [r7, #12]
 8005978:	681b      	ldr	r3, [r3, #0]
 800597a:	69d9      	ldr	r1, [r3, #28]
 800597c:	68bb      	ldr	r3, [r7, #8]
 800597e:	691b      	ldr	r3, [r3, #16]
 8005980:	021a      	lsls	r2, r3, #8
 8005982:	68fb      	ldr	r3, [r7, #12]
 8005984:	681b      	ldr	r3, [r3, #0]
 8005986:	430a      	orrs	r2, r1
 8005988:	61da      	str	r2, [r3, #28]
 800598a:	e043      	b.n	8005a14 <HAL_TIM_PWM_ConfigChannel+0x214>
 800598c:	68fb      	ldr	r3, [r7, #12]
 800598e:	681b      	ldr	r3, [r3, #0]
 8005990:	68b9      	ldr	r1, [r7, #8]
 8005992:	4618      	mov	r0, r3
 8005994:	f000 fbb0 	bl	80060f8 <TIM_OC5_SetConfig>
 8005998:	68fb      	ldr	r3, [r7, #12]
 800599a:	681b      	ldr	r3, [r3, #0]
 800599c:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
 800599e:	68fb      	ldr	r3, [r7, #12]
 80059a0:	681b      	ldr	r3, [r3, #0]
 80059a2:	f042 0208 	orr.w	r2, r2, #8
 80059a6:	655a      	str	r2, [r3, #84]	@ 0x54
 80059a8:	68fb      	ldr	r3, [r7, #12]
 80059aa:	681b      	ldr	r3, [r3, #0]
 80059ac:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
 80059ae:	68fb      	ldr	r3, [r7, #12]
 80059b0:	681b      	ldr	r3, [r3, #0]
 80059b2:	f022 0204 	bic.w	r2, r2, #4
 80059b6:	655a      	str	r2, [r3, #84]	@ 0x54
 80059b8:	68fb      	ldr	r3, [r7, #12]
 80059ba:	681b      	ldr	r3, [r3, #0]
 80059bc:	6d59      	ldr	r1, [r3, #84]	@ 0x54
 80059be:	68bb      	ldr	r3, [r7, #8]
 80059c0:	691a      	ldr	r2, [r3, #16]
 80059c2:	68fb      	ldr	r3, [r7, #12]
 80059c4:	681b      	ldr	r3, [r3, #0]
 80059c6:	430a      	orrs	r2, r1
 80059c8:	655a      	str	r2, [r3, #84]	@ 0x54
 80059ca:	e023      	b.n	8005a14 <HAL_TIM_PWM_ConfigChannel+0x214>
 80059cc:	68fb      	ldr	r3, [r7, #12]
 80059ce:	681b      	ldr	r3, [r3, #0]
 80059d0:	68b9      	ldr	r1, [r7, #8]
 80059d2:	4618      	mov	r0, r3
 80059d4:	f000 fbee 	bl	80061b4 <TIM_OC6_SetConfig>
 80059d8:	68fb      	ldr	r3, [r7, #12]
 80059da:	681b      	ldr	r3, [r3, #0]
 80059dc:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
 80059de:	68fb      	ldr	r3, [r7, #12]
 80059e0:	681b      	ldr	r3, [r3, #0]
 80059e2:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 80059e6:	655a      	str	r2, [r3, #84]	@ 0x54
 80059e8:	68fb      	ldr	r3, [r7, #12]
 80059ea:	681b      	ldr	r3, [r3, #0]
 80059ec:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
 80059ee:	68fb      	ldr	r3, [r7, #12]
 80059f0:	681b      	ldr	r3, [r3, #0]
 80059f2:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 80059f6:	655a      	str	r2, [r3, #84]	@ 0x54
 80059f8:	68fb      	ldr	r3, [r7, #12]
 80059fa:	681b      	ldr	r3, [r3, #0]
 80059fc:	6d59      	ldr	r1, [r3, #84]	@ 0x54
 80059fe:	68bb      	ldr	r3, [r7, #8]
 8005a00:	691b      	ldr	r3, [r3, #16]
 8005a02:	021a      	lsls	r2, r3, #8
 8005a04:	68fb      	ldr	r3, [r7, #12]
 8005a06:	681b      	ldr	r3, [r3, #0]
 8005a08:	430a      	orrs	r2, r1
 8005a0a:	655a      	str	r2, [r3, #84]	@ 0x54
 8005a0c:	e002      	b.n	8005a14 <HAL_TIM_PWM_ConfigChannel+0x214>
 8005a0e:	2301      	movs	r3, #1
 8005a10:	75fb      	strb	r3, [r7, #23]
 8005a12:	bf00      	nop
 8005a14:	68fb      	ldr	r3, [r7, #12]
 8005a16:	2200      	movs	r2, #0
 8005a18:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8005a1c:	7dfb      	ldrb	r3, [r7, #23]
 8005a1e:	4618      	mov	r0, r3
 8005a20:	3718      	adds	r7, #24
 8005a22:	46bd      	mov	sp, r7
 8005a24:	bd80      	pop	{r7, pc}
 8005a26:	bf00      	nop

08005a28 <HAL_TIM_ConfigClockSource>:
 8005a28:	b580      	push	{r7, lr}
 8005a2a:	b084      	sub	sp, #16
 8005a2c:	af00      	add	r7, sp, #0
 8005a2e:	6078      	str	r0, [r7, #4]
 8005a30:	6039      	str	r1, [r7, #0]
 8005a32:	2300      	movs	r3, #0
 8005a34:	73fb      	strb	r3, [r7, #15]
 8005a36:	687b      	ldr	r3, [r7, #4]
 8005a38:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8005a3c:	2b01      	cmp	r3, #1
 8005a3e:	d101      	bne.n	8005a44 <HAL_TIM_ConfigClockSource+0x1c>
 8005a40:	2302      	movs	r3, #2
 8005a42:	e0b6      	b.n	8005bb2 <HAL_TIM_ConfigClockSource+0x18a>
 8005a44:	687b      	ldr	r3, [r7, #4]
 8005a46:	2201      	movs	r2, #1
 8005a48:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8005a4c:	687b      	ldr	r3, [r7, #4]
 8005a4e:	2202      	movs	r2, #2
 8005a50:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005a54:	687b      	ldr	r3, [r7, #4]
 8005a56:	681b      	ldr	r3, [r3, #0]
 8005a58:	689b      	ldr	r3, [r3, #8]
 8005a5a:	60bb      	str	r3, [r7, #8]
 8005a5c:	68bb      	ldr	r3, [r7, #8]
 8005a5e:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8005a62:	f023 0377 	bic.w	r3, r3, #119	@ 0x77
 8005a66:	60bb      	str	r3, [r7, #8]
 8005a68:	68bb      	ldr	r3, [r7, #8]
 8005a6a:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 8005a6e:	60bb      	str	r3, [r7, #8]
 8005a70:	687b      	ldr	r3, [r7, #4]
 8005a72:	681b      	ldr	r3, [r3, #0]
 8005a74:	68ba      	ldr	r2, [r7, #8]
 8005a76:	609a      	str	r2, [r3, #8]
 8005a78:	683b      	ldr	r3, [r7, #0]
 8005a7a:	681b      	ldr	r3, [r3, #0]
 8005a7c:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8005a80:	d03e      	beq.n	8005b00 <HAL_TIM_ConfigClockSource+0xd8>
 8005a82:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8005a86:	f200 8087 	bhi.w	8005b98 <HAL_TIM_ConfigClockSource+0x170>
 8005a8a:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8005a8e:	f000 8086 	beq.w	8005b9e <HAL_TIM_ConfigClockSource+0x176>
 8005a92:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8005a96:	d87f      	bhi.n	8005b98 <HAL_TIM_ConfigClockSource+0x170>
 8005a98:	2b70      	cmp	r3, #112	@ 0x70
 8005a9a:	d01a      	beq.n	8005ad2 <HAL_TIM_ConfigClockSource+0xaa>
 8005a9c:	2b70      	cmp	r3, #112	@ 0x70
 8005a9e:	d87b      	bhi.n	8005b98 <HAL_TIM_ConfigClockSource+0x170>
 8005aa0:	2b60      	cmp	r3, #96	@ 0x60
 8005aa2:	d050      	beq.n	8005b46 <HAL_TIM_ConfigClockSource+0x11e>
 8005aa4:	2b60      	cmp	r3, #96	@ 0x60
 8005aa6:	d877      	bhi.n	8005b98 <HAL_TIM_ConfigClockSource+0x170>
 8005aa8:	2b50      	cmp	r3, #80	@ 0x50
 8005aaa:	d03c      	beq.n	8005b26 <HAL_TIM_ConfigClockSource+0xfe>
 8005aac:	2b50      	cmp	r3, #80	@ 0x50
 8005aae:	d873      	bhi.n	8005b98 <HAL_TIM_ConfigClockSource+0x170>
 8005ab0:	2b40      	cmp	r3, #64	@ 0x40
 8005ab2:	d058      	beq.n	8005b66 <HAL_TIM_ConfigClockSource+0x13e>
 8005ab4:	2b40      	cmp	r3, #64	@ 0x40
 8005ab6:	d86f      	bhi.n	8005b98 <HAL_TIM_ConfigClockSource+0x170>
 8005ab8:	2b30      	cmp	r3, #48	@ 0x30
 8005aba:	d064      	beq.n	8005b86 <HAL_TIM_ConfigClockSource+0x15e>
 8005abc:	2b30      	cmp	r3, #48	@ 0x30
 8005abe:	d86b      	bhi.n	8005b98 <HAL_TIM_ConfigClockSource+0x170>
 8005ac0:	2b20      	cmp	r3, #32
 8005ac2:	d060      	beq.n	8005b86 <HAL_TIM_ConfigClockSource+0x15e>
 8005ac4:	2b20      	cmp	r3, #32
 8005ac6:	d867      	bhi.n	8005b98 <HAL_TIM_ConfigClockSource+0x170>
 8005ac8:	2b00      	cmp	r3, #0
 8005aca:	d05c      	beq.n	8005b86 <HAL_TIM_ConfigClockSource+0x15e>
 8005acc:	2b10      	cmp	r3, #16
 8005ace:	d05a      	beq.n	8005b86 <HAL_TIM_ConfigClockSource+0x15e>
 8005ad0:	e062      	b.n	8005b98 <HAL_TIM_ConfigClockSource+0x170>
 8005ad2:	687b      	ldr	r3, [r7, #4]
 8005ad4:	6818      	ldr	r0, [r3, #0]
 8005ad6:	683b      	ldr	r3, [r7, #0]
 8005ad8:	6899      	ldr	r1, [r3, #8]
 8005ada:	683b      	ldr	r3, [r7, #0]
 8005adc:	685a      	ldr	r2, [r3, #4]
 8005ade:	683b      	ldr	r3, [r7, #0]
 8005ae0:	68db      	ldr	r3, [r3, #12]
 8005ae2:	f000 fc41 	bl	8006368 <TIM_ETR_SetConfig>
 8005ae6:	687b      	ldr	r3, [r7, #4]
 8005ae8:	681b      	ldr	r3, [r3, #0]
 8005aea:	689b      	ldr	r3, [r3, #8]
 8005aec:	60bb      	str	r3, [r7, #8]
 8005aee:	68bb      	ldr	r3, [r7, #8]
 8005af0:	f043 0377 	orr.w	r3, r3, #119	@ 0x77
 8005af4:	60bb      	str	r3, [r7, #8]
 8005af6:	687b      	ldr	r3, [r7, #4]
 8005af8:	681b      	ldr	r3, [r3, #0]
 8005afa:	68ba      	ldr	r2, [r7, #8]
 8005afc:	609a      	str	r2, [r3, #8]
 8005afe:	e04f      	b.n	8005ba0 <HAL_TIM_ConfigClockSource+0x178>
 8005b00:	687b      	ldr	r3, [r7, #4]
 8005b02:	6818      	ldr	r0, [r3, #0]
 8005b04:	683b      	ldr	r3, [r7, #0]
 8005b06:	6899      	ldr	r1, [r3, #8]
 8005b08:	683b      	ldr	r3, [r7, #0]
 8005b0a:	685a      	ldr	r2, [r3, #4]
 8005b0c:	683b      	ldr	r3, [r7, #0]
 8005b0e:	68db      	ldr	r3, [r3, #12]
 8005b10:	f000 fc2a 	bl	8006368 <TIM_ETR_SetConfig>
 8005b14:	687b      	ldr	r3, [r7, #4]
 8005b16:	681b      	ldr	r3, [r3, #0]
 8005b18:	689a      	ldr	r2, [r3, #8]
 8005b1a:	687b      	ldr	r3, [r7, #4]
 8005b1c:	681b      	ldr	r3, [r3, #0]
 8005b1e:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8005b22:	609a      	str	r2, [r3, #8]
 8005b24:	e03c      	b.n	8005ba0 <HAL_TIM_ConfigClockSource+0x178>
 8005b26:	687b      	ldr	r3, [r7, #4]
 8005b28:	6818      	ldr	r0, [r3, #0]
 8005b2a:	683b      	ldr	r3, [r7, #0]
 8005b2c:	6859      	ldr	r1, [r3, #4]
 8005b2e:	683b      	ldr	r3, [r7, #0]
 8005b30:	68db      	ldr	r3, [r3, #12]
 8005b32:	461a      	mov	r2, r3
 8005b34:	f000 fb9e 	bl	8006274 <TIM_TI1_ConfigInputStage>
 8005b38:	687b      	ldr	r3, [r7, #4]
 8005b3a:	681b      	ldr	r3, [r3, #0]
 8005b3c:	2150      	movs	r1, #80	@ 0x50
 8005b3e:	4618      	mov	r0, r3
 8005b40:	f000 fbf7 	bl	8006332 <TIM_ITRx_SetConfig>
 8005b44:	e02c      	b.n	8005ba0 <HAL_TIM_ConfigClockSource+0x178>
 8005b46:	687b      	ldr	r3, [r7, #4]
 8005b48:	6818      	ldr	r0, [r3, #0]
 8005b4a:	683b      	ldr	r3, [r7, #0]
 8005b4c:	6859      	ldr	r1, [r3, #4]
 8005b4e:	683b      	ldr	r3, [r7, #0]
 8005b50:	68db      	ldr	r3, [r3, #12]
 8005b52:	461a      	mov	r2, r3
 8005b54:	f000 fbbd 	bl	80062d2 <TIM_TI2_ConfigInputStage>
 8005b58:	687b      	ldr	r3, [r7, #4]
 8005b5a:	681b      	ldr	r3, [r3, #0]
 8005b5c:	2160      	movs	r1, #96	@ 0x60
 8005b5e:	4618      	mov	r0, r3
 8005b60:	f000 fbe7 	bl	8006332 <TIM_ITRx_SetConfig>
 8005b64:	e01c      	b.n	8005ba0 <HAL_TIM_ConfigClockSource+0x178>
 8005b66:	687b      	ldr	r3, [r7, #4]
 8005b68:	6818      	ldr	r0, [r3, #0]
 8005b6a:	683b      	ldr	r3, [r7, #0]
 8005b6c:	6859      	ldr	r1, [r3, #4]
 8005b6e:	683b      	ldr	r3, [r7, #0]
 8005b70:	68db      	ldr	r3, [r3, #12]
 8005b72:	461a      	mov	r2, r3
 8005b74:	f000 fb7e 	bl	8006274 <TIM_TI1_ConfigInputStage>
 8005b78:	687b      	ldr	r3, [r7, #4]
 8005b7a:	681b      	ldr	r3, [r3, #0]
 8005b7c:	2140      	movs	r1, #64	@ 0x40
 8005b7e:	4618      	mov	r0, r3
 8005b80:	f000 fbd7 	bl	8006332 <TIM_ITRx_SetConfig>
 8005b84:	e00c      	b.n	8005ba0 <HAL_TIM_ConfigClockSource+0x178>
 8005b86:	687b      	ldr	r3, [r7, #4]
 8005b88:	681a      	ldr	r2, [r3, #0]
 8005b8a:	683b      	ldr	r3, [r7, #0]
 8005b8c:	681b      	ldr	r3, [r3, #0]
 8005b8e:	4619      	mov	r1, r3
 8005b90:	4610      	mov	r0, r2
 8005b92:	f000 fbce 	bl	8006332 <TIM_ITRx_SetConfig>
 8005b96:	e003      	b.n	8005ba0 <HAL_TIM_ConfigClockSource+0x178>
 8005b98:	2301      	movs	r3, #1
 8005b9a:	73fb      	strb	r3, [r7, #15]
 8005b9c:	e000      	b.n	8005ba0 <HAL_TIM_ConfigClockSource+0x178>
 8005b9e:	bf00      	nop
 8005ba0:	687b      	ldr	r3, [r7, #4]
 8005ba2:	2201      	movs	r2, #1
 8005ba4:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005ba8:	687b      	ldr	r3, [r7, #4]
 8005baa:	2200      	movs	r2, #0
 8005bac:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8005bb0:	7bfb      	ldrb	r3, [r7, #15]
 8005bb2:	4618      	mov	r0, r3
 8005bb4:	3710      	adds	r7, #16
 8005bb6:	46bd      	mov	sp, r7
 8005bb8:	bd80      	pop	{r7, pc}

08005bba <HAL_TIM_PeriodElapsedCallback>:
 8005bba:	b480      	push	{r7}
 8005bbc:	b083      	sub	sp, #12
 8005bbe:	af00      	add	r7, sp, #0
 8005bc0:	6078      	str	r0, [r7, #4]
 8005bc2:	bf00      	nop
 8005bc4:	370c      	adds	r7, #12
 8005bc6:	46bd      	mov	sp, r7
 8005bc8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005bcc:	4770      	bx	lr

08005bce <HAL_TIM_OC_DelayElapsedCallback>:
 8005bce:	b480      	push	{r7}
 8005bd0:	b083      	sub	sp, #12
 8005bd2:	af00      	add	r7, sp, #0
 8005bd4:	6078      	str	r0, [r7, #4]
 8005bd6:	bf00      	nop
 8005bd8:	370c      	adds	r7, #12
 8005bda:	46bd      	mov	sp, r7
 8005bdc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005be0:	4770      	bx	lr

08005be2 <HAL_TIM_IC_CaptureCallback>:
 8005be2:	b480      	push	{r7}
 8005be4:	b083      	sub	sp, #12
 8005be6:	af00      	add	r7, sp, #0
 8005be8:	6078      	str	r0, [r7, #4]
 8005bea:	bf00      	nop
 8005bec:	370c      	adds	r7, #12
 8005bee:	46bd      	mov	sp, r7
 8005bf0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005bf4:	4770      	bx	lr

08005bf6 <HAL_TIM_PWM_PulseFinishedCallback>:
 8005bf6:	b480      	push	{r7}
 8005bf8:	b083      	sub	sp, #12
 8005bfa:	af00      	add	r7, sp, #0
 8005bfc:	6078      	str	r0, [r7, #4]
 8005bfe:	bf00      	nop
 8005c00:	370c      	adds	r7, #12
 8005c02:	46bd      	mov	sp, r7
 8005c04:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005c08:	4770      	bx	lr

08005c0a <HAL_TIM_TriggerCallback>:
 8005c0a:	b480      	push	{r7}
 8005c0c:	b083      	sub	sp, #12
 8005c0e:	af00      	add	r7, sp, #0
 8005c10:	6078      	str	r0, [r7, #4]
 8005c12:	bf00      	nop
 8005c14:	370c      	adds	r7, #12
 8005c16:	46bd      	mov	sp, r7
 8005c18:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005c1c:	4770      	bx	lr
	...

08005c20 <TIM_Base_SetConfig>:
 8005c20:	b480      	push	{r7}
 8005c22:	b085      	sub	sp, #20
 8005c24:	af00      	add	r7, sp, #0
 8005c26:	6078      	str	r0, [r7, #4]
 8005c28:	6039      	str	r1, [r7, #0]
 8005c2a:	687b      	ldr	r3, [r7, #4]
 8005c2c:	681b      	ldr	r3, [r3, #0]
 8005c2e:	60fb      	str	r3, [r7, #12]
 8005c30:	687b      	ldr	r3, [r7, #4]
 8005c32:	4a38      	ldr	r2, [pc, #224]	@ (8005d14 <TIM_Base_SetConfig+0xf4>)
 8005c34:	4293      	cmp	r3, r2
 8005c36:	d007      	beq.n	8005c48 <TIM_Base_SetConfig+0x28>
 8005c38:	687b      	ldr	r3, [r7, #4]
 8005c3a:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8005c3e:	d003      	beq.n	8005c48 <TIM_Base_SetConfig+0x28>
 8005c40:	687b      	ldr	r3, [r7, #4]
 8005c42:	4a35      	ldr	r2, [pc, #212]	@ (8005d18 <TIM_Base_SetConfig+0xf8>)
 8005c44:	4293      	cmp	r3, r2
 8005c46:	d108      	bne.n	8005c5a <TIM_Base_SetConfig+0x3a>
 8005c48:	68fb      	ldr	r3, [r7, #12]
 8005c4a:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8005c4e:	60fb      	str	r3, [r7, #12]
 8005c50:	683b      	ldr	r3, [r7, #0]
 8005c52:	685b      	ldr	r3, [r3, #4]
 8005c54:	68fa      	ldr	r2, [r7, #12]
 8005c56:	4313      	orrs	r3, r2
 8005c58:	60fb      	str	r3, [r7, #12]
 8005c5a:	687b      	ldr	r3, [r7, #4]
 8005c5c:	4a2d      	ldr	r2, [pc, #180]	@ (8005d14 <TIM_Base_SetConfig+0xf4>)
 8005c5e:	4293      	cmp	r3, r2
 8005c60:	d013      	beq.n	8005c8a <TIM_Base_SetConfig+0x6a>
 8005c62:	687b      	ldr	r3, [r7, #4]
 8005c64:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8005c68:	d00f      	beq.n	8005c8a <TIM_Base_SetConfig+0x6a>
 8005c6a:	687b      	ldr	r3, [r7, #4]
 8005c6c:	4a2a      	ldr	r2, [pc, #168]	@ (8005d18 <TIM_Base_SetConfig+0xf8>)
 8005c6e:	4293      	cmp	r3, r2
 8005c70:	d00b      	beq.n	8005c8a <TIM_Base_SetConfig+0x6a>
 8005c72:	687b      	ldr	r3, [r7, #4]
 8005c74:	4a29      	ldr	r2, [pc, #164]	@ (8005d1c <TIM_Base_SetConfig+0xfc>)
 8005c76:	4293      	cmp	r3, r2
 8005c78:	d007      	beq.n	8005c8a <TIM_Base_SetConfig+0x6a>
 8005c7a:	687b      	ldr	r3, [r7, #4]
 8005c7c:	4a28      	ldr	r2, [pc, #160]	@ (8005d20 <TIM_Base_SetConfig+0x100>)
 8005c7e:	4293      	cmp	r3, r2
 8005c80:	d003      	beq.n	8005c8a <TIM_Base_SetConfig+0x6a>
 8005c82:	687b      	ldr	r3, [r7, #4]
 8005c84:	4a27      	ldr	r2, [pc, #156]	@ (8005d24 <TIM_Base_SetConfig+0x104>)
 8005c86:	4293      	cmp	r3, r2
 8005c88:	d108      	bne.n	8005c9c <TIM_Base_SetConfig+0x7c>
 8005c8a:	68fb      	ldr	r3, [r7, #12]
 8005c8c:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8005c90:	60fb      	str	r3, [r7, #12]
 8005c92:	683b      	ldr	r3, [r7, #0]
 8005c94:	68db      	ldr	r3, [r3, #12]
 8005c96:	68fa      	ldr	r2, [r7, #12]
 8005c98:	4313      	orrs	r3, r2
 8005c9a:	60fb      	str	r3, [r7, #12]
 8005c9c:	68fb      	ldr	r3, [r7, #12]
 8005c9e:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 8005ca2:	683b      	ldr	r3, [r7, #0]
 8005ca4:	695b      	ldr	r3, [r3, #20]
 8005ca6:	4313      	orrs	r3, r2
 8005ca8:	60fb      	str	r3, [r7, #12]
 8005caa:	687b      	ldr	r3, [r7, #4]
 8005cac:	68fa      	ldr	r2, [r7, #12]
 8005cae:	601a      	str	r2, [r3, #0]
 8005cb0:	683b      	ldr	r3, [r7, #0]
 8005cb2:	689a      	ldr	r2, [r3, #8]
 8005cb4:	687b      	ldr	r3, [r7, #4]
 8005cb6:	62da      	str	r2, [r3, #44]	@ 0x2c
 8005cb8:	683b      	ldr	r3, [r7, #0]
 8005cba:	681a      	ldr	r2, [r3, #0]
 8005cbc:	687b      	ldr	r3, [r7, #4]
 8005cbe:	629a      	str	r2, [r3, #40]	@ 0x28
 8005cc0:	687b      	ldr	r3, [r7, #4]
 8005cc2:	4a14      	ldr	r2, [pc, #80]	@ (8005d14 <TIM_Base_SetConfig+0xf4>)
 8005cc4:	4293      	cmp	r3, r2
 8005cc6:	d00b      	beq.n	8005ce0 <TIM_Base_SetConfig+0xc0>
 8005cc8:	687b      	ldr	r3, [r7, #4]
 8005cca:	4a14      	ldr	r2, [pc, #80]	@ (8005d1c <TIM_Base_SetConfig+0xfc>)
 8005ccc:	4293      	cmp	r3, r2
 8005cce:	d007      	beq.n	8005ce0 <TIM_Base_SetConfig+0xc0>
 8005cd0:	687b      	ldr	r3, [r7, #4]
 8005cd2:	4a13      	ldr	r2, [pc, #76]	@ (8005d20 <TIM_Base_SetConfig+0x100>)
 8005cd4:	4293      	cmp	r3, r2
 8005cd6:	d003      	beq.n	8005ce0 <TIM_Base_SetConfig+0xc0>
 8005cd8:	687b      	ldr	r3, [r7, #4]
 8005cda:	4a12      	ldr	r2, [pc, #72]	@ (8005d24 <TIM_Base_SetConfig+0x104>)
 8005cdc:	4293      	cmp	r3, r2
 8005cde:	d103      	bne.n	8005ce8 <TIM_Base_SetConfig+0xc8>
 8005ce0:	683b      	ldr	r3, [r7, #0]
 8005ce2:	691a      	ldr	r2, [r3, #16]
 8005ce4:	687b      	ldr	r3, [r7, #4]
 8005ce6:	631a      	str	r2, [r3, #48]	@ 0x30
 8005ce8:	687b      	ldr	r3, [r7, #4]
 8005cea:	2201      	movs	r2, #1
 8005cec:	615a      	str	r2, [r3, #20]
 8005cee:	687b      	ldr	r3, [r7, #4]
 8005cf0:	691b      	ldr	r3, [r3, #16]
 8005cf2:	f003 0301 	and.w	r3, r3, #1
 8005cf6:	2b01      	cmp	r3, #1
 8005cf8:	d105      	bne.n	8005d06 <TIM_Base_SetConfig+0xe6>
 8005cfa:	687b      	ldr	r3, [r7, #4]
 8005cfc:	691b      	ldr	r3, [r3, #16]
 8005cfe:	f023 0201 	bic.w	r2, r3, #1
 8005d02:	687b      	ldr	r3, [r7, #4]
 8005d04:	611a      	str	r2, [r3, #16]
 8005d06:	bf00      	nop
 8005d08:	3714      	adds	r7, #20
 8005d0a:	46bd      	mov	sp, r7
 8005d0c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005d10:	4770      	bx	lr
 8005d12:	bf00      	nop
 8005d14:	40012c00 	.word	0x40012c00
 8005d18:	40000400 	.word	0x40000400
 8005d1c:	40014000 	.word	0x40014000
 8005d20:	40014400 	.word	0x40014400
 8005d24:	40014800 	.word	0x40014800

08005d28 <TIM_OC1_SetConfig>:
 8005d28:	b480      	push	{r7}
 8005d2a:	b087      	sub	sp, #28
 8005d2c:	af00      	add	r7, sp, #0
 8005d2e:	6078      	str	r0, [r7, #4]
 8005d30:	6039      	str	r1, [r7, #0]
 8005d32:	687b      	ldr	r3, [r7, #4]
 8005d34:	6a1b      	ldr	r3, [r3, #32]
 8005d36:	617b      	str	r3, [r7, #20]
 8005d38:	687b      	ldr	r3, [r7, #4]
 8005d3a:	6a1b      	ldr	r3, [r3, #32]
 8005d3c:	f023 0201 	bic.w	r2, r3, #1
 8005d40:	687b      	ldr	r3, [r7, #4]
 8005d42:	621a      	str	r2, [r3, #32]
 8005d44:	687b      	ldr	r3, [r7, #4]
 8005d46:	685b      	ldr	r3, [r3, #4]
 8005d48:	613b      	str	r3, [r7, #16]
 8005d4a:	687b      	ldr	r3, [r7, #4]
 8005d4c:	699b      	ldr	r3, [r3, #24]
 8005d4e:	60fb      	str	r3, [r7, #12]
 8005d50:	68fb      	ldr	r3, [r7, #12]
 8005d52:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8005d56:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8005d5a:	60fb      	str	r3, [r7, #12]
 8005d5c:	68fb      	ldr	r3, [r7, #12]
 8005d5e:	f023 0303 	bic.w	r3, r3, #3
 8005d62:	60fb      	str	r3, [r7, #12]
 8005d64:	683b      	ldr	r3, [r7, #0]
 8005d66:	681b      	ldr	r3, [r3, #0]
 8005d68:	68fa      	ldr	r2, [r7, #12]
 8005d6a:	4313      	orrs	r3, r2
 8005d6c:	60fb      	str	r3, [r7, #12]
 8005d6e:	697b      	ldr	r3, [r7, #20]
 8005d70:	f023 0302 	bic.w	r3, r3, #2
 8005d74:	617b      	str	r3, [r7, #20]
 8005d76:	683b      	ldr	r3, [r7, #0]
 8005d78:	689b      	ldr	r3, [r3, #8]
 8005d7a:	697a      	ldr	r2, [r7, #20]
 8005d7c:	4313      	orrs	r3, r2
 8005d7e:	617b      	str	r3, [r7, #20]
 8005d80:	687b      	ldr	r3, [r7, #4]
 8005d82:	4a28      	ldr	r2, [pc, #160]	@ (8005e24 <TIM_OC1_SetConfig+0xfc>)
 8005d84:	4293      	cmp	r3, r2
 8005d86:	d00b      	beq.n	8005da0 <TIM_OC1_SetConfig+0x78>
 8005d88:	687b      	ldr	r3, [r7, #4]
 8005d8a:	4a27      	ldr	r2, [pc, #156]	@ (8005e28 <TIM_OC1_SetConfig+0x100>)
 8005d8c:	4293      	cmp	r3, r2
 8005d8e:	d007      	beq.n	8005da0 <TIM_OC1_SetConfig+0x78>
 8005d90:	687b      	ldr	r3, [r7, #4]
 8005d92:	4a26      	ldr	r2, [pc, #152]	@ (8005e2c <TIM_OC1_SetConfig+0x104>)
 8005d94:	4293      	cmp	r3, r2
 8005d96:	d003      	beq.n	8005da0 <TIM_OC1_SetConfig+0x78>
 8005d98:	687b      	ldr	r3, [r7, #4]
 8005d9a:	4a25      	ldr	r2, [pc, #148]	@ (8005e30 <TIM_OC1_SetConfig+0x108>)
 8005d9c:	4293      	cmp	r3, r2
 8005d9e:	d10c      	bne.n	8005dba <TIM_OC1_SetConfig+0x92>
 8005da0:	697b      	ldr	r3, [r7, #20]
 8005da2:	f023 0308 	bic.w	r3, r3, #8
 8005da6:	617b      	str	r3, [r7, #20]
 8005da8:	683b      	ldr	r3, [r7, #0]
 8005daa:	68db      	ldr	r3, [r3, #12]
 8005dac:	697a      	ldr	r2, [r7, #20]
 8005dae:	4313      	orrs	r3, r2
 8005db0:	617b      	str	r3, [r7, #20]
 8005db2:	697b      	ldr	r3, [r7, #20]
 8005db4:	f023 0304 	bic.w	r3, r3, #4
 8005db8:	617b      	str	r3, [r7, #20]
 8005dba:	687b      	ldr	r3, [r7, #4]
 8005dbc:	4a19      	ldr	r2, [pc, #100]	@ (8005e24 <TIM_OC1_SetConfig+0xfc>)
 8005dbe:	4293      	cmp	r3, r2
 8005dc0:	d00b      	beq.n	8005dda <TIM_OC1_SetConfig+0xb2>
 8005dc2:	687b      	ldr	r3, [r7, #4]
 8005dc4:	4a18      	ldr	r2, [pc, #96]	@ (8005e28 <TIM_OC1_SetConfig+0x100>)
 8005dc6:	4293      	cmp	r3, r2
 8005dc8:	d007      	beq.n	8005dda <TIM_OC1_SetConfig+0xb2>
 8005dca:	687b      	ldr	r3, [r7, #4]
 8005dcc:	4a17      	ldr	r2, [pc, #92]	@ (8005e2c <TIM_OC1_SetConfig+0x104>)
 8005dce:	4293      	cmp	r3, r2
 8005dd0:	d003      	beq.n	8005dda <TIM_OC1_SetConfig+0xb2>
 8005dd2:	687b      	ldr	r3, [r7, #4]
 8005dd4:	4a16      	ldr	r2, [pc, #88]	@ (8005e30 <TIM_OC1_SetConfig+0x108>)
 8005dd6:	4293      	cmp	r3, r2
 8005dd8:	d111      	bne.n	8005dfe <TIM_OC1_SetConfig+0xd6>
 8005dda:	693b      	ldr	r3, [r7, #16]
 8005ddc:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8005de0:	613b      	str	r3, [r7, #16]
 8005de2:	693b      	ldr	r3, [r7, #16]
 8005de4:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8005de8:	613b      	str	r3, [r7, #16]
 8005dea:	683b      	ldr	r3, [r7, #0]
 8005dec:	695b      	ldr	r3, [r3, #20]
 8005dee:	693a      	ldr	r2, [r7, #16]
 8005df0:	4313      	orrs	r3, r2
 8005df2:	613b      	str	r3, [r7, #16]
 8005df4:	683b      	ldr	r3, [r7, #0]
 8005df6:	699b      	ldr	r3, [r3, #24]
 8005df8:	693a      	ldr	r2, [r7, #16]
 8005dfa:	4313      	orrs	r3, r2
 8005dfc:	613b      	str	r3, [r7, #16]
 8005dfe:	687b      	ldr	r3, [r7, #4]
 8005e00:	693a      	ldr	r2, [r7, #16]
 8005e02:	605a      	str	r2, [r3, #4]
 8005e04:	687b      	ldr	r3, [r7, #4]
 8005e06:	68fa      	ldr	r2, [r7, #12]
 8005e08:	619a      	str	r2, [r3, #24]
 8005e0a:	683b      	ldr	r3, [r7, #0]
 8005e0c:	685a      	ldr	r2, [r3, #4]
 8005e0e:	687b      	ldr	r3, [r7, #4]
 8005e10:	635a      	str	r2, [r3, #52]	@ 0x34
 8005e12:	687b      	ldr	r3, [r7, #4]
 8005e14:	697a      	ldr	r2, [r7, #20]
 8005e16:	621a      	str	r2, [r3, #32]
 8005e18:	bf00      	nop
 8005e1a:	371c      	adds	r7, #28
 8005e1c:	46bd      	mov	sp, r7
 8005e1e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005e22:	4770      	bx	lr
 8005e24:	40012c00 	.word	0x40012c00
 8005e28:	40014000 	.word	0x40014000
 8005e2c:	40014400 	.word	0x40014400
 8005e30:	40014800 	.word	0x40014800

08005e34 <TIM_OC2_SetConfig>:
 8005e34:	b480      	push	{r7}
 8005e36:	b087      	sub	sp, #28
 8005e38:	af00      	add	r7, sp, #0
 8005e3a:	6078      	str	r0, [r7, #4]
 8005e3c:	6039      	str	r1, [r7, #0]
 8005e3e:	687b      	ldr	r3, [r7, #4]
 8005e40:	6a1b      	ldr	r3, [r3, #32]
 8005e42:	617b      	str	r3, [r7, #20]
 8005e44:	687b      	ldr	r3, [r7, #4]
 8005e46:	6a1b      	ldr	r3, [r3, #32]
 8005e48:	f023 0210 	bic.w	r2, r3, #16
 8005e4c:	687b      	ldr	r3, [r7, #4]
 8005e4e:	621a      	str	r2, [r3, #32]
 8005e50:	687b      	ldr	r3, [r7, #4]
 8005e52:	685b      	ldr	r3, [r3, #4]
 8005e54:	613b      	str	r3, [r7, #16]
 8005e56:	687b      	ldr	r3, [r7, #4]
 8005e58:	699b      	ldr	r3, [r3, #24]
 8005e5a:	60fb      	str	r3, [r7, #12]
 8005e5c:	68fb      	ldr	r3, [r7, #12]
 8005e5e:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 8005e62:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8005e66:	60fb      	str	r3, [r7, #12]
 8005e68:	68fb      	ldr	r3, [r7, #12]
 8005e6a:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8005e6e:	60fb      	str	r3, [r7, #12]
 8005e70:	683b      	ldr	r3, [r7, #0]
 8005e72:	681b      	ldr	r3, [r3, #0]
 8005e74:	021b      	lsls	r3, r3, #8
 8005e76:	68fa      	ldr	r2, [r7, #12]
 8005e78:	4313      	orrs	r3, r2
 8005e7a:	60fb      	str	r3, [r7, #12]
 8005e7c:	697b      	ldr	r3, [r7, #20]
 8005e7e:	f023 0320 	bic.w	r3, r3, #32
 8005e82:	617b      	str	r3, [r7, #20]
 8005e84:	683b      	ldr	r3, [r7, #0]
 8005e86:	689b      	ldr	r3, [r3, #8]
 8005e88:	011b      	lsls	r3, r3, #4
 8005e8a:	697a      	ldr	r2, [r7, #20]
 8005e8c:	4313      	orrs	r3, r2
 8005e8e:	617b      	str	r3, [r7, #20]
 8005e90:	687b      	ldr	r3, [r7, #4]
 8005e92:	4a24      	ldr	r2, [pc, #144]	@ (8005f24 <TIM_OC2_SetConfig+0xf0>)
 8005e94:	4293      	cmp	r3, r2
 8005e96:	d10d      	bne.n	8005eb4 <TIM_OC2_SetConfig+0x80>
 8005e98:	697b      	ldr	r3, [r7, #20]
 8005e9a:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8005e9e:	617b      	str	r3, [r7, #20]
 8005ea0:	683b      	ldr	r3, [r7, #0]
 8005ea2:	68db      	ldr	r3, [r3, #12]
 8005ea4:	011b      	lsls	r3, r3, #4
 8005ea6:	697a      	ldr	r2, [r7, #20]
 8005ea8:	4313      	orrs	r3, r2
 8005eaa:	617b      	str	r3, [r7, #20]
 8005eac:	697b      	ldr	r3, [r7, #20]
 8005eae:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8005eb2:	617b      	str	r3, [r7, #20]
 8005eb4:	687b      	ldr	r3, [r7, #4]
 8005eb6:	4a1b      	ldr	r2, [pc, #108]	@ (8005f24 <TIM_OC2_SetConfig+0xf0>)
 8005eb8:	4293      	cmp	r3, r2
 8005eba:	d00b      	beq.n	8005ed4 <TIM_OC2_SetConfig+0xa0>
 8005ebc:	687b      	ldr	r3, [r7, #4]
 8005ebe:	4a1a      	ldr	r2, [pc, #104]	@ (8005f28 <TIM_OC2_SetConfig+0xf4>)
 8005ec0:	4293      	cmp	r3, r2
 8005ec2:	d007      	beq.n	8005ed4 <TIM_OC2_SetConfig+0xa0>
 8005ec4:	687b      	ldr	r3, [r7, #4]
 8005ec6:	4a19      	ldr	r2, [pc, #100]	@ (8005f2c <TIM_OC2_SetConfig+0xf8>)
 8005ec8:	4293      	cmp	r3, r2
 8005eca:	d003      	beq.n	8005ed4 <TIM_OC2_SetConfig+0xa0>
 8005ecc:	687b      	ldr	r3, [r7, #4]
 8005ece:	4a18      	ldr	r2, [pc, #96]	@ (8005f30 <TIM_OC2_SetConfig+0xfc>)
 8005ed0:	4293      	cmp	r3, r2
 8005ed2:	d113      	bne.n	8005efc <TIM_OC2_SetConfig+0xc8>
 8005ed4:	693b      	ldr	r3, [r7, #16]
 8005ed6:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8005eda:	613b      	str	r3, [r7, #16]
 8005edc:	693b      	ldr	r3, [r7, #16]
 8005ede:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8005ee2:	613b      	str	r3, [r7, #16]
 8005ee4:	683b      	ldr	r3, [r7, #0]
 8005ee6:	695b      	ldr	r3, [r3, #20]
 8005ee8:	009b      	lsls	r3, r3, #2
 8005eea:	693a      	ldr	r2, [r7, #16]
 8005eec:	4313      	orrs	r3, r2
 8005eee:	613b      	str	r3, [r7, #16]
 8005ef0:	683b      	ldr	r3, [r7, #0]
 8005ef2:	699b      	ldr	r3, [r3, #24]
 8005ef4:	009b      	lsls	r3, r3, #2
 8005ef6:	693a      	ldr	r2, [r7, #16]
 8005ef8:	4313      	orrs	r3, r2
 8005efa:	613b      	str	r3, [r7, #16]
 8005efc:	687b      	ldr	r3, [r7, #4]
 8005efe:	693a      	ldr	r2, [r7, #16]
 8005f00:	605a      	str	r2, [r3, #4]
 8005f02:	687b      	ldr	r3, [r7, #4]
 8005f04:	68fa      	ldr	r2, [r7, #12]
 8005f06:	619a      	str	r2, [r3, #24]
 8005f08:	683b      	ldr	r3, [r7, #0]
 8005f0a:	685a      	ldr	r2, [r3, #4]
 8005f0c:	687b      	ldr	r3, [r7, #4]
 8005f0e:	639a      	str	r2, [r3, #56]	@ 0x38
 8005f10:	687b      	ldr	r3, [r7, #4]
 8005f12:	697a      	ldr	r2, [r7, #20]
 8005f14:	621a      	str	r2, [r3, #32]
 8005f16:	bf00      	nop
 8005f18:	371c      	adds	r7, #28
 8005f1a:	46bd      	mov	sp, r7
 8005f1c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005f20:	4770      	bx	lr
 8005f22:	bf00      	nop
 8005f24:	40012c00 	.word	0x40012c00
 8005f28:	40014000 	.word	0x40014000
 8005f2c:	40014400 	.word	0x40014400
 8005f30:	40014800 	.word	0x40014800

08005f34 <TIM_OC3_SetConfig>:
 8005f34:	b480      	push	{r7}
 8005f36:	b087      	sub	sp, #28
 8005f38:	af00      	add	r7, sp, #0
 8005f3a:	6078      	str	r0, [r7, #4]
 8005f3c:	6039      	str	r1, [r7, #0]
 8005f3e:	687b      	ldr	r3, [r7, #4]
 8005f40:	6a1b      	ldr	r3, [r3, #32]
 8005f42:	617b      	str	r3, [r7, #20]
 8005f44:	687b      	ldr	r3, [r7, #4]
 8005f46:	6a1b      	ldr	r3, [r3, #32]
 8005f48:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 8005f4c:	687b      	ldr	r3, [r7, #4]
 8005f4e:	621a      	str	r2, [r3, #32]
 8005f50:	687b      	ldr	r3, [r7, #4]
 8005f52:	685b      	ldr	r3, [r3, #4]
 8005f54:	613b      	str	r3, [r7, #16]
 8005f56:	687b      	ldr	r3, [r7, #4]
 8005f58:	69db      	ldr	r3, [r3, #28]
 8005f5a:	60fb      	str	r3, [r7, #12]
 8005f5c:	68fb      	ldr	r3, [r7, #12]
 8005f5e:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8005f62:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8005f66:	60fb      	str	r3, [r7, #12]
 8005f68:	68fb      	ldr	r3, [r7, #12]
 8005f6a:	f023 0303 	bic.w	r3, r3, #3
 8005f6e:	60fb      	str	r3, [r7, #12]
 8005f70:	683b      	ldr	r3, [r7, #0]
 8005f72:	681b      	ldr	r3, [r3, #0]
 8005f74:	68fa      	ldr	r2, [r7, #12]
 8005f76:	4313      	orrs	r3, r2
 8005f78:	60fb      	str	r3, [r7, #12]
 8005f7a:	697b      	ldr	r3, [r7, #20]
 8005f7c:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8005f80:	617b      	str	r3, [r7, #20]
 8005f82:	683b      	ldr	r3, [r7, #0]
 8005f84:	689b      	ldr	r3, [r3, #8]
 8005f86:	021b      	lsls	r3, r3, #8
 8005f88:	697a      	ldr	r2, [r7, #20]
 8005f8a:	4313      	orrs	r3, r2
 8005f8c:	617b      	str	r3, [r7, #20]
 8005f8e:	687b      	ldr	r3, [r7, #4]
 8005f90:	4a23      	ldr	r2, [pc, #140]	@ (8006020 <TIM_OC3_SetConfig+0xec>)
 8005f92:	4293      	cmp	r3, r2
 8005f94:	d10d      	bne.n	8005fb2 <TIM_OC3_SetConfig+0x7e>
 8005f96:	697b      	ldr	r3, [r7, #20]
 8005f98:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8005f9c:	617b      	str	r3, [r7, #20]
 8005f9e:	683b      	ldr	r3, [r7, #0]
 8005fa0:	68db      	ldr	r3, [r3, #12]
 8005fa2:	021b      	lsls	r3, r3, #8
 8005fa4:	697a      	ldr	r2, [r7, #20]
 8005fa6:	4313      	orrs	r3, r2
 8005fa8:	617b      	str	r3, [r7, #20]
 8005faa:	697b      	ldr	r3, [r7, #20]
 8005fac:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8005fb0:	617b      	str	r3, [r7, #20]
 8005fb2:	687b      	ldr	r3, [r7, #4]
 8005fb4:	4a1a      	ldr	r2, [pc, #104]	@ (8006020 <TIM_OC3_SetConfig+0xec>)
 8005fb6:	4293      	cmp	r3, r2
 8005fb8:	d00b      	beq.n	8005fd2 <TIM_OC3_SetConfig+0x9e>
 8005fba:	687b      	ldr	r3, [r7, #4]
 8005fbc:	4a19      	ldr	r2, [pc, #100]	@ (8006024 <TIM_OC3_SetConfig+0xf0>)
 8005fbe:	4293      	cmp	r3, r2
 8005fc0:	d007      	beq.n	8005fd2 <TIM_OC3_SetConfig+0x9e>
 8005fc2:	687b      	ldr	r3, [r7, #4]
 8005fc4:	4a18      	ldr	r2, [pc, #96]	@ (8006028 <TIM_OC3_SetConfig+0xf4>)
 8005fc6:	4293      	cmp	r3, r2
 8005fc8:	d003      	beq.n	8005fd2 <TIM_OC3_SetConfig+0x9e>
 8005fca:	687b      	ldr	r3, [r7, #4]
 8005fcc:	4a17      	ldr	r2, [pc, #92]	@ (800602c <TIM_OC3_SetConfig+0xf8>)
 8005fce:	4293      	cmp	r3, r2
 8005fd0:	d113      	bne.n	8005ffa <TIM_OC3_SetConfig+0xc6>
 8005fd2:	693b      	ldr	r3, [r7, #16]
 8005fd4:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8005fd8:	613b      	str	r3, [r7, #16]
 8005fda:	693b      	ldr	r3, [r7, #16]
 8005fdc:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8005fe0:	613b      	str	r3, [r7, #16]
 8005fe2:	683b      	ldr	r3, [r7, #0]
 8005fe4:	695b      	ldr	r3, [r3, #20]
 8005fe6:	011b      	lsls	r3, r3, #4
 8005fe8:	693a      	ldr	r2, [r7, #16]
 8005fea:	4313      	orrs	r3, r2
 8005fec:	613b      	str	r3, [r7, #16]
 8005fee:	683b      	ldr	r3, [r7, #0]
 8005ff0:	699b      	ldr	r3, [r3, #24]
 8005ff2:	011b      	lsls	r3, r3, #4
 8005ff4:	693a      	ldr	r2, [r7, #16]
 8005ff6:	4313      	orrs	r3, r2
 8005ff8:	613b      	str	r3, [r7, #16]
 8005ffa:	687b      	ldr	r3, [r7, #4]
 8005ffc:	693a      	ldr	r2, [r7, #16]
 8005ffe:	605a      	str	r2, [r3, #4]
 8006000:	687b      	ldr	r3, [r7, #4]
 8006002:	68fa      	ldr	r2, [r7, #12]
 8006004:	61da      	str	r2, [r3, #28]
 8006006:	683b      	ldr	r3, [r7, #0]
 8006008:	685a      	ldr	r2, [r3, #4]
 800600a:	687b      	ldr	r3, [r7, #4]
 800600c:	63da      	str	r2, [r3, #60]	@ 0x3c
 800600e:	687b      	ldr	r3, [r7, #4]
 8006010:	697a      	ldr	r2, [r7, #20]
 8006012:	621a      	str	r2, [r3, #32]
 8006014:	bf00      	nop
 8006016:	371c      	adds	r7, #28
 8006018:	46bd      	mov	sp, r7
 800601a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800601e:	4770      	bx	lr
 8006020:	40012c00 	.word	0x40012c00
 8006024:	40014000 	.word	0x40014000
 8006028:	40014400 	.word	0x40014400
 800602c:	40014800 	.word	0x40014800

08006030 <TIM_OC4_SetConfig>:
 8006030:	b480      	push	{r7}
 8006032:	b087      	sub	sp, #28
 8006034:	af00      	add	r7, sp, #0
 8006036:	6078      	str	r0, [r7, #4]
 8006038:	6039      	str	r1, [r7, #0]
 800603a:	687b      	ldr	r3, [r7, #4]
 800603c:	6a1b      	ldr	r3, [r3, #32]
 800603e:	613b      	str	r3, [r7, #16]
 8006040:	687b      	ldr	r3, [r7, #4]
 8006042:	6a1b      	ldr	r3, [r3, #32]
 8006044:	f423 5280 	bic.w	r2, r3, #4096	@ 0x1000
 8006048:	687b      	ldr	r3, [r7, #4]
 800604a:	621a      	str	r2, [r3, #32]
 800604c:	687b      	ldr	r3, [r7, #4]
 800604e:	685b      	ldr	r3, [r3, #4]
 8006050:	617b      	str	r3, [r7, #20]
 8006052:	687b      	ldr	r3, [r7, #4]
 8006054:	69db      	ldr	r3, [r3, #28]
 8006056:	60fb      	str	r3, [r7, #12]
 8006058:	68fb      	ldr	r3, [r7, #12]
 800605a:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 800605e:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8006062:	60fb      	str	r3, [r7, #12]
 8006064:	68fb      	ldr	r3, [r7, #12]
 8006066:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 800606a:	60fb      	str	r3, [r7, #12]
 800606c:	683b      	ldr	r3, [r7, #0]
 800606e:	681b      	ldr	r3, [r3, #0]
 8006070:	021b      	lsls	r3, r3, #8
 8006072:	68fa      	ldr	r2, [r7, #12]
 8006074:	4313      	orrs	r3, r2
 8006076:	60fb      	str	r3, [r7, #12]
 8006078:	693b      	ldr	r3, [r7, #16]
 800607a:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 800607e:	613b      	str	r3, [r7, #16]
 8006080:	683b      	ldr	r3, [r7, #0]
 8006082:	689b      	ldr	r3, [r3, #8]
 8006084:	031b      	lsls	r3, r3, #12
 8006086:	693a      	ldr	r2, [r7, #16]
 8006088:	4313      	orrs	r3, r2
 800608a:	613b      	str	r3, [r7, #16]
 800608c:	687b      	ldr	r3, [r7, #4]
 800608e:	4a16      	ldr	r2, [pc, #88]	@ (80060e8 <TIM_OC4_SetConfig+0xb8>)
 8006090:	4293      	cmp	r3, r2
 8006092:	d00b      	beq.n	80060ac <TIM_OC4_SetConfig+0x7c>
 8006094:	687b      	ldr	r3, [r7, #4]
 8006096:	4a15      	ldr	r2, [pc, #84]	@ (80060ec <TIM_OC4_SetConfig+0xbc>)
 8006098:	4293      	cmp	r3, r2
 800609a:	d007      	beq.n	80060ac <TIM_OC4_SetConfig+0x7c>
 800609c:	687b      	ldr	r3, [r7, #4]
 800609e:	4a14      	ldr	r2, [pc, #80]	@ (80060f0 <TIM_OC4_SetConfig+0xc0>)
 80060a0:	4293      	cmp	r3, r2
 80060a2:	d003      	beq.n	80060ac <TIM_OC4_SetConfig+0x7c>
 80060a4:	687b      	ldr	r3, [r7, #4]
 80060a6:	4a13      	ldr	r2, [pc, #76]	@ (80060f4 <TIM_OC4_SetConfig+0xc4>)
 80060a8:	4293      	cmp	r3, r2
 80060aa:	d109      	bne.n	80060c0 <TIM_OC4_SetConfig+0x90>
 80060ac:	697b      	ldr	r3, [r7, #20]
 80060ae:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 80060b2:	617b      	str	r3, [r7, #20]
 80060b4:	683b      	ldr	r3, [r7, #0]
 80060b6:	695b      	ldr	r3, [r3, #20]
 80060b8:	019b      	lsls	r3, r3, #6
 80060ba:	697a      	ldr	r2, [r7, #20]
 80060bc:	4313      	orrs	r3, r2
 80060be:	617b      	str	r3, [r7, #20]
 80060c0:	687b      	ldr	r3, [r7, #4]
 80060c2:	697a      	ldr	r2, [r7, #20]
 80060c4:	605a      	str	r2, [r3, #4]
 80060c6:	687b      	ldr	r3, [r7, #4]
 80060c8:	68fa      	ldr	r2, [r7, #12]
 80060ca:	61da      	str	r2, [r3, #28]
 80060cc:	683b      	ldr	r3, [r7, #0]
 80060ce:	685a      	ldr	r2, [r3, #4]
 80060d0:	687b      	ldr	r3, [r7, #4]
 80060d2:	641a      	str	r2, [r3, #64]	@ 0x40
 80060d4:	687b      	ldr	r3, [r7, #4]
 80060d6:	693a      	ldr	r2, [r7, #16]
 80060d8:	621a      	str	r2, [r3, #32]
 80060da:	bf00      	nop
 80060dc:	371c      	adds	r7, #28
 80060de:	46bd      	mov	sp, r7
 80060e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80060e4:	4770      	bx	lr
 80060e6:	bf00      	nop
 80060e8:	40012c00 	.word	0x40012c00
 80060ec:	40014000 	.word	0x40014000
 80060f0:	40014400 	.word	0x40014400
 80060f4:	40014800 	.word	0x40014800

080060f8 <TIM_OC5_SetConfig>:
 80060f8:	b480      	push	{r7}
 80060fa:	b087      	sub	sp, #28
 80060fc:	af00      	add	r7, sp, #0
 80060fe:	6078      	str	r0, [r7, #4]
 8006100:	6039      	str	r1, [r7, #0]
 8006102:	687b      	ldr	r3, [r7, #4]
 8006104:	6a1b      	ldr	r3, [r3, #32]
 8006106:	613b      	str	r3, [r7, #16]
 8006108:	687b      	ldr	r3, [r7, #4]
 800610a:	6a1b      	ldr	r3, [r3, #32]
 800610c:	f423 3280 	bic.w	r2, r3, #65536	@ 0x10000
 8006110:	687b      	ldr	r3, [r7, #4]
 8006112:	621a      	str	r2, [r3, #32]
 8006114:	687b      	ldr	r3, [r7, #4]
 8006116:	685b      	ldr	r3, [r3, #4]
 8006118:	617b      	str	r3, [r7, #20]
 800611a:	687b      	ldr	r3, [r7, #4]
 800611c:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800611e:	60fb      	str	r3, [r7, #12]
 8006120:	68fb      	ldr	r3, [r7, #12]
 8006122:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8006126:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800612a:	60fb      	str	r3, [r7, #12]
 800612c:	683b      	ldr	r3, [r7, #0]
 800612e:	681b      	ldr	r3, [r3, #0]
 8006130:	68fa      	ldr	r2, [r7, #12]
 8006132:	4313      	orrs	r3, r2
 8006134:	60fb      	str	r3, [r7, #12]
 8006136:	693b      	ldr	r3, [r7, #16]
 8006138:	f423 3300 	bic.w	r3, r3, #131072	@ 0x20000
 800613c:	613b      	str	r3, [r7, #16]
 800613e:	683b      	ldr	r3, [r7, #0]
 8006140:	689b      	ldr	r3, [r3, #8]
 8006142:	041b      	lsls	r3, r3, #16
 8006144:	693a      	ldr	r2, [r7, #16]
 8006146:	4313      	orrs	r3, r2
 8006148:	613b      	str	r3, [r7, #16]
 800614a:	687b      	ldr	r3, [r7, #4]
 800614c:	4a15      	ldr	r2, [pc, #84]	@ (80061a4 <TIM_OC5_SetConfig+0xac>)
 800614e:	4293      	cmp	r3, r2
 8006150:	d00b      	beq.n	800616a <TIM_OC5_SetConfig+0x72>
 8006152:	687b      	ldr	r3, [r7, #4]
 8006154:	4a14      	ldr	r2, [pc, #80]	@ (80061a8 <TIM_OC5_SetConfig+0xb0>)
 8006156:	4293      	cmp	r3, r2
 8006158:	d007      	beq.n	800616a <TIM_OC5_SetConfig+0x72>
 800615a:	687b      	ldr	r3, [r7, #4]
 800615c:	4a13      	ldr	r2, [pc, #76]	@ (80061ac <TIM_OC5_SetConfig+0xb4>)
 800615e:	4293      	cmp	r3, r2
 8006160:	d003      	beq.n	800616a <TIM_OC5_SetConfig+0x72>
 8006162:	687b      	ldr	r3, [r7, #4]
 8006164:	4a12      	ldr	r2, [pc, #72]	@ (80061b0 <TIM_OC5_SetConfig+0xb8>)
 8006166:	4293      	cmp	r3, r2
 8006168:	d109      	bne.n	800617e <TIM_OC5_SetConfig+0x86>
 800616a:	697b      	ldr	r3, [r7, #20]
 800616c:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8006170:	617b      	str	r3, [r7, #20]
 8006172:	683b      	ldr	r3, [r7, #0]
 8006174:	695b      	ldr	r3, [r3, #20]
 8006176:	021b      	lsls	r3, r3, #8
 8006178:	697a      	ldr	r2, [r7, #20]
 800617a:	4313      	orrs	r3, r2
 800617c:	617b      	str	r3, [r7, #20]
 800617e:	687b      	ldr	r3, [r7, #4]
 8006180:	697a      	ldr	r2, [r7, #20]
 8006182:	605a      	str	r2, [r3, #4]
 8006184:	687b      	ldr	r3, [r7, #4]
 8006186:	68fa      	ldr	r2, [r7, #12]
 8006188:	655a      	str	r2, [r3, #84]	@ 0x54
 800618a:	683b      	ldr	r3, [r7, #0]
 800618c:	685a      	ldr	r2, [r3, #4]
 800618e:	687b      	ldr	r3, [r7, #4]
 8006190:	659a      	str	r2, [r3, #88]	@ 0x58
 8006192:	687b      	ldr	r3, [r7, #4]
 8006194:	693a      	ldr	r2, [r7, #16]
 8006196:	621a      	str	r2, [r3, #32]
 8006198:	bf00      	nop
 800619a:	371c      	adds	r7, #28
 800619c:	46bd      	mov	sp, r7
 800619e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80061a2:	4770      	bx	lr
 80061a4:	40012c00 	.word	0x40012c00
 80061a8:	40014000 	.word	0x40014000
 80061ac:	40014400 	.word	0x40014400
 80061b0:	40014800 	.word	0x40014800

080061b4 <TIM_OC6_SetConfig>:
 80061b4:	b480      	push	{r7}
 80061b6:	b087      	sub	sp, #28
 80061b8:	af00      	add	r7, sp, #0
 80061ba:	6078      	str	r0, [r7, #4]
 80061bc:	6039      	str	r1, [r7, #0]
 80061be:	687b      	ldr	r3, [r7, #4]
 80061c0:	6a1b      	ldr	r3, [r3, #32]
 80061c2:	613b      	str	r3, [r7, #16]
 80061c4:	687b      	ldr	r3, [r7, #4]
 80061c6:	6a1b      	ldr	r3, [r3, #32]
 80061c8:	f423 1280 	bic.w	r2, r3, #1048576	@ 0x100000
 80061cc:	687b      	ldr	r3, [r7, #4]
 80061ce:	621a      	str	r2, [r3, #32]
 80061d0:	687b      	ldr	r3, [r7, #4]
 80061d2:	685b      	ldr	r3, [r3, #4]
 80061d4:	617b      	str	r3, [r7, #20]
 80061d6:	687b      	ldr	r3, [r7, #4]
 80061d8:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80061da:	60fb      	str	r3, [r7, #12]
 80061dc:	68fb      	ldr	r3, [r7, #12]
 80061de:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 80061e2:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 80061e6:	60fb      	str	r3, [r7, #12]
 80061e8:	683b      	ldr	r3, [r7, #0]
 80061ea:	681b      	ldr	r3, [r3, #0]
 80061ec:	021b      	lsls	r3, r3, #8
 80061ee:	68fa      	ldr	r2, [r7, #12]
 80061f0:	4313      	orrs	r3, r2
 80061f2:	60fb      	str	r3, [r7, #12]
 80061f4:	693b      	ldr	r3, [r7, #16]
 80061f6:	f423 1300 	bic.w	r3, r3, #2097152	@ 0x200000
 80061fa:	613b      	str	r3, [r7, #16]
 80061fc:	683b      	ldr	r3, [r7, #0]
 80061fe:	689b      	ldr	r3, [r3, #8]
 8006200:	051b      	lsls	r3, r3, #20
 8006202:	693a      	ldr	r2, [r7, #16]
 8006204:	4313      	orrs	r3, r2
 8006206:	613b      	str	r3, [r7, #16]
 8006208:	687b      	ldr	r3, [r7, #4]
 800620a:	4a16      	ldr	r2, [pc, #88]	@ (8006264 <TIM_OC6_SetConfig+0xb0>)
 800620c:	4293      	cmp	r3, r2
 800620e:	d00b      	beq.n	8006228 <TIM_OC6_SetConfig+0x74>
 8006210:	687b      	ldr	r3, [r7, #4]
 8006212:	4a15      	ldr	r2, [pc, #84]	@ (8006268 <TIM_OC6_SetConfig+0xb4>)
 8006214:	4293      	cmp	r3, r2
 8006216:	d007      	beq.n	8006228 <TIM_OC6_SetConfig+0x74>
 8006218:	687b      	ldr	r3, [r7, #4]
 800621a:	4a14      	ldr	r2, [pc, #80]	@ (800626c <TIM_OC6_SetConfig+0xb8>)
 800621c:	4293      	cmp	r3, r2
 800621e:	d003      	beq.n	8006228 <TIM_OC6_SetConfig+0x74>
 8006220:	687b      	ldr	r3, [r7, #4]
 8006222:	4a13      	ldr	r2, [pc, #76]	@ (8006270 <TIM_OC6_SetConfig+0xbc>)
 8006224:	4293      	cmp	r3, r2
 8006226:	d109      	bne.n	800623c <TIM_OC6_SetConfig+0x88>
 8006228:	697b      	ldr	r3, [r7, #20]
 800622a:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 800622e:	617b      	str	r3, [r7, #20]
 8006230:	683b      	ldr	r3, [r7, #0]
 8006232:	695b      	ldr	r3, [r3, #20]
 8006234:	029b      	lsls	r3, r3, #10
 8006236:	697a      	ldr	r2, [r7, #20]
 8006238:	4313      	orrs	r3, r2
 800623a:	617b      	str	r3, [r7, #20]
 800623c:	687b      	ldr	r3, [r7, #4]
 800623e:	697a      	ldr	r2, [r7, #20]
 8006240:	605a      	str	r2, [r3, #4]
 8006242:	687b      	ldr	r3, [r7, #4]
 8006244:	68fa      	ldr	r2, [r7, #12]
 8006246:	655a      	str	r2, [r3, #84]	@ 0x54
 8006248:	683b      	ldr	r3, [r7, #0]
 800624a:	685a      	ldr	r2, [r3, #4]
 800624c:	687b      	ldr	r3, [r7, #4]
 800624e:	65da      	str	r2, [r3, #92]	@ 0x5c
 8006250:	687b      	ldr	r3, [r7, #4]
 8006252:	693a      	ldr	r2, [r7, #16]
 8006254:	621a      	str	r2, [r3, #32]
 8006256:	bf00      	nop
 8006258:	371c      	adds	r7, #28
 800625a:	46bd      	mov	sp, r7
 800625c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006260:	4770      	bx	lr
 8006262:	bf00      	nop
 8006264:	40012c00 	.word	0x40012c00
 8006268:	40014000 	.word	0x40014000
 800626c:	40014400 	.word	0x40014400
 8006270:	40014800 	.word	0x40014800

08006274 <TIM_TI1_ConfigInputStage>:
 8006274:	b480      	push	{r7}
 8006276:	b087      	sub	sp, #28
 8006278:	af00      	add	r7, sp, #0
 800627a:	60f8      	str	r0, [r7, #12]
 800627c:	60b9      	str	r1, [r7, #8]
 800627e:	607a      	str	r2, [r7, #4]
 8006280:	68fb      	ldr	r3, [r7, #12]
 8006282:	6a1b      	ldr	r3, [r3, #32]
 8006284:	617b      	str	r3, [r7, #20]
 8006286:	68fb      	ldr	r3, [r7, #12]
 8006288:	6a1b      	ldr	r3, [r3, #32]
 800628a:	f023 0201 	bic.w	r2, r3, #1
 800628e:	68fb      	ldr	r3, [r7, #12]
 8006290:	621a      	str	r2, [r3, #32]
 8006292:	68fb      	ldr	r3, [r7, #12]
 8006294:	699b      	ldr	r3, [r3, #24]
 8006296:	613b      	str	r3, [r7, #16]
 8006298:	693b      	ldr	r3, [r7, #16]
 800629a:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 800629e:	613b      	str	r3, [r7, #16]
 80062a0:	687b      	ldr	r3, [r7, #4]
 80062a2:	011b      	lsls	r3, r3, #4
 80062a4:	693a      	ldr	r2, [r7, #16]
 80062a6:	4313      	orrs	r3, r2
 80062a8:	613b      	str	r3, [r7, #16]
 80062aa:	697b      	ldr	r3, [r7, #20]
 80062ac:	f023 030a 	bic.w	r3, r3, #10
 80062b0:	617b      	str	r3, [r7, #20]
 80062b2:	697a      	ldr	r2, [r7, #20]
 80062b4:	68bb      	ldr	r3, [r7, #8]
 80062b6:	4313      	orrs	r3, r2
 80062b8:	617b      	str	r3, [r7, #20]
 80062ba:	68fb      	ldr	r3, [r7, #12]
 80062bc:	693a      	ldr	r2, [r7, #16]
 80062be:	619a      	str	r2, [r3, #24]
 80062c0:	68fb      	ldr	r3, [r7, #12]
 80062c2:	697a      	ldr	r2, [r7, #20]
 80062c4:	621a      	str	r2, [r3, #32]
 80062c6:	bf00      	nop
 80062c8:	371c      	adds	r7, #28
 80062ca:	46bd      	mov	sp, r7
 80062cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80062d0:	4770      	bx	lr

080062d2 <TIM_TI2_ConfigInputStage>:
 80062d2:	b480      	push	{r7}
 80062d4:	b087      	sub	sp, #28
 80062d6:	af00      	add	r7, sp, #0
 80062d8:	60f8      	str	r0, [r7, #12]
 80062da:	60b9      	str	r1, [r7, #8]
 80062dc:	607a      	str	r2, [r7, #4]
 80062de:	68fb      	ldr	r3, [r7, #12]
 80062e0:	6a1b      	ldr	r3, [r3, #32]
 80062e2:	617b      	str	r3, [r7, #20]
 80062e4:	68fb      	ldr	r3, [r7, #12]
 80062e6:	6a1b      	ldr	r3, [r3, #32]
 80062e8:	f023 0210 	bic.w	r2, r3, #16
 80062ec:	68fb      	ldr	r3, [r7, #12]
 80062ee:	621a      	str	r2, [r3, #32]
 80062f0:	68fb      	ldr	r3, [r7, #12]
 80062f2:	699b      	ldr	r3, [r3, #24]
 80062f4:	613b      	str	r3, [r7, #16]
 80062f6:	693b      	ldr	r3, [r7, #16]
 80062f8:	f423 4370 	bic.w	r3, r3, #61440	@ 0xf000
 80062fc:	613b      	str	r3, [r7, #16]
 80062fe:	687b      	ldr	r3, [r7, #4]
 8006300:	031b      	lsls	r3, r3, #12
 8006302:	693a      	ldr	r2, [r7, #16]
 8006304:	4313      	orrs	r3, r2
 8006306:	613b      	str	r3, [r7, #16]
 8006308:	697b      	ldr	r3, [r7, #20]
 800630a:	f023 03a0 	bic.w	r3, r3, #160	@ 0xa0
 800630e:	617b      	str	r3, [r7, #20]
 8006310:	68bb      	ldr	r3, [r7, #8]
 8006312:	011b      	lsls	r3, r3, #4
 8006314:	697a      	ldr	r2, [r7, #20]
 8006316:	4313      	orrs	r3, r2
 8006318:	617b      	str	r3, [r7, #20]
 800631a:	68fb      	ldr	r3, [r7, #12]
 800631c:	693a      	ldr	r2, [r7, #16]
 800631e:	619a      	str	r2, [r3, #24]
 8006320:	68fb      	ldr	r3, [r7, #12]
 8006322:	697a      	ldr	r2, [r7, #20]
 8006324:	621a      	str	r2, [r3, #32]
 8006326:	bf00      	nop
 8006328:	371c      	adds	r7, #28
 800632a:	46bd      	mov	sp, r7
 800632c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006330:	4770      	bx	lr

08006332 <TIM_ITRx_SetConfig>:
 8006332:	b480      	push	{r7}
 8006334:	b085      	sub	sp, #20
 8006336:	af00      	add	r7, sp, #0
 8006338:	6078      	str	r0, [r7, #4]
 800633a:	6039      	str	r1, [r7, #0]
 800633c:	687b      	ldr	r3, [r7, #4]
 800633e:	689b      	ldr	r3, [r3, #8]
 8006340:	60fb      	str	r3, [r7, #12]
 8006342:	68fb      	ldr	r3, [r7, #12]
 8006344:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8006348:	60fb      	str	r3, [r7, #12]
 800634a:	683a      	ldr	r2, [r7, #0]
 800634c:	68fb      	ldr	r3, [r7, #12]
 800634e:	4313      	orrs	r3, r2
 8006350:	f043 0307 	orr.w	r3, r3, #7
 8006354:	60fb      	str	r3, [r7, #12]
 8006356:	687b      	ldr	r3, [r7, #4]
 8006358:	68fa      	ldr	r2, [r7, #12]
 800635a:	609a      	str	r2, [r3, #8]
 800635c:	bf00      	nop
 800635e:	3714      	adds	r7, #20
 8006360:	46bd      	mov	sp, r7
 8006362:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006366:	4770      	bx	lr

08006368 <TIM_ETR_SetConfig>:
 8006368:	b480      	push	{r7}
 800636a:	b087      	sub	sp, #28
 800636c:	af00      	add	r7, sp, #0
 800636e:	60f8      	str	r0, [r7, #12]
 8006370:	60b9      	str	r1, [r7, #8]
 8006372:	607a      	str	r2, [r7, #4]
 8006374:	603b      	str	r3, [r7, #0]
 8006376:	68fb      	ldr	r3, [r7, #12]
 8006378:	689b      	ldr	r3, [r3, #8]
 800637a:	617b      	str	r3, [r7, #20]
 800637c:	697b      	ldr	r3, [r7, #20]
 800637e:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 8006382:	617b      	str	r3, [r7, #20]
 8006384:	683b      	ldr	r3, [r7, #0]
 8006386:	021a      	lsls	r2, r3, #8
 8006388:	687b      	ldr	r3, [r7, #4]
 800638a:	431a      	orrs	r2, r3
 800638c:	68bb      	ldr	r3, [r7, #8]
 800638e:	4313      	orrs	r3, r2
 8006390:	697a      	ldr	r2, [r7, #20]
 8006392:	4313      	orrs	r3, r2
 8006394:	617b      	str	r3, [r7, #20]
 8006396:	68fb      	ldr	r3, [r7, #12]
 8006398:	697a      	ldr	r2, [r7, #20]
 800639a:	609a      	str	r2, [r3, #8]
 800639c:	bf00      	nop
 800639e:	371c      	adds	r7, #28
 80063a0:	46bd      	mov	sp, r7
 80063a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80063a6:	4770      	bx	lr

080063a8 <TIM_CCxChannelCmd>:
 80063a8:	b480      	push	{r7}
 80063aa:	b087      	sub	sp, #28
 80063ac:	af00      	add	r7, sp, #0
 80063ae:	60f8      	str	r0, [r7, #12]
 80063b0:	60b9      	str	r1, [r7, #8]
 80063b2:	607a      	str	r2, [r7, #4]
 80063b4:	68bb      	ldr	r3, [r7, #8]
 80063b6:	f003 031f 	and.w	r3, r3, #31
 80063ba:	2201      	movs	r2, #1
 80063bc:	fa02 f303 	lsl.w	r3, r2, r3
 80063c0:	617b      	str	r3, [r7, #20]
 80063c2:	68fb      	ldr	r3, [r7, #12]
 80063c4:	6a1a      	ldr	r2, [r3, #32]
 80063c6:	697b      	ldr	r3, [r7, #20]
 80063c8:	43db      	mvns	r3, r3
 80063ca:	401a      	ands	r2, r3
 80063cc:	68fb      	ldr	r3, [r7, #12]
 80063ce:	621a      	str	r2, [r3, #32]
 80063d0:	68fb      	ldr	r3, [r7, #12]
 80063d2:	6a1a      	ldr	r2, [r3, #32]
 80063d4:	68bb      	ldr	r3, [r7, #8]
 80063d6:	f003 031f 	and.w	r3, r3, #31
 80063da:	6879      	ldr	r1, [r7, #4]
 80063dc:	fa01 f303 	lsl.w	r3, r1, r3
 80063e0:	431a      	orrs	r2, r3
 80063e2:	68fb      	ldr	r3, [r7, #12]
 80063e4:	621a      	str	r2, [r3, #32]
 80063e6:	bf00      	nop
 80063e8:	371c      	adds	r7, #28
 80063ea:	46bd      	mov	sp, r7
 80063ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80063f0:	4770      	bx	lr
	...

080063f4 <HAL_TIMEx_MasterConfigSynchronization>:
 80063f4:	b480      	push	{r7}
 80063f6:	b085      	sub	sp, #20
 80063f8:	af00      	add	r7, sp, #0
 80063fa:	6078      	str	r0, [r7, #4]
 80063fc:	6039      	str	r1, [r7, #0]
 80063fe:	687b      	ldr	r3, [r7, #4]
 8006400:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8006404:	2b01      	cmp	r3, #1
 8006406:	d101      	bne.n	800640c <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8006408:	2302      	movs	r3, #2
 800640a:	e054      	b.n	80064b6 <HAL_TIMEx_MasterConfigSynchronization+0xc2>
 800640c:	687b      	ldr	r3, [r7, #4]
 800640e:	2201      	movs	r2, #1
 8006410:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8006414:	687b      	ldr	r3, [r7, #4]
 8006416:	2202      	movs	r2, #2
 8006418:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800641c:	687b      	ldr	r3, [r7, #4]
 800641e:	681b      	ldr	r3, [r3, #0]
 8006420:	685b      	ldr	r3, [r3, #4]
 8006422:	60fb      	str	r3, [r7, #12]
 8006424:	687b      	ldr	r3, [r7, #4]
 8006426:	681b      	ldr	r3, [r3, #0]
 8006428:	689b      	ldr	r3, [r3, #8]
 800642a:	60bb      	str	r3, [r7, #8]
 800642c:	687b      	ldr	r3, [r7, #4]
 800642e:	681b      	ldr	r3, [r3, #0]
 8006430:	4a24      	ldr	r2, [pc, #144]	@ (80064c4 <HAL_TIMEx_MasterConfigSynchronization+0xd0>)
 8006432:	4293      	cmp	r3, r2
 8006434:	d108      	bne.n	8006448 <HAL_TIMEx_MasterConfigSynchronization+0x54>
 8006436:	68fb      	ldr	r3, [r7, #12]
 8006438:	f423 0370 	bic.w	r3, r3, #15728640	@ 0xf00000
 800643c:	60fb      	str	r3, [r7, #12]
 800643e:	683b      	ldr	r3, [r7, #0]
 8006440:	685b      	ldr	r3, [r3, #4]
 8006442:	68fa      	ldr	r2, [r7, #12]
 8006444:	4313      	orrs	r3, r2
 8006446:	60fb      	str	r3, [r7, #12]
 8006448:	68fb      	ldr	r3, [r7, #12]
 800644a:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800644e:	60fb      	str	r3, [r7, #12]
 8006450:	683b      	ldr	r3, [r7, #0]
 8006452:	681b      	ldr	r3, [r3, #0]
 8006454:	68fa      	ldr	r2, [r7, #12]
 8006456:	4313      	orrs	r3, r2
 8006458:	60fb      	str	r3, [r7, #12]
 800645a:	687b      	ldr	r3, [r7, #4]
 800645c:	681b      	ldr	r3, [r3, #0]
 800645e:	68fa      	ldr	r2, [r7, #12]
 8006460:	605a      	str	r2, [r3, #4]
 8006462:	687b      	ldr	r3, [r7, #4]
 8006464:	681b      	ldr	r3, [r3, #0]
 8006466:	4a17      	ldr	r2, [pc, #92]	@ (80064c4 <HAL_TIMEx_MasterConfigSynchronization+0xd0>)
 8006468:	4293      	cmp	r3, r2
 800646a:	d00e      	beq.n	800648a <HAL_TIMEx_MasterConfigSynchronization+0x96>
 800646c:	687b      	ldr	r3, [r7, #4]
 800646e:	681b      	ldr	r3, [r3, #0]
 8006470:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8006474:	d009      	beq.n	800648a <HAL_TIMEx_MasterConfigSynchronization+0x96>
 8006476:	687b      	ldr	r3, [r7, #4]
 8006478:	681b      	ldr	r3, [r3, #0]
 800647a:	4a13      	ldr	r2, [pc, #76]	@ (80064c8 <HAL_TIMEx_MasterConfigSynchronization+0xd4>)
 800647c:	4293      	cmp	r3, r2
 800647e:	d004      	beq.n	800648a <HAL_TIMEx_MasterConfigSynchronization+0x96>
 8006480:	687b      	ldr	r3, [r7, #4]
 8006482:	681b      	ldr	r3, [r3, #0]
 8006484:	4a11      	ldr	r2, [pc, #68]	@ (80064cc <HAL_TIMEx_MasterConfigSynchronization+0xd8>)
 8006486:	4293      	cmp	r3, r2
 8006488:	d10c      	bne.n	80064a4 <HAL_TIMEx_MasterConfigSynchronization+0xb0>
 800648a:	68bb      	ldr	r3, [r7, #8]
 800648c:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8006490:	60bb      	str	r3, [r7, #8]
 8006492:	683b      	ldr	r3, [r7, #0]
 8006494:	689b      	ldr	r3, [r3, #8]
 8006496:	68ba      	ldr	r2, [r7, #8]
 8006498:	4313      	orrs	r3, r2
 800649a:	60bb      	str	r3, [r7, #8]
 800649c:	687b      	ldr	r3, [r7, #4]
 800649e:	681b      	ldr	r3, [r3, #0]
 80064a0:	68ba      	ldr	r2, [r7, #8]
 80064a2:	609a      	str	r2, [r3, #8]
 80064a4:	687b      	ldr	r3, [r7, #4]
 80064a6:	2201      	movs	r2, #1
 80064a8:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80064ac:	687b      	ldr	r3, [r7, #4]
 80064ae:	2200      	movs	r2, #0
 80064b0:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80064b4:	2300      	movs	r3, #0
 80064b6:	4618      	mov	r0, r3
 80064b8:	3714      	adds	r7, #20
 80064ba:	46bd      	mov	sp, r7
 80064bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80064c0:	4770      	bx	lr
 80064c2:	bf00      	nop
 80064c4:	40012c00 	.word	0x40012c00
 80064c8:	40000400 	.word	0x40000400
 80064cc:	40014000 	.word	0x40014000

080064d0 <HAL_TIMEx_ConfigBreakDeadTime>:
 80064d0:	b480      	push	{r7}
 80064d2:	b085      	sub	sp, #20
 80064d4:	af00      	add	r7, sp, #0
 80064d6:	6078      	str	r0, [r7, #4]
 80064d8:	6039      	str	r1, [r7, #0]
 80064da:	2300      	movs	r3, #0
 80064dc:	60fb      	str	r3, [r7, #12]
 80064de:	687b      	ldr	r3, [r7, #4]
 80064e0:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 80064e4:	2b01      	cmp	r3, #1
 80064e6:	d101      	bne.n	80064ec <HAL_TIMEx_ConfigBreakDeadTime+0x1c>
 80064e8:	2302      	movs	r3, #2
 80064ea:	e060      	b.n	80065ae <HAL_TIMEx_ConfigBreakDeadTime+0xde>
 80064ec:	687b      	ldr	r3, [r7, #4]
 80064ee:	2201      	movs	r2, #1
 80064f0:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80064f4:	68fb      	ldr	r3, [r7, #12]
 80064f6:	f023 02ff 	bic.w	r2, r3, #255	@ 0xff
 80064fa:	683b      	ldr	r3, [r7, #0]
 80064fc:	68db      	ldr	r3, [r3, #12]
 80064fe:	4313      	orrs	r3, r2
 8006500:	60fb      	str	r3, [r7, #12]
 8006502:	68fb      	ldr	r3, [r7, #12]
 8006504:	f423 7240 	bic.w	r2, r3, #768	@ 0x300
 8006508:	683b      	ldr	r3, [r7, #0]
 800650a:	689b      	ldr	r3, [r3, #8]
 800650c:	4313      	orrs	r3, r2
 800650e:	60fb      	str	r3, [r7, #12]
 8006510:	68fb      	ldr	r3, [r7, #12]
 8006512:	f423 6280 	bic.w	r2, r3, #1024	@ 0x400
 8006516:	683b      	ldr	r3, [r7, #0]
 8006518:	685b      	ldr	r3, [r3, #4]
 800651a:	4313      	orrs	r3, r2
 800651c:	60fb      	str	r3, [r7, #12]
 800651e:	68fb      	ldr	r3, [r7, #12]
 8006520:	f423 6200 	bic.w	r2, r3, #2048	@ 0x800
 8006524:	683b      	ldr	r3, [r7, #0]
 8006526:	681b      	ldr	r3, [r3, #0]
 8006528:	4313      	orrs	r3, r2
 800652a:	60fb      	str	r3, [r7, #12]
 800652c:	68fb      	ldr	r3, [r7, #12]
 800652e:	f423 5280 	bic.w	r2, r3, #4096	@ 0x1000
 8006532:	683b      	ldr	r3, [r7, #0]
 8006534:	691b      	ldr	r3, [r3, #16]
 8006536:	4313      	orrs	r3, r2
 8006538:	60fb      	str	r3, [r7, #12]
 800653a:	68fb      	ldr	r3, [r7, #12]
 800653c:	f423 5200 	bic.w	r2, r3, #8192	@ 0x2000
 8006540:	683b      	ldr	r3, [r7, #0]
 8006542:	695b      	ldr	r3, [r3, #20]
 8006544:	4313      	orrs	r3, r2
 8006546:	60fb      	str	r3, [r7, #12]
 8006548:	68fb      	ldr	r3, [r7, #12]
 800654a:	f423 4280 	bic.w	r2, r3, #16384	@ 0x4000
 800654e:	683b      	ldr	r3, [r7, #0]
 8006550:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8006552:	4313      	orrs	r3, r2
 8006554:	60fb      	str	r3, [r7, #12]
 8006556:	68fb      	ldr	r3, [r7, #12]
 8006558:	f423 2270 	bic.w	r2, r3, #983040	@ 0xf0000
 800655c:	683b      	ldr	r3, [r7, #0]
 800655e:	699b      	ldr	r3, [r3, #24]
 8006560:	041b      	lsls	r3, r3, #16
 8006562:	4313      	orrs	r3, r2
 8006564:	60fb      	str	r3, [r7, #12]
 8006566:	687b      	ldr	r3, [r7, #4]
 8006568:	681b      	ldr	r3, [r3, #0]
 800656a:	4a14      	ldr	r2, [pc, #80]	@ (80065bc <HAL_TIMEx_ConfigBreakDeadTime+0xec>)
 800656c:	4293      	cmp	r3, r2
 800656e:	d115      	bne.n	800659c <HAL_TIMEx_ConfigBreakDeadTime+0xcc>
 8006570:	68fb      	ldr	r3, [r7, #12]
 8006572:	f423 0270 	bic.w	r2, r3, #15728640	@ 0xf00000
 8006576:	683b      	ldr	r3, [r7, #0]
 8006578:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800657a:	051b      	lsls	r3, r3, #20
 800657c:	4313      	orrs	r3, r2
 800657e:	60fb      	str	r3, [r7, #12]
 8006580:	68fb      	ldr	r3, [r7, #12]
 8006582:	f023 7280 	bic.w	r2, r3, #16777216	@ 0x1000000
 8006586:	683b      	ldr	r3, [r7, #0]
 8006588:	69db      	ldr	r3, [r3, #28]
 800658a:	4313      	orrs	r3, r2
 800658c:	60fb      	str	r3, [r7, #12]
 800658e:	68fb      	ldr	r3, [r7, #12]
 8006590:	f023 7200 	bic.w	r2, r3, #33554432	@ 0x2000000
 8006594:	683b      	ldr	r3, [r7, #0]
 8006596:	6a1b      	ldr	r3, [r3, #32]
 8006598:	4313      	orrs	r3, r2
 800659a:	60fb      	str	r3, [r7, #12]
 800659c:	687b      	ldr	r3, [r7, #4]
 800659e:	681b      	ldr	r3, [r3, #0]
 80065a0:	68fa      	ldr	r2, [r7, #12]
 80065a2:	645a      	str	r2, [r3, #68]	@ 0x44
 80065a4:	687b      	ldr	r3, [r7, #4]
 80065a6:	2200      	movs	r2, #0
 80065a8:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80065ac:	2300      	movs	r3, #0
 80065ae:	4618      	mov	r0, r3
 80065b0:	3714      	adds	r7, #20
 80065b2:	46bd      	mov	sp, r7
 80065b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80065b8:	4770      	bx	lr
 80065ba:	bf00      	nop
 80065bc:	40012c00 	.word	0x40012c00

080065c0 <HAL_TIMEx_CommutCallback>:
 80065c0:	b480      	push	{r7}
 80065c2:	b083      	sub	sp, #12
 80065c4:	af00      	add	r7, sp, #0
 80065c6:	6078      	str	r0, [r7, #4]
 80065c8:	bf00      	nop
 80065ca:	370c      	adds	r7, #12
 80065cc:	46bd      	mov	sp, r7
 80065ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 80065d2:	4770      	bx	lr

080065d4 <HAL_TIMEx_BreakCallback>:
 80065d4:	b480      	push	{r7}
 80065d6:	b083      	sub	sp, #12
 80065d8:	af00      	add	r7, sp, #0
 80065da:	6078      	str	r0, [r7, #4]
 80065dc:	bf00      	nop
 80065de:	370c      	adds	r7, #12
 80065e0:	46bd      	mov	sp, r7
 80065e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80065e6:	4770      	bx	lr

080065e8 <HAL_TIMEx_Break2Callback>:
 80065e8:	b480      	push	{r7}
 80065ea:	b083      	sub	sp, #12
 80065ec:	af00      	add	r7, sp, #0
 80065ee:	6078      	str	r0, [r7, #4]
 80065f0:	bf00      	nop
 80065f2:	370c      	adds	r7, #12
 80065f4:	46bd      	mov	sp, r7
 80065f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80065fa:	4770      	bx	lr

080065fc <HAL_UART_Init>:
 80065fc:	b580      	push	{r7, lr}
 80065fe:	b082      	sub	sp, #8
 8006600:	af00      	add	r7, sp, #0
 8006602:	6078      	str	r0, [r7, #4]
 8006604:	687b      	ldr	r3, [r7, #4]
 8006606:	2b00      	cmp	r3, #0
 8006608:	d101      	bne.n	800660e <HAL_UART_Init+0x12>
 800660a:	2301      	movs	r3, #1
 800660c:	e040      	b.n	8006690 <HAL_UART_Init+0x94>
 800660e:	687b      	ldr	r3, [r7, #4]
 8006610:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8006612:	2b00      	cmp	r3, #0
 8006614:	d106      	bne.n	8006624 <HAL_UART_Init+0x28>
 8006616:	687b      	ldr	r3, [r7, #4]
 8006618:	2200      	movs	r2, #0
 800661a:	f883 2078 	strb.w	r2, [r3, #120]	@ 0x78
 800661e:	6878      	ldr	r0, [r7, #4]
 8006620:	f7fb ff42 	bl	80024a8 <HAL_UART_MspInit>
 8006624:	687b      	ldr	r3, [r7, #4]
 8006626:	2224      	movs	r2, #36	@ 0x24
 8006628:	67da      	str	r2, [r3, #124]	@ 0x7c
 800662a:	687b      	ldr	r3, [r7, #4]
 800662c:	681b      	ldr	r3, [r3, #0]
 800662e:	681a      	ldr	r2, [r3, #0]
 8006630:	687b      	ldr	r3, [r7, #4]
 8006632:	681b      	ldr	r3, [r3, #0]
 8006634:	f022 0201 	bic.w	r2, r2, #1
 8006638:	601a      	str	r2, [r3, #0]
 800663a:	687b      	ldr	r3, [r7, #4]
 800663c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800663e:	2b00      	cmp	r3, #0
 8006640:	d002      	beq.n	8006648 <HAL_UART_Init+0x4c>
 8006642:	6878      	ldr	r0, [r7, #4]
 8006644:	f000 fd32 	bl	80070ac <UART_AdvFeatureConfig>
 8006648:	6878      	ldr	r0, [r7, #4]
 800664a:	f000 fbf9 	bl	8006e40 <UART_SetConfig>
 800664e:	4603      	mov	r3, r0
 8006650:	2b01      	cmp	r3, #1
 8006652:	d101      	bne.n	8006658 <HAL_UART_Init+0x5c>
 8006654:	2301      	movs	r3, #1
 8006656:	e01b      	b.n	8006690 <HAL_UART_Init+0x94>
 8006658:	687b      	ldr	r3, [r7, #4]
 800665a:	681b      	ldr	r3, [r3, #0]
 800665c:	685a      	ldr	r2, [r3, #4]
 800665e:	687b      	ldr	r3, [r7, #4]
 8006660:	681b      	ldr	r3, [r3, #0]
 8006662:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
 8006666:	605a      	str	r2, [r3, #4]
 8006668:	687b      	ldr	r3, [r7, #4]
 800666a:	681b      	ldr	r3, [r3, #0]
 800666c:	689a      	ldr	r2, [r3, #8]
 800666e:	687b      	ldr	r3, [r7, #4]
 8006670:	681b      	ldr	r3, [r3, #0]
 8006672:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
 8006676:	609a      	str	r2, [r3, #8]
 8006678:	687b      	ldr	r3, [r7, #4]
 800667a:	681b      	ldr	r3, [r3, #0]
 800667c:	681a      	ldr	r2, [r3, #0]
 800667e:	687b      	ldr	r3, [r7, #4]
 8006680:	681b      	ldr	r3, [r3, #0]
 8006682:	f042 0201 	orr.w	r2, r2, #1
 8006686:	601a      	str	r2, [r3, #0]
 8006688:	6878      	ldr	r0, [r7, #4]
 800668a:	f000 fdb1 	bl	80071f0 <UART_CheckIdleState>
 800668e:	4603      	mov	r3, r0
 8006690:	4618      	mov	r0, r3
 8006692:	3708      	adds	r7, #8
 8006694:	46bd      	mov	sp, r7
 8006696:	bd80      	pop	{r7, pc}

08006698 <HAL_UART_Transmit>:
 8006698:	b580      	push	{r7, lr}
 800669a:	b08a      	sub	sp, #40	@ 0x28
 800669c:	af02      	add	r7, sp, #8
 800669e:	60f8      	str	r0, [r7, #12]
 80066a0:	60b9      	str	r1, [r7, #8]
 80066a2:	603b      	str	r3, [r7, #0]
 80066a4:	4613      	mov	r3, r2
 80066a6:	80fb      	strh	r3, [r7, #6]
 80066a8:	68fb      	ldr	r3, [r7, #12]
 80066aa:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 80066ac:	2b20      	cmp	r3, #32
 80066ae:	d177      	bne.n	80067a0 <HAL_UART_Transmit+0x108>
 80066b0:	68bb      	ldr	r3, [r7, #8]
 80066b2:	2b00      	cmp	r3, #0
 80066b4:	d002      	beq.n	80066bc <HAL_UART_Transmit+0x24>
 80066b6:	88fb      	ldrh	r3, [r7, #6]
 80066b8:	2b00      	cmp	r3, #0
 80066ba:	d101      	bne.n	80066c0 <HAL_UART_Transmit+0x28>
 80066bc:	2301      	movs	r3, #1
 80066be:	e070      	b.n	80067a2 <HAL_UART_Transmit+0x10a>
 80066c0:	68fb      	ldr	r3, [r7, #12]
 80066c2:	2200      	movs	r2, #0
 80066c4:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 80066c8:	68fb      	ldr	r3, [r7, #12]
 80066ca:	2221      	movs	r2, #33	@ 0x21
 80066cc:	67da      	str	r2, [r3, #124]	@ 0x7c
 80066ce:	f7fc f901 	bl	80028d4 <HAL_GetTick>
 80066d2:	6178      	str	r0, [r7, #20]
 80066d4:	68fb      	ldr	r3, [r7, #12]
 80066d6:	88fa      	ldrh	r2, [r7, #6]
 80066d8:	f8a3 2050 	strh.w	r2, [r3, #80]	@ 0x50
 80066dc:	68fb      	ldr	r3, [r7, #12]
 80066de:	88fa      	ldrh	r2, [r7, #6]
 80066e0:	f8a3 2052 	strh.w	r2, [r3, #82]	@ 0x52
 80066e4:	68fb      	ldr	r3, [r7, #12]
 80066e6:	689b      	ldr	r3, [r3, #8]
 80066e8:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 80066ec:	d108      	bne.n	8006700 <HAL_UART_Transmit+0x68>
 80066ee:	68fb      	ldr	r3, [r7, #12]
 80066f0:	691b      	ldr	r3, [r3, #16]
 80066f2:	2b00      	cmp	r3, #0
 80066f4:	d104      	bne.n	8006700 <HAL_UART_Transmit+0x68>
 80066f6:	2300      	movs	r3, #0
 80066f8:	61fb      	str	r3, [r7, #28]
 80066fa:	68bb      	ldr	r3, [r7, #8]
 80066fc:	61bb      	str	r3, [r7, #24]
 80066fe:	e003      	b.n	8006708 <HAL_UART_Transmit+0x70>
 8006700:	68bb      	ldr	r3, [r7, #8]
 8006702:	61fb      	str	r3, [r7, #28]
 8006704:	2300      	movs	r3, #0
 8006706:	61bb      	str	r3, [r7, #24]
 8006708:	e02f      	b.n	800676a <HAL_UART_Transmit+0xd2>
 800670a:	683b      	ldr	r3, [r7, #0]
 800670c:	9300      	str	r3, [sp, #0]
 800670e:	697b      	ldr	r3, [r7, #20]
 8006710:	2200      	movs	r2, #0
 8006712:	2180      	movs	r1, #128	@ 0x80
 8006714:	68f8      	ldr	r0, [r7, #12]
 8006716:	f000 fe13 	bl	8007340 <UART_WaitOnFlagUntilTimeout>
 800671a:	4603      	mov	r3, r0
 800671c:	2b00      	cmp	r3, #0
 800671e:	d004      	beq.n	800672a <HAL_UART_Transmit+0x92>
 8006720:	68fb      	ldr	r3, [r7, #12]
 8006722:	2220      	movs	r2, #32
 8006724:	67da      	str	r2, [r3, #124]	@ 0x7c
 8006726:	2303      	movs	r3, #3
 8006728:	e03b      	b.n	80067a2 <HAL_UART_Transmit+0x10a>
 800672a:	69fb      	ldr	r3, [r7, #28]
 800672c:	2b00      	cmp	r3, #0
 800672e:	d10b      	bne.n	8006748 <HAL_UART_Transmit+0xb0>
 8006730:	69bb      	ldr	r3, [r7, #24]
 8006732:	881a      	ldrh	r2, [r3, #0]
 8006734:	68fb      	ldr	r3, [r7, #12]
 8006736:	681b      	ldr	r3, [r3, #0]
 8006738:	f3c2 0208 	ubfx	r2, r2, #0, #9
 800673c:	b292      	uxth	r2, r2
 800673e:	851a      	strh	r2, [r3, #40]	@ 0x28
 8006740:	69bb      	ldr	r3, [r7, #24]
 8006742:	3302      	adds	r3, #2
 8006744:	61bb      	str	r3, [r7, #24]
 8006746:	e007      	b.n	8006758 <HAL_UART_Transmit+0xc0>
 8006748:	69fb      	ldr	r3, [r7, #28]
 800674a:	781a      	ldrb	r2, [r3, #0]
 800674c:	68fb      	ldr	r3, [r7, #12]
 800674e:	681b      	ldr	r3, [r3, #0]
 8006750:	851a      	strh	r2, [r3, #40]	@ 0x28
 8006752:	69fb      	ldr	r3, [r7, #28]
 8006754:	3301      	adds	r3, #1
 8006756:	61fb      	str	r3, [r7, #28]
 8006758:	68fb      	ldr	r3, [r7, #12]
 800675a:	f8b3 3052 	ldrh.w	r3, [r3, #82]	@ 0x52
 800675e:	b29b      	uxth	r3, r3
 8006760:	3b01      	subs	r3, #1
 8006762:	b29a      	uxth	r2, r3
 8006764:	68fb      	ldr	r3, [r7, #12]
 8006766:	f8a3 2052 	strh.w	r2, [r3, #82]	@ 0x52
 800676a:	68fb      	ldr	r3, [r7, #12]
 800676c:	f8b3 3052 	ldrh.w	r3, [r3, #82]	@ 0x52
 8006770:	b29b      	uxth	r3, r3
 8006772:	2b00      	cmp	r3, #0
 8006774:	d1c9      	bne.n	800670a <HAL_UART_Transmit+0x72>
 8006776:	683b      	ldr	r3, [r7, #0]
 8006778:	9300      	str	r3, [sp, #0]
 800677a:	697b      	ldr	r3, [r7, #20]
 800677c:	2200      	movs	r2, #0
 800677e:	2140      	movs	r1, #64	@ 0x40
 8006780:	68f8      	ldr	r0, [r7, #12]
 8006782:	f000 fddd 	bl	8007340 <UART_WaitOnFlagUntilTimeout>
 8006786:	4603      	mov	r3, r0
 8006788:	2b00      	cmp	r3, #0
 800678a:	d004      	beq.n	8006796 <HAL_UART_Transmit+0xfe>
 800678c:	68fb      	ldr	r3, [r7, #12]
 800678e:	2220      	movs	r2, #32
 8006790:	67da      	str	r2, [r3, #124]	@ 0x7c
 8006792:	2303      	movs	r3, #3
 8006794:	e005      	b.n	80067a2 <HAL_UART_Transmit+0x10a>
 8006796:	68fb      	ldr	r3, [r7, #12]
 8006798:	2220      	movs	r2, #32
 800679a:	67da      	str	r2, [r3, #124]	@ 0x7c
 800679c:	2300      	movs	r3, #0
 800679e:	e000      	b.n	80067a2 <HAL_UART_Transmit+0x10a>
 80067a0:	2302      	movs	r3, #2
 80067a2:	4618      	mov	r0, r3
 80067a4:	3720      	adds	r7, #32
 80067a6:	46bd      	mov	sp, r7
 80067a8:	bd80      	pop	{r7, pc}

080067aa <HAL_UART_Receive_IT>:
 80067aa:	b580      	push	{r7, lr}
 80067ac:	b08a      	sub	sp, #40	@ 0x28
 80067ae:	af00      	add	r7, sp, #0
 80067b0:	60f8      	str	r0, [r7, #12]
 80067b2:	60b9      	str	r1, [r7, #8]
 80067b4:	4613      	mov	r3, r2
 80067b6:	80fb      	strh	r3, [r7, #6]
 80067b8:	68fb      	ldr	r3, [r7, #12]
 80067ba:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 80067be:	2b20      	cmp	r3, #32
 80067c0:	d132      	bne.n	8006828 <HAL_UART_Receive_IT+0x7e>
 80067c2:	68bb      	ldr	r3, [r7, #8]
 80067c4:	2b00      	cmp	r3, #0
 80067c6:	d002      	beq.n	80067ce <HAL_UART_Receive_IT+0x24>
 80067c8:	88fb      	ldrh	r3, [r7, #6]
 80067ca:	2b00      	cmp	r3, #0
 80067cc:	d101      	bne.n	80067d2 <HAL_UART_Receive_IT+0x28>
 80067ce:	2301      	movs	r3, #1
 80067d0:	e02b      	b.n	800682a <HAL_UART_Receive_IT+0x80>
 80067d2:	68fb      	ldr	r3, [r7, #12]
 80067d4:	2200      	movs	r2, #0
 80067d6:	661a      	str	r2, [r3, #96]	@ 0x60
 80067d8:	68fb      	ldr	r3, [r7, #12]
 80067da:	681b      	ldr	r3, [r3, #0]
 80067dc:	685b      	ldr	r3, [r3, #4]
 80067de:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 80067e2:	2b00      	cmp	r3, #0
 80067e4:	d018      	beq.n	8006818 <HAL_UART_Receive_IT+0x6e>
 80067e6:	68fb      	ldr	r3, [r7, #12]
 80067e8:	681b      	ldr	r3, [r3, #0]
 80067ea:	617b      	str	r3, [r7, #20]
 80067ec:	697b      	ldr	r3, [r7, #20]
 80067ee:	e853 3f00 	ldrex	r3, [r3]
 80067f2:	613b      	str	r3, [r7, #16]
 80067f4:	693b      	ldr	r3, [r7, #16]
 80067f6:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
 80067fa:	627b      	str	r3, [r7, #36]	@ 0x24
 80067fc:	68fb      	ldr	r3, [r7, #12]
 80067fe:	681b      	ldr	r3, [r3, #0]
 8006800:	461a      	mov	r2, r3
 8006802:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006804:	623b      	str	r3, [r7, #32]
 8006806:	61fa      	str	r2, [r7, #28]
 8006808:	69f9      	ldr	r1, [r7, #28]
 800680a:	6a3a      	ldr	r2, [r7, #32]
 800680c:	e841 2300 	strex	r3, r2, [r1]
 8006810:	61bb      	str	r3, [r7, #24]
 8006812:	69bb      	ldr	r3, [r7, #24]
 8006814:	2b00      	cmp	r3, #0
 8006816:	d1e6      	bne.n	80067e6 <HAL_UART_Receive_IT+0x3c>
 8006818:	88fb      	ldrh	r3, [r7, #6]
 800681a:	461a      	mov	r2, r3
 800681c:	68b9      	ldr	r1, [r7, #8]
 800681e:	68f8      	ldr	r0, [r7, #12]
 8006820:	f000 fdfc 	bl	800741c <UART_Start_Receive_IT>
 8006824:	4603      	mov	r3, r0
 8006826:	e000      	b.n	800682a <HAL_UART_Receive_IT+0x80>
 8006828:	2302      	movs	r3, #2
 800682a:	4618      	mov	r0, r3
 800682c:	3728      	adds	r7, #40	@ 0x28
 800682e:	46bd      	mov	sp, r7
 8006830:	bd80      	pop	{r7, pc}
	...

08006834 <HAL_UART_IRQHandler>:
 8006834:	b580      	push	{r7, lr}
 8006836:	b0ba      	sub	sp, #232	@ 0xe8
 8006838:	af00      	add	r7, sp, #0
 800683a:	6078      	str	r0, [r7, #4]
 800683c:	687b      	ldr	r3, [r7, #4]
 800683e:	681b      	ldr	r3, [r3, #0]
 8006840:	69db      	ldr	r3, [r3, #28]
 8006842:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 8006846:	687b      	ldr	r3, [r7, #4]
 8006848:	681b      	ldr	r3, [r3, #0]
 800684a:	681b      	ldr	r3, [r3, #0]
 800684c:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 8006850:	687b      	ldr	r3, [r7, #4]
 8006852:	681b      	ldr	r3, [r3, #0]
 8006854:	689b      	ldr	r3, [r3, #8]
 8006856:	f8c7 30dc 	str.w	r3, [r7, #220]	@ 0xdc
 800685a:	f8d7 20e4 	ldr.w	r2, [r7, #228]	@ 0xe4
 800685e:	f640 030f 	movw	r3, #2063	@ 0x80f
 8006862:	4013      	ands	r3, r2
 8006864:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 8006868:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 800686c:	2b00      	cmp	r3, #0
 800686e:	d115      	bne.n	800689c <HAL_UART_IRQHandler+0x68>
 8006870:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8006874:	f003 0320 	and.w	r3, r3, #32
 8006878:	2b00      	cmp	r3, #0
 800687a:	d00f      	beq.n	800689c <HAL_UART_IRQHandler+0x68>
 800687c:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8006880:	f003 0320 	and.w	r3, r3, #32
 8006884:	2b00      	cmp	r3, #0
 8006886:	d009      	beq.n	800689c <HAL_UART_IRQHandler+0x68>
 8006888:	687b      	ldr	r3, [r7, #4]
 800688a:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 800688c:	2b00      	cmp	r3, #0
 800688e:	f000 82ab 	beq.w	8006de8 <HAL_UART_IRQHandler+0x5b4>
 8006892:	687b      	ldr	r3, [r7, #4]
 8006894:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 8006896:	6878      	ldr	r0, [r7, #4]
 8006898:	4798      	blx	r3
 800689a:	e2a5      	b.n	8006de8 <HAL_UART_IRQHandler+0x5b4>
 800689c:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 80068a0:	2b00      	cmp	r3, #0
 80068a2:	f000 8117 	beq.w	8006ad4 <HAL_UART_IRQHandler+0x2a0>
 80068a6:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 80068aa:	f003 0301 	and.w	r3, r3, #1
 80068ae:	2b00      	cmp	r3, #0
 80068b0:	d106      	bne.n	80068c0 <HAL_UART_IRQHandler+0x8c>
 80068b2:	f8d7 20e0 	ldr.w	r2, [r7, #224]	@ 0xe0
 80068b6:	4b85      	ldr	r3, [pc, #532]	@ (8006acc <HAL_UART_IRQHandler+0x298>)
 80068b8:	4013      	ands	r3, r2
 80068ba:	2b00      	cmp	r3, #0
 80068bc:	f000 810a 	beq.w	8006ad4 <HAL_UART_IRQHandler+0x2a0>
 80068c0:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80068c4:	f003 0301 	and.w	r3, r3, #1
 80068c8:	2b00      	cmp	r3, #0
 80068ca:	d011      	beq.n	80068f0 <HAL_UART_IRQHandler+0xbc>
 80068cc:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 80068d0:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80068d4:	2b00      	cmp	r3, #0
 80068d6:	d00b      	beq.n	80068f0 <HAL_UART_IRQHandler+0xbc>
 80068d8:	687b      	ldr	r3, [r7, #4]
 80068da:	681b      	ldr	r3, [r3, #0]
 80068dc:	2201      	movs	r2, #1
 80068de:	621a      	str	r2, [r3, #32]
 80068e0:	687b      	ldr	r3, [r7, #4]
 80068e2:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 80068e6:	f043 0201 	orr.w	r2, r3, #1
 80068ea:	687b      	ldr	r3, [r7, #4]
 80068ec:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 80068f0:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80068f4:	f003 0302 	and.w	r3, r3, #2
 80068f8:	2b00      	cmp	r3, #0
 80068fa:	d011      	beq.n	8006920 <HAL_UART_IRQHandler+0xec>
 80068fc:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8006900:	f003 0301 	and.w	r3, r3, #1
 8006904:	2b00      	cmp	r3, #0
 8006906:	d00b      	beq.n	8006920 <HAL_UART_IRQHandler+0xec>
 8006908:	687b      	ldr	r3, [r7, #4]
 800690a:	681b      	ldr	r3, [r3, #0]
 800690c:	2202      	movs	r2, #2
 800690e:	621a      	str	r2, [r3, #32]
 8006910:	687b      	ldr	r3, [r7, #4]
 8006912:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8006916:	f043 0204 	orr.w	r2, r3, #4
 800691a:	687b      	ldr	r3, [r7, #4]
 800691c:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 8006920:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8006924:	f003 0304 	and.w	r3, r3, #4
 8006928:	2b00      	cmp	r3, #0
 800692a:	d011      	beq.n	8006950 <HAL_UART_IRQHandler+0x11c>
 800692c:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8006930:	f003 0301 	and.w	r3, r3, #1
 8006934:	2b00      	cmp	r3, #0
 8006936:	d00b      	beq.n	8006950 <HAL_UART_IRQHandler+0x11c>
 8006938:	687b      	ldr	r3, [r7, #4]
 800693a:	681b      	ldr	r3, [r3, #0]
 800693c:	2204      	movs	r2, #4
 800693e:	621a      	str	r2, [r3, #32]
 8006940:	687b      	ldr	r3, [r7, #4]
 8006942:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8006946:	f043 0202 	orr.w	r2, r3, #2
 800694a:	687b      	ldr	r3, [r7, #4]
 800694c:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 8006950:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8006954:	f003 0308 	and.w	r3, r3, #8
 8006958:	2b00      	cmp	r3, #0
 800695a:	d017      	beq.n	800698c <HAL_UART_IRQHandler+0x158>
 800695c:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8006960:	f003 0320 	and.w	r3, r3, #32
 8006964:	2b00      	cmp	r3, #0
 8006966:	d105      	bne.n	8006974 <HAL_UART_IRQHandler+0x140>
 8006968:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 800696c:	f003 0301 	and.w	r3, r3, #1
 8006970:	2b00      	cmp	r3, #0
 8006972:	d00b      	beq.n	800698c <HAL_UART_IRQHandler+0x158>
 8006974:	687b      	ldr	r3, [r7, #4]
 8006976:	681b      	ldr	r3, [r3, #0]
 8006978:	2208      	movs	r2, #8
 800697a:	621a      	str	r2, [r3, #32]
 800697c:	687b      	ldr	r3, [r7, #4]
 800697e:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8006982:	f043 0208 	orr.w	r2, r3, #8
 8006986:	687b      	ldr	r3, [r7, #4]
 8006988:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 800698c:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8006990:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 8006994:	2b00      	cmp	r3, #0
 8006996:	d012      	beq.n	80069be <HAL_UART_IRQHandler+0x18a>
 8006998:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 800699c:	f003 6380 	and.w	r3, r3, #67108864	@ 0x4000000
 80069a0:	2b00      	cmp	r3, #0
 80069a2:	d00c      	beq.n	80069be <HAL_UART_IRQHandler+0x18a>
 80069a4:	687b      	ldr	r3, [r7, #4]
 80069a6:	681b      	ldr	r3, [r3, #0]
 80069a8:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 80069ac:	621a      	str	r2, [r3, #32]
 80069ae:	687b      	ldr	r3, [r7, #4]
 80069b0:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 80069b4:	f043 0220 	orr.w	r2, r3, #32
 80069b8:	687b      	ldr	r3, [r7, #4]
 80069ba:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 80069be:	687b      	ldr	r3, [r7, #4]
 80069c0:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 80069c4:	2b00      	cmp	r3, #0
 80069c6:	f000 8211 	beq.w	8006dec <HAL_UART_IRQHandler+0x5b8>
 80069ca:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80069ce:	f003 0320 	and.w	r3, r3, #32
 80069d2:	2b00      	cmp	r3, #0
 80069d4:	d00d      	beq.n	80069f2 <HAL_UART_IRQHandler+0x1be>
 80069d6:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 80069da:	f003 0320 	and.w	r3, r3, #32
 80069de:	2b00      	cmp	r3, #0
 80069e0:	d007      	beq.n	80069f2 <HAL_UART_IRQHandler+0x1be>
 80069e2:	687b      	ldr	r3, [r7, #4]
 80069e4:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 80069e6:	2b00      	cmp	r3, #0
 80069e8:	d003      	beq.n	80069f2 <HAL_UART_IRQHandler+0x1be>
 80069ea:	687b      	ldr	r3, [r7, #4]
 80069ec:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 80069ee:	6878      	ldr	r0, [r7, #4]
 80069f0:	4798      	blx	r3
 80069f2:	687b      	ldr	r3, [r7, #4]
 80069f4:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 80069f8:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
 80069fc:	687b      	ldr	r3, [r7, #4]
 80069fe:	681b      	ldr	r3, [r3, #0]
 8006a00:	689b      	ldr	r3, [r3, #8]
 8006a02:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8006a06:	2b40      	cmp	r3, #64	@ 0x40
 8006a08:	d005      	beq.n	8006a16 <HAL_UART_IRQHandler+0x1e2>
 8006a0a:	f8d7 30d4 	ldr.w	r3, [r7, #212]	@ 0xd4
 8006a0e:	f003 0328 	and.w	r3, r3, #40	@ 0x28
 8006a12:	2b00      	cmp	r3, #0
 8006a14:	d04f      	beq.n	8006ab6 <HAL_UART_IRQHandler+0x282>
 8006a16:	6878      	ldr	r0, [r7, #4]
 8006a18:	f000 fdc6 	bl	80075a8 <UART_EndRxTransfer>
 8006a1c:	687b      	ldr	r3, [r7, #4]
 8006a1e:	681b      	ldr	r3, [r3, #0]
 8006a20:	689b      	ldr	r3, [r3, #8]
 8006a22:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8006a26:	2b40      	cmp	r3, #64	@ 0x40
 8006a28:	d141      	bne.n	8006aae <HAL_UART_IRQHandler+0x27a>
 8006a2a:	687b      	ldr	r3, [r7, #4]
 8006a2c:	681b      	ldr	r3, [r3, #0]
 8006a2e:	3308      	adds	r3, #8
 8006a30:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 8006a34:	f8d7 309c 	ldr.w	r3, [r7, #156]	@ 0x9c
 8006a38:	e853 3f00 	ldrex	r3, [r3]
 8006a3c:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 8006a40:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 8006a44:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8006a48:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 8006a4c:	687b      	ldr	r3, [r7, #4]
 8006a4e:	681b      	ldr	r3, [r3, #0]
 8006a50:	3308      	adds	r3, #8
 8006a52:	f8d7 20d0 	ldr.w	r2, [r7, #208]	@ 0xd0
 8006a56:	f8c7 20a8 	str.w	r2, [r7, #168]	@ 0xa8
 8006a5a:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
 8006a5e:	f8d7 10a4 	ldr.w	r1, [r7, #164]	@ 0xa4
 8006a62:	f8d7 20a8 	ldr.w	r2, [r7, #168]	@ 0xa8
 8006a66:	e841 2300 	strex	r3, r2, [r1]
 8006a6a:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 8006a6e:	f8d7 30a0 	ldr.w	r3, [r7, #160]	@ 0xa0
 8006a72:	2b00      	cmp	r3, #0
 8006a74:	d1d9      	bne.n	8006a2a <HAL_UART_IRQHandler+0x1f6>
 8006a76:	687b      	ldr	r3, [r7, #4]
 8006a78:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8006a7a:	2b00      	cmp	r3, #0
 8006a7c:	d013      	beq.n	8006aa6 <HAL_UART_IRQHandler+0x272>
 8006a7e:	687b      	ldr	r3, [r7, #4]
 8006a80:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8006a82:	4a13      	ldr	r2, [pc, #76]	@ (8006ad0 <HAL_UART_IRQHandler+0x29c>)
 8006a84:	635a      	str	r2, [r3, #52]	@ 0x34
 8006a86:	687b      	ldr	r3, [r7, #4]
 8006a88:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8006a8a:	4618      	mov	r0, r3
 8006a8c:	f7fc f8a1 	bl	8002bd2 <HAL_DMA_Abort_IT>
 8006a90:	4603      	mov	r3, r0
 8006a92:	2b00      	cmp	r3, #0
 8006a94:	d017      	beq.n	8006ac6 <HAL_UART_IRQHandler+0x292>
 8006a96:	687b      	ldr	r3, [r7, #4]
 8006a98:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8006a9a:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8006a9c:	687a      	ldr	r2, [r7, #4]
 8006a9e:	6f52      	ldr	r2, [r2, #116]	@ 0x74
 8006aa0:	4610      	mov	r0, r2
 8006aa2:	4798      	blx	r3
 8006aa4:	e00f      	b.n	8006ac6 <HAL_UART_IRQHandler+0x292>
 8006aa6:	6878      	ldr	r0, [r7, #4]
 8006aa8:	f000 f9b4 	bl	8006e14 <HAL_UART_ErrorCallback>
 8006aac:	e00b      	b.n	8006ac6 <HAL_UART_IRQHandler+0x292>
 8006aae:	6878      	ldr	r0, [r7, #4]
 8006ab0:	f000 f9b0 	bl	8006e14 <HAL_UART_ErrorCallback>
 8006ab4:	e007      	b.n	8006ac6 <HAL_UART_IRQHandler+0x292>
 8006ab6:	6878      	ldr	r0, [r7, #4]
 8006ab8:	f000 f9ac 	bl	8006e14 <HAL_UART_ErrorCallback>
 8006abc:	687b      	ldr	r3, [r7, #4]
 8006abe:	2200      	movs	r2, #0
 8006ac0:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 8006ac4:	e192      	b.n	8006dec <HAL_UART_IRQHandler+0x5b8>
 8006ac6:	bf00      	nop
 8006ac8:	e190      	b.n	8006dec <HAL_UART_IRQHandler+0x5b8>
 8006aca:	bf00      	nop
 8006acc:	04000120 	.word	0x04000120
 8006ad0:	08007671 	.word	0x08007671
 8006ad4:	687b      	ldr	r3, [r7, #4]
 8006ad6:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8006ad8:	2b01      	cmp	r3, #1
 8006ada:	f040 814b 	bne.w	8006d74 <HAL_UART_IRQHandler+0x540>
 8006ade:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8006ae2:	f003 0310 	and.w	r3, r3, #16
 8006ae6:	2b00      	cmp	r3, #0
 8006ae8:	f000 8144 	beq.w	8006d74 <HAL_UART_IRQHandler+0x540>
 8006aec:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8006af0:	f003 0310 	and.w	r3, r3, #16
 8006af4:	2b00      	cmp	r3, #0
 8006af6:	f000 813d 	beq.w	8006d74 <HAL_UART_IRQHandler+0x540>
 8006afa:	687b      	ldr	r3, [r7, #4]
 8006afc:	681b      	ldr	r3, [r3, #0]
 8006afe:	2210      	movs	r2, #16
 8006b00:	621a      	str	r2, [r3, #32]
 8006b02:	687b      	ldr	r3, [r7, #4]
 8006b04:	681b      	ldr	r3, [r3, #0]
 8006b06:	689b      	ldr	r3, [r3, #8]
 8006b08:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8006b0c:	2b40      	cmp	r3, #64	@ 0x40
 8006b0e:	f040 80b5 	bne.w	8006c7c <HAL_UART_IRQHandler+0x448>
 8006b12:	687b      	ldr	r3, [r7, #4]
 8006b14:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8006b16:	681b      	ldr	r3, [r3, #0]
 8006b18:	685b      	ldr	r3, [r3, #4]
 8006b1a:	f8a7 30be 	strh.w	r3, [r7, #190]	@ 0xbe
 8006b1e:	f8b7 30be 	ldrh.w	r3, [r7, #190]	@ 0xbe
 8006b22:	2b00      	cmp	r3, #0
 8006b24:	f000 8164 	beq.w	8006df0 <HAL_UART_IRQHandler+0x5bc>
 8006b28:	687b      	ldr	r3, [r7, #4]
 8006b2a:	f8b3 3058 	ldrh.w	r3, [r3, #88]	@ 0x58
 8006b2e:	f8b7 20be 	ldrh.w	r2, [r7, #190]	@ 0xbe
 8006b32:	429a      	cmp	r2, r3
 8006b34:	f080 815c 	bcs.w	8006df0 <HAL_UART_IRQHandler+0x5bc>
 8006b38:	687b      	ldr	r3, [r7, #4]
 8006b3a:	f8b7 20be 	ldrh.w	r2, [r7, #190]	@ 0xbe
 8006b3e:	f8a3 205a 	strh.w	r2, [r3, #90]	@ 0x5a
 8006b42:	687b      	ldr	r3, [r7, #4]
 8006b44:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8006b46:	699b      	ldr	r3, [r3, #24]
 8006b48:	2b20      	cmp	r3, #32
 8006b4a:	f000 8086 	beq.w	8006c5a <HAL_UART_IRQHandler+0x426>
 8006b4e:	687b      	ldr	r3, [r7, #4]
 8006b50:	681b      	ldr	r3, [r3, #0]
 8006b52:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 8006b56:	f8d7 3088 	ldr.w	r3, [r7, #136]	@ 0x88
 8006b5a:	e853 3f00 	ldrex	r3, [r3]
 8006b5e:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 8006b62:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 8006b66:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8006b6a:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 8006b6e:	687b      	ldr	r3, [r7, #4]
 8006b70:	681b      	ldr	r3, [r3, #0]
 8006b72:	461a      	mov	r2, r3
 8006b74:	f8d7 30b8 	ldr.w	r3, [r7, #184]	@ 0xb8
 8006b78:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 8006b7c:	f8c7 2090 	str.w	r2, [r7, #144]	@ 0x90
 8006b80:	f8d7 1090 	ldr.w	r1, [r7, #144]	@ 0x90
 8006b84:	f8d7 2094 	ldr.w	r2, [r7, #148]	@ 0x94
 8006b88:	e841 2300 	strex	r3, r2, [r1]
 8006b8c:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 8006b90:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 8006b94:	2b00      	cmp	r3, #0
 8006b96:	d1da      	bne.n	8006b4e <HAL_UART_IRQHandler+0x31a>
 8006b98:	687b      	ldr	r3, [r7, #4]
 8006b9a:	681b      	ldr	r3, [r3, #0]
 8006b9c:	3308      	adds	r3, #8
 8006b9e:	677b      	str	r3, [r7, #116]	@ 0x74
 8006ba0:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 8006ba2:	e853 3f00 	ldrex	r3, [r3]
 8006ba6:	673b      	str	r3, [r7, #112]	@ 0x70
 8006ba8:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 8006baa:	f023 0301 	bic.w	r3, r3, #1
 8006bae:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8006bb2:	687b      	ldr	r3, [r7, #4]
 8006bb4:	681b      	ldr	r3, [r3, #0]
 8006bb6:	3308      	adds	r3, #8
 8006bb8:	f8d7 20b4 	ldr.w	r2, [r7, #180]	@ 0xb4
 8006bbc:	f8c7 2080 	str.w	r2, [r7, #128]	@ 0x80
 8006bc0:	67fb      	str	r3, [r7, #124]	@ 0x7c
 8006bc2:	6ff9      	ldr	r1, [r7, #124]	@ 0x7c
 8006bc4:	f8d7 2080 	ldr.w	r2, [r7, #128]	@ 0x80
 8006bc8:	e841 2300 	strex	r3, r2, [r1]
 8006bcc:	67bb      	str	r3, [r7, #120]	@ 0x78
 8006bce:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 8006bd0:	2b00      	cmp	r3, #0
 8006bd2:	d1e1      	bne.n	8006b98 <HAL_UART_IRQHandler+0x364>
 8006bd4:	687b      	ldr	r3, [r7, #4]
 8006bd6:	681b      	ldr	r3, [r3, #0]
 8006bd8:	3308      	adds	r3, #8
 8006bda:	663b      	str	r3, [r7, #96]	@ 0x60
 8006bdc:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 8006bde:	e853 3f00 	ldrex	r3, [r3]
 8006be2:	65fb      	str	r3, [r7, #92]	@ 0x5c
 8006be4:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 8006be6:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8006bea:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 8006bee:	687b      	ldr	r3, [r7, #4]
 8006bf0:	681b      	ldr	r3, [r3, #0]
 8006bf2:	3308      	adds	r3, #8
 8006bf4:	f8d7 20b0 	ldr.w	r2, [r7, #176]	@ 0xb0
 8006bf8:	66fa      	str	r2, [r7, #108]	@ 0x6c
 8006bfa:	66bb      	str	r3, [r7, #104]	@ 0x68
 8006bfc:	6eb9      	ldr	r1, [r7, #104]	@ 0x68
 8006bfe:	6efa      	ldr	r2, [r7, #108]	@ 0x6c
 8006c00:	e841 2300 	strex	r3, r2, [r1]
 8006c04:	667b      	str	r3, [r7, #100]	@ 0x64
 8006c06:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8006c08:	2b00      	cmp	r3, #0
 8006c0a:	d1e3      	bne.n	8006bd4 <HAL_UART_IRQHandler+0x3a0>
 8006c0c:	687b      	ldr	r3, [r7, #4]
 8006c0e:	2220      	movs	r2, #32
 8006c10:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
 8006c14:	687b      	ldr	r3, [r7, #4]
 8006c16:	2200      	movs	r2, #0
 8006c18:	661a      	str	r2, [r3, #96]	@ 0x60
 8006c1a:	687b      	ldr	r3, [r7, #4]
 8006c1c:	681b      	ldr	r3, [r3, #0]
 8006c1e:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8006c20:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8006c22:	e853 3f00 	ldrex	r3, [r3]
 8006c26:	64bb      	str	r3, [r7, #72]	@ 0x48
 8006c28:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8006c2a:	f023 0310 	bic.w	r3, r3, #16
 8006c2e:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 8006c32:	687b      	ldr	r3, [r7, #4]
 8006c34:	681b      	ldr	r3, [r3, #0]
 8006c36:	461a      	mov	r2, r3
 8006c38:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 8006c3c:	65bb      	str	r3, [r7, #88]	@ 0x58
 8006c3e:	657a      	str	r2, [r7, #84]	@ 0x54
 8006c40:	6d79      	ldr	r1, [r7, #84]	@ 0x54
 8006c42:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 8006c44:	e841 2300 	strex	r3, r2, [r1]
 8006c48:	653b      	str	r3, [r7, #80]	@ 0x50
 8006c4a:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 8006c4c:	2b00      	cmp	r3, #0
 8006c4e:	d1e4      	bne.n	8006c1a <HAL_UART_IRQHandler+0x3e6>
 8006c50:	687b      	ldr	r3, [r7, #4]
 8006c52:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8006c54:	4618      	mov	r0, r3
 8006c56:	f7fb ff7e 	bl	8002b56 <HAL_DMA_Abort>
 8006c5a:	687b      	ldr	r3, [r7, #4]
 8006c5c:	2202      	movs	r2, #2
 8006c5e:	665a      	str	r2, [r3, #100]	@ 0x64
 8006c60:	687b      	ldr	r3, [r7, #4]
 8006c62:	f8b3 2058 	ldrh.w	r2, [r3, #88]	@ 0x58
 8006c66:	687b      	ldr	r3, [r7, #4]
 8006c68:	f8b3 305a 	ldrh.w	r3, [r3, #90]	@ 0x5a
 8006c6c:	b29b      	uxth	r3, r3
 8006c6e:	1ad3      	subs	r3, r2, r3
 8006c70:	b29b      	uxth	r3, r3
 8006c72:	4619      	mov	r1, r3
 8006c74:	6878      	ldr	r0, [r7, #4]
 8006c76:	f000 f8d7 	bl	8006e28 <HAL_UARTEx_RxEventCallback>
 8006c7a:	e0b9      	b.n	8006df0 <HAL_UART_IRQHandler+0x5bc>
 8006c7c:	687b      	ldr	r3, [r7, #4]
 8006c7e:	f8b3 2058 	ldrh.w	r2, [r3, #88]	@ 0x58
 8006c82:	687b      	ldr	r3, [r7, #4]
 8006c84:	f8b3 305a 	ldrh.w	r3, [r3, #90]	@ 0x5a
 8006c88:	b29b      	uxth	r3, r3
 8006c8a:	1ad3      	subs	r3, r2, r3
 8006c8c:	f8a7 30ce 	strh.w	r3, [r7, #206]	@ 0xce
 8006c90:	687b      	ldr	r3, [r7, #4]
 8006c92:	f8b3 305a 	ldrh.w	r3, [r3, #90]	@ 0x5a
 8006c96:	b29b      	uxth	r3, r3
 8006c98:	2b00      	cmp	r3, #0
 8006c9a:	f000 80ab 	beq.w	8006df4 <HAL_UART_IRQHandler+0x5c0>
 8006c9e:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	@ 0xce
 8006ca2:	2b00      	cmp	r3, #0
 8006ca4:	f000 80a6 	beq.w	8006df4 <HAL_UART_IRQHandler+0x5c0>
 8006ca8:	687b      	ldr	r3, [r7, #4]
 8006caa:	681b      	ldr	r3, [r3, #0]
 8006cac:	63bb      	str	r3, [r7, #56]	@ 0x38
 8006cae:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8006cb0:	e853 3f00 	ldrex	r3, [r3]
 8006cb4:	637b      	str	r3, [r7, #52]	@ 0x34
 8006cb6:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8006cb8:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 8006cbc:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 8006cc0:	687b      	ldr	r3, [r7, #4]
 8006cc2:	681b      	ldr	r3, [r3, #0]
 8006cc4:	461a      	mov	r2, r3
 8006cc6:	f8d7 30c8 	ldr.w	r3, [r7, #200]	@ 0xc8
 8006cca:	647b      	str	r3, [r7, #68]	@ 0x44
 8006ccc:	643a      	str	r2, [r7, #64]	@ 0x40
 8006cce:	6c39      	ldr	r1, [r7, #64]	@ 0x40
 8006cd0:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 8006cd2:	e841 2300 	strex	r3, r2, [r1]
 8006cd6:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8006cd8:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8006cda:	2b00      	cmp	r3, #0
 8006cdc:	d1e4      	bne.n	8006ca8 <HAL_UART_IRQHandler+0x474>
 8006cde:	687b      	ldr	r3, [r7, #4]
 8006ce0:	681b      	ldr	r3, [r3, #0]
 8006ce2:	3308      	adds	r3, #8
 8006ce4:	627b      	str	r3, [r7, #36]	@ 0x24
 8006ce6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006ce8:	e853 3f00 	ldrex	r3, [r3]
 8006cec:	623b      	str	r3, [r7, #32]
 8006cee:	6a3b      	ldr	r3, [r7, #32]
 8006cf0:	f023 0301 	bic.w	r3, r3, #1
 8006cf4:	f8c7 30c4 	str.w	r3, [r7, #196]	@ 0xc4
 8006cf8:	687b      	ldr	r3, [r7, #4]
 8006cfa:	681b      	ldr	r3, [r3, #0]
 8006cfc:	3308      	adds	r3, #8
 8006cfe:	f8d7 20c4 	ldr.w	r2, [r7, #196]	@ 0xc4
 8006d02:	633a      	str	r2, [r7, #48]	@ 0x30
 8006d04:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8006d06:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8006d08:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8006d0a:	e841 2300 	strex	r3, r2, [r1]
 8006d0e:	62bb      	str	r3, [r7, #40]	@ 0x28
 8006d10:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8006d12:	2b00      	cmp	r3, #0
 8006d14:	d1e3      	bne.n	8006cde <HAL_UART_IRQHandler+0x4aa>
 8006d16:	687b      	ldr	r3, [r7, #4]
 8006d18:	2220      	movs	r2, #32
 8006d1a:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
 8006d1e:	687b      	ldr	r3, [r7, #4]
 8006d20:	2200      	movs	r2, #0
 8006d22:	661a      	str	r2, [r3, #96]	@ 0x60
 8006d24:	687b      	ldr	r3, [r7, #4]
 8006d26:	2200      	movs	r2, #0
 8006d28:	669a      	str	r2, [r3, #104]	@ 0x68
 8006d2a:	687b      	ldr	r3, [r7, #4]
 8006d2c:	681b      	ldr	r3, [r3, #0]
 8006d2e:	613b      	str	r3, [r7, #16]
 8006d30:	693b      	ldr	r3, [r7, #16]
 8006d32:	e853 3f00 	ldrex	r3, [r3]
 8006d36:	60fb      	str	r3, [r7, #12]
 8006d38:	68fb      	ldr	r3, [r7, #12]
 8006d3a:	f023 0310 	bic.w	r3, r3, #16
 8006d3e:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 8006d42:	687b      	ldr	r3, [r7, #4]
 8006d44:	681b      	ldr	r3, [r3, #0]
 8006d46:	461a      	mov	r2, r3
 8006d48:	f8d7 30c0 	ldr.w	r3, [r7, #192]	@ 0xc0
 8006d4c:	61fb      	str	r3, [r7, #28]
 8006d4e:	61ba      	str	r2, [r7, #24]
 8006d50:	69b9      	ldr	r1, [r7, #24]
 8006d52:	69fa      	ldr	r2, [r7, #28]
 8006d54:	e841 2300 	strex	r3, r2, [r1]
 8006d58:	617b      	str	r3, [r7, #20]
 8006d5a:	697b      	ldr	r3, [r7, #20]
 8006d5c:	2b00      	cmp	r3, #0
 8006d5e:	d1e4      	bne.n	8006d2a <HAL_UART_IRQHandler+0x4f6>
 8006d60:	687b      	ldr	r3, [r7, #4]
 8006d62:	2202      	movs	r2, #2
 8006d64:	665a      	str	r2, [r3, #100]	@ 0x64
 8006d66:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	@ 0xce
 8006d6a:	4619      	mov	r1, r3
 8006d6c:	6878      	ldr	r0, [r7, #4]
 8006d6e:	f000 f85b 	bl	8006e28 <HAL_UARTEx_RxEventCallback>
 8006d72:	e03f      	b.n	8006df4 <HAL_UART_IRQHandler+0x5c0>
 8006d74:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8006d78:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 8006d7c:	2b00      	cmp	r3, #0
 8006d7e:	d00e      	beq.n	8006d9e <HAL_UART_IRQHandler+0x56a>
 8006d80:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8006d84:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8006d88:	2b00      	cmp	r3, #0
 8006d8a:	d008      	beq.n	8006d9e <HAL_UART_IRQHandler+0x56a>
 8006d8c:	687b      	ldr	r3, [r7, #4]
 8006d8e:	681b      	ldr	r3, [r3, #0]
 8006d90:	f44f 1280 	mov.w	r2, #1048576	@ 0x100000
 8006d94:	621a      	str	r2, [r3, #32]
 8006d96:	6878      	ldr	r0, [r7, #4]
 8006d98:	f000 fe52 	bl	8007a40 <HAL_UARTEx_WakeupCallback>
 8006d9c:	e02d      	b.n	8006dfa <HAL_UART_IRQHandler+0x5c6>
 8006d9e:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8006da2:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8006da6:	2b00      	cmp	r3, #0
 8006da8:	d00e      	beq.n	8006dc8 <HAL_UART_IRQHandler+0x594>
 8006daa:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8006dae:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8006db2:	2b00      	cmp	r3, #0
 8006db4:	d008      	beq.n	8006dc8 <HAL_UART_IRQHandler+0x594>
 8006db6:	687b      	ldr	r3, [r7, #4]
 8006db8:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8006dba:	2b00      	cmp	r3, #0
 8006dbc:	d01c      	beq.n	8006df8 <HAL_UART_IRQHandler+0x5c4>
 8006dbe:	687b      	ldr	r3, [r7, #4]
 8006dc0:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8006dc2:	6878      	ldr	r0, [r7, #4]
 8006dc4:	4798      	blx	r3
 8006dc6:	e017      	b.n	8006df8 <HAL_UART_IRQHandler+0x5c4>
 8006dc8:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8006dcc:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8006dd0:	2b00      	cmp	r3, #0
 8006dd2:	d012      	beq.n	8006dfa <HAL_UART_IRQHandler+0x5c6>
 8006dd4:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8006dd8:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8006ddc:	2b00      	cmp	r3, #0
 8006dde:	d00c      	beq.n	8006dfa <HAL_UART_IRQHandler+0x5c6>
 8006de0:	6878      	ldr	r0, [r7, #4]
 8006de2:	f000 fc5b 	bl	800769c <UART_EndTransmit_IT>
 8006de6:	e008      	b.n	8006dfa <HAL_UART_IRQHandler+0x5c6>
 8006de8:	bf00      	nop
 8006dea:	e006      	b.n	8006dfa <HAL_UART_IRQHandler+0x5c6>
 8006dec:	bf00      	nop
 8006dee:	e004      	b.n	8006dfa <HAL_UART_IRQHandler+0x5c6>
 8006df0:	bf00      	nop
 8006df2:	e002      	b.n	8006dfa <HAL_UART_IRQHandler+0x5c6>
 8006df4:	bf00      	nop
 8006df6:	e000      	b.n	8006dfa <HAL_UART_IRQHandler+0x5c6>
 8006df8:	bf00      	nop
 8006dfa:	37e8      	adds	r7, #232	@ 0xe8
 8006dfc:	46bd      	mov	sp, r7
 8006dfe:	bd80      	pop	{r7, pc}

08006e00 <HAL_UART_TxCpltCallback>:
 8006e00:	b480      	push	{r7}
 8006e02:	b083      	sub	sp, #12
 8006e04:	af00      	add	r7, sp, #0
 8006e06:	6078      	str	r0, [r7, #4]
 8006e08:	bf00      	nop
 8006e0a:	370c      	adds	r7, #12
 8006e0c:	46bd      	mov	sp, r7
 8006e0e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006e12:	4770      	bx	lr

08006e14 <HAL_UART_ErrorCallback>:
 8006e14:	b480      	push	{r7}
 8006e16:	b083      	sub	sp, #12
 8006e18:	af00      	add	r7, sp, #0
 8006e1a:	6078      	str	r0, [r7, #4]
 8006e1c:	bf00      	nop
 8006e1e:	370c      	adds	r7, #12
 8006e20:	46bd      	mov	sp, r7
 8006e22:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006e26:	4770      	bx	lr

08006e28 <HAL_UARTEx_RxEventCallback>:
 8006e28:	b480      	push	{r7}
 8006e2a:	b083      	sub	sp, #12
 8006e2c:	af00      	add	r7, sp, #0
 8006e2e:	6078      	str	r0, [r7, #4]
 8006e30:	460b      	mov	r3, r1
 8006e32:	807b      	strh	r3, [r7, #2]
 8006e34:	bf00      	nop
 8006e36:	370c      	adds	r7, #12
 8006e38:	46bd      	mov	sp, r7
 8006e3a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006e3e:	4770      	bx	lr

08006e40 <UART_SetConfig>:
 8006e40:	b580      	push	{r7, lr}
 8006e42:	b088      	sub	sp, #32
 8006e44:	af00      	add	r7, sp, #0
 8006e46:	6078      	str	r0, [r7, #4]
 8006e48:	2300      	movs	r3, #0
 8006e4a:	77bb      	strb	r3, [r7, #30]
 8006e4c:	687b      	ldr	r3, [r7, #4]
 8006e4e:	689a      	ldr	r2, [r3, #8]
 8006e50:	687b      	ldr	r3, [r7, #4]
 8006e52:	691b      	ldr	r3, [r3, #16]
 8006e54:	431a      	orrs	r2, r3
 8006e56:	687b      	ldr	r3, [r7, #4]
 8006e58:	695b      	ldr	r3, [r3, #20]
 8006e5a:	431a      	orrs	r2, r3
 8006e5c:	687b      	ldr	r3, [r7, #4]
 8006e5e:	69db      	ldr	r3, [r3, #28]
 8006e60:	4313      	orrs	r3, r2
 8006e62:	617b      	str	r3, [r7, #20]
 8006e64:	687b      	ldr	r3, [r7, #4]
 8006e66:	681b      	ldr	r3, [r3, #0]
 8006e68:	681a      	ldr	r2, [r3, #0]
 8006e6a:	4b8a      	ldr	r3, [pc, #552]	@ (8007094 <UART_SetConfig+0x254>)
 8006e6c:	4013      	ands	r3, r2
 8006e6e:	687a      	ldr	r2, [r7, #4]
 8006e70:	6812      	ldr	r2, [r2, #0]
 8006e72:	6979      	ldr	r1, [r7, #20]
 8006e74:	430b      	orrs	r3, r1
 8006e76:	6013      	str	r3, [r2, #0]
 8006e78:	687b      	ldr	r3, [r7, #4]
 8006e7a:	681b      	ldr	r3, [r3, #0]
 8006e7c:	685b      	ldr	r3, [r3, #4]
 8006e7e:	f423 5140 	bic.w	r1, r3, #12288	@ 0x3000
 8006e82:	687b      	ldr	r3, [r7, #4]
 8006e84:	68da      	ldr	r2, [r3, #12]
 8006e86:	687b      	ldr	r3, [r7, #4]
 8006e88:	681b      	ldr	r3, [r3, #0]
 8006e8a:	430a      	orrs	r2, r1
 8006e8c:	605a      	str	r2, [r3, #4]
 8006e8e:	687b      	ldr	r3, [r7, #4]
 8006e90:	699b      	ldr	r3, [r3, #24]
 8006e92:	617b      	str	r3, [r7, #20]
 8006e94:	687b      	ldr	r3, [r7, #4]
 8006e96:	6a1b      	ldr	r3, [r3, #32]
 8006e98:	697a      	ldr	r2, [r7, #20]
 8006e9a:	4313      	orrs	r3, r2
 8006e9c:	617b      	str	r3, [r7, #20]
 8006e9e:	687b      	ldr	r3, [r7, #4]
 8006ea0:	681b      	ldr	r3, [r3, #0]
 8006ea2:	689b      	ldr	r3, [r3, #8]
 8006ea4:	f423 6130 	bic.w	r1, r3, #2816	@ 0xb00
 8006ea8:	687b      	ldr	r3, [r7, #4]
 8006eaa:	681b      	ldr	r3, [r3, #0]
 8006eac:	697a      	ldr	r2, [r7, #20]
 8006eae:	430a      	orrs	r2, r1
 8006eb0:	609a      	str	r2, [r3, #8]
 8006eb2:	687b      	ldr	r3, [r7, #4]
 8006eb4:	681b      	ldr	r3, [r3, #0]
 8006eb6:	4a78      	ldr	r2, [pc, #480]	@ (8007098 <UART_SetConfig+0x258>)
 8006eb8:	4293      	cmp	r3, r2
 8006eba:	d120      	bne.n	8006efe <UART_SetConfig+0xbe>
 8006ebc:	4b77      	ldr	r3, [pc, #476]	@ (800709c <UART_SetConfig+0x25c>)
 8006ebe:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8006ec0:	f003 0303 	and.w	r3, r3, #3
 8006ec4:	2b03      	cmp	r3, #3
 8006ec6:	d817      	bhi.n	8006ef8 <UART_SetConfig+0xb8>
 8006ec8:	a201      	add	r2, pc, #4	@ (adr r2, 8006ed0 <UART_SetConfig+0x90>)
 8006eca:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8006ece:	bf00      	nop
 8006ed0:	08006ee1 	.word	0x08006ee1
 8006ed4:	08006eed 	.word	0x08006eed
 8006ed8:	08006ef3 	.word	0x08006ef3
 8006edc:	08006ee7 	.word	0x08006ee7
 8006ee0:	2300      	movs	r3, #0
 8006ee2:	77fb      	strb	r3, [r7, #31]
 8006ee4:	e01d      	b.n	8006f22 <UART_SetConfig+0xe2>
 8006ee6:	2302      	movs	r3, #2
 8006ee8:	77fb      	strb	r3, [r7, #31]
 8006eea:	e01a      	b.n	8006f22 <UART_SetConfig+0xe2>
 8006eec:	2304      	movs	r3, #4
 8006eee:	77fb      	strb	r3, [r7, #31]
 8006ef0:	e017      	b.n	8006f22 <UART_SetConfig+0xe2>
 8006ef2:	2308      	movs	r3, #8
 8006ef4:	77fb      	strb	r3, [r7, #31]
 8006ef6:	e014      	b.n	8006f22 <UART_SetConfig+0xe2>
 8006ef8:	2310      	movs	r3, #16
 8006efa:	77fb      	strb	r3, [r7, #31]
 8006efc:	e011      	b.n	8006f22 <UART_SetConfig+0xe2>
 8006efe:	687b      	ldr	r3, [r7, #4]
 8006f00:	681b      	ldr	r3, [r3, #0]
 8006f02:	4a67      	ldr	r2, [pc, #412]	@ (80070a0 <UART_SetConfig+0x260>)
 8006f04:	4293      	cmp	r3, r2
 8006f06:	d102      	bne.n	8006f0e <UART_SetConfig+0xce>
 8006f08:	2300      	movs	r3, #0
 8006f0a:	77fb      	strb	r3, [r7, #31]
 8006f0c:	e009      	b.n	8006f22 <UART_SetConfig+0xe2>
 8006f0e:	687b      	ldr	r3, [r7, #4]
 8006f10:	681b      	ldr	r3, [r3, #0]
 8006f12:	4a64      	ldr	r2, [pc, #400]	@ (80070a4 <UART_SetConfig+0x264>)
 8006f14:	4293      	cmp	r3, r2
 8006f16:	d102      	bne.n	8006f1e <UART_SetConfig+0xde>
 8006f18:	2300      	movs	r3, #0
 8006f1a:	77fb      	strb	r3, [r7, #31]
 8006f1c:	e001      	b.n	8006f22 <UART_SetConfig+0xe2>
 8006f1e:	2310      	movs	r3, #16
 8006f20:	77fb      	strb	r3, [r7, #31]
 8006f22:	687b      	ldr	r3, [r7, #4]
 8006f24:	69db      	ldr	r3, [r3, #28]
 8006f26:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8006f2a:	d15a      	bne.n	8006fe2 <UART_SetConfig+0x1a2>
 8006f2c:	7ffb      	ldrb	r3, [r7, #31]
 8006f2e:	2b08      	cmp	r3, #8
 8006f30:	d827      	bhi.n	8006f82 <UART_SetConfig+0x142>
 8006f32:	a201      	add	r2, pc, #4	@ (adr r2, 8006f38 <UART_SetConfig+0xf8>)
 8006f34:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8006f38:	08006f5d 	.word	0x08006f5d
 8006f3c:	08006f65 	.word	0x08006f65
 8006f40:	08006f6d 	.word	0x08006f6d
 8006f44:	08006f83 	.word	0x08006f83
 8006f48:	08006f73 	.word	0x08006f73
 8006f4c:	08006f83 	.word	0x08006f83
 8006f50:	08006f83 	.word	0x08006f83
 8006f54:	08006f83 	.word	0x08006f83
 8006f58:	08006f7b 	.word	0x08006f7b
 8006f5c:	f7fe f840 	bl	8004fe0 <HAL_RCC_GetPCLK1Freq>
 8006f60:	61b8      	str	r0, [r7, #24]
 8006f62:	e013      	b.n	8006f8c <UART_SetConfig+0x14c>
 8006f64:	f7fe f85e 	bl	8005024 <HAL_RCC_GetPCLK2Freq>
 8006f68:	61b8      	str	r0, [r7, #24]
 8006f6a:	e00f      	b.n	8006f8c <UART_SetConfig+0x14c>
 8006f6c:	4b4e      	ldr	r3, [pc, #312]	@ (80070a8 <UART_SetConfig+0x268>)
 8006f6e:	61bb      	str	r3, [r7, #24]
 8006f70:	e00c      	b.n	8006f8c <UART_SetConfig+0x14c>
 8006f72:	f7fd ffd5 	bl	8004f20 <HAL_RCC_GetSysClockFreq>
 8006f76:	61b8      	str	r0, [r7, #24]
 8006f78:	e008      	b.n	8006f8c <UART_SetConfig+0x14c>
 8006f7a:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8006f7e:	61bb      	str	r3, [r7, #24]
 8006f80:	e004      	b.n	8006f8c <UART_SetConfig+0x14c>
 8006f82:	2300      	movs	r3, #0
 8006f84:	61bb      	str	r3, [r7, #24]
 8006f86:	2301      	movs	r3, #1
 8006f88:	77bb      	strb	r3, [r7, #30]
 8006f8a:	bf00      	nop
 8006f8c:	69bb      	ldr	r3, [r7, #24]
 8006f8e:	2b00      	cmp	r3, #0
 8006f90:	d074      	beq.n	800707c <UART_SetConfig+0x23c>
 8006f92:	69bb      	ldr	r3, [r7, #24]
 8006f94:	005a      	lsls	r2, r3, #1
 8006f96:	687b      	ldr	r3, [r7, #4]
 8006f98:	685b      	ldr	r3, [r3, #4]
 8006f9a:	085b      	lsrs	r3, r3, #1
 8006f9c:	441a      	add	r2, r3
 8006f9e:	687b      	ldr	r3, [r7, #4]
 8006fa0:	685b      	ldr	r3, [r3, #4]
 8006fa2:	fbb2 f3f3 	udiv	r3, r2, r3
 8006fa6:	613b      	str	r3, [r7, #16]
 8006fa8:	693b      	ldr	r3, [r7, #16]
 8006faa:	2b0f      	cmp	r3, #15
 8006fac:	d916      	bls.n	8006fdc <UART_SetConfig+0x19c>
 8006fae:	693b      	ldr	r3, [r7, #16]
 8006fb0:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8006fb4:	d212      	bcs.n	8006fdc <UART_SetConfig+0x19c>
 8006fb6:	693b      	ldr	r3, [r7, #16]
 8006fb8:	b29b      	uxth	r3, r3
 8006fba:	f023 030f 	bic.w	r3, r3, #15
 8006fbe:	81fb      	strh	r3, [r7, #14]
 8006fc0:	693b      	ldr	r3, [r7, #16]
 8006fc2:	085b      	lsrs	r3, r3, #1
 8006fc4:	b29b      	uxth	r3, r3
 8006fc6:	f003 0307 	and.w	r3, r3, #7
 8006fca:	b29a      	uxth	r2, r3
 8006fcc:	89fb      	ldrh	r3, [r7, #14]
 8006fce:	4313      	orrs	r3, r2
 8006fd0:	81fb      	strh	r3, [r7, #14]
 8006fd2:	687b      	ldr	r3, [r7, #4]
 8006fd4:	681b      	ldr	r3, [r3, #0]
 8006fd6:	89fa      	ldrh	r2, [r7, #14]
 8006fd8:	60da      	str	r2, [r3, #12]
 8006fda:	e04f      	b.n	800707c <UART_SetConfig+0x23c>
 8006fdc:	2301      	movs	r3, #1
 8006fde:	77bb      	strb	r3, [r7, #30]
 8006fe0:	e04c      	b.n	800707c <UART_SetConfig+0x23c>
 8006fe2:	7ffb      	ldrb	r3, [r7, #31]
 8006fe4:	2b08      	cmp	r3, #8
 8006fe6:	d828      	bhi.n	800703a <UART_SetConfig+0x1fa>
 8006fe8:	a201      	add	r2, pc, #4	@ (adr r2, 8006ff0 <UART_SetConfig+0x1b0>)
 8006fea:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8006fee:	bf00      	nop
 8006ff0:	08007015 	.word	0x08007015
 8006ff4:	0800701d 	.word	0x0800701d
 8006ff8:	08007025 	.word	0x08007025
 8006ffc:	0800703b 	.word	0x0800703b
 8007000:	0800702b 	.word	0x0800702b
 8007004:	0800703b 	.word	0x0800703b
 8007008:	0800703b 	.word	0x0800703b
 800700c:	0800703b 	.word	0x0800703b
 8007010:	08007033 	.word	0x08007033
 8007014:	f7fd ffe4 	bl	8004fe0 <HAL_RCC_GetPCLK1Freq>
 8007018:	61b8      	str	r0, [r7, #24]
 800701a:	e013      	b.n	8007044 <UART_SetConfig+0x204>
 800701c:	f7fe f802 	bl	8005024 <HAL_RCC_GetPCLK2Freq>
 8007020:	61b8      	str	r0, [r7, #24]
 8007022:	e00f      	b.n	8007044 <UART_SetConfig+0x204>
 8007024:	4b20      	ldr	r3, [pc, #128]	@ (80070a8 <UART_SetConfig+0x268>)
 8007026:	61bb      	str	r3, [r7, #24]
 8007028:	e00c      	b.n	8007044 <UART_SetConfig+0x204>
 800702a:	f7fd ff79 	bl	8004f20 <HAL_RCC_GetSysClockFreq>
 800702e:	61b8      	str	r0, [r7, #24]
 8007030:	e008      	b.n	8007044 <UART_SetConfig+0x204>
 8007032:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8007036:	61bb      	str	r3, [r7, #24]
 8007038:	e004      	b.n	8007044 <UART_SetConfig+0x204>
 800703a:	2300      	movs	r3, #0
 800703c:	61bb      	str	r3, [r7, #24]
 800703e:	2301      	movs	r3, #1
 8007040:	77bb      	strb	r3, [r7, #30]
 8007042:	bf00      	nop
 8007044:	69bb      	ldr	r3, [r7, #24]
 8007046:	2b00      	cmp	r3, #0
 8007048:	d018      	beq.n	800707c <UART_SetConfig+0x23c>
 800704a:	687b      	ldr	r3, [r7, #4]
 800704c:	685b      	ldr	r3, [r3, #4]
 800704e:	085a      	lsrs	r2, r3, #1
 8007050:	69bb      	ldr	r3, [r7, #24]
 8007052:	441a      	add	r2, r3
 8007054:	687b      	ldr	r3, [r7, #4]
 8007056:	685b      	ldr	r3, [r3, #4]
 8007058:	fbb2 f3f3 	udiv	r3, r2, r3
 800705c:	613b      	str	r3, [r7, #16]
 800705e:	693b      	ldr	r3, [r7, #16]
 8007060:	2b0f      	cmp	r3, #15
 8007062:	d909      	bls.n	8007078 <UART_SetConfig+0x238>
 8007064:	693b      	ldr	r3, [r7, #16]
 8007066:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 800706a:	d205      	bcs.n	8007078 <UART_SetConfig+0x238>
 800706c:	693b      	ldr	r3, [r7, #16]
 800706e:	b29a      	uxth	r2, r3
 8007070:	687b      	ldr	r3, [r7, #4]
 8007072:	681b      	ldr	r3, [r3, #0]
 8007074:	60da      	str	r2, [r3, #12]
 8007076:	e001      	b.n	800707c <UART_SetConfig+0x23c>
 8007078:	2301      	movs	r3, #1
 800707a:	77bb      	strb	r3, [r7, #30]
 800707c:	687b      	ldr	r3, [r7, #4]
 800707e:	2200      	movs	r2, #0
 8007080:	669a      	str	r2, [r3, #104]	@ 0x68
 8007082:	687b      	ldr	r3, [r7, #4]
 8007084:	2200      	movs	r2, #0
 8007086:	66da      	str	r2, [r3, #108]	@ 0x6c
 8007088:	7fbb      	ldrb	r3, [r7, #30]
 800708a:	4618      	mov	r0, r3
 800708c:	3720      	adds	r7, #32
 800708e:	46bd      	mov	sp, r7
 8007090:	bd80      	pop	{r7, pc}
 8007092:	bf00      	nop
 8007094:	efff69f3 	.word	0xefff69f3
 8007098:	40013800 	.word	0x40013800
 800709c:	40021000 	.word	0x40021000
 80070a0:	40004400 	.word	0x40004400
 80070a4:	40004800 	.word	0x40004800
 80070a8:	007a1200 	.word	0x007a1200

080070ac <UART_AdvFeatureConfig>:
 80070ac:	b480      	push	{r7}
 80070ae:	b083      	sub	sp, #12
 80070b0:	af00      	add	r7, sp, #0
 80070b2:	6078      	str	r0, [r7, #4]
 80070b4:	687b      	ldr	r3, [r7, #4]
 80070b6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80070b8:	f003 0308 	and.w	r3, r3, #8
 80070bc:	2b00      	cmp	r3, #0
 80070be:	d00a      	beq.n	80070d6 <UART_AdvFeatureConfig+0x2a>
 80070c0:	687b      	ldr	r3, [r7, #4]
 80070c2:	681b      	ldr	r3, [r3, #0]
 80070c4:	685b      	ldr	r3, [r3, #4]
 80070c6:	f423 4100 	bic.w	r1, r3, #32768	@ 0x8000
 80070ca:	687b      	ldr	r3, [r7, #4]
 80070cc:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 80070ce:	687b      	ldr	r3, [r7, #4]
 80070d0:	681b      	ldr	r3, [r3, #0]
 80070d2:	430a      	orrs	r2, r1
 80070d4:	605a      	str	r2, [r3, #4]
 80070d6:	687b      	ldr	r3, [r7, #4]
 80070d8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80070da:	f003 0301 	and.w	r3, r3, #1
 80070de:	2b00      	cmp	r3, #0
 80070e0:	d00a      	beq.n	80070f8 <UART_AdvFeatureConfig+0x4c>
 80070e2:	687b      	ldr	r3, [r7, #4]
 80070e4:	681b      	ldr	r3, [r3, #0]
 80070e6:	685b      	ldr	r3, [r3, #4]
 80070e8:	f423 3100 	bic.w	r1, r3, #131072	@ 0x20000
 80070ec:	687b      	ldr	r3, [r7, #4]
 80070ee:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 80070f0:	687b      	ldr	r3, [r7, #4]
 80070f2:	681b      	ldr	r3, [r3, #0]
 80070f4:	430a      	orrs	r2, r1
 80070f6:	605a      	str	r2, [r3, #4]
 80070f8:	687b      	ldr	r3, [r7, #4]
 80070fa:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80070fc:	f003 0302 	and.w	r3, r3, #2
 8007100:	2b00      	cmp	r3, #0
 8007102:	d00a      	beq.n	800711a <UART_AdvFeatureConfig+0x6e>
 8007104:	687b      	ldr	r3, [r7, #4]
 8007106:	681b      	ldr	r3, [r3, #0]
 8007108:	685b      	ldr	r3, [r3, #4]
 800710a:	f423 3180 	bic.w	r1, r3, #65536	@ 0x10000
 800710e:	687b      	ldr	r3, [r7, #4]
 8007110:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8007112:	687b      	ldr	r3, [r7, #4]
 8007114:	681b      	ldr	r3, [r3, #0]
 8007116:	430a      	orrs	r2, r1
 8007118:	605a      	str	r2, [r3, #4]
 800711a:	687b      	ldr	r3, [r7, #4]
 800711c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800711e:	f003 0304 	and.w	r3, r3, #4
 8007122:	2b00      	cmp	r3, #0
 8007124:	d00a      	beq.n	800713c <UART_AdvFeatureConfig+0x90>
 8007126:	687b      	ldr	r3, [r7, #4]
 8007128:	681b      	ldr	r3, [r3, #0]
 800712a:	685b      	ldr	r3, [r3, #4]
 800712c:	f423 2180 	bic.w	r1, r3, #262144	@ 0x40000
 8007130:	687b      	ldr	r3, [r7, #4]
 8007132:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8007134:	687b      	ldr	r3, [r7, #4]
 8007136:	681b      	ldr	r3, [r3, #0]
 8007138:	430a      	orrs	r2, r1
 800713a:	605a      	str	r2, [r3, #4]
 800713c:	687b      	ldr	r3, [r7, #4]
 800713e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8007140:	f003 0310 	and.w	r3, r3, #16
 8007144:	2b00      	cmp	r3, #0
 8007146:	d00a      	beq.n	800715e <UART_AdvFeatureConfig+0xb2>
 8007148:	687b      	ldr	r3, [r7, #4]
 800714a:	681b      	ldr	r3, [r3, #0]
 800714c:	689b      	ldr	r3, [r3, #8]
 800714e:	f423 5180 	bic.w	r1, r3, #4096	@ 0x1000
 8007152:	687b      	ldr	r3, [r7, #4]
 8007154:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8007156:	687b      	ldr	r3, [r7, #4]
 8007158:	681b      	ldr	r3, [r3, #0]
 800715a:	430a      	orrs	r2, r1
 800715c:	609a      	str	r2, [r3, #8]
 800715e:	687b      	ldr	r3, [r7, #4]
 8007160:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8007162:	f003 0320 	and.w	r3, r3, #32
 8007166:	2b00      	cmp	r3, #0
 8007168:	d00a      	beq.n	8007180 <UART_AdvFeatureConfig+0xd4>
 800716a:	687b      	ldr	r3, [r7, #4]
 800716c:	681b      	ldr	r3, [r3, #0]
 800716e:	689b      	ldr	r3, [r3, #8]
 8007170:	f423 5100 	bic.w	r1, r3, #8192	@ 0x2000
 8007174:	687b      	ldr	r3, [r7, #4]
 8007176:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 8007178:	687b      	ldr	r3, [r7, #4]
 800717a:	681b      	ldr	r3, [r3, #0]
 800717c:	430a      	orrs	r2, r1
 800717e:	609a      	str	r2, [r3, #8]
 8007180:	687b      	ldr	r3, [r7, #4]
 8007182:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8007184:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8007188:	2b00      	cmp	r3, #0
 800718a:	d01a      	beq.n	80071c2 <UART_AdvFeatureConfig+0x116>
 800718c:	687b      	ldr	r3, [r7, #4]
 800718e:	681b      	ldr	r3, [r3, #0]
 8007190:	685b      	ldr	r3, [r3, #4]
 8007192:	f423 1180 	bic.w	r1, r3, #1048576	@ 0x100000
 8007196:	687b      	ldr	r3, [r7, #4]
 8007198:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 800719a:	687b      	ldr	r3, [r7, #4]
 800719c:	681b      	ldr	r3, [r3, #0]
 800719e:	430a      	orrs	r2, r1
 80071a0:	605a      	str	r2, [r3, #4]
 80071a2:	687b      	ldr	r3, [r7, #4]
 80071a4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80071a6:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 80071aa:	d10a      	bne.n	80071c2 <UART_AdvFeatureConfig+0x116>
 80071ac:	687b      	ldr	r3, [r7, #4]
 80071ae:	681b      	ldr	r3, [r3, #0]
 80071b0:	685b      	ldr	r3, [r3, #4]
 80071b2:	f423 01c0 	bic.w	r1, r3, #6291456	@ 0x600000
 80071b6:	687b      	ldr	r3, [r7, #4]
 80071b8:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 80071ba:	687b      	ldr	r3, [r7, #4]
 80071bc:	681b      	ldr	r3, [r3, #0]
 80071be:	430a      	orrs	r2, r1
 80071c0:	605a      	str	r2, [r3, #4]
 80071c2:	687b      	ldr	r3, [r7, #4]
 80071c4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80071c6:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80071ca:	2b00      	cmp	r3, #0
 80071cc:	d00a      	beq.n	80071e4 <UART_AdvFeatureConfig+0x138>
 80071ce:	687b      	ldr	r3, [r7, #4]
 80071d0:	681b      	ldr	r3, [r3, #0]
 80071d2:	685b      	ldr	r3, [r3, #4]
 80071d4:	f423 2100 	bic.w	r1, r3, #524288	@ 0x80000
 80071d8:	687b      	ldr	r3, [r7, #4]
 80071da:	6c9a      	ldr	r2, [r3, #72]	@ 0x48
 80071dc:	687b      	ldr	r3, [r7, #4]
 80071de:	681b      	ldr	r3, [r3, #0]
 80071e0:	430a      	orrs	r2, r1
 80071e2:	605a      	str	r2, [r3, #4]
 80071e4:	bf00      	nop
 80071e6:	370c      	adds	r7, #12
 80071e8:	46bd      	mov	sp, r7
 80071ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 80071ee:	4770      	bx	lr

080071f0 <UART_CheckIdleState>:
 80071f0:	b580      	push	{r7, lr}
 80071f2:	b098      	sub	sp, #96	@ 0x60
 80071f4:	af02      	add	r7, sp, #8
 80071f6:	6078      	str	r0, [r7, #4]
 80071f8:	687b      	ldr	r3, [r7, #4]
 80071fa:	2200      	movs	r2, #0
 80071fc:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 8007200:	f7fb fb68 	bl	80028d4 <HAL_GetTick>
 8007204:	6578      	str	r0, [r7, #84]	@ 0x54
 8007206:	687b      	ldr	r3, [r7, #4]
 8007208:	681b      	ldr	r3, [r3, #0]
 800720a:	681b      	ldr	r3, [r3, #0]
 800720c:	f003 0308 	and.w	r3, r3, #8
 8007210:	2b08      	cmp	r3, #8
 8007212:	d12e      	bne.n	8007272 <UART_CheckIdleState+0x82>
 8007214:	f06f 437e 	mvn.w	r3, #4261412864	@ 0xfe000000
 8007218:	9300      	str	r3, [sp, #0]
 800721a:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 800721c:	2200      	movs	r2, #0
 800721e:	f44f 1100 	mov.w	r1, #2097152	@ 0x200000
 8007222:	6878      	ldr	r0, [r7, #4]
 8007224:	f000 f88c 	bl	8007340 <UART_WaitOnFlagUntilTimeout>
 8007228:	4603      	mov	r3, r0
 800722a:	2b00      	cmp	r3, #0
 800722c:	d021      	beq.n	8007272 <UART_CheckIdleState+0x82>
 800722e:	687b      	ldr	r3, [r7, #4]
 8007230:	681b      	ldr	r3, [r3, #0]
 8007232:	63bb      	str	r3, [r7, #56]	@ 0x38
 8007234:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8007236:	e853 3f00 	ldrex	r3, [r3]
 800723a:	637b      	str	r3, [r7, #52]	@ 0x34
 800723c:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800723e:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8007242:	653b      	str	r3, [r7, #80]	@ 0x50
 8007244:	687b      	ldr	r3, [r7, #4]
 8007246:	681b      	ldr	r3, [r3, #0]
 8007248:	461a      	mov	r2, r3
 800724a:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 800724c:	647b      	str	r3, [r7, #68]	@ 0x44
 800724e:	643a      	str	r2, [r7, #64]	@ 0x40
 8007250:	6c39      	ldr	r1, [r7, #64]	@ 0x40
 8007252:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 8007254:	e841 2300 	strex	r3, r2, [r1]
 8007258:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800725a:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800725c:	2b00      	cmp	r3, #0
 800725e:	d1e6      	bne.n	800722e <UART_CheckIdleState+0x3e>
 8007260:	687b      	ldr	r3, [r7, #4]
 8007262:	2220      	movs	r2, #32
 8007264:	67da      	str	r2, [r3, #124]	@ 0x7c
 8007266:	687b      	ldr	r3, [r7, #4]
 8007268:	2200      	movs	r2, #0
 800726a:	f883 2078 	strb.w	r2, [r3, #120]	@ 0x78
 800726e:	2303      	movs	r3, #3
 8007270:	e062      	b.n	8007338 <UART_CheckIdleState+0x148>
 8007272:	687b      	ldr	r3, [r7, #4]
 8007274:	681b      	ldr	r3, [r3, #0]
 8007276:	681b      	ldr	r3, [r3, #0]
 8007278:	f003 0304 	and.w	r3, r3, #4
 800727c:	2b04      	cmp	r3, #4
 800727e:	d149      	bne.n	8007314 <UART_CheckIdleState+0x124>
 8007280:	f06f 437e 	mvn.w	r3, #4261412864	@ 0xfe000000
 8007284:	9300      	str	r3, [sp, #0]
 8007286:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8007288:	2200      	movs	r2, #0
 800728a:	f44f 0180 	mov.w	r1, #4194304	@ 0x400000
 800728e:	6878      	ldr	r0, [r7, #4]
 8007290:	f000 f856 	bl	8007340 <UART_WaitOnFlagUntilTimeout>
 8007294:	4603      	mov	r3, r0
 8007296:	2b00      	cmp	r3, #0
 8007298:	d03c      	beq.n	8007314 <UART_CheckIdleState+0x124>
 800729a:	687b      	ldr	r3, [r7, #4]
 800729c:	681b      	ldr	r3, [r3, #0]
 800729e:	627b      	str	r3, [r7, #36]	@ 0x24
 80072a0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80072a2:	e853 3f00 	ldrex	r3, [r3]
 80072a6:	623b      	str	r3, [r7, #32]
 80072a8:	6a3b      	ldr	r3, [r7, #32]
 80072aa:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 80072ae:	64fb      	str	r3, [r7, #76]	@ 0x4c
 80072b0:	687b      	ldr	r3, [r7, #4]
 80072b2:	681b      	ldr	r3, [r3, #0]
 80072b4:	461a      	mov	r2, r3
 80072b6:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 80072b8:	633b      	str	r3, [r7, #48]	@ 0x30
 80072ba:	62fa      	str	r2, [r7, #44]	@ 0x2c
 80072bc:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 80072be:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 80072c0:	e841 2300 	strex	r3, r2, [r1]
 80072c4:	62bb      	str	r3, [r7, #40]	@ 0x28
 80072c6:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80072c8:	2b00      	cmp	r3, #0
 80072ca:	d1e6      	bne.n	800729a <UART_CheckIdleState+0xaa>
 80072cc:	687b      	ldr	r3, [r7, #4]
 80072ce:	681b      	ldr	r3, [r3, #0]
 80072d0:	3308      	adds	r3, #8
 80072d2:	613b      	str	r3, [r7, #16]
 80072d4:	693b      	ldr	r3, [r7, #16]
 80072d6:	e853 3f00 	ldrex	r3, [r3]
 80072da:	60fb      	str	r3, [r7, #12]
 80072dc:	68fb      	ldr	r3, [r7, #12]
 80072de:	f023 0301 	bic.w	r3, r3, #1
 80072e2:	64bb      	str	r3, [r7, #72]	@ 0x48
 80072e4:	687b      	ldr	r3, [r7, #4]
 80072e6:	681b      	ldr	r3, [r3, #0]
 80072e8:	3308      	adds	r3, #8
 80072ea:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 80072ec:	61fa      	str	r2, [r7, #28]
 80072ee:	61bb      	str	r3, [r7, #24]
 80072f0:	69b9      	ldr	r1, [r7, #24]
 80072f2:	69fa      	ldr	r2, [r7, #28]
 80072f4:	e841 2300 	strex	r3, r2, [r1]
 80072f8:	617b      	str	r3, [r7, #20]
 80072fa:	697b      	ldr	r3, [r7, #20]
 80072fc:	2b00      	cmp	r3, #0
 80072fe:	d1e5      	bne.n	80072cc <UART_CheckIdleState+0xdc>
 8007300:	687b      	ldr	r3, [r7, #4]
 8007302:	2220      	movs	r2, #32
 8007304:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
 8007308:	687b      	ldr	r3, [r7, #4]
 800730a:	2200      	movs	r2, #0
 800730c:	f883 2078 	strb.w	r2, [r3, #120]	@ 0x78
 8007310:	2303      	movs	r3, #3
 8007312:	e011      	b.n	8007338 <UART_CheckIdleState+0x148>
 8007314:	687b      	ldr	r3, [r7, #4]
 8007316:	2220      	movs	r2, #32
 8007318:	67da      	str	r2, [r3, #124]	@ 0x7c
 800731a:	687b      	ldr	r3, [r7, #4]
 800731c:	2220      	movs	r2, #32
 800731e:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
 8007322:	687b      	ldr	r3, [r7, #4]
 8007324:	2200      	movs	r2, #0
 8007326:	661a      	str	r2, [r3, #96]	@ 0x60
 8007328:	687b      	ldr	r3, [r7, #4]
 800732a:	2200      	movs	r2, #0
 800732c:	665a      	str	r2, [r3, #100]	@ 0x64
 800732e:	687b      	ldr	r3, [r7, #4]
 8007330:	2200      	movs	r2, #0
 8007332:	f883 2078 	strb.w	r2, [r3, #120]	@ 0x78
 8007336:	2300      	movs	r3, #0
 8007338:	4618      	mov	r0, r3
 800733a:	3758      	adds	r7, #88	@ 0x58
 800733c:	46bd      	mov	sp, r7
 800733e:	bd80      	pop	{r7, pc}

08007340 <UART_WaitOnFlagUntilTimeout>:
 8007340:	b580      	push	{r7, lr}
 8007342:	b084      	sub	sp, #16
 8007344:	af00      	add	r7, sp, #0
 8007346:	60f8      	str	r0, [r7, #12]
 8007348:	60b9      	str	r1, [r7, #8]
 800734a:	603b      	str	r3, [r7, #0]
 800734c:	4613      	mov	r3, r2
 800734e:	71fb      	strb	r3, [r7, #7]
 8007350:	e04f      	b.n	80073f2 <UART_WaitOnFlagUntilTimeout+0xb2>
 8007352:	69bb      	ldr	r3, [r7, #24]
 8007354:	f1b3 3fff 	cmp.w	r3, #4294967295
 8007358:	d04b      	beq.n	80073f2 <UART_WaitOnFlagUntilTimeout+0xb2>
 800735a:	f7fb fabb 	bl	80028d4 <HAL_GetTick>
 800735e:	4602      	mov	r2, r0
 8007360:	683b      	ldr	r3, [r7, #0]
 8007362:	1ad3      	subs	r3, r2, r3
 8007364:	69ba      	ldr	r2, [r7, #24]
 8007366:	429a      	cmp	r2, r3
 8007368:	d302      	bcc.n	8007370 <UART_WaitOnFlagUntilTimeout+0x30>
 800736a:	69bb      	ldr	r3, [r7, #24]
 800736c:	2b00      	cmp	r3, #0
 800736e:	d101      	bne.n	8007374 <UART_WaitOnFlagUntilTimeout+0x34>
 8007370:	2303      	movs	r3, #3
 8007372:	e04e      	b.n	8007412 <UART_WaitOnFlagUntilTimeout+0xd2>
 8007374:	68fb      	ldr	r3, [r7, #12]
 8007376:	681b      	ldr	r3, [r3, #0]
 8007378:	681b      	ldr	r3, [r3, #0]
 800737a:	f003 0304 	and.w	r3, r3, #4
 800737e:	2b00      	cmp	r3, #0
 8007380:	d037      	beq.n	80073f2 <UART_WaitOnFlagUntilTimeout+0xb2>
 8007382:	68bb      	ldr	r3, [r7, #8]
 8007384:	2b80      	cmp	r3, #128	@ 0x80
 8007386:	d034      	beq.n	80073f2 <UART_WaitOnFlagUntilTimeout+0xb2>
 8007388:	68bb      	ldr	r3, [r7, #8]
 800738a:	2b40      	cmp	r3, #64	@ 0x40
 800738c:	d031      	beq.n	80073f2 <UART_WaitOnFlagUntilTimeout+0xb2>
 800738e:	68fb      	ldr	r3, [r7, #12]
 8007390:	681b      	ldr	r3, [r3, #0]
 8007392:	69db      	ldr	r3, [r3, #28]
 8007394:	f003 0308 	and.w	r3, r3, #8
 8007398:	2b08      	cmp	r3, #8
 800739a:	d110      	bne.n	80073be <UART_WaitOnFlagUntilTimeout+0x7e>
 800739c:	68fb      	ldr	r3, [r7, #12]
 800739e:	681b      	ldr	r3, [r3, #0]
 80073a0:	2208      	movs	r2, #8
 80073a2:	621a      	str	r2, [r3, #32]
 80073a4:	68f8      	ldr	r0, [r7, #12]
 80073a6:	f000 f8ff 	bl	80075a8 <UART_EndRxTransfer>
 80073aa:	68fb      	ldr	r3, [r7, #12]
 80073ac:	2208      	movs	r2, #8
 80073ae:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 80073b2:	68fb      	ldr	r3, [r7, #12]
 80073b4:	2200      	movs	r2, #0
 80073b6:	f883 2078 	strb.w	r2, [r3, #120]	@ 0x78
 80073ba:	2301      	movs	r3, #1
 80073bc:	e029      	b.n	8007412 <UART_WaitOnFlagUntilTimeout+0xd2>
 80073be:	68fb      	ldr	r3, [r7, #12]
 80073c0:	681b      	ldr	r3, [r3, #0]
 80073c2:	69db      	ldr	r3, [r3, #28]
 80073c4:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 80073c8:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 80073cc:	d111      	bne.n	80073f2 <UART_WaitOnFlagUntilTimeout+0xb2>
 80073ce:	68fb      	ldr	r3, [r7, #12]
 80073d0:	681b      	ldr	r3, [r3, #0]
 80073d2:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 80073d6:	621a      	str	r2, [r3, #32]
 80073d8:	68f8      	ldr	r0, [r7, #12]
 80073da:	f000 f8e5 	bl	80075a8 <UART_EndRxTransfer>
 80073de:	68fb      	ldr	r3, [r7, #12]
 80073e0:	2220      	movs	r2, #32
 80073e2:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 80073e6:	68fb      	ldr	r3, [r7, #12]
 80073e8:	2200      	movs	r2, #0
 80073ea:	f883 2078 	strb.w	r2, [r3, #120]	@ 0x78
 80073ee:	2303      	movs	r3, #3
 80073f0:	e00f      	b.n	8007412 <UART_WaitOnFlagUntilTimeout+0xd2>
 80073f2:	68fb      	ldr	r3, [r7, #12]
 80073f4:	681b      	ldr	r3, [r3, #0]
 80073f6:	69da      	ldr	r2, [r3, #28]
 80073f8:	68bb      	ldr	r3, [r7, #8]
 80073fa:	4013      	ands	r3, r2
 80073fc:	68ba      	ldr	r2, [r7, #8]
 80073fe:	429a      	cmp	r2, r3
 8007400:	bf0c      	ite	eq
 8007402:	2301      	moveq	r3, #1
 8007404:	2300      	movne	r3, #0
 8007406:	b2db      	uxtb	r3, r3
 8007408:	461a      	mov	r2, r3
 800740a:	79fb      	ldrb	r3, [r7, #7]
 800740c:	429a      	cmp	r2, r3
 800740e:	d0a0      	beq.n	8007352 <UART_WaitOnFlagUntilTimeout+0x12>
 8007410:	2300      	movs	r3, #0
 8007412:	4618      	mov	r0, r3
 8007414:	3710      	adds	r7, #16
 8007416:	46bd      	mov	sp, r7
 8007418:	bd80      	pop	{r7, pc}
	...

0800741c <UART_Start_Receive_IT>:
 800741c:	b480      	push	{r7}
 800741e:	b097      	sub	sp, #92	@ 0x5c
 8007420:	af00      	add	r7, sp, #0
 8007422:	60f8      	str	r0, [r7, #12]
 8007424:	60b9      	str	r1, [r7, #8]
 8007426:	4613      	mov	r3, r2
 8007428:	80fb      	strh	r3, [r7, #6]
 800742a:	68fb      	ldr	r3, [r7, #12]
 800742c:	68ba      	ldr	r2, [r7, #8]
 800742e:	655a      	str	r2, [r3, #84]	@ 0x54
 8007430:	68fb      	ldr	r3, [r7, #12]
 8007432:	88fa      	ldrh	r2, [r7, #6]
 8007434:	f8a3 2058 	strh.w	r2, [r3, #88]	@ 0x58
 8007438:	68fb      	ldr	r3, [r7, #12]
 800743a:	88fa      	ldrh	r2, [r7, #6]
 800743c:	f8a3 205a 	strh.w	r2, [r3, #90]	@ 0x5a
 8007440:	68fb      	ldr	r3, [r7, #12]
 8007442:	2200      	movs	r2, #0
 8007444:	669a      	str	r2, [r3, #104]	@ 0x68
 8007446:	68fb      	ldr	r3, [r7, #12]
 8007448:	689b      	ldr	r3, [r3, #8]
 800744a:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 800744e:	d10e      	bne.n	800746e <UART_Start_Receive_IT+0x52>
 8007450:	68fb      	ldr	r3, [r7, #12]
 8007452:	691b      	ldr	r3, [r3, #16]
 8007454:	2b00      	cmp	r3, #0
 8007456:	d105      	bne.n	8007464 <UART_Start_Receive_IT+0x48>
 8007458:	68fb      	ldr	r3, [r7, #12]
 800745a:	f240 12ff 	movw	r2, #511	@ 0x1ff
 800745e:	f8a3 205c 	strh.w	r2, [r3, #92]	@ 0x5c
 8007462:	e02d      	b.n	80074c0 <UART_Start_Receive_IT+0xa4>
 8007464:	68fb      	ldr	r3, [r7, #12]
 8007466:	22ff      	movs	r2, #255	@ 0xff
 8007468:	f8a3 205c 	strh.w	r2, [r3, #92]	@ 0x5c
 800746c:	e028      	b.n	80074c0 <UART_Start_Receive_IT+0xa4>
 800746e:	68fb      	ldr	r3, [r7, #12]
 8007470:	689b      	ldr	r3, [r3, #8]
 8007472:	2b00      	cmp	r3, #0
 8007474:	d10d      	bne.n	8007492 <UART_Start_Receive_IT+0x76>
 8007476:	68fb      	ldr	r3, [r7, #12]
 8007478:	691b      	ldr	r3, [r3, #16]
 800747a:	2b00      	cmp	r3, #0
 800747c:	d104      	bne.n	8007488 <UART_Start_Receive_IT+0x6c>
 800747e:	68fb      	ldr	r3, [r7, #12]
 8007480:	22ff      	movs	r2, #255	@ 0xff
 8007482:	f8a3 205c 	strh.w	r2, [r3, #92]	@ 0x5c
 8007486:	e01b      	b.n	80074c0 <UART_Start_Receive_IT+0xa4>
 8007488:	68fb      	ldr	r3, [r7, #12]
 800748a:	227f      	movs	r2, #127	@ 0x7f
 800748c:	f8a3 205c 	strh.w	r2, [r3, #92]	@ 0x5c
 8007490:	e016      	b.n	80074c0 <UART_Start_Receive_IT+0xa4>
 8007492:	68fb      	ldr	r3, [r7, #12]
 8007494:	689b      	ldr	r3, [r3, #8]
 8007496:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 800749a:	d10d      	bne.n	80074b8 <UART_Start_Receive_IT+0x9c>
 800749c:	68fb      	ldr	r3, [r7, #12]
 800749e:	691b      	ldr	r3, [r3, #16]
 80074a0:	2b00      	cmp	r3, #0
 80074a2:	d104      	bne.n	80074ae <UART_Start_Receive_IT+0x92>
 80074a4:	68fb      	ldr	r3, [r7, #12]
 80074a6:	227f      	movs	r2, #127	@ 0x7f
 80074a8:	f8a3 205c 	strh.w	r2, [r3, #92]	@ 0x5c
 80074ac:	e008      	b.n	80074c0 <UART_Start_Receive_IT+0xa4>
 80074ae:	68fb      	ldr	r3, [r7, #12]
 80074b0:	223f      	movs	r2, #63	@ 0x3f
 80074b2:	f8a3 205c 	strh.w	r2, [r3, #92]	@ 0x5c
 80074b6:	e003      	b.n	80074c0 <UART_Start_Receive_IT+0xa4>
 80074b8:	68fb      	ldr	r3, [r7, #12]
 80074ba:	2200      	movs	r2, #0
 80074bc:	f8a3 205c 	strh.w	r2, [r3, #92]	@ 0x5c
 80074c0:	68fb      	ldr	r3, [r7, #12]
 80074c2:	2200      	movs	r2, #0
 80074c4:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 80074c8:	68fb      	ldr	r3, [r7, #12]
 80074ca:	2222      	movs	r2, #34	@ 0x22
 80074cc:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
 80074d0:	68fb      	ldr	r3, [r7, #12]
 80074d2:	681b      	ldr	r3, [r3, #0]
 80074d4:	3308      	adds	r3, #8
 80074d6:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80074d8:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 80074da:	e853 3f00 	ldrex	r3, [r3]
 80074de:	63bb      	str	r3, [r7, #56]	@ 0x38
 80074e0:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80074e2:	f043 0301 	orr.w	r3, r3, #1
 80074e6:	657b      	str	r3, [r7, #84]	@ 0x54
 80074e8:	68fb      	ldr	r3, [r7, #12]
 80074ea:	681b      	ldr	r3, [r3, #0]
 80074ec:	3308      	adds	r3, #8
 80074ee:	6d7a      	ldr	r2, [r7, #84]	@ 0x54
 80074f0:	64ba      	str	r2, [r7, #72]	@ 0x48
 80074f2:	647b      	str	r3, [r7, #68]	@ 0x44
 80074f4:	6c79      	ldr	r1, [r7, #68]	@ 0x44
 80074f6:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 80074f8:	e841 2300 	strex	r3, r2, [r1]
 80074fc:	643b      	str	r3, [r7, #64]	@ 0x40
 80074fe:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 8007500:	2b00      	cmp	r3, #0
 8007502:	d1e5      	bne.n	80074d0 <UART_Start_Receive_IT+0xb4>
 8007504:	68fb      	ldr	r3, [r7, #12]
 8007506:	689b      	ldr	r3, [r3, #8]
 8007508:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 800750c:	d107      	bne.n	800751e <UART_Start_Receive_IT+0x102>
 800750e:	68fb      	ldr	r3, [r7, #12]
 8007510:	691b      	ldr	r3, [r3, #16]
 8007512:	2b00      	cmp	r3, #0
 8007514:	d103      	bne.n	800751e <UART_Start_Receive_IT+0x102>
 8007516:	68fb      	ldr	r3, [r7, #12]
 8007518:	4a21      	ldr	r2, [pc, #132]	@ (80075a0 <UART_Start_Receive_IT+0x184>)
 800751a:	669a      	str	r2, [r3, #104]	@ 0x68
 800751c:	e002      	b.n	8007524 <UART_Start_Receive_IT+0x108>
 800751e:	68fb      	ldr	r3, [r7, #12]
 8007520:	4a20      	ldr	r2, [pc, #128]	@ (80075a4 <UART_Start_Receive_IT+0x188>)
 8007522:	669a      	str	r2, [r3, #104]	@ 0x68
 8007524:	68fb      	ldr	r3, [r7, #12]
 8007526:	691b      	ldr	r3, [r3, #16]
 8007528:	2b00      	cmp	r3, #0
 800752a:	d019      	beq.n	8007560 <UART_Start_Receive_IT+0x144>
 800752c:	68fb      	ldr	r3, [r7, #12]
 800752e:	681b      	ldr	r3, [r3, #0]
 8007530:	62bb      	str	r3, [r7, #40]	@ 0x28
 8007532:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8007534:	e853 3f00 	ldrex	r3, [r3]
 8007538:	627b      	str	r3, [r7, #36]	@ 0x24
 800753a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800753c:	f443 7390 	orr.w	r3, r3, #288	@ 0x120
 8007540:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8007542:	68fb      	ldr	r3, [r7, #12]
 8007544:	681b      	ldr	r3, [r3, #0]
 8007546:	461a      	mov	r2, r3
 8007548:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 800754a:	637b      	str	r3, [r7, #52]	@ 0x34
 800754c:	633a      	str	r2, [r7, #48]	@ 0x30
 800754e:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 8007550:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 8007552:	e841 2300 	strex	r3, r2, [r1]
 8007556:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8007558:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800755a:	2b00      	cmp	r3, #0
 800755c:	d1e6      	bne.n	800752c <UART_Start_Receive_IT+0x110>
 800755e:	e018      	b.n	8007592 <UART_Start_Receive_IT+0x176>
 8007560:	68fb      	ldr	r3, [r7, #12]
 8007562:	681b      	ldr	r3, [r3, #0]
 8007564:	617b      	str	r3, [r7, #20]
 8007566:	697b      	ldr	r3, [r7, #20]
 8007568:	e853 3f00 	ldrex	r3, [r3]
 800756c:	613b      	str	r3, [r7, #16]
 800756e:	693b      	ldr	r3, [r7, #16]
 8007570:	f043 0320 	orr.w	r3, r3, #32
 8007574:	653b      	str	r3, [r7, #80]	@ 0x50
 8007576:	68fb      	ldr	r3, [r7, #12]
 8007578:	681b      	ldr	r3, [r3, #0]
 800757a:	461a      	mov	r2, r3
 800757c:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 800757e:	623b      	str	r3, [r7, #32]
 8007580:	61fa      	str	r2, [r7, #28]
 8007582:	69f9      	ldr	r1, [r7, #28]
 8007584:	6a3a      	ldr	r2, [r7, #32]
 8007586:	e841 2300 	strex	r3, r2, [r1]
 800758a:	61bb      	str	r3, [r7, #24]
 800758c:	69bb      	ldr	r3, [r7, #24]
 800758e:	2b00      	cmp	r3, #0
 8007590:	d1e6      	bne.n	8007560 <UART_Start_Receive_IT+0x144>
 8007592:	2300      	movs	r3, #0
 8007594:	4618      	mov	r0, r3
 8007596:	375c      	adds	r7, #92	@ 0x5c
 8007598:	46bd      	mov	sp, r7
 800759a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800759e:	4770      	bx	lr
 80075a0:	08007899 	.word	0x08007899
 80075a4:	080076f1 	.word	0x080076f1

080075a8 <UART_EndRxTransfer>:
 80075a8:	b480      	push	{r7}
 80075aa:	b095      	sub	sp, #84	@ 0x54
 80075ac:	af00      	add	r7, sp, #0
 80075ae:	6078      	str	r0, [r7, #4]
 80075b0:	687b      	ldr	r3, [r7, #4]
 80075b2:	681b      	ldr	r3, [r3, #0]
 80075b4:	637b      	str	r3, [r7, #52]	@ 0x34
 80075b6:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80075b8:	e853 3f00 	ldrex	r3, [r3]
 80075bc:	633b      	str	r3, [r7, #48]	@ 0x30
 80075be:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80075c0:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 80075c4:	64fb      	str	r3, [r7, #76]	@ 0x4c
 80075c6:	687b      	ldr	r3, [r7, #4]
 80075c8:	681b      	ldr	r3, [r3, #0]
 80075ca:	461a      	mov	r2, r3
 80075cc:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 80075ce:	643b      	str	r3, [r7, #64]	@ 0x40
 80075d0:	63fa      	str	r2, [r7, #60]	@ 0x3c
 80075d2:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
 80075d4:	6c3a      	ldr	r2, [r7, #64]	@ 0x40
 80075d6:	e841 2300 	strex	r3, r2, [r1]
 80075da:	63bb      	str	r3, [r7, #56]	@ 0x38
 80075dc:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80075de:	2b00      	cmp	r3, #0
 80075e0:	d1e6      	bne.n	80075b0 <UART_EndRxTransfer+0x8>
 80075e2:	687b      	ldr	r3, [r7, #4]
 80075e4:	681b      	ldr	r3, [r3, #0]
 80075e6:	3308      	adds	r3, #8
 80075e8:	623b      	str	r3, [r7, #32]
 80075ea:	6a3b      	ldr	r3, [r7, #32]
 80075ec:	e853 3f00 	ldrex	r3, [r3]
 80075f0:	61fb      	str	r3, [r7, #28]
 80075f2:	69fb      	ldr	r3, [r7, #28]
 80075f4:	f023 0301 	bic.w	r3, r3, #1
 80075f8:	64bb      	str	r3, [r7, #72]	@ 0x48
 80075fa:	687b      	ldr	r3, [r7, #4]
 80075fc:	681b      	ldr	r3, [r3, #0]
 80075fe:	3308      	adds	r3, #8
 8007600:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 8007602:	62fa      	str	r2, [r7, #44]	@ 0x2c
 8007604:	62bb      	str	r3, [r7, #40]	@ 0x28
 8007606:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 8007608:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 800760a:	e841 2300 	strex	r3, r2, [r1]
 800760e:	627b      	str	r3, [r7, #36]	@ 0x24
 8007610:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8007612:	2b00      	cmp	r3, #0
 8007614:	d1e5      	bne.n	80075e2 <UART_EndRxTransfer+0x3a>
 8007616:	687b      	ldr	r3, [r7, #4]
 8007618:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800761a:	2b01      	cmp	r3, #1
 800761c:	d118      	bne.n	8007650 <UART_EndRxTransfer+0xa8>
 800761e:	687b      	ldr	r3, [r7, #4]
 8007620:	681b      	ldr	r3, [r3, #0]
 8007622:	60fb      	str	r3, [r7, #12]
 8007624:	68fb      	ldr	r3, [r7, #12]
 8007626:	e853 3f00 	ldrex	r3, [r3]
 800762a:	60bb      	str	r3, [r7, #8]
 800762c:	68bb      	ldr	r3, [r7, #8]
 800762e:	f023 0310 	bic.w	r3, r3, #16
 8007632:	647b      	str	r3, [r7, #68]	@ 0x44
 8007634:	687b      	ldr	r3, [r7, #4]
 8007636:	681b      	ldr	r3, [r3, #0]
 8007638:	461a      	mov	r2, r3
 800763a:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 800763c:	61bb      	str	r3, [r7, #24]
 800763e:	617a      	str	r2, [r7, #20]
 8007640:	6979      	ldr	r1, [r7, #20]
 8007642:	69ba      	ldr	r2, [r7, #24]
 8007644:	e841 2300 	strex	r3, r2, [r1]
 8007648:	613b      	str	r3, [r7, #16]
 800764a:	693b      	ldr	r3, [r7, #16]
 800764c:	2b00      	cmp	r3, #0
 800764e:	d1e6      	bne.n	800761e <UART_EndRxTransfer+0x76>
 8007650:	687b      	ldr	r3, [r7, #4]
 8007652:	2220      	movs	r2, #32
 8007654:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
 8007658:	687b      	ldr	r3, [r7, #4]
 800765a:	2200      	movs	r2, #0
 800765c:	661a      	str	r2, [r3, #96]	@ 0x60
 800765e:	687b      	ldr	r3, [r7, #4]
 8007660:	2200      	movs	r2, #0
 8007662:	669a      	str	r2, [r3, #104]	@ 0x68
 8007664:	bf00      	nop
 8007666:	3754      	adds	r7, #84	@ 0x54
 8007668:	46bd      	mov	sp, r7
 800766a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800766e:	4770      	bx	lr

08007670 <UART_DMAAbortOnError>:
 8007670:	b580      	push	{r7, lr}
 8007672:	b084      	sub	sp, #16
 8007674:	af00      	add	r7, sp, #0
 8007676:	6078      	str	r0, [r7, #4]
 8007678:	687b      	ldr	r3, [r7, #4]
 800767a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800767c:	60fb      	str	r3, [r7, #12]
 800767e:	68fb      	ldr	r3, [r7, #12]
 8007680:	2200      	movs	r2, #0
 8007682:	f8a3 205a 	strh.w	r2, [r3, #90]	@ 0x5a
 8007686:	68fb      	ldr	r3, [r7, #12]
 8007688:	2200      	movs	r2, #0
 800768a:	f8a3 2052 	strh.w	r2, [r3, #82]	@ 0x52
 800768e:	68f8      	ldr	r0, [r7, #12]
 8007690:	f7ff fbc0 	bl	8006e14 <HAL_UART_ErrorCallback>
 8007694:	bf00      	nop
 8007696:	3710      	adds	r7, #16
 8007698:	46bd      	mov	sp, r7
 800769a:	bd80      	pop	{r7, pc}

0800769c <UART_EndTransmit_IT>:
 800769c:	b580      	push	{r7, lr}
 800769e:	b088      	sub	sp, #32
 80076a0:	af00      	add	r7, sp, #0
 80076a2:	6078      	str	r0, [r7, #4]
 80076a4:	687b      	ldr	r3, [r7, #4]
 80076a6:	681b      	ldr	r3, [r3, #0]
 80076a8:	60fb      	str	r3, [r7, #12]
 80076aa:	68fb      	ldr	r3, [r7, #12]
 80076ac:	e853 3f00 	ldrex	r3, [r3]
 80076b0:	60bb      	str	r3, [r7, #8]
 80076b2:	68bb      	ldr	r3, [r7, #8]
 80076b4:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 80076b8:	61fb      	str	r3, [r7, #28]
 80076ba:	687b      	ldr	r3, [r7, #4]
 80076bc:	681b      	ldr	r3, [r3, #0]
 80076be:	461a      	mov	r2, r3
 80076c0:	69fb      	ldr	r3, [r7, #28]
 80076c2:	61bb      	str	r3, [r7, #24]
 80076c4:	617a      	str	r2, [r7, #20]
 80076c6:	6979      	ldr	r1, [r7, #20]
 80076c8:	69ba      	ldr	r2, [r7, #24]
 80076ca:	e841 2300 	strex	r3, r2, [r1]
 80076ce:	613b      	str	r3, [r7, #16]
 80076d0:	693b      	ldr	r3, [r7, #16]
 80076d2:	2b00      	cmp	r3, #0
 80076d4:	d1e6      	bne.n	80076a4 <UART_EndTransmit_IT+0x8>
 80076d6:	687b      	ldr	r3, [r7, #4]
 80076d8:	2220      	movs	r2, #32
 80076da:	67da      	str	r2, [r3, #124]	@ 0x7c
 80076dc:	687b      	ldr	r3, [r7, #4]
 80076de:	2200      	movs	r2, #0
 80076e0:	66da      	str	r2, [r3, #108]	@ 0x6c
 80076e2:	6878      	ldr	r0, [r7, #4]
 80076e4:	f7ff fb8c 	bl	8006e00 <HAL_UART_TxCpltCallback>
 80076e8:	bf00      	nop
 80076ea:	3720      	adds	r7, #32
 80076ec:	46bd      	mov	sp, r7
 80076ee:	bd80      	pop	{r7, pc}

080076f0 <UART_RxISR_8BIT>:
 80076f0:	b580      	push	{r7, lr}
 80076f2:	b09c      	sub	sp, #112	@ 0x70
 80076f4:	af00      	add	r7, sp, #0
 80076f6:	6078      	str	r0, [r7, #4]
 80076f8:	687b      	ldr	r3, [r7, #4]
 80076fa:	f8b3 305c 	ldrh.w	r3, [r3, #92]	@ 0x5c
 80076fe:	f8a7 306e 	strh.w	r3, [r7, #110]	@ 0x6e
 8007702:	687b      	ldr	r3, [r7, #4]
 8007704:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8007708:	2b22      	cmp	r3, #34	@ 0x22
 800770a:	f040 80b9 	bne.w	8007880 <UART_RxISR_8BIT+0x190>
 800770e:	687b      	ldr	r3, [r7, #4]
 8007710:	681b      	ldr	r3, [r3, #0]
 8007712:	8c9b      	ldrh	r3, [r3, #36]	@ 0x24
 8007714:	f8a7 306c 	strh.w	r3, [r7, #108]	@ 0x6c
 8007718:	f8b7 306c 	ldrh.w	r3, [r7, #108]	@ 0x6c
 800771c:	b2d9      	uxtb	r1, r3
 800771e:	f8b7 306e 	ldrh.w	r3, [r7, #110]	@ 0x6e
 8007722:	b2da      	uxtb	r2, r3
 8007724:	687b      	ldr	r3, [r7, #4]
 8007726:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8007728:	400a      	ands	r2, r1
 800772a:	b2d2      	uxtb	r2, r2
 800772c:	701a      	strb	r2, [r3, #0]
 800772e:	687b      	ldr	r3, [r7, #4]
 8007730:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8007732:	1c5a      	adds	r2, r3, #1
 8007734:	687b      	ldr	r3, [r7, #4]
 8007736:	655a      	str	r2, [r3, #84]	@ 0x54
 8007738:	687b      	ldr	r3, [r7, #4]
 800773a:	f8b3 305a 	ldrh.w	r3, [r3, #90]	@ 0x5a
 800773e:	b29b      	uxth	r3, r3
 8007740:	3b01      	subs	r3, #1
 8007742:	b29a      	uxth	r2, r3
 8007744:	687b      	ldr	r3, [r7, #4]
 8007746:	f8a3 205a 	strh.w	r2, [r3, #90]	@ 0x5a
 800774a:	687b      	ldr	r3, [r7, #4]
 800774c:	f8b3 305a 	ldrh.w	r3, [r3, #90]	@ 0x5a
 8007750:	b29b      	uxth	r3, r3
 8007752:	2b00      	cmp	r3, #0
 8007754:	f040 809c 	bne.w	8007890 <UART_RxISR_8BIT+0x1a0>
 8007758:	687b      	ldr	r3, [r7, #4]
 800775a:	681b      	ldr	r3, [r3, #0]
 800775c:	64fb      	str	r3, [r7, #76]	@ 0x4c
 800775e:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8007760:	e853 3f00 	ldrex	r3, [r3]
 8007764:	64bb      	str	r3, [r7, #72]	@ 0x48
 8007766:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8007768:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 800776c:	66bb      	str	r3, [r7, #104]	@ 0x68
 800776e:	687b      	ldr	r3, [r7, #4]
 8007770:	681b      	ldr	r3, [r3, #0]
 8007772:	461a      	mov	r2, r3
 8007774:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 8007776:	65bb      	str	r3, [r7, #88]	@ 0x58
 8007778:	657a      	str	r2, [r7, #84]	@ 0x54
 800777a:	6d79      	ldr	r1, [r7, #84]	@ 0x54
 800777c:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 800777e:	e841 2300 	strex	r3, r2, [r1]
 8007782:	653b      	str	r3, [r7, #80]	@ 0x50
 8007784:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 8007786:	2b00      	cmp	r3, #0
 8007788:	d1e6      	bne.n	8007758 <UART_RxISR_8BIT+0x68>
 800778a:	687b      	ldr	r3, [r7, #4]
 800778c:	681b      	ldr	r3, [r3, #0]
 800778e:	3308      	adds	r3, #8
 8007790:	63bb      	str	r3, [r7, #56]	@ 0x38
 8007792:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8007794:	e853 3f00 	ldrex	r3, [r3]
 8007798:	637b      	str	r3, [r7, #52]	@ 0x34
 800779a:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800779c:	f023 0301 	bic.w	r3, r3, #1
 80077a0:	667b      	str	r3, [r7, #100]	@ 0x64
 80077a2:	687b      	ldr	r3, [r7, #4]
 80077a4:	681b      	ldr	r3, [r3, #0]
 80077a6:	3308      	adds	r3, #8
 80077a8:	6e7a      	ldr	r2, [r7, #100]	@ 0x64
 80077aa:	647a      	str	r2, [r7, #68]	@ 0x44
 80077ac:	643b      	str	r3, [r7, #64]	@ 0x40
 80077ae:	6c39      	ldr	r1, [r7, #64]	@ 0x40
 80077b0:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 80077b2:	e841 2300 	strex	r3, r2, [r1]
 80077b6:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80077b8:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 80077ba:	2b00      	cmp	r3, #0
 80077bc:	d1e5      	bne.n	800778a <UART_RxISR_8BIT+0x9a>
 80077be:	687b      	ldr	r3, [r7, #4]
 80077c0:	2220      	movs	r2, #32
 80077c2:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
 80077c6:	687b      	ldr	r3, [r7, #4]
 80077c8:	2200      	movs	r2, #0
 80077ca:	669a      	str	r2, [r3, #104]	@ 0x68
 80077cc:	687b      	ldr	r3, [r7, #4]
 80077ce:	2200      	movs	r2, #0
 80077d0:	665a      	str	r2, [r3, #100]	@ 0x64
 80077d2:	687b      	ldr	r3, [r7, #4]
 80077d4:	681b      	ldr	r3, [r3, #0]
 80077d6:	685b      	ldr	r3, [r3, #4]
 80077d8:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 80077dc:	2b00      	cmp	r3, #0
 80077de:	d018      	beq.n	8007812 <UART_RxISR_8BIT+0x122>
 80077e0:	687b      	ldr	r3, [r7, #4]
 80077e2:	681b      	ldr	r3, [r3, #0]
 80077e4:	627b      	str	r3, [r7, #36]	@ 0x24
 80077e6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80077e8:	e853 3f00 	ldrex	r3, [r3]
 80077ec:	623b      	str	r3, [r7, #32]
 80077ee:	6a3b      	ldr	r3, [r7, #32]
 80077f0:	f023 6380 	bic.w	r3, r3, #67108864	@ 0x4000000
 80077f4:	663b      	str	r3, [r7, #96]	@ 0x60
 80077f6:	687b      	ldr	r3, [r7, #4]
 80077f8:	681b      	ldr	r3, [r3, #0]
 80077fa:	461a      	mov	r2, r3
 80077fc:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 80077fe:	633b      	str	r3, [r7, #48]	@ 0x30
 8007800:	62fa      	str	r2, [r7, #44]	@ 0x2c
 8007802:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8007804:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8007806:	e841 2300 	strex	r3, r2, [r1]
 800780a:	62bb      	str	r3, [r7, #40]	@ 0x28
 800780c:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800780e:	2b00      	cmp	r3, #0
 8007810:	d1e6      	bne.n	80077e0 <UART_RxISR_8BIT+0xf0>
 8007812:	687b      	ldr	r3, [r7, #4]
 8007814:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8007816:	2b01      	cmp	r3, #1
 8007818:	d12e      	bne.n	8007878 <UART_RxISR_8BIT+0x188>
 800781a:	687b      	ldr	r3, [r7, #4]
 800781c:	2200      	movs	r2, #0
 800781e:	661a      	str	r2, [r3, #96]	@ 0x60
 8007820:	687b      	ldr	r3, [r7, #4]
 8007822:	681b      	ldr	r3, [r3, #0]
 8007824:	613b      	str	r3, [r7, #16]
 8007826:	693b      	ldr	r3, [r7, #16]
 8007828:	e853 3f00 	ldrex	r3, [r3]
 800782c:	60fb      	str	r3, [r7, #12]
 800782e:	68fb      	ldr	r3, [r7, #12]
 8007830:	f023 0310 	bic.w	r3, r3, #16
 8007834:	65fb      	str	r3, [r7, #92]	@ 0x5c
 8007836:	687b      	ldr	r3, [r7, #4]
 8007838:	681b      	ldr	r3, [r3, #0]
 800783a:	461a      	mov	r2, r3
 800783c:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 800783e:	61fb      	str	r3, [r7, #28]
 8007840:	61ba      	str	r2, [r7, #24]
 8007842:	69b9      	ldr	r1, [r7, #24]
 8007844:	69fa      	ldr	r2, [r7, #28]
 8007846:	e841 2300 	strex	r3, r2, [r1]
 800784a:	617b      	str	r3, [r7, #20]
 800784c:	697b      	ldr	r3, [r7, #20]
 800784e:	2b00      	cmp	r3, #0
 8007850:	d1e6      	bne.n	8007820 <UART_RxISR_8BIT+0x130>
 8007852:	687b      	ldr	r3, [r7, #4]
 8007854:	681b      	ldr	r3, [r3, #0]
 8007856:	69db      	ldr	r3, [r3, #28]
 8007858:	f003 0310 	and.w	r3, r3, #16
 800785c:	2b10      	cmp	r3, #16
 800785e:	d103      	bne.n	8007868 <UART_RxISR_8BIT+0x178>
 8007860:	687b      	ldr	r3, [r7, #4]
 8007862:	681b      	ldr	r3, [r3, #0]
 8007864:	2210      	movs	r2, #16
 8007866:	621a      	str	r2, [r3, #32]
 8007868:	687b      	ldr	r3, [r7, #4]
 800786a:	f8b3 3058 	ldrh.w	r3, [r3, #88]	@ 0x58
 800786e:	4619      	mov	r1, r3
 8007870:	6878      	ldr	r0, [r7, #4]
 8007872:	f7ff fad9 	bl	8006e28 <HAL_UARTEx_RxEventCallback>
 8007876:	e00b      	b.n	8007890 <UART_RxISR_8BIT+0x1a0>
 8007878:	6878      	ldr	r0, [r7, #4]
 800787a:	f7fa fc8d 	bl	8002198 <HAL_UART_RxCpltCallback>
 800787e:	e007      	b.n	8007890 <UART_RxISR_8BIT+0x1a0>
 8007880:	687b      	ldr	r3, [r7, #4]
 8007882:	681b      	ldr	r3, [r3, #0]
 8007884:	699a      	ldr	r2, [r3, #24]
 8007886:	687b      	ldr	r3, [r7, #4]
 8007888:	681b      	ldr	r3, [r3, #0]
 800788a:	f042 0208 	orr.w	r2, r2, #8
 800788e:	619a      	str	r2, [r3, #24]
 8007890:	bf00      	nop
 8007892:	3770      	adds	r7, #112	@ 0x70
 8007894:	46bd      	mov	sp, r7
 8007896:	bd80      	pop	{r7, pc}

08007898 <UART_RxISR_16BIT>:
 8007898:	b580      	push	{r7, lr}
 800789a:	b09c      	sub	sp, #112	@ 0x70
 800789c:	af00      	add	r7, sp, #0
 800789e:	6078      	str	r0, [r7, #4]
 80078a0:	687b      	ldr	r3, [r7, #4]
 80078a2:	f8b3 305c 	ldrh.w	r3, [r3, #92]	@ 0x5c
 80078a6:	f8a7 306e 	strh.w	r3, [r7, #110]	@ 0x6e
 80078aa:	687b      	ldr	r3, [r7, #4]
 80078ac:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 80078b0:	2b22      	cmp	r3, #34	@ 0x22
 80078b2:	f040 80b9 	bne.w	8007a28 <UART_RxISR_16BIT+0x190>
 80078b6:	687b      	ldr	r3, [r7, #4]
 80078b8:	681b      	ldr	r3, [r3, #0]
 80078ba:	8c9b      	ldrh	r3, [r3, #36]	@ 0x24
 80078bc:	f8a7 306c 	strh.w	r3, [r7, #108]	@ 0x6c
 80078c0:	687b      	ldr	r3, [r7, #4]
 80078c2:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80078c4:	66bb      	str	r3, [r7, #104]	@ 0x68
 80078c6:	f8b7 206c 	ldrh.w	r2, [r7, #108]	@ 0x6c
 80078ca:	f8b7 306e 	ldrh.w	r3, [r7, #110]	@ 0x6e
 80078ce:	4013      	ands	r3, r2
 80078d0:	b29a      	uxth	r2, r3
 80078d2:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 80078d4:	801a      	strh	r2, [r3, #0]
 80078d6:	687b      	ldr	r3, [r7, #4]
 80078d8:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80078da:	1c9a      	adds	r2, r3, #2
 80078dc:	687b      	ldr	r3, [r7, #4]
 80078de:	655a      	str	r2, [r3, #84]	@ 0x54
 80078e0:	687b      	ldr	r3, [r7, #4]
 80078e2:	f8b3 305a 	ldrh.w	r3, [r3, #90]	@ 0x5a
 80078e6:	b29b      	uxth	r3, r3
 80078e8:	3b01      	subs	r3, #1
 80078ea:	b29a      	uxth	r2, r3
 80078ec:	687b      	ldr	r3, [r7, #4]
 80078ee:	f8a3 205a 	strh.w	r2, [r3, #90]	@ 0x5a
 80078f2:	687b      	ldr	r3, [r7, #4]
 80078f4:	f8b3 305a 	ldrh.w	r3, [r3, #90]	@ 0x5a
 80078f8:	b29b      	uxth	r3, r3
 80078fa:	2b00      	cmp	r3, #0
 80078fc:	f040 809c 	bne.w	8007a38 <UART_RxISR_16BIT+0x1a0>
 8007900:	687b      	ldr	r3, [r7, #4]
 8007902:	681b      	ldr	r3, [r3, #0]
 8007904:	64bb      	str	r3, [r7, #72]	@ 0x48
 8007906:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8007908:	e853 3f00 	ldrex	r3, [r3]
 800790c:	647b      	str	r3, [r7, #68]	@ 0x44
 800790e:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8007910:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 8007914:	667b      	str	r3, [r7, #100]	@ 0x64
 8007916:	687b      	ldr	r3, [r7, #4]
 8007918:	681b      	ldr	r3, [r3, #0]
 800791a:	461a      	mov	r2, r3
 800791c:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 800791e:	657b      	str	r3, [r7, #84]	@ 0x54
 8007920:	653a      	str	r2, [r7, #80]	@ 0x50
 8007922:	6d39      	ldr	r1, [r7, #80]	@ 0x50
 8007924:	6d7a      	ldr	r2, [r7, #84]	@ 0x54
 8007926:	e841 2300 	strex	r3, r2, [r1]
 800792a:	64fb      	str	r3, [r7, #76]	@ 0x4c
 800792c:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 800792e:	2b00      	cmp	r3, #0
 8007930:	d1e6      	bne.n	8007900 <UART_RxISR_16BIT+0x68>
 8007932:	687b      	ldr	r3, [r7, #4]
 8007934:	681b      	ldr	r3, [r3, #0]
 8007936:	3308      	adds	r3, #8
 8007938:	637b      	str	r3, [r7, #52]	@ 0x34
 800793a:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800793c:	e853 3f00 	ldrex	r3, [r3]
 8007940:	633b      	str	r3, [r7, #48]	@ 0x30
 8007942:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8007944:	f023 0301 	bic.w	r3, r3, #1
 8007948:	663b      	str	r3, [r7, #96]	@ 0x60
 800794a:	687b      	ldr	r3, [r7, #4]
 800794c:	681b      	ldr	r3, [r3, #0]
 800794e:	3308      	adds	r3, #8
 8007950:	6e3a      	ldr	r2, [r7, #96]	@ 0x60
 8007952:	643a      	str	r2, [r7, #64]	@ 0x40
 8007954:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8007956:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
 8007958:	6c3a      	ldr	r2, [r7, #64]	@ 0x40
 800795a:	e841 2300 	strex	r3, r2, [r1]
 800795e:	63bb      	str	r3, [r7, #56]	@ 0x38
 8007960:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8007962:	2b00      	cmp	r3, #0
 8007964:	d1e5      	bne.n	8007932 <UART_RxISR_16BIT+0x9a>
 8007966:	687b      	ldr	r3, [r7, #4]
 8007968:	2220      	movs	r2, #32
 800796a:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
 800796e:	687b      	ldr	r3, [r7, #4]
 8007970:	2200      	movs	r2, #0
 8007972:	669a      	str	r2, [r3, #104]	@ 0x68
 8007974:	687b      	ldr	r3, [r7, #4]
 8007976:	2200      	movs	r2, #0
 8007978:	665a      	str	r2, [r3, #100]	@ 0x64
 800797a:	687b      	ldr	r3, [r7, #4]
 800797c:	681b      	ldr	r3, [r3, #0]
 800797e:	685b      	ldr	r3, [r3, #4]
 8007980:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8007984:	2b00      	cmp	r3, #0
 8007986:	d018      	beq.n	80079ba <UART_RxISR_16BIT+0x122>
 8007988:	687b      	ldr	r3, [r7, #4]
 800798a:	681b      	ldr	r3, [r3, #0]
 800798c:	623b      	str	r3, [r7, #32]
 800798e:	6a3b      	ldr	r3, [r7, #32]
 8007990:	e853 3f00 	ldrex	r3, [r3]
 8007994:	61fb      	str	r3, [r7, #28]
 8007996:	69fb      	ldr	r3, [r7, #28]
 8007998:	f023 6380 	bic.w	r3, r3, #67108864	@ 0x4000000
 800799c:	65fb      	str	r3, [r7, #92]	@ 0x5c
 800799e:	687b      	ldr	r3, [r7, #4]
 80079a0:	681b      	ldr	r3, [r3, #0]
 80079a2:	461a      	mov	r2, r3
 80079a4:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 80079a6:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80079a8:	62ba      	str	r2, [r7, #40]	@ 0x28
 80079aa:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 80079ac:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 80079ae:	e841 2300 	strex	r3, r2, [r1]
 80079b2:	627b      	str	r3, [r7, #36]	@ 0x24
 80079b4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80079b6:	2b00      	cmp	r3, #0
 80079b8:	d1e6      	bne.n	8007988 <UART_RxISR_16BIT+0xf0>
 80079ba:	687b      	ldr	r3, [r7, #4]
 80079bc:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80079be:	2b01      	cmp	r3, #1
 80079c0:	d12e      	bne.n	8007a20 <UART_RxISR_16BIT+0x188>
 80079c2:	687b      	ldr	r3, [r7, #4]
 80079c4:	2200      	movs	r2, #0
 80079c6:	661a      	str	r2, [r3, #96]	@ 0x60
 80079c8:	687b      	ldr	r3, [r7, #4]
 80079ca:	681b      	ldr	r3, [r3, #0]
 80079cc:	60fb      	str	r3, [r7, #12]
 80079ce:	68fb      	ldr	r3, [r7, #12]
 80079d0:	e853 3f00 	ldrex	r3, [r3]
 80079d4:	60bb      	str	r3, [r7, #8]
 80079d6:	68bb      	ldr	r3, [r7, #8]
 80079d8:	f023 0310 	bic.w	r3, r3, #16
 80079dc:	65bb      	str	r3, [r7, #88]	@ 0x58
 80079de:	687b      	ldr	r3, [r7, #4]
 80079e0:	681b      	ldr	r3, [r3, #0]
 80079e2:	461a      	mov	r2, r3
 80079e4:	6dbb      	ldr	r3, [r7, #88]	@ 0x58
 80079e6:	61bb      	str	r3, [r7, #24]
 80079e8:	617a      	str	r2, [r7, #20]
 80079ea:	6979      	ldr	r1, [r7, #20]
 80079ec:	69ba      	ldr	r2, [r7, #24]
 80079ee:	e841 2300 	strex	r3, r2, [r1]
 80079f2:	613b      	str	r3, [r7, #16]
 80079f4:	693b      	ldr	r3, [r7, #16]
 80079f6:	2b00      	cmp	r3, #0
 80079f8:	d1e6      	bne.n	80079c8 <UART_RxISR_16BIT+0x130>
 80079fa:	687b      	ldr	r3, [r7, #4]
 80079fc:	681b      	ldr	r3, [r3, #0]
 80079fe:	69db      	ldr	r3, [r3, #28]
 8007a00:	f003 0310 	and.w	r3, r3, #16
 8007a04:	2b10      	cmp	r3, #16
 8007a06:	d103      	bne.n	8007a10 <UART_RxISR_16BIT+0x178>
 8007a08:	687b      	ldr	r3, [r7, #4]
 8007a0a:	681b      	ldr	r3, [r3, #0]
 8007a0c:	2210      	movs	r2, #16
 8007a0e:	621a      	str	r2, [r3, #32]
 8007a10:	687b      	ldr	r3, [r7, #4]
 8007a12:	f8b3 3058 	ldrh.w	r3, [r3, #88]	@ 0x58
 8007a16:	4619      	mov	r1, r3
 8007a18:	6878      	ldr	r0, [r7, #4]
 8007a1a:	f7ff fa05 	bl	8006e28 <HAL_UARTEx_RxEventCallback>
 8007a1e:	e00b      	b.n	8007a38 <UART_RxISR_16BIT+0x1a0>
 8007a20:	6878      	ldr	r0, [r7, #4]
 8007a22:	f7fa fbb9 	bl	8002198 <HAL_UART_RxCpltCallback>
 8007a26:	e007      	b.n	8007a38 <UART_RxISR_16BIT+0x1a0>
 8007a28:	687b      	ldr	r3, [r7, #4]
 8007a2a:	681b      	ldr	r3, [r3, #0]
 8007a2c:	699a      	ldr	r2, [r3, #24]
 8007a2e:	687b      	ldr	r3, [r7, #4]
 8007a30:	681b      	ldr	r3, [r3, #0]
 8007a32:	f042 0208 	orr.w	r2, r2, #8
 8007a36:	619a      	str	r2, [r3, #24]
 8007a38:	bf00      	nop
 8007a3a:	3770      	adds	r7, #112	@ 0x70
 8007a3c:	46bd      	mov	sp, r7
 8007a3e:	bd80      	pop	{r7, pc}

08007a40 <HAL_UARTEx_WakeupCallback>:
 8007a40:	b480      	push	{r7}
 8007a42:	b083      	sub	sp, #12
 8007a44:	af00      	add	r7, sp, #0
 8007a46:	6078      	str	r0, [r7, #4]
 8007a48:	bf00      	nop
 8007a4a:	370c      	adds	r7, #12
 8007a4c:	46bd      	mov	sp, r7
 8007a4e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007a52:	4770      	bx	lr

08007a54 <atoi>:
 8007a54:	220a      	movs	r2, #10
 8007a56:	2100      	movs	r1, #0
 8007a58:	f000 b87a 	b.w	8007b50 <strtol>

08007a5c <_strtol_l.constprop.0>:
 8007a5c:	2b24      	cmp	r3, #36	@ 0x24
 8007a5e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8007a62:	4686      	mov	lr, r0
 8007a64:	4690      	mov	r8, r2
 8007a66:	d801      	bhi.n	8007a6c <_strtol_l.constprop.0+0x10>
 8007a68:	2b01      	cmp	r3, #1
 8007a6a:	d106      	bne.n	8007a7a <_strtol_l.constprop.0+0x1e>
 8007a6c:	f000 fe4e 	bl	800870c <__errno>
 8007a70:	2316      	movs	r3, #22
 8007a72:	6003      	str	r3, [r0, #0]
 8007a74:	2000      	movs	r0, #0
 8007a76:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8007a7a:	4834      	ldr	r0, [pc, #208]	@ (8007b4c <_strtol_l.constprop.0+0xf0>)
 8007a7c:	460d      	mov	r5, r1
 8007a7e:	462a      	mov	r2, r5
 8007a80:	f815 4b01 	ldrb.w	r4, [r5], #1
 8007a84:	5d06      	ldrb	r6, [r0, r4]
 8007a86:	f016 0608 	ands.w	r6, r6, #8
 8007a8a:	d1f8      	bne.n	8007a7e <_strtol_l.constprop.0+0x22>
 8007a8c:	2c2d      	cmp	r4, #45	@ 0x2d
 8007a8e:	d12d      	bne.n	8007aec <_strtol_l.constprop.0+0x90>
 8007a90:	782c      	ldrb	r4, [r5, #0]
 8007a92:	2601      	movs	r6, #1
 8007a94:	1c95      	adds	r5, r2, #2
 8007a96:	f033 0210 	bics.w	r2, r3, #16
 8007a9a:	d109      	bne.n	8007ab0 <_strtol_l.constprop.0+0x54>
 8007a9c:	2c30      	cmp	r4, #48	@ 0x30
 8007a9e:	d12a      	bne.n	8007af6 <_strtol_l.constprop.0+0x9a>
 8007aa0:	782a      	ldrb	r2, [r5, #0]
 8007aa2:	f002 02df 	and.w	r2, r2, #223	@ 0xdf
 8007aa6:	2a58      	cmp	r2, #88	@ 0x58
 8007aa8:	d125      	bne.n	8007af6 <_strtol_l.constprop.0+0x9a>
 8007aaa:	786c      	ldrb	r4, [r5, #1]
 8007aac:	2310      	movs	r3, #16
 8007aae:	3502      	adds	r5, #2
 8007ab0:	f106 4c00 	add.w	ip, r6, #2147483648	@ 0x80000000
 8007ab4:	f10c 3cff 	add.w	ip, ip, #4294967295
 8007ab8:	2200      	movs	r2, #0
 8007aba:	fbbc f9f3 	udiv	r9, ip, r3
 8007abe:	4610      	mov	r0, r2
 8007ac0:	fb03 ca19 	mls	sl, r3, r9, ip
 8007ac4:	f1a4 0730 	sub.w	r7, r4, #48	@ 0x30
 8007ac8:	2f09      	cmp	r7, #9
 8007aca:	d81b      	bhi.n	8007b04 <_strtol_l.constprop.0+0xa8>
 8007acc:	463c      	mov	r4, r7
 8007ace:	42a3      	cmp	r3, r4
 8007ad0:	dd27      	ble.n	8007b22 <_strtol_l.constprop.0+0xc6>
 8007ad2:	1c57      	adds	r7, r2, #1
 8007ad4:	d007      	beq.n	8007ae6 <_strtol_l.constprop.0+0x8a>
 8007ad6:	4581      	cmp	r9, r0
 8007ad8:	d320      	bcc.n	8007b1c <_strtol_l.constprop.0+0xc0>
 8007ada:	d101      	bne.n	8007ae0 <_strtol_l.constprop.0+0x84>
 8007adc:	45a2      	cmp	sl, r4
 8007ade:	db1d      	blt.n	8007b1c <_strtol_l.constprop.0+0xc0>
 8007ae0:	fb00 4003 	mla	r0, r0, r3, r4
 8007ae4:	2201      	movs	r2, #1
 8007ae6:	f815 4b01 	ldrb.w	r4, [r5], #1
 8007aea:	e7eb      	b.n	8007ac4 <_strtol_l.constprop.0+0x68>
 8007aec:	2c2b      	cmp	r4, #43	@ 0x2b
 8007aee:	bf04      	itt	eq
 8007af0:	782c      	ldrbeq	r4, [r5, #0]
 8007af2:	1c95      	addeq	r5, r2, #2
 8007af4:	e7cf      	b.n	8007a96 <_strtol_l.constprop.0+0x3a>
 8007af6:	2b00      	cmp	r3, #0
 8007af8:	d1da      	bne.n	8007ab0 <_strtol_l.constprop.0+0x54>
 8007afa:	2c30      	cmp	r4, #48	@ 0x30
 8007afc:	bf0c      	ite	eq
 8007afe:	2308      	moveq	r3, #8
 8007b00:	230a      	movne	r3, #10
 8007b02:	e7d5      	b.n	8007ab0 <_strtol_l.constprop.0+0x54>
 8007b04:	f1a4 0741 	sub.w	r7, r4, #65	@ 0x41
 8007b08:	2f19      	cmp	r7, #25
 8007b0a:	d801      	bhi.n	8007b10 <_strtol_l.constprop.0+0xb4>
 8007b0c:	3c37      	subs	r4, #55	@ 0x37
 8007b0e:	e7de      	b.n	8007ace <_strtol_l.constprop.0+0x72>
 8007b10:	f1a4 0761 	sub.w	r7, r4, #97	@ 0x61
 8007b14:	2f19      	cmp	r7, #25
 8007b16:	d804      	bhi.n	8007b22 <_strtol_l.constprop.0+0xc6>
 8007b18:	3c57      	subs	r4, #87	@ 0x57
 8007b1a:	e7d8      	b.n	8007ace <_strtol_l.constprop.0+0x72>
 8007b1c:	f04f 32ff 	mov.w	r2, #4294967295
 8007b20:	e7e1      	b.n	8007ae6 <_strtol_l.constprop.0+0x8a>
 8007b22:	1c53      	adds	r3, r2, #1
 8007b24:	d108      	bne.n	8007b38 <_strtol_l.constprop.0+0xdc>
 8007b26:	2322      	movs	r3, #34	@ 0x22
 8007b28:	f8ce 3000 	str.w	r3, [lr]
 8007b2c:	4660      	mov	r0, ip
 8007b2e:	f1b8 0f00 	cmp.w	r8, #0
 8007b32:	d0a0      	beq.n	8007a76 <_strtol_l.constprop.0+0x1a>
 8007b34:	1e69      	subs	r1, r5, #1
 8007b36:	e006      	b.n	8007b46 <_strtol_l.constprop.0+0xea>
 8007b38:	b106      	cbz	r6, 8007b3c <_strtol_l.constprop.0+0xe0>
 8007b3a:	4240      	negs	r0, r0
 8007b3c:	f1b8 0f00 	cmp.w	r8, #0
 8007b40:	d099      	beq.n	8007a76 <_strtol_l.constprop.0+0x1a>
 8007b42:	2a00      	cmp	r2, #0
 8007b44:	d1f6      	bne.n	8007b34 <_strtol_l.constprop.0+0xd8>
 8007b46:	f8c8 1000 	str.w	r1, [r8]
 8007b4a:	e794      	b.n	8007a76 <_strtol_l.constprop.0+0x1a>
 8007b4c:	0800a6a5 	.word	0x0800a6a5

08007b50 <strtol>:
 8007b50:	4613      	mov	r3, r2
 8007b52:	460a      	mov	r2, r1
 8007b54:	4601      	mov	r1, r0
 8007b56:	4802      	ldr	r0, [pc, #8]	@ (8007b60 <strtol+0x10>)
 8007b58:	6800      	ldr	r0, [r0, #0]
 8007b5a:	f7ff bf7f 	b.w	8007a5c <_strtol_l.constprop.0>
 8007b5e:	bf00      	nop
 8007b60:	20000018 	.word	0x20000018

08007b64 <__cvt>:
 8007b64:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8007b68:	ec57 6b10 	vmov	r6, r7, d0
 8007b6c:	2f00      	cmp	r7, #0
 8007b6e:	460c      	mov	r4, r1
 8007b70:	4619      	mov	r1, r3
 8007b72:	463b      	mov	r3, r7
 8007b74:	bfbb      	ittet	lt
 8007b76:	f107 4300 	addlt.w	r3, r7, #2147483648	@ 0x80000000
 8007b7a:	461f      	movlt	r7, r3
 8007b7c:	2300      	movge	r3, #0
 8007b7e:	232d      	movlt	r3, #45	@ 0x2d
 8007b80:	700b      	strb	r3, [r1, #0]
 8007b82:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8007b84:	f8dd a030 	ldr.w	sl, [sp, #48]	@ 0x30
 8007b88:	4691      	mov	r9, r2
 8007b8a:	f023 0820 	bic.w	r8, r3, #32
 8007b8e:	bfbc      	itt	lt
 8007b90:	4632      	movlt	r2, r6
 8007b92:	4616      	movlt	r6, r2
 8007b94:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 8007b98:	d005      	beq.n	8007ba6 <__cvt+0x42>
 8007b9a:	f1b8 0f45 	cmp.w	r8, #69	@ 0x45
 8007b9e:	d100      	bne.n	8007ba2 <__cvt+0x3e>
 8007ba0:	3401      	adds	r4, #1
 8007ba2:	2102      	movs	r1, #2
 8007ba4:	e000      	b.n	8007ba8 <__cvt+0x44>
 8007ba6:	2103      	movs	r1, #3
 8007ba8:	ab03      	add	r3, sp, #12
 8007baa:	9301      	str	r3, [sp, #4]
 8007bac:	ab02      	add	r3, sp, #8
 8007bae:	9300      	str	r3, [sp, #0]
 8007bb0:	ec47 6b10 	vmov	d0, r6, r7
 8007bb4:	4653      	mov	r3, sl
 8007bb6:	4622      	mov	r2, r4
 8007bb8:	f000 fe5e 	bl	8008878 <_dtoa_r>
 8007bbc:	f1b8 0f47 	cmp.w	r8, #71	@ 0x47
 8007bc0:	4605      	mov	r5, r0
 8007bc2:	d119      	bne.n	8007bf8 <__cvt+0x94>
 8007bc4:	f019 0f01 	tst.w	r9, #1
 8007bc8:	d00e      	beq.n	8007be8 <__cvt+0x84>
 8007bca:	eb00 0904 	add.w	r9, r0, r4
 8007bce:	2200      	movs	r2, #0
 8007bd0:	2300      	movs	r3, #0
 8007bd2:	4630      	mov	r0, r6
 8007bd4:	4639      	mov	r1, r7
 8007bd6:	f7f8 ff77 	bl	8000ac8 <__aeabi_dcmpeq>
 8007bda:	b108      	cbz	r0, 8007be0 <__cvt+0x7c>
 8007bdc:	f8cd 900c 	str.w	r9, [sp, #12]
 8007be0:	2230      	movs	r2, #48	@ 0x30
 8007be2:	9b03      	ldr	r3, [sp, #12]
 8007be4:	454b      	cmp	r3, r9
 8007be6:	d31e      	bcc.n	8007c26 <__cvt+0xc2>
 8007be8:	9b03      	ldr	r3, [sp, #12]
 8007bea:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8007bec:	1b5b      	subs	r3, r3, r5
 8007bee:	4628      	mov	r0, r5
 8007bf0:	6013      	str	r3, [r2, #0]
 8007bf2:	b004      	add	sp, #16
 8007bf4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8007bf8:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 8007bfc:	eb00 0904 	add.w	r9, r0, r4
 8007c00:	d1e5      	bne.n	8007bce <__cvt+0x6a>
 8007c02:	7803      	ldrb	r3, [r0, #0]
 8007c04:	2b30      	cmp	r3, #48	@ 0x30
 8007c06:	d10a      	bne.n	8007c1e <__cvt+0xba>
 8007c08:	2200      	movs	r2, #0
 8007c0a:	2300      	movs	r3, #0
 8007c0c:	4630      	mov	r0, r6
 8007c0e:	4639      	mov	r1, r7
 8007c10:	f7f8 ff5a 	bl	8000ac8 <__aeabi_dcmpeq>
 8007c14:	b918      	cbnz	r0, 8007c1e <__cvt+0xba>
 8007c16:	f1c4 0401 	rsb	r4, r4, #1
 8007c1a:	f8ca 4000 	str.w	r4, [sl]
 8007c1e:	f8da 3000 	ldr.w	r3, [sl]
 8007c22:	4499      	add	r9, r3
 8007c24:	e7d3      	b.n	8007bce <__cvt+0x6a>
 8007c26:	1c59      	adds	r1, r3, #1
 8007c28:	9103      	str	r1, [sp, #12]
 8007c2a:	701a      	strb	r2, [r3, #0]
 8007c2c:	e7d9      	b.n	8007be2 <__cvt+0x7e>

08007c2e <__exponent>:
 8007c2e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8007c30:	2900      	cmp	r1, #0
 8007c32:	bfba      	itte	lt
 8007c34:	4249      	neglt	r1, r1
 8007c36:	232d      	movlt	r3, #45	@ 0x2d
 8007c38:	232b      	movge	r3, #43	@ 0x2b
 8007c3a:	2909      	cmp	r1, #9
 8007c3c:	7002      	strb	r2, [r0, #0]
 8007c3e:	7043      	strb	r3, [r0, #1]
 8007c40:	dd29      	ble.n	8007c96 <__exponent+0x68>
 8007c42:	f10d 0307 	add.w	r3, sp, #7
 8007c46:	461d      	mov	r5, r3
 8007c48:	270a      	movs	r7, #10
 8007c4a:	461a      	mov	r2, r3
 8007c4c:	fbb1 f6f7 	udiv	r6, r1, r7
 8007c50:	fb07 1416 	mls	r4, r7, r6, r1
 8007c54:	3430      	adds	r4, #48	@ 0x30
 8007c56:	f802 4c01 	strb.w	r4, [r2, #-1]
 8007c5a:	460c      	mov	r4, r1
 8007c5c:	2c63      	cmp	r4, #99	@ 0x63
 8007c5e:	f103 33ff 	add.w	r3, r3, #4294967295
 8007c62:	4631      	mov	r1, r6
 8007c64:	dcf1      	bgt.n	8007c4a <__exponent+0x1c>
 8007c66:	3130      	adds	r1, #48	@ 0x30
 8007c68:	1e94      	subs	r4, r2, #2
 8007c6a:	f803 1c01 	strb.w	r1, [r3, #-1]
 8007c6e:	1c41      	adds	r1, r0, #1
 8007c70:	4623      	mov	r3, r4
 8007c72:	42ab      	cmp	r3, r5
 8007c74:	d30a      	bcc.n	8007c8c <__exponent+0x5e>
 8007c76:	f10d 0309 	add.w	r3, sp, #9
 8007c7a:	1a9b      	subs	r3, r3, r2
 8007c7c:	42ac      	cmp	r4, r5
 8007c7e:	bf88      	it	hi
 8007c80:	2300      	movhi	r3, #0
 8007c82:	3302      	adds	r3, #2
 8007c84:	4403      	add	r3, r0
 8007c86:	1a18      	subs	r0, r3, r0
 8007c88:	b003      	add	sp, #12
 8007c8a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8007c8c:	f813 6b01 	ldrb.w	r6, [r3], #1
 8007c90:	f801 6f01 	strb.w	r6, [r1, #1]!
 8007c94:	e7ed      	b.n	8007c72 <__exponent+0x44>
 8007c96:	2330      	movs	r3, #48	@ 0x30
 8007c98:	3130      	adds	r1, #48	@ 0x30
 8007c9a:	7083      	strb	r3, [r0, #2]
 8007c9c:	70c1      	strb	r1, [r0, #3]
 8007c9e:	1d03      	adds	r3, r0, #4
 8007ca0:	e7f1      	b.n	8007c86 <__exponent+0x58>
	...

08007ca4 <_printf_float>:
 8007ca4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007ca8:	b08d      	sub	sp, #52	@ 0x34
 8007caa:	460c      	mov	r4, r1
 8007cac:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 8007cb0:	4616      	mov	r6, r2
 8007cb2:	461f      	mov	r7, r3
 8007cb4:	4605      	mov	r5, r0
 8007cb6:	f000 fcdf 	bl	8008678 <_localeconv_r>
 8007cba:	6803      	ldr	r3, [r0, #0]
 8007cbc:	9304      	str	r3, [sp, #16]
 8007cbe:	4618      	mov	r0, r3
 8007cc0:	f7f8 fad6 	bl	8000270 <strlen>
 8007cc4:	2300      	movs	r3, #0
 8007cc6:	930a      	str	r3, [sp, #40]	@ 0x28
 8007cc8:	f8d8 3000 	ldr.w	r3, [r8]
 8007ccc:	9005      	str	r0, [sp, #20]
 8007cce:	3307      	adds	r3, #7
 8007cd0:	f023 0307 	bic.w	r3, r3, #7
 8007cd4:	f103 0208 	add.w	r2, r3, #8
 8007cd8:	f894 a018 	ldrb.w	sl, [r4, #24]
 8007cdc:	f8d4 b000 	ldr.w	fp, [r4]
 8007ce0:	f8c8 2000 	str.w	r2, [r8]
 8007ce4:	e9d3 8900 	ldrd	r8, r9, [r3]
 8007ce8:	f029 4300 	bic.w	r3, r9, #2147483648	@ 0x80000000
 8007cec:	9307      	str	r3, [sp, #28]
 8007cee:	f8cd 8018 	str.w	r8, [sp, #24]
 8007cf2:	e9c4 8912 	strd	r8, r9, [r4, #72]	@ 0x48
 8007cf6:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8007cfa:	4b9c      	ldr	r3, [pc, #624]	@ (8007f6c <_printf_float+0x2c8>)
 8007cfc:	f04f 32ff 	mov.w	r2, #4294967295
 8007d00:	f7f8 ff14 	bl	8000b2c <__aeabi_dcmpun>
 8007d04:	bb70      	cbnz	r0, 8007d64 <_printf_float+0xc0>
 8007d06:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8007d0a:	4b98      	ldr	r3, [pc, #608]	@ (8007f6c <_printf_float+0x2c8>)
 8007d0c:	f04f 32ff 	mov.w	r2, #4294967295
 8007d10:	f7f8 feee 	bl	8000af0 <__aeabi_dcmple>
 8007d14:	bb30      	cbnz	r0, 8007d64 <_printf_float+0xc0>
 8007d16:	2200      	movs	r2, #0
 8007d18:	2300      	movs	r3, #0
 8007d1a:	4640      	mov	r0, r8
 8007d1c:	4649      	mov	r1, r9
 8007d1e:	f7f8 fedd 	bl	8000adc <__aeabi_dcmplt>
 8007d22:	b110      	cbz	r0, 8007d2a <_printf_float+0x86>
 8007d24:	232d      	movs	r3, #45	@ 0x2d
 8007d26:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8007d2a:	4a91      	ldr	r2, [pc, #580]	@ (8007f70 <_printf_float+0x2cc>)
 8007d2c:	4b91      	ldr	r3, [pc, #580]	@ (8007f74 <_printf_float+0x2d0>)
 8007d2e:	f1ba 0f47 	cmp.w	sl, #71	@ 0x47
 8007d32:	bf94      	ite	ls
 8007d34:	4690      	movls	r8, r2
 8007d36:	4698      	movhi	r8, r3
 8007d38:	2303      	movs	r3, #3
 8007d3a:	6123      	str	r3, [r4, #16]
 8007d3c:	f02b 0304 	bic.w	r3, fp, #4
 8007d40:	6023      	str	r3, [r4, #0]
 8007d42:	f04f 0900 	mov.w	r9, #0
 8007d46:	9700      	str	r7, [sp, #0]
 8007d48:	4633      	mov	r3, r6
 8007d4a:	aa0b      	add	r2, sp, #44	@ 0x2c
 8007d4c:	4621      	mov	r1, r4
 8007d4e:	4628      	mov	r0, r5
 8007d50:	f000 f9d2 	bl	80080f8 <_printf_common>
 8007d54:	3001      	adds	r0, #1
 8007d56:	f040 808d 	bne.w	8007e74 <_printf_float+0x1d0>
 8007d5a:	f04f 30ff 	mov.w	r0, #4294967295
 8007d5e:	b00d      	add	sp, #52	@ 0x34
 8007d60:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007d64:	4642      	mov	r2, r8
 8007d66:	464b      	mov	r3, r9
 8007d68:	4640      	mov	r0, r8
 8007d6a:	4649      	mov	r1, r9
 8007d6c:	f7f8 fede 	bl	8000b2c <__aeabi_dcmpun>
 8007d70:	b140      	cbz	r0, 8007d84 <_printf_float+0xe0>
 8007d72:	464b      	mov	r3, r9
 8007d74:	2b00      	cmp	r3, #0
 8007d76:	bfbc      	itt	lt
 8007d78:	232d      	movlt	r3, #45	@ 0x2d
 8007d7a:	f884 3043 	strblt.w	r3, [r4, #67]	@ 0x43
 8007d7e:	4a7e      	ldr	r2, [pc, #504]	@ (8007f78 <_printf_float+0x2d4>)
 8007d80:	4b7e      	ldr	r3, [pc, #504]	@ (8007f7c <_printf_float+0x2d8>)
 8007d82:	e7d4      	b.n	8007d2e <_printf_float+0x8a>
 8007d84:	6863      	ldr	r3, [r4, #4]
 8007d86:	f00a 02df 	and.w	r2, sl, #223	@ 0xdf
 8007d8a:	9206      	str	r2, [sp, #24]
 8007d8c:	1c5a      	adds	r2, r3, #1
 8007d8e:	d13b      	bne.n	8007e08 <_printf_float+0x164>
 8007d90:	2306      	movs	r3, #6
 8007d92:	6063      	str	r3, [r4, #4]
 8007d94:	f44b 6280 	orr.w	r2, fp, #1024	@ 0x400
 8007d98:	2300      	movs	r3, #0
 8007d9a:	6022      	str	r2, [r4, #0]
 8007d9c:	9303      	str	r3, [sp, #12]
 8007d9e:	ab0a      	add	r3, sp, #40	@ 0x28
 8007da0:	e9cd a301 	strd	sl, r3, [sp, #4]
 8007da4:	ab09      	add	r3, sp, #36	@ 0x24
 8007da6:	9300      	str	r3, [sp, #0]
 8007da8:	6861      	ldr	r1, [r4, #4]
 8007daa:	ec49 8b10 	vmov	d0, r8, r9
 8007dae:	f10d 0323 	add.w	r3, sp, #35	@ 0x23
 8007db2:	4628      	mov	r0, r5
 8007db4:	f7ff fed6 	bl	8007b64 <__cvt>
 8007db8:	9b06      	ldr	r3, [sp, #24]
 8007dba:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8007dbc:	2b47      	cmp	r3, #71	@ 0x47
 8007dbe:	4680      	mov	r8, r0
 8007dc0:	d129      	bne.n	8007e16 <_printf_float+0x172>
 8007dc2:	1cc8      	adds	r0, r1, #3
 8007dc4:	db02      	blt.n	8007dcc <_printf_float+0x128>
 8007dc6:	6863      	ldr	r3, [r4, #4]
 8007dc8:	4299      	cmp	r1, r3
 8007dca:	dd41      	ble.n	8007e50 <_printf_float+0x1ac>
 8007dcc:	f1aa 0a02 	sub.w	sl, sl, #2
 8007dd0:	fa5f fa8a 	uxtb.w	sl, sl
 8007dd4:	3901      	subs	r1, #1
 8007dd6:	4652      	mov	r2, sl
 8007dd8:	f104 0050 	add.w	r0, r4, #80	@ 0x50
 8007ddc:	9109      	str	r1, [sp, #36]	@ 0x24
 8007dde:	f7ff ff26 	bl	8007c2e <__exponent>
 8007de2:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8007de4:	1813      	adds	r3, r2, r0
 8007de6:	2a01      	cmp	r2, #1
 8007de8:	4681      	mov	r9, r0
 8007dea:	6123      	str	r3, [r4, #16]
 8007dec:	dc02      	bgt.n	8007df4 <_printf_float+0x150>
 8007dee:	6822      	ldr	r2, [r4, #0]
 8007df0:	07d2      	lsls	r2, r2, #31
 8007df2:	d501      	bpl.n	8007df8 <_printf_float+0x154>
 8007df4:	3301      	adds	r3, #1
 8007df6:	6123      	str	r3, [r4, #16]
 8007df8:	f89d 3023 	ldrb.w	r3, [sp, #35]	@ 0x23
 8007dfc:	2b00      	cmp	r3, #0
 8007dfe:	d0a2      	beq.n	8007d46 <_printf_float+0xa2>
 8007e00:	232d      	movs	r3, #45	@ 0x2d
 8007e02:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8007e06:	e79e      	b.n	8007d46 <_printf_float+0xa2>
 8007e08:	9a06      	ldr	r2, [sp, #24]
 8007e0a:	2a47      	cmp	r2, #71	@ 0x47
 8007e0c:	d1c2      	bne.n	8007d94 <_printf_float+0xf0>
 8007e0e:	2b00      	cmp	r3, #0
 8007e10:	d1c0      	bne.n	8007d94 <_printf_float+0xf0>
 8007e12:	2301      	movs	r3, #1
 8007e14:	e7bd      	b.n	8007d92 <_printf_float+0xee>
 8007e16:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 8007e1a:	d9db      	bls.n	8007dd4 <_printf_float+0x130>
 8007e1c:	f1ba 0f66 	cmp.w	sl, #102	@ 0x66
 8007e20:	d118      	bne.n	8007e54 <_printf_float+0x1b0>
 8007e22:	2900      	cmp	r1, #0
 8007e24:	6863      	ldr	r3, [r4, #4]
 8007e26:	dd0b      	ble.n	8007e40 <_printf_float+0x19c>
 8007e28:	6121      	str	r1, [r4, #16]
 8007e2a:	b913      	cbnz	r3, 8007e32 <_printf_float+0x18e>
 8007e2c:	6822      	ldr	r2, [r4, #0]
 8007e2e:	07d0      	lsls	r0, r2, #31
 8007e30:	d502      	bpl.n	8007e38 <_printf_float+0x194>
 8007e32:	3301      	adds	r3, #1
 8007e34:	440b      	add	r3, r1
 8007e36:	6123      	str	r3, [r4, #16]
 8007e38:	65a1      	str	r1, [r4, #88]	@ 0x58
 8007e3a:	f04f 0900 	mov.w	r9, #0
 8007e3e:	e7db      	b.n	8007df8 <_printf_float+0x154>
 8007e40:	b913      	cbnz	r3, 8007e48 <_printf_float+0x1a4>
 8007e42:	6822      	ldr	r2, [r4, #0]
 8007e44:	07d2      	lsls	r2, r2, #31
 8007e46:	d501      	bpl.n	8007e4c <_printf_float+0x1a8>
 8007e48:	3302      	adds	r3, #2
 8007e4a:	e7f4      	b.n	8007e36 <_printf_float+0x192>
 8007e4c:	2301      	movs	r3, #1
 8007e4e:	e7f2      	b.n	8007e36 <_printf_float+0x192>
 8007e50:	f04f 0a67 	mov.w	sl, #103	@ 0x67
 8007e54:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8007e56:	4299      	cmp	r1, r3
 8007e58:	db05      	blt.n	8007e66 <_printf_float+0x1c2>
 8007e5a:	6823      	ldr	r3, [r4, #0]
 8007e5c:	6121      	str	r1, [r4, #16]
 8007e5e:	07d8      	lsls	r0, r3, #31
 8007e60:	d5ea      	bpl.n	8007e38 <_printf_float+0x194>
 8007e62:	1c4b      	adds	r3, r1, #1
 8007e64:	e7e7      	b.n	8007e36 <_printf_float+0x192>
 8007e66:	2900      	cmp	r1, #0
 8007e68:	bfd4      	ite	le
 8007e6a:	f1c1 0202 	rsble	r2, r1, #2
 8007e6e:	2201      	movgt	r2, #1
 8007e70:	4413      	add	r3, r2
 8007e72:	e7e0      	b.n	8007e36 <_printf_float+0x192>
 8007e74:	6823      	ldr	r3, [r4, #0]
 8007e76:	055a      	lsls	r2, r3, #21
 8007e78:	d407      	bmi.n	8007e8a <_printf_float+0x1e6>
 8007e7a:	6923      	ldr	r3, [r4, #16]
 8007e7c:	4642      	mov	r2, r8
 8007e7e:	4631      	mov	r1, r6
 8007e80:	4628      	mov	r0, r5
 8007e82:	47b8      	blx	r7
 8007e84:	3001      	adds	r0, #1
 8007e86:	d12b      	bne.n	8007ee0 <_printf_float+0x23c>
 8007e88:	e767      	b.n	8007d5a <_printf_float+0xb6>
 8007e8a:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 8007e8e:	f240 80dd 	bls.w	800804c <_printf_float+0x3a8>
 8007e92:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 8007e96:	2200      	movs	r2, #0
 8007e98:	2300      	movs	r3, #0
 8007e9a:	f7f8 fe15 	bl	8000ac8 <__aeabi_dcmpeq>
 8007e9e:	2800      	cmp	r0, #0
 8007ea0:	d033      	beq.n	8007f0a <_printf_float+0x266>
 8007ea2:	4a37      	ldr	r2, [pc, #220]	@ (8007f80 <_printf_float+0x2dc>)
 8007ea4:	2301      	movs	r3, #1
 8007ea6:	4631      	mov	r1, r6
 8007ea8:	4628      	mov	r0, r5
 8007eaa:	47b8      	blx	r7
 8007eac:	3001      	adds	r0, #1
 8007eae:	f43f af54 	beq.w	8007d5a <_printf_float+0xb6>
 8007eb2:	e9dd 3809 	ldrd	r3, r8, [sp, #36]	@ 0x24
 8007eb6:	4543      	cmp	r3, r8
 8007eb8:	db02      	blt.n	8007ec0 <_printf_float+0x21c>
 8007eba:	6823      	ldr	r3, [r4, #0]
 8007ebc:	07d8      	lsls	r0, r3, #31
 8007ebe:	d50f      	bpl.n	8007ee0 <_printf_float+0x23c>
 8007ec0:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8007ec4:	4631      	mov	r1, r6
 8007ec6:	4628      	mov	r0, r5
 8007ec8:	47b8      	blx	r7
 8007eca:	3001      	adds	r0, #1
 8007ecc:	f43f af45 	beq.w	8007d5a <_printf_float+0xb6>
 8007ed0:	f04f 0900 	mov.w	r9, #0
 8007ed4:	f108 38ff 	add.w	r8, r8, #4294967295
 8007ed8:	f104 0a1a 	add.w	sl, r4, #26
 8007edc:	45c8      	cmp	r8, r9
 8007ede:	dc09      	bgt.n	8007ef4 <_printf_float+0x250>
 8007ee0:	6823      	ldr	r3, [r4, #0]
 8007ee2:	079b      	lsls	r3, r3, #30
 8007ee4:	f100 8103 	bmi.w	80080ee <_printf_float+0x44a>
 8007ee8:	68e0      	ldr	r0, [r4, #12]
 8007eea:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8007eec:	4298      	cmp	r0, r3
 8007eee:	bfb8      	it	lt
 8007ef0:	4618      	movlt	r0, r3
 8007ef2:	e734      	b.n	8007d5e <_printf_float+0xba>
 8007ef4:	2301      	movs	r3, #1
 8007ef6:	4652      	mov	r2, sl
 8007ef8:	4631      	mov	r1, r6
 8007efa:	4628      	mov	r0, r5
 8007efc:	47b8      	blx	r7
 8007efe:	3001      	adds	r0, #1
 8007f00:	f43f af2b 	beq.w	8007d5a <_printf_float+0xb6>
 8007f04:	f109 0901 	add.w	r9, r9, #1
 8007f08:	e7e8      	b.n	8007edc <_printf_float+0x238>
 8007f0a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8007f0c:	2b00      	cmp	r3, #0
 8007f0e:	dc39      	bgt.n	8007f84 <_printf_float+0x2e0>
 8007f10:	4a1b      	ldr	r2, [pc, #108]	@ (8007f80 <_printf_float+0x2dc>)
 8007f12:	2301      	movs	r3, #1
 8007f14:	4631      	mov	r1, r6
 8007f16:	4628      	mov	r0, r5
 8007f18:	47b8      	blx	r7
 8007f1a:	3001      	adds	r0, #1
 8007f1c:	f43f af1d 	beq.w	8007d5a <_printf_float+0xb6>
 8007f20:	e9dd 3909 	ldrd	r3, r9, [sp, #36]	@ 0x24
 8007f24:	ea59 0303 	orrs.w	r3, r9, r3
 8007f28:	d102      	bne.n	8007f30 <_printf_float+0x28c>
 8007f2a:	6823      	ldr	r3, [r4, #0]
 8007f2c:	07d9      	lsls	r1, r3, #31
 8007f2e:	d5d7      	bpl.n	8007ee0 <_printf_float+0x23c>
 8007f30:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8007f34:	4631      	mov	r1, r6
 8007f36:	4628      	mov	r0, r5
 8007f38:	47b8      	blx	r7
 8007f3a:	3001      	adds	r0, #1
 8007f3c:	f43f af0d 	beq.w	8007d5a <_printf_float+0xb6>
 8007f40:	f04f 0a00 	mov.w	sl, #0
 8007f44:	f104 0b1a 	add.w	fp, r4, #26
 8007f48:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8007f4a:	425b      	negs	r3, r3
 8007f4c:	4553      	cmp	r3, sl
 8007f4e:	dc01      	bgt.n	8007f54 <_printf_float+0x2b0>
 8007f50:	464b      	mov	r3, r9
 8007f52:	e793      	b.n	8007e7c <_printf_float+0x1d8>
 8007f54:	2301      	movs	r3, #1
 8007f56:	465a      	mov	r2, fp
 8007f58:	4631      	mov	r1, r6
 8007f5a:	4628      	mov	r0, r5
 8007f5c:	47b8      	blx	r7
 8007f5e:	3001      	adds	r0, #1
 8007f60:	f43f aefb 	beq.w	8007d5a <_printf_float+0xb6>
 8007f64:	f10a 0a01 	add.w	sl, sl, #1
 8007f68:	e7ee      	b.n	8007f48 <_printf_float+0x2a4>
 8007f6a:	bf00      	nop
 8007f6c:	7fefffff 	.word	0x7fefffff
 8007f70:	0800a7a5 	.word	0x0800a7a5
 8007f74:	0800a7a9 	.word	0x0800a7a9
 8007f78:	0800a7ad 	.word	0x0800a7ad
 8007f7c:	0800a7b1 	.word	0x0800a7b1
 8007f80:	0800a7b5 	.word	0x0800a7b5
 8007f84:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8007f86:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
 8007f8a:	4553      	cmp	r3, sl
 8007f8c:	bfa8      	it	ge
 8007f8e:	4653      	movge	r3, sl
 8007f90:	2b00      	cmp	r3, #0
 8007f92:	4699      	mov	r9, r3
 8007f94:	dc36      	bgt.n	8008004 <_printf_float+0x360>
 8007f96:	f04f 0b00 	mov.w	fp, #0
 8007f9a:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8007f9e:	f104 021a 	add.w	r2, r4, #26
 8007fa2:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8007fa4:	9306      	str	r3, [sp, #24]
 8007fa6:	eba3 0309 	sub.w	r3, r3, r9
 8007faa:	455b      	cmp	r3, fp
 8007fac:	dc31      	bgt.n	8008012 <_printf_float+0x36e>
 8007fae:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8007fb0:	459a      	cmp	sl, r3
 8007fb2:	dc3a      	bgt.n	800802a <_printf_float+0x386>
 8007fb4:	6823      	ldr	r3, [r4, #0]
 8007fb6:	07da      	lsls	r2, r3, #31
 8007fb8:	d437      	bmi.n	800802a <_printf_float+0x386>
 8007fba:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8007fbc:	ebaa 0903 	sub.w	r9, sl, r3
 8007fc0:	9b06      	ldr	r3, [sp, #24]
 8007fc2:	ebaa 0303 	sub.w	r3, sl, r3
 8007fc6:	4599      	cmp	r9, r3
 8007fc8:	bfa8      	it	ge
 8007fca:	4699      	movge	r9, r3
 8007fcc:	f1b9 0f00 	cmp.w	r9, #0
 8007fd0:	dc33      	bgt.n	800803a <_printf_float+0x396>
 8007fd2:	f04f 0800 	mov.w	r8, #0
 8007fd6:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8007fda:	f104 0b1a 	add.w	fp, r4, #26
 8007fde:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8007fe0:	ebaa 0303 	sub.w	r3, sl, r3
 8007fe4:	eba3 0309 	sub.w	r3, r3, r9
 8007fe8:	4543      	cmp	r3, r8
 8007fea:	f77f af79 	ble.w	8007ee0 <_printf_float+0x23c>
 8007fee:	2301      	movs	r3, #1
 8007ff0:	465a      	mov	r2, fp
 8007ff2:	4631      	mov	r1, r6
 8007ff4:	4628      	mov	r0, r5
 8007ff6:	47b8      	blx	r7
 8007ff8:	3001      	adds	r0, #1
 8007ffa:	f43f aeae 	beq.w	8007d5a <_printf_float+0xb6>
 8007ffe:	f108 0801 	add.w	r8, r8, #1
 8008002:	e7ec      	b.n	8007fde <_printf_float+0x33a>
 8008004:	4642      	mov	r2, r8
 8008006:	4631      	mov	r1, r6
 8008008:	4628      	mov	r0, r5
 800800a:	47b8      	blx	r7
 800800c:	3001      	adds	r0, #1
 800800e:	d1c2      	bne.n	8007f96 <_printf_float+0x2f2>
 8008010:	e6a3      	b.n	8007d5a <_printf_float+0xb6>
 8008012:	2301      	movs	r3, #1
 8008014:	4631      	mov	r1, r6
 8008016:	4628      	mov	r0, r5
 8008018:	9206      	str	r2, [sp, #24]
 800801a:	47b8      	blx	r7
 800801c:	3001      	adds	r0, #1
 800801e:	f43f ae9c 	beq.w	8007d5a <_printf_float+0xb6>
 8008022:	9a06      	ldr	r2, [sp, #24]
 8008024:	f10b 0b01 	add.w	fp, fp, #1
 8008028:	e7bb      	b.n	8007fa2 <_printf_float+0x2fe>
 800802a:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800802e:	4631      	mov	r1, r6
 8008030:	4628      	mov	r0, r5
 8008032:	47b8      	blx	r7
 8008034:	3001      	adds	r0, #1
 8008036:	d1c0      	bne.n	8007fba <_printf_float+0x316>
 8008038:	e68f      	b.n	8007d5a <_printf_float+0xb6>
 800803a:	9a06      	ldr	r2, [sp, #24]
 800803c:	464b      	mov	r3, r9
 800803e:	4442      	add	r2, r8
 8008040:	4631      	mov	r1, r6
 8008042:	4628      	mov	r0, r5
 8008044:	47b8      	blx	r7
 8008046:	3001      	adds	r0, #1
 8008048:	d1c3      	bne.n	8007fd2 <_printf_float+0x32e>
 800804a:	e686      	b.n	8007d5a <_printf_float+0xb6>
 800804c:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
 8008050:	f1ba 0f01 	cmp.w	sl, #1
 8008054:	dc01      	bgt.n	800805a <_printf_float+0x3b6>
 8008056:	07db      	lsls	r3, r3, #31
 8008058:	d536      	bpl.n	80080c8 <_printf_float+0x424>
 800805a:	2301      	movs	r3, #1
 800805c:	4642      	mov	r2, r8
 800805e:	4631      	mov	r1, r6
 8008060:	4628      	mov	r0, r5
 8008062:	47b8      	blx	r7
 8008064:	3001      	adds	r0, #1
 8008066:	f43f ae78 	beq.w	8007d5a <_printf_float+0xb6>
 800806a:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800806e:	4631      	mov	r1, r6
 8008070:	4628      	mov	r0, r5
 8008072:	47b8      	blx	r7
 8008074:	3001      	adds	r0, #1
 8008076:	f43f ae70 	beq.w	8007d5a <_printf_float+0xb6>
 800807a:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 800807e:	2200      	movs	r2, #0
 8008080:	2300      	movs	r3, #0
 8008082:	f10a 3aff 	add.w	sl, sl, #4294967295
 8008086:	f7f8 fd1f 	bl	8000ac8 <__aeabi_dcmpeq>
 800808a:	b9c0      	cbnz	r0, 80080be <_printf_float+0x41a>
 800808c:	4653      	mov	r3, sl
 800808e:	f108 0201 	add.w	r2, r8, #1
 8008092:	4631      	mov	r1, r6
 8008094:	4628      	mov	r0, r5
 8008096:	47b8      	blx	r7
 8008098:	3001      	adds	r0, #1
 800809a:	d10c      	bne.n	80080b6 <_printf_float+0x412>
 800809c:	e65d      	b.n	8007d5a <_printf_float+0xb6>
 800809e:	2301      	movs	r3, #1
 80080a0:	465a      	mov	r2, fp
 80080a2:	4631      	mov	r1, r6
 80080a4:	4628      	mov	r0, r5
 80080a6:	47b8      	blx	r7
 80080a8:	3001      	adds	r0, #1
 80080aa:	f43f ae56 	beq.w	8007d5a <_printf_float+0xb6>
 80080ae:	f108 0801 	add.w	r8, r8, #1
 80080b2:	45d0      	cmp	r8, sl
 80080b4:	dbf3      	blt.n	800809e <_printf_float+0x3fa>
 80080b6:	464b      	mov	r3, r9
 80080b8:	f104 0250 	add.w	r2, r4, #80	@ 0x50
 80080bc:	e6df      	b.n	8007e7e <_printf_float+0x1da>
 80080be:	f04f 0800 	mov.w	r8, #0
 80080c2:	f104 0b1a 	add.w	fp, r4, #26
 80080c6:	e7f4      	b.n	80080b2 <_printf_float+0x40e>
 80080c8:	2301      	movs	r3, #1
 80080ca:	4642      	mov	r2, r8
 80080cc:	e7e1      	b.n	8008092 <_printf_float+0x3ee>
 80080ce:	2301      	movs	r3, #1
 80080d0:	464a      	mov	r2, r9
 80080d2:	4631      	mov	r1, r6
 80080d4:	4628      	mov	r0, r5
 80080d6:	47b8      	blx	r7
 80080d8:	3001      	adds	r0, #1
 80080da:	f43f ae3e 	beq.w	8007d5a <_printf_float+0xb6>
 80080de:	f108 0801 	add.w	r8, r8, #1
 80080e2:	68e3      	ldr	r3, [r4, #12]
 80080e4:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 80080e6:	1a5b      	subs	r3, r3, r1
 80080e8:	4543      	cmp	r3, r8
 80080ea:	dcf0      	bgt.n	80080ce <_printf_float+0x42a>
 80080ec:	e6fc      	b.n	8007ee8 <_printf_float+0x244>
 80080ee:	f04f 0800 	mov.w	r8, #0
 80080f2:	f104 0919 	add.w	r9, r4, #25
 80080f6:	e7f4      	b.n	80080e2 <_printf_float+0x43e>

080080f8 <_printf_common>:
 80080f8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80080fc:	4616      	mov	r6, r2
 80080fe:	4698      	mov	r8, r3
 8008100:	688a      	ldr	r2, [r1, #8]
 8008102:	690b      	ldr	r3, [r1, #16]
 8008104:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8008108:	4293      	cmp	r3, r2
 800810a:	bfb8      	it	lt
 800810c:	4613      	movlt	r3, r2
 800810e:	6033      	str	r3, [r6, #0]
 8008110:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8008114:	4607      	mov	r7, r0
 8008116:	460c      	mov	r4, r1
 8008118:	b10a      	cbz	r2, 800811e <_printf_common+0x26>
 800811a:	3301      	adds	r3, #1
 800811c:	6033      	str	r3, [r6, #0]
 800811e:	6823      	ldr	r3, [r4, #0]
 8008120:	0699      	lsls	r1, r3, #26
 8008122:	bf42      	ittt	mi
 8008124:	6833      	ldrmi	r3, [r6, #0]
 8008126:	3302      	addmi	r3, #2
 8008128:	6033      	strmi	r3, [r6, #0]
 800812a:	6825      	ldr	r5, [r4, #0]
 800812c:	f015 0506 	ands.w	r5, r5, #6
 8008130:	d106      	bne.n	8008140 <_printf_common+0x48>
 8008132:	f104 0a19 	add.w	sl, r4, #25
 8008136:	68e3      	ldr	r3, [r4, #12]
 8008138:	6832      	ldr	r2, [r6, #0]
 800813a:	1a9b      	subs	r3, r3, r2
 800813c:	42ab      	cmp	r3, r5
 800813e:	dc26      	bgt.n	800818e <_printf_common+0x96>
 8008140:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8008144:	6822      	ldr	r2, [r4, #0]
 8008146:	3b00      	subs	r3, #0
 8008148:	bf18      	it	ne
 800814a:	2301      	movne	r3, #1
 800814c:	0692      	lsls	r2, r2, #26
 800814e:	d42b      	bmi.n	80081a8 <_printf_common+0xb0>
 8008150:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8008154:	4641      	mov	r1, r8
 8008156:	4638      	mov	r0, r7
 8008158:	47c8      	blx	r9
 800815a:	3001      	adds	r0, #1
 800815c:	d01e      	beq.n	800819c <_printf_common+0xa4>
 800815e:	6823      	ldr	r3, [r4, #0]
 8008160:	6922      	ldr	r2, [r4, #16]
 8008162:	f003 0306 	and.w	r3, r3, #6
 8008166:	2b04      	cmp	r3, #4
 8008168:	bf02      	ittt	eq
 800816a:	68e5      	ldreq	r5, [r4, #12]
 800816c:	6833      	ldreq	r3, [r6, #0]
 800816e:	1aed      	subeq	r5, r5, r3
 8008170:	68a3      	ldr	r3, [r4, #8]
 8008172:	bf0c      	ite	eq
 8008174:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8008178:	2500      	movne	r5, #0
 800817a:	4293      	cmp	r3, r2
 800817c:	bfc4      	itt	gt
 800817e:	1a9b      	subgt	r3, r3, r2
 8008180:	18ed      	addgt	r5, r5, r3
 8008182:	2600      	movs	r6, #0
 8008184:	341a      	adds	r4, #26
 8008186:	42b5      	cmp	r5, r6
 8008188:	d11a      	bne.n	80081c0 <_printf_common+0xc8>
 800818a:	2000      	movs	r0, #0
 800818c:	e008      	b.n	80081a0 <_printf_common+0xa8>
 800818e:	2301      	movs	r3, #1
 8008190:	4652      	mov	r2, sl
 8008192:	4641      	mov	r1, r8
 8008194:	4638      	mov	r0, r7
 8008196:	47c8      	blx	r9
 8008198:	3001      	adds	r0, #1
 800819a:	d103      	bne.n	80081a4 <_printf_common+0xac>
 800819c:	f04f 30ff 	mov.w	r0, #4294967295
 80081a0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80081a4:	3501      	adds	r5, #1
 80081a6:	e7c6      	b.n	8008136 <_printf_common+0x3e>
 80081a8:	18e1      	adds	r1, r4, r3
 80081aa:	1c5a      	adds	r2, r3, #1
 80081ac:	2030      	movs	r0, #48	@ 0x30
 80081ae:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 80081b2:	4422      	add	r2, r4
 80081b4:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 80081b8:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 80081bc:	3302      	adds	r3, #2
 80081be:	e7c7      	b.n	8008150 <_printf_common+0x58>
 80081c0:	2301      	movs	r3, #1
 80081c2:	4622      	mov	r2, r4
 80081c4:	4641      	mov	r1, r8
 80081c6:	4638      	mov	r0, r7
 80081c8:	47c8      	blx	r9
 80081ca:	3001      	adds	r0, #1
 80081cc:	d0e6      	beq.n	800819c <_printf_common+0xa4>
 80081ce:	3601      	adds	r6, #1
 80081d0:	e7d9      	b.n	8008186 <_printf_common+0x8e>
	...

080081d4 <_printf_i>:
 80081d4:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80081d8:	7e0f      	ldrb	r7, [r1, #24]
 80081da:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 80081dc:	2f78      	cmp	r7, #120	@ 0x78
 80081de:	4691      	mov	r9, r2
 80081e0:	4680      	mov	r8, r0
 80081e2:	460c      	mov	r4, r1
 80081e4:	469a      	mov	sl, r3
 80081e6:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 80081ea:	d807      	bhi.n	80081fc <_printf_i+0x28>
 80081ec:	2f62      	cmp	r7, #98	@ 0x62
 80081ee:	d80a      	bhi.n	8008206 <_printf_i+0x32>
 80081f0:	2f00      	cmp	r7, #0
 80081f2:	f000 80d2 	beq.w	800839a <_printf_i+0x1c6>
 80081f6:	2f58      	cmp	r7, #88	@ 0x58
 80081f8:	f000 80b9 	beq.w	800836e <_printf_i+0x19a>
 80081fc:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8008200:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8008204:	e03a      	b.n	800827c <_printf_i+0xa8>
 8008206:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 800820a:	2b15      	cmp	r3, #21
 800820c:	d8f6      	bhi.n	80081fc <_printf_i+0x28>
 800820e:	a101      	add	r1, pc, #4	@ (adr r1, 8008214 <_printf_i+0x40>)
 8008210:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8008214:	0800826d 	.word	0x0800826d
 8008218:	08008281 	.word	0x08008281
 800821c:	080081fd 	.word	0x080081fd
 8008220:	080081fd 	.word	0x080081fd
 8008224:	080081fd 	.word	0x080081fd
 8008228:	080081fd 	.word	0x080081fd
 800822c:	08008281 	.word	0x08008281
 8008230:	080081fd 	.word	0x080081fd
 8008234:	080081fd 	.word	0x080081fd
 8008238:	080081fd 	.word	0x080081fd
 800823c:	080081fd 	.word	0x080081fd
 8008240:	08008381 	.word	0x08008381
 8008244:	080082ab 	.word	0x080082ab
 8008248:	0800833b 	.word	0x0800833b
 800824c:	080081fd 	.word	0x080081fd
 8008250:	080081fd 	.word	0x080081fd
 8008254:	080083a3 	.word	0x080083a3
 8008258:	080081fd 	.word	0x080081fd
 800825c:	080082ab 	.word	0x080082ab
 8008260:	080081fd 	.word	0x080081fd
 8008264:	080081fd 	.word	0x080081fd
 8008268:	08008343 	.word	0x08008343
 800826c:	6833      	ldr	r3, [r6, #0]
 800826e:	1d1a      	adds	r2, r3, #4
 8008270:	681b      	ldr	r3, [r3, #0]
 8008272:	6032      	str	r2, [r6, #0]
 8008274:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8008278:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 800827c:	2301      	movs	r3, #1
 800827e:	e09d      	b.n	80083bc <_printf_i+0x1e8>
 8008280:	6833      	ldr	r3, [r6, #0]
 8008282:	6820      	ldr	r0, [r4, #0]
 8008284:	1d19      	adds	r1, r3, #4
 8008286:	6031      	str	r1, [r6, #0]
 8008288:	0606      	lsls	r6, r0, #24
 800828a:	d501      	bpl.n	8008290 <_printf_i+0xbc>
 800828c:	681d      	ldr	r5, [r3, #0]
 800828e:	e003      	b.n	8008298 <_printf_i+0xc4>
 8008290:	0645      	lsls	r5, r0, #25
 8008292:	d5fb      	bpl.n	800828c <_printf_i+0xb8>
 8008294:	f9b3 5000 	ldrsh.w	r5, [r3]
 8008298:	2d00      	cmp	r5, #0
 800829a:	da03      	bge.n	80082a4 <_printf_i+0xd0>
 800829c:	232d      	movs	r3, #45	@ 0x2d
 800829e:	426d      	negs	r5, r5
 80082a0:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80082a4:	4859      	ldr	r0, [pc, #356]	@ (800840c <_printf_i+0x238>)
 80082a6:	230a      	movs	r3, #10
 80082a8:	e011      	b.n	80082ce <_printf_i+0xfa>
 80082aa:	6821      	ldr	r1, [r4, #0]
 80082ac:	6833      	ldr	r3, [r6, #0]
 80082ae:	0608      	lsls	r0, r1, #24
 80082b0:	f853 5b04 	ldr.w	r5, [r3], #4
 80082b4:	d402      	bmi.n	80082bc <_printf_i+0xe8>
 80082b6:	0649      	lsls	r1, r1, #25
 80082b8:	bf48      	it	mi
 80082ba:	b2ad      	uxthmi	r5, r5
 80082bc:	2f6f      	cmp	r7, #111	@ 0x6f
 80082be:	4853      	ldr	r0, [pc, #332]	@ (800840c <_printf_i+0x238>)
 80082c0:	6033      	str	r3, [r6, #0]
 80082c2:	bf14      	ite	ne
 80082c4:	230a      	movne	r3, #10
 80082c6:	2308      	moveq	r3, #8
 80082c8:	2100      	movs	r1, #0
 80082ca:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 80082ce:	6866      	ldr	r6, [r4, #4]
 80082d0:	60a6      	str	r6, [r4, #8]
 80082d2:	2e00      	cmp	r6, #0
 80082d4:	bfa2      	ittt	ge
 80082d6:	6821      	ldrge	r1, [r4, #0]
 80082d8:	f021 0104 	bicge.w	r1, r1, #4
 80082dc:	6021      	strge	r1, [r4, #0]
 80082de:	b90d      	cbnz	r5, 80082e4 <_printf_i+0x110>
 80082e0:	2e00      	cmp	r6, #0
 80082e2:	d04b      	beq.n	800837c <_printf_i+0x1a8>
 80082e4:	4616      	mov	r6, r2
 80082e6:	fbb5 f1f3 	udiv	r1, r5, r3
 80082ea:	fb03 5711 	mls	r7, r3, r1, r5
 80082ee:	5dc7      	ldrb	r7, [r0, r7]
 80082f0:	f806 7d01 	strb.w	r7, [r6, #-1]!
 80082f4:	462f      	mov	r7, r5
 80082f6:	42bb      	cmp	r3, r7
 80082f8:	460d      	mov	r5, r1
 80082fa:	d9f4      	bls.n	80082e6 <_printf_i+0x112>
 80082fc:	2b08      	cmp	r3, #8
 80082fe:	d10b      	bne.n	8008318 <_printf_i+0x144>
 8008300:	6823      	ldr	r3, [r4, #0]
 8008302:	07df      	lsls	r7, r3, #31
 8008304:	d508      	bpl.n	8008318 <_printf_i+0x144>
 8008306:	6923      	ldr	r3, [r4, #16]
 8008308:	6861      	ldr	r1, [r4, #4]
 800830a:	4299      	cmp	r1, r3
 800830c:	bfde      	ittt	le
 800830e:	2330      	movle	r3, #48	@ 0x30
 8008310:	f806 3c01 	strble.w	r3, [r6, #-1]
 8008314:	f106 36ff 	addle.w	r6, r6, #4294967295
 8008318:	1b92      	subs	r2, r2, r6
 800831a:	6122      	str	r2, [r4, #16]
 800831c:	f8cd a000 	str.w	sl, [sp]
 8008320:	464b      	mov	r3, r9
 8008322:	aa03      	add	r2, sp, #12
 8008324:	4621      	mov	r1, r4
 8008326:	4640      	mov	r0, r8
 8008328:	f7ff fee6 	bl	80080f8 <_printf_common>
 800832c:	3001      	adds	r0, #1
 800832e:	d14a      	bne.n	80083c6 <_printf_i+0x1f2>
 8008330:	f04f 30ff 	mov.w	r0, #4294967295
 8008334:	b004      	add	sp, #16
 8008336:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800833a:	6823      	ldr	r3, [r4, #0]
 800833c:	f043 0320 	orr.w	r3, r3, #32
 8008340:	6023      	str	r3, [r4, #0]
 8008342:	4833      	ldr	r0, [pc, #204]	@ (8008410 <_printf_i+0x23c>)
 8008344:	2778      	movs	r7, #120	@ 0x78
 8008346:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 800834a:	6823      	ldr	r3, [r4, #0]
 800834c:	6831      	ldr	r1, [r6, #0]
 800834e:	061f      	lsls	r7, r3, #24
 8008350:	f851 5b04 	ldr.w	r5, [r1], #4
 8008354:	d402      	bmi.n	800835c <_printf_i+0x188>
 8008356:	065f      	lsls	r7, r3, #25
 8008358:	bf48      	it	mi
 800835a:	b2ad      	uxthmi	r5, r5
 800835c:	6031      	str	r1, [r6, #0]
 800835e:	07d9      	lsls	r1, r3, #31
 8008360:	bf44      	itt	mi
 8008362:	f043 0320 	orrmi.w	r3, r3, #32
 8008366:	6023      	strmi	r3, [r4, #0]
 8008368:	b11d      	cbz	r5, 8008372 <_printf_i+0x19e>
 800836a:	2310      	movs	r3, #16
 800836c:	e7ac      	b.n	80082c8 <_printf_i+0xf4>
 800836e:	4827      	ldr	r0, [pc, #156]	@ (800840c <_printf_i+0x238>)
 8008370:	e7e9      	b.n	8008346 <_printf_i+0x172>
 8008372:	6823      	ldr	r3, [r4, #0]
 8008374:	f023 0320 	bic.w	r3, r3, #32
 8008378:	6023      	str	r3, [r4, #0]
 800837a:	e7f6      	b.n	800836a <_printf_i+0x196>
 800837c:	4616      	mov	r6, r2
 800837e:	e7bd      	b.n	80082fc <_printf_i+0x128>
 8008380:	6833      	ldr	r3, [r6, #0]
 8008382:	6825      	ldr	r5, [r4, #0]
 8008384:	6961      	ldr	r1, [r4, #20]
 8008386:	1d18      	adds	r0, r3, #4
 8008388:	6030      	str	r0, [r6, #0]
 800838a:	062e      	lsls	r6, r5, #24
 800838c:	681b      	ldr	r3, [r3, #0]
 800838e:	d501      	bpl.n	8008394 <_printf_i+0x1c0>
 8008390:	6019      	str	r1, [r3, #0]
 8008392:	e002      	b.n	800839a <_printf_i+0x1c6>
 8008394:	0668      	lsls	r0, r5, #25
 8008396:	d5fb      	bpl.n	8008390 <_printf_i+0x1bc>
 8008398:	8019      	strh	r1, [r3, #0]
 800839a:	2300      	movs	r3, #0
 800839c:	6123      	str	r3, [r4, #16]
 800839e:	4616      	mov	r6, r2
 80083a0:	e7bc      	b.n	800831c <_printf_i+0x148>
 80083a2:	6833      	ldr	r3, [r6, #0]
 80083a4:	1d1a      	adds	r2, r3, #4
 80083a6:	6032      	str	r2, [r6, #0]
 80083a8:	681e      	ldr	r6, [r3, #0]
 80083aa:	6862      	ldr	r2, [r4, #4]
 80083ac:	2100      	movs	r1, #0
 80083ae:	4630      	mov	r0, r6
 80083b0:	f7f7 ff0e 	bl	80001d0 <memchr>
 80083b4:	b108      	cbz	r0, 80083ba <_printf_i+0x1e6>
 80083b6:	1b80      	subs	r0, r0, r6
 80083b8:	6060      	str	r0, [r4, #4]
 80083ba:	6863      	ldr	r3, [r4, #4]
 80083bc:	6123      	str	r3, [r4, #16]
 80083be:	2300      	movs	r3, #0
 80083c0:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80083c4:	e7aa      	b.n	800831c <_printf_i+0x148>
 80083c6:	6923      	ldr	r3, [r4, #16]
 80083c8:	4632      	mov	r2, r6
 80083ca:	4649      	mov	r1, r9
 80083cc:	4640      	mov	r0, r8
 80083ce:	47d0      	blx	sl
 80083d0:	3001      	adds	r0, #1
 80083d2:	d0ad      	beq.n	8008330 <_printf_i+0x15c>
 80083d4:	6823      	ldr	r3, [r4, #0]
 80083d6:	079b      	lsls	r3, r3, #30
 80083d8:	d413      	bmi.n	8008402 <_printf_i+0x22e>
 80083da:	68e0      	ldr	r0, [r4, #12]
 80083dc:	9b03      	ldr	r3, [sp, #12]
 80083de:	4298      	cmp	r0, r3
 80083e0:	bfb8      	it	lt
 80083e2:	4618      	movlt	r0, r3
 80083e4:	e7a6      	b.n	8008334 <_printf_i+0x160>
 80083e6:	2301      	movs	r3, #1
 80083e8:	4632      	mov	r2, r6
 80083ea:	4649      	mov	r1, r9
 80083ec:	4640      	mov	r0, r8
 80083ee:	47d0      	blx	sl
 80083f0:	3001      	adds	r0, #1
 80083f2:	d09d      	beq.n	8008330 <_printf_i+0x15c>
 80083f4:	3501      	adds	r5, #1
 80083f6:	68e3      	ldr	r3, [r4, #12]
 80083f8:	9903      	ldr	r1, [sp, #12]
 80083fa:	1a5b      	subs	r3, r3, r1
 80083fc:	42ab      	cmp	r3, r5
 80083fe:	dcf2      	bgt.n	80083e6 <_printf_i+0x212>
 8008400:	e7eb      	b.n	80083da <_printf_i+0x206>
 8008402:	2500      	movs	r5, #0
 8008404:	f104 0619 	add.w	r6, r4, #25
 8008408:	e7f5      	b.n	80083f6 <_printf_i+0x222>
 800840a:	bf00      	nop
 800840c:	0800a7b7 	.word	0x0800a7b7
 8008410:	0800a7c8 	.word	0x0800a7c8

08008414 <std>:
 8008414:	2300      	movs	r3, #0
 8008416:	b510      	push	{r4, lr}
 8008418:	4604      	mov	r4, r0
 800841a:	e9c0 3300 	strd	r3, r3, [r0]
 800841e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8008422:	6083      	str	r3, [r0, #8]
 8008424:	8181      	strh	r1, [r0, #12]
 8008426:	6643      	str	r3, [r0, #100]	@ 0x64
 8008428:	81c2      	strh	r2, [r0, #14]
 800842a:	6183      	str	r3, [r0, #24]
 800842c:	4619      	mov	r1, r3
 800842e:	2208      	movs	r2, #8
 8008430:	305c      	adds	r0, #92	@ 0x5c
 8008432:	f000 f906 	bl	8008642 <memset>
 8008436:	4b0d      	ldr	r3, [pc, #52]	@ (800846c <std+0x58>)
 8008438:	6263      	str	r3, [r4, #36]	@ 0x24
 800843a:	4b0d      	ldr	r3, [pc, #52]	@ (8008470 <std+0x5c>)
 800843c:	62a3      	str	r3, [r4, #40]	@ 0x28
 800843e:	4b0d      	ldr	r3, [pc, #52]	@ (8008474 <std+0x60>)
 8008440:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8008442:	4b0d      	ldr	r3, [pc, #52]	@ (8008478 <std+0x64>)
 8008444:	6323      	str	r3, [r4, #48]	@ 0x30
 8008446:	4b0d      	ldr	r3, [pc, #52]	@ (800847c <std+0x68>)
 8008448:	6224      	str	r4, [r4, #32]
 800844a:	429c      	cmp	r4, r3
 800844c:	d006      	beq.n	800845c <std+0x48>
 800844e:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 8008452:	4294      	cmp	r4, r2
 8008454:	d002      	beq.n	800845c <std+0x48>
 8008456:	33d0      	adds	r3, #208	@ 0xd0
 8008458:	429c      	cmp	r4, r3
 800845a:	d105      	bne.n	8008468 <std+0x54>
 800845c:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8008460:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8008464:	f000 b97c 	b.w	8008760 <__retarget_lock_init_recursive>
 8008468:	bd10      	pop	{r4, pc}
 800846a:	bf00      	nop
 800846c:	080085bd 	.word	0x080085bd
 8008470:	080085df 	.word	0x080085df
 8008474:	08008617 	.word	0x08008617
 8008478:	0800863b 	.word	0x0800863b
 800847c:	20000548 	.word	0x20000548

08008480 <stdio_exit_handler>:
 8008480:	4a02      	ldr	r2, [pc, #8]	@ (800848c <stdio_exit_handler+0xc>)
 8008482:	4903      	ldr	r1, [pc, #12]	@ (8008490 <stdio_exit_handler+0x10>)
 8008484:	4803      	ldr	r0, [pc, #12]	@ (8008494 <stdio_exit_handler+0x14>)
 8008486:	f000 b869 	b.w	800855c <_fwalk_sglue>
 800848a:	bf00      	nop
 800848c:	2000000c 	.word	0x2000000c
 8008490:	0800a091 	.word	0x0800a091
 8008494:	2000001c 	.word	0x2000001c

08008498 <cleanup_stdio>:
 8008498:	6841      	ldr	r1, [r0, #4]
 800849a:	4b0c      	ldr	r3, [pc, #48]	@ (80084cc <cleanup_stdio+0x34>)
 800849c:	4299      	cmp	r1, r3
 800849e:	b510      	push	{r4, lr}
 80084a0:	4604      	mov	r4, r0
 80084a2:	d001      	beq.n	80084a8 <cleanup_stdio+0x10>
 80084a4:	f001 fdf4 	bl	800a090 <_fflush_r>
 80084a8:	68a1      	ldr	r1, [r4, #8]
 80084aa:	4b09      	ldr	r3, [pc, #36]	@ (80084d0 <cleanup_stdio+0x38>)
 80084ac:	4299      	cmp	r1, r3
 80084ae:	d002      	beq.n	80084b6 <cleanup_stdio+0x1e>
 80084b0:	4620      	mov	r0, r4
 80084b2:	f001 fded 	bl	800a090 <_fflush_r>
 80084b6:	68e1      	ldr	r1, [r4, #12]
 80084b8:	4b06      	ldr	r3, [pc, #24]	@ (80084d4 <cleanup_stdio+0x3c>)
 80084ba:	4299      	cmp	r1, r3
 80084bc:	d004      	beq.n	80084c8 <cleanup_stdio+0x30>
 80084be:	4620      	mov	r0, r4
 80084c0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80084c4:	f001 bde4 	b.w	800a090 <_fflush_r>
 80084c8:	bd10      	pop	{r4, pc}
 80084ca:	bf00      	nop
 80084cc:	20000548 	.word	0x20000548
 80084d0:	200005b0 	.word	0x200005b0
 80084d4:	20000618 	.word	0x20000618

080084d8 <global_stdio_init.part.0>:
 80084d8:	b510      	push	{r4, lr}
 80084da:	4b0b      	ldr	r3, [pc, #44]	@ (8008508 <global_stdio_init.part.0+0x30>)
 80084dc:	4c0b      	ldr	r4, [pc, #44]	@ (800850c <global_stdio_init.part.0+0x34>)
 80084de:	4a0c      	ldr	r2, [pc, #48]	@ (8008510 <global_stdio_init.part.0+0x38>)
 80084e0:	601a      	str	r2, [r3, #0]
 80084e2:	4620      	mov	r0, r4
 80084e4:	2200      	movs	r2, #0
 80084e6:	2104      	movs	r1, #4
 80084e8:	f7ff ff94 	bl	8008414 <std>
 80084ec:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 80084f0:	2201      	movs	r2, #1
 80084f2:	2109      	movs	r1, #9
 80084f4:	f7ff ff8e 	bl	8008414 <std>
 80084f8:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 80084fc:	2202      	movs	r2, #2
 80084fe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8008502:	2112      	movs	r1, #18
 8008504:	f7ff bf86 	b.w	8008414 <std>
 8008508:	20000680 	.word	0x20000680
 800850c:	20000548 	.word	0x20000548
 8008510:	08008481 	.word	0x08008481

08008514 <__sfp_lock_acquire>:
 8008514:	4801      	ldr	r0, [pc, #4]	@ (800851c <__sfp_lock_acquire+0x8>)
 8008516:	f000 b924 	b.w	8008762 <__retarget_lock_acquire_recursive>
 800851a:	bf00      	nop
 800851c:	20000689 	.word	0x20000689

08008520 <__sfp_lock_release>:
 8008520:	4801      	ldr	r0, [pc, #4]	@ (8008528 <__sfp_lock_release+0x8>)
 8008522:	f000 b91f 	b.w	8008764 <__retarget_lock_release_recursive>
 8008526:	bf00      	nop
 8008528:	20000689 	.word	0x20000689

0800852c <__sinit>:
 800852c:	b510      	push	{r4, lr}
 800852e:	4604      	mov	r4, r0
 8008530:	f7ff fff0 	bl	8008514 <__sfp_lock_acquire>
 8008534:	6a23      	ldr	r3, [r4, #32]
 8008536:	b11b      	cbz	r3, 8008540 <__sinit+0x14>
 8008538:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800853c:	f7ff bff0 	b.w	8008520 <__sfp_lock_release>
 8008540:	4b04      	ldr	r3, [pc, #16]	@ (8008554 <__sinit+0x28>)
 8008542:	6223      	str	r3, [r4, #32]
 8008544:	4b04      	ldr	r3, [pc, #16]	@ (8008558 <__sinit+0x2c>)
 8008546:	681b      	ldr	r3, [r3, #0]
 8008548:	2b00      	cmp	r3, #0
 800854a:	d1f5      	bne.n	8008538 <__sinit+0xc>
 800854c:	f7ff ffc4 	bl	80084d8 <global_stdio_init.part.0>
 8008550:	e7f2      	b.n	8008538 <__sinit+0xc>
 8008552:	bf00      	nop
 8008554:	08008499 	.word	0x08008499
 8008558:	20000680 	.word	0x20000680

0800855c <_fwalk_sglue>:
 800855c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8008560:	4607      	mov	r7, r0
 8008562:	4688      	mov	r8, r1
 8008564:	4614      	mov	r4, r2
 8008566:	2600      	movs	r6, #0
 8008568:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 800856c:	f1b9 0901 	subs.w	r9, r9, #1
 8008570:	d505      	bpl.n	800857e <_fwalk_sglue+0x22>
 8008572:	6824      	ldr	r4, [r4, #0]
 8008574:	2c00      	cmp	r4, #0
 8008576:	d1f7      	bne.n	8008568 <_fwalk_sglue+0xc>
 8008578:	4630      	mov	r0, r6
 800857a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800857e:	89ab      	ldrh	r3, [r5, #12]
 8008580:	2b01      	cmp	r3, #1
 8008582:	d907      	bls.n	8008594 <_fwalk_sglue+0x38>
 8008584:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8008588:	3301      	adds	r3, #1
 800858a:	d003      	beq.n	8008594 <_fwalk_sglue+0x38>
 800858c:	4629      	mov	r1, r5
 800858e:	4638      	mov	r0, r7
 8008590:	47c0      	blx	r8
 8008592:	4306      	orrs	r6, r0
 8008594:	3568      	adds	r5, #104	@ 0x68
 8008596:	e7e9      	b.n	800856c <_fwalk_sglue+0x10>

08008598 <iprintf>:
 8008598:	b40f      	push	{r0, r1, r2, r3}
 800859a:	b507      	push	{r0, r1, r2, lr}
 800859c:	4906      	ldr	r1, [pc, #24]	@ (80085b8 <iprintf+0x20>)
 800859e:	ab04      	add	r3, sp, #16
 80085a0:	6808      	ldr	r0, [r1, #0]
 80085a2:	f853 2b04 	ldr.w	r2, [r3], #4
 80085a6:	6881      	ldr	r1, [r0, #8]
 80085a8:	9301      	str	r3, [sp, #4]
 80085aa:	f001 fbd5 	bl	8009d58 <_vfiprintf_r>
 80085ae:	b003      	add	sp, #12
 80085b0:	f85d eb04 	ldr.w	lr, [sp], #4
 80085b4:	b004      	add	sp, #16
 80085b6:	4770      	bx	lr
 80085b8:	20000018 	.word	0x20000018

080085bc <__sread>:
 80085bc:	b510      	push	{r4, lr}
 80085be:	460c      	mov	r4, r1
 80085c0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80085c4:	f000 f87e 	bl	80086c4 <_read_r>
 80085c8:	2800      	cmp	r0, #0
 80085ca:	bfab      	itete	ge
 80085cc:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 80085ce:	89a3      	ldrhlt	r3, [r4, #12]
 80085d0:	181b      	addge	r3, r3, r0
 80085d2:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 80085d6:	bfac      	ite	ge
 80085d8:	6563      	strge	r3, [r4, #84]	@ 0x54
 80085da:	81a3      	strhlt	r3, [r4, #12]
 80085dc:	bd10      	pop	{r4, pc}

080085de <__swrite>:
 80085de:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80085e2:	461f      	mov	r7, r3
 80085e4:	898b      	ldrh	r3, [r1, #12]
 80085e6:	05db      	lsls	r3, r3, #23
 80085e8:	4605      	mov	r5, r0
 80085ea:	460c      	mov	r4, r1
 80085ec:	4616      	mov	r6, r2
 80085ee:	d505      	bpl.n	80085fc <__swrite+0x1e>
 80085f0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80085f4:	2302      	movs	r3, #2
 80085f6:	2200      	movs	r2, #0
 80085f8:	f000 f852 	bl	80086a0 <_lseek_r>
 80085fc:	89a3      	ldrh	r3, [r4, #12]
 80085fe:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8008602:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8008606:	81a3      	strh	r3, [r4, #12]
 8008608:	4632      	mov	r2, r6
 800860a:	463b      	mov	r3, r7
 800860c:	4628      	mov	r0, r5
 800860e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8008612:	f000 b869 	b.w	80086e8 <_write_r>

08008616 <__sseek>:
 8008616:	b510      	push	{r4, lr}
 8008618:	460c      	mov	r4, r1
 800861a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800861e:	f000 f83f 	bl	80086a0 <_lseek_r>
 8008622:	1c43      	adds	r3, r0, #1
 8008624:	89a3      	ldrh	r3, [r4, #12]
 8008626:	bf15      	itete	ne
 8008628:	6560      	strne	r0, [r4, #84]	@ 0x54
 800862a:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 800862e:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 8008632:	81a3      	strheq	r3, [r4, #12]
 8008634:	bf18      	it	ne
 8008636:	81a3      	strhne	r3, [r4, #12]
 8008638:	bd10      	pop	{r4, pc}

0800863a <__sclose>:
 800863a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800863e:	f000 b81f 	b.w	8008680 <_close_r>

08008642 <memset>:
 8008642:	4402      	add	r2, r0
 8008644:	4603      	mov	r3, r0
 8008646:	4293      	cmp	r3, r2
 8008648:	d100      	bne.n	800864c <memset+0xa>
 800864a:	4770      	bx	lr
 800864c:	f803 1b01 	strb.w	r1, [r3], #1
 8008650:	e7f9      	b.n	8008646 <memset+0x4>

08008652 <strncmp>:
 8008652:	b510      	push	{r4, lr}
 8008654:	b16a      	cbz	r2, 8008672 <strncmp+0x20>
 8008656:	3901      	subs	r1, #1
 8008658:	1884      	adds	r4, r0, r2
 800865a:	f810 2b01 	ldrb.w	r2, [r0], #1
 800865e:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 8008662:	429a      	cmp	r2, r3
 8008664:	d103      	bne.n	800866e <strncmp+0x1c>
 8008666:	42a0      	cmp	r0, r4
 8008668:	d001      	beq.n	800866e <strncmp+0x1c>
 800866a:	2a00      	cmp	r2, #0
 800866c:	d1f5      	bne.n	800865a <strncmp+0x8>
 800866e:	1ad0      	subs	r0, r2, r3
 8008670:	bd10      	pop	{r4, pc}
 8008672:	4610      	mov	r0, r2
 8008674:	e7fc      	b.n	8008670 <strncmp+0x1e>
	...

08008678 <_localeconv_r>:
 8008678:	4800      	ldr	r0, [pc, #0]	@ (800867c <_localeconv_r+0x4>)
 800867a:	4770      	bx	lr
 800867c:	20000158 	.word	0x20000158

08008680 <_close_r>:
 8008680:	b538      	push	{r3, r4, r5, lr}
 8008682:	4d06      	ldr	r5, [pc, #24]	@ (800869c <_close_r+0x1c>)
 8008684:	2300      	movs	r3, #0
 8008686:	4604      	mov	r4, r0
 8008688:	4608      	mov	r0, r1
 800868a:	602b      	str	r3, [r5, #0]
 800868c:	f7fa f822 	bl	80026d4 <_close>
 8008690:	1c43      	adds	r3, r0, #1
 8008692:	d102      	bne.n	800869a <_close_r+0x1a>
 8008694:	682b      	ldr	r3, [r5, #0]
 8008696:	b103      	cbz	r3, 800869a <_close_r+0x1a>
 8008698:	6023      	str	r3, [r4, #0]
 800869a:	bd38      	pop	{r3, r4, r5, pc}
 800869c:	20000684 	.word	0x20000684

080086a0 <_lseek_r>:
 80086a0:	b538      	push	{r3, r4, r5, lr}
 80086a2:	4d07      	ldr	r5, [pc, #28]	@ (80086c0 <_lseek_r+0x20>)
 80086a4:	4604      	mov	r4, r0
 80086a6:	4608      	mov	r0, r1
 80086a8:	4611      	mov	r1, r2
 80086aa:	2200      	movs	r2, #0
 80086ac:	602a      	str	r2, [r5, #0]
 80086ae:	461a      	mov	r2, r3
 80086b0:	f7fa f837 	bl	8002722 <_lseek>
 80086b4:	1c43      	adds	r3, r0, #1
 80086b6:	d102      	bne.n	80086be <_lseek_r+0x1e>
 80086b8:	682b      	ldr	r3, [r5, #0]
 80086ba:	b103      	cbz	r3, 80086be <_lseek_r+0x1e>
 80086bc:	6023      	str	r3, [r4, #0]
 80086be:	bd38      	pop	{r3, r4, r5, pc}
 80086c0:	20000684 	.word	0x20000684

080086c4 <_read_r>:
 80086c4:	b538      	push	{r3, r4, r5, lr}
 80086c6:	4d07      	ldr	r5, [pc, #28]	@ (80086e4 <_read_r+0x20>)
 80086c8:	4604      	mov	r4, r0
 80086ca:	4608      	mov	r0, r1
 80086cc:	4611      	mov	r1, r2
 80086ce:	2200      	movs	r2, #0
 80086d0:	602a      	str	r2, [r5, #0]
 80086d2:	461a      	mov	r2, r3
 80086d4:	f7f9 ffe1 	bl	800269a <_read>
 80086d8:	1c43      	adds	r3, r0, #1
 80086da:	d102      	bne.n	80086e2 <_read_r+0x1e>
 80086dc:	682b      	ldr	r3, [r5, #0]
 80086de:	b103      	cbz	r3, 80086e2 <_read_r+0x1e>
 80086e0:	6023      	str	r3, [r4, #0]
 80086e2:	bd38      	pop	{r3, r4, r5, pc}
 80086e4:	20000684 	.word	0x20000684

080086e8 <_write_r>:
 80086e8:	b538      	push	{r3, r4, r5, lr}
 80086ea:	4d07      	ldr	r5, [pc, #28]	@ (8008708 <_write_r+0x20>)
 80086ec:	4604      	mov	r4, r0
 80086ee:	4608      	mov	r0, r1
 80086f0:	4611      	mov	r1, r2
 80086f2:	2200      	movs	r2, #0
 80086f4:	602a      	str	r2, [r5, #0]
 80086f6:	461a      	mov	r2, r3
 80086f8:	f7f9 fd38 	bl	800216c <_write>
 80086fc:	1c43      	adds	r3, r0, #1
 80086fe:	d102      	bne.n	8008706 <_write_r+0x1e>
 8008700:	682b      	ldr	r3, [r5, #0]
 8008702:	b103      	cbz	r3, 8008706 <_write_r+0x1e>
 8008704:	6023      	str	r3, [r4, #0]
 8008706:	bd38      	pop	{r3, r4, r5, pc}
 8008708:	20000684 	.word	0x20000684

0800870c <__errno>:
 800870c:	4b01      	ldr	r3, [pc, #4]	@ (8008714 <__errno+0x8>)
 800870e:	6818      	ldr	r0, [r3, #0]
 8008710:	4770      	bx	lr
 8008712:	bf00      	nop
 8008714:	20000018 	.word	0x20000018

08008718 <__libc_init_array>:
 8008718:	b570      	push	{r4, r5, r6, lr}
 800871a:	4d0d      	ldr	r5, [pc, #52]	@ (8008750 <__libc_init_array+0x38>)
 800871c:	4c0d      	ldr	r4, [pc, #52]	@ (8008754 <__libc_init_array+0x3c>)
 800871e:	1b64      	subs	r4, r4, r5
 8008720:	10a4      	asrs	r4, r4, #2
 8008722:	2600      	movs	r6, #0
 8008724:	42a6      	cmp	r6, r4
 8008726:	d109      	bne.n	800873c <__libc_init_array+0x24>
 8008728:	4d0b      	ldr	r5, [pc, #44]	@ (8008758 <__libc_init_array+0x40>)
 800872a:	4c0c      	ldr	r4, [pc, #48]	@ (800875c <__libc_init_array+0x44>)
 800872c:	f001 febe 	bl	800a4ac <_init>
 8008730:	1b64      	subs	r4, r4, r5
 8008732:	10a4      	asrs	r4, r4, #2
 8008734:	2600      	movs	r6, #0
 8008736:	42a6      	cmp	r6, r4
 8008738:	d105      	bne.n	8008746 <__libc_init_array+0x2e>
 800873a:	bd70      	pop	{r4, r5, r6, pc}
 800873c:	f855 3b04 	ldr.w	r3, [r5], #4
 8008740:	4798      	blx	r3
 8008742:	3601      	adds	r6, #1
 8008744:	e7ee      	b.n	8008724 <__libc_init_array+0xc>
 8008746:	f855 3b04 	ldr.w	r3, [r5], #4
 800874a:	4798      	blx	r3
 800874c:	3601      	adds	r6, #1
 800874e:	e7f2      	b.n	8008736 <__libc_init_array+0x1e>
 8008750:	0800aa20 	.word	0x0800aa20
 8008754:	0800aa20 	.word	0x0800aa20
 8008758:	0800aa20 	.word	0x0800aa20
 800875c:	0800aa24 	.word	0x0800aa24

08008760 <__retarget_lock_init_recursive>:
 8008760:	4770      	bx	lr

08008762 <__retarget_lock_acquire_recursive>:
 8008762:	4770      	bx	lr

08008764 <__retarget_lock_release_recursive>:
 8008764:	4770      	bx	lr

08008766 <quorem>:
 8008766:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800876a:	6903      	ldr	r3, [r0, #16]
 800876c:	690c      	ldr	r4, [r1, #16]
 800876e:	42a3      	cmp	r3, r4
 8008770:	4607      	mov	r7, r0
 8008772:	db7e      	blt.n	8008872 <quorem+0x10c>
 8008774:	3c01      	subs	r4, #1
 8008776:	f101 0814 	add.w	r8, r1, #20
 800877a:	00a3      	lsls	r3, r4, #2
 800877c:	f100 0514 	add.w	r5, r0, #20
 8008780:	9300      	str	r3, [sp, #0]
 8008782:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8008786:	9301      	str	r3, [sp, #4]
 8008788:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 800878c:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8008790:	3301      	adds	r3, #1
 8008792:	429a      	cmp	r2, r3
 8008794:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 8008798:	fbb2 f6f3 	udiv	r6, r2, r3
 800879c:	d32e      	bcc.n	80087fc <quorem+0x96>
 800879e:	f04f 0a00 	mov.w	sl, #0
 80087a2:	46c4      	mov	ip, r8
 80087a4:	46ae      	mov	lr, r5
 80087a6:	46d3      	mov	fp, sl
 80087a8:	f85c 3b04 	ldr.w	r3, [ip], #4
 80087ac:	b298      	uxth	r0, r3
 80087ae:	fb06 a000 	mla	r0, r6, r0, sl
 80087b2:	0c02      	lsrs	r2, r0, #16
 80087b4:	0c1b      	lsrs	r3, r3, #16
 80087b6:	fb06 2303 	mla	r3, r6, r3, r2
 80087ba:	f8de 2000 	ldr.w	r2, [lr]
 80087be:	b280      	uxth	r0, r0
 80087c0:	b292      	uxth	r2, r2
 80087c2:	1a12      	subs	r2, r2, r0
 80087c4:	445a      	add	r2, fp
 80087c6:	f8de 0000 	ldr.w	r0, [lr]
 80087ca:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 80087ce:	b29b      	uxth	r3, r3
 80087d0:	ebc3 4322 	rsb	r3, r3, r2, asr #16
 80087d4:	eb03 4310 	add.w	r3, r3, r0, lsr #16
 80087d8:	b292      	uxth	r2, r2
 80087da:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
 80087de:	45e1      	cmp	r9, ip
 80087e0:	f84e 2b04 	str.w	r2, [lr], #4
 80087e4:	ea4f 4b23 	mov.w	fp, r3, asr #16
 80087e8:	d2de      	bcs.n	80087a8 <quorem+0x42>
 80087ea:	9b00      	ldr	r3, [sp, #0]
 80087ec:	58eb      	ldr	r3, [r5, r3]
 80087ee:	b92b      	cbnz	r3, 80087fc <quorem+0x96>
 80087f0:	9b01      	ldr	r3, [sp, #4]
 80087f2:	3b04      	subs	r3, #4
 80087f4:	429d      	cmp	r5, r3
 80087f6:	461a      	mov	r2, r3
 80087f8:	d32f      	bcc.n	800885a <quorem+0xf4>
 80087fa:	613c      	str	r4, [r7, #16]
 80087fc:	4638      	mov	r0, r7
 80087fe:	f001 f979 	bl	8009af4 <__mcmp>
 8008802:	2800      	cmp	r0, #0
 8008804:	db25      	blt.n	8008852 <quorem+0xec>
 8008806:	4629      	mov	r1, r5
 8008808:	2000      	movs	r0, #0
 800880a:	f858 2b04 	ldr.w	r2, [r8], #4
 800880e:	f8d1 c000 	ldr.w	ip, [r1]
 8008812:	fa1f fe82 	uxth.w	lr, r2
 8008816:	fa1f f38c 	uxth.w	r3, ip
 800881a:	eba3 030e 	sub.w	r3, r3, lr
 800881e:	4403      	add	r3, r0
 8008820:	0c12      	lsrs	r2, r2, #16
 8008822:	ebc2 4223 	rsb	r2, r2, r3, asr #16
 8008826:	eb02 421c 	add.w	r2, r2, ip, lsr #16
 800882a:	b29b      	uxth	r3, r3
 800882c:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8008830:	45c1      	cmp	r9, r8
 8008832:	f841 3b04 	str.w	r3, [r1], #4
 8008836:	ea4f 4022 	mov.w	r0, r2, asr #16
 800883a:	d2e6      	bcs.n	800880a <quorem+0xa4>
 800883c:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8008840:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8008844:	b922      	cbnz	r2, 8008850 <quorem+0xea>
 8008846:	3b04      	subs	r3, #4
 8008848:	429d      	cmp	r5, r3
 800884a:	461a      	mov	r2, r3
 800884c:	d30b      	bcc.n	8008866 <quorem+0x100>
 800884e:	613c      	str	r4, [r7, #16]
 8008850:	3601      	adds	r6, #1
 8008852:	4630      	mov	r0, r6
 8008854:	b003      	add	sp, #12
 8008856:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800885a:	6812      	ldr	r2, [r2, #0]
 800885c:	3b04      	subs	r3, #4
 800885e:	2a00      	cmp	r2, #0
 8008860:	d1cb      	bne.n	80087fa <quorem+0x94>
 8008862:	3c01      	subs	r4, #1
 8008864:	e7c6      	b.n	80087f4 <quorem+0x8e>
 8008866:	6812      	ldr	r2, [r2, #0]
 8008868:	3b04      	subs	r3, #4
 800886a:	2a00      	cmp	r2, #0
 800886c:	d1ef      	bne.n	800884e <quorem+0xe8>
 800886e:	3c01      	subs	r4, #1
 8008870:	e7ea      	b.n	8008848 <quorem+0xe2>
 8008872:	2000      	movs	r0, #0
 8008874:	e7ee      	b.n	8008854 <quorem+0xee>
	...

08008878 <_dtoa_r>:
 8008878:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800887c:	69c7      	ldr	r7, [r0, #28]
 800887e:	b099      	sub	sp, #100	@ 0x64
 8008880:	ed8d 0b02 	vstr	d0, [sp, #8]
 8008884:	ec55 4b10 	vmov	r4, r5, d0
 8008888:	9e22      	ldr	r6, [sp, #136]	@ 0x88
 800888a:	9109      	str	r1, [sp, #36]	@ 0x24
 800888c:	4683      	mov	fp, r0
 800888e:	920e      	str	r2, [sp, #56]	@ 0x38
 8008890:	9313      	str	r3, [sp, #76]	@ 0x4c
 8008892:	b97f      	cbnz	r7, 80088b4 <_dtoa_r+0x3c>
 8008894:	2010      	movs	r0, #16
 8008896:	f000 fdfd 	bl	8009494 <malloc>
 800889a:	4602      	mov	r2, r0
 800889c:	f8cb 001c 	str.w	r0, [fp, #28]
 80088a0:	b920      	cbnz	r0, 80088ac <_dtoa_r+0x34>
 80088a2:	4ba7      	ldr	r3, [pc, #668]	@ (8008b40 <_dtoa_r+0x2c8>)
 80088a4:	21ef      	movs	r1, #239	@ 0xef
 80088a6:	48a7      	ldr	r0, [pc, #668]	@ (8008b44 <_dtoa_r+0x2cc>)
 80088a8:	f001 fccc 	bl	800a244 <__assert_func>
 80088ac:	e9c0 7701 	strd	r7, r7, [r0, #4]
 80088b0:	6007      	str	r7, [r0, #0]
 80088b2:	60c7      	str	r7, [r0, #12]
 80088b4:	f8db 301c 	ldr.w	r3, [fp, #28]
 80088b8:	6819      	ldr	r1, [r3, #0]
 80088ba:	b159      	cbz	r1, 80088d4 <_dtoa_r+0x5c>
 80088bc:	685a      	ldr	r2, [r3, #4]
 80088be:	604a      	str	r2, [r1, #4]
 80088c0:	2301      	movs	r3, #1
 80088c2:	4093      	lsls	r3, r2
 80088c4:	608b      	str	r3, [r1, #8]
 80088c6:	4658      	mov	r0, fp
 80088c8:	f000 feda 	bl	8009680 <_Bfree>
 80088cc:	f8db 301c 	ldr.w	r3, [fp, #28]
 80088d0:	2200      	movs	r2, #0
 80088d2:	601a      	str	r2, [r3, #0]
 80088d4:	1e2b      	subs	r3, r5, #0
 80088d6:	bfb9      	ittee	lt
 80088d8:	f023 4300 	biclt.w	r3, r3, #2147483648	@ 0x80000000
 80088dc:	9303      	strlt	r3, [sp, #12]
 80088de:	2300      	movge	r3, #0
 80088e0:	6033      	strge	r3, [r6, #0]
 80088e2:	9f03      	ldr	r7, [sp, #12]
 80088e4:	4b98      	ldr	r3, [pc, #608]	@ (8008b48 <_dtoa_r+0x2d0>)
 80088e6:	bfbc      	itt	lt
 80088e8:	2201      	movlt	r2, #1
 80088ea:	6032      	strlt	r2, [r6, #0]
 80088ec:	43bb      	bics	r3, r7
 80088ee:	d112      	bne.n	8008916 <_dtoa_r+0x9e>
 80088f0:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80088f2:	f242 730f 	movw	r3, #9999	@ 0x270f
 80088f6:	6013      	str	r3, [r2, #0]
 80088f8:	f3c7 0313 	ubfx	r3, r7, #0, #20
 80088fc:	4323      	orrs	r3, r4
 80088fe:	f000 854d 	beq.w	800939c <_dtoa_r+0xb24>
 8008902:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8008904:	f8df a254 	ldr.w	sl, [pc, #596]	@ 8008b5c <_dtoa_r+0x2e4>
 8008908:	2b00      	cmp	r3, #0
 800890a:	f000 854f 	beq.w	80093ac <_dtoa_r+0xb34>
 800890e:	f10a 0303 	add.w	r3, sl, #3
 8008912:	f000 bd49 	b.w	80093a8 <_dtoa_r+0xb30>
 8008916:	ed9d 7b02 	vldr	d7, [sp, #8]
 800891a:	2200      	movs	r2, #0
 800891c:	ec51 0b17 	vmov	r0, r1, d7
 8008920:	2300      	movs	r3, #0
 8008922:	ed8d 7b0c 	vstr	d7, [sp, #48]	@ 0x30
 8008926:	f7f8 f8cf 	bl	8000ac8 <__aeabi_dcmpeq>
 800892a:	4680      	mov	r8, r0
 800892c:	b158      	cbz	r0, 8008946 <_dtoa_r+0xce>
 800892e:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8008930:	2301      	movs	r3, #1
 8008932:	6013      	str	r3, [r2, #0]
 8008934:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8008936:	b113      	cbz	r3, 800893e <_dtoa_r+0xc6>
 8008938:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 800893a:	4b84      	ldr	r3, [pc, #528]	@ (8008b4c <_dtoa_r+0x2d4>)
 800893c:	6013      	str	r3, [r2, #0]
 800893e:	f8df a220 	ldr.w	sl, [pc, #544]	@ 8008b60 <_dtoa_r+0x2e8>
 8008942:	f000 bd33 	b.w	80093ac <_dtoa_r+0xb34>
 8008946:	ed9d 0b0c 	vldr	d0, [sp, #48]	@ 0x30
 800894a:	aa16      	add	r2, sp, #88	@ 0x58
 800894c:	a917      	add	r1, sp, #92	@ 0x5c
 800894e:	4658      	mov	r0, fp
 8008950:	f001 f980 	bl	8009c54 <__d2b>
 8008954:	f3c7 560a 	ubfx	r6, r7, #20, #11
 8008958:	4681      	mov	r9, r0
 800895a:	2e00      	cmp	r6, #0
 800895c:	d077      	beq.n	8008a4e <_dtoa_r+0x1d6>
 800895e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8008960:	f8cd 8050 	str.w	r8, [sp, #80]	@ 0x50
 8008964:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8008968:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 800896c:	f043 537f 	orr.w	r3, r3, #1069547520	@ 0x3fc00000
 8008970:	f443 1340 	orr.w	r3, r3, #3145728	@ 0x300000
 8008974:	f2a6 36ff 	subw	r6, r6, #1023	@ 0x3ff
 8008978:	4619      	mov	r1, r3
 800897a:	2200      	movs	r2, #0
 800897c:	4b74      	ldr	r3, [pc, #464]	@ (8008b50 <_dtoa_r+0x2d8>)
 800897e:	f7f7 fc83 	bl	8000288 <__aeabi_dsub>
 8008982:	a369      	add	r3, pc, #420	@ (adr r3, 8008b28 <_dtoa_r+0x2b0>)
 8008984:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008988:	f7f7 fe36 	bl	80005f8 <__aeabi_dmul>
 800898c:	a368      	add	r3, pc, #416	@ (adr r3, 8008b30 <_dtoa_r+0x2b8>)
 800898e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008992:	f7f7 fc7b 	bl	800028c <__adddf3>
 8008996:	4604      	mov	r4, r0
 8008998:	4630      	mov	r0, r6
 800899a:	460d      	mov	r5, r1
 800899c:	f7f7 fdc2 	bl	8000524 <__aeabi_i2d>
 80089a0:	a365      	add	r3, pc, #404	@ (adr r3, 8008b38 <_dtoa_r+0x2c0>)
 80089a2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80089a6:	f7f7 fe27 	bl	80005f8 <__aeabi_dmul>
 80089aa:	4602      	mov	r2, r0
 80089ac:	460b      	mov	r3, r1
 80089ae:	4620      	mov	r0, r4
 80089b0:	4629      	mov	r1, r5
 80089b2:	f7f7 fc6b 	bl	800028c <__adddf3>
 80089b6:	4604      	mov	r4, r0
 80089b8:	460d      	mov	r5, r1
 80089ba:	f7f8 f8cd 	bl	8000b58 <__aeabi_d2iz>
 80089be:	2200      	movs	r2, #0
 80089c0:	4607      	mov	r7, r0
 80089c2:	2300      	movs	r3, #0
 80089c4:	4620      	mov	r0, r4
 80089c6:	4629      	mov	r1, r5
 80089c8:	f7f8 f888 	bl	8000adc <__aeabi_dcmplt>
 80089cc:	b140      	cbz	r0, 80089e0 <_dtoa_r+0x168>
 80089ce:	4638      	mov	r0, r7
 80089d0:	f7f7 fda8 	bl	8000524 <__aeabi_i2d>
 80089d4:	4622      	mov	r2, r4
 80089d6:	462b      	mov	r3, r5
 80089d8:	f7f8 f876 	bl	8000ac8 <__aeabi_dcmpeq>
 80089dc:	b900      	cbnz	r0, 80089e0 <_dtoa_r+0x168>
 80089de:	3f01      	subs	r7, #1
 80089e0:	2f16      	cmp	r7, #22
 80089e2:	d851      	bhi.n	8008a88 <_dtoa_r+0x210>
 80089e4:	4b5b      	ldr	r3, [pc, #364]	@ (8008b54 <_dtoa_r+0x2dc>)
 80089e6:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 80089ea:	e9d3 2300 	ldrd	r2, r3, [r3]
 80089ee:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 80089f2:	f7f8 f873 	bl	8000adc <__aeabi_dcmplt>
 80089f6:	2800      	cmp	r0, #0
 80089f8:	d048      	beq.n	8008a8c <_dtoa_r+0x214>
 80089fa:	3f01      	subs	r7, #1
 80089fc:	2300      	movs	r3, #0
 80089fe:	9312      	str	r3, [sp, #72]	@ 0x48
 8008a00:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8008a02:	1b9b      	subs	r3, r3, r6
 8008a04:	1e5a      	subs	r2, r3, #1
 8008a06:	bf44      	itt	mi
 8008a08:	f1c3 0801 	rsbmi	r8, r3, #1
 8008a0c:	2300      	movmi	r3, #0
 8008a0e:	9208      	str	r2, [sp, #32]
 8008a10:	bf54      	ite	pl
 8008a12:	f04f 0800 	movpl.w	r8, #0
 8008a16:	9308      	strmi	r3, [sp, #32]
 8008a18:	2f00      	cmp	r7, #0
 8008a1a:	db39      	blt.n	8008a90 <_dtoa_r+0x218>
 8008a1c:	9b08      	ldr	r3, [sp, #32]
 8008a1e:	970f      	str	r7, [sp, #60]	@ 0x3c
 8008a20:	443b      	add	r3, r7
 8008a22:	9308      	str	r3, [sp, #32]
 8008a24:	2300      	movs	r3, #0
 8008a26:	930a      	str	r3, [sp, #40]	@ 0x28
 8008a28:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8008a2a:	2b09      	cmp	r3, #9
 8008a2c:	d864      	bhi.n	8008af8 <_dtoa_r+0x280>
 8008a2e:	2b05      	cmp	r3, #5
 8008a30:	bfc4      	itt	gt
 8008a32:	3b04      	subgt	r3, #4
 8008a34:	9309      	strgt	r3, [sp, #36]	@ 0x24
 8008a36:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8008a38:	f1a3 0302 	sub.w	r3, r3, #2
 8008a3c:	bfcc      	ite	gt
 8008a3e:	2400      	movgt	r4, #0
 8008a40:	2401      	movle	r4, #1
 8008a42:	2b03      	cmp	r3, #3
 8008a44:	d863      	bhi.n	8008b0e <_dtoa_r+0x296>
 8008a46:	e8df f003 	tbb	[pc, r3]
 8008a4a:	372a      	.short	0x372a
 8008a4c:	5535      	.short	0x5535
 8008a4e:	e9dd 6316 	ldrd	r6, r3, [sp, #88]	@ 0x58
 8008a52:	441e      	add	r6, r3
 8008a54:	f206 4332 	addw	r3, r6, #1074	@ 0x432
 8008a58:	2b20      	cmp	r3, #32
 8008a5a:	bfc1      	itttt	gt
 8008a5c:	f1c3 0340 	rsbgt	r3, r3, #64	@ 0x40
 8008a60:	409f      	lslgt	r7, r3
 8008a62:	f206 4312 	addwgt	r3, r6, #1042	@ 0x412
 8008a66:	fa24 f303 	lsrgt.w	r3, r4, r3
 8008a6a:	bfd6      	itet	le
 8008a6c:	f1c3 0320 	rsble	r3, r3, #32
 8008a70:	ea47 0003 	orrgt.w	r0, r7, r3
 8008a74:	fa04 f003 	lslle.w	r0, r4, r3
 8008a78:	f7f7 fd44 	bl	8000504 <__aeabi_ui2d>
 8008a7c:	2201      	movs	r2, #1
 8008a7e:	f1a1 73f8 	sub.w	r3, r1, #32505856	@ 0x1f00000
 8008a82:	3e01      	subs	r6, #1
 8008a84:	9214      	str	r2, [sp, #80]	@ 0x50
 8008a86:	e777      	b.n	8008978 <_dtoa_r+0x100>
 8008a88:	2301      	movs	r3, #1
 8008a8a:	e7b8      	b.n	80089fe <_dtoa_r+0x186>
 8008a8c:	9012      	str	r0, [sp, #72]	@ 0x48
 8008a8e:	e7b7      	b.n	8008a00 <_dtoa_r+0x188>
 8008a90:	427b      	negs	r3, r7
 8008a92:	930a      	str	r3, [sp, #40]	@ 0x28
 8008a94:	2300      	movs	r3, #0
 8008a96:	eba8 0807 	sub.w	r8, r8, r7
 8008a9a:	930f      	str	r3, [sp, #60]	@ 0x3c
 8008a9c:	e7c4      	b.n	8008a28 <_dtoa_r+0x1b0>
 8008a9e:	2300      	movs	r3, #0
 8008aa0:	930b      	str	r3, [sp, #44]	@ 0x2c
 8008aa2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8008aa4:	2b00      	cmp	r3, #0
 8008aa6:	dc35      	bgt.n	8008b14 <_dtoa_r+0x29c>
 8008aa8:	2301      	movs	r3, #1
 8008aaa:	9300      	str	r3, [sp, #0]
 8008aac:	9307      	str	r3, [sp, #28]
 8008aae:	461a      	mov	r2, r3
 8008ab0:	920e      	str	r2, [sp, #56]	@ 0x38
 8008ab2:	e00b      	b.n	8008acc <_dtoa_r+0x254>
 8008ab4:	2301      	movs	r3, #1
 8008ab6:	e7f3      	b.n	8008aa0 <_dtoa_r+0x228>
 8008ab8:	2300      	movs	r3, #0
 8008aba:	930b      	str	r3, [sp, #44]	@ 0x2c
 8008abc:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8008abe:	18fb      	adds	r3, r7, r3
 8008ac0:	9300      	str	r3, [sp, #0]
 8008ac2:	3301      	adds	r3, #1
 8008ac4:	2b01      	cmp	r3, #1
 8008ac6:	9307      	str	r3, [sp, #28]
 8008ac8:	bfb8      	it	lt
 8008aca:	2301      	movlt	r3, #1
 8008acc:	f8db 001c 	ldr.w	r0, [fp, #28]
 8008ad0:	2100      	movs	r1, #0
 8008ad2:	2204      	movs	r2, #4
 8008ad4:	f102 0514 	add.w	r5, r2, #20
 8008ad8:	429d      	cmp	r5, r3
 8008ada:	d91f      	bls.n	8008b1c <_dtoa_r+0x2a4>
 8008adc:	6041      	str	r1, [r0, #4]
 8008ade:	4658      	mov	r0, fp
 8008ae0:	f000 fd8e 	bl	8009600 <_Balloc>
 8008ae4:	4682      	mov	sl, r0
 8008ae6:	2800      	cmp	r0, #0
 8008ae8:	d13c      	bne.n	8008b64 <_dtoa_r+0x2ec>
 8008aea:	4b1b      	ldr	r3, [pc, #108]	@ (8008b58 <_dtoa_r+0x2e0>)
 8008aec:	4602      	mov	r2, r0
 8008aee:	f240 11af 	movw	r1, #431	@ 0x1af
 8008af2:	e6d8      	b.n	80088a6 <_dtoa_r+0x2e>
 8008af4:	2301      	movs	r3, #1
 8008af6:	e7e0      	b.n	8008aba <_dtoa_r+0x242>
 8008af8:	2401      	movs	r4, #1
 8008afa:	2300      	movs	r3, #0
 8008afc:	9309      	str	r3, [sp, #36]	@ 0x24
 8008afe:	940b      	str	r4, [sp, #44]	@ 0x2c
 8008b00:	f04f 33ff 	mov.w	r3, #4294967295
 8008b04:	9300      	str	r3, [sp, #0]
 8008b06:	9307      	str	r3, [sp, #28]
 8008b08:	2200      	movs	r2, #0
 8008b0a:	2312      	movs	r3, #18
 8008b0c:	e7d0      	b.n	8008ab0 <_dtoa_r+0x238>
 8008b0e:	2301      	movs	r3, #1
 8008b10:	930b      	str	r3, [sp, #44]	@ 0x2c
 8008b12:	e7f5      	b.n	8008b00 <_dtoa_r+0x288>
 8008b14:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8008b16:	9300      	str	r3, [sp, #0]
 8008b18:	9307      	str	r3, [sp, #28]
 8008b1a:	e7d7      	b.n	8008acc <_dtoa_r+0x254>
 8008b1c:	3101      	adds	r1, #1
 8008b1e:	0052      	lsls	r2, r2, #1
 8008b20:	e7d8      	b.n	8008ad4 <_dtoa_r+0x25c>
 8008b22:	bf00      	nop
 8008b24:	f3af 8000 	nop.w
 8008b28:	636f4361 	.word	0x636f4361
 8008b2c:	3fd287a7 	.word	0x3fd287a7
 8008b30:	8b60c8b3 	.word	0x8b60c8b3
 8008b34:	3fc68a28 	.word	0x3fc68a28
 8008b38:	509f79fb 	.word	0x509f79fb
 8008b3c:	3fd34413 	.word	0x3fd34413
 8008b40:	0800a7e6 	.word	0x0800a7e6
 8008b44:	0800a7fd 	.word	0x0800a7fd
 8008b48:	7ff00000 	.word	0x7ff00000
 8008b4c:	0800a7b6 	.word	0x0800a7b6
 8008b50:	3ff80000 	.word	0x3ff80000
 8008b54:	0800a8f8 	.word	0x0800a8f8
 8008b58:	0800a855 	.word	0x0800a855
 8008b5c:	0800a7e2 	.word	0x0800a7e2
 8008b60:	0800a7b5 	.word	0x0800a7b5
 8008b64:	f8db 301c 	ldr.w	r3, [fp, #28]
 8008b68:	6018      	str	r0, [r3, #0]
 8008b6a:	9b07      	ldr	r3, [sp, #28]
 8008b6c:	2b0e      	cmp	r3, #14
 8008b6e:	f200 80a4 	bhi.w	8008cba <_dtoa_r+0x442>
 8008b72:	2c00      	cmp	r4, #0
 8008b74:	f000 80a1 	beq.w	8008cba <_dtoa_r+0x442>
 8008b78:	2f00      	cmp	r7, #0
 8008b7a:	dd33      	ble.n	8008be4 <_dtoa_r+0x36c>
 8008b7c:	4bad      	ldr	r3, [pc, #692]	@ (8008e34 <_dtoa_r+0x5bc>)
 8008b7e:	f007 020f 	and.w	r2, r7, #15
 8008b82:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8008b86:	ed93 7b00 	vldr	d7, [r3]
 8008b8a:	05f8      	lsls	r0, r7, #23
 8008b8c:	ed8d 7b04 	vstr	d7, [sp, #16]
 8008b90:	ea4f 1427 	mov.w	r4, r7, asr #4
 8008b94:	d516      	bpl.n	8008bc4 <_dtoa_r+0x34c>
 8008b96:	4ba8      	ldr	r3, [pc, #672]	@ (8008e38 <_dtoa_r+0x5c0>)
 8008b98:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8008b9c:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8008ba0:	f7f7 fe54 	bl	800084c <__aeabi_ddiv>
 8008ba4:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8008ba8:	f004 040f 	and.w	r4, r4, #15
 8008bac:	2603      	movs	r6, #3
 8008bae:	4da2      	ldr	r5, [pc, #648]	@ (8008e38 <_dtoa_r+0x5c0>)
 8008bb0:	b954      	cbnz	r4, 8008bc8 <_dtoa_r+0x350>
 8008bb2:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8008bb6:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8008bba:	f7f7 fe47 	bl	800084c <__aeabi_ddiv>
 8008bbe:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8008bc2:	e028      	b.n	8008c16 <_dtoa_r+0x39e>
 8008bc4:	2602      	movs	r6, #2
 8008bc6:	e7f2      	b.n	8008bae <_dtoa_r+0x336>
 8008bc8:	07e1      	lsls	r1, r4, #31
 8008bca:	d508      	bpl.n	8008bde <_dtoa_r+0x366>
 8008bcc:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8008bd0:	e9d5 2300 	ldrd	r2, r3, [r5]
 8008bd4:	f7f7 fd10 	bl	80005f8 <__aeabi_dmul>
 8008bd8:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8008bdc:	3601      	adds	r6, #1
 8008bde:	1064      	asrs	r4, r4, #1
 8008be0:	3508      	adds	r5, #8
 8008be2:	e7e5      	b.n	8008bb0 <_dtoa_r+0x338>
 8008be4:	f000 80d2 	beq.w	8008d8c <_dtoa_r+0x514>
 8008be8:	427c      	negs	r4, r7
 8008bea:	4b92      	ldr	r3, [pc, #584]	@ (8008e34 <_dtoa_r+0x5bc>)
 8008bec:	4d92      	ldr	r5, [pc, #584]	@ (8008e38 <_dtoa_r+0x5c0>)
 8008bee:	f004 020f 	and.w	r2, r4, #15
 8008bf2:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8008bf6:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008bfa:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8008bfe:	f7f7 fcfb 	bl	80005f8 <__aeabi_dmul>
 8008c02:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8008c06:	1124      	asrs	r4, r4, #4
 8008c08:	2300      	movs	r3, #0
 8008c0a:	2602      	movs	r6, #2
 8008c0c:	2c00      	cmp	r4, #0
 8008c0e:	f040 80b2 	bne.w	8008d76 <_dtoa_r+0x4fe>
 8008c12:	2b00      	cmp	r3, #0
 8008c14:	d1d3      	bne.n	8008bbe <_dtoa_r+0x346>
 8008c16:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8008c18:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
 8008c1c:	2b00      	cmp	r3, #0
 8008c1e:	f000 80b7 	beq.w	8008d90 <_dtoa_r+0x518>
 8008c22:	4b86      	ldr	r3, [pc, #536]	@ (8008e3c <_dtoa_r+0x5c4>)
 8008c24:	2200      	movs	r2, #0
 8008c26:	4620      	mov	r0, r4
 8008c28:	4629      	mov	r1, r5
 8008c2a:	f7f7 ff57 	bl	8000adc <__aeabi_dcmplt>
 8008c2e:	2800      	cmp	r0, #0
 8008c30:	f000 80ae 	beq.w	8008d90 <_dtoa_r+0x518>
 8008c34:	9b07      	ldr	r3, [sp, #28]
 8008c36:	2b00      	cmp	r3, #0
 8008c38:	f000 80aa 	beq.w	8008d90 <_dtoa_r+0x518>
 8008c3c:	9b00      	ldr	r3, [sp, #0]
 8008c3e:	2b00      	cmp	r3, #0
 8008c40:	dd37      	ble.n	8008cb2 <_dtoa_r+0x43a>
 8008c42:	1e7b      	subs	r3, r7, #1
 8008c44:	9304      	str	r3, [sp, #16]
 8008c46:	4620      	mov	r0, r4
 8008c48:	4b7d      	ldr	r3, [pc, #500]	@ (8008e40 <_dtoa_r+0x5c8>)
 8008c4a:	2200      	movs	r2, #0
 8008c4c:	4629      	mov	r1, r5
 8008c4e:	f7f7 fcd3 	bl	80005f8 <__aeabi_dmul>
 8008c52:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8008c56:	9c00      	ldr	r4, [sp, #0]
 8008c58:	3601      	adds	r6, #1
 8008c5a:	4630      	mov	r0, r6
 8008c5c:	f7f7 fc62 	bl	8000524 <__aeabi_i2d>
 8008c60:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8008c64:	f7f7 fcc8 	bl	80005f8 <__aeabi_dmul>
 8008c68:	4b76      	ldr	r3, [pc, #472]	@ (8008e44 <_dtoa_r+0x5cc>)
 8008c6a:	2200      	movs	r2, #0
 8008c6c:	f7f7 fb0e 	bl	800028c <__adddf3>
 8008c70:	4605      	mov	r5, r0
 8008c72:	f1a1 7650 	sub.w	r6, r1, #54525952	@ 0x3400000
 8008c76:	2c00      	cmp	r4, #0
 8008c78:	f040 808d 	bne.w	8008d96 <_dtoa_r+0x51e>
 8008c7c:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8008c80:	4b71      	ldr	r3, [pc, #452]	@ (8008e48 <_dtoa_r+0x5d0>)
 8008c82:	2200      	movs	r2, #0
 8008c84:	f7f7 fb00 	bl	8000288 <__aeabi_dsub>
 8008c88:	4602      	mov	r2, r0
 8008c8a:	460b      	mov	r3, r1
 8008c8c:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8008c90:	462a      	mov	r2, r5
 8008c92:	4633      	mov	r3, r6
 8008c94:	f7f7 ff40 	bl	8000b18 <__aeabi_dcmpgt>
 8008c98:	2800      	cmp	r0, #0
 8008c9a:	f040 828b 	bne.w	80091b4 <_dtoa_r+0x93c>
 8008c9e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8008ca2:	462a      	mov	r2, r5
 8008ca4:	f106 4300 	add.w	r3, r6, #2147483648	@ 0x80000000
 8008ca8:	f7f7 ff18 	bl	8000adc <__aeabi_dcmplt>
 8008cac:	2800      	cmp	r0, #0
 8008cae:	f040 8128 	bne.w	8008f02 <_dtoa_r+0x68a>
 8008cb2:	e9dd 340c 	ldrd	r3, r4, [sp, #48]	@ 0x30
 8008cb6:	e9cd 3402 	strd	r3, r4, [sp, #8]
 8008cba:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8008cbc:	2b00      	cmp	r3, #0
 8008cbe:	f2c0 815a 	blt.w	8008f76 <_dtoa_r+0x6fe>
 8008cc2:	2f0e      	cmp	r7, #14
 8008cc4:	f300 8157 	bgt.w	8008f76 <_dtoa_r+0x6fe>
 8008cc8:	4b5a      	ldr	r3, [pc, #360]	@ (8008e34 <_dtoa_r+0x5bc>)
 8008cca:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 8008cce:	ed93 7b00 	vldr	d7, [r3]
 8008cd2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8008cd4:	2b00      	cmp	r3, #0
 8008cd6:	ed8d 7b00 	vstr	d7, [sp]
 8008cda:	da03      	bge.n	8008ce4 <_dtoa_r+0x46c>
 8008cdc:	9b07      	ldr	r3, [sp, #28]
 8008cde:	2b00      	cmp	r3, #0
 8008ce0:	f340 8101 	ble.w	8008ee6 <_dtoa_r+0x66e>
 8008ce4:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
 8008ce8:	4656      	mov	r6, sl
 8008cea:	e9dd 2300 	ldrd	r2, r3, [sp]
 8008cee:	4620      	mov	r0, r4
 8008cf0:	4629      	mov	r1, r5
 8008cf2:	f7f7 fdab 	bl	800084c <__aeabi_ddiv>
 8008cf6:	f7f7 ff2f 	bl	8000b58 <__aeabi_d2iz>
 8008cfa:	4680      	mov	r8, r0
 8008cfc:	f7f7 fc12 	bl	8000524 <__aeabi_i2d>
 8008d00:	e9dd 2300 	ldrd	r2, r3, [sp]
 8008d04:	f7f7 fc78 	bl	80005f8 <__aeabi_dmul>
 8008d08:	4602      	mov	r2, r0
 8008d0a:	460b      	mov	r3, r1
 8008d0c:	4620      	mov	r0, r4
 8008d0e:	4629      	mov	r1, r5
 8008d10:	f108 0430 	add.w	r4, r8, #48	@ 0x30
 8008d14:	f7f7 fab8 	bl	8000288 <__aeabi_dsub>
 8008d18:	f806 4b01 	strb.w	r4, [r6], #1
 8008d1c:	9d07      	ldr	r5, [sp, #28]
 8008d1e:	eba6 040a 	sub.w	r4, r6, sl
 8008d22:	42a5      	cmp	r5, r4
 8008d24:	4602      	mov	r2, r0
 8008d26:	460b      	mov	r3, r1
 8008d28:	f040 8117 	bne.w	8008f5a <_dtoa_r+0x6e2>
 8008d2c:	f7f7 faae 	bl	800028c <__adddf3>
 8008d30:	e9dd 2300 	ldrd	r2, r3, [sp]
 8008d34:	4604      	mov	r4, r0
 8008d36:	460d      	mov	r5, r1
 8008d38:	f7f7 feee 	bl	8000b18 <__aeabi_dcmpgt>
 8008d3c:	2800      	cmp	r0, #0
 8008d3e:	f040 80f9 	bne.w	8008f34 <_dtoa_r+0x6bc>
 8008d42:	e9dd 2300 	ldrd	r2, r3, [sp]
 8008d46:	4620      	mov	r0, r4
 8008d48:	4629      	mov	r1, r5
 8008d4a:	f7f7 febd 	bl	8000ac8 <__aeabi_dcmpeq>
 8008d4e:	b118      	cbz	r0, 8008d58 <_dtoa_r+0x4e0>
 8008d50:	f018 0f01 	tst.w	r8, #1
 8008d54:	f040 80ee 	bne.w	8008f34 <_dtoa_r+0x6bc>
 8008d58:	4649      	mov	r1, r9
 8008d5a:	4658      	mov	r0, fp
 8008d5c:	f000 fc90 	bl	8009680 <_Bfree>
 8008d60:	2300      	movs	r3, #0
 8008d62:	7033      	strb	r3, [r6, #0]
 8008d64:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8008d66:	3701      	adds	r7, #1
 8008d68:	601f      	str	r7, [r3, #0]
 8008d6a:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8008d6c:	2b00      	cmp	r3, #0
 8008d6e:	f000 831d 	beq.w	80093ac <_dtoa_r+0xb34>
 8008d72:	601e      	str	r6, [r3, #0]
 8008d74:	e31a      	b.n	80093ac <_dtoa_r+0xb34>
 8008d76:	07e2      	lsls	r2, r4, #31
 8008d78:	d505      	bpl.n	8008d86 <_dtoa_r+0x50e>
 8008d7a:	e9d5 2300 	ldrd	r2, r3, [r5]
 8008d7e:	f7f7 fc3b 	bl	80005f8 <__aeabi_dmul>
 8008d82:	3601      	adds	r6, #1
 8008d84:	2301      	movs	r3, #1
 8008d86:	1064      	asrs	r4, r4, #1
 8008d88:	3508      	adds	r5, #8
 8008d8a:	e73f      	b.n	8008c0c <_dtoa_r+0x394>
 8008d8c:	2602      	movs	r6, #2
 8008d8e:	e742      	b.n	8008c16 <_dtoa_r+0x39e>
 8008d90:	9c07      	ldr	r4, [sp, #28]
 8008d92:	9704      	str	r7, [sp, #16]
 8008d94:	e761      	b.n	8008c5a <_dtoa_r+0x3e2>
 8008d96:	4b27      	ldr	r3, [pc, #156]	@ (8008e34 <_dtoa_r+0x5bc>)
 8008d98:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8008d9a:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8008d9e:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 8008da2:	4454      	add	r4, sl
 8008da4:	2900      	cmp	r1, #0
 8008da6:	d053      	beq.n	8008e50 <_dtoa_r+0x5d8>
 8008da8:	4928      	ldr	r1, [pc, #160]	@ (8008e4c <_dtoa_r+0x5d4>)
 8008daa:	2000      	movs	r0, #0
 8008dac:	f7f7 fd4e 	bl	800084c <__aeabi_ddiv>
 8008db0:	4633      	mov	r3, r6
 8008db2:	462a      	mov	r2, r5
 8008db4:	f7f7 fa68 	bl	8000288 <__aeabi_dsub>
 8008db8:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8008dbc:	4656      	mov	r6, sl
 8008dbe:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8008dc2:	f7f7 fec9 	bl	8000b58 <__aeabi_d2iz>
 8008dc6:	4605      	mov	r5, r0
 8008dc8:	f7f7 fbac 	bl	8000524 <__aeabi_i2d>
 8008dcc:	4602      	mov	r2, r0
 8008dce:	460b      	mov	r3, r1
 8008dd0:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8008dd4:	f7f7 fa58 	bl	8000288 <__aeabi_dsub>
 8008dd8:	3530      	adds	r5, #48	@ 0x30
 8008dda:	4602      	mov	r2, r0
 8008ddc:	460b      	mov	r3, r1
 8008dde:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8008de2:	f806 5b01 	strb.w	r5, [r6], #1
 8008de6:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8008dea:	f7f7 fe77 	bl	8000adc <__aeabi_dcmplt>
 8008dee:	2800      	cmp	r0, #0
 8008df0:	d171      	bne.n	8008ed6 <_dtoa_r+0x65e>
 8008df2:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8008df6:	4911      	ldr	r1, [pc, #68]	@ (8008e3c <_dtoa_r+0x5c4>)
 8008df8:	2000      	movs	r0, #0
 8008dfa:	f7f7 fa45 	bl	8000288 <__aeabi_dsub>
 8008dfe:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8008e02:	f7f7 fe6b 	bl	8000adc <__aeabi_dcmplt>
 8008e06:	2800      	cmp	r0, #0
 8008e08:	f040 8095 	bne.w	8008f36 <_dtoa_r+0x6be>
 8008e0c:	42a6      	cmp	r6, r4
 8008e0e:	f43f af50 	beq.w	8008cb2 <_dtoa_r+0x43a>
 8008e12:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 8008e16:	4b0a      	ldr	r3, [pc, #40]	@ (8008e40 <_dtoa_r+0x5c8>)
 8008e18:	2200      	movs	r2, #0
 8008e1a:	f7f7 fbed 	bl	80005f8 <__aeabi_dmul>
 8008e1e:	4b08      	ldr	r3, [pc, #32]	@ (8008e40 <_dtoa_r+0x5c8>)
 8008e20:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8008e24:	2200      	movs	r2, #0
 8008e26:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8008e2a:	f7f7 fbe5 	bl	80005f8 <__aeabi_dmul>
 8008e2e:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8008e32:	e7c4      	b.n	8008dbe <_dtoa_r+0x546>
 8008e34:	0800a8f8 	.word	0x0800a8f8
 8008e38:	0800a8d0 	.word	0x0800a8d0
 8008e3c:	3ff00000 	.word	0x3ff00000
 8008e40:	40240000 	.word	0x40240000
 8008e44:	401c0000 	.word	0x401c0000
 8008e48:	40140000 	.word	0x40140000
 8008e4c:	3fe00000 	.word	0x3fe00000
 8008e50:	4631      	mov	r1, r6
 8008e52:	4628      	mov	r0, r5
 8008e54:	f7f7 fbd0 	bl	80005f8 <__aeabi_dmul>
 8008e58:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8008e5c:	9415      	str	r4, [sp, #84]	@ 0x54
 8008e5e:	4656      	mov	r6, sl
 8008e60:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8008e64:	f7f7 fe78 	bl	8000b58 <__aeabi_d2iz>
 8008e68:	4605      	mov	r5, r0
 8008e6a:	f7f7 fb5b 	bl	8000524 <__aeabi_i2d>
 8008e6e:	4602      	mov	r2, r0
 8008e70:	460b      	mov	r3, r1
 8008e72:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8008e76:	f7f7 fa07 	bl	8000288 <__aeabi_dsub>
 8008e7a:	3530      	adds	r5, #48	@ 0x30
 8008e7c:	f806 5b01 	strb.w	r5, [r6], #1
 8008e80:	4602      	mov	r2, r0
 8008e82:	460b      	mov	r3, r1
 8008e84:	42a6      	cmp	r6, r4
 8008e86:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8008e8a:	f04f 0200 	mov.w	r2, #0
 8008e8e:	d124      	bne.n	8008eda <_dtoa_r+0x662>
 8008e90:	4bac      	ldr	r3, [pc, #688]	@ (8009144 <_dtoa_r+0x8cc>)
 8008e92:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 8008e96:	f7f7 f9f9 	bl	800028c <__adddf3>
 8008e9a:	4602      	mov	r2, r0
 8008e9c:	460b      	mov	r3, r1
 8008e9e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8008ea2:	f7f7 fe39 	bl	8000b18 <__aeabi_dcmpgt>
 8008ea6:	2800      	cmp	r0, #0
 8008ea8:	d145      	bne.n	8008f36 <_dtoa_r+0x6be>
 8008eaa:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8008eae:	49a5      	ldr	r1, [pc, #660]	@ (8009144 <_dtoa_r+0x8cc>)
 8008eb0:	2000      	movs	r0, #0
 8008eb2:	f7f7 f9e9 	bl	8000288 <__aeabi_dsub>
 8008eb6:	4602      	mov	r2, r0
 8008eb8:	460b      	mov	r3, r1
 8008eba:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8008ebe:	f7f7 fe0d 	bl	8000adc <__aeabi_dcmplt>
 8008ec2:	2800      	cmp	r0, #0
 8008ec4:	f43f aef5 	beq.w	8008cb2 <_dtoa_r+0x43a>
 8008ec8:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 8008eca:	1e73      	subs	r3, r6, #1
 8008ecc:	9315      	str	r3, [sp, #84]	@ 0x54
 8008ece:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 8008ed2:	2b30      	cmp	r3, #48	@ 0x30
 8008ed4:	d0f8      	beq.n	8008ec8 <_dtoa_r+0x650>
 8008ed6:	9f04      	ldr	r7, [sp, #16]
 8008ed8:	e73e      	b.n	8008d58 <_dtoa_r+0x4e0>
 8008eda:	4b9b      	ldr	r3, [pc, #620]	@ (8009148 <_dtoa_r+0x8d0>)
 8008edc:	f7f7 fb8c 	bl	80005f8 <__aeabi_dmul>
 8008ee0:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8008ee4:	e7bc      	b.n	8008e60 <_dtoa_r+0x5e8>
 8008ee6:	d10c      	bne.n	8008f02 <_dtoa_r+0x68a>
 8008ee8:	4b98      	ldr	r3, [pc, #608]	@ (800914c <_dtoa_r+0x8d4>)
 8008eea:	2200      	movs	r2, #0
 8008eec:	e9dd 0100 	ldrd	r0, r1, [sp]
 8008ef0:	f7f7 fb82 	bl	80005f8 <__aeabi_dmul>
 8008ef4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8008ef8:	f7f7 fe04 	bl	8000b04 <__aeabi_dcmpge>
 8008efc:	2800      	cmp	r0, #0
 8008efe:	f000 8157 	beq.w	80091b0 <_dtoa_r+0x938>
 8008f02:	2400      	movs	r4, #0
 8008f04:	4625      	mov	r5, r4
 8008f06:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8008f08:	43db      	mvns	r3, r3
 8008f0a:	9304      	str	r3, [sp, #16]
 8008f0c:	4656      	mov	r6, sl
 8008f0e:	2700      	movs	r7, #0
 8008f10:	4621      	mov	r1, r4
 8008f12:	4658      	mov	r0, fp
 8008f14:	f000 fbb4 	bl	8009680 <_Bfree>
 8008f18:	2d00      	cmp	r5, #0
 8008f1a:	d0dc      	beq.n	8008ed6 <_dtoa_r+0x65e>
 8008f1c:	b12f      	cbz	r7, 8008f2a <_dtoa_r+0x6b2>
 8008f1e:	42af      	cmp	r7, r5
 8008f20:	d003      	beq.n	8008f2a <_dtoa_r+0x6b2>
 8008f22:	4639      	mov	r1, r7
 8008f24:	4658      	mov	r0, fp
 8008f26:	f000 fbab 	bl	8009680 <_Bfree>
 8008f2a:	4629      	mov	r1, r5
 8008f2c:	4658      	mov	r0, fp
 8008f2e:	f000 fba7 	bl	8009680 <_Bfree>
 8008f32:	e7d0      	b.n	8008ed6 <_dtoa_r+0x65e>
 8008f34:	9704      	str	r7, [sp, #16]
 8008f36:	4633      	mov	r3, r6
 8008f38:	461e      	mov	r6, r3
 8008f3a:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8008f3e:	2a39      	cmp	r2, #57	@ 0x39
 8008f40:	d107      	bne.n	8008f52 <_dtoa_r+0x6da>
 8008f42:	459a      	cmp	sl, r3
 8008f44:	d1f8      	bne.n	8008f38 <_dtoa_r+0x6c0>
 8008f46:	9a04      	ldr	r2, [sp, #16]
 8008f48:	3201      	adds	r2, #1
 8008f4a:	9204      	str	r2, [sp, #16]
 8008f4c:	2230      	movs	r2, #48	@ 0x30
 8008f4e:	f88a 2000 	strb.w	r2, [sl]
 8008f52:	781a      	ldrb	r2, [r3, #0]
 8008f54:	3201      	adds	r2, #1
 8008f56:	701a      	strb	r2, [r3, #0]
 8008f58:	e7bd      	b.n	8008ed6 <_dtoa_r+0x65e>
 8008f5a:	4b7b      	ldr	r3, [pc, #492]	@ (8009148 <_dtoa_r+0x8d0>)
 8008f5c:	2200      	movs	r2, #0
 8008f5e:	f7f7 fb4b 	bl	80005f8 <__aeabi_dmul>
 8008f62:	2200      	movs	r2, #0
 8008f64:	2300      	movs	r3, #0
 8008f66:	4604      	mov	r4, r0
 8008f68:	460d      	mov	r5, r1
 8008f6a:	f7f7 fdad 	bl	8000ac8 <__aeabi_dcmpeq>
 8008f6e:	2800      	cmp	r0, #0
 8008f70:	f43f aebb 	beq.w	8008cea <_dtoa_r+0x472>
 8008f74:	e6f0      	b.n	8008d58 <_dtoa_r+0x4e0>
 8008f76:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8008f78:	2a00      	cmp	r2, #0
 8008f7a:	f000 80db 	beq.w	8009134 <_dtoa_r+0x8bc>
 8008f7e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8008f80:	2a01      	cmp	r2, #1
 8008f82:	f300 80bf 	bgt.w	8009104 <_dtoa_r+0x88c>
 8008f86:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8008f88:	2a00      	cmp	r2, #0
 8008f8a:	f000 80b7 	beq.w	80090fc <_dtoa_r+0x884>
 8008f8e:	f203 4333 	addw	r3, r3, #1075	@ 0x433
 8008f92:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8008f94:	4646      	mov	r6, r8
 8008f96:	9a08      	ldr	r2, [sp, #32]
 8008f98:	2101      	movs	r1, #1
 8008f9a:	441a      	add	r2, r3
 8008f9c:	4658      	mov	r0, fp
 8008f9e:	4498      	add	r8, r3
 8008fa0:	9208      	str	r2, [sp, #32]
 8008fa2:	f000 fc21 	bl	80097e8 <__i2b>
 8008fa6:	4605      	mov	r5, r0
 8008fa8:	b15e      	cbz	r6, 8008fc2 <_dtoa_r+0x74a>
 8008faa:	9b08      	ldr	r3, [sp, #32]
 8008fac:	2b00      	cmp	r3, #0
 8008fae:	dd08      	ble.n	8008fc2 <_dtoa_r+0x74a>
 8008fb0:	42b3      	cmp	r3, r6
 8008fb2:	9a08      	ldr	r2, [sp, #32]
 8008fb4:	bfa8      	it	ge
 8008fb6:	4633      	movge	r3, r6
 8008fb8:	eba8 0803 	sub.w	r8, r8, r3
 8008fbc:	1af6      	subs	r6, r6, r3
 8008fbe:	1ad3      	subs	r3, r2, r3
 8008fc0:	9308      	str	r3, [sp, #32]
 8008fc2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8008fc4:	b1f3      	cbz	r3, 8009004 <_dtoa_r+0x78c>
 8008fc6:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8008fc8:	2b00      	cmp	r3, #0
 8008fca:	f000 80b7 	beq.w	800913c <_dtoa_r+0x8c4>
 8008fce:	b18c      	cbz	r4, 8008ff4 <_dtoa_r+0x77c>
 8008fd0:	4629      	mov	r1, r5
 8008fd2:	4622      	mov	r2, r4
 8008fd4:	4658      	mov	r0, fp
 8008fd6:	f000 fcc7 	bl	8009968 <__pow5mult>
 8008fda:	464a      	mov	r2, r9
 8008fdc:	4601      	mov	r1, r0
 8008fde:	4605      	mov	r5, r0
 8008fe0:	4658      	mov	r0, fp
 8008fe2:	f000 fc17 	bl	8009814 <__multiply>
 8008fe6:	4649      	mov	r1, r9
 8008fe8:	9004      	str	r0, [sp, #16]
 8008fea:	4658      	mov	r0, fp
 8008fec:	f000 fb48 	bl	8009680 <_Bfree>
 8008ff0:	9b04      	ldr	r3, [sp, #16]
 8008ff2:	4699      	mov	r9, r3
 8008ff4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8008ff6:	1b1a      	subs	r2, r3, r4
 8008ff8:	d004      	beq.n	8009004 <_dtoa_r+0x78c>
 8008ffa:	4649      	mov	r1, r9
 8008ffc:	4658      	mov	r0, fp
 8008ffe:	f000 fcb3 	bl	8009968 <__pow5mult>
 8009002:	4681      	mov	r9, r0
 8009004:	2101      	movs	r1, #1
 8009006:	4658      	mov	r0, fp
 8009008:	f000 fbee 	bl	80097e8 <__i2b>
 800900c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800900e:	4604      	mov	r4, r0
 8009010:	2b00      	cmp	r3, #0
 8009012:	f000 81cf 	beq.w	80093b4 <_dtoa_r+0xb3c>
 8009016:	461a      	mov	r2, r3
 8009018:	4601      	mov	r1, r0
 800901a:	4658      	mov	r0, fp
 800901c:	f000 fca4 	bl	8009968 <__pow5mult>
 8009020:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8009022:	2b01      	cmp	r3, #1
 8009024:	4604      	mov	r4, r0
 8009026:	f300 8095 	bgt.w	8009154 <_dtoa_r+0x8dc>
 800902a:	9b02      	ldr	r3, [sp, #8]
 800902c:	2b00      	cmp	r3, #0
 800902e:	f040 8087 	bne.w	8009140 <_dtoa_r+0x8c8>
 8009032:	9b03      	ldr	r3, [sp, #12]
 8009034:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8009038:	2b00      	cmp	r3, #0
 800903a:	f040 8089 	bne.w	8009150 <_dtoa_r+0x8d8>
 800903e:	9b03      	ldr	r3, [sp, #12]
 8009040:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8009044:	0d1b      	lsrs	r3, r3, #20
 8009046:	051b      	lsls	r3, r3, #20
 8009048:	b12b      	cbz	r3, 8009056 <_dtoa_r+0x7de>
 800904a:	9b08      	ldr	r3, [sp, #32]
 800904c:	3301      	adds	r3, #1
 800904e:	9308      	str	r3, [sp, #32]
 8009050:	f108 0801 	add.w	r8, r8, #1
 8009054:	2301      	movs	r3, #1
 8009056:	930a      	str	r3, [sp, #40]	@ 0x28
 8009058:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800905a:	2b00      	cmp	r3, #0
 800905c:	f000 81b0 	beq.w	80093c0 <_dtoa_r+0xb48>
 8009060:	6923      	ldr	r3, [r4, #16]
 8009062:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8009066:	6918      	ldr	r0, [r3, #16]
 8009068:	f000 fb72 	bl	8009750 <__hi0bits>
 800906c:	f1c0 0020 	rsb	r0, r0, #32
 8009070:	9b08      	ldr	r3, [sp, #32]
 8009072:	4418      	add	r0, r3
 8009074:	f010 001f 	ands.w	r0, r0, #31
 8009078:	d077      	beq.n	800916a <_dtoa_r+0x8f2>
 800907a:	f1c0 0320 	rsb	r3, r0, #32
 800907e:	2b04      	cmp	r3, #4
 8009080:	dd6b      	ble.n	800915a <_dtoa_r+0x8e2>
 8009082:	9b08      	ldr	r3, [sp, #32]
 8009084:	f1c0 001c 	rsb	r0, r0, #28
 8009088:	4403      	add	r3, r0
 800908a:	4480      	add	r8, r0
 800908c:	4406      	add	r6, r0
 800908e:	9308      	str	r3, [sp, #32]
 8009090:	f1b8 0f00 	cmp.w	r8, #0
 8009094:	dd05      	ble.n	80090a2 <_dtoa_r+0x82a>
 8009096:	4649      	mov	r1, r9
 8009098:	4642      	mov	r2, r8
 800909a:	4658      	mov	r0, fp
 800909c:	f000 fcbe 	bl	8009a1c <__lshift>
 80090a0:	4681      	mov	r9, r0
 80090a2:	9b08      	ldr	r3, [sp, #32]
 80090a4:	2b00      	cmp	r3, #0
 80090a6:	dd05      	ble.n	80090b4 <_dtoa_r+0x83c>
 80090a8:	4621      	mov	r1, r4
 80090aa:	461a      	mov	r2, r3
 80090ac:	4658      	mov	r0, fp
 80090ae:	f000 fcb5 	bl	8009a1c <__lshift>
 80090b2:	4604      	mov	r4, r0
 80090b4:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 80090b6:	2b00      	cmp	r3, #0
 80090b8:	d059      	beq.n	800916e <_dtoa_r+0x8f6>
 80090ba:	4621      	mov	r1, r4
 80090bc:	4648      	mov	r0, r9
 80090be:	f000 fd19 	bl	8009af4 <__mcmp>
 80090c2:	2800      	cmp	r0, #0
 80090c4:	da53      	bge.n	800916e <_dtoa_r+0x8f6>
 80090c6:	1e7b      	subs	r3, r7, #1
 80090c8:	9304      	str	r3, [sp, #16]
 80090ca:	4649      	mov	r1, r9
 80090cc:	2300      	movs	r3, #0
 80090ce:	220a      	movs	r2, #10
 80090d0:	4658      	mov	r0, fp
 80090d2:	f000 faf7 	bl	80096c4 <__multadd>
 80090d6:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80090d8:	4681      	mov	r9, r0
 80090da:	2b00      	cmp	r3, #0
 80090dc:	f000 8172 	beq.w	80093c4 <_dtoa_r+0xb4c>
 80090e0:	2300      	movs	r3, #0
 80090e2:	4629      	mov	r1, r5
 80090e4:	220a      	movs	r2, #10
 80090e6:	4658      	mov	r0, fp
 80090e8:	f000 faec 	bl	80096c4 <__multadd>
 80090ec:	9b00      	ldr	r3, [sp, #0]
 80090ee:	2b00      	cmp	r3, #0
 80090f0:	4605      	mov	r5, r0
 80090f2:	dc67      	bgt.n	80091c4 <_dtoa_r+0x94c>
 80090f4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80090f6:	2b02      	cmp	r3, #2
 80090f8:	dc41      	bgt.n	800917e <_dtoa_r+0x906>
 80090fa:	e063      	b.n	80091c4 <_dtoa_r+0x94c>
 80090fc:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 80090fe:	f1c3 0336 	rsb	r3, r3, #54	@ 0x36
 8009102:	e746      	b.n	8008f92 <_dtoa_r+0x71a>
 8009104:	9b07      	ldr	r3, [sp, #28]
 8009106:	1e5c      	subs	r4, r3, #1
 8009108:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800910a:	42a3      	cmp	r3, r4
 800910c:	bfbf      	itttt	lt
 800910e:	9b0a      	ldrlt	r3, [sp, #40]	@ 0x28
 8009110:	9a0f      	ldrlt	r2, [sp, #60]	@ 0x3c
 8009112:	940a      	strlt	r4, [sp, #40]	@ 0x28
 8009114:	1ae3      	sublt	r3, r4, r3
 8009116:	bfb4      	ite	lt
 8009118:	18d2      	addlt	r2, r2, r3
 800911a:	1b1c      	subge	r4, r3, r4
 800911c:	9b07      	ldr	r3, [sp, #28]
 800911e:	bfbc      	itt	lt
 8009120:	920f      	strlt	r2, [sp, #60]	@ 0x3c
 8009122:	2400      	movlt	r4, #0
 8009124:	2b00      	cmp	r3, #0
 8009126:	bfb5      	itete	lt
 8009128:	eba8 0603 	sublt.w	r6, r8, r3
 800912c:	9b07      	ldrge	r3, [sp, #28]
 800912e:	2300      	movlt	r3, #0
 8009130:	4646      	movge	r6, r8
 8009132:	e730      	b.n	8008f96 <_dtoa_r+0x71e>
 8009134:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8009136:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8009138:	4646      	mov	r6, r8
 800913a:	e735      	b.n	8008fa8 <_dtoa_r+0x730>
 800913c:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800913e:	e75c      	b.n	8008ffa <_dtoa_r+0x782>
 8009140:	2300      	movs	r3, #0
 8009142:	e788      	b.n	8009056 <_dtoa_r+0x7de>
 8009144:	3fe00000 	.word	0x3fe00000
 8009148:	40240000 	.word	0x40240000
 800914c:	40140000 	.word	0x40140000
 8009150:	9b02      	ldr	r3, [sp, #8]
 8009152:	e780      	b.n	8009056 <_dtoa_r+0x7de>
 8009154:	2300      	movs	r3, #0
 8009156:	930a      	str	r3, [sp, #40]	@ 0x28
 8009158:	e782      	b.n	8009060 <_dtoa_r+0x7e8>
 800915a:	d099      	beq.n	8009090 <_dtoa_r+0x818>
 800915c:	9a08      	ldr	r2, [sp, #32]
 800915e:	331c      	adds	r3, #28
 8009160:	441a      	add	r2, r3
 8009162:	4498      	add	r8, r3
 8009164:	441e      	add	r6, r3
 8009166:	9208      	str	r2, [sp, #32]
 8009168:	e792      	b.n	8009090 <_dtoa_r+0x818>
 800916a:	4603      	mov	r3, r0
 800916c:	e7f6      	b.n	800915c <_dtoa_r+0x8e4>
 800916e:	9b07      	ldr	r3, [sp, #28]
 8009170:	9704      	str	r7, [sp, #16]
 8009172:	2b00      	cmp	r3, #0
 8009174:	dc20      	bgt.n	80091b8 <_dtoa_r+0x940>
 8009176:	9300      	str	r3, [sp, #0]
 8009178:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800917a:	2b02      	cmp	r3, #2
 800917c:	dd1e      	ble.n	80091bc <_dtoa_r+0x944>
 800917e:	9b00      	ldr	r3, [sp, #0]
 8009180:	2b00      	cmp	r3, #0
 8009182:	f47f aec0 	bne.w	8008f06 <_dtoa_r+0x68e>
 8009186:	4621      	mov	r1, r4
 8009188:	2205      	movs	r2, #5
 800918a:	4658      	mov	r0, fp
 800918c:	f000 fa9a 	bl	80096c4 <__multadd>
 8009190:	4601      	mov	r1, r0
 8009192:	4604      	mov	r4, r0
 8009194:	4648      	mov	r0, r9
 8009196:	f000 fcad 	bl	8009af4 <__mcmp>
 800919a:	2800      	cmp	r0, #0
 800919c:	f77f aeb3 	ble.w	8008f06 <_dtoa_r+0x68e>
 80091a0:	4656      	mov	r6, sl
 80091a2:	2331      	movs	r3, #49	@ 0x31
 80091a4:	f806 3b01 	strb.w	r3, [r6], #1
 80091a8:	9b04      	ldr	r3, [sp, #16]
 80091aa:	3301      	adds	r3, #1
 80091ac:	9304      	str	r3, [sp, #16]
 80091ae:	e6ae      	b.n	8008f0e <_dtoa_r+0x696>
 80091b0:	9c07      	ldr	r4, [sp, #28]
 80091b2:	9704      	str	r7, [sp, #16]
 80091b4:	4625      	mov	r5, r4
 80091b6:	e7f3      	b.n	80091a0 <_dtoa_r+0x928>
 80091b8:	9b07      	ldr	r3, [sp, #28]
 80091ba:	9300      	str	r3, [sp, #0]
 80091bc:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80091be:	2b00      	cmp	r3, #0
 80091c0:	f000 8104 	beq.w	80093cc <_dtoa_r+0xb54>
 80091c4:	2e00      	cmp	r6, #0
 80091c6:	dd05      	ble.n	80091d4 <_dtoa_r+0x95c>
 80091c8:	4629      	mov	r1, r5
 80091ca:	4632      	mov	r2, r6
 80091cc:	4658      	mov	r0, fp
 80091ce:	f000 fc25 	bl	8009a1c <__lshift>
 80091d2:	4605      	mov	r5, r0
 80091d4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80091d6:	2b00      	cmp	r3, #0
 80091d8:	d05a      	beq.n	8009290 <_dtoa_r+0xa18>
 80091da:	6869      	ldr	r1, [r5, #4]
 80091dc:	4658      	mov	r0, fp
 80091de:	f000 fa0f 	bl	8009600 <_Balloc>
 80091e2:	4606      	mov	r6, r0
 80091e4:	b928      	cbnz	r0, 80091f2 <_dtoa_r+0x97a>
 80091e6:	4b84      	ldr	r3, [pc, #528]	@ (80093f8 <_dtoa_r+0xb80>)
 80091e8:	4602      	mov	r2, r0
 80091ea:	f240 21ef 	movw	r1, #751	@ 0x2ef
 80091ee:	f7ff bb5a 	b.w	80088a6 <_dtoa_r+0x2e>
 80091f2:	692a      	ldr	r2, [r5, #16]
 80091f4:	3202      	adds	r2, #2
 80091f6:	0092      	lsls	r2, r2, #2
 80091f8:	f105 010c 	add.w	r1, r5, #12
 80091fc:	300c      	adds	r0, #12
 80091fe:	f001 f813 	bl	800a228 <memcpy>
 8009202:	2201      	movs	r2, #1
 8009204:	4631      	mov	r1, r6
 8009206:	4658      	mov	r0, fp
 8009208:	f000 fc08 	bl	8009a1c <__lshift>
 800920c:	f10a 0301 	add.w	r3, sl, #1
 8009210:	9307      	str	r3, [sp, #28]
 8009212:	9b00      	ldr	r3, [sp, #0]
 8009214:	4453      	add	r3, sl
 8009216:	930b      	str	r3, [sp, #44]	@ 0x2c
 8009218:	9b02      	ldr	r3, [sp, #8]
 800921a:	f003 0301 	and.w	r3, r3, #1
 800921e:	462f      	mov	r7, r5
 8009220:	930a      	str	r3, [sp, #40]	@ 0x28
 8009222:	4605      	mov	r5, r0
 8009224:	9b07      	ldr	r3, [sp, #28]
 8009226:	4621      	mov	r1, r4
 8009228:	3b01      	subs	r3, #1
 800922a:	4648      	mov	r0, r9
 800922c:	9300      	str	r3, [sp, #0]
 800922e:	f7ff fa9a 	bl	8008766 <quorem>
 8009232:	4639      	mov	r1, r7
 8009234:	9002      	str	r0, [sp, #8]
 8009236:	f100 0830 	add.w	r8, r0, #48	@ 0x30
 800923a:	4648      	mov	r0, r9
 800923c:	f000 fc5a 	bl	8009af4 <__mcmp>
 8009240:	462a      	mov	r2, r5
 8009242:	9008      	str	r0, [sp, #32]
 8009244:	4621      	mov	r1, r4
 8009246:	4658      	mov	r0, fp
 8009248:	f000 fc70 	bl	8009b2c <__mdiff>
 800924c:	68c2      	ldr	r2, [r0, #12]
 800924e:	4606      	mov	r6, r0
 8009250:	bb02      	cbnz	r2, 8009294 <_dtoa_r+0xa1c>
 8009252:	4601      	mov	r1, r0
 8009254:	4648      	mov	r0, r9
 8009256:	f000 fc4d 	bl	8009af4 <__mcmp>
 800925a:	4602      	mov	r2, r0
 800925c:	4631      	mov	r1, r6
 800925e:	4658      	mov	r0, fp
 8009260:	920e      	str	r2, [sp, #56]	@ 0x38
 8009262:	f000 fa0d 	bl	8009680 <_Bfree>
 8009266:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8009268:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 800926a:	9e07      	ldr	r6, [sp, #28]
 800926c:	ea43 0102 	orr.w	r1, r3, r2
 8009270:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8009272:	4319      	orrs	r1, r3
 8009274:	d110      	bne.n	8009298 <_dtoa_r+0xa20>
 8009276:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 800927a:	d029      	beq.n	80092d0 <_dtoa_r+0xa58>
 800927c:	9b08      	ldr	r3, [sp, #32]
 800927e:	2b00      	cmp	r3, #0
 8009280:	dd02      	ble.n	8009288 <_dtoa_r+0xa10>
 8009282:	9b02      	ldr	r3, [sp, #8]
 8009284:	f103 0831 	add.w	r8, r3, #49	@ 0x31
 8009288:	9b00      	ldr	r3, [sp, #0]
 800928a:	f883 8000 	strb.w	r8, [r3]
 800928e:	e63f      	b.n	8008f10 <_dtoa_r+0x698>
 8009290:	4628      	mov	r0, r5
 8009292:	e7bb      	b.n	800920c <_dtoa_r+0x994>
 8009294:	2201      	movs	r2, #1
 8009296:	e7e1      	b.n	800925c <_dtoa_r+0x9e4>
 8009298:	9b08      	ldr	r3, [sp, #32]
 800929a:	2b00      	cmp	r3, #0
 800929c:	db04      	blt.n	80092a8 <_dtoa_r+0xa30>
 800929e:	9909      	ldr	r1, [sp, #36]	@ 0x24
 80092a0:	430b      	orrs	r3, r1
 80092a2:	990a      	ldr	r1, [sp, #40]	@ 0x28
 80092a4:	430b      	orrs	r3, r1
 80092a6:	d120      	bne.n	80092ea <_dtoa_r+0xa72>
 80092a8:	2a00      	cmp	r2, #0
 80092aa:	dded      	ble.n	8009288 <_dtoa_r+0xa10>
 80092ac:	4649      	mov	r1, r9
 80092ae:	2201      	movs	r2, #1
 80092b0:	4658      	mov	r0, fp
 80092b2:	f000 fbb3 	bl	8009a1c <__lshift>
 80092b6:	4621      	mov	r1, r4
 80092b8:	4681      	mov	r9, r0
 80092ba:	f000 fc1b 	bl	8009af4 <__mcmp>
 80092be:	2800      	cmp	r0, #0
 80092c0:	dc03      	bgt.n	80092ca <_dtoa_r+0xa52>
 80092c2:	d1e1      	bne.n	8009288 <_dtoa_r+0xa10>
 80092c4:	f018 0f01 	tst.w	r8, #1
 80092c8:	d0de      	beq.n	8009288 <_dtoa_r+0xa10>
 80092ca:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 80092ce:	d1d8      	bne.n	8009282 <_dtoa_r+0xa0a>
 80092d0:	9a00      	ldr	r2, [sp, #0]
 80092d2:	2339      	movs	r3, #57	@ 0x39
 80092d4:	7013      	strb	r3, [r2, #0]
 80092d6:	4633      	mov	r3, r6
 80092d8:	461e      	mov	r6, r3
 80092da:	3b01      	subs	r3, #1
 80092dc:	f816 2c01 	ldrb.w	r2, [r6, #-1]
 80092e0:	2a39      	cmp	r2, #57	@ 0x39
 80092e2:	d052      	beq.n	800938a <_dtoa_r+0xb12>
 80092e4:	3201      	adds	r2, #1
 80092e6:	701a      	strb	r2, [r3, #0]
 80092e8:	e612      	b.n	8008f10 <_dtoa_r+0x698>
 80092ea:	2a00      	cmp	r2, #0
 80092ec:	dd07      	ble.n	80092fe <_dtoa_r+0xa86>
 80092ee:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 80092f2:	d0ed      	beq.n	80092d0 <_dtoa_r+0xa58>
 80092f4:	9a00      	ldr	r2, [sp, #0]
 80092f6:	f108 0301 	add.w	r3, r8, #1
 80092fa:	7013      	strb	r3, [r2, #0]
 80092fc:	e608      	b.n	8008f10 <_dtoa_r+0x698>
 80092fe:	9b07      	ldr	r3, [sp, #28]
 8009300:	9a07      	ldr	r2, [sp, #28]
 8009302:	f803 8c01 	strb.w	r8, [r3, #-1]
 8009306:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8009308:	4293      	cmp	r3, r2
 800930a:	d028      	beq.n	800935e <_dtoa_r+0xae6>
 800930c:	4649      	mov	r1, r9
 800930e:	2300      	movs	r3, #0
 8009310:	220a      	movs	r2, #10
 8009312:	4658      	mov	r0, fp
 8009314:	f000 f9d6 	bl	80096c4 <__multadd>
 8009318:	42af      	cmp	r7, r5
 800931a:	4681      	mov	r9, r0
 800931c:	f04f 0300 	mov.w	r3, #0
 8009320:	f04f 020a 	mov.w	r2, #10
 8009324:	4639      	mov	r1, r7
 8009326:	4658      	mov	r0, fp
 8009328:	d107      	bne.n	800933a <_dtoa_r+0xac2>
 800932a:	f000 f9cb 	bl	80096c4 <__multadd>
 800932e:	4607      	mov	r7, r0
 8009330:	4605      	mov	r5, r0
 8009332:	9b07      	ldr	r3, [sp, #28]
 8009334:	3301      	adds	r3, #1
 8009336:	9307      	str	r3, [sp, #28]
 8009338:	e774      	b.n	8009224 <_dtoa_r+0x9ac>
 800933a:	f000 f9c3 	bl	80096c4 <__multadd>
 800933e:	4629      	mov	r1, r5
 8009340:	4607      	mov	r7, r0
 8009342:	2300      	movs	r3, #0
 8009344:	220a      	movs	r2, #10
 8009346:	4658      	mov	r0, fp
 8009348:	f000 f9bc 	bl	80096c4 <__multadd>
 800934c:	4605      	mov	r5, r0
 800934e:	e7f0      	b.n	8009332 <_dtoa_r+0xaba>
 8009350:	9b00      	ldr	r3, [sp, #0]
 8009352:	2b00      	cmp	r3, #0
 8009354:	bfcc      	ite	gt
 8009356:	461e      	movgt	r6, r3
 8009358:	2601      	movle	r6, #1
 800935a:	4456      	add	r6, sl
 800935c:	2700      	movs	r7, #0
 800935e:	4649      	mov	r1, r9
 8009360:	2201      	movs	r2, #1
 8009362:	4658      	mov	r0, fp
 8009364:	f000 fb5a 	bl	8009a1c <__lshift>
 8009368:	4621      	mov	r1, r4
 800936a:	4681      	mov	r9, r0
 800936c:	f000 fbc2 	bl	8009af4 <__mcmp>
 8009370:	2800      	cmp	r0, #0
 8009372:	dcb0      	bgt.n	80092d6 <_dtoa_r+0xa5e>
 8009374:	d102      	bne.n	800937c <_dtoa_r+0xb04>
 8009376:	f018 0f01 	tst.w	r8, #1
 800937a:	d1ac      	bne.n	80092d6 <_dtoa_r+0xa5e>
 800937c:	4633      	mov	r3, r6
 800937e:	461e      	mov	r6, r3
 8009380:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8009384:	2a30      	cmp	r2, #48	@ 0x30
 8009386:	d0fa      	beq.n	800937e <_dtoa_r+0xb06>
 8009388:	e5c2      	b.n	8008f10 <_dtoa_r+0x698>
 800938a:	459a      	cmp	sl, r3
 800938c:	d1a4      	bne.n	80092d8 <_dtoa_r+0xa60>
 800938e:	9b04      	ldr	r3, [sp, #16]
 8009390:	3301      	adds	r3, #1
 8009392:	9304      	str	r3, [sp, #16]
 8009394:	2331      	movs	r3, #49	@ 0x31
 8009396:	f88a 3000 	strb.w	r3, [sl]
 800939a:	e5b9      	b.n	8008f10 <_dtoa_r+0x698>
 800939c:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 800939e:	f8df a05c 	ldr.w	sl, [pc, #92]	@ 80093fc <_dtoa_r+0xb84>
 80093a2:	b11b      	cbz	r3, 80093ac <_dtoa_r+0xb34>
 80093a4:	f10a 0308 	add.w	r3, sl, #8
 80093a8:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 80093aa:	6013      	str	r3, [r2, #0]
 80093ac:	4650      	mov	r0, sl
 80093ae:	b019      	add	sp, #100	@ 0x64
 80093b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80093b4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80093b6:	2b01      	cmp	r3, #1
 80093b8:	f77f ae37 	ble.w	800902a <_dtoa_r+0x7b2>
 80093bc:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80093be:	930a      	str	r3, [sp, #40]	@ 0x28
 80093c0:	2001      	movs	r0, #1
 80093c2:	e655      	b.n	8009070 <_dtoa_r+0x7f8>
 80093c4:	9b00      	ldr	r3, [sp, #0]
 80093c6:	2b00      	cmp	r3, #0
 80093c8:	f77f aed6 	ble.w	8009178 <_dtoa_r+0x900>
 80093cc:	4656      	mov	r6, sl
 80093ce:	4621      	mov	r1, r4
 80093d0:	4648      	mov	r0, r9
 80093d2:	f7ff f9c8 	bl	8008766 <quorem>
 80093d6:	f100 0830 	add.w	r8, r0, #48	@ 0x30
 80093da:	f806 8b01 	strb.w	r8, [r6], #1
 80093de:	9b00      	ldr	r3, [sp, #0]
 80093e0:	eba6 020a 	sub.w	r2, r6, sl
 80093e4:	4293      	cmp	r3, r2
 80093e6:	ddb3      	ble.n	8009350 <_dtoa_r+0xad8>
 80093e8:	4649      	mov	r1, r9
 80093ea:	2300      	movs	r3, #0
 80093ec:	220a      	movs	r2, #10
 80093ee:	4658      	mov	r0, fp
 80093f0:	f000 f968 	bl	80096c4 <__multadd>
 80093f4:	4681      	mov	r9, r0
 80093f6:	e7ea      	b.n	80093ce <_dtoa_r+0xb56>
 80093f8:	0800a855 	.word	0x0800a855
 80093fc:	0800a7d9 	.word	0x0800a7d9

08009400 <_free_r>:
 8009400:	b538      	push	{r3, r4, r5, lr}
 8009402:	4605      	mov	r5, r0
 8009404:	2900      	cmp	r1, #0
 8009406:	d041      	beq.n	800948c <_free_r+0x8c>
 8009408:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800940c:	1f0c      	subs	r4, r1, #4
 800940e:	2b00      	cmp	r3, #0
 8009410:	bfb8      	it	lt
 8009412:	18e4      	addlt	r4, r4, r3
 8009414:	f000 f8e8 	bl	80095e8 <__malloc_lock>
 8009418:	4a1d      	ldr	r2, [pc, #116]	@ (8009490 <_free_r+0x90>)
 800941a:	6813      	ldr	r3, [r2, #0]
 800941c:	b933      	cbnz	r3, 800942c <_free_r+0x2c>
 800941e:	6063      	str	r3, [r4, #4]
 8009420:	6014      	str	r4, [r2, #0]
 8009422:	4628      	mov	r0, r5
 8009424:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8009428:	f000 b8e4 	b.w	80095f4 <__malloc_unlock>
 800942c:	42a3      	cmp	r3, r4
 800942e:	d908      	bls.n	8009442 <_free_r+0x42>
 8009430:	6820      	ldr	r0, [r4, #0]
 8009432:	1821      	adds	r1, r4, r0
 8009434:	428b      	cmp	r3, r1
 8009436:	bf01      	itttt	eq
 8009438:	6819      	ldreq	r1, [r3, #0]
 800943a:	685b      	ldreq	r3, [r3, #4]
 800943c:	1809      	addeq	r1, r1, r0
 800943e:	6021      	streq	r1, [r4, #0]
 8009440:	e7ed      	b.n	800941e <_free_r+0x1e>
 8009442:	461a      	mov	r2, r3
 8009444:	685b      	ldr	r3, [r3, #4]
 8009446:	b10b      	cbz	r3, 800944c <_free_r+0x4c>
 8009448:	42a3      	cmp	r3, r4
 800944a:	d9fa      	bls.n	8009442 <_free_r+0x42>
 800944c:	6811      	ldr	r1, [r2, #0]
 800944e:	1850      	adds	r0, r2, r1
 8009450:	42a0      	cmp	r0, r4
 8009452:	d10b      	bne.n	800946c <_free_r+0x6c>
 8009454:	6820      	ldr	r0, [r4, #0]
 8009456:	4401      	add	r1, r0
 8009458:	1850      	adds	r0, r2, r1
 800945a:	4283      	cmp	r3, r0
 800945c:	6011      	str	r1, [r2, #0]
 800945e:	d1e0      	bne.n	8009422 <_free_r+0x22>
 8009460:	6818      	ldr	r0, [r3, #0]
 8009462:	685b      	ldr	r3, [r3, #4]
 8009464:	6053      	str	r3, [r2, #4]
 8009466:	4408      	add	r0, r1
 8009468:	6010      	str	r0, [r2, #0]
 800946a:	e7da      	b.n	8009422 <_free_r+0x22>
 800946c:	d902      	bls.n	8009474 <_free_r+0x74>
 800946e:	230c      	movs	r3, #12
 8009470:	602b      	str	r3, [r5, #0]
 8009472:	e7d6      	b.n	8009422 <_free_r+0x22>
 8009474:	6820      	ldr	r0, [r4, #0]
 8009476:	1821      	adds	r1, r4, r0
 8009478:	428b      	cmp	r3, r1
 800947a:	bf04      	itt	eq
 800947c:	6819      	ldreq	r1, [r3, #0]
 800947e:	685b      	ldreq	r3, [r3, #4]
 8009480:	6063      	str	r3, [r4, #4]
 8009482:	bf04      	itt	eq
 8009484:	1809      	addeq	r1, r1, r0
 8009486:	6021      	streq	r1, [r4, #0]
 8009488:	6054      	str	r4, [r2, #4]
 800948a:	e7ca      	b.n	8009422 <_free_r+0x22>
 800948c:	bd38      	pop	{r3, r4, r5, pc}
 800948e:	bf00      	nop
 8009490:	20000690 	.word	0x20000690

08009494 <malloc>:
 8009494:	4b02      	ldr	r3, [pc, #8]	@ (80094a0 <malloc+0xc>)
 8009496:	4601      	mov	r1, r0
 8009498:	6818      	ldr	r0, [r3, #0]
 800949a:	f000 b825 	b.w	80094e8 <_malloc_r>
 800949e:	bf00      	nop
 80094a0:	20000018 	.word	0x20000018

080094a4 <sbrk_aligned>:
 80094a4:	b570      	push	{r4, r5, r6, lr}
 80094a6:	4e0f      	ldr	r6, [pc, #60]	@ (80094e4 <sbrk_aligned+0x40>)
 80094a8:	460c      	mov	r4, r1
 80094aa:	6831      	ldr	r1, [r6, #0]
 80094ac:	4605      	mov	r5, r0
 80094ae:	b911      	cbnz	r1, 80094b6 <sbrk_aligned+0x12>
 80094b0:	f000 feaa 	bl	800a208 <_sbrk_r>
 80094b4:	6030      	str	r0, [r6, #0]
 80094b6:	4621      	mov	r1, r4
 80094b8:	4628      	mov	r0, r5
 80094ba:	f000 fea5 	bl	800a208 <_sbrk_r>
 80094be:	1c43      	adds	r3, r0, #1
 80094c0:	d103      	bne.n	80094ca <sbrk_aligned+0x26>
 80094c2:	f04f 34ff 	mov.w	r4, #4294967295
 80094c6:	4620      	mov	r0, r4
 80094c8:	bd70      	pop	{r4, r5, r6, pc}
 80094ca:	1cc4      	adds	r4, r0, #3
 80094cc:	f024 0403 	bic.w	r4, r4, #3
 80094d0:	42a0      	cmp	r0, r4
 80094d2:	d0f8      	beq.n	80094c6 <sbrk_aligned+0x22>
 80094d4:	1a21      	subs	r1, r4, r0
 80094d6:	4628      	mov	r0, r5
 80094d8:	f000 fe96 	bl	800a208 <_sbrk_r>
 80094dc:	3001      	adds	r0, #1
 80094de:	d1f2      	bne.n	80094c6 <sbrk_aligned+0x22>
 80094e0:	e7ef      	b.n	80094c2 <sbrk_aligned+0x1e>
 80094e2:	bf00      	nop
 80094e4:	2000068c 	.word	0x2000068c

080094e8 <_malloc_r>:
 80094e8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80094ec:	1ccd      	adds	r5, r1, #3
 80094ee:	f025 0503 	bic.w	r5, r5, #3
 80094f2:	3508      	adds	r5, #8
 80094f4:	2d0c      	cmp	r5, #12
 80094f6:	bf38      	it	cc
 80094f8:	250c      	movcc	r5, #12
 80094fa:	2d00      	cmp	r5, #0
 80094fc:	4606      	mov	r6, r0
 80094fe:	db01      	blt.n	8009504 <_malloc_r+0x1c>
 8009500:	42a9      	cmp	r1, r5
 8009502:	d904      	bls.n	800950e <_malloc_r+0x26>
 8009504:	230c      	movs	r3, #12
 8009506:	6033      	str	r3, [r6, #0]
 8009508:	2000      	movs	r0, #0
 800950a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800950e:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 80095e4 <_malloc_r+0xfc>
 8009512:	f000 f869 	bl	80095e8 <__malloc_lock>
 8009516:	f8d8 3000 	ldr.w	r3, [r8]
 800951a:	461c      	mov	r4, r3
 800951c:	bb44      	cbnz	r4, 8009570 <_malloc_r+0x88>
 800951e:	4629      	mov	r1, r5
 8009520:	4630      	mov	r0, r6
 8009522:	f7ff ffbf 	bl	80094a4 <sbrk_aligned>
 8009526:	1c43      	adds	r3, r0, #1
 8009528:	4604      	mov	r4, r0
 800952a:	d158      	bne.n	80095de <_malloc_r+0xf6>
 800952c:	f8d8 4000 	ldr.w	r4, [r8]
 8009530:	4627      	mov	r7, r4
 8009532:	2f00      	cmp	r7, #0
 8009534:	d143      	bne.n	80095be <_malloc_r+0xd6>
 8009536:	2c00      	cmp	r4, #0
 8009538:	d04b      	beq.n	80095d2 <_malloc_r+0xea>
 800953a:	6823      	ldr	r3, [r4, #0]
 800953c:	4639      	mov	r1, r7
 800953e:	4630      	mov	r0, r6
 8009540:	eb04 0903 	add.w	r9, r4, r3
 8009544:	f000 fe60 	bl	800a208 <_sbrk_r>
 8009548:	4581      	cmp	r9, r0
 800954a:	d142      	bne.n	80095d2 <_malloc_r+0xea>
 800954c:	6821      	ldr	r1, [r4, #0]
 800954e:	1a6d      	subs	r5, r5, r1
 8009550:	4629      	mov	r1, r5
 8009552:	4630      	mov	r0, r6
 8009554:	f7ff ffa6 	bl	80094a4 <sbrk_aligned>
 8009558:	3001      	adds	r0, #1
 800955a:	d03a      	beq.n	80095d2 <_malloc_r+0xea>
 800955c:	6823      	ldr	r3, [r4, #0]
 800955e:	442b      	add	r3, r5
 8009560:	6023      	str	r3, [r4, #0]
 8009562:	f8d8 3000 	ldr.w	r3, [r8]
 8009566:	685a      	ldr	r2, [r3, #4]
 8009568:	bb62      	cbnz	r2, 80095c4 <_malloc_r+0xdc>
 800956a:	f8c8 7000 	str.w	r7, [r8]
 800956e:	e00f      	b.n	8009590 <_malloc_r+0xa8>
 8009570:	6822      	ldr	r2, [r4, #0]
 8009572:	1b52      	subs	r2, r2, r5
 8009574:	d420      	bmi.n	80095b8 <_malloc_r+0xd0>
 8009576:	2a0b      	cmp	r2, #11
 8009578:	d917      	bls.n	80095aa <_malloc_r+0xc2>
 800957a:	1961      	adds	r1, r4, r5
 800957c:	42a3      	cmp	r3, r4
 800957e:	6025      	str	r5, [r4, #0]
 8009580:	bf18      	it	ne
 8009582:	6059      	strne	r1, [r3, #4]
 8009584:	6863      	ldr	r3, [r4, #4]
 8009586:	bf08      	it	eq
 8009588:	f8c8 1000 	streq.w	r1, [r8]
 800958c:	5162      	str	r2, [r4, r5]
 800958e:	604b      	str	r3, [r1, #4]
 8009590:	4630      	mov	r0, r6
 8009592:	f000 f82f 	bl	80095f4 <__malloc_unlock>
 8009596:	f104 000b 	add.w	r0, r4, #11
 800959a:	1d23      	adds	r3, r4, #4
 800959c:	f020 0007 	bic.w	r0, r0, #7
 80095a0:	1ac2      	subs	r2, r0, r3
 80095a2:	bf1c      	itt	ne
 80095a4:	1a1b      	subne	r3, r3, r0
 80095a6:	50a3      	strne	r3, [r4, r2]
 80095a8:	e7af      	b.n	800950a <_malloc_r+0x22>
 80095aa:	6862      	ldr	r2, [r4, #4]
 80095ac:	42a3      	cmp	r3, r4
 80095ae:	bf0c      	ite	eq
 80095b0:	f8c8 2000 	streq.w	r2, [r8]
 80095b4:	605a      	strne	r2, [r3, #4]
 80095b6:	e7eb      	b.n	8009590 <_malloc_r+0xa8>
 80095b8:	4623      	mov	r3, r4
 80095ba:	6864      	ldr	r4, [r4, #4]
 80095bc:	e7ae      	b.n	800951c <_malloc_r+0x34>
 80095be:	463c      	mov	r4, r7
 80095c0:	687f      	ldr	r7, [r7, #4]
 80095c2:	e7b6      	b.n	8009532 <_malloc_r+0x4a>
 80095c4:	461a      	mov	r2, r3
 80095c6:	685b      	ldr	r3, [r3, #4]
 80095c8:	42a3      	cmp	r3, r4
 80095ca:	d1fb      	bne.n	80095c4 <_malloc_r+0xdc>
 80095cc:	2300      	movs	r3, #0
 80095ce:	6053      	str	r3, [r2, #4]
 80095d0:	e7de      	b.n	8009590 <_malloc_r+0xa8>
 80095d2:	230c      	movs	r3, #12
 80095d4:	6033      	str	r3, [r6, #0]
 80095d6:	4630      	mov	r0, r6
 80095d8:	f000 f80c 	bl	80095f4 <__malloc_unlock>
 80095dc:	e794      	b.n	8009508 <_malloc_r+0x20>
 80095de:	6005      	str	r5, [r0, #0]
 80095e0:	e7d6      	b.n	8009590 <_malloc_r+0xa8>
 80095e2:	bf00      	nop
 80095e4:	20000690 	.word	0x20000690

080095e8 <__malloc_lock>:
 80095e8:	4801      	ldr	r0, [pc, #4]	@ (80095f0 <__malloc_lock+0x8>)
 80095ea:	f7ff b8ba 	b.w	8008762 <__retarget_lock_acquire_recursive>
 80095ee:	bf00      	nop
 80095f0:	20000688 	.word	0x20000688

080095f4 <__malloc_unlock>:
 80095f4:	4801      	ldr	r0, [pc, #4]	@ (80095fc <__malloc_unlock+0x8>)
 80095f6:	f7ff b8b5 	b.w	8008764 <__retarget_lock_release_recursive>
 80095fa:	bf00      	nop
 80095fc:	20000688 	.word	0x20000688

08009600 <_Balloc>:
 8009600:	b570      	push	{r4, r5, r6, lr}
 8009602:	69c6      	ldr	r6, [r0, #28]
 8009604:	4604      	mov	r4, r0
 8009606:	460d      	mov	r5, r1
 8009608:	b976      	cbnz	r6, 8009628 <_Balloc+0x28>
 800960a:	2010      	movs	r0, #16
 800960c:	f7ff ff42 	bl	8009494 <malloc>
 8009610:	4602      	mov	r2, r0
 8009612:	61e0      	str	r0, [r4, #28]
 8009614:	b920      	cbnz	r0, 8009620 <_Balloc+0x20>
 8009616:	4b18      	ldr	r3, [pc, #96]	@ (8009678 <_Balloc+0x78>)
 8009618:	4818      	ldr	r0, [pc, #96]	@ (800967c <_Balloc+0x7c>)
 800961a:	216b      	movs	r1, #107	@ 0x6b
 800961c:	f000 fe12 	bl	800a244 <__assert_func>
 8009620:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8009624:	6006      	str	r6, [r0, #0]
 8009626:	60c6      	str	r6, [r0, #12]
 8009628:	69e6      	ldr	r6, [r4, #28]
 800962a:	68f3      	ldr	r3, [r6, #12]
 800962c:	b183      	cbz	r3, 8009650 <_Balloc+0x50>
 800962e:	69e3      	ldr	r3, [r4, #28]
 8009630:	68db      	ldr	r3, [r3, #12]
 8009632:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 8009636:	b9b8      	cbnz	r0, 8009668 <_Balloc+0x68>
 8009638:	2101      	movs	r1, #1
 800963a:	fa01 f605 	lsl.w	r6, r1, r5
 800963e:	1d72      	adds	r2, r6, #5
 8009640:	0092      	lsls	r2, r2, #2
 8009642:	4620      	mov	r0, r4
 8009644:	f000 fe1c 	bl	800a280 <_calloc_r>
 8009648:	b160      	cbz	r0, 8009664 <_Balloc+0x64>
 800964a:	e9c0 5601 	strd	r5, r6, [r0, #4]
 800964e:	e00e      	b.n	800966e <_Balloc+0x6e>
 8009650:	2221      	movs	r2, #33	@ 0x21
 8009652:	2104      	movs	r1, #4
 8009654:	4620      	mov	r0, r4
 8009656:	f000 fe13 	bl	800a280 <_calloc_r>
 800965a:	69e3      	ldr	r3, [r4, #28]
 800965c:	60f0      	str	r0, [r6, #12]
 800965e:	68db      	ldr	r3, [r3, #12]
 8009660:	2b00      	cmp	r3, #0
 8009662:	d1e4      	bne.n	800962e <_Balloc+0x2e>
 8009664:	2000      	movs	r0, #0
 8009666:	bd70      	pop	{r4, r5, r6, pc}
 8009668:	6802      	ldr	r2, [r0, #0]
 800966a:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 800966e:	2300      	movs	r3, #0
 8009670:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8009674:	e7f7      	b.n	8009666 <_Balloc+0x66>
 8009676:	bf00      	nop
 8009678:	0800a7e6 	.word	0x0800a7e6
 800967c:	0800a866 	.word	0x0800a866

08009680 <_Bfree>:
 8009680:	b570      	push	{r4, r5, r6, lr}
 8009682:	69c6      	ldr	r6, [r0, #28]
 8009684:	4605      	mov	r5, r0
 8009686:	460c      	mov	r4, r1
 8009688:	b976      	cbnz	r6, 80096a8 <_Bfree+0x28>
 800968a:	2010      	movs	r0, #16
 800968c:	f7ff ff02 	bl	8009494 <malloc>
 8009690:	4602      	mov	r2, r0
 8009692:	61e8      	str	r0, [r5, #28]
 8009694:	b920      	cbnz	r0, 80096a0 <_Bfree+0x20>
 8009696:	4b09      	ldr	r3, [pc, #36]	@ (80096bc <_Bfree+0x3c>)
 8009698:	4809      	ldr	r0, [pc, #36]	@ (80096c0 <_Bfree+0x40>)
 800969a:	218f      	movs	r1, #143	@ 0x8f
 800969c:	f000 fdd2 	bl	800a244 <__assert_func>
 80096a0:	e9c0 6601 	strd	r6, r6, [r0, #4]
 80096a4:	6006      	str	r6, [r0, #0]
 80096a6:	60c6      	str	r6, [r0, #12]
 80096a8:	b13c      	cbz	r4, 80096ba <_Bfree+0x3a>
 80096aa:	69eb      	ldr	r3, [r5, #28]
 80096ac:	6862      	ldr	r2, [r4, #4]
 80096ae:	68db      	ldr	r3, [r3, #12]
 80096b0:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80096b4:	6021      	str	r1, [r4, #0]
 80096b6:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 80096ba:	bd70      	pop	{r4, r5, r6, pc}
 80096bc:	0800a7e6 	.word	0x0800a7e6
 80096c0:	0800a866 	.word	0x0800a866

080096c4 <__multadd>:
 80096c4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80096c8:	690d      	ldr	r5, [r1, #16]
 80096ca:	4607      	mov	r7, r0
 80096cc:	460c      	mov	r4, r1
 80096ce:	461e      	mov	r6, r3
 80096d0:	f101 0c14 	add.w	ip, r1, #20
 80096d4:	2000      	movs	r0, #0
 80096d6:	f8dc 3000 	ldr.w	r3, [ip]
 80096da:	b299      	uxth	r1, r3
 80096dc:	fb02 6101 	mla	r1, r2, r1, r6
 80096e0:	0c1e      	lsrs	r6, r3, #16
 80096e2:	0c0b      	lsrs	r3, r1, #16
 80096e4:	fb02 3306 	mla	r3, r2, r6, r3
 80096e8:	b289      	uxth	r1, r1
 80096ea:	3001      	adds	r0, #1
 80096ec:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 80096f0:	4285      	cmp	r5, r0
 80096f2:	f84c 1b04 	str.w	r1, [ip], #4
 80096f6:	ea4f 4613 	mov.w	r6, r3, lsr #16
 80096fa:	dcec      	bgt.n	80096d6 <__multadd+0x12>
 80096fc:	b30e      	cbz	r6, 8009742 <__multadd+0x7e>
 80096fe:	68a3      	ldr	r3, [r4, #8]
 8009700:	42ab      	cmp	r3, r5
 8009702:	dc19      	bgt.n	8009738 <__multadd+0x74>
 8009704:	6861      	ldr	r1, [r4, #4]
 8009706:	4638      	mov	r0, r7
 8009708:	3101      	adds	r1, #1
 800970a:	f7ff ff79 	bl	8009600 <_Balloc>
 800970e:	4680      	mov	r8, r0
 8009710:	b928      	cbnz	r0, 800971e <__multadd+0x5a>
 8009712:	4602      	mov	r2, r0
 8009714:	4b0c      	ldr	r3, [pc, #48]	@ (8009748 <__multadd+0x84>)
 8009716:	480d      	ldr	r0, [pc, #52]	@ (800974c <__multadd+0x88>)
 8009718:	21ba      	movs	r1, #186	@ 0xba
 800971a:	f000 fd93 	bl	800a244 <__assert_func>
 800971e:	6922      	ldr	r2, [r4, #16]
 8009720:	3202      	adds	r2, #2
 8009722:	f104 010c 	add.w	r1, r4, #12
 8009726:	0092      	lsls	r2, r2, #2
 8009728:	300c      	adds	r0, #12
 800972a:	f000 fd7d 	bl	800a228 <memcpy>
 800972e:	4621      	mov	r1, r4
 8009730:	4638      	mov	r0, r7
 8009732:	f7ff ffa5 	bl	8009680 <_Bfree>
 8009736:	4644      	mov	r4, r8
 8009738:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 800973c:	3501      	adds	r5, #1
 800973e:	615e      	str	r6, [r3, #20]
 8009740:	6125      	str	r5, [r4, #16]
 8009742:	4620      	mov	r0, r4
 8009744:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009748:	0800a855 	.word	0x0800a855
 800974c:	0800a866 	.word	0x0800a866

08009750 <__hi0bits>:
 8009750:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
 8009754:	4603      	mov	r3, r0
 8009756:	bf36      	itet	cc
 8009758:	0403      	lslcc	r3, r0, #16
 800975a:	2000      	movcs	r0, #0
 800975c:	2010      	movcc	r0, #16
 800975e:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8009762:	bf3c      	itt	cc
 8009764:	021b      	lslcc	r3, r3, #8
 8009766:	3008      	addcc	r0, #8
 8009768:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 800976c:	bf3c      	itt	cc
 800976e:	011b      	lslcc	r3, r3, #4
 8009770:	3004      	addcc	r0, #4
 8009772:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8009776:	bf3c      	itt	cc
 8009778:	009b      	lslcc	r3, r3, #2
 800977a:	3002      	addcc	r0, #2
 800977c:	2b00      	cmp	r3, #0
 800977e:	db05      	blt.n	800978c <__hi0bits+0x3c>
 8009780:	f013 4f80 	tst.w	r3, #1073741824	@ 0x40000000
 8009784:	f100 0001 	add.w	r0, r0, #1
 8009788:	bf08      	it	eq
 800978a:	2020      	moveq	r0, #32
 800978c:	4770      	bx	lr

0800978e <__lo0bits>:
 800978e:	6803      	ldr	r3, [r0, #0]
 8009790:	4602      	mov	r2, r0
 8009792:	f013 0007 	ands.w	r0, r3, #7
 8009796:	d00b      	beq.n	80097b0 <__lo0bits+0x22>
 8009798:	07d9      	lsls	r1, r3, #31
 800979a:	d421      	bmi.n	80097e0 <__lo0bits+0x52>
 800979c:	0798      	lsls	r0, r3, #30
 800979e:	bf49      	itett	mi
 80097a0:	085b      	lsrmi	r3, r3, #1
 80097a2:	089b      	lsrpl	r3, r3, #2
 80097a4:	2001      	movmi	r0, #1
 80097a6:	6013      	strmi	r3, [r2, #0]
 80097a8:	bf5c      	itt	pl
 80097aa:	6013      	strpl	r3, [r2, #0]
 80097ac:	2002      	movpl	r0, #2
 80097ae:	4770      	bx	lr
 80097b0:	b299      	uxth	r1, r3
 80097b2:	b909      	cbnz	r1, 80097b8 <__lo0bits+0x2a>
 80097b4:	0c1b      	lsrs	r3, r3, #16
 80097b6:	2010      	movs	r0, #16
 80097b8:	b2d9      	uxtb	r1, r3
 80097ba:	b909      	cbnz	r1, 80097c0 <__lo0bits+0x32>
 80097bc:	3008      	adds	r0, #8
 80097be:	0a1b      	lsrs	r3, r3, #8
 80097c0:	0719      	lsls	r1, r3, #28
 80097c2:	bf04      	itt	eq
 80097c4:	091b      	lsreq	r3, r3, #4
 80097c6:	3004      	addeq	r0, #4
 80097c8:	0799      	lsls	r1, r3, #30
 80097ca:	bf04      	itt	eq
 80097cc:	089b      	lsreq	r3, r3, #2
 80097ce:	3002      	addeq	r0, #2
 80097d0:	07d9      	lsls	r1, r3, #31
 80097d2:	d403      	bmi.n	80097dc <__lo0bits+0x4e>
 80097d4:	085b      	lsrs	r3, r3, #1
 80097d6:	f100 0001 	add.w	r0, r0, #1
 80097da:	d003      	beq.n	80097e4 <__lo0bits+0x56>
 80097dc:	6013      	str	r3, [r2, #0]
 80097de:	4770      	bx	lr
 80097e0:	2000      	movs	r0, #0
 80097e2:	4770      	bx	lr
 80097e4:	2020      	movs	r0, #32
 80097e6:	4770      	bx	lr

080097e8 <__i2b>:
 80097e8:	b510      	push	{r4, lr}
 80097ea:	460c      	mov	r4, r1
 80097ec:	2101      	movs	r1, #1
 80097ee:	f7ff ff07 	bl	8009600 <_Balloc>
 80097f2:	4602      	mov	r2, r0
 80097f4:	b928      	cbnz	r0, 8009802 <__i2b+0x1a>
 80097f6:	4b05      	ldr	r3, [pc, #20]	@ (800980c <__i2b+0x24>)
 80097f8:	4805      	ldr	r0, [pc, #20]	@ (8009810 <__i2b+0x28>)
 80097fa:	f240 1145 	movw	r1, #325	@ 0x145
 80097fe:	f000 fd21 	bl	800a244 <__assert_func>
 8009802:	2301      	movs	r3, #1
 8009804:	6144      	str	r4, [r0, #20]
 8009806:	6103      	str	r3, [r0, #16]
 8009808:	bd10      	pop	{r4, pc}
 800980a:	bf00      	nop
 800980c:	0800a855 	.word	0x0800a855
 8009810:	0800a866 	.word	0x0800a866

08009814 <__multiply>:
 8009814:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009818:	4614      	mov	r4, r2
 800981a:	690a      	ldr	r2, [r1, #16]
 800981c:	6923      	ldr	r3, [r4, #16]
 800981e:	429a      	cmp	r2, r3
 8009820:	bfa8      	it	ge
 8009822:	4623      	movge	r3, r4
 8009824:	460f      	mov	r7, r1
 8009826:	bfa4      	itt	ge
 8009828:	460c      	movge	r4, r1
 800982a:	461f      	movge	r7, r3
 800982c:	f8d4 a010 	ldr.w	sl, [r4, #16]
 8009830:	f8d7 9010 	ldr.w	r9, [r7, #16]
 8009834:	68a3      	ldr	r3, [r4, #8]
 8009836:	6861      	ldr	r1, [r4, #4]
 8009838:	eb0a 0609 	add.w	r6, sl, r9
 800983c:	42b3      	cmp	r3, r6
 800983e:	b085      	sub	sp, #20
 8009840:	bfb8      	it	lt
 8009842:	3101      	addlt	r1, #1
 8009844:	f7ff fedc 	bl	8009600 <_Balloc>
 8009848:	b930      	cbnz	r0, 8009858 <__multiply+0x44>
 800984a:	4602      	mov	r2, r0
 800984c:	4b44      	ldr	r3, [pc, #272]	@ (8009960 <__multiply+0x14c>)
 800984e:	4845      	ldr	r0, [pc, #276]	@ (8009964 <__multiply+0x150>)
 8009850:	f44f 71b1 	mov.w	r1, #354	@ 0x162
 8009854:	f000 fcf6 	bl	800a244 <__assert_func>
 8009858:	f100 0514 	add.w	r5, r0, #20
 800985c:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 8009860:	462b      	mov	r3, r5
 8009862:	2200      	movs	r2, #0
 8009864:	4543      	cmp	r3, r8
 8009866:	d321      	bcc.n	80098ac <__multiply+0x98>
 8009868:	f107 0114 	add.w	r1, r7, #20
 800986c:	f104 0214 	add.w	r2, r4, #20
 8009870:	eb02 028a 	add.w	r2, r2, sl, lsl #2
 8009874:	eb01 0389 	add.w	r3, r1, r9, lsl #2
 8009878:	9302      	str	r3, [sp, #8]
 800987a:	1b13      	subs	r3, r2, r4
 800987c:	3b15      	subs	r3, #21
 800987e:	f023 0303 	bic.w	r3, r3, #3
 8009882:	3304      	adds	r3, #4
 8009884:	f104 0715 	add.w	r7, r4, #21
 8009888:	42ba      	cmp	r2, r7
 800988a:	bf38      	it	cc
 800988c:	2304      	movcc	r3, #4
 800988e:	9301      	str	r3, [sp, #4]
 8009890:	9b02      	ldr	r3, [sp, #8]
 8009892:	9103      	str	r1, [sp, #12]
 8009894:	428b      	cmp	r3, r1
 8009896:	d80c      	bhi.n	80098b2 <__multiply+0x9e>
 8009898:	2e00      	cmp	r6, #0
 800989a:	dd03      	ble.n	80098a4 <__multiply+0x90>
 800989c:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 80098a0:	2b00      	cmp	r3, #0
 80098a2:	d05b      	beq.n	800995c <__multiply+0x148>
 80098a4:	6106      	str	r6, [r0, #16]
 80098a6:	b005      	add	sp, #20
 80098a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80098ac:	f843 2b04 	str.w	r2, [r3], #4
 80098b0:	e7d8      	b.n	8009864 <__multiply+0x50>
 80098b2:	f8b1 a000 	ldrh.w	sl, [r1]
 80098b6:	f1ba 0f00 	cmp.w	sl, #0
 80098ba:	d024      	beq.n	8009906 <__multiply+0xf2>
 80098bc:	f104 0e14 	add.w	lr, r4, #20
 80098c0:	46a9      	mov	r9, r5
 80098c2:	f04f 0c00 	mov.w	ip, #0
 80098c6:	f85e 7b04 	ldr.w	r7, [lr], #4
 80098ca:	f8d9 3000 	ldr.w	r3, [r9]
 80098ce:	fa1f fb87 	uxth.w	fp, r7
 80098d2:	b29b      	uxth	r3, r3
 80098d4:	fb0a 330b 	mla	r3, sl, fp, r3
 80098d8:	ea4f 4b17 	mov.w	fp, r7, lsr #16
 80098dc:	f8d9 7000 	ldr.w	r7, [r9]
 80098e0:	4463      	add	r3, ip
 80098e2:	ea4f 4c17 	mov.w	ip, r7, lsr #16
 80098e6:	fb0a c70b 	mla	r7, sl, fp, ip
 80098ea:	eb07 4713 	add.w	r7, r7, r3, lsr #16
 80098ee:	b29b      	uxth	r3, r3
 80098f0:	ea43 4307 	orr.w	r3, r3, r7, lsl #16
 80098f4:	4572      	cmp	r2, lr
 80098f6:	f849 3b04 	str.w	r3, [r9], #4
 80098fa:	ea4f 4c17 	mov.w	ip, r7, lsr #16
 80098fe:	d8e2      	bhi.n	80098c6 <__multiply+0xb2>
 8009900:	9b01      	ldr	r3, [sp, #4]
 8009902:	f845 c003 	str.w	ip, [r5, r3]
 8009906:	9b03      	ldr	r3, [sp, #12]
 8009908:	f8b3 9002 	ldrh.w	r9, [r3, #2]
 800990c:	3104      	adds	r1, #4
 800990e:	f1b9 0f00 	cmp.w	r9, #0
 8009912:	d021      	beq.n	8009958 <__multiply+0x144>
 8009914:	682b      	ldr	r3, [r5, #0]
 8009916:	f104 0c14 	add.w	ip, r4, #20
 800991a:	46ae      	mov	lr, r5
 800991c:	f04f 0a00 	mov.w	sl, #0
 8009920:	f8bc b000 	ldrh.w	fp, [ip]
 8009924:	f8be 7002 	ldrh.w	r7, [lr, #2]
 8009928:	fb09 770b 	mla	r7, r9, fp, r7
 800992c:	4457      	add	r7, sl
 800992e:	b29b      	uxth	r3, r3
 8009930:	ea43 4307 	orr.w	r3, r3, r7, lsl #16
 8009934:	f84e 3b04 	str.w	r3, [lr], #4
 8009938:	f85c 3b04 	ldr.w	r3, [ip], #4
 800993c:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8009940:	f8be 3000 	ldrh.w	r3, [lr]
 8009944:	fb09 330a 	mla	r3, r9, sl, r3
 8009948:	eb03 4317 	add.w	r3, r3, r7, lsr #16
 800994c:	4562      	cmp	r2, ip
 800994e:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8009952:	d8e5      	bhi.n	8009920 <__multiply+0x10c>
 8009954:	9f01      	ldr	r7, [sp, #4]
 8009956:	51eb      	str	r3, [r5, r7]
 8009958:	3504      	adds	r5, #4
 800995a:	e799      	b.n	8009890 <__multiply+0x7c>
 800995c:	3e01      	subs	r6, #1
 800995e:	e79b      	b.n	8009898 <__multiply+0x84>
 8009960:	0800a855 	.word	0x0800a855
 8009964:	0800a866 	.word	0x0800a866

08009968 <__pow5mult>:
 8009968:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800996c:	4615      	mov	r5, r2
 800996e:	f012 0203 	ands.w	r2, r2, #3
 8009972:	4607      	mov	r7, r0
 8009974:	460e      	mov	r6, r1
 8009976:	d007      	beq.n	8009988 <__pow5mult+0x20>
 8009978:	4c25      	ldr	r4, [pc, #148]	@ (8009a10 <__pow5mult+0xa8>)
 800997a:	3a01      	subs	r2, #1
 800997c:	2300      	movs	r3, #0
 800997e:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 8009982:	f7ff fe9f 	bl	80096c4 <__multadd>
 8009986:	4606      	mov	r6, r0
 8009988:	10ad      	asrs	r5, r5, #2
 800998a:	d03d      	beq.n	8009a08 <__pow5mult+0xa0>
 800998c:	69fc      	ldr	r4, [r7, #28]
 800998e:	b97c      	cbnz	r4, 80099b0 <__pow5mult+0x48>
 8009990:	2010      	movs	r0, #16
 8009992:	f7ff fd7f 	bl	8009494 <malloc>
 8009996:	4602      	mov	r2, r0
 8009998:	61f8      	str	r0, [r7, #28]
 800999a:	b928      	cbnz	r0, 80099a8 <__pow5mult+0x40>
 800999c:	4b1d      	ldr	r3, [pc, #116]	@ (8009a14 <__pow5mult+0xac>)
 800999e:	481e      	ldr	r0, [pc, #120]	@ (8009a18 <__pow5mult+0xb0>)
 80099a0:	f240 11b3 	movw	r1, #435	@ 0x1b3
 80099a4:	f000 fc4e 	bl	800a244 <__assert_func>
 80099a8:	e9c0 4401 	strd	r4, r4, [r0, #4]
 80099ac:	6004      	str	r4, [r0, #0]
 80099ae:	60c4      	str	r4, [r0, #12]
 80099b0:	f8d7 801c 	ldr.w	r8, [r7, #28]
 80099b4:	f8d8 4008 	ldr.w	r4, [r8, #8]
 80099b8:	b94c      	cbnz	r4, 80099ce <__pow5mult+0x66>
 80099ba:	f240 2171 	movw	r1, #625	@ 0x271
 80099be:	4638      	mov	r0, r7
 80099c0:	f7ff ff12 	bl	80097e8 <__i2b>
 80099c4:	2300      	movs	r3, #0
 80099c6:	f8c8 0008 	str.w	r0, [r8, #8]
 80099ca:	4604      	mov	r4, r0
 80099cc:	6003      	str	r3, [r0, #0]
 80099ce:	f04f 0900 	mov.w	r9, #0
 80099d2:	07eb      	lsls	r3, r5, #31
 80099d4:	d50a      	bpl.n	80099ec <__pow5mult+0x84>
 80099d6:	4631      	mov	r1, r6
 80099d8:	4622      	mov	r2, r4
 80099da:	4638      	mov	r0, r7
 80099dc:	f7ff ff1a 	bl	8009814 <__multiply>
 80099e0:	4631      	mov	r1, r6
 80099e2:	4680      	mov	r8, r0
 80099e4:	4638      	mov	r0, r7
 80099e6:	f7ff fe4b 	bl	8009680 <_Bfree>
 80099ea:	4646      	mov	r6, r8
 80099ec:	106d      	asrs	r5, r5, #1
 80099ee:	d00b      	beq.n	8009a08 <__pow5mult+0xa0>
 80099f0:	6820      	ldr	r0, [r4, #0]
 80099f2:	b938      	cbnz	r0, 8009a04 <__pow5mult+0x9c>
 80099f4:	4622      	mov	r2, r4
 80099f6:	4621      	mov	r1, r4
 80099f8:	4638      	mov	r0, r7
 80099fa:	f7ff ff0b 	bl	8009814 <__multiply>
 80099fe:	6020      	str	r0, [r4, #0]
 8009a00:	f8c0 9000 	str.w	r9, [r0]
 8009a04:	4604      	mov	r4, r0
 8009a06:	e7e4      	b.n	80099d2 <__pow5mult+0x6a>
 8009a08:	4630      	mov	r0, r6
 8009a0a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8009a0e:	bf00      	nop
 8009a10:	0800a8c0 	.word	0x0800a8c0
 8009a14:	0800a7e6 	.word	0x0800a7e6
 8009a18:	0800a866 	.word	0x0800a866

08009a1c <__lshift>:
 8009a1c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8009a20:	460c      	mov	r4, r1
 8009a22:	6849      	ldr	r1, [r1, #4]
 8009a24:	6923      	ldr	r3, [r4, #16]
 8009a26:	eb03 1862 	add.w	r8, r3, r2, asr #5
 8009a2a:	68a3      	ldr	r3, [r4, #8]
 8009a2c:	4607      	mov	r7, r0
 8009a2e:	4691      	mov	r9, r2
 8009a30:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8009a34:	f108 0601 	add.w	r6, r8, #1
 8009a38:	42b3      	cmp	r3, r6
 8009a3a:	db0b      	blt.n	8009a54 <__lshift+0x38>
 8009a3c:	4638      	mov	r0, r7
 8009a3e:	f7ff fddf 	bl	8009600 <_Balloc>
 8009a42:	4605      	mov	r5, r0
 8009a44:	b948      	cbnz	r0, 8009a5a <__lshift+0x3e>
 8009a46:	4602      	mov	r2, r0
 8009a48:	4b28      	ldr	r3, [pc, #160]	@ (8009aec <__lshift+0xd0>)
 8009a4a:	4829      	ldr	r0, [pc, #164]	@ (8009af0 <__lshift+0xd4>)
 8009a4c:	f44f 71ef 	mov.w	r1, #478	@ 0x1de
 8009a50:	f000 fbf8 	bl	800a244 <__assert_func>
 8009a54:	3101      	adds	r1, #1
 8009a56:	005b      	lsls	r3, r3, #1
 8009a58:	e7ee      	b.n	8009a38 <__lshift+0x1c>
 8009a5a:	2300      	movs	r3, #0
 8009a5c:	f100 0114 	add.w	r1, r0, #20
 8009a60:	f100 0210 	add.w	r2, r0, #16
 8009a64:	4618      	mov	r0, r3
 8009a66:	4553      	cmp	r3, sl
 8009a68:	db33      	blt.n	8009ad2 <__lshift+0xb6>
 8009a6a:	6920      	ldr	r0, [r4, #16]
 8009a6c:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8009a70:	f104 0314 	add.w	r3, r4, #20
 8009a74:	f019 091f 	ands.w	r9, r9, #31
 8009a78:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8009a7c:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 8009a80:	d02b      	beq.n	8009ada <__lshift+0xbe>
 8009a82:	f1c9 0e20 	rsb	lr, r9, #32
 8009a86:	468a      	mov	sl, r1
 8009a88:	2200      	movs	r2, #0
 8009a8a:	6818      	ldr	r0, [r3, #0]
 8009a8c:	fa00 f009 	lsl.w	r0, r0, r9
 8009a90:	4310      	orrs	r0, r2
 8009a92:	f84a 0b04 	str.w	r0, [sl], #4
 8009a96:	f853 2b04 	ldr.w	r2, [r3], #4
 8009a9a:	459c      	cmp	ip, r3
 8009a9c:	fa22 f20e 	lsr.w	r2, r2, lr
 8009aa0:	d8f3      	bhi.n	8009a8a <__lshift+0x6e>
 8009aa2:	ebac 0304 	sub.w	r3, ip, r4
 8009aa6:	3b15      	subs	r3, #21
 8009aa8:	f023 0303 	bic.w	r3, r3, #3
 8009aac:	3304      	adds	r3, #4
 8009aae:	f104 0015 	add.w	r0, r4, #21
 8009ab2:	4584      	cmp	ip, r0
 8009ab4:	bf38      	it	cc
 8009ab6:	2304      	movcc	r3, #4
 8009ab8:	50ca      	str	r2, [r1, r3]
 8009aba:	b10a      	cbz	r2, 8009ac0 <__lshift+0xa4>
 8009abc:	f108 0602 	add.w	r6, r8, #2
 8009ac0:	3e01      	subs	r6, #1
 8009ac2:	4638      	mov	r0, r7
 8009ac4:	612e      	str	r6, [r5, #16]
 8009ac6:	4621      	mov	r1, r4
 8009ac8:	f7ff fdda 	bl	8009680 <_Bfree>
 8009acc:	4628      	mov	r0, r5
 8009ace:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8009ad2:	f842 0f04 	str.w	r0, [r2, #4]!
 8009ad6:	3301      	adds	r3, #1
 8009ad8:	e7c5      	b.n	8009a66 <__lshift+0x4a>
 8009ada:	3904      	subs	r1, #4
 8009adc:	f853 2b04 	ldr.w	r2, [r3], #4
 8009ae0:	f841 2f04 	str.w	r2, [r1, #4]!
 8009ae4:	459c      	cmp	ip, r3
 8009ae6:	d8f9      	bhi.n	8009adc <__lshift+0xc0>
 8009ae8:	e7ea      	b.n	8009ac0 <__lshift+0xa4>
 8009aea:	bf00      	nop
 8009aec:	0800a855 	.word	0x0800a855
 8009af0:	0800a866 	.word	0x0800a866

08009af4 <__mcmp>:
 8009af4:	690a      	ldr	r2, [r1, #16]
 8009af6:	4603      	mov	r3, r0
 8009af8:	6900      	ldr	r0, [r0, #16]
 8009afa:	1a80      	subs	r0, r0, r2
 8009afc:	b530      	push	{r4, r5, lr}
 8009afe:	d10e      	bne.n	8009b1e <__mcmp+0x2a>
 8009b00:	3314      	adds	r3, #20
 8009b02:	3114      	adds	r1, #20
 8009b04:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 8009b08:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 8009b0c:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 8009b10:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 8009b14:	4295      	cmp	r5, r2
 8009b16:	d003      	beq.n	8009b20 <__mcmp+0x2c>
 8009b18:	d205      	bcs.n	8009b26 <__mcmp+0x32>
 8009b1a:	f04f 30ff 	mov.w	r0, #4294967295
 8009b1e:	bd30      	pop	{r4, r5, pc}
 8009b20:	42a3      	cmp	r3, r4
 8009b22:	d3f3      	bcc.n	8009b0c <__mcmp+0x18>
 8009b24:	e7fb      	b.n	8009b1e <__mcmp+0x2a>
 8009b26:	2001      	movs	r0, #1
 8009b28:	e7f9      	b.n	8009b1e <__mcmp+0x2a>
	...

08009b2c <__mdiff>:
 8009b2c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009b30:	4689      	mov	r9, r1
 8009b32:	4606      	mov	r6, r0
 8009b34:	4611      	mov	r1, r2
 8009b36:	4648      	mov	r0, r9
 8009b38:	4614      	mov	r4, r2
 8009b3a:	f7ff ffdb 	bl	8009af4 <__mcmp>
 8009b3e:	1e05      	subs	r5, r0, #0
 8009b40:	d112      	bne.n	8009b68 <__mdiff+0x3c>
 8009b42:	4629      	mov	r1, r5
 8009b44:	4630      	mov	r0, r6
 8009b46:	f7ff fd5b 	bl	8009600 <_Balloc>
 8009b4a:	4602      	mov	r2, r0
 8009b4c:	b928      	cbnz	r0, 8009b5a <__mdiff+0x2e>
 8009b4e:	4b3f      	ldr	r3, [pc, #252]	@ (8009c4c <__mdiff+0x120>)
 8009b50:	f240 2137 	movw	r1, #567	@ 0x237
 8009b54:	483e      	ldr	r0, [pc, #248]	@ (8009c50 <__mdiff+0x124>)
 8009b56:	f000 fb75 	bl	800a244 <__assert_func>
 8009b5a:	2301      	movs	r3, #1
 8009b5c:	e9c0 3504 	strd	r3, r5, [r0, #16]
 8009b60:	4610      	mov	r0, r2
 8009b62:	b003      	add	sp, #12
 8009b64:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009b68:	bfbc      	itt	lt
 8009b6a:	464b      	movlt	r3, r9
 8009b6c:	46a1      	movlt	r9, r4
 8009b6e:	4630      	mov	r0, r6
 8009b70:	f8d9 1004 	ldr.w	r1, [r9, #4]
 8009b74:	bfba      	itte	lt
 8009b76:	461c      	movlt	r4, r3
 8009b78:	2501      	movlt	r5, #1
 8009b7a:	2500      	movge	r5, #0
 8009b7c:	f7ff fd40 	bl	8009600 <_Balloc>
 8009b80:	4602      	mov	r2, r0
 8009b82:	b918      	cbnz	r0, 8009b8c <__mdiff+0x60>
 8009b84:	4b31      	ldr	r3, [pc, #196]	@ (8009c4c <__mdiff+0x120>)
 8009b86:	f240 2145 	movw	r1, #581	@ 0x245
 8009b8a:	e7e3      	b.n	8009b54 <__mdiff+0x28>
 8009b8c:	f8d9 7010 	ldr.w	r7, [r9, #16]
 8009b90:	6926      	ldr	r6, [r4, #16]
 8009b92:	60c5      	str	r5, [r0, #12]
 8009b94:	f109 0310 	add.w	r3, r9, #16
 8009b98:	f109 0514 	add.w	r5, r9, #20
 8009b9c:	f104 0e14 	add.w	lr, r4, #20
 8009ba0:	f100 0b14 	add.w	fp, r0, #20
 8009ba4:	eb05 0887 	add.w	r8, r5, r7, lsl #2
 8009ba8:	eb0e 0686 	add.w	r6, lr, r6, lsl #2
 8009bac:	9301      	str	r3, [sp, #4]
 8009bae:	46d9      	mov	r9, fp
 8009bb0:	f04f 0c00 	mov.w	ip, #0
 8009bb4:	9b01      	ldr	r3, [sp, #4]
 8009bb6:	f85e 0b04 	ldr.w	r0, [lr], #4
 8009bba:	f853 af04 	ldr.w	sl, [r3, #4]!
 8009bbe:	9301      	str	r3, [sp, #4]
 8009bc0:	fa1f f38a 	uxth.w	r3, sl
 8009bc4:	4619      	mov	r1, r3
 8009bc6:	b283      	uxth	r3, r0
 8009bc8:	1acb      	subs	r3, r1, r3
 8009bca:	0c00      	lsrs	r0, r0, #16
 8009bcc:	4463      	add	r3, ip
 8009bce:	ebc0 401a 	rsb	r0, r0, sl, lsr #16
 8009bd2:	eb00 4023 	add.w	r0, r0, r3, asr #16
 8009bd6:	b29b      	uxth	r3, r3
 8009bd8:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 8009bdc:	4576      	cmp	r6, lr
 8009bde:	f849 3b04 	str.w	r3, [r9], #4
 8009be2:	ea4f 4c20 	mov.w	ip, r0, asr #16
 8009be6:	d8e5      	bhi.n	8009bb4 <__mdiff+0x88>
 8009be8:	1b33      	subs	r3, r6, r4
 8009bea:	3b15      	subs	r3, #21
 8009bec:	f023 0303 	bic.w	r3, r3, #3
 8009bf0:	3415      	adds	r4, #21
 8009bf2:	3304      	adds	r3, #4
 8009bf4:	42a6      	cmp	r6, r4
 8009bf6:	bf38      	it	cc
 8009bf8:	2304      	movcc	r3, #4
 8009bfa:	441d      	add	r5, r3
 8009bfc:	445b      	add	r3, fp
 8009bfe:	461e      	mov	r6, r3
 8009c00:	462c      	mov	r4, r5
 8009c02:	4544      	cmp	r4, r8
 8009c04:	d30e      	bcc.n	8009c24 <__mdiff+0xf8>
 8009c06:	f108 0103 	add.w	r1, r8, #3
 8009c0a:	1b49      	subs	r1, r1, r5
 8009c0c:	f021 0103 	bic.w	r1, r1, #3
 8009c10:	3d03      	subs	r5, #3
 8009c12:	45a8      	cmp	r8, r5
 8009c14:	bf38      	it	cc
 8009c16:	2100      	movcc	r1, #0
 8009c18:	440b      	add	r3, r1
 8009c1a:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 8009c1e:	b191      	cbz	r1, 8009c46 <__mdiff+0x11a>
 8009c20:	6117      	str	r7, [r2, #16]
 8009c22:	e79d      	b.n	8009b60 <__mdiff+0x34>
 8009c24:	f854 1b04 	ldr.w	r1, [r4], #4
 8009c28:	46e6      	mov	lr, ip
 8009c2a:	0c08      	lsrs	r0, r1, #16
 8009c2c:	fa1c fc81 	uxtah	ip, ip, r1
 8009c30:	4471      	add	r1, lr
 8009c32:	eb00 402c 	add.w	r0, r0, ip, asr #16
 8009c36:	b289      	uxth	r1, r1
 8009c38:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 8009c3c:	f846 1b04 	str.w	r1, [r6], #4
 8009c40:	ea4f 4c20 	mov.w	ip, r0, asr #16
 8009c44:	e7dd      	b.n	8009c02 <__mdiff+0xd6>
 8009c46:	3f01      	subs	r7, #1
 8009c48:	e7e7      	b.n	8009c1a <__mdiff+0xee>
 8009c4a:	bf00      	nop
 8009c4c:	0800a855 	.word	0x0800a855
 8009c50:	0800a866 	.word	0x0800a866

08009c54 <__d2b>:
 8009c54:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8009c58:	460f      	mov	r7, r1
 8009c5a:	2101      	movs	r1, #1
 8009c5c:	ec59 8b10 	vmov	r8, r9, d0
 8009c60:	4616      	mov	r6, r2
 8009c62:	f7ff fccd 	bl	8009600 <_Balloc>
 8009c66:	4604      	mov	r4, r0
 8009c68:	b930      	cbnz	r0, 8009c78 <__d2b+0x24>
 8009c6a:	4602      	mov	r2, r0
 8009c6c:	4b23      	ldr	r3, [pc, #140]	@ (8009cfc <__d2b+0xa8>)
 8009c6e:	4824      	ldr	r0, [pc, #144]	@ (8009d00 <__d2b+0xac>)
 8009c70:	f240 310f 	movw	r1, #783	@ 0x30f
 8009c74:	f000 fae6 	bl	800a244 <__assert_func>
 8009c78:	f3c9 550a 	ubfx	r5, r9, #20, #11
 8009c7c:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8009c80:	b10d      	cbz	r5, 8009c86 <__d2b+0x32>
 8009c82:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8009c86:	9301      	str	r3, [sp, #4]
 8009c88:	f1b8 0300 	subs.w	r3, r8, #0
 8009c8c:	d023      	beq.n	8009cd6 <__d2b+0x82>
 8009c8e:	4668      	mov	r0, sp
 8009c90:	9300      	str	r3, [sp, #0]
 8009c92:	f7ff fd7c 	bl	800978e <__lo0bits>
 8009c96:	e9dd 1200 	ldrd	r1, r2, [sp]
 8009c9a:	b1d0      	cbz	r0, 8009cd2 <__d2b+0x7e>
 8009c9c:	f1c0 0320 	rsb	r3, r0, #32
 8009ca0:	fa02 f303 	lsl.w	r3, r2, r3
 8009ca4:	430b      	orrs	r3, r1
 8009ca6:	40c2      	lsrs	r2, r0
 8009ca8:	6163      	str	r3, [r4, #20]
 8009caa:	9201      	str	r2, [sp, #4]
 8009cac:	9b01      	ldr	r3, [sp, #4]
 8009cae:	61a3      	str	r3, [r4, #24]
 8009cb0:	2b00      	cmp	r3, #0
 8009cb2:	bf0c      	ite	eq
 8009cb4:	2201      	moveq	r2, #1
 8009cb6:	2202      	movne	r2, #2
 8009cb8:	6122      	str	r2, [r4, #16]
 8009cba:	b1a5      	cbz	r5, 8009ce6 <__d2b+0x92>
 8009cbc:	f2a5 4533 	subw	r5, r5, #1075	@ 0x433
 8009cc0:	4405      	add	r5, r0
 8009cc2:	603d      	str	r5, [r7, #0]
 8009cc4:	f1c0 0035 	rsb	r0, r0, #53	@ 0x35
 8009cc8:	6030      	str	r0, [r6, #0]
 8009cca:	4620      	mov	r0, r4
 8009ccc:	b003      	add	sp, #12
 8009cce:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8009cd2:	6161      	str	r1, [r4, #20]
 8009cd4:	e7ea      	b.n	8009cac <__d2b+0x58>
 8009cd6:	a801      	add	r0, sp, #4
 8009cd8:	f7ff fd59 	bl	800978e <__lo0bits>
 8009cdc:	9b01      	ldr	r3, [sp, #4]
 8009cde:	6163      	str	r3, [r4, #20]
 8009ce0:	3020      	adds	r0, #32
 8009ce2:	2201      	movs	r2, #1
 8009ce4:	e7e8      	b.n	8009cb8 <__d2b+0x64>
 8009ce6:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8009cea:	f2a0 4032 	subw	r0, r0, #1074	@ 0x432
 8009cee:	6038      	str	r0, [r7, #0]
 8009cf0:	6918      	ldr	r0, [r3, #16]
 8009cf2:	f7ff fd2d 	bl	8009750 <__hi0bits>
 8009cf6:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 8009cfa:	e7e5      	b.n	8009cc8 <__d2b+0x74>
 8009cfc:	0800a855 	.word	0x0800a855
 8009d00:	0800a866 	.word	0x0800a866

08009d04 <__sfputc_r>:
 8009d04:	6893      	ldr	r3, [r2, #8]
 8009d06:	3b01      	subs	r3, #1
 8009d08:	2b00      	cmp	r3, #0
 8009d0a:	b410      	push	{r4}
 8009d0c:	6093      	str	r3, [r2, #8]
 8009d0e:	da08      	bge.n	8009d22 <__sfputc_r+0x1e>
 8009d10:	6994      	ldr	r4, [r2, #24]
 8009d12:	42a3      	cmp	r3, r4
 8009d14:	db01      	blt.n	8009d1a <__sfputc_r+0x16>
 8009d16:	290a      	cmp	r1, #10
 8009d18:	d103      	bne.n	8009d22 <__sfputc_r+0x1e>
 8009d1a:	f85d 4b04 	ldr.w	r4, [sp], #4
 8009d1e:	f000 b9df 	b.w	800a0e0 <__swbuf_r>
 8009d22:	6813      	ldr	r3, [r2, #0]
 8009d24:	1c58      	adds	r0, r3, #1
 8009d26:	6010      	str	r0, [r2, #0]
 8009d28:	7019      	strb	r1, [r3, #0]
 8009d2a:	4608      	mov	r0, r1
 8009d2c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8009d30:	4770      	bx	lr

08009d32 <__sfputs_r>:
 8009d32:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8009d34:	4606      	mov	r6, r0
 8009d36:	460f      	mov	r7, r1
 8009d38:	4614      	mov	r4, r2
 8009d3a:	18d5      	adds	r5, r2, r3
 8009d3c:	42ac      	cmp	r4, r5
 8009d3e:	d101      	bne.n	8009d44 <__sfputs_r+0x12>
 8009d40:	2000      	movs	r0, #0
 8009d42:	e007      	b.n	8009d54 <__sfputs_r+0x22>
 8009d44:	f814 1b01 	ldrb.w	r1, [r4], #1
 8009d48:	463a      	mov	r2, r7
 8009d4a:	4630      	mov	r0, r6
 8009d4c:	f7ff ffda 	bl	8009d04 <__sfputc_r>
 8009d50:	1c43      	adds	r3, r0, #1
 8009d52:	d1f3      	bne.n	8009d3c <__sfputs_r+0xa>
 8009d54:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08009d58 <_vfiprintf_r>:
 8009d58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009d5c:	460d      	mov	r5, r1
 8009d5e:	b09d      	sub	sp, #116	@ 0x74
 8009d60:	4614      	mov	r4, r2
 8009d62:	4698      	mov	r8, r3
 8009d64:	4606      	mov	r6, r0
 8009d66:	b118      	cbz	r0, 8009d70 <_vfiprintf_r+0x18>
 8009d68:	6a03      	ldr	r3, [r0, #32]
 8009d6a:	b90b      	cbnz	r3, 8009d70 <_vfiprintf_r+0x18>
 8009d6c:	f7fe fbde 	bl	800852c <__sinit>
 8009d70:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8009d72:	07d9      	lsls	r1, r3, #31
 8009d74:	d405      	bmi.n	8009d82 <_vfiprintf_r+0x2a>
 8009d76:	89ab      	ldrh	r3, [r5, #12]
 8009d78:	059a      	lsls	r2, r3, #22
 8009d7a:	d402      	bmi.n	8009d82 <_vfiprintf_r+0x2a>
 8009d7c:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8009d7e:	f7fe fcf0 	bl	8008762 <__retarget_lock_acquire_recursive>
 8009d82:	89ab      	ldrh	r3, [r5, #12]
 8009d84:	071b      	lsls	r3, r3, #28
 8009d86:	d501      	bpl.n	8009d8c <_vfiprintf_r+0x34>
 8009d88:	692b      	ldr	r3, [r5, #16]
 8009d8a:	b99b      	cbnz	r3, 8009db4 <_vfiprintf_r+0x5c>
 8009d8c:	4629      	mov	r1, r5
 8009d8e:	4630      	mov	r0, r6
 8009d90:	f000 f9e4 	bl	800a15c <__swsetup_r>
 8009d94:	b170      	cbz	r0, 8009db4 <_vfiprintf_r+0x5c>
 8009d96:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8009d98:	07dc      	lsls	r4, r3, #31
 8009d9a:	d504      	bpl.n	8009da6 <_vfiprintf_r+0x4e>
 8009d9c:	f04f 30ff 	mov.w	r0, #4294967295
 8009da0:	b01d      	add	sp, #116	@ 0x74
 8009da2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009da6:	89ab      	ldrh	r3, [r5, #12]
 8009da8:	0598      	lsls	r0, r3, #22
 8009daa:	d4f7      	bmi.n	8009d9c <_vfiprintf_r+0x44>
 8009dac:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8009dae:	f7fe fcd9 	bl	8008764 <__retarget_lock_release_recursive>
 8009db2:	e7f3      	b.n	8009d9c <_vfiprintf_r+0x44>
 8009db4:	2300      	movs	r3, #0
 8009db6:	9309      	str	r3, [sp, #36]	@ 0x24
 8009db8:	2320      	movs	r3, #32
 8009dba:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8009dbe:	f8cd 800c 	str.w	r8, [sp, #12]
 8009dc2:	2330      	movs	r3, #48	@ 0x30
 8009dc4:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 8009f74 <_vfiprintf_r+0x21c>
 8009dc8:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8009dcc:	f04f 0901 	mov.w	r9, #1
 8009dd0:	4623      	mov	r3, r4
 8009dd2:	469a      	mov	sl, r3
 8009dd4:	f813 2b01 	ldrb.w	r2, [r3], #1
 8009dd8:	b10a      	cbz	r2, 8009dde <_vfiprintf_r+0x86>
 8009dda:	2a25      	cmp	r2, #37	@ 0x25
 8009ddc:	d1f9      	bne.n	8009dd2 <_vfiprintf_r+0x7a>
 8009dde:	ebba 0b04 	subs.w	fp, sl, r4
 8009de2:	d00b      	beq.n	8009dfc <_vfiprintf_r+0xa4>
 8009de4:	465b      	mov	r3, fp
 8009de6:	4622      	mov	r2, r4
 8009de8:	4629      	mov	r1, r5
 8009dea:	4630      	mov	r0, r6
 8009dec:	f7ff ffa1 	bl	8009d32 <__sfputs_r>
 8009df0:	3001      	adds	r0, #1
 8009df2:	f000 80a7 	beq.w	8009f44 <_vfiprintf_r+0x1ec>
 8009df6:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8009df8:	445a      	add	r2, fp
 8009dfa:	9209      	str	r2, [sp, #36]	@ 0x24
 8009dfc:	f89a 3000 	ldrb.w	r3, [sl]
 8009e00:	2b00      	cmp	r3, #0
 8009e02:	f000 809f 	beq.w	8009f44 <_vfiprintf_r+0x1ec>
 8009e06:	2300      	movs	r3, #0
 8009e08:	f04f 32ff 	mov.w	r2, #4294967295
 8009e0c:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8009e10:	f10a 0a01 	add.w	sl, sl, #1
 8009e14:	9304      	str	r3, [sp, #16]
 8009e16:	9307      	str	r3, [sp, #28]
 8009e18:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8009e1c:	931a      	str	r3, [sp, #104]	@ 0x68
 8009e1e:	4654      	mov	r4, sl
 8009e20:	2205      	movs	r2, #5
 8009e22:	f814 1b01 	ldrb.w	r1, [r4], #1
 8009e26:	4853      	ldr	r0, [pc, #332]	@ (8009f74 <_vfiprintf_r+0x21c>)
 8009e28:	f7f6 f9d2 	bl	80001d0 <memchr>
 8009e2c:	9a04      	ldr	r2, [sp, #16]
 8009e2e:	b9d8      	cbnz	r0, 8009e68 <_vfiprintf_r+0x110>
 8009e30:	06d1      	lsls	r1, r2, #27
 8009e32:	bf44      	itt	mi
 8009e34:	2320      	movmi	r3, #32
 8009e36:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8009e3a:	0713      	lsls	r3, r2, #28
 8009e3c:	bf44      	itt	mi
 8009e3e:	232b      	movmi	r3, #43	@ 0x2b
 8009e40:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8009e44:	f89a 3000 	ldrb.w	r3, [sl]
 8009e48:	2b2a      	cmp	r3, #42	@ 0x2a
 8009e4a:	d015      	beq.n	8009e78 <_vfiprintf_r+0x120>
 8009e4c:	9a07      	ldr	r2, [sp, #28]
 8009e4e:	4654      	mov	r4, sl
 8009e50:	2000      	movs	r0, #0
 8009e52:	f04f 0c0a 	mov.w	ip, #10
 8009e56:	4621      	mov	r1, r4
 8009e58:	f811 3b01 	ldrb.w	r3, [r1], #1
 8009e5c:	3b30      	subs	r3, #48	@ 0x30
 8009e5e:	2b09      	cmp	r3, #9
 8009e60:	d94b      	bls.n	8009efa <_vfiprintf_r+0x1a2>
 8009e62:	b1b0      	cbz	r0, 8009e92 <_vfiprintf_r+0x13a>
 8009e64:	9207      	str	r2, [sp, #28]
 8009e66:	e014      	b.n	8009e92 <_vfiprintf_r+0x13a>
 8009e68:	eba0 0308 	sub.w	r3, r0, r8
 8009e6c:	fa09 f303 	lsl.w	r3, r9, r3
 8009e70:	4313      	orrs	r3, r2
 8009e72:	9304      	str	r3, [sp, #16]
 8009e74:	46a2      	mov	sl, r4
 8009e76:	e7d2      	b.n	8009e1e <_vfiprintf_r+0xc6>
 8009e78:	9b03      	ldr	r3, [sp, #12]
 8009e7a:	1d19      	adds	r1, r3, #4
 8009e7c:	681b      	ldr	r3, [r3, #0]
 8009e7e:	9103      	str	r1, [sp, #12]
 8009e80:	2b00      	cmp	r3, #0
 8009e82:	bfbb      	ittet	lt
 8009e84:	425b      	neglt	r3, r3
 8009e86:	f042 0202 	orrlt.w	r2, r2, #2
 8009e8a:	9307      	strge	r3, [sp, #28]
 8009e8c:	9307      	strlt	r3, [sp, #28]
 8009e8e:	bfb8      	it	lt
 8009e90:	9204      	strlt	r2, [sp, #16]
 8009e92:	7823      	ldrb	r3, [r4, #0]
 8009e94:	2b2e      	cmp	r3, #46	@ 0x2e
 8009e96:	d10a      	bne.n	8009eae <_vfiprintf_r+0x156>
 8009e98:	7863      	ldrb	r3, [r4, #1]
 8009e9a:	2b2a      	cmp	r3, #42	@ 0x2a
 8009e9c:	d132      	bne.n	8009f04 <_vfiprintf_r+0x1ac>
 8009e9e:	9b03      	ldr	r3, [sp, #12]
 8009ea0:	1d1a      	adds	r2, r3, #4
 8009ea2:	681b      	ldr	r3, [r3, #0]
 8009ea4:	9203      	str	r2, [sp, #12]
 8009ea6:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8009eaa:	3402      	adds	r4, #2
 8009eac:	9305      	str	r3, [sp, #20]
 8009eae:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 8009f84 <_vfiprintf_r+0x22c>
 8009eb2:	7821      	ldrb	r1, [r4, #0]
 8009eb4:	2203      	movs	r2, #3
 8009eb6:	4650      	mov	r0, sl
 8009eb8:	f7f6 f98a 	bl	80001d0 <memchr>
 8009ebc:	b138      	cbz	r0, 8009ece <_vfiprintf_r+0x176>
 8009ebe:	9b04      	ldr	r3, [sp, #16]
 8009ec0:	eba0 000a 	sub.w	r0, r0, sl
 8009ec4:	2240      	movs	r2, #64	@ 0x40
 8009ec6:	4082      	lsls	r2, r0
 8009ec8:	4313      	orrs	r3, r2
 8009eca:	3401      	adds	r4, #1
 8009ecc:	9304      	str	r3, [sp, #16]
 8009ece:	f814 1b01 	ldrb.w	r1, [r4], #1
 8009ed2:	4829      	ldr	r0, [pc, #164]	@ (8009f78 <_vfiprintf_r+0x220>)
 8009ed4:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8009ed8:	2206      	movs	r2, #6
 8009eda:	f7f6 f979 	bl	80001d0 <memchr>
 8009ede:	2800      	cmp	r0, #0
 8009ee0:	d03f      	beq.n	8009f62 <_vfiprintf_r+0x20a>
 8009ee2:	4b26      	ldr	r3, [pc, #152]	@ (8009f7c <_vfiprintf_r+0x224>)
 8009ee4:	bb1b      	cbnz	r3, 8009f2e <_vfiprintf_r+0x1d6>
 8009ee6:	9b03      	ldr	r3, [sp, #12]
 8009ee8:	3307      	adds	r3, #7
 8009eea:	f023 0307 	bic.w	r3, r3, #7
 8009eee:	3308      	adds	r3, #8
 8009ef0:	9303      	str	r3, [sp, #12]
 8009ef2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8009ef4:	443b      	add	r3, r7
 8009ef6:	9309      	str	r3, [sp, #36]	@ 0x24
 8009ef8:	e76a      	b.n	8009dd0 <_vfiprintf_r+0x78>
 8009efa:	fb0c 3202 	mla	r2, ip, r2, r3
 8009efe:	460c      	mov	r4, r1
 8009f00:	2001      	movs	r0, #1
 8009f02:	e7a8      	b.n	8009e56 <_vfiprintf_r+0xfe>
 8009f04:	2300      	movs	r3, #0
 8009f06:	3401      	adds	r4, #1
 8009f08:	9305      	str	r3, [sp, #20]
 8009f0a:	4619      	mov	r1, r3
 8009f0c:	f04f 0c0a 	mov.w	ip, #10
 8009f10:	4620      	mov	r0, r4
 8009f12:	f810 2b01 	ldrb.w	r2, [r0], #1
 8009f16:	3a30      	subs	r2, #48	@ 0x30
 8009f18:	2a09      	cmp	r2, #9
 8009f1a:	d903      	bls.n	8009f24 <_vfiprintf_r+0x1cc>
 8009f1c:	2b00      	cmp	r3, #0
 8009f1e:	d0c6      	beq.n	8009eae <_vfiprintf_r+0x156>
 8009f20:	9105      	str	r1, [sp, #20]
 8009f22:	e7c4      	b.n	8009eae <_vfiprintf_r+0x156>
 8009f24:	fb0c 2101 	mla	r1, ip, r1, r2
 8009f28:	4604      	mov	r4, r0
 8009f2a:	2301      	movs	r3, #1
 8009f2c:	e7f0      	b.n	8009f10 <_vfiprintf_r+0x1b8>
 8009f2e:	ab03      	add	r3, sp, #12
 8009f30:	9300      	str	r3, [sp, #0]
 8009f32:	462a      	mov	r2, r5
 8009f34:	4b12      	ldr	r3, [pc, #72]	@ (8009f80 <_vfiprintf_r+0x228>)
 8009f36:	a904      	add	r1, sp, #16
 8009f38:	4630      	mov	r0, r6
 8009f3a:	f7fd feb3 	bl	8007ca4 <_printf_float>
 8009f3e:	4607      	mov	r7, r0
 8009f40:	1c78      	adds	r0, r7, #1
 8009f42:	d1d6      	bne.n	8009ef2 <_vfiprintf_r+0x19a>
 8009f44:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8009f46:	07d9      	lsls	r1, r3, #31
 8009f48:	d405      	bmi.n	8009f56 <_vfiprintf_r+0x1fe>
 8009f4a:	89ab      	ldrh	r3, [r5, #12]
 8009f4c:	059a      	lsls	r2, r3, #22
 8009f4e:	d402      	bmi.n	8009f56 <_vfiprintf_r+0x1fe>
 8009f50:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8009f52:	f7fe fc07 	bl	8008764 <__retarget_lock_release_recursive>
 8009f56:	89ab      	ldrh	r3, [r5, #12]
 8009f58:	065b      	lsls	r3, r3, #25
 8009f5a:	f53f af1f 	bmi.w	8009d9c <_vfiprintf_r+0x44>
 8009f5e:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8009f60:	e71e      	b.n	8009da0 <_vfiprintf_r+0x48>
 8009f62:	ab03      	add	r3, sp, #12
 8009f64:	9300      	str	r3, [sp, #0]
 8009f66:	462a      	mov	r2, r5
 8009f68:	4b05      	ldr	r3, [pc, #20]	@ (8009f80 <_vfiprintf_r+0x228>)
 8009f6a:	a904      	add	r1, sp, #16
 8009f6c:	4630      	mov	r0, r6
 8009f6e:	f7fe f931 	bl	80081d4 <_printf_i>
 8009f72:	e7e4      	b.n	8009f3e <_vfiprintf_r+0x1e6>
 8009f74:	0800a9c0 	.word	0x0800a9c0
 8009f78:	0800a9ca 	.word	0x0800a9ca
 8009f7c:	08007ca5 	.word	0x08007ca5
 8009f80:	08009d33 	.word	0x08009d33
 8009f84:	0800a9c6 	.word	0x0800a9c6

08009f88 <__sflush_r>:
 8009f88:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8009f8c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009f90:	0716      	lsls	r6, r2, #28
 8009f92:	4605      	mov	r5, r0
 8009f94:	460c      	mov	r4, r1
 8009f96:	d454      	bmi.n	800a042 <__sflush_r+0xba>
 8009f98:	684b      	ldr	r3, [r1, #4]
 8009f9a:	2b00      	cmp	r3, #0
 8009f9c:	dc02      	bgt.n	8009fa4 <__sflush_r+0x1c>
 8009f9e:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8009fa0:	2b00      	cmp	r3, #0
 8009fa2:	dd48      	ble.n	800a036 <__sflush_r+0xae>
 8009fa4:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8009fa6:	2e00      	cmp	r6, #0
 8009fa8:	d045      	beq.n	800a036 <__sflush_r+0xae>
 8009faa:	2300      	movs	r3, #0
 8009fac:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8009fb0:	682f      	ldr	r7, [r5, #0]
 8009fb2:	6a21      	ldr	r1, [r4, #32]
 8009fb4:	602b      	str	r3, [r5, #0]
 8009fb6:	d030      	beq.n	800a01a <__sflush_r+0x92>
 8009fb8:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8009fba:	89a3      	ldrh	r3, [r4, #12]
 8009fbc:	0759      	lsls	r1, r3, #29
 8009fbe:	d505      	bpl.n	8009fcc <__sflush_r+0x44>
 8009fc0:	6863      	ldr	r3, [r4, #4]
 8009fc2:	1ad2      	subs	r2, r2, r3
 8009fc4:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8009fc6:	b10b      	cbz	r3, 8009fcc <__sflush_r+0x44>
 8009fc8:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8009fca:	1ad2      	subs	r2, r2, r3
 8009fcc:	2300      	movs	r3, #0
 8009fce:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8009fd0:	6a21      	ldr	r1, [r4, #32]
 8009fd2:	4628      	mov	r0, r5
 8009fd4:	47b0      	blx	r6
 8009fd6:	1c43      	adds	r3, r0, #1
 8009fd8:	89a3      	ldrh	r3, [r4, #12]
 8009fda:	d106      	bne.n	8009fea <__sflush_r+0x62>
 8009fdc:	6829      	ldr	r1, [r5, #0]
 8009fde:	291d      	cmp	r1, #29
 8009fe0:	d82b      	bhi.n	800a03a <__sflush_r+0xb2>
 8009fe2:	4a2a      	ldr	r2, [pc, #168]	@ (800a08c <__sflush_r+0x104>)
 8009fe4:	410a      	asrs	r2, r1
 8009fe6:	07d6      	lsls	r6, r2, #31
 8009fe8:	d427      	bmi.n	800a03a <__sflush_r+0xb2>
 8009fea:	2200      	movs	r2, #0
 8009fec:	6062      	str	r2, [r4, #4]
 8009fee:	04d9      	lsls	r1, r3, #19
 8009ff0:	6922      	ldr	r2, [r4, #16]
 8009ff2:	6022      	str	r2, [r4, #0]
 8009ff4:	d504      	bpl.n	800a000 <__sflush_r+0x78>
 8009ff6:	1c42      	adds	r2, r0, #1
 8009ff8:	d101      	bne.n	8009ffe <__sflush_r+0x76>
 8009ffa:	682b      	ldr	r3, [r5, #0]
 8009ffc:	b903      	cbnz	r3, 800a000 <__sflush_r+0x78>
 8009ffe:	6560      	str	r0, [r4, #84]	@ 0x54
 800a000:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 800a002:	602f      	str	r7, [r5, #0]
 800a004:	b1b9      	cbz	r1, 800a036 <__sflush_r+0xae>
 800a006:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 800a00a:	4299      	cmp	r1, r3
 800a00c:	d002      	beq.n	800a014 <__sflush_r+0x8c>
 800a00e:	4628      	mov	r0, r5
 800a010:	f7ff f9f6 	bl	8009400 <_free_r>
 800a014:	2300      	movs	r3, #0
 800a016:	6363      	str	r3, [r4, #52]	@ 0x34
 800a018:	e00d      	b.n	800a036 <__sflush_r+0xae>
 800a01a:	2301      	movs	r3, #1
 800a01c:	4628      	mov	r0, r5
 800a01e:	47b0      	blx	r6
 800a020:	4602      	mov	r2, r0
 800a022:	1c50      	adds	r0, r2, #1
 800a024:	d1c9      	bne.n	8009fba <__sflush_r+0x32>
 800a026:	682b      	ldr	r3, [r5, #0]
 800a028:	2b00      	cmp	r3, #0
 800a02a:	d0c6      	beq.n	8009fba <__sflush_r+0x32>
 800a02c:	2b1d      	cmp	r3, #29
 800a02e:	d001      	beq.n	800a034 <__sflush_r+0xac>
 800a030:	2b16      	cmp	r3, #22
 800a032:	d11e      	bne.n	800a072 <__sflush_r+0xea>
 800a034:	602f      	str	r7, [r5, #0]
 800a036:	2000      	movs	r0, #0
 800a038:	e022      	b.n	800a080 <__sflush_r+0xf8>
 800a03a:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800a03e:	b21b      	sxth	r3, r3
 800a040:	e01b      	b.n	800a07a <__sflush_r+0xf2>
 800a042:	690f      	ldr	r7, [r1, #16]
 800a044:	2f00      	cmp	r7, #0
 800a046:	d0f6      	beq.n	800a036 <__sflush_r+0xae>
 800a048:	0793      	lsls	r3, r2, #30
 800a04a:	680e      	ldr	r6, [r1, #0]
 800a04c:	bf08      	it	eq
 800a04e:	694b      	ldreq	r3, [r1, #20]
 800a050:	600f      	str	r7, [r1, #0]
 800a052:	bf18      	it	ne
 800a054:	2300      	movne	r3, #0
 800a056:	eba6 0807 	sub.w	r8, r6, r7
 800a05a:	608b      	str	r3, [r1, #8]
 800a05c:	f1b8 0f00 	cmp.w	r8, #0
 800a060:	dde9      	ble.n	800a036 <__sflush_r+0xae>
 800a062:	6a21      	ldr	r1, [r4, #32]
 800a064:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 800a066:	4643      	mov	r3, r8
 800a068:	463a      	mov	r2, r7
 800a06a:	4628      	mov	r0, r5
 800a06c:	47b0      	blx	r6
 800a06e:	2800      	cmp	r0, #0
 800a070:	dc08      	bgt.n	800a084 <__sflush_r+0xfc>
 800a072:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800a076:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800a07a:	81a3      	strh	r3, [r4, #12]
 800a07c:	f04f 30ff 	mov.w	r0, #4294967295
 800a080:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a084:	4407      	add	r7, r0
 800a086:	eba8 0800 	sub.w	r8, r8, r0
 800a08a:	e7e7      	b.n	800a05c <__sflush_r+0xd4>
 800a08c:	dfbffffe 	.word	0xdfbffffe

0800a090 <_fflush_r>:
 800a090:	b538      	push	{r3, r4, r5, lr}
 800a092:	690b      	ldr	r3, [r1, #16]
 800a094:	4605      	mov	r5, r0
 800a096:	460c      	mov	r4, r1
 800a098:	b913      	cbnz	r3, 800a0a0 <_fflush_r+0x10>
 800a09a:	2500      	movs	r5, #0
 800a09c:	4628      	mov	r0, r5
 800a09e:	bd38      	pop	{r3, r4, r5, pc}
 800a0a0:	b118      	cbz	r0, 800a0aa <_fflush_r+0x1a>
 800a0a2:	6a03      	ldr	r3, [r0, #32]
 800a0a4:	b90b      	cbnz	r3, 800a0aa <_fflush_r+0x1a>
 800a0a6:	f7fe fa41 	bl	800852c <__sinit>
 800a0aa:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800a0ae:	2b00      	cmp	r3, #0
 800a0b0:	d0f3      	beq.n	800a09a <_fflush_r+0xa>
 800a0b2:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 800a0b4:	07d0      	lsls	r0, r2, #31
 800a0b6:	d404      	bmi.n	800a0c2 <_fflush_r+0x32>
 800a0b8:	0599      	lsls	r1, r3, #22
 800a0ba:	d402      	bmi.n	800a0c2 <_fflush_r+0x32>
 800a0bc:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800a0be:	f7fe fb50 	bl	8008762 <__retarget_lock_acquire_recursive>
 800a0c2:	4628      	mov	r0, r5
 800a0c4:	4621      	mov	r1, r4
 800a0c6:	f7ff ff5f 	bl	8009f88 <__sflush_r>
 800a0ca:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 800a0cc:	07da      	lsls	r2, r3, #31
 800a0ce:	4605      	mov	r5, r0
 800a0d0:	d4e4      	bmi.n	800a09c <_fflush_r+0xc>
 800a0d2:	89a3      	ldrh	r3, [r4, #12]
 800a0d4:	059b      	lsls	r3, r3, #22
 800a0d6:	d4e1      	bmi.n	800a09c <_fflush_r+0xc>
 800a0d8:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800a0da:	f7fe fb43 	bl	8008764 <__retarget_lock_release_recursive>
 800a0de:	e7dd      	b.n	800a09c <_fflush_r+0xc>

0800a0e0 <__swbuf_r>:
 800a0e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800a0e2:	460e      	mov	r6, r1
 800a0e4:	4614      	mov	r4, r2
 800a0e6:	4605      	mov	r5, r0
 800a0e8:	b118      	cbz	r0, 800a0f2 <__swbuf_r+0x12>
 800a0ea:	6a03      	ldr	r3, [r0, #32]
 800a0ec:	b90b      	cbnz	r3, 800a0f2 <__swbuf_r+0x12>
 800a0ee:	f7fe fa1d 	bl	800852c <__sinit>
 800a0f2:	69a3      	ldr	r3, [r4, #24]
 800a0f4:	60a3      	str	r3, [r4, #8]
 800a0f6:	89a3      	ldrh	r3, [r4, #12]
 800a0f8:	071a      	lsls	r2, r3, #28
 800a0fa:	d501      	bpl.n	800a100 <__swbuf_r+0x20>
 800a0fc:	6923      	ldr	r3, [r4, #16]
 800a0fe:	b943      	cbnz	r3, 800a112 <__swbuf_r+0x32>
 800a100:	4621      	mov	r1, r4
 800a102:	4628      	mov	r0, r5
 800a104:	f000 f82a 	bl	800a15c <__swsetup_r>
 800a108:	b118      	cbz	r0, 800a112 <__swbuf_r+0x32>
 800a10a:	f04f 37ff 	mov.w	r7, #4294967295
 800a10e:	4638      	mov	r0, r7
 800a110:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800a112:	6823      	ldr	r3, [r4, #0]
 800a114:	6922      	ldr	r2, [r4, #16]
 800a116:	1a98      	subs	r0, r3, r2
 800a118:	6963      	ldr	r3, [r4, #20]
 800a11a:	b2f6      	uxtb	r6, r6
 800a11c:	4283      	cmp	r3, r0
 800a11e:	4637      	mov	r7, r6
 800a120:	dc05      	bgt.n	800a12e <__swbuf_r+0x4e>
 800a122:	4621      	mov	r1, r4
 800a124:	4628      	mov	r0, r5
 800a126:	f7ff ffb3 	bl	800a090 <_fflush_r>
 800a12a:	2800      	cmp	r0, #0
 800a12c:	d1ed      	bne.n	800a10a <__swbuf_r+0x2a>
 800a12e:	68a3      	ldr	r3, [r4, #8]
 800a130:	3b01      	subs	r3, #1
 800a132:	60a3      	str	r3, [r4, #8]
 800a134:	6823      	ldr	r3, [r4, #0]
 800a136:	1c5a      	adds	r2, r3, #1
 800a138:	6022      	str	r2, [r4, #0]
 800a13a:	701e      	strb	r6, [r3, #0]
 800a13c:	6962      	ldr	r2, [r4, #20]
 800a13e:	1c43      	adds	r3, r0, #1
 800a140:	429a      	cmp	r2, r3
 800a142:	d004      	beq.n	800a14e <__swbuf_r+0x6e>
 800a144:	89a3      	ldrh	r3, [r4, #12]
 800a146:	07db      	lsls	r3, r3, #31
 800a148:	d5e1      	bpl.n	800a10e <__swbuf_r+0x2e>
 800a14a:	2e0a      	cmp	r6, #10
 800a14c:	d1df      	bne.n	800a10e <__swbuf_r+0x2e>
 800a14e:	4621      	mov	r1, r4
 800a150:	4628      	mov	r0, r5
 800a152:	f7ff ff9d 	bl	800a090 <_fflush_r>
 800a156:	2800      	cmp	r0, #0
 800a158:	d0d9      	beq.n	800a10e <__swbuf_r+0x2e>
 800a15a:	e7d6      	b.n	800a10a <__swbuf_r+0x2a>

0800a15c <__swsetup_r>:
 800a15c:	b538      	push	{r3, r4, r5, lr}
 800a15e:	4b29      	ldr	r3, [pc, #164]	@ (800a204 <__swsetup_r+0xa8>)
 800a160:	4605      	mov	r5, r0
 800a162:	6818      	ldr	r0, [r3, #0]
 800a164:	460c      	mov	r4, r1
 800a166:	b118      	cbz	r0, 800a170 <__swsetup_r+0x14>
 800a168:	6a03      	ldr	r3, [r0, #32]
 800a16a:	b90b      	cbnz	r3, 800a170 <__swsetup_r+0x14>
 800a16c:	f7fe f9de 	bl	800852c <__sinit>
 800a170:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800a174:	0719      	lsls	r1, r3, #28
 800a176:	d422      	bmi.n	800a1be <__swsetup_r+0x62>
 800a178:	06da      	lsls	r2, r3, #27
 800a17a:	d407      	bmi.n	800a18c <__swsetup_r+0x30>
 800a17c:	2209      	movs	r2, #9
 800a17e:	602a      	str	r2, [r5, #0]
 800a180:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800a184:	81a3      	strh	r3, [r4, #12]
 800a186:	f04f 30ff 	mov.w	r0, #4294967295
 800a18a:	e033      	b.n	800a1f4 <__swsetup_r+0x98>
 800a18c:	0758      	lsls	r0, r3, #29
 800a18e:	d512      	bpl.n	800a1b6 <__swsetup_r+0x5a>
 800a190:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 800a192:	b141      	cbz	r1, 800a1a6 <__swsetup_r+0x4a>
 800a194:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 800a198:	4299      	cmp	r1, r3
 800a19a:	d002      	beq.n	800a1a2 <__swsetup_r+0x46>
 800a19c:	4628      	mov	r0, r5
 800a19e:	f7ff f92f 	bl	8009400 <_free_r>
 800a1a2:	2300      	movs	r3, #0
 800a1a4:	6363      	str	r3, [r4, #52]	@ 0x34
 800a1a6:	89a3      	ldrh	r3, [r4, #12]
 800a1a8:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 800a1ac:	81a3      	strh	r3, [r4, #12]
 800a1ae:	2300      	movs	r3, #0
 800a1b0:	6063      	str	r3, [r4, #4]
 800a1b2:	6923      	ldr	r3, [r4, #16]
 800a1b4:	6023      	str	r3, [r4, #0]
 800a1b6:	89a3      	ldrh	r3, [r4, #12]
 800a1b8:	f043 0308 	orr.w	r3, r3, #8
 800a1bc:	81a3      	strh	r3, [r4, #12]
 800a1be:	6923      	ldr	r3, [r4, #16]
 800a1c0:	b94b      	cbnz	r3, 800a1d6 <__swsetup_r+0x7a>
 800a1c2:	89a3      	ldrh	r3, [r4, #12]
 800a1c4:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 800a1c8:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800a1cc:	d003      	beq.n	800a1d6 <__swsetup_r+0x7a>
 800a1ce:	4621      	mov	r1, r4
 800a1d0:	4628      	mov	r0, r5
 800a1d2:	f000 f8c1 	bl	800a358 <__smakebuf_r>
 800a1d6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800a1da:	f013 0201 	ands.w	r2, r3, #1
 800a1de:	d00a      	beq.n	800a1f6 <__swsetup_r+0x9a>
 800a1e0:	2200      	movs	r2, #0
 800a1e2:	60a2      	str	r2, [r4, #8]
 800a1e4:	6962      	ldr	r2, [r4, #20]
 800a1e6:	4252      	negs	r2, r2
 800a1e8:	61a2      	str	r2, [r4, #24]
 800a1ea:	6922      	ldr	r2, [r4, #16]
 800a1ec:	b942      	cbnz	r2, 800a200 <__swsetup_r+0xa4>
 800a1ee:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 800a1f2:	d1c5      	bne.n	800a180 <__swsetup_r+0x24>
 800a1f4:	bd38      	pop	{r3, r4, r5, pc}
 800a1f6:	0799      	lsls	r1, r3, #30
 800a1f8:	bf58      	it	pl
 800a1fa:	6962      	ldrpl	r2, [r4, #20]
 800a1fc:	60a2      	str	r2, [r4, #8]
 800a1fe:	e7f4      	b.n	800a1ea <__swsetup_r+0x8e>
 800a200:	2000      	movs	r0, #0
 800a202:	e7f7      	b.n	800a1f4 <__swsetup_r+0x98>
 800a204:	20000018 	.word	0x20000018

0800a208 <_sbrk_r>:
 800a208:	b538      	push	{r3, r4, r5, lr}
 800a20a:	4d06      	ldr	r5, [pc, #24]	@ (800a224 <_sbrk_r+0x1c>)
 800a20c:	2300      	movs	r3, #0
 800a20e:	4604      	mov	r4, r0
 800a210:	4608      	mov	r0, r1
 800a212:	602b      	str	r3, [r5, #0]
 800a214:	f7f8 fa92 	bl	800273c <_sbrk>
 800a218:	1c43      	adds	r3, r0, #1
 800a21a:	d102      	bne.n	800a222 <_sbrk_r+0x1a>
 800a21c:	682b      	ldr	r3, [r5, #0]
 800a21e:	b103      	cbz	r3, 800a222 <_sbrk_r+0x1a>
 800a220:	6023      	str	r3, [r4, #0]
 800a222:	bd38      	pop	{r3, r4, r5, pc}
 800a224:	20000684 	.word	0x20000684

0800a228 <memcpy>:
 800a228:	440a      	add	r2, r1
 800a22a:	4291      	cmp	r1, r2
 800a22c:	f100 33ff 	add.w	r3, r0, #4294967295
 800a230:	d100      	bne.n	800a234 <memcpy+0xc>
 800a232:	4770      	bx	lr
 800a234:	b510      	push	{r4, lr}
 800a236:	f811 4b01 	ldrb.w	r4, [r1], #1
 800a23a:	f803 4f01 	strb.w	r4, [r3, #1]!
 800a23e:	4291      	cmp	r1, r2
 800a240:	d1f9      	bne.n	800a236 <memcpy+0xe>
 800a242:	bd10      	pop	{r4, pc}

0800a244 <__assert_func>:
 800a244:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800a246:	4614      	mov	r4, r2
 800a248:	461a      	mov	r2, r3
 800a24a:	4b09      	ldr	r3, [pc, #36]	@ (800a270 <__assert_func+0x2c>)
 800a24c:	681b      	ldr	r3, [r3, #0]
 800a24e:	4605      	mov	r5, r0
 800a250:	68d8      	ldr	r0, [r3, #12]
 800a252:	b954      	cbnz	r4, 800a26a <__assert_func+0x26>
 800a254:	4b07      	ldr	r3, [pc, #28]	@ (800a274 <__assert_func+0x30>)
 800a256:	461c      	mov	r4, r3
 800a258:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800a25c:	9100      	str	r1, [sp, #0]
 800a25e:	462b      	mov	r3, r5
 800a260:	4905      	ldr	r1, [pc, #20]	@ (800a278 <__assert_func+0x34>)
 800a262:	f000 f841 	bl	800a2e8 <fiprintf>
 800a266:	f000 f8d5 	bl	800a414 <abort>
 800a26a:	4b04      	ldr	r3, [pc, #16]	@ (800a27c <__assert_func+0x38>)
 800a26c:	e7f4      	b.n	800a258 <__assert_func+0x14>
 800a26e:	bf00      	nop
 800a270:	20000018 	.word	0x20000018
 800a274:	0800aa16 	.word	0x0800aa16
 800a278:	0800a9e8 	.word	0x0800a9e8
 800a27c:	0800a9db 	.word	0x0800a9db

0800a280 <_calloc_r>:
 800a280:	b570      	push	{r4, r5, r6, lr}
 800a282:	fba1 5402 	umull	r5, r4, r1, r2
 800a286:	b93c      	cbnz	r4, 800a298 <_calloc_r+0x18>
 800a288:	4629      	mov	r1, r5
 800a28a:	f7ff f92d 	bl	80094e8 <_malloc_r>
 800a28e:	4606      	mov	r6, r0
 800a290:	b928      	cbnz	r0, 800a29e <_calloc_r+0x1e>
 800a292:	2600      	movs	r6, #0
 800a294:	4630      	mov	r0, r6
 800a296:	bd70      	pop	{r4, r5, r6, pc}
 800a298:	220c      	movs	r2, #12
 800a29a:	6002      	str	r2, [r0, #0]
 800a29c:	e7f9      	b.n	800a292 <_calloc_r+0x12>
 800a29e:	462a      	mov	r2, r5
 800a2a0:	4621      	mov	r1, r4
 800a2a2:	f7fe f9ce 	bl	8008642 <memset>
 800a2a6:	e7f5      	b.n	800a294 <_calloc_r+0x14>

0800a2a8 <__ascii_mbtowc>:
 800a2a8:	b082      	sub	sp, #8
 800a2aa:	b901      	cbnz	r1, 800a2ae <__ascii_mbtowc+0x6>
 800a2ac:	a901      	add	r1, sp, #4
 800a2ae:	b142      	cbz	r2, 800a2c2 <__ascii_mbtowc+0x1a>
 800a2b0:	b14b      	cbz	r3, 800a2c6 <__ascii_mbtowc+0x1e>
 800a2b2:	7813      	ldrb	r3, [r2, #0]
 800a2b4:	600b      	str	r3, [r1, #0]
 800a2b6:	7812      	ldrb	r2, [r2, #0]
 800a2b8:	1e10      	subs	r0, r2, #0
 800a2ba:	bf18      	it	ne
 800a2bc:	2001      	movne	r0, #1
 800a2be:	b002      	add	sp, #8
 800a2c0:	4770      	bx	lr
 800a2c2:	4610      	mov	r0, r2
 800a2c4:	e7fb      	b.n	800a2be <__ascii_mbtowc+0x16>
 800a2c6:	f06f 0001 	mvn.w	r0, #1
 800a2ca:	e7f8      	b.n	800a2be <__ascii_mbtowc+0x16>

0800a2cc <__ascii_wctomb>:
 800a2cc:	4603      	mov	r3, r0
 800a2ce:	4608      	mov	r0, r1
 800a2d0:	b141      	cbz	r1, 800a2e4 <__ascii_wctomb+0x18>
 800a2d2:	2aff      	cmp	r2, #255	@ 0xff
 800a2d4:	d904      	bls.n	800a2e0 <__ascii_wctomb+0x14>
 800a2d6:	228a      	movs	r2, #138	@ 0x8a
 800a2d8:	601a      	str	r2, [r3, #0]
 800a2da:	f04f 30ff 	mov.w	r0, #4294967295
 800a2de:	4770      	bx	lr
 800a2e0:	700a      	strb	r2, [r1, #0]
 800a2e2:	2001      	movs	r0, #1
 800a2e4:	4770      	bx	lr
	...

0800a2e8 <fiprintf>:
 800a2e8:	b40e      	push	{r1, r2, r3}
 800a2ea:	b503      	push	{r0, r1, lr}
 800a2ec:	4601      	mov	r1, r0
 800a2ee:	ab03      	add	r3, sp, #12
 800a2f0:	4805      	ldr	r0, [pc, #20]	@ (800a308 <fiprintf+0x20>)
 800a2f2:	f853 2b04 	ldr.w	r2, [r3], #4
 800a2f6:	6800      	ldr	r0, [r0, #0]
 800a2f8:	9301      	str	r3, [sp, #4]
 800a2fa:	f7ff fd2d 	bl	8009d58 <_vfiprintf_r>
 800a2fe:	b002      	add	sp, #8
 800a300:	f85d eb04 	ldr.w	lr, [sp], #4
 800a304:	b003      	add	sp, #12
 800a306:	4770      	bx	lr
 800a308:	20000018 	.word	0x20000018

0800a30c <__swhatbuf_r>:
 800a30c:	b570      	push	{r4, r5, r6, lr}
 800a30e:	460c      	mov	r4, r1
 800a310:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800a314:	2900      	cmp	r1, #0
 800a316:	b096      	sub	sp, #88	@ 0x58
 800a318:	4615      	mov	r5, r2
 800a31a:	461e      	mov	r6, r3
 800a31c:	da0d      	bge.n	800a33a <__swhatbuf_r+0x2e>
 800a31e:	89a3      	ldrh	r3, [r4, #12]
 800a320:	f013 0f80 	tst.w	r3, #128	@ 0x80
 800a324:	f04f 0100 	mov.w	r1, #0
 800a328:	bf14      	ite	ne
 800a32a:	2340      	movne	r3, #64	@ 0x40
 800a32c:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 800a330:	2000      	movs	r0, #0
 800a332:	6031      	str	r1, [r6, #0]
 800a334:	602b      	str	r3, [r5, #0]
 800a336:	b016      	add	sp, #88	@ 0x58
 800a338:	bd70      	pop	{r4, r5, r6, pc}
 800a33a:	466a      	mov	r2, sp
 800a33c:	f000 f848 	bl	800a3d0 <_fstat_r>
 800a340:	2800      	cmp	r0, #0
 800a342:	dbec      	blt.n	800a31e <__swhatbuf_r+0x12>
 800a344:	9901      	ldr	r1, [sp, #4]
 800a346:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 800a34a:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 800a34e:	4259      	negs	r1, r3
 800a350:	4159      	adcs	r1, r3
 800a352:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800a356:	e7eb      	b.n	800a330 <__swhatbuf_r+0x24>

0800a358 <__smakebuf_r>:
 800a358:	898b      	ldrh	r3, [r1, #12]
 800a35a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800a35c:	079d      	lsls	r5, r3, #30
 800a35e:	4606      	mov	r6, r0
 800a360:	460c      	mov	r4, r1
 800a362:	d507      	bpl.n	800a374 <__smakebuf_r+0x1c>
 800a364:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 800a368:	6023      	str	r3, [r4, #0]
 800a36a:	6123      	str	r3, [r4, #16]
 800a36c:	2301      	movs	r3, #1
 800a36e:	6163      	str	r3, [r4, #20]
 800a370:	b003      	add	sp, #12
 800a372:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a374:	ab01      	add	r3, sp, #4
 800a376:	466a      	mov	r2, sp
 800a378:	f7ff ffc8 	bl	800a30c <__swhatbuf_r>
 800a37c:	9f00      	ldr	r7, [sp, #0]
 800a37e:	4605      	mov	r5, r0
 800a380:	4639      	mov	r1, r7
 800a382:	4630      	mov	r0, r6
 800a384:	f7ff f8b0 	bl	80094e8 <_malloc_r>
 800a388:	b948      	cbnz	r0, 800a39e <__smakebuf_r+0x46>
 800a38a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800a38e:	059a      	lsls	r2, r3, #22
 800a390:	d4ee      	bmi.n	800a370 <__smakebuf_r+0x18>
 800a392:	f023 0303 	bic.w	r3, r3, #3
 800a396:	f043 0302 	orr.w	r3, r3, #2
 800a39a:	81a3      	strh	r3, [r4, #12]
 800a39c:	e7e2      	b.n	800a364 <__smakebuf_r+0xc>
 800a39e:	89a3      	ldrh	r3, [r4, #12]
 800a3a0:	6020      	str	r0, [r4, #0]
 800a3a2:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800a3a6:	81a3      	strh	r3, [r4, #12]
 800a3a8:	9b01      	ldr	r3, [sp, #4]
 800a3aa:	e9c4 0704 	strd	r0, r7, [r4, #16]
 800a3ae:	b15b      	cbz	r3, 800a3c8 <__smakebuf_r+0x70>
 800a3b0:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800a3b4:	4630      	mov	r0, r6
 800a3b6:	f000 f81d 	bl	800a3f4 <_isatty_r>
 800a3ba:	b128      	cbz	r0, 800a3c8 <__smakebuf_r+0x70>
 800a3bc:	89a3      	ldrh	r3, [r4, #12]
 800a3be:	f023 0303 	bic.w	r3, r3, #3
 800a3c2:	f043 0301 	orr.w	r3, r3, #1
 800a3c6:	81a3      	strh	r3, [r4, #12]
 800a3c8:	89a3      	ldrh	r3, [r4, #12]
 800a3ca:	431d      	orrs	r5, r3
 800a3cc:	81a5      	strh	r5, [r4, #12]
 800a3ce:	e7cf      	b.n	800a370 <__smakebuf_r+0x18>

0800a3d0 <_fstat_r>:
 800a3d0:	b538      	push	{r3, r4, r5, lr}
 800a3d2:	4d07      	ldr	r5, [pc, #28]	@ (800a3f0 <_fstat_r+0x20>)
 800a3d4:	2300      	movs	r3, #0
 800a3d6:	4604      	mov	r4, r0
 800a3d8:	4608      	mov	r0, r1
 800a3da:	4611      	mov	r1, r2
 800a3dc:	602b      	str	r3, [r5, #0]
 800a3de:	f7f8 f985 	bl	80026ec <_fstat>
 800a3e2:	1c43      	adds	r3, r0, #1
 800a3e4:	d102      	bne.n	800a3ec <_fstat_r+0x1c>
 800a3e6:	682b      	ldr	r3, [r5, #0]
 800a3e8:	b103      	cbz	r3, 800a3ec <_fstat_r+0x1c>
 800a3ea:	6023      	str	r3, [r4, #0]
 800a3ec:	bd38      	pop	{r3, r4, r5, pc}
 800a3ee:	bf00      	nop
 800a3f0:	20000684 	.word	0x20000684

0800a3f4 <_isatty_r>:
 800a3f4:	b538      	push	{r3, r4, r5, lr}
 800a3f6:	4d06      	ldr	r5, [pc, #24]	@ (800a410 <_isatty_r+0x1c>)
 800a3f8:	2300      	movs	r3, #0
 800a3fa:	4604      	mov	r4, r0
 800a3fc:	4608      	mov	r0, r1
 800a3fe:	602b      	str	r3, [r5, #0]
 800a400:	f7f8 f984 	bl	800270c <_isatty>
 800a404:	1c43      	adds	r3, r0, #1
 800a406:	d102      	bne.n	800a40e <_isatty_r+0x1a>
 800a408:	682b      	ldr	r3, [r5, #0]
 800a40a:	b103      	cbz	r3, 800a40e <_isatty_r+0x1a>
 800a40c:	6023      	str	r3, [r4, #0]
 800a40e:	bd38      	pop	{r3, r4, r5, pc}
 800a410:	20000684 	.word	0x20000684

0800a414 <abort>:
 800a414:	b508      	push	{r3, lr}
 800a416:	2006      	movs	r0, #6
 800a418:	f000 f82c 	bl	800a474 <raise>
 800a41c:	2001      	movs	r0, #1
 800a41e:	f7f8 f931 	bl	8002684 <_exit>

0800a422 <_raise_r>:
 800a422:	291f      	cmp	r1, #31
 800a424:	b538      	push	{r3, r4, r5, lr}
 800a426:	4605      	mov	r5, r0
 800a428:	460c      	mov	r4, r1
 800a42a:	d904      	bls.n	800a436 <_raise_r+0x14>
 800a42c:	2316      	movs	r3, #22
 800a42e:	6003      	str	r3, [r0, #0]
 800a430:	f04f 30ff 	mov.w	r0, #4294967295
 800a434:	bd38      	pop	{r3, r4, r5, pc}
 800a436:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 800a438:	b112      	cbz	r2, 800a440 <_raise_r+0x1e>
 800a43a:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 800a43e:	b94b      	cbnz	r3, 800a454 <_raise_r+0x32>
 800a440:	4628      	mov	r0, r5
 800a442:	f000 f831 	bl	800a4a8 <_getpid_r>
 800a446:	4622      	mov	r2, r4
 800a448:	4601      	mov	r1, r0
 800a44a:	4628      	mov	r0, r5
 800a44c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800a450:	f000 b818 	b.w	800a484 <_kill_r>
 800a454:	2b01      	cmp	r3, #1
 800a456:	d00a      	beq.n	800a46e <_raise_r+0x4c>
 800a458:	1c59      	adds	r1, r3, #1
 800a45a:	d103      	bne.n	800a464 <_raise_r+0x42>
 800a45c:	2316      	movs	r3, #22
 800a45e:	6003      	str	r3, [r0, #0]
 800a460:	2001      	movs	r0, #1
 800a462:	e7e7      	b.n	800a434 <_raise_r+0x12>
 800a464:	2100      	movs	r1, #0
 800a466:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 800a46a:	4620      	mov	r0, r4
 800a46c:	4798      	blx	r3
 800a46e:	2000      	movs	r0, #0
 800a470:	e7e0      	b.n	800a434 <_raise_r+0x12>
	...

0800a474 <raise>:
 800a474:	4b02      	ldr	r3, [pc, #8]	@ (800a480 <raise+0xc>)
 800a476:	4601      	mov	r1, r0
 800a478:	6818      	ldr	r0, [r3, #0]
 800a47a:	f7ff bfd2 	b.w	800a422 <_raise_r>
 800a47e:	bf00      	nop
 800a480:	20000018 	.word	0x20000018

0800a484 <_kill_r>:
 800a484:	b538      	push	{r3, r4, r5, lr}
 800a486:	4d07      	ldr	r5, [pc, #28]	@ (800a4a4 <_kill_r+0x20>)
 800a488:	2300      	movs	r3, #0
 800a48a:	4604      	mov	r4, r0
 800a48c:	4608      	mov	r0, r1
 800a48e:	4611      	mov	r1, r2
 800a490:	602b      	str	r3, [r5, #0]
 800a492:	f7f8 f8e7 	bl	8002664 <_kill>
 800a496:	1c43      	adds	r3, r0, #1
 800a498:	d102      	bne.n	800a4a0 <_kill_r+0x1c>
 800a49a:	682b      	ldr	r3, [r5, #0]
 800a49c:	b103      	cbz	r3, 800a4a0 <_kill_r+0x1c>
 800a49e:	6023      	str	r3, [r4, #0]
 800a4a0:	bd38      	pop	{r3, r4, r5, pc}
 800a4a2:	bf00      	nop
 800a4a4:	20000684 	.word	0x20000684

0800a4a8 <_getpid_r>:
 800a4a8:	f7f8 b8d4 	b.w	8002654 <_getpid>

0800a4ac <_init>:
 800a4ac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800a4ae:	bf00      	nop
 800a4b0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800a4b2:	bc08      	pop	{r3}
 800a4b4:	469e      	mov	lr, r3
 800a4b6:	4770      	bx	lr

0800a4b8 <_fini>:
 800a4b8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800a4ba:	bf00      	nop
 800a4bc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800a4be:	bc08      	pop	{r3}
 800a4c0:	469e      	mov	lr, r3
 800a4c2:	4770      	bx	lr
