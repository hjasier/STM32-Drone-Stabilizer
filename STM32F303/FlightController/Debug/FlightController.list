
FlightController.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000a964  08000190  08000190  00001190  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000005e0  0800aaf8  0800aaf8  0000baf8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800b0d8  0800b0d8  0000d1d4  2**0
                  CONTENTS
  4 .ARM          00000008  0800b0d8  0800b0d8  0000c0d8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  0800b0e0  0800b0e0  0000d1d4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800b0e0  0800b0e0  0000c0e0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  0800b0e4  0800b0e4  0000c0e4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         000001d4  20000000  0800b0e8  0000d000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  0000d1d4  2**0
                  CONTENTS
 10 .bss          000004c4  200001d4  200001d4  0000d1d4  2**2
                  ALLOC
 11 ._user_heap_stack 00000600  20000698  20000698  0000d1d4  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  0000d1d4  2**0
                  CONTENTS, READONLY
 13 .debug_info   00014d57  00000000  00000000  0000d204  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00002f5a  00000000  00000000  00021f5b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00001200  00000000  00000000  00024eb8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00000e21  00000000  00000000  000260b8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  0001d4ab  00000000  00000000  00026ed9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00017e50  00000000  00000000  00044384  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000a88e3  00000000  00000000  0005c1d4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  00104ab7  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00005e9c  00000000  00000000  00104afc  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 00000097  00000000  00000000  0010a998  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000190 <__do_global_dtors_aux>:
 8000190:	b510      	push	{r4, lr}
 8000192:	4c05      	ldr	r4, [pc, #20]	@ (80001a8 <__do_global_dtors_aux+0x18>)
 8000194:	7823      	ldrb	r3, [r4, #0]
 8000196:	b933      	cbnz	r3, 80001a6 <__do_global_dtors_aux+0x16>
 8000198:	4b04      	ldr	r3, [pc, #16]	@ (80001ac <__do_global_dtors_aux+0x1c>)
 800019a:	b113      	cbz	r3, 80001a2 <__do_global_dtors_aux+0x12>
 800019c:	4804      	ldr	r0, [pc, #16]	@ (80001b0 <__do_global_dtors_aux+0x20>)
 800019e:	f3af 8000 	nop.w
 80001a2:	2301      	movs	r3, #1
 80001a4:	7023      	strb	r3, [r4, #0]
 80001a6:	bd10      	pop	{r4, pc}
 80001a8:	200001d4 	.word	0x200001d4
 80001ac:	00000000 	.word	0x00000000
 80001b0:	0800aadc 	.word	0x0800aadc

080001b4 <frame_dummy>:
 80001b4:	b508      	push	{r3, lr}
 80001b6:	4b03      	ldr	r3, [pc, #12]	@ (80001c4 <frame_dummy+0x10>)
 80001b8:	b11b      	cbz	r3, 80001c2 <frame_dummy+0xe>
 80001ba:	4903      	ldr	r1, [pc, #12]	@ (80001c8 <frame_dummy+0x14>)
 80001bc:	4803      	ldr	r0, [pc, #12]	@ (80001cc <frame_dummy+0x18>)
 80001be:	f3af 8000 	nop.w
 80001c2:	bd08      	pop	{r3, pc}
 80001c4:	00000000 	.word	0x00000000
 80001c8:	200001d8 	.word	0x200001d8
 80001cc:	0800aadc 	.word	0x0800aadc

080001d0 <memchr>:
 80001d0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 80001d4:	2a10      	cmp	r2, #16
 80001d6:	db2b      	blt.n	8000230 <memchr+0x60>
 80001d8:	f010 0f07 	tst.w	r0, #7
 80001dc:	d008      	beq.n	80001f0 <memchr+0x20>
 80001de:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001e2:	3a01      	subs	r2, #1
 80001e4:	428b      	cmp	r3, r1
 80001e6:	d02d      	beq.n	8000244 <memchr+0x74>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	b342      	cbz	r2, 8000240 <memchr+0x70>
 80001ee:	d1f6      	bne.n	80001de <memchr+0xe>
 80001f0:	b4f0      	push	{r4, r5, r6, r7}
 80001f2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80001f6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80001fa:	f022 0407 	bic.w	r4, r2, #7
 80001fe:	f07f 0700 	mvns.w	r7, #0
 8000202:	2300      	movs	r3, #0
 8000204:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000208:	3c08      	subs	r4, #8
 800020a:	ea85 0501 	eor.w	r5, r5, r1
 800020e:	ea86 0601 	eor.w	r6, r6, r1
 8000212:	fa85 f547 	uadd8	r5, r5, r7
 8000216:	faa3 f587 	sel	r5, r3, r7
 800021a:	fa86 f647 	uadd8	r6, r6, r7
 800021e:	faa5 f687 	sel	r6, r5, r7
 8000222:	b98e      	cbnz	r6, 8000248 <memchr+0x78>
 8000224:	d1ee      	bne.n	8000204 <memchr+0x34>
 8000226:	bcf0      	pop	{r4, r5, r6, r7}
 8000228:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800022c:	f002 0207 	and.w	r2, r2, #7
 8000230:	b132      	cbz	r2, 8000240 <memchr+0x70>
 8000232:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000236:	3a01      	subs	r2, #1
 8000238:	ea83 0301 	eor.w	r3, r3, r1
 800023c:	b113      	cbz	r3, 8000244 <memchr+0x74>
 800023e:	d1f8      	bne.n	8000232 <memchr+0x62>
 8000240:	2000      	movs	r0, #0
 8000242:	4770      	bx	lr
 8000244:	3801      	subs	r0, #1
 8000246:	4770      	bx	lr
 8000248:	2d00      	cmp	r5, #0
 800024a:	bf06      	itte	eq
 800024c:	4635      	moveq	r5, r6
 800024e:	3803      	subeq	r0, #3
 8000250:	3807      	subne	r0, #7
 8000252:	f015 0f01 	tst.w	r5, #1
 8000256:	d107      	bne.n	8000268 <memchr+0x98>
 8000258:	3001      	adds	r0, #1
 800025a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800025e:	bf02      	ittt	eq
 8000260:	3001      	addeq	r0, #1
 8000262:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000266:	3001      	addeq	r0, #1
 8000268:	bcf0      	pop	{r4, r5, r6, r7}
 800026a:	3801      	subs	r0, #1
 800026c:	4770      	bx	lr
 800026e:	bf00      	nop

08000270 <strlen>:
 8000270:	4603      	mov	r3, r0
 8000272:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000276:	2a00      	cmp	r2, #0
 8000278:	d1fb      	bne.n	8000272 <strlen+0x2>
 800027a:	1a18      	subs	r0, r3, r0
 800027c:	3801      	subs	r0, #1
 800027e:	4770      	bx	lr

08000280 <__aeabi_drsub>:
 8000280:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 8000284:	e002      	b.n	800028c <__adddf3>
 8000286:	bf00      	nop

08000288 <__aeabi_dsub>:
 8000288:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

0800028c <__adddf3>:
 800028c:	b530      	push	{r4, r5, lr}
 800028e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000292:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000296:	ea94 0f05 	teq	r4, r5
 800029a:	bf08      	it	eq
 800029c:	ea90 0f02 	teqeq	r0, r2
 80002a0:	bf1f      	itttt	ne
 80002a2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002a6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002aa:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002ae:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002b2:	f000 80e2 	beq.w	800047a <__adddf3+0x1ee>
 80002b6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002ba:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002be:	bfb8      	it	lt
 80002c0:	426d      	neglt	r5, r5
 80002c2:	dd0c      	ble.n	80002de <__adddf3+0x52>
 80002c4:	442c      	add	r4, r5
 80002c6:	ea80 0202 	eor.w	r2, r0, r2
 80002ca:	ea81 0303 	eor.w	r3, r1, r3
 80002ce:	ea82 0000 	eor.w	r0, r2, r0
 80002d2:	ea83 0101 	eor.w	r1, r3, r1
 80002d6:	ea80 0202 	eor.w	r2, r0, r2
 80002da:	ea81 0303 	eor.w	r3, r1, r3
 80002de:	2d36      	cmp	r5, #54	@ 0x36
 80002e0:	bf88      	it	hi
 80002e2:	bd30      	pophi	{r4, r5, pc}
 80002e4:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 80002e8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80002ec:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 80002f0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80002f4:	d002      	beq.n	80002fc <__adddf3+0x70>
 80002f6:	4240      	negs	r0, r0
 80002f8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80002fc:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 8000300:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000304:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000308:	d002      	beq.n	8000310 <__adddf3+0x84>
 800030a:	4252      	negs	r2, r2
 800030c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000310:	ea94 0f05 	teq	r4, r5
 8000314:	f000 80a7 	beq.w	8000466 <__adddf3+0x1da>
 8000318:	f1a4 0401 	sub.w	r4, r4, #1
 800031c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000320:	db0d      	blt.n	800033e <__adddf3+0xb2>
 8000322:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000326:	fa22 f205 	lsr.w	r2, r2, r5
 800032a:	1880      	adds	r0, r0, r2
 800032c:	f141 0100 	adc.w	r1, r1, #0
 8000330:	fa03 f20e 	lsl.w	r2, r3, lr
 8000334:	1880      	adds	r0, r0, r2
 8000336:	fa43 f305 	asr.w	r3, r3, r5
 800033a:	4159      	adcs	r1, r3
 800033c:	e00e      	b.n	800035c <__adddf3+0xd0>
 800033e:	f1a5 0520 	sub.w	r5, r5, #32
 8000342:	f10e 0e20 	add.w	lr, lr, #32
 8000346:	2a01      	cmp	r2, #1
 8000348:	fa03 fc0e 	lsl.w	ip, r3, lr
 800034c:	bf28      	it	cs
 800034e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000352:	fa43 f305 	asr.w	r3, r3, r5
 8000356:	18c0      	adds	r0, r0, r3
 8000358:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800035c:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000360:	d507      	bpl.n	8000372 <__adddf3+0xe6>
 8000362:	f04f 0e00 	mov.w	lr, #0
 8000366:	f1dc 0c00 	rsbs	ip, ip, #0
 800036a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800036e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000372:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 8000376:	d31b      	bcc.n	80003b0 <__adddf3+0x124>
 8000378:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 800037c:	d30c      	bcc.n	8000398 <__adddf3+0x10c>
 800037e:	0849      	lsrs	r1, r1, #1
 8000380:	ea5f 0030 	movs.w	r0, r0, rrx
 8000384:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000388:	f104 0401 	add.w	r4, r4, #1
 800038c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000390:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 8000394:	f080 809a 	bcs.w	80004cc <__adddf3+0x240>
 8000398:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 800039c:	bf08      	it	eq
 800039e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003a2:	f150 0000 	adcs.w	r0, r0, #0
 80003a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003aa:	ea41 0105 	orr.w	r1, r1, r5
 80003ae:	bd30      	pop	{r4, r5, pc}
 80003b0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003b4:	4140      	adcs	r0, r0
 80003b6:	eb41 0101 	adc.w	r1, r1, r1
 80003ba:	3c01      	subs	r4, #1
 80003bc:	bf28      	it	cs
 80003be:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 80003c2:	d2e9      	bcs.n	8000398 <__adddf3+0x10c>
 80003c4:	f091 0f00 	teq	r1, #0
 80003c8:	bf04      	itt	eq
 80003ca:	4601      	moveq	r1, r0
 80003cc:	2000      	moveq	r0, #0
 80003ce:	fab1 f381 	clz	r3, r1
 80003d2:	bf08      	it	eq
 80003d4:	3320      	addeq	r3, #32
 80003d6:	f1a3 030b 	sub.w	r3, r3, #11
 80003da:	f1b3 0220 	subs.w	r2, r3, #32
 80003de:	da0c      	bge.n	80003fa <__adddf3+0x16e>
 80003e0:	320c      	adds	r2, #12
 80003e2:	dd08      	ble.n	80003f6 <__adddf3+0x16a>
 80003e4:	f102 0c14 	add.w	ip, r2, #20
 80003e8:	f1c2 020c 	rsb	r2, r2, #12
 80003ec:	fa01 f00c 	lsl.w	r0, r1, ip
 80003f0:	fa21 f102 	lsr.w	r1, r1, r2
 80003f4:	e00c      	b.n	8000410 <__adddf3+0x184>
 80003f6:	f102 0214 	add.w	r2, r2, #20
 80003fa:	bfd8      	it	le
 80003fc:	f1c2 0c20 	rsble	ip, r2, #32
 8000400:	fa01 f102 	lsl.w	r1, r1, r2
 8000404:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000408:	bfdc      	itt	le
 800040a:	ea41 010c 	orrle.w	r1, r1, ip
 800040e:	4090      	lslle	r0, r2
 8000410:	1ae4      	subs	r4, r4, r3
 8000412:	bfa2      	ittt	ge
 8000414:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000418:	4329      	orrge	r1, r5
 800041a:	bd30      	popge	{r4, r5, pc}
 800041c:	ea6f 0404 	mvn.w	r4, r4
 8000420:	3c1f      	subs	r4, #31
 8000422:	da1c      	bge.n	800045e <__adddf3+0x1d2>
 8000424:	340c      	adds	r4, #12
 8000426:	dc0e      	bgt.n	8000446 <__adddf3+0x1ba>
 8000428:	f104 0414 	add.w	r4, r4, #20
 800042c:	f1c4 0220 	rsb	r2, r4, #32
 8000430:	fa20 f004 	lsr.w	r0, r0, r4
 8000434:	fa01 f302 	lsl.w	r3, r1, r2
 8000438:	ea40 0003 	orr.w	r0, r0, r3
 800043c:	fa21 f304 	lsr.w	r3, r1, r4
 8000440:	ea45 0103 	orr.w	r1, r5, r3
 8000444:	bd30      	pop	{r4, r5, pc}
 8000446:	f1c4 040c 	rsb	r4, r4, #12
 800044a:	f1c4 0220 	rsb	r2, r4, #32
 800044e:	fa20 f002 	lsr.w	r0, r0, r2
 8000452:	fa01 f304 	lsl.w	r3, r1, r4
 8000456:	ea40 0003 	orr.w	r0, r0, r3
 800045a:	4629      	mov	r1, r5
 800045c:	bd30      	pop	{r4, r5, pc}
 800045e:	fa21 f004 	lsr.w	r0, r1, r4
 8000462:	4629      	mov	r1, r5
 8000464:	bd30      	pop	{r4, r5, pc}
 8000466:	f094 0f00 	teq	r4, #0
 800046a:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 800046e:	bf06      	itte	eq
 8000470:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 8000474:	3401      	addeq	r4, #1
 8000476:	3d01      	subne	r5, #1
 8000478:	e74e      	b.n	8000318 <__adddf3+0x8c>
 800047a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800047e:	bf18      	it	ne
 8000480:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000484:	d029      	beq.n	80004da <__adddf3+0x24e>
 8000486:	ea94 0f05 	teq	r4, r5
 800048a:	bf08      	it	eq
 800048c:	ea90 0f02 	teqeq	r0, r2
 8000490:	d005      	beq.n	800049e <__adddf3+0x212>
 8000492:	ea54 0c00 	orrs.w	ip, r4, r0
 8000496:	bf04      	itt	eq
 8000498:	4619      	moveq	r1, r3
 800049a:	4610      	moveq	r0, r2
 800049c:	bd30      	pop	{r4, r5, pc}
 800049e:	ea91 0f03 	teq	r1, r3
 80004a2:	bf1e      	ittt	ne
 80004a4:	2100      	movne	r1, #0
 80004a6:	2000      	movne	r0, #0
 80004a8:	bd30      	popne	{r4, r5, pc}
 80004aa:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004ae:	d105      	bne.n	80004bc <__adddf3+0x230>
 80004b0:	0040      	lsls	r0, r0, #1
 80004b2:	4149      	adcs	r1, r1
 80004b4:	bf28      	it	cs
 80004b6:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 80004ba:	bd30      	pop	{r4, r5, pc}
 80004bc:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 80004c0:	bf3c      	itt	cc
 80004c2:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 80004c6:	bd30      	popcc	{r4, r5, pc}
 80004c8:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80004cc:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 80004d0:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 80004d4:	f04f 0000 	mov.w	r0, #0
 80004d8:	bd30      	pop	{r4, r5, pc}
 80004da:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004de:	bf1a      	itte	ne
 80004e0:	4619      	movne	r1, r3
 80004e2:	4610      	movne	r0, r2
 80004e4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80004e8:	bf1c      	itt	ne
 80004ea:	460b      	movne	r3, r1
 80004ec:	4602      	movne	r2, r0
 80004ee:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80004f2:	bf06      	itte	eq
 80004f4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80004f8:	ea91 0f03 	teqeq	r1, r3
 80004fc:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 8000500:	bd30      	pop	{r4, r5, pc}
 8000502:	bf00      	nop

08000504 <__aeabi_ui2d>:
 8000504:	f090 0f00 	teq	r0, #0
 8000508:	bf04      	itt	eq
 800050a:	2100      	moveq	r1, #0
 800050c:	4770      	bxeq	lr
 800050e:	b530      	push	{r4, r5, lr}
 8000510:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000514:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000518:	f04f 0500 	mov.w	r5, #0
 800051c:	f04f 0100 	mov.w	r1, #0
 8000520:	e750      	b.n	80003c4 <__adddf3+0x138>
 8000522:	bf00      	nop

08000524 <__aeabi_i2d>:
 8000524:	f090 0f00 	teq	r0, #0
 8000528:	bf04      	itt	eq
 800052a:	2100      	moveq	r1, #0
 800052c:	4770      	bxeq	lr
 800052e:	b530      	push	{r4, r5, lr}
 8000530:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000534:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000538:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 800053c:	bf48      	it	mi
 800053e:	4240      	negmi	r0, r0
 8000540:	f04f 0100 	mov.w	r1, #0
 8000544:	e73e      	b.n	80003c4 <__adddf3+0x138>
 8000546:	bf00      	nop

08000548 <__aeabi_f2d>:
 8000548:	0042      	lsls	r2, r0, #1
 800054a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800054e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000552:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000556:	bf1f      	itttt	ne
 8000558:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 800055c:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 8000560:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 8000564:	4770      	bxne	lr
 8000566:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 800056a:	bf08      	it	eq
 800056c:	4770      	bxeq	lr
 800056e:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 8000572:	bf04      	itt	eq
 8000574:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 8000578:	4770      	bxeq	lr
 800057a:	b530      	push	{r4, r5, lr}
 800057c:	f44f 7460 	mov.w	r4, #896	@ 0x380
 8000580:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000584:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000588:	e71c      	b.n	80003c4 <__adddf3+0x138>
 800058a:	bf00      	nop

0800058c <__aeabi_ul2d>:
 800058c:	ea50 0201 	orrs.w	r2, r0, r1
 8000590:	bf08      	it	eq
 8000592:	4770      	bxeq	lr
 8000594:	b530      	push	{r4, r5, lr}
 8000596:	f04f 0500 	mov.w	r5, #0
 800059a:	e00a      	b.n	80005b2 <__aeabi_l2d+0x16>

0800059c <__aeabi_l2d>:
 800059c:	ea50 0201 	orrs.w	r2, r0, r1
 80005a0:	bf08      	it	eq
 80005a2:	4770      	bxeq	lr
 80005a4:	b530      	push	{r4, r5, lr}
 80005a6:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 80005aa:	d502      	bpl.n	80005b2 <__aeabi_l2d+0x16>
 80005ac:	4240      	negs	r0, r0
 80005ae:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005b2:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80005b6:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80005ba:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005be:	f43f aed8 	beq.w	8000372 <__adddf3+0xe6>
 80005c2:	f04f 0203 	mov.w	r2, #3
 80005c6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005ca:	bf18      	it	ne
 80005cc:	3203      	addne	r2, #3
 80005ce:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005d2:	bf18      	it	ne
 80005d4:	3203      	addne	r2, #3
 80005d6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005da:	f1c2 0320 	rsb	r3, r2, #32
 80005de:	fa00 fc03 	lsl.w	ip, r0, r3
 80005e2:	fa20 f002 	lsr.w	r0, r0, r2
 80005e6:	fa01 fe03 	lsl.w	lr, r1, r3
 80005ea:	ea40 000e 	orr.w	r0, r0, lr
 80005ee:	fa21 f102 	lsr.w	r1, r1, r2
 80005f2:	4414      	add	r4, r2
 80005f4:	e6bd      	b.n	8000372 <__adddf3+0xe6>
 80005f6:	bf00      	nop

080005f8 <__aeabi_dmul>:
 80005f8:	b570      	push	{r4, r5, r6, lr}
 80005fa:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 80005fe:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000602:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000606:	bf1d      	ittte	ne
 8000608:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800060c:	ea94 0f0c 	teqne	r4, ip
 8000610:	ea95 0f0c 	teqne	r5, ip
 8000614:	f000 f8de 	bleq	80007d4 <__aeabi_dmul+0x1dc>
 8000618:	442c      	add	r4, r5
 800061a:	ea81 0603 	eor.w	r6, r1, r3
 800061e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000622:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000626:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800062a:	bf18      	it	ne
 800062c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000630:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000634:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8000638:	d038      	beq.n	80006ac <__aeabi_dmul+0xb4>
 800063a:	fba0 ce02 	umull	ip, lr, r0, r2
 800063e:	f04f 0500 	mov.w	r5, #0
 8000642:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000646:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 800064a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800064e:	f04f 0600 	mov.w	r6, #0
 8000652:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000656:	f09c 0f00 	teq	ip, #0
 800065a:	bf18      	it	ne
 800065c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000660:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 8000664:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 8000668:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 800066c:	d204      	bcs.n	8000678 <__aeabi_dmul+0x80>
 800066e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000672:	416d      	adcs	r5, r5
 8000674:	eb46 0606 	adc.w	r6, r6, r6
 8000678:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800067c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000680:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000684:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000688:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800068c:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 8000690:	bf88      	it	hi
 8000692:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 8000696:	d81e      	bhi.n	80006d6 <__aeabi_dmul+0xde>
 8000698:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 800069c:	bf08      	it	eq
 800069e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006a2:	f150 0000 	adcs.w	r0, r0, #0
 80006a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006aa:	bd70      	pop	{r4, r5, r6, pc}
 80006ac:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 80006b0:	ea46 0101 	orr.w	r1, r6, r1
 80006b4:	ea40 0002 	orr.w	r0, r0, r2
 80006b8:	ea81 0103 	eor.w	r1, r1, r3
 80006bc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006c0:	bfc2      	ittt	gt
 80006c2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006c6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006ca:	bd70      	popgt	{r4, r5, r6, pc}
 80006cc:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80006d0:	f04f 0e00 	mov.w	lr, #0
 80006d4:	3c01      	subs	r4, #1
 80006d6:	f300 80ab 	bgt.w	8000830 <__aeabi_dmul+0x238>
 80006da:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 80006de:	bfde      	ittt	le
 80006e0:	2000      	movle	r0, #0
 80006e2:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 80006e6:	bd70      	pople	{r4, r5, r6, pc}
 80006e8:	f1c4 0400 	rsb	r4, r4, #0
 80006ec:	3c20      	subs	r4, #32
 80006ee:	da35      	bge.n	800075c <__aeabi_dmul+0x164>
 80006f0:	340c      	adds	r4, #12
 80006f2:	dc1b      	bgt.n	800072c <__aeabi_dmul+0x134>
 80006f4:	f104 0414 	add.w	r4, r4, #20
 80006f8:	f1c4 0520 	rsb	r5, r4, #32
 80006fc:	fa00 f305 	lsl.w	r3, r0, r5
 8000700:	fa20 f004 	lsr.w	r0, r0, r4
 8000704:	fa01 f205 	lsl.w	r2, r1, r5
 8000708:	ea40 0002 	orr.w	r0, r0, r2
 800070c:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 8000710:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000714:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000718:	fa21 f604 	lsr.w	r6, r1, r4
 800071c:	eb42 0106 	adc.w	r1, r2, r6
 8000720:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000724:	bf08      	it	eq
 8000726:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800072a:	bd70      	pop	{r4, r5, r6, pc}
 800072c:	f1c4 040c 	rsb	r4, r4, #12
 8000730:	f1c4 0520 	rsb	r5, r4, #32
 8000734:	fa00 f304 	lsl.w	r3, r0, r4
 8000738:	fa20 f005 	lsr.w	r0, r0, r5
 800073c:	fa01 f204 	lsl.w	r2, r1, r4
 8000740:	ea40 0002 	orr.w	r0, r0, r2
 8000744:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000748:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800074c:	f141 0100 	adc.w	r1, r1, #0
 8000750:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000754:	bf08      	it	eq
 8000756:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800075a:	bd70      	pop	{r4, r5, r6, pc}
 800075c:	f1c4 0520 	rsb	r5, r4, #32
 8000760:	fa00 f205 	lsl.w	r2, r0, r5
 8000764:	ea4e 0e02 	orr.w	lr, lr, r2
 8000768:	fa20 f304 	lsr.w	r3, r0, r4
 800076c:	fa01 f205 	lsl.w	r2, r1, r5
 8000770:	ea43 0302 	orr.w	r3, r3, r2
 8000774:	fa21 f004 	lsr.w	r0, r1, r4
 8000778:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 800077c:	fa21 f204 	lsr.w	r2, r1, r4
 8000780:	ea20 0002 	bic.w	r0, r0, r2
 8000784:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000788:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800078c:	bf08      	it	eq
 800078e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000792:	bd70      	pop	{r4, r5, r6, pc}
 8000794:	f094 0f00 	teq	r4, #0
 8000798:	d10f      	bne.n	80007ba <__aeabi_dmul+0x1c2>
 800079a:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 800079e:	0040      	lsls	r0, r0, #1
 80007a0:	eb41 0101 	adc.w	r1, r1, r1
 80007a4:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 80007a8:	bf08      	it	eq
 80007aa:	3c01      	subeq	r4, #1
 80007ac:	d0f7      	beq.n	800079e <__aeabi_dmul+0x1a6>
 80007ae:	ea41 0106 	orr.w	r1, r1, r6
 80007b2:	f095 0f00 	teq	r5, #0
 80007b6:	bf18      	it	ne
 80007b8:	4770      	bxne	lr
 80007ba:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 80007be:	0052      	lsls	r2, r2, #1
 80007c0:	eb43 0303 	adc.w	r3, r3, r3
 80007c4:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 80007c8:	bf08      	it	eq
 80007ca:	3d01      	subeq	r5, #1
 80007cc:	d0f7      	beq.n	80007be <__aeabi_dmul+0x1c6>
 80007ce:	ea43 0306 	orr.w	r3, r3, r6
 80007d2:	4770      	bx	lr
 80007d4:	ea94 0f0c 	teq	r4, ip
 80007d8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007dc:	bf18      	it	ne
 80007de:	ea95 0f0c 	teqne	r5, ip
 80007e2:	d00c      	beq.n	80007fe <__aeabi_dmul+0x206>
 80007e4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007e8:	bf18      	it	ne
 80007ea:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007ee:	d1d1      	bne.n	8000794 <__aeabi_dmul+0x19c>
 80007f0:	ea81 0103 	eor.w	r1, r1, r3
 80007f4:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80007f8:	f04f 0000 	mov.w	r0, #0
 80007fc:	bd70      	pop	{r4, r5, r6, pc}
 80007fe:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000802:	bf06      	itte	eq
 8000804:	4610      	moveq	r0, r2
 8000806:	4619      	moveq	r1, r3
 8000808:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800080c:	d019      	beq.n	8000842 <__aeabi_dmul+0x24a>
 800080e:	ea94 0f0c 	teq	r4, ip
 8000812:	d102      	bne.n	800081a <__aeabi_dmul+0x222>
 8000814:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000818:	d113      	bne.n	8000842 <__aeabi_dmul+0x24a>
 800081a:	ea95 0f0c 	teq	r5, ip
 800081e:	d105      	bne.n	800082c <__aeabi_dmul+0x234>
 8000820:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000824:	bf1c      	itt	ne
 8000826:	4610      	movne	r0, r2
 8000828:	4619      	movne	r1, r3
 800082a:	d10a      	bne.n	8000842 <__aeabi_dmul+0x24a>
 800082c:	ea81 0103 	eor.w	r1, r1, r3
 8000830:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000834:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000838:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800083c:	f04f 0000 	mov.w	r0, #0
 8000840:	bd70      	pop	{r4, r5, r6, pc}
 8000842:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000846:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 800084a:	bd70      	pop	{r4, r5, r6, pc}

0800084c <__aeabi_ddiv>:
 800084c:	b570      	push	{r4, r5, r6, lr}
 800084e:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000852:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000856:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800085a:	bf1d      	ittte	ne
 800085c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000860:	ea94 0f0c 	teqne	r4, ip
 8000864:	ea95 0f0c 	teqne	r5, ip
 8000868:	f000 f8a7 	bleq	80009ba <__aeabi_ddiv+0x16e>
 800086c:	eba4 0405 	sub.w	r4, r4, r5
 8000870:	ea81 0e03 	eor.w	lr, r1, r3
 8000874:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000878:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800087c:	f000 8088 	beq.w	8000990 <__aeabi_ddiv+0x144>
 8000880:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000884:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
 8000888:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800088c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000890:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000894:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000898:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 800089c:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008a0:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
 80008a4:	429d      	cmp	r5, r3
 80008a6:	bf08      	it	eq
 80008a8:	4296      	cmpeq	r6, r2
 80008aa:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
 80008ae:	f504 7440 	add.w	r4, r4, #768	@ 0x300
 80008b2:	d202      	bcs.n	80008ba <__aeabi_ddiv+0x6e>
 80008b4:	085b      	lsrs	r3, r3, #1
 80008b6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ba:	1ab6      	subs	r6, r6, r2
 80008bc:	eb65 0503 	sbc.w	r5, r5, r3
 80008c0:	085b      	lsrs	r3, r3, #1
 80008c2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008c6:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 80008ca:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
 80008ce:	ebb6 0e02 	subs.w	lr, r6, r2
 80008d2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008d6:	bf22      	ittt	cs
 80008d8:	1ab6      	subcs	r6, r6, r2
 80008da:	4675      	movcs	r5, lr
 80008dc:	ea40 000c 	orrcs.w	r0, r0, ip
 80008e0:	085b      	lsrs	r3, r3, #1
 80008e2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008e6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008ea:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008ee:	bf22      	ittt	cs
 80008f0:	1ab6      	subcs	r6, r6, r2
 80008f2:	4675      	movcs	r5, lr
 80008f4:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80008f8:	085b      	lsrs	r3, r3, #1
 80008fa:	ea4f 0232 	mov.w	r2, r2, rrx
 80008fe:	ebb6 0e02 	subs.w	lr, r6, r2
 8000902:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000906:	bf22      	ittt	cs
 8000908:	1ab6      	subcs	r6, r6, r2
 800090a:	4675      	movcs	r5, lr
 800090c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000910:	085b      	lsrs	r3, r3, #1
 8000912:	ea4f 0232 	mov.w	r2, r2, rrx
 8000916:	ebb6 0e02 	subs.w	lr, r6, r2
 800091a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800091e:	bf22      	ittt	cs
 8000920:	1ab6      	subcs	r6, r6, r2
 8000922:	4675      	movcs	r5, lr
 8000924:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000928:	ea55 0e06 	orrs.w	lr, r5, r6
 800092c:	d018      	beq.n	8000960 <__aeabi_ddiv+0x114>
 800092e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000932:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000936:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800093a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800093e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000942:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000946:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800094a:	d1c0      	bne.n	80008ce <__aeabi_ddiv+0x82>
 800094c:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000950:	d10b      	bne.n	800096a <__aeabi_ddiv+0x11e>
 8000952:	ea41 0100 	orr.w	r1, r1, r0
 8000956:	f04f 0000 	mov.w	r0, #0
 800095a:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 800095e:	e7b6      	b.n	80008ce <__aeabi_ddiv+0x82>
 8000960:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000964:	bf04      	itt	eq
 8000966:	4301      	orreq	r1, r0
 8000968:	2000      	moveq	r0, #0
 800096a:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 800096e:	bf88      	it	hi
 8000970:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 8000974:	f63f aeaf 	bhi.w	80006d6 <__aeabi_dmul+0xde>
 8000978:	ebb5 0c03 	subs.w	ip, r5, r3
 800097c:	bf04      	itt	eq
 800097e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000982:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000986:	f150 0000 	adcs.w	r0, r0, #0
 800098a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800098e:	bd70      	pop	{r4, r5, r6, pc}
 8000990:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
 8000994:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000998:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 800099c:	bfc2      	ittt	gt
 800099e:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009a2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009a6:	bd70      	popgt	{r4, r5, r6, pc}
 80009a8:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80009ac:	f04f 0e00 	mov.w	lr, #0
 80009b0:	3c01      	subs	r4, #1
 80009b2:	e690      	b.n	80006d6 <__aeabi_dmul+0xde>
 80009b4:	ea45 0e06 	orr.w	lr, r5, r6
 80009b8:	e68d      	b.n	80006d6 <__aeabi_dmul+0xde>
 80009ba:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009be:	ea94 0f0c 	teq	r4, ip
 80009c2:	bf08      	it	eq
 80009c4:	ea95 0f0c 	teqeq	r5, ip
 80009c8:	f43f af3b 	beq.w	8000842 <__aeabi_dmul+0x24a>
 80009cc:	ea94 0f0c 	teq	r4, ip
 80009d0:	d10a      	bne.n	80009e8 <__aeabi_ddiv+0x19c>
 80009d2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009d6:	f47f af34 	bne.w	8000842 <__aeabi_dmul+0x24a>
 80009da:	ea95 0f0c 	teq	r5, ip
 80009de:	f47f af25 	bne.w	800082c <__aeabi_dmul+0x234>
 80009e2:	4610      	mov	r0, r2
 80009e4:	4619      	mov	r1, r3
 80009e6:	e72c      	b.n	8000842 <__aeabi_dmul+0x24a>
 80009e8:	ea95 0f0c 	teq	r5, ip
 80009ec:	d106      	bne.n	80009fc <__aeabi_ddiv+0x1b0>
 80009ee:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80009f2:	f43f aefd 	beq.w	80007f0 <__aeabi_dmul+0x1f8>
 80009f6:	4610      	mov	r0, r2
 80009f8:	4619      	mov	r1, r3
 80009fa:	e722      	b.n	8000842 <__aeabi_dmul+0x24a>
 80009fc:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a00:	bf18      	it	ne
 8000a02:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a06:	f47f aec5 	bne.w	8000794 <__aeabi_dmul+0x19c>
 8000a0a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a0e:	f47f af0d 	bne.w	800082c <__aeabi_dmul+0x234>
 8000a12:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a16:	f47f aeeb 	bne.w	80007f0 <__aeabi_dmul+0x1f8>
 8000a1a:	e712      	b.n	8000842 <__aeabi_dmul+0x24a>

08000a1c <__gedf2>:
 8000a1c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a20:	e006      	b.n	8000a30 <__cmpdf2+0x4>
 8000a22:	bf00      	nop

08000a24 <__ledf2>:
 8000a24:	f04f 0c01 	mov.w	ip, #1
 8000a28:	e002      	b.n	8000a30 <__cmpdf2+0x4>
 8000a2a:	bf00      	nop

08000a2c <__cmpdf2>:
 8000a2c:	f04f 0c01 	mov.w	ip, #1
 8000a30:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a34:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a38:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a3c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a40:	bf18      	it	ne
 8000a42:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a46:	d01b      	beq.n	8000a80 <__cmpdf2+0x54>
 8000a48:	b001      	add	sp, #4
 8000a4a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a4e:	bf0c      	ite	eq
 8000a50:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a54:	ea91 0f03 	teqne	r1, r3
 8000a58:	bf02      	ittt	eq
 8000a5a:	ea90 0f02 	teqeq	r0, r2
 8000a5e:	2000      	moveq	r0, #0
 8000a60:	4770      	bxeq	lr
 8000a62:	f110 0f00 	cmn.w	r0, #0
 8000a66:	ea91 0f03 	teq	r1, r3
 8000a6a:	bf58      	it	pl
 8000a6c:	4299      	cmppl	r1, r3
 8000a6e:	bf08      	it	eq
 8000a70:	4290      	cmpeq	r0, r2
 8000a72:	bf2c      	ite	cs
 8000a74:	17d8      	asrcs	r0, r3, #31
 8000a76:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a7a:	f040 0001 	orr.w	r0, r0, #1
 8000a7e:	4770      	bx	lr
 8000a80:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a84:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a88:	d102      	bne.n	8000a90 <__cmpdf2+0x64>
 8000a8a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a8e:	d107      	bne.n	8000aa0 <__cmpdf2+0x74>
 8000a90:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a94:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a98:	d1d6      	bne.n	8000a48 <__cmpdf2+0x1c>
 8000a9a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000a9e:	d0d3      	beq.n	8000a48 <__cmpdf2+0x1c>
 8000aa0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000aa4:	4770      	bx	lr
 8000aa6:	bf00      	nop

08000aa8 <__aeabi_cdrcmple>:
 8000aa8:	4684      	mov	ip, r0
 8000aaa:	4610      	mov	r0, r2
 8000aac:	4662      	mov	r2, ip
 8000aae:	468c      	mov	ip, r1
 8000ab0:	4619      	mov	r1, r3
 8000ab2:	4663      	mov	r3, ip
 8000ab4:	e000      	b.n	8000ab8 <__aeabi_cdcmpeq>
 8000ab6:	bf00      	nop

08000ab8 <__aeabi_cdcmpeq>:
 8000ab8:	b501      	push	{r0, lr}
 8000aba:	f7ff ffb7 	bl	8000a2c <__cmpdf2>
 8000abe:	2800      	cmp	r0, #0
 8000ac0:	bf48      	it	mi
 8000ac2:	f110 0f00 	cmnmi.w	r0, #0
 8000ac6:	bd01      	pop	{r0, pc}

08000ac8 <__aeabi_dcmpeq>:
 8000ac8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000acc:	f7ff fff4 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000ad0:	bf0c      	ite	eq
 8000ad2:	2001      	moveq	r0, #1
 8000ad4:	2000      	movne	r0, #0
 8000ad6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000ada:	bf00      	nop

08000adc <__aeabi_dcmplt>:
 8000adc:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000ae0:	f7ff ffea 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000ae4:	bf34      	ite	cc
 8000ae6:	2001      	movcc	r0, #1
 8000ae8:	2000      	movcs	r0, #0
 8000aea:	f85d fb08 	ldr.w	pc, [sp], #8
 8000aee:	bf00      	nop

08000af0 <__aeabi_dcmple>:
 8000af0:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000af4:	f7ff ffe0 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000af8:	bf94      	ite	ls
 8000afa:	2001      	movls	r0, #1
 8000afc:	2000      	movhi	r0, #0
 8000afe:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b02:	bf00      	nop

08000b04 <__aeabi_dcmpge>:
 8000b04:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b08:	f7ff ffce 	bl	8000aa8 <__aeabi_cdrcmple>
 8000b0c:	bf94      	ite	ls
 8000b0e:	2001      	movls	r0, #1
 8000b10:	2000      	movhi	r0, #0
 8000b12:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b16:	bf00      	nop

08000b18 <__aeabi_dcmpgt>:
 8000b18:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b1c:	f7ff ffc4 	bl	8000aa8 <__aeabi_cdrcmple>
 8000b20:	bf34      	ite	cc
 8000b22:	2001      	movcc	r0, #1
 8000b24:	2000      	movcs	r0, #0
 8000b26:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b2a:	bf00      	nop

08000b2c <__aeabi_dcmpun>:
 8000b2c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b30:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b34:	d102      	bne.n	8000b3c <__aeabi_dcmpun+0x10>
 8000b36:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b3a:	d10a      	bne.n	8000b52 <__aeabi_dcmpun+0x26>
 8000b3c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b40:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b44:	d102      	bne.n	8000b4c <__aeabi_dcmpun+0x20>
 8000b46:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b4a:	d102      	bne.n	8000b52 <__aeabi_dcmpun+0x26>
 8000b4c:	f04f 0000 	mov.w	r0, #0
 8000b50:	4770      	bx	lr
 8000b52:	f04f 0001 	mov.w	r0, #1
 8000b56:	4770      	bx	lr

08000b58 <__aeabi_d2iz>:
 8000b58:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b5c:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000b60:	d215      	bcs.n	8000b8e <__aeabi_d2iz+0x36>
 8000b62:	d511      	bpl.n	8000b88 <__aeabi_d2iz+0x30>
 8000b64:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000b68:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b6c:	d912      	bls.n	8000b94 <__aeabi_d2iz+0x3c>
 8000b6e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b72:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000b76:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b7a:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000b7e:	fa23 f002 	lsr.w	r0, r3, r2
 8000b82:	bf18      	it	ne
 8000b84:	4240      	negne	r0, r0
 8000b86:	4770      	bx	lr
 8000b88:	f04f 0000 	mov.w	r0, #0
 8000b8c:	4770      	bx	lr
 8000b8e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000b92:	d105      	bne.n	8000ba0 <__aeabi_d2iz+0x48>
 8000b94:	f011 4000 	ands.w	r0, r1, #2147483648	@ 0x80000000
 8000b98:	bf08      	it	eq
 8000b9a:	f06f 4000 	mvneq.w	r0, #2147483648	@ 0x80000000
 8000b9e:	4770      	bx	lr
 8000ba0:	f04f 0000 	mov.w	r0, #0
 8000ba4:	4770      	bx	lr
 8000ba6:	bf00      	nop

08000ba8 <__aeabi_d2f>:
 8000ba8:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000bac:	f1b2 43e0 	subs.w	r3, r2, #1879048192	@ 0x70000000
 8000bb0:	bf24      	itt	cs
 8000bb2:	f5b3 1c00 	subscs.w	ip, r3, #2097152	@ 0x200000
 8000bb6:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	@ 0x1fc00000
 8000bba:	d90d      	bls.n	8000bd8 <__aeabi_d2f+0x30>
 8000bbc:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8000bc0:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000bc4:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000bc8:	f1b2 4f00 	cmp.w	r2, #2147483648	@ 0x80000000
 8000bcc:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000bd0:	bf08      	it	eq
 8000bd2:	f020 0001 	biceq.w	r0, r0, #1
 8000bd6:	4770      	bx	lr
 8000bd8:	f011 4f80 	tst.w	r1, #1073741824	@ 0x40000000
 8000bdc:	d121      	bne.n	8000c22 <__aeabi_d2f+0x7a>
 8000bde:	f113 7238 	adds.w	r2, r3, #48234496	@ 0x2e00000
 8000be2:	bfbc      	itt	lt
 8000be4:	f001 4000 	andlt.w	r0, r1, #2147483648	@ 0x80000000
 8000be8:	4770      	bxlt	lr
 8000bea:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000bee:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000bf2:	f1c2 0218 	rsb	r2, r2, #24
 8000bf6:	f1c2 0c20 	rsb	ip, r2, #32
 8000bfa:	fa10 f30c 	lsls.w	r3, r0, ip
 8000bfe:	fa20 f002 	lsr.w	r0, r0, r2
 8000c02:	bf18      	it	ne
 8000c04:	f040 0001 	orrne.w	r0, r0, #1
 8000c08:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000c0c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000c10:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000c14:	ea40 000c 	orr.w	r0, r0, ip
 8000c18:	fa23 f302 	lsr.w	r3, r3, r2
 8000c1c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000c20:	e7cc      	b.n	8000bbc <__aeabi_d2f+0x14>
 8000c22:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000c26:	d107      	bne.n	8000c38 <__aeabi_d2f+0x90>
 8000c28:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000c2c:	bf1e      	ittt	ne
 8000c2e:	f04f 40fe 	movne.w	r0, #2130706432	@ 0x7f000000
 8000c32:	f440 0040 	orrne.w	r0, r0, #12582912	@ 0xc00000
 8000c36:	4770      	bxne	lr
 8000c38:	f001 4000 	and.w	r0, r1, #2147483648	@ 0x80000000
 8000c3c:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 8000c40:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000c44:	4770      	bx	lr
 8000c46:	bf00      	nop

08000c48 <sendSensorData>:
}



// Función para enviar datos de los sensores al ESP8266
void sendSensorData(void) {
 8000c48:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000c4a:	b0d1      	sub	sp, #324	@ 0x144
 8000c4c:	af08      	add	r7, sp, #32
    struct girodata_t giro;


    Sensor_Read(&giro);
 8000c4e:	f507 7386 	add.w	r3, r7, #268	@ 0x10c
 8000c52:	4618      	mov	r0, r3
 8000c54:	f000 fcd4 	bl	8001600 <Sensor_Read>

    char data_msg[128];

    snprintf(data_msg, sizeof(data_msg), "AX: %i, AY: %i, AZ: %i, GX: %i, GY: %i, GZ: %i, MX: %i, MY: %i, MZ: %i\n", giro.ax, giro.ay, giro.az, giro.gx, giro.gy, giro.gz, giro.mx, giro.my, giro.mz);
 8000c58:	f9b7 310c 	ldrsh.w	r3, [r7, #268]	@ 0x10c
 8000c5c:	469c      	mov	ip, r3
 8000c5e:	f9b7 310e 	ldrsh.w	r3, [r7, #270]	@ 0x10e
 8000c62:	607b      	str	r3, [r7, #4]
 8000c64:	f9b7 2110 	ldrsh.w	r2, [r7, #272]	@ 0x110
 8000c68:	f9b7 1112 	ldrsh.w	r1, [r7, #274]	@ 0x112
 8000c6c:	f9b7 0114 	ldrsh.w	r0, [r7, #276]	@ 0x114
 8000c70:	4604      	mov	r4, r0
 8000c72:	f9b7 0116 	ldrsh.w	r0, [r7, #278]	@ 0x116
 8000c76:	4605      	mov	r5, r0
 8000c78:	f9b7 0118 	ldrsh.w	r0, [r7, #280]	@ 0x118
 8000c7c:	4606      	mov	r6, r0
 8000c7e:	f9b7 011a 	ldrsh.w	r0, [r7, #282]	@ 0x11a
 8000c82:	6038      	str	r0, [r7, #0]
 8000c84:	f9b7 011c 	ldrsh.w	r0, [r7, #284]	@ 0x11c
 8000c88:	4603      	mov	r3, r0
 8000c8a:	f107 008c 	add.w	r0, r7, #140	@ 0x8c
 8000c8e:	9307      	str	r3, [sp, #28]
 8000c90:	683b      	ldr	r3, [r7, #0]
 8000c92:	9306      	str	r3, [sp, #24]
 8000c94:	9605      	str	r6, [sp, #20]
 8000c96:	9504      	str	r5, [sp, #16]
 8000c98:	9403      	str	r4, [sp, #12]
 8000c9a:	9102      	str	r1, [sp, #8]
 8000c9c:	9201      	str	r2, [sp, #4]
 8000c9e:	687b      	ldr	r3, [r7, #4]
 8000ca0:	9300      	str	r3, [sp, #0]
 8000ca2:	4663      	mov	r3, ip
 8000ca4:	4a18      	ldr	r2, [pc, #96]	@ (8000d08 <sendSensorData+0xc0>)
 8000ca6:	2180      	movs	r1, #128	@ 0x80
 8000ca8:	f007 fdc2 	bl	8008830 <sniprintf>

    //printf(data_msg);
    // Enviar los datos a través de UART
    HAL_UART_Transmit(&huart1, (uint8_t*)data_msg, strlen(data_msg), HAL_MAX_DELAY);
 8000cac:	f107 038c 	add.w	r3, r7, #140	@ 0x8c
 8000cb0:	4618      	mov	r0, r3
 8000cb2:	f7ff fadd 	bl	8000270 <strlen>
 8000cb6:	4603      	mov	r3, r0
 8000cb8:	b29a      	uxth	r2, r3
 8000cba:	f107 018c 	add.w	r1, r7, #140	@ 0x8c
 8000cbe:	f04f 33ff 	mov.w	r3, #4294967295
 8000cc2:	4812      	ldr	r0, [pc, #72]	@ (8000d0c <sendSensorData+0xc4>)
 8000cc4:	f005 fdc4 	bl	8006850 <HAL_UART_Transmit>

    char speeds[125];
    Control_GetMotorSpeeds(speeds, sizeof(speeds));
 8000cc8:	f107 030c 	add.w	r3, r7, #12
 8000ccc:	217d      	movs	r1, #125	@ 0x7d
 8000cce:	4618      	mov	r0, r3
 8000cd0:	f000 fada 	bl	8001288 <Control_GetMotorSpeeds>

    printf("Motor speeds: %s\n", speeds);
 8000cd4:	f107 030c 	add.w	r3, r7, #12
 8000cd8:	4619      	mov	r1, r3
 8000cda:	480d      	ldr	r0, [pc, #52]	@ (8000d10 <sendSensorData+0xc8>)
 8000cdc:	f007 fd38 	bl	8008750 <iprintf>

    HAL_UART_Transmit(&huart1, (uint8_t*)speeds, strlen(speeds), HAL_MAX_DELAY);
 8000ce0:	f107 030c 	add.w	r3, r7, #12
 8000ce4:	4618      	mov	r0, r3
 8000ce6:	f7ff fac3 	bl	8000270 <strlen>
 8000cea:	4603      	mov	r3, r0
 8000cec:	b29a      	uxth	r2, r3
 8000cee:	f107 010c 	add.w	r1, r7, #12
 8000cf2:	f04f 33ff 	mov.w	r3, #4294967295
 8000cf6:	4805      	ldr	r0, [pc, #20]	@ (8000d0c <sendSensorData+0xc4>)
 8000cf8:	f005 fdaa 	bl	8006850 <HAL_UART_Transmit>

}
 8000cfc:	bf00      	nop
 8000cfe:	f507 7792 	add.w	r7, r7, #292	@ 0x124
 8000d02:	46bd      	mov	sp, r7
 8000d04:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000d06:	bf00      	nop
 8000d08:	0800ab14 	.word	0x0800ab14
 8000d0c:	200003a8 	.word	0x200003a8
 8000d10:	0800ab5c 	.word	0x0800ab5c

08000d14 <receiveControlCommand>:
    snprintf(cmd_msg, sizeof(cmd_msg), "%s\r\n", command);  // Agregar salto de línea al final del comando
    HAL_UART_Transmit(&huart1, (uint8_t*)cmd_msg, strlen(cmd_msg), HAL_MAX_DELAY);
}

// Función para recibir comandos del ESP8266
void receiveControlCommand(uint8_t *rx_buffer, uint16_t length) {
 8000d14:	b580      	push	{r7, lr}
 8000d16:	b084      	sub	sp, #16
 8000d18:	af00      	add	r7, sp, #0
 8000d1a:	6078      	str	r0, [r7, #4]
 8000d1c:	460b      	mov	r3, r1
 8000d1e:	807b      	strh	r3, [r7, #2]

	if (strncmp((char *)rx_buffer, "Dat", 3) == 0 || strncmp((char *)rx_buffer, "Men", 3) == 0) {
 8000d20:	2203      	movs	r2, #3
 8000d22:	4933      	ldr	r1, [pc, #204]	@ (8000df0 <receiveControlCommand+0xdc>)
 8000d24:	6878      	ldr	r0, [r7, #4]
 8000d26:	f007 fe97 	bl	8008a58 <strncmp>
 8000d2a:	4603      	mov	r3, r0
 8000d2c:	2b00      	cmp	r3, #0
 8000d2e:	d007      	beq.n	8000d40 <receiveControlCommand+0x2c>
 8000d30:	2203      	movs	r2, #3
 8000d32:	4930      	ldr	r1, [pc, #192]	@ (8000df4 <receiveControlCommand+0xe0>)
 8000d34:	6878      	ldr	r0, [r7, #4]
 8000d36:	f007 fe8f 	bl	8008a58 <strncmp>
 8000d3a:	4603      	mov	r3, r0
 8000d3c:	2b00      	cmp	r3, #0
 8000d3e:	d106      	bne.n	8000d4e <receiveControlCommand+0x3a>
	    memset(rx_buffer, 0, length);  // Limpiar el buffer
 8000d40:	887b      	ldrh	r3, [r7, #2]
 8000d42:	461a      	mov	r2, r3
 8000d44:	2100      	movs	r1, #0
 8000d46:	6878      	ldr	r0, [r7, #4]
 8000d48:	f007 fe7e 	bl	8008a48 <memset>
	    return;
 8000d4c:	e04d      	b.n	8000dea <receiveControlCommand+0xd6>
	}

    printData("Comando recibido\n");
 8000d4e:	482a      	ldr	r0, [pc, #168]	@ (8000df8 <receiveControlCommand+0xe4>)
 8000d50:	f001 fa62 	bl	8002218 <printData>

    if (strncmp((char *)rx_buffer, "LED_ON", 6) == 0) {
 8000d54:	2206      	movs	r2, #6
 8000d56:	4929      	ldr	r1, [pc, #164]	@ (8000dfc <receiveControlCommand+0xe8>)
 8000d58:	6878      	ldr	r0, [r7, #4]
 8000d5a:	f007 fe7d 	bl	8008a58 <strncmp>
 8000d5e:	4603      	mov	r3, r0
 8000d60:	2b00      	cmp	r3, #0
 8000d62:	d105      	bne.n	8000d70 <receiveControlCommand+0x5c>
        // Encender el LED (PB3)
        HAL_GPIO_WritePin(GPIOB, GPIO_PIN_3, GPIO_PIN_SET);
 8000d64:	2201      	movs	r2, #1
 8000d66:	2108      	movs	r1, #8
 8000d68:	4825      	ldr	r0, [pc, #148]	@ (8000e00 <receiveControlCommand+0xec>)
 8000d6a:	f002 f961 	bl	8003030 <HAL_GPIO_WritePin>
 8000d6e:	e036      	b.n	8000dde <receiveControlCommand+0xca>
    } else if (strncmp((char *)rx_buffer, "LED_OFF", 7) == 0) {
 8000d70:	2207      	movs	r2, #7
 8000d72:	4924      	ldr	r1, [pc, #144]	@ (8000e04 <receiveControlCommand+0xf0>)
 8000d74:	6878      	ldr	r0, [r7, #4]
 8000d76:	f007 fe6f 	bl	8008a58 <strncmp>
 8000d7a:	4603      	mov	r3, r0
 8000d7c:	2b00      	cmp	r3, #0
 8000d7e:	d105      	bne.n	8000d8c <receiveControlCommand+0x78>
        // Apagar el LED (PB3)
        HAL_GPIO_WritePin(GPIOB, GPIO_PIN_3, GPIO_PIN_RESET);
 8000d80:	2200      	movs	r2, #0
 8000d82:	2108      	movs	r1, #8
 8000d84:	481e      	ldr	r0, [pc, #120]	@ (8000e00 <receiveControlCommand+0xec>)
 8000d86:	f002 f953 	bl	8003030 <HAL_GPIO_WritePin>
 8000d8a:	e028      	b.n	8000dde <receiveControlCommand+0xca>
    }

    else if (strncmp((char*) rx_buffer, "ARM", 3) == 0) {
 8000d8c:	2203      	movs	r2, #3
 8000d8e:	491e      	ldr	r1, [pc, #120]	@ (8000e08 <receiveControlCommand+0xf4>)
 8000d90:	6878      	ldr	r0, [r7, #4]
 8000d92:	f007 fe61 	bl	8008a58 <strncmp>
 8000d96:	4603      	mov	r3, r0
 8000d98:	2b00      	cmp	r3, #0
 8000d9a:	d102      	bne.n	8000da2 <receiveControlCommand+0x8e>
		Control_ArmMotors();
 8000d9c:	f000 f882 	bl	8000ea4 <Control_ArmMotors>
 8000da0:	e01d      	b.n	8000dde <receiveControlCommand+0xca>
	} else if (strncmp((char*) rx_buffer, "STOP", 4) == 0) {
 8000da2:	2204      	movs	r2, #4
 8000da4:	4919      	ldr	r1, [pc, #100]	@ (8000e0c <receiveControlCommand+0xf8>)
 8000da6:	6878      	ldr	r0, [r7, #4]
 8000da8:	f007 fe56 	bl	8008a58 <strncmp>
 8000dac:	4603      	mov	r3, r0
 8000dae:	2b00      	cmp	r3, #0
 8000db0:	d102      	bne.n	8000db8 <receiveControlCommand+0xa4>
		Control_Stop();
 8000db2:	f000 faef 	bl	8001394 <Control_Stop>
 8000db6:	e012      	b.n	8000dde <receiveControlCommand+0xca>
	} else if (strncmp((char*) rx_buffer, "PWR", 3) == 0) {
 8000db8:	2203      	movs	r2, #3
 8000dba:	4915      	ldr	r1, [pc, #84]	@ (8000e10 <receiveControlCommand+0xfc>)
 8000dbc:	6878      	ldr	r0, [r7, #4]
 8000dbe:	f007 fe4b 	bl	8008a58 <strncmp>
 8000dc2:	4603      	mov	r3, r0
 8000dc4:	2b00      	cmp	r3, #0
 8000dc6:	d10a      	bne.n	8000dde <receiveControlCommand+0xca>
		uint8_t speed = atoi((char*) &rx_buffer[3]);
 8000dc8:	687b      	ldr	r3, [r7, #4]
 8000dca:	3303      	adds	r3, #3
 8000dcc:	4618      	mov	r0, r3
 8000dce:	f006 ff1d 	bl	8007c0c <atoi>
 8000dd2:	4603      	mov	r3, r0
 8000dd4:	73fb      	strb	r3, [r7, #15]
		Control_SetMotorsPower(speed);
 8000dd6:	7bfb      	ldrb	r3, [r7, #15]
 8000dd8:	4618      	mov	r0, r3
 8000dda:	f000 fabf 	bl	800135c <Control_SetMotorsPower>
	}


    // Limpiar el buffer después de procesar
    memset(rx_buffer, 0, length);
 8000dde:	887b      	ldrh	r3, [r7, #2]
 8000de0:	461a      	mov	r2, r3
 8000de2:	2100      	movs	r1, #0
 8000de4:	6878      	ldr	r0, [r7, #4]
 8000de6:	f007 fe2f 	bl	8008a48 <memset>
}
 8000dea:	3710      	adds	r7, #16
 8000dec:	46bd      	mov	sp, r7
 8000dee:	bd80      	pop	{r7, pc}
 8000df0:	0800ab78 	.word	0x0800ab78
 8000df4:	0800ab7c 	.word	0x0800ab7c
 8000df8:	0800ab80 	.word	0x0800ab80
 8000dfc:	0800ab94 	.word	0x0800ab94
 8000e00:	48000400 	.word	0x48000400
 8000e04:	0800ab9c 	.word	0x0800ab9c
 8000e08:	0800aba4 	.word	0x0800aba4
 8000e0c:	0800aba8 	.word	0x0800aba8
 8000e10:	0800abb0 	.word	0x0800abb0

08000e14 <Control_Init>:
float mz_buffer[MOVING_AVG_SIZE] = {0};
int buffer_index = 0;



void Control_Init(void) {
 8000e14:	b480      	push	{r7}
 8000e16:	af00      	add	r7, sp, #0
    Control.pid_roll.Kp = 1.0;
 8000e18:	4b21      	ldr	r3, [pc, #132]	@ (8000ea0 <Control_Init+0x8c>)
 8000e1a:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 8000e1e:	601a      	str	r2, [r3, #0]
    Control.pid_roll.Ki = 0.0;
 8000e20:	4b1f      	ldr	r3, [pc, #124]	@ (8000ea0 <Control_Init+0x8c>)
 8000e22:	f04f 0200 	mov.w	r2, #0
 8000e26:	605a      	str	r2, [r3, #4]
    Control.pid_roll.Kd = 0.0;
 8000e28:	4b1d      	ldr	r3, [pc, #116]	@ (8000ea0 <Control_Init+0x8c>)
 8000e2a:	f04f 0200 	mov.w	r2, #0
 8000e2e:	609a      	str	r2, [r3, #8]
    Control.pid_roll.prev_error = 0.0;
 8000e30:	4b1b      	ldr	r3, [pc, #108]	@ (8000ea0 <Control_Init+0x8c>)
 8000e32:	f04f 0200 	mov.w	r2, #0
 8000e36:	60da      	str	r2, [r3, #12]
    Control.pid_roll.integral = 0.0;
 8000e38:	4b19      	ldr	r3, [pc, #100]	@ (8000ea0 <Control_Init+0x8c>)
 8000e3a:	f04f 0200 	mov.w	r2, #0
 8000e3e:	611a      	str	r2, [r3, #16]
    Control.base_throttle = 0;
 8000e40:	4b17      	ldr	r3, [pc, #92]	@ (8000ea0 <Control_Init+0x8c>)
 8000e42:	2200      	movs	r2, #0
 8000e44:	63da      	str	r2, [r3, #60]	@ 0x3c

    Control.pid_pitch.Kp = 1.0;
 8000e46:	4b16      	ldr	r3, [pc, #88]	@ (8000ea0 <Control_Init+0x8c>)
 8000e48:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 8000e4c:	615a      	str	r2, [r3, #20]
    Control.pid_pitch.Ki = 0.0;
 8000e4e:	4b14      	ldr	r3, [pc, #80]	@ (8000ea0 <Control_Init+0x8c>)
 8000e50:	f04f 0200 	mov.w	r2, #0
 8000e54:	619a      	str	r2, [r3, #24]
    Control.pid_pitch.Kd = 0.0;
 8000e56:	4b12      	ldr	r3, [pc, #72]	@ (8000ea0 <Control_Init+0x8c>)
 8000e58:	f04f 0200 	mov.w	r2, #0
 8000e5c:	61da      	str	r2, [r3, #28]
    Control.pid_pitch.prev_error = 0.0;
 8000e5e:	4b10      	ldr	r3, [pc, #64]	@ (8000ea0 <Control_Init+0x8c>)
 8000e60:	f04f 0200 	mov.w	r2, #0
 8000e64:	621a      	str	r2, [r3, #32]
    Control.pid_pitch.integral = 0.0;
 8000e66:	4b0e      	ldr	r3, [pc, #56]	@ (8000ea0 <Control_Init+0x8c>)
 8000e68:	f04f 0200 	mov.w	r2, #0
 8000e6c:	625a      	str	r2, [r3, #36]	@ 0x24

    Control.pid_yaw.Kp = 1.0;
 8000e6e:	4b0c      	ldr	r3, [pc, #48]	@ (8000ea0 <Control_Init+0x8c>)
 8000e70:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 8000e74:	629a      	str	r2, [r3, #40]	@ 0x28
    Control.pid_yaw.Ki = 0.0;
 8000e76:	4b0a      	ldr	r3, [pc, #40]	@ (8000ea0 <Control_Init+0x8c>)
 8000e78:	f04f 0200 	mov.w	r2, #0
 8000e7c:	62da      	str	r2, [r3, #44]	@ 0x2c
    Control.pid_yaw.Kd = 0.0;
 8000e7e:	4b08      	ldr	r3, [pc, #32]	@ (8000ea0 <Control_Init+0x8c>)
 8000e80:	f04f 0200 	mov.w	r2, #0
 8000e84:	631a      	str	r2, [r3, #48]	@ 0x30
    Control.pid_yaw.prev_error = 0.0;
 8000e86:	4b06      	ldr	r3, [pc, #24]	@ (8000ea0 <Control_Init+0x8c>)
 8000e88:	f04f 0200 	mov.w	r2, #0
 8000e8c:	635a      	str	r2, [r3, #52]	@ 0x34
    Control.pid_yaw.integral = 0.0;
 8000e8e:	4b04      	ldr	r3, [pc, #16]	@ (8000ea0 <Control_Init+0x8c>)
 8000e90:	f04f 0200 	mov.w	r2, #0
 8000e94:	639a      	str	r2, [r3, #56]	@ 0x38
}
 8000e96:	bf00      	nop
 8000e98:	46bd      	mov	sp, r7
 8000e9a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e9e:	4770      	bx	lr
 8000ea0:	200001f0 	.word	0x200001f0

08000ea4 <Control_ArmMotors>:

void Control_ArmMotors() {
 8000ea4:	b580      	push	{r7, lr}
 8000ea6:	af00      	add	r7, sp, #0
	printf("Armando motores\n");
 8000ea8:	480c      	ldr	r0, [pc, #48]	@ (8000edc <Control_ArmMotors+0x38>)
 8000eaa:	f007 fcb9 	bl	8008820 <puts>
//    Control.motor_control.motor2_speed = MOTOR_MAX_SPEED;
//    Control.motor_control.motor3_speed = MOTOR_MAX_SPEED;
//    Control.motor_control.motor4_speed = MOTOR_MAX_SPEED;
//    Control_SetMotorSpeeds();
//    HAL_Delay(3000);
    Control.motor_control.motor1_speed = MOTOR_MIN_SPEED;
 8000eae:	4b0c      	ldr	r3, [pc, #48]	@ (8000ee0 <Control_ArmMotors+0x3c>)
 8000eb0:	2264      	movs	r2, #100	@ 0x64
 8000eb2:	641a      	str	r2, [r3, #64]	@ 0x40
    Control.motor_control.motor2_speed = MOTOR_MIN_SPEED;
 8000eb4:	4b0a      	ldr	r3, [pc, #40]	@ (8000ee0 <Control_ArmMotors+0x3c>)
 8000eb6:	2264      	movs	r2, #100	@ 0x64
 8000eb8:	645a      	str	r2, [r3, #68]	@ 0x44
    Control.motor_control.motor3_speed = MOTOR_MIN_SPEED;
 8000eba:	4b09      	ldr	r3, [pc, #36]	@ (8000ee0 <Control_ArmMotors+0x3c>)
 8000ebc:	2264      	movs	r2, #100	@ 0x64
 8000ebe:	649a      	str	r2, [r3, #72]	@ 0x48
    Control.motor_control.motor4_speed = MOTOR_MIN_SPEED;
 8000ec0:	4b07      	ldr	r3, [pc, #28]	@ (8000ee0 <Control_ArmMotors+0x3c>)
 8000ec2:	2264      	movs	r2, #100	@ 0x64
 8000ec4:	64da      	str	r2, [r3, #76]	@ 0x4c
    Control_SetMotorSpeeds();
 8000ec6:	f000 f9fd 	bl	80012c4 <Control_SetMotorSpeeds>
    HAL_Delay(3000);
 8000eca:	f640 30b8 	movw	r0, #3000	@ 0xbb8
 8000ece:	f001 fd8b 	bl	80029e8 <HAL_Delay>

    printData("Motors armed\n");
 8000ed2:	4804      	ldr	r0, [pc, #16]	@ (8000ee4 <Control_ArmMotors+0x40>)
 8000ed4:	f001 f9a0 	bl	8002218 <printData>
}
 8000ed8:	bf00      	nop
 8000eda:	bd80      	pop	{r7, pc}
 8000edc:	0800abb4 	.word	0x0800abb4
 8000ee0:	200001f0 	.word	0x200001f0
 8000ee4:	0800abc4 	.word	0x0800abc4

08000ee8 <Control_Update>:

void Control_Update(void) {
 8000ee8:	b580      	push	{r7, lr}
 8000eea:	b086      	sub	sp, #24
 8000eec:	af00      	add	r7, sp, #0
	struct girodata_t giro;
	Sensor_Read(&giro);
 8000eee:	1d3b      	adds	r3, r7, #4
 8000ef0:	4618      	mov	r0, r3
 8000ef2:	f000 fb85 	bl	8001600 <Sensor_Read>
	//printf("AX: %i, AY: %i, AZ: %i, GX: %i, GY: %i, GZ: %i, MX: %i, MY: %i, MZ: %i\n", giro.ax, giro.ay, giro.az, giro.gx, giro.gy, giro.gz, giro.mx, giro.my, giro.mz);
    Control_Compute(&giro);
 8000ef6:	1d3b      	adds	r3, r7, #4
 8000ef8:	4618      	mov	r0, r3
 8000efa:	f000 f807 	bl	8000f0c <Control_Compute>

    Control_SetMotorSpeeds();
 8000efe:	f000 f9e1 	bl	80012c4 <Control_SetMotorSpeeds>
}
 8000f02:	bf00      	nop
 8000f04:	3718      	adds	r7, #24
 8000f06:	46bd      	mov	sp, r7
 8000f08:	bd80      	pop	{r7, pc}
	...

08000f0c <Control_Compute>:

void Control_Compute(struct girodata_t* giro) {
 8000f0c:	e92d 43b0 	stmdb	sp!, {r4, r5, r7, r8, r9, lr}
 8000f10:	b09c      	sub	sp, #112	@ 0x70
 8000f12:	af04      	add	r7, sp, #16
 8000f14:	6078      	str	r0, [r7, #4]
    float rateRoll = giro->gx * 70.0 / 1000.0;
 8000f16:	687b      	ldr	r3, [r7, #4]
 8000f18:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 8000f1c:	4618      	mov	r0, r3
 8000f1e:	f7ff fb01 	bl	8000524 <__aeabi_i2d>
 8000f22:	f04f 0200 	mov.w	r2, #0
 8000f26:	4bd2      	ldr	r3, [pc, #840]	@ (8001270 <Control_Compute+0x364>)
 8000f28:	f7ff fb66 	bl	80005f8 <__aeabi_dmul>
 8000f2c:	4602      	mov	r2, r0
 8000f2e:	460b      	mov	r3, r1
 8000f30:	4610      	mov	r0, r2
 8000f32:	4619      	mov	r1, r3
 8000f34:	f04f 0200 	mov.w	r2, #0
 8000f38:	4bce      	ldr	r3, [pc, #824]	@ (8001274 <Control_Compute+0x368>)
 8000f3a:	f7ff fc87 	bl	800084c <__aeabi_ddiv>
 8000f3e:	4602      	mov	r2, r0
 8000f40:	460b      	mov	r3, r1
 8000f42:	4610      	mov	r0, r2
 8000f44:	4619      	mov	r1, r3
 8000f46:	f7ff fe2f 	bl	8000ba8 <__aeabi_d2f>
 8000f4a:	4603      	mov	r3, r0
 8000f4c:	65fb      	str	r3, [r7, #92]	@ 0x5c
    float ratePitch = giro->gy * 70.0 / 1000.0;
 8000f4e:	687b      	ldr	r3, [r7, #4]
 8000f50:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8000f54:	4618      	mov	r0, r3
 8000f56:	f7ff fae5 	bl	8000524 <__aeabi_i2d>
 8000f5a:	f04f 0200 	mov.w	r2, #0
 8000f5e:	4bc4      	ldr	r3, [pc, #784]	@ (8001270 <Control_Compute+0x364>)
 8000f60:	f7ff fb4a 	bl	80005f8 <__aeabi_dmul>
 8000f64:	4602      	mov	r2, r0
 8000f66:	460b      	mov	r3, r1
 8000f68:	4610      	mov	r0, r2
 8000f6a:	4619      	mov	r1, r3
 8000f6c:	f04f 0200 	mov.w	r2, #0
 8000f70:	4bc0      	ldr	r3, [pc, #768]	@ (8001274 <Control_Compute+0x368>)
 8000f72:	f7ff fc6b 	bl	800084c <__aeabi_ddiv>
 8000f76:	4602      	mov	r2, r0
 8000f78:	460b      	mov	r3, r1
 8000f7a:	4610      	mov	r0, r2
 8000f7c:	4619      	mov	r1, r3
 8000f7e:	f7ff fe13 	bl	8000ba8 <__aeabi_d2f>
 8000f82:	4603      	mov	r3, r0
 8000f84:	65bb      	str	r3, [r7, #88]	@ 0x58
    float rateYaw = giro->gz * 70.0 / 1000.0;
 8000f86:	687b      	ldr	r3, [r7, #4]
 8000f88:	f9b3 300a 	ldrsh.w	r3, [r3, #10]
 8000f8c:	4618      	mov	r0, r3
 8000f8e:	f7ff fac9 	bl	8000524 <__aeabi_i2d>
 8000f92:	f04f 0200 	mov.w	r2, #0
 8000f96:	4bb6      	ldr	r3, [pc, #728]	@ (8001270 <Control_Compute+0x364>)
 8000f98:	f7ff fb2e 	bl	80005f8 <__aeabi_dmul>
 8000f9c:	4602      	mov	r2, r0
 8000f9e:	460b      	mov	r3, r1
 8000fa0:	4610      	mov	r0, r2
 8000fa2:	4619      	mov	r1, r3
 8000fa4:	f04f 0200 	mov.w	r2, #0
 8000fa8:	4bb2      	ldr	r3, [pc, #712]	@ (8001274 <Control_Compute+0x368>)
 8000faa:	f7ff fc4f 	bl	800084c <__aeabi_ddiv>
 8000fae:	4602      	mov	r2, r0
 8000fb0:	460b      	mov	r3, r1
 8000fb2:	4610      	mov	r0, r2
 8000fb4:	4619      	mov	r1, r3
 8000fb6:	f7ff fdf7 	bl	8000ba8 <__aeabi_d2f>
 8000fba:	4603      	mov	r3, r0
 8000fbc:	657b      	str	r3, [r7, #84]	@ 0x54

    float desiredRateRoll = 10.0;
 8000fbe:	4bae      	ldr	r3, [pc, #696]	@ (8001278 <Control_Compute+0x36c>)
 8000fc0:	653b      	str	r3, [r7, #80]	@ 0x50
    float desiredRatePitch = 5.0;
 8000fc2:	4bae      	ldr	r3, [pc, #696]	@ (800127c <Control_Compute+0x370>)
 8000fc4:	64fb      	str	r3, [r7, #76]	@ 0x4c
    float desiredRateYaw = 0.0;
 8000fc6:	f04f 0300 	mov.w	r3, #0
 8000fca:	64bb      	str	r3, [r7, #72]	@ 0x48

    // Error
    float errorRoll = desiredRateRoll - rateRoll;
 8000fcc:	ed97 7a14 	vldr	s14, [r7, #80]	@ 0x50
 8000fd0:	edd7 7a17 	vldr	s15, [r7, #92]	@ 0x5c
 8000fd4:	ee77 7a67 	vsub.f32	s15, s14, s15
 8000fd8:	edc7 7a11 	vstr	s15, [r7, #68]	@ 0x44
    float errorPitch = desiredRatePitch - ratePitch;
 8000fdc:	ed97 7a13 	vldr	s14, [r7, #76]	@ 0x4c
 8000fe0:	edd7 7a16 	vldr	s15, [r7, #88]	@ 0x58
 8000fe4:	ee77 7a67 	vsub.f32	s15, s14, s15
 8000fe8:	edc7 7a10 	vstr	s15, [r7, #64]	@ 0x40
    float errorYaw = desiredRateYaw - rateYaw;
 8000fec:	ed97 7a12 	vldr	s14, [r7, #72]	@ 0x48
 8000ff0:	edd7 7a15 	vldr	s15, [r7, #84]	@ 0x54
 8000ff4:	ee77 7a67 	vsub.f32	s15, s14, s15
 8000ff8:	edc7 7a0f 	vstr	s15, [r7, #60]	@ 0x3c

    // PID Roll
    float pTermRoll = Control.pid_roll.Kp * errorRoll;
 8000ffc:	4ba0      	ldr	r3, [pc, #640]	@ (8001280 <Control_Compute+0x374>)
 8000ffe:	edd3 7a00 	vldr	s15, [r3]
 8001002:	ed97 7a11 	vldr	s14, [r7, #68]	@ 0x44
 8001006:	ee67 7a27 	vmul.f32	s15, s14, s15
 800100a:	edc7 7a0e 	vstr	s15, [r7, #56]	@ 0x38
    Control.pid_roll.integral += errorRoll; // Acumulador integral
 800100e:	4b9c      	ldr	r3, [pc, #624]	@ (8001280 <Control_Compute+0x374>)
 8001010:	ed93 7a04 	vldr	s14, [r3, #16]
 8001014:	edd7 7a11 	vldr	s15, [r7, #68]	@ 0x44
 8001018:	ee77 7a27 	vadd.f32	s15, s14, s15
 800101c:	4b98      	ldr	r3, [pc, #608]	@ (8001280 <Control_Compute+0x374>)
 800101e:	edc3 7a04 	vstr	s15, [r3, #16]
    float iTermRoll = Control.pid_roll.Ki * Control.pid_roll.integral;
 8001022:	4b97      	ldr	r3, [pc, #604]	@ (8001280 <Control_Compute+0x374>)
 8001024:	ed93 7a01 	vldr	s14, [r3, #4]
 8001028:	4b95      	ldr	r3, [pc, #596]	@ (8001280 <Control_Compute+0x374>)
 800102a:	edd3 7a04 	vldr	s15, [r3, #16]
 800102e:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001032:	edc7 7a0d 	vstr	s15, [r7, #52]	@ 0x34
    float dTermRoll = Control.pid_roll.Kd * (errorRoll - Control.pid_roll.prev_error);
 8001036:	4b92      	ldr	r3, [pc, #584]	@ (8001280 <Control_Compute+0x374>)
 8001038:	ed93 7a02 	vldr	s14, [r3, #8]
 800103c:	4b90      	ldr	r3, [pc, #576]	@ (8001280 <Control_Compute+0x374>)
 800103e:	edd3 7a03 	vldr	s15, [r3, #12]
 8001042:	edd7 6a11 	vldr	s13, [r7, #68]	@ 0x44
 8001046:	ee76 7ae7 	vsub.f32	s15, s13, s15
 800104a:	ee67 7a27 	vmul.f32	s15, s14, s15
 800104e:	edc7 7a0c 	vstr	s15, [r7, #48]	@ 0x30
    Control.pid_roll.prev_error = errorRoll;
 8001052:	4a8b      	ldr	r2, [pc, #556]	@ (8001280 <Control_Compute+0x374>)
 8001054:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8001056:	60d3      	str	r3, [r2, #12]
    float pidOutputRoll = pTermRoll + iTermRoll + dTermRoll;
 8001058:	ed97 7a0e 	vldr	s14, [r7, #56]	@ 0x38
 800105c:	edd7 7a0d 	vldr	s15, [r7, #52]	@ 0x34
 8001060:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001064:	ed97 7a0c 	vldr	s14, [r7, #48]	@ 0x30
 8001068:	ee77 7a27 	vadd.f32	s15, s14, s15
 800106c:	edc7 7a0b 	vstr	s15, [r7, #44]	@ 0x2c

    // PID Pitch
    float pTermPitch = Control.pid_pitch.Kp * errorPitch;
 8001070:	4b83      	ldr	r3, [pc, #524]	@ (8001280 <Control_Compute+0x374>)
 8001072:	edd3 7a05 	vldr	s15, [r3, #20]
 8001076:	ed97 7a10 	vldr	s14, [r7, #64]	@ 0x40
 800107a:	ee67 7a27 	vmul.f32	s15, s14, s15
 800107e:	edc7 7a0a 	vstr	s15, [r7, #40]	@ 0x28
    Control.pid_pitch.integral += errorPitch;
 8001082:	4b7f      	ldr	r3, [pc, #508]	@ (8001280 <Control_Compute+0x374>)
 8001084:	ed93 7a09 	vldr	s14, [r3, #36]	@ 0x24
 8001088:	edd7 7a10 	vldr	s15, [r7, #64]	@ 0x40
 800108c:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001090:	4b7b      	ldr	r3, [pc, #492]	@ (8001280 <Control_Compute+0x374>)
 8001092:	edc3 7a09 	vstr	s15, [r3, #36]	@ 0x24
    float iTermPitch = Control.pid_pitch.Ki * Control.pid_pitch.integral;
 8001096:	4b7a      	ldr	r3, [pc, #488]	@ (8001280 <Control_Compute+0x374>)
 8001098:	ed93 7a06 	vldr	s14, [r3, #24]
 800109c:	4b78      	ldr	r3, [pc, #480]	@ (8001280 <Control_Compute+0x374>)
 800109e:	edd3 7a09 	vldr	s15, [r3, #36]	@ 0x24
 80010a2:	ee67 7a27 	vmul.f32	s15, s14, s15
 80010a6:	edc7 7a09 	vstr	s15, [r7, #36]	@ 0x24
    float dTermPitch = Control.pid_pitch.Kd * (errorPitch - Control.pid_pitch.prev_error);
 80010aa:	4b75      	ldr	r3, [pc, #468]	@ (8001280 <Control_Compute+0x374>)
 80010ac:	ed93 7a07 	vldr	s14, [r3, #28]
 80010b0:	4b73      	ldr	r3, [pc, #460]	@ (8001280 <Control_Compute+0x374>)
 80010b2:	edd3 7a08 	vldr	s15, [r3, #32]
 80010b6:	edd7 6a10 	vldr	s13, [r7, #64]	@ 0x40
 80010ba:	ee76 7ae7 	vsub.f32	s15, s13, s15
 80010be:	ee67 7a27 	vmul.f32	s15, s14, s15
 80010c2:	edc7 7a08 	vstr	s15, [r7, #32]
    Control.pid_pitch.prev_error = errorPitch;
 80010c6:	4a6e      	ldr	r2, [pc, #440]	@ (8001280 <Control_Compute+0x374>)
 80010c8:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 80010ca:	6213      	str	r3, [r2, #32]
    float pidOutputPitch = pTermPitch + iTermPitch + dTermPitch;
 80010cc:	ed97 7a0a 	vldr	s14, [r7, #40]	@ 0x28
 80010d0:	edd7 7a09 	vldr	s15, [r7, #36]	@ 0x24
 80010d4:	ee77 7a27 	vadd.f32	s15, s14, s15
 80010d8:	ed97 7a08 	vldr	s14, [r7, #32]
 80010dc:	ee77 7a27 	vadd.f32	s15, s14, s15
 80010e0:	edc7 7a07 	vstr	s15, [r7, #28]

    // PID Yaw
    float pTermYaw = Control.pid_yaw.Kp * errorYaw;
 80010e4:	4b66      	ldr	r3, [pc, #408]	@ (8001280 <Control_Compute+0x374>)
 80010e6:	edd3 7a0a 	vldr	s15, [r3, #40]	@ 0x28
 80010ea:	ed97 7a0f 	vldr	s14, [r7, #60]	@ 0x3c
 80010ee:	ee67 7a27 	vmul.f32	s15, s14, s15
 80010f2:	edc7 7a06 	vstr	s15, [r7, #24]
    Control.pid_yaw.integral += errorYaw;
 80010f6:	4b62      	ldr	r3, [pc, #392]	@ (8001280 <Control_Compute+0x374>)
 80010f8:	ed93 7a0e 	vldr	s14, [r3, #56]	@ 0x38
 80010fc:	edd7 7a0f 	vldr	s15, [r7, #60]	@ 0x3c
 8001100:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001104:	4b5e      	ldr	r3, [pc, #376]	@ (8001280 <Control_Compute+0x374>)
 8001106:	edc3 7a0e 	vstr	s15, [r3, #56]	@ 0x38
    float iTermYaw = Control.pid_yaw.Ki * Control.pid_yaw.integral;
 800110a:	4b5d      	ldr	r3, [pc, #372]	@ (8001280 <Control_Compute+0x374>)
 800110c:	ed93 7a0b 	vldr	s14, [r3, #44]	@ 0x2c
 8001110:	4b5b      	ldr	r3, [pc, #364]	@ (8001280 <Control_Compute+0x374>)
 8001112:	edd3 7a0e 	vldr	s15, [r3, #56]	@ 0x38
 8001116:	ee67 7a27 	vmul.f32	s15, s14, s15
 800111a:	edc7 7a05 	vstr	s15, [r7, #20]
    float dTermYaw = Control.pid_yaw.Kd * (errorYaw - Control.pid_yaw.prev_error);
 800111e:	4b58      	ldr	r3, [pc, #352]	@ (8001280 <Control_Compute+0x374>)
 8001120:	ed93 7a0c 	vldr	s14, [r3, #48]	@ 0x30
 8001124:	4b56      	ldr	r3, [pc, #344]	@ (8001280 <Control_Compute+0x374>)
 8001126:	edd3 7a0d 	vldr	s15, [r3, #52]	@ 0x34
 800112a:	edd7 6a0f 	vldr	s13, [r7, #60]	@ 0x3c
 800112e:	ee76 7ae7 	vsub.f32	s15, s13, s15
 8001132:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001136:	edc7 7a04 	vstr	s15, [r7, #16]
    Control.pid_yaw.prev_error = errorYaw;
 800113a:	4a51      	ldr	r2, [pc, #324]	@ (8001280 <Control_Compute+0x374>)
 800113c:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800113e:	6353      	str	r3, [r2, #52]	@ 0x34
    float pidOutputYaw = pTermYaw + iTermYaw + dTermYaw;
 8001140:	ed97 7a06 	vldr	s14, [r7, #24]
 8001144:	edd7 7a05 	vldr	s15, [r7, #20]
 8001148:	ee77 7a27 	vadd.f32	s15, s14, s15
 800114c:	ed97 7a04 	vldr	s14, [r7, #16]
 8001150:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001154:	edc7 7a03 	vstr	s15, [r7, #12]


    int baseThrottle = Control.base_throttle;
 8001158:	4b49      	ldr	r3, [pc, #292]	@ (8001280 <Control_Compute+0x374>)
 800115a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800115c:	60bb      	str	r3, [r7, #8]


    printf("Roll: %f;Pitch: %f;Yaw: %f\n", pidOutputRoll, pidOutputPitch, pidOutputYaw);
 800115e:	6af8      	ldr	r0, [r7, #44]	@ 0x2c
 8001160:	f7ff f9f2 	bl	8000548 <__aeabi_f2d>
 8001164:	4680      	mov	r8, r0
 8001166:	4689      	mov	r9, r1
 8001168:	69f8      	ldr	r0, [r7, #28]
 800116a:	f7ff f9ed 	bl	8000548 <__aeabi_f2d>
 800116e:	4604      	mov	r4, r0
 8001170:	460d      	mov	r5, r1
 8001172:	68f8      	ldr	r0, [r7, #12]
 8001174:	f7ff f9e8 	bl	8000548 <__aeabi_f2d>
 8001178:	4602      	mov	r2, r0
 800117a:	460b      	mov	r3, r1
 800117c:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8001180:	e9cd 4500 	strd	r4, r5, [sp]
 8001184:	4642      	mov	r2, r8
 8001186:	464b      	mov	r3, r9
 8001188:	483e      	ldr	r0, [pc, #248]	@ (8001284 <Control_Compute+0x378>)
 800118a:	f007 fae1 	bl	8008750 <iprintf>

    if (baseThrottle <= MOTOR_MIN_SPEED) {
 800118e:	68bb      	ldr	r3, [r7, #8]
 8001190:	2b64      	cmp	r3, #100	@ 0x64
 8001192:	dc0c      	bgt.n	80011ae <Control_Compute+0x2a2>
        Control.motor_control.motor1_speed = MOTOR_MIN_SPEED;
 8001194:	4b3a      	ldr	r3, [pc, #232]	@ (8001280 <Control_Compute+0x374>)
 8001196:	2264      	movs	r2, #100	@ 0x64
 8001198:	641a      	str	r2, [r3, #64]	@ 0x40
        Control.motor_control.motor2_speed = MOTOR_MIN_SPEED;
 800119a:	4b39      	ldr	r3, [pc, #228]	@ (8001280 <Control_Compute+0x374>)
 800119c:	2264      	movs	r2, #100	@ 0x64
 800119e:	645a      	str	r2, [r3, #68]	@ 0x44
        Control.motor_control.motor3_speed = MOTOR_MIN_SPEED;
 80011a0:	4b37      	ldr	r3, [pc, #220]	@ (8001280 <Control_Compute+0x374>)
 80011a2:	2264      	movs	r2, #100	@ 0x64
 80011a4:	649a      	str	r2, [r3, #72]	@ 0x48
        Control.motor_control.motor4_speed = MOTOR_MIN_SPEED;
 80011a6:	4b36      	ldr	r3, [pc, #216]	@ (8001280 <Control_Compute+0x374>)
 80011a8:	2264      	movs	r2, #100	@ 0x64
 80011aa:	64da      	str	r2, [r3, #76]	@ 0x4c
        return;
 80011ac:	e05b      	b.n	8001266 <Control_Compute+0x35a>
    };


    Control.motor_control.motor1_speed = baseThrottle + pidOutputPitch - pidOutputRoll - pidOutputYaw;
 80011ae:	68bb      	ldr	r3, [r7, #8]
 80011b0:	ee07 3a90 	vmov	s15, r3
 80011b4:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80011b8:	edd7 7a07 	vldr	s15, [r7, #28]
 80011bc:	ee37 7a27 	vadd.f32	s14, s14, s15
 80011c0:	edd7 7a0b 	vldr	s15, [r7, #44]	@ 0x2c
 80011c4:	ee37 7a67 	vsub.f32	s14, s14, s15
 80011c8:	edd7 7a03 	vldr	s15, [r7, #12]
 80011cc:	ee77 7a67 	vsub.f32	s15, s14, s15
 80011d0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80011d4:	ee17 2a90 	vmov	r2, s15
 80011d8:	4b29      	ldr	r3, [pc, #164]	@ (8001280 <Control_Compute+0x374>)
 80011da:	641a      	str	r2, [r3, #64]	@ 0x40
    Control.motor_control.motor2_speed = baseThrottle + pidOutputPitch + pidOutputRoll + pidOutputYaw;
 80011dc:	68bb      	ldr	r3, [r7, #8]
 80011de:	ee07 3a90 	vmov	s15, r3
 80011e2:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80011e6:	edd7 7a07 	vldr	s15, [r7, #28]
 80011ea:	ee37 7a27 	vadd.f32	s14, s14, s15
 80011ee:	edd7 7a0b 	vldr	s15, [r7, #44]	@ 0x2c
 80011f2:	ee37 7a27 	vadd.f32	s14, s14, s15
 80011f6:	edd7 7a03 	vldr	s15, [r7, #12]
 80011fa:	ee77 7a27 	vadd.f32	s15, s14, s15
 80011fe:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8001202:	ee17 2a90 	vmov	r2, s15
 8001206:	4b1e      	ldr	r3, [pc, #120]	@ (8001280 <Control_Compute+0x374>)
 8001208:	645a      	str	r2, [r3, #68]	@ 0x44
    Control.motor_control.motor3_speed = baseThrottle - pidOutputPitch + pidOutputRoll - pidOutputYaw;
 800120a:	68bb      	ldr	r3, [r7, #8]
 800120c:	ee07 3a90 	vmov	s15, r3
 8001210:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8001214:	edd7 7a07 	vldr	s15, [r7, #28]
 8001218:	ee37 7a67 	vsub.f32	s14, s14, s15
 800121c:	edd7 7a0b 	vldr	s15, [r7, #44]	@ 0x2c
 8001220:	ee37 7a27 	vadd.f32	s14, s14, s15
 8001224:	edd7 7a03 	vldr	s15, [r7, #12]
 8001228:	ee77 7a67 	vsub.f32	s15, s14, s15
 800122c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8001230:	ee17 2a90 	vmov	r2, s15
 8001234:	4b12      	ldr	r3, [pc, #72]	@ (8001280 <Control_Compute+0x374>)
 8001236:	649a      	str	r2, [r3, #72]	@ 0x48
    Control.motor_control.motor4_speed = baseThrottle - pidOutputPitch - pidOutputRoll + pidOutputYaw;
 8001238:	68bb      	ldr	r3, [r7, #8]
 800123a:	ee07 3a90 	vmov	s15, r3
 800123e:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8001242:	edd7 7a07 	vldr	s15, [r7, #28]
 8001246:	ee37 7a67 	vsub.f32	s14, s14, s15
 800124a:	edd7 7a0b 	vldr	s15, [r7, #44]	@ 0x2c
 800124e:	ee37 7a67 	vsub.f32	s14, s14, s15
 8001252:	edd7 7a03 	vldr	s15, [r7, #12]
 8001256:	ee77 7a27 	vadd.f32	s15, s14, s15
 800125a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800125e:	ee17 2a90 	vmov	r2, s15
 8001262:	4b07      	ldr	r3, [pc, #28]	@ (8001280 <Control_Compute+0x374>)
 8001264:	64da      	str	r2, [r3, #76]	@ 0x4c
//    Control.motor_control.motor1_speed = constrain(Control.motor_control.motor1_speed, MOTOR_MIN_SPEED, MOTOR_MAX_SPEED);
//    Control.motor_control.motor2_speed = constrain(Control.motor_control.motor2_speed, MOTOR_MIN_SPEED, MOTOR_MAX_SPEED);
//    Control.motor_control.motor3_speed = constrain(Control.motor_control.motor3_speed, MOTOR_MIN_SPEED, MOTOR_MAX_SPEED);
//    Control.motor_control.motor4_speed = constrain(Control.motor_control.motor4_speed, MOTOR_MIN_SPEED, MOTOR_MAX_SPEED);

}
 8001266:	3760      	adds	r7, #96	@ 0x60
 8001268:	46bd      	mov	sp, r7
 800126a:	e8bd 83b0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, pc}
 800126e:	bf00      	nop
 8001270:	40518000 	.word	0x40518000
 8001274:	408f4000 	.word	0x408f4000
 8001278:	41200000 	.word	0x41200000
 800127c:	40a00000 	.word	0x40a00000
 8001280:	200001f0 	.word	0x200001f0
 8001284:	0800abd4 	.word	0x0800abd4

08001288 <Control_GetMotorSpeeds>:


void Control_GetMotorSpeeds(char* buffer, size_t buffer_size) {
 8001288:	b580      	push	{r7, lr}
 800128a:	b086      	sub	sp, #24
 800128c:	af04      	add	r7, sp, #16
 800128e:	6078      	str	r0, [r7, #4]
 8001290:	6039      	str	r1, [r7, #0]
    snprintf(buffer, buffer_size, "M1: %d, M2: %d, M3: %d, M4: %d\n",
 8001292:	4b0a      	ldr	r3, [pc, #40]	@ (80012bc <Control_GetMotorSpeeds+0x34>)
 8001294:	6c18      	ldr	r0, [r3, #64]	@ 0x40
 8001296:	4b09      	ldr	r3, [pc, #36]	@ (80012bc <Control_GetMotorSpeeds+0x34>)
 8001298:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800129a:	4a08      	ldr	r2, [pc, #32]	@ (80012bc <Control_GetMotorSpeeds+0x34>)
 800129c:	6c92      	ldr	r2, [r2, #72]	@ 0x48
 800129e:	4907      	ldr	r1, [pc, #28]	@ (80012bc <Control_GetMotorSpeeds+0x34>)
 80012a0:	6cc9      	ldr	r1, [r1, #76]	@ 0x4c
 80012a2:	9102      	str	r1, [sp, #8]
 80012a4:	9201      	str	r2, [sp, #4]
 80012a6:	9300      	str	r3, [sp, #0]
 80012a8:	4603      	mov	r3, r0
 80012aa:	4a05      	ldr	r2, [pc, #20]	@ (80012c0 <Control_GetMotorSpeeds+0x38>)
 80012ac:	6839      	ldr	r1, [r7, #0]
 80012ae:	6878      	ldr	r0, [r7, #4]
 80012b0:	f007 fabe 	bl	8008830 <sniprintf>
             Control.motor_control.motor1_speed,
             Control.motor_control.motor2_speed,
             Control.motor_control.motor3_speed,
             Control.motor_control.motor4_speed);
}
 80012b4:	bf00      	nop
 80012b6:	3708      	adds	r7, #8
 80012b8:	46bd      	mov	sp, r7
 80012ba:	bd80      	pop	{r7, pc}
 80012bc:	200001f0 	.word	0x200001f0
 80012c0:	0800abf0 	.word	0x0800abf0

080012c4 <Control_SetMotorSpeeds>:



void Control_SetMotorSpeeds(void) {
 80012c4:	b480      	push	{r7}
 80012c6:	b085      	sub	sp, #20
 80012c8:	af00      	add	r7, sp, #0
    int motor1_speed = (Control.motor_control.motor1_speed < 0) ? 0 : (Control.motor_control.motor1_speed > MOTOR_MAX_SPEED ? MOTOR_MAX_SPEED : Control.motor_control.motor1_speed);
 80012ca:	4b22      	ldr	r3, [pc, #136]	@ (8001354 <Control_SetMotorSpeeds+0x90>)
 80012cc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80012ce:	2b00      	cmp	r3, #0
 80012d0:	db05      	blt.n	80012de <Control_SetMotorSpeeds+0x1a>
 80012d2:	4b20      	ldr	r3, [pc, #128]	@ (8001354 <Control_SetMotorSpeeds+0x90>)
 80012d4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80012d6:	2bc8      	cmp	r3, #200	@ 0xc8
 80012d8:	bfa8      	it	ge
 80012da:	23c8      	movge	r3, #200	@ 0xc8
 80012dc:	e000      	b.n	80012e0 <Control_SetMotorSpeeds+0x1c>
 80012de:	2300      	movs	r3, #0
 80012e0:	60fb      	str	r3, [r7, #12]
    int motor2_speed = (Control.motor_control.motor2_speed < 0) ? 0 : (Control.motor_control.motor2_speed > MOTOR_MAX_SPEED ? MOTOR_MAX_SPEED : Control.motor_control.motor2_speed);
 80012e2:	4b1c      	ldr	r3, [pc, #112]	@ (8001354 <Control_SetMotorSpeeds+0x90>)
 80012e4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80012e6:	2b00      	cmp	r3, #0
 80012e8:	db05      	blt.n	80012f6 <Control_SetMotorSpeeds+0x32>
 80012ea:	4b1a      	ldr	r3, [pc, #104]	@ (8001354 <Control_SetMotorSpeeds+0x90>)
 80012ec:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80012ee:	2bc8      	cmp	r3, #200	@ 0xc8
 80012f0:	bfa8      	it	ge
 80012f2:	23c8      	movge	r3, #200	@ 0xc8
 80012f4:	e000      	b.n	80012f8 <Control_SetMotorSpeeds+0x34>
 80012f6:	2300      	movs	r3, #0
 80012f8:	60bb      	str	r3, [r7, #8]
    int motor3_speed = (Control.motor_control.motor3_speed < 0) ? 0 : (Control.motor_control.motor3_speed > MOTOR_MAX_SPEED ? MOTOR_MAX_SPEED : Control.motor_control.motor3_speed);
 80012fa:	4b16      	ldr	r3, [pc, #88]	@ (8001354 <Control_SetMotorSpeeds+0x90>)
 80012fc:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80012fe:	2b00      	cmp	r3, #0
 8001300:	db05      	blt.n	800130e <Control_SetMotorSpeeds+0x4a>
 8001302:	4b14      	ldr	r3, [pc, #80]	@ (8001354 <Control_SetMotorSpeeds+0x90>)
 8001304:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8001306:	2bc8      	cmp	r3, #200	@ 0xc8
 8001308:	bfa8      	it	ge
 800130a:	23c8      	movge	r3, #200	@ 0xc8
 800130c:	e000      	b.n	8001310 <Control_SetMotorSpeeds+0x4c>
 800130e:	2300      	movs	r3, #0
 8001310:	607b      	str	r3, [r7, #4]
    int motor4_speed = (Control.motor_control.motor4_speed < 0) ? 0 : (Control.motor_control.motor4_speed > MOTOR_MAX_SPEED ? MOTOR_MAX_SPEED : Control.motor_control.motor4_speed);
 8001312:	4b10      	ldr	r3, [pc, #64]	@ (8001354 <Control_SetMotorSpeeds+0x90>)
 8001314:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001316:	2b00      	cmp	r3, #0
 8001318:	db05      	blt.n	8001326 <Control_SetMotorSpeeds+0x62>
 800131a:	4b0e      	ldr	r3, [pc, #56]	@ (8001354 <Control_SetMotorSpeeds+0x90>)
 800131c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800131e:	2bc8      	cmp	r3, #200	@ 0xc8
 8001320:	bfa8      	it	ge
 8001322:	23c8      	movge	r3, #200	@ 0xc8
 8001324:	e000      	b.n	8001328 <Control_SetMotorSpeeds+0x64>
 8001326:	2300      	movs	r3, #0
 8001328:	603b      	str	r3, [r7, #0]

    TIM1->CCR1 = motor1_speed;
 800132a:	4a0b      	ldr	r2, [pc, #44]	@ (8001358 <Control_SetMotorSpeeds+0x94>)
 800132c:	68fb      	ldr	r3, [r7, #12]
 800132e:	6353      	str	r3, [r2, #52]	@ 0x34
    TIM1->CCR4 = motor2_speed;
 8001330:	4a09      	ldr	r2, [pc, #36]	@ (8001358 <Control_SetMotorSpeeds+0x94>)
 8001332:	68bb      	ldr	r3, [r7, #8]
 8001334:	6413      	str	r3, [r2, #64]	@ 0x40
    TIM2->CCR1 = motor3_speed;
 8001336:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 800133a:	687b      	ldr	r3, [r7, #4]
 800133c:	6353      	str	r3, [r2, #52]	@ 0x34
    TIM2->CCR2 = motor4_speed;
 800133e:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 8001342:	683b      	ldr	r3, [r7, #0]
 8001344:	6393      	str	r3, [r2, #56]	@ 0x38

    //printf("Motor Speeds: %d, %d, %d, %d\n", motor1_speed, motor2_speed, motor3_speed, motor4_speed);
}
 8001346:	bf00      	nop
 8001348:	3714      	adds	r7, #20
 800134a:	46bd      	mov	sp, r7
 800134c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001350:	4770      	bx	lr
 8001352:	bf00      	nop
 8001354:	200001f0 	.word	0x200001f0
 8001358:	40012c00 	.word	0x40012c00

0800135c <Control_SetMotorsPower>:

void Control_SetMotorsPower(uint8_t base_power_percentage) {
 800135c:	b580      	push	{r7, lr}
 800135e:	b082      	sub	sp, #8
 8001360:	af00      	add	r7, sp, #0
 8001362:	4603      	mov	r3, r0
 8001364:	71fb      	strb	r3, [r7, #7]
    if (base_power_percentage < 0) base_power_percentage = 0;
    if (base_power_percentage > 100) base_power_percentage = 100;
 8001366:	79fb      	ldrb	r3, [r7, #7]
 8001368:	2b64      	cmp	r3, #100	@ 0x64
 800136a:	d901      	bls.n	8001370 <Control_SetMotorsPower+0x14>
 800136c:	2364      	movs	r3, #100	@ 0x64
 800136e:	71fb      	strb	r3, [r7, #7]

    printf("Base power percentage: %d\n", base_power_percentage);
 8001370:	79fb      	ldrb	r3, [r7, #7]
 8001372:	4619      	mov	r1, r3
 8001374:	4805      	ldr	r0, [pc, #20]	@ (800138c <Control_SetMotorsPower+0x30>)
 8001376:	f007 f9eb 	bl	8008750 <iprintf>

    Control.base_throttle = MOTOR_MIN_SPEED + ((MOTOR_MAX_SPEED - MOTOR_MIN_SPEED) * base_power_percentage) / 100;
 800137a:	79fb      	ldrb	r3, [r7, #7]
 800137c:	3364      	adds	r3, #100	@ 0x64
 800137e:	4a04      	ldr	r2, [pc, #16]	@ (8001390 <Control_SetMotorsPower+0x34>)
 8001380:	63d3      	str	r3, [r2, #60]	@ 0x3c
}
 8001382:	bf00      	nop
 8001384:	3708      	adds	r7, #8
 8001386:	46bd      	mov	sp, r7
 8001388:	bd80      	pop	{r7, pc}
 800138a:	bf00      	nop
 800138c:	0800ac10 	.word	0x0800ac10
 8001390:	200001f0 	.word	0x200001f0

08001394 <Control_Stop>:
    printf("Motor 2 speed: %d\n", Control.motor_control.motor2_speed);
    printf("Motor 3 speed: %d\n", Control.motor_control.motor3_speed);
    printf("Motor 4 speed: %d\n", Control.motor_control.motor4_speed);
}

void Control_Stop(void) {
 8001394:	b580      	push	{r7, lr}
 8001396:	af00      	add	r7, sp, #0
	Control.base_throttle = 0;
 8001398:	4b0a      	ldr	r3, [pc, #40]	@ (80013c4 <Control_Stop+0x30>)
 800139a:	2200      	movs	r2, #0
 800139c:	63da      	str	r2, [r3, #60]	@ 0x3c
    Control.motor_control.motor1_speed = 0;
 800139e:	4b09      	ldr	r3, [pc, #36]	@ (80013c4 <Control_Stop+0x30>)
 80013a0:	2200      	movs	r2, #0
 80013a2:	641a      	str	r2, [r3, #64]	@ 0x40
    Control.motor_control.motor2_speed = 0;
 80013a4:	4b07      	ldr	r3, [pc, #28]	@ (80013c4 <Control_Stop+0x30>)
 80013a6:	2200      	movs	r2, #0
 80013a8:	645a      	str	r2, [r3, #68]	@ 0x44
    Control.motor_control.motor3_speed = 0;
 80013aa:	4b06      	ldr	r3, [pc, #24]	@ (80013c4 <Control_Stop+0x30>)
 80013ac:	2200      	movs	r2, #0
 80013ae:	649a      	str	r2, [r3, #72]	@ 0x48
    Control.motor_control.motor4_speed = 0;
 80013b0:	4b04      	ldr	r3, [pc, #16]	@ (80013c4 <Control_Stop+0x30>)
 80013b2:	2200      	movs	r2, #0
 80013b4:	64da      	str	r2, [r3, #76]	@ 0x4c
    Control_SetMotorSpeeds();
 80013b6:	f7ff ff85 	bl	80012c4 <Control_SetMotorSpeeds>

    printData("Motors stopped\n");
 80013ba:	4803      	ldr	r0, [pc, #12]	@ (80013c8 <Control_Stop+0x34>)
 80013bc:	f000 ff2c 	bl	8002218 <printData>
}
 80013c0:	bf00      	nop
 80013c2:	bd80      	pop	{r7, pc}
 80013c4:	200001f0 	.word	0x200001f0
 80013c8:	0800ac7c 	.word	0x0800ac7c

080013cc <GY85_Init>:
static Kalman_t kalman_pitch, kalman_roll; // Instancias del filtro Kalman
static float pitch = 0.0f, roll = 0.0f;



void GY85_Init() {
 80013cc:	b580      	push	{r7, lr}
 80013ce:	b086      	sub	sp, #24
 80013d0:	af04      	add	r7, sp, #16
	printf("Iniciando sensores\n");
 80013d2:	4836      	ldr	r0, [pc, #216]	@ (80014ac <GY85_Init+0xe0>)
 80013d4:	f007 fa24 	bl	8008820 <puts>
    uint8_t data;

    // Inicializar el acelerómetro (ADXL345)
    data = 0x08; // Encender el sensor
 80013d8:	2308      	movs	r3, #8
 80013da:	71fb      	strb	r3, [r7, #7]
    HAL_I2C_Mem_Write(&hi2c1, (ADXL345_ADDR << 1), 0x2D, I2C_MEMADD_SIZE_8BIT, &data, 1, HAL_MAX_DELAY);
 80013dc:	f04f 33ff 	mov.w	r3, #4294967295
 80013e0:	9302      	str	r3, [sp, #8]
 80013e2:	2301      	movs	r3, #1
 80013e4:	9301      	str	r3, [sp, #4]
 80013e6:	1dfb      	adds	r3, r7, #7
 80013e8:	9300      	str	r3, [sp, #0]
 80013ea:	2301      	movs	r3, #1
 80013ec:	222d      	movs	r2, #45	@ 0x2d
 80013ee:	21a6      	movs	r1, #166	@ 0xa6
 80013f0:	482f      	ldr	r0, [pc, #188]	@ (80014b0 <GY85_Init+0xe4>)
 80013f2:	f001 fed1 	bl	8003198 <HAL_I2C_Mem_Write>
    data = 0x01; // Configurar rango ±4g
 80013f6:	2301      	movs	r3, #1
 80013f8:	71fb      	strb	r3, [r7, #7]
    HAL_I2C_Mem_Write(&hi2c1, (ADXL345_ADDR << 1), 0x31, I2C_MEMADD_SIZE_8BIT, &data, 1, HAL_MAX_DELAY);
 80013fa:	f04f 33ff 	mov.w	r3, #4294967295
 80013fe:	9302      	str	r3, [sp, #8]
 8001400:	2301      	movs	r3, #1
 8001402:	9301      	str	r3, [sp, #4]
 8001404:	1dfb      	adds	r3, r7, #7
 8001406:	9300      	str	r3, [sp, #0]
 8001408:	2301      	movs	r3, #1
 800140a:	2231      	movs	r2, #49	@ 0x31
 800140c:	21a6      	movs	r1, #166	@ 0xa6
 800140e:	4828      	ldr	r0, [pc, #160]	@ (80014b0 <GY85_Init+0xe4>)
 8001410:	f001 fec2 	bl	8003198 <HAL_I2C_Mem_Write>

    // Inicializar el magnetómetro (HMC5883L)
    data = 0x70; // Configurar promedio y frecuencia
 8001414:	2370      	movs	r3, #112	@ 0x70
 8001416:	71fb      	strb	r3, [r7, #7]
    HAL_I2C_Mem_Write(&hi2c1, (HMC5883L_ADDR << 1), 0x00, I2C_MEMADD_SIZE_8BIT, &data, 1, HAL_MAX_DELAY);
 8001418:	f04f 33ff 	mov.w	r3, #4294967295
 800141c:	9302      	str	r3, [sp, #8]
 800141e:	2301      	movs	r3, #1
 8001420:	9301      	str	r3, [sp, #4]
 8001422:	1dfb      	adds	r3, r7, #7
 8001424:	9300      	str	r3, [sp, #0]
 8001426:	2301      	movs	r3, #1
 8001428:	2200      	movs	r2, #0
 800142a:	213c      	movs	r1, #60	@ 0x3c
 800142c:	4820      	ldr	r0, [pc, #128]	@ (80014b0 <GY85_Init+0xe4>)
 800142e:	f001 feb3 	bl	8003198 <HAL_I2C_Mem_Write>
    data = 0x00; // Modo continuo
 8001432:	2300      	movs	r3, #0
 8001434:	71fb      	strb	r3, [r7, #7]
    HAL_I2C_Mem_Write(&hi2c1, (HMC5883L_ADDR << 1), 0x02, I2C_MEMADD_SIZE_8BIT, &data, 1, HAL_MAX_DELAY);
 8001436:	f04f 33ff 	mov.w	r3, #4294967295
 800143a:	9302      	str	r3, [sp, #8]
 800143c:	2301      	movs	r3, #1
 800143e:	9301      	str	r3, [sp, #4]
 8001440:	1dfb      	adds	r3, r7, #7
 8001442:	9300      	str	r3, [sp, #0]
 8001444:	2301      	movs	r3, #1
 8001446:	2202      	movs	r2, #2
 8001448:	213c      	movs	r1, #60	@ 0x3c
 800144a:	4819      	ldr	r0, [pc, #100]	@ (80014b0 <GY85_Init+0xe4>)
 800144c:	f001 fea4 	bl	8003198 <HAL_I2C_Mem_Write>

    // Inicializar el giroscopio (ITG-3205)
    data = 0x03; // Usar PLL con eje Z
 8001450:	2303      	movs	r3, #3
 8001452:	71fb      	strb	r3, [r7, #7]
    HAL_I2C_Mem_Write(&hi2c1, (ITG3205_ADDR << 1), 0x3E, I2C_MEMADD_SIZE_8BIT, &data, 1, HAL_MAX_DELAY);
 8001454:	f04f 33ff 	mov.w	r3, #4294967295
 8001458:	9302      	str	r3, [sp, #8]
 800145a:	2301      	movs	r3, #1
 800145c:	9301      	str	r3, [sp, #4]
 800145e:	1dfb      	adds	r3, r7, #7
 8001460:	9300      	str	r3, [sp, #0]
 8001462:	2301      	movs	r3, #1
 8001464:	223e      	movs	r2, #62	@ 0x3e
 8001466:	21d0      	movs	r1, #208	@ 0xd0
 8001468:	4811      	ldr	r0, [pc, #68]	@ (80014b0 <GY85_Init+0xe4>)
 800146a:	f001 fe95 	bl	8003198 <HAL_I2C_Mem_Write>
    data = 0x18; // Configurar rango ±2000°/s
 800146e:	2318      	movs	r3, #24
 8001470:	71fb      	strb	r3, [r7, #7]
    HAL_I2C_Mem_Write(&hi2c1, (ITG3205_ADDR << 1), 0x16, I2C_MEMADD_SIZE_8BIT, &data, 1, HAL_MAX_DELAY);
 8001472:	f04f 33ff 	mov.w	r3, #4294967295
 8001476:	9302      	str	r3, [sp, #8]
 8001478:	2301      	movs	r3, #1
 800147a:	9301      	str	r3, [sp, #4]
 800147c:	1dfb      	adds	r3, r7, #7
 800147e:	9300      	str	r3, [sp, #0]
 8001480:	2301      	movs	r3, #1
 8001482:	2216      	movs	r2, #22
 8001484:	21d0      	movs	r1, #208	@ 0xd0
 8001486:	480a      	ldr	r0, [pc, #40]	@ (80014b0 <GY85_Init+0xe4>)
 8001488:	f001 fe86 	bl	8003198 <HAL_I2C_Mem_Write>

    printf("Calibrando sensores\n");
 800148c:	4809      	ldr	r0, [pc, #36]	@ (80014b4 <GY85_Init+0xe8>)
 800148e:	f007 f9c7 	bl	8008820 <puts>
    CalibrateAccelerometer();
 8001492:	f000 fa47 	bl	8001924 <CalibrateAccelerometer>
    CalibrateGyroscope();
 8001496:	f000 faf1 	bl	8001a7c <CalibrateGyroscope>
    CalibrateMagnetometer();
 800149a:	f000 f8f3 	bl	8001684 <CalibrateMagnetometer>
    printf("Sensores calibrados\n");
 800149e:	4806      	ldr	r0, [pc, #24]	@ (80014b8 <GY85_Init+0xec>)
 80014a0:	f007 f9be 	bl	8008820 <puts>
}
 80014a4:	bf00      	nop
 80014a6:	3708      	adds	r7, #8
 80014a8:	46bd      	mov	sp, r7
 80014aa:	bd80      	pop	{r7, pc}
 80014ac:	0800ac8c 	.word	0x0800ac8c
 80014b0:	20000270 	.word	0x20000270
 80014b4:	0800aca0 	.word	0x0800aca0
 80014b8:	0800acb4 	.word	0x0800acb4

080014bc <ADXL345_ReadData>:


void ADXL345_ReadData(int16_t *x, int16_t *y, int16_t *z) {
 80014bc:	b580      	push	{r7, lr}
 80014be:	b08a      	sub	sp, #40	@ 0x28
 80014c0:	af04      	add	r7, sp, #16
 80014c2:	60f8      	str	r0, [r7, #12]
 80014c4:	60b9      	str	r1, [r7, #8]
 80014c6:	607a      	str	r2, [r7, #4]
    uint8_t buffer[6];
    HAL_I2C_Mem_Read(&hi2c1, (ADXL345_ADDR << 1), 0x32, I2C_MEMADD_SIZE_8BIT, buffer, 6, HAL_MAX_DELAY);
 80014c8:	f04f 33ff 	mov.w	r3, #4294967295
 80014cc:	9302      	str	r3, [sp, #8]
 80014ce:	2306      	movs	r3, #6
 80014d0:	9301      	str	r3, [sp, #4]
 80014d2:	f107 0310 	add.w	r3, r7, #16
 80014d6:	9300      	str	r3, [sp, #0]
 80014d8:	2301      	movs	r3, #1
 80014da:	2232      	movs	r2, #50	@ 0x32
 80014dc:	21a6      	movs	r1, #166	@ 0xa6
 80014de:	4811      	ldr	r0, [pc, #68]	@ (8001524 <ADXL345_ReadData+0x68>)
 80014e0:	f001 ff6e 	bl	80033c0 <HAL_I2C_Mem_Read>
    *x = (int16_t)((buffer[1] << 8) | buffer[0]);
 80014e4:	7c7b      	ldrb	r3, [r7, #17]
 80014e6:	021b      	lsls	r3, r3, #8
 80014e8:	b21a      	sxth	r2, r3
 80014ea:	7c3b      	ldrb	r3, [r7, #16]
 80014ec:	b21b      	sxth	r3, r3
 80014ee:	4313      	orrs	r3, r2
 80014f0:	b21a      	sxth	r2, r3
 80014f2:	68fb      	ldr	r3, [r7, #12]
 80014f4:	801a      	strh	r2, [r3, #0]
    *y = (int16_t)((buffer[3] << 8) | buffer[2]);
 80014f6:	7cfb      	ldrb	r3, [r7, #19]
 80014f8:	021b      	lsls	r3, r3, #8
 80014fa:	b21a      	sxth	r2, r3
 80014fc:	7cbb      	ldrb	r3, [r7, #18]
 80014fe:	b21b      	sxth	r3, r3
 8001500:	4313      	orrs	r3, r2
 8001502:	b21a      	sxth	r2, r3
 8001504:	68bb      	ldr	r3, [r7, #8]
 8001506:	801a      	strh	r2, [r3, #0]
    *z = (int16_t)((buffer[5] << 8) | buffer[4]);
 8001508:	7d7b      	ldrb	r3, [r7, #21]
 800150a:	021b      	lsls	r3, r3, #8
 800150c:	b21a      	sxth	r2, r3
 800150e:	7d3b      	ldrb	r3, [r7, #20]
 8001510:	b21b      	sxth	r3, r3
 8001512:	4313      	orrs	r3, r2
 8001514:	b21a      	sxth	r2, r3
 8001516:	687b      	ldr	r3, [r7, #4]
 8001518:	801a      	strh	r2, [r3, #0]
}
 800151a:	bf00      	nop
 800151c:	3718      	adds	r7, #24
 800151e:	46bd      	mov	sp, r7
 8001520:	bd80      	pop	{r7, pc}
 8001522:	bf00      	nop
 8001524:	20000270 	.word	0x20000270

08001528 <HMC5883L_ReadData>:

void HMC5883L_ReadData(int16_t *x, int16_t *y, int16_t *z) {
 8001528:	b580      	push	{r7, lr}
 800152a:	b08a      	sub	sp, #40	@ 0x28
 800152c:	af04      	add	r7, sp, #16
 800152e:	60f8      	str	r0, [r7, #12]
 8001530:	60b9      	str	r1, [r7, #8]
 8001532:	607a      	str	r2, [r7, #4]
    uint8_t buffer[6];
    HAL_I2C_Mem_Read(&hi2c1, (HMC5883L_ADDR << 1), 0x03, I2C_MEMADD_SIZE_8BIT, buffer, 6, HAL_MAX_DELAY);
 8001534:	f04f 33ff 	mov.w	r3, #4294967295
 8001538:	9302      	str	r3, [sp, #8]
 800153a:	2306      	movs	r3, #6
 800153c:	9301      	str	r3, [sp, #4]
 800153e:	f107 0310 	add.w	r3, r7, #16
 8001542:	9300      	str	r3, [sp, #0]
 8001544:	2301      	movs	r3, #1
 8001546:	2203      	movs	r2, #3
 8001548:	213c      	movs	r1, #60	@ 0x3c
 800154a:	4811      	ldr	r0, [pc, #68]	@ (8001590 <HMC5883L_ReadData+0x68>)
 800154c:	f001 ff38 	bl	80033c0 <HAL_I2C_Mem_Read>
    *x = (int16_t)((buffer[0] << 8) | buffer[1]);
 8001550:	7c3b      	ldrb	r3, [r7, #16]
 8001552:	021b      	lsls	r3, r3, #8
 8001554:	b21a      	sxth	r2, r3
 8001556:	7c7b      	ldrb	r3, [r7, #17]
 8001558:	b21b      	sxth	r3, r3
 800155a:	4313      	orrs	r3, r2
 800155c:	b21a      	sxth	r2, r3
 800155e:	68fb      	ldr	r3, [r7, #12]
 8001560:	801a      	strh	r2, [r3, #0]
    *z = (int16_t)((buffer[2] << 8) | buffer[3]);
 8001562:	7cbb      	ldrb	r3, [r7, #18]
 8001564:	021b      	lsls	r3, r3, #8
 8001566:	b21a      	sxth	r2, r3
 8001568:	7cfb      	ldrb	r3, [r7, #19]
 800156a:	b21b      	sxth	r3, r3
 800156c:	4313      	orrs	r3, r2
 800156e:	b21a      	sxth	r2, r3
 8001570:	687b      	ldr	r3, [r7, #4]
 8001572:	801a      	strh	r2, [r3, #0]
    *y = (int16_t)((buffer[4] << 8) | buffer[5]);
 8001574:	7d3b      	ldrb	r3, [r7, #20]
 8001576:	021b      	lsls	r3, r3, #8
 8001578:	b21a      	sxth	r2, r3
 800157a:	7d7b      	ldrb	r3, [r7, #21]
 800157c:	b21b      	sxth	r3, r3
 800157e:	4313      	orrs	r3, r2
 8001580:	b21a      	sxth	r2, r3
 8001582:	68bb      	ldr	r3, [r7, #8]
 8001584:	801a      	strh	r2, [r3, #0]
}
 8001586:	bf00      	nop
 8001588:	3718      	adds	r7, #24
 800158a:	46bd      	mov	sp, r7
 800158c:	bd80      	pop	{r7, pc}
 800158e:	bf00      	nop
 8001590:	20000270 	.word	0x20000270

08001594 <ITG3205_ReadData>:

void ITG3205_ReadData(int16_t *x, int16_t *y, int16_t *z) {
 8001594:	b580      	push	{r7, lr}
 8001596:	b08a      	sub	sp, #40	@ 0x28
 8001598:	af04      	add	r7, sp, #16
 800159a:	60f8      	str	r0, [r7, #12]
 800159c:	60b9      	str	r1, [r7, #8]
 800159e:	607a      	str	r2, [r7, #4]
    uint8_t buffer[6];
    HAL_I2C_Mem_Read(&hi2c1, (ITG3205_ADDR << 1), 0x1D, I2C_MEMADD_SIZE_8BIT, buffer, 6, HAL_MAX_DELAY);
 80015a0:	f04f 33ff 	mov.w	r3, #4294967295
 80015a4:	9302      	str	r3, [sp, #8]
 80015a6:	2306      	movs	r3, #6
 80015a8:	9301      	str	r3, [sp, #4]
 80015aa:	f107 0310 	add.w	r3, r7, #16
 80015ae:	9300      	str	r3, [sp, #0]
 80015b0:	2301      	movs	r3, #1
 80015b2:	221d      	movs	r2, #29
 80015b4:	21d0      	movs	r1, #208	@ 0xd0
 80015b6:	4811      	ldr	r0, [pc, #68]	@ (80015fc <ITG3205_ReadData+0x68>)
 80015b8:	f001 ff02 	bl	80033c0 <HAL_I2C_Mem_Read>
    *x = (int16_t)((buffer[0] << 8) | buffer[1]);
 80015bc:	7c3b      	ldrb	r3, [r7, #16]
 80015be:	021b      	lsls	r3, r3, #8
 80015c0:	b21a      	sxth	r2, r3
 80015c2:	7c7b      	ldrb	r3, [r7, #17]
 80015c4:	b21b      	sxth	r3, r3
 80015c6:	4313      	orrs	r3, r2
 80015c8:	b21a      	sxth	r2, r3
 80015ca:	68fb      	ldr	r3, [r7, #12]
 80015cc:	801a      	strh	r2, [r3, #0]
    *y = (int16_t)((buffer[2] << 8) | buffer[3]);
 80015ce:	7cbb      	ldrb	r3, [r7, #18]
 80015d0:	021b      	lsls	r3, r3, #8
 80015d2:	b21a      	sxth	r2, r3
 80015d4:	7cfb      	ldrb	r3, [r7, #19]
 80015d6:	b21b      	sxth	r3, r3
 80015d8:	4313      	orrs	r3, r2
 80015da:	b21a      	sxth	r2, r3
 80015dc:	68bb      	ldr	r3, [r7, #8]
 80015de:	801a      	strh	r2, [r3, #0]
    *z = (int16_t)((buffer[4] << 8) | buffer[5]);
 80015e0:	7d3b      	ldrb	r3, [r7, #20]
 80015e2:	021b      	lsls	r3, r3, #8
 80015e4:	b21a      	sxth	r2, r3
 80015e6:	7d7b      	ldrb	r3, [r7, #21]
 80015e8:	b21b      	sxth	r3, r3
 80015ea:	4313      	orrs	r3, r2
 80015ec:	b21a      	sxth	r2, r3
 80015ee:	687b      	ldr	r3, [r7, #4]
 80015f0:	801a      	strh	r2, [r3, #0]
}
 80015f2:	bf00      	nop
 80015f4:	3718      	adds	r7, #24
 80015f6:	46bd      	mov	sp, r7
 80015f8:	bd80      	pop	{r7, pc}
 80015fa:	bf00      	nop
 80015fc:	20000270 	.word	0x20000270

08001600 <Sensor_Read>:

void Sensor_Read(struct girodata_t* giro) {
 8001600:	b580      	push	{r7, lr}
 8001602:	b082      	sub	sp, #8
 8001604:	af00      	add	r7, sp, #0
 8001606:	6078      	str	r0, [r7, #4]
    // Leer datos crudos de sensores
    ADXL345_ReadData(&giro->ax, &giro->ay, &giro->az);
 8001608:	6878      	ldr	r0, [r7, #4]
 800160a:	687b      	ldr	r3, [r7, #4]
 800160c:	1c99      	adds	r1, r3, #2
 800160e:	687b      	ldr	r3, [r7, #4]
 8001610:	3304      	adds	r3, #4
 8001612:	461a      	mov	r2, r3
 8001614:	f7ff ff52 	bl	80014bc <ADXL345_ReadData>
    ITG3205_ReadData(&giro->gx, &giro->gy, &giro->gz);
 8001618:	687b      	ldr	r3, [r7, #4]
 800161a:	1d98      	adds	r0, r3, #6
 800161c:	687b      	ldr	r3, [r7, #4]
 800161e:	f103 0108 	add.w	r1, r3, #8
 8001622:	687b      	ldr	r3, [r7, #4]
 8001624:	330a      	adds	r3, #10
 8001626:	461a      	mov	r2, r3
 8001628:	f7ff ffb4 	bl	8001594 <ITG3205_ReadData>
    HMC5883L_ReadData(&giro->mx, &giro->my, &giro->mz);
 800162c:	687b      	ldr	r3, [r7, #4]
 800162e:	f103 000c 	add.w	r0, r3, #12
 8001632:	687b      	ldr	r3, [r7, #4]
 8001634:	f103 010e 	add.w	r1, r3, #14
 8001638:	687b      	ldr	r3, [r7, #4]
 800163a:	3310      	adds	r3, #16
 800163c:	461a      	mov	r2, r3
 800163e:	f7ff ff73 	bl	8001528 <HMC5883L_ReadData>

    // Compensar datos
    CompensateAccelerometer(&giro->ax, &giro->ay, &giro->az);
 8001642:	6878      	ldr	r0, [r7, #4]
 8001644:	687b      	ldr	r3, [r7, #4]
 8001646:	1c99      	adds	r1, r3, #2
 8001648:	687b      	ldr	r3, [r7, #4]
 800164a:	3304      	adds	r3, #4
 800164c:	461a      	mov	r2, r3
 800164e:	f000 f9c9 	bl	80019e4 <CompensateAccelerometer>
    CompensateGyroscope(&giro->gx, &giro->gy, &giro->gz);
 8001652:	687b      	ldr	r3, [r7, #4]
 8001654:	1d98      	adds	r0, r3, #6
 8001656:	687b      	ldr	r3, [r7, #4]
 8001658:	f103 0108 	add.w	r1, r3, #8
 800165c:	687b      	ldr	r3, [r7, #4]
 800165e:	330a      	adds	r3, #10
 8001660:	461a      	mov	r2, r3
 8001662:	f000 fa69 	bl	8001b38 <CompensateGyroscope>
    CompensateMagnetometer(&giro->mx, &giro->my, &giro->mz);
 8001666:	687b      	ldr	r3, [r7, #4]
 8001668:	f103 000c 	add.w	r0, r3, #12
 800166c:	687b      	ldr	r3, [r7, #4]
 800166e:	f103 010e 	add.w	r1, r3, #14
 8001672:	687b      	ldr	r3, [r7, #4]
 8001674:	3310      	adds	r3, #16
 8001676:	461a      	mov	r2, r3
 8001678:	f000 f8d2 	bl	8001820 <CompensateMagnetometer>

}
 800167c:	bf00      	nop
 800167e:	3708      	adds	r7, #8
 8001680:	46bd      	mov	sp, r7
 8001682:	bd80      	pop	{r7, pc}

08001684 <CalibrateMagnetometer>:
// Variables globales para compensación
float mag_min_x = 0, mag_max_x = 0;
float mag_min_y = 0, mag_max_y = 0;
float mag_min_z = 0, mag_max_z = 0;

void CalibrateMagnetometer() {
 8001684:	b580      	push	{r7, lr}
 8001686:	b084      	sub	sp, #16
 8001688:	af00      	add	r7, sp, #0
    mag_min_x = mag_min_y = mag_min_z = 32767;
 800168a:	4b5e      	ldr	r3, [pc, #376]	@ (8001804 <CalibrateMagnetometer+0x180>)
 800168c:	4a5e      	ldr	r2, [pc, #376]	@ (8001808 <CalibrateMagnetometer+0x184>)
 800168e:	601a      	str	r2, [r3, #0]
 8001690:	4b5c      	ldr	r3, [pc, #368]	@ (8001804 <CalibrateMagnetometer+0x180>)
 8001692:	681b      	ldr	r3, [r3, #0]
 8001694:	4a5d      	ldr	r2, [pc, #372]	@ (800180c <CalibrateMagnetometer+0x188>)
 8001696:	6013      	str	r3, [r2, #0]
 8001698:	4b5c      	ldr	r3, [pc, #368]	@ (800180c <CalibrateMagnetometer+0x188>)
 800169a:	681b      	ldr	r3, [r3, #0]
 800169c:	4a5c      	ldr	r2, [pc, #368]	@ (8001810 <CalibrateMagnetometer+0x18c>)
 800169e:	6013      	str	r3, [r2, #0]
    mag_max_x = mag_max_y = mag_max_z = -32768;
 80016a0:	4b5c      	ldr	r3, [pc, #368]	@ (8001814 <CalibrateMagnetometer+0x190>)
 80016a2:	f04f 4247 	mov.w	r2, #3338665984	@ 0xc7000000
 80016a6:	601a      	str	r2, [r3, #0]
 80016a8:	4b5a      	ldr	r3, [pc, #360]	@ (8001814 <CalibrateMagnetometer+0x190>)
 80016aa:	681b      	ldr	r3, [r3, #0]
 80016ac:	4a5a      	ldr	r2, [pc, #360]	@ (8001818 <CalibrateMagnetometer+0x194>)
 80016ae:	6013      	str	r3, [r2, #0]
 80016b0:	4b59      	ldr	r3, [pc, #356]	@ (8001818 <CalibrateMagnetometer+0x194>)
 80016b2:	681b      	ldr	r3, [r3, #0]
 80016b4:	4a59      	ldr	r2, [pc, #356]	@ (800181c <CalibrateMagnetometer+0x198>)
 80016b6:	6013      	str	r3, [r2, #0]

    for (int i = 0; i < 1000; i++) {
 80016b8:	2300      	movs	r3, #0
 80016ba:	60fb      	str	r3, [r7, #12]
 80016bc:	e097      	b.n	80017ee <CalibrateMagnetometer+0x16a>
        int16_t x, y, z;
        HMC5883L_ReadData(&x, &y, &z);
 80016be:	1dba      	adds	r2, r7, #6
 80016c0:	f107 0108 	add.w	r1, r7, #8
 80016c4:	f107 030a 	add.w	r3, r7, #10
 80016c8:	4618      	mov	r0, r3
 80016ca:	f7ff ff2d 	bl	8001528 <HMC5883L_ReadData>

        if (x < mag_min_x) mag_min_x = x;
 80016ce:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 80016d2:	ee07 3a90 	vmov	s15, r3
 80016d6:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80016da:	4b4d      	ldr	r3, [pc, #308]	@ (8001810 <CalibrateMagnetometer+0x18c>)
 80016dc:	edd3 7a00 	vldr	s15, [r3]
 80016e0:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80016e4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80016e8:	d508      	bpl.n	80016fc <CalibrateMagnetometer+0x78>
 80016ea:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 80016ee:	ee07 3a90 	vmov	s15, r3
 80016f2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80016f6:	4b46      	ldr	r3, [pc, #280]	@ (8001810 <CalibrateMagnetometer+0x18c>)
 80016f8:	edc3 7a00 	vstr	s15, [r3]
        if (x > mag_max_x) mag_max_x = x;
 80016fc:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 8001700:	ee07 3a90 	vmov	s15, r3
 8001704:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8001708:	4b44      	ldr	r3, [pc, #272]	@ (800181c <CalibrateMagnetometer+0x198>)
 800170a:	edd3 7a00 	vldr	s15, [r3]
 800170e:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8001712:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001716:	dd08      	ble.n	800172a <CalibrateMagnetometer+0xa6>
 8001718:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 800171c:	ee07 3a90 	vmov	s15, r3
 8001720:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001724:	4b3d      	ldr	r3, [pc, #244]	@ (800181c <CalibrateMagnetometer+0x198>)
 8001726:	edc3 7a00 	vstr	s15, [r3]
        if (y < mag_min_y) mag_min_y = y;
 800172a:	f9b7 3008 	ldrsh.w	r3, [r7, #8]
 800172e:	ee07 3a90 	vmov	s15, r3
 8001732:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8001736:	4b35      	ldr	r3, [pc, #212]	@ (800180c <CalibrateMagnetometer+0x188>)
 8001738:	edd3 7a00 	vldr	s15, [r3]
 800173c:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8001740:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001744:	d508      	bpl.n	8001758 <CalibrateMagnetometer+0xd4>
 8001746:	f9b7 3008 	ldrsh.w	r3, [r7, #8]
 800174a:	ee07 3a90 	vmov	s15, r3
 800174e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001752:	4b2e      	ldr	r3, [pc, #184]	@ (800180c <CalibrateMagnetometer+0x188>)
 8001754:	edc3 7a00 	vstr	s15, [r3]
        if (y > mag_max_y) mag_max_y = y;
 8001758:	f9b7 3008 	ldrsh.w	r3, [r7, #8]
 800175c:	ee07 3a90 	vmov	s15, r3
 8001760:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8001764:	4b2c      	ldr	r3, [pc, #176]	@ (8001818 <CalibrateMagnetometer+0x194>)
 8001766:	edd3 7a00 	vldr	s15, [r3]
 800176a:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800176e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001772:	dd08      	ble.n	8001786 <CalibrateMagnetometer+0x102>
 8001774:	f9b7 3008 	ldrsh.w	r3, [r7, #8]
 8001778:	ee07 3a90 	vmov	s15, r3
 800177c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001780:	4b25      	ldr	r3, [pc, #148]	@ (8001818 <CalibrateMagnetometer+0x194>)
 8001782:	edc3 7a00 	vstr	s15, [r3]
        if (z < mag_min_z) mag_min_z = z;
 8001786:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 800178a:	ee07 3a90 	vmov	s15, r3
 800178e:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8001792:	4b1c      	ldr	r3, [pc, #112]	@ (8001804 <CalibrateMagnetometer+0x180>)
 8001794:	edd3 7a00 	vldr	s15, [r3]
 8001798:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800179c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80017a0:	d508      	bpl.n	80017b4 <CalibrateMagnetometer+0x130>
 80017a2:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 80017a6:	ee07 3a90 	vmov	s15, r3
 80017aa:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80017ae:	4b15      	ldr	r3, [pc, #84]	@ (8001804 <CalibrateMagnetometer+0x180>)
 80017b0:	edc3 7a00 	vstr	s15, [r3]
        if (z > mag_max_z) mag_max_z = z;
 80017b4:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 80017b8:	ee07 3a90 	vmov	s15, r3
 80017bc:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80017c0:	4b14      	ldr	r3, [pc, #80]	@ (8001814 <CalibrateMagnetometer+0x190>)
 80017c2:	edd3 7a00 	vldr	s15, [r3]
 80017c6:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80017ca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80017ce:	dd08      	ble.n	80017e2 <CalibrateMagnetometer+0x15e>
 80017d0:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 80017d4:	ee07 3a90 	vmov	s15, r3
 80017d8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80017dc:	4b0d      	ldr	r3, [pc, #52]	@ (8001814 <CalibrateMagnetometer+0x190>)
 80017de:	edc3 7a00 	vstr	s15, [r3]

        HAL_Delay(10);
 80017e2:	200a      	movs	r0, #10
 80017e4:	f001 f900 	bl	80029e8 <HAL_Delay>
    for (int i = 0; i < 1000; i++) {
 80017e8:	68fb      	ldr	r3, [r7, #12]
 80017ea:	3301      	adds	r3, #1
 80017ec:	60fb      	str	r3, [r7, #12]
 80017ee:	68fb      	ldr	r3, [r7, #12]
 80017f0:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 80017f4:	f6ff af63 	blt.w	80016be <CalibrateMagnetometer+0x3a>
    }
}
 80017f8:	bf00      	nop
 80017fa:	bf00      	nop
 80017fc:	3710      	adds	r7, #16
 80017fe:	46bd      	mov	sp, r7
 8001800:	bd80      	pop	{r7, pc}
 8001802:	bf00      	nop
 8001804:	20000268 	.word	0x20000268
 8001808:	46fffe00 	.word	0x46fffe00
 800180c:	20000260 	.word	0x20000260
 8001810:	20000258 	.word	0x20000258
 8001814:	2000026c 	.word	0x2000026c
 8001818:	20000264 	.word	0x20000264
 800181c:	2000025c 	.word	0x2000025c

08001820 <CompensateMagnetometer>:

void CompensateMagnetometer(int16_t *x, int16_t *y, int16_t *z) {
 8001820:	b480      	push	{r7}
 8001822:	b085      	sub	sp, #20
 8001824:	af00      	add	r7, sp, #0
 8001826:	60f8      	str	r0, [r7, #12]
 8001828:	60b9      	str	r1, [r7, #8]
 800182a:	607a      	str	r2, [r7, #4]
    *x = 2 * (*x - mag_min_x) / (mag_max_x - mag_min_x) - 1;
 800182c:	68fb      	ldr	r3, [r7, #12]
 800182e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8001832:	ee07 3a90 	vmov	s15, r3
 8001836:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800183a:	4b34      	ldr	r3, [pc, #208]	@ (800190c <CompensateMagnetometer+0xec>)
 800183c:	edd3 7a00 	vldr	s15, [r3]
 8001840:	ee77 7a67 	vsub.f32	s15, s14, s15
 8001844:	ee77 6aa7 	vadd.f32	s13, s15, s15
 8001848:	4b31      	ldr	r3, [pc, #196]	@ (8001910 <CompensateMagnetometer+0xf0>)
 800184a:	ed93 7a00 	vldr	s14, [r3]
 800184e:	4b2f      	ldr	r3, [pc, #188]	@ (800190c <CompensateMagnetometer+0xec>)
 8001850:	edd3 7a00 	vldr	s15, [r3]
 8001854:	ee37 7a67 	vsub.f32	s14, s14, s15
 8001858:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800185c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8001860:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8001864:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8001868:	ee17 3a90 	vmov	r3, s15
 800186c:	b21a      	sxth	r2, r3
 800186e:	68fb      	ldr	r3, [r7, #12]
 8001870:	801a      	strh	r2, [r3, #0]
    *y = 2 * (*y - mag_min_y) / (mag_max_y - mag_min_y) - 1;
 8001872:	68bb      	ldr	r3, [r7, #8]
 8001874:	f9b3 3000 	ldrsh.w	r3, [r3]
 8001878:	ee07 3a90 	vmov	s15, r3
 800187c:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8001880:	4b24      	ldr	r3, [pc, #144]	@ (8001914 <CompensateMagnetometer+0xf4>)
 8001882:	edd3 7a00 	vldr	s15, [r3]
 8001886:	ee77 7a67 	vsub.f32	s15, s14, s15
 800188a:	ee77 6aa7 	vadd.f32	s13, s15, s15
 800188e:	4b22      	ldr	r3, [pc, #136]	@ (8001918 <CompensateMagnetometer+0xf8>)
 8001890:	ed93 7a00 	vldr	s14, [r3]
 8001894:	4b1f      	ldr	r3, [pc, #124]	@ (8001914 <CompensateMagnetometer+0xf4>)
 8001896:	edd3 7a00 	vldr	s15, [r3]
 800189a:	ee37 7a67 	vsub.f32	s14, s14, s15
 800189e:	eec6 7a87 	vdiv.f32	s15, s13, s14
 80018a2:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80018a6:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80018aa:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80018ae:	ee17 3a90 	vmov	r3, s15
 80018b2:	b21a      	sxth	r2, r3
 80018b4:	68bb      	ldr	r3, [r7, #8]
 80018b6:	801a      	strh	r2, [r3, #0]
    *z = 2 * (*z - mag_min_z) / (mag_max_z - mag_min_z) - 1;
 80018b8:	687b      	ldr	r3, [r7, #4]
 80018ba:	f9b3 3000 	ldrsh.w	r3, [r3]
 80018be:	ee07 3a90 	vmov	s15, r3
 80018c2:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80018c6:	4b15      	ldr	r3, [pc, #84]	@ (800191c <CompensateMagnetometer+0xfc>)
 80018c8:	edd3 7a00 	vldr	s15, [r3]
 80018cc:	ee77 7a67 	vsub.f32	s15, s14, s15
 80018d0:	ee77 6aa7 	vadd.f32	s13, s15, s15
 80018d4:	4b12      	ldr	r3, [pc, #72]	@ (8001920 <CompensateMagnetometer+0x100>)
 80018d6:	ed93 7a00 	vldr	s14, [r3]
 80018da:	4b10      	ldr	r3, [pc, #64]	@ (800191c <CompensateMagnetometer+0xfc>)
 80018dc:	edd3 7a00 	vldr	s15, [r3]
 80018e0:	ee37 7a67 	vsub.f32	s14, s14, s15
 80018e4:	eec6 7a87 	vdiv.f32	s15, s13, s14
 80018e8:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80018ec:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80018f0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80018f4:	ee17 3a90 	vmov	r3, s15
 80018f8:	b21a      	sxth	r2, r3
 80018fa:	687b      	ldr	r3, [r7, #4]
 80018fc:	801a      	strh	r2, [r3, #0]
}
 80018fe:	bf00      	nop
 8001900:	3714      	adds	r7, #20
 8001902:	46bd      	mov	sp, r7
 8001904:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001908:	4770      	bx	lr
 800190a:	bf00      	nop
 800190c:	20000258 	.word	0x20000258
 8001910:	2000025c 	.word	0x2000025c
 8001914:	20000260 	.word	0x20000260
 8001918:	20000264 	.word	0x20000264
 800191c:	20000268 	.word	0x20000268
 8001920:	2000026c 	.word	0x2000026c

08001924 <CalibrateAccelerometer>:


void CalibrateAccelerometer() {
 8001924:	b580      	push	{r7, lr}
 8001926:	b088      	sub	sp, #32
 8001928:	af00      	add	r7, sp, #0
    int32_t sum_x = 0, sum_y = 0, sum_z = 0;
 800192a:	2300      	movs	r3, #0
 800192c:	61fb      	str	r3, [r7, #28]
 800192e:	2300      	movs	r3, #0
 8001930:	61bb      	str	r3, [r7, #24]
 8001932:	2300      	movs	r3, #0
 8001934:	617b      	str	r3, [r7, #20]
    int samples = 1000;
 8001936:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 800193a:	60fb      	str	r3, [r7, #12]

    for (int i = 0; i < samples; i++) {
 800193c:	2300      	movs	r3, #0
 800193e:	613b      	str	r3, [r7, #16]
 8001940:	e01f      	b.n	8001982 <CalibrateAccelerometer+0x5e>
        int16_t x, y, z;
        ADXL345_ReadData(&x, &y, &z);
 8001942:	1dba      	adds	r2, r7, #6
 8001944:	f107 0108 	add.w	r1, r7, #8
 8001948:	f107 030a 	add.w	r3, r7, #10
 800194c:	4618      	mov	r0, r3
 800194e:	f7ff fdb5 	bl	80014bc <ADXL345_ReadData>
        sum_x += x;
 8001952:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 8001956:	461a      	mov	r2, r3
 8001958:	69fb      	ldr	r3, [r7, #28]
 800195a:	4413      	add	r3, r2
 800195c:	61fb      	str	r3, [r7, #28]
        sum_y += y;
 800195e:	f9b7 3008 	ldrsh.w	r3, [r7, #8]
 8001962:	461a      	mov	r2, r3
 8001964:	69bb      	ldr	r3, [r7, #24]
 8001966:	4413      	add	r3, r2
 8001968:	61bb      	str	r3, [r7, #24]
        sum_z += z;
 800196a:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 800196e:	461a      	mov	r2, r3
 8001970:	697b      	ldr	r3, [r7, #20]
 8001972:	4413      	add	r3, r2
 8001974:	617b      	str	r3, [r7, #20]
        HAL_Delay(5);  // Esperar un poco entre lecturas
 8001976:	2005      	movs	r0, #5
 8001978:	f001 f836 	bl	80029e8 <HAL_Delay>
    for (int i = 0; i < samples; i++) {
 800197c:	693b      	ldr	r3, [r7, #16]
 800197e:	3301      	adds	r3, #1
 8001980:	613b      	str	r3, [r7, #16]
 8001982:	693a      	ldr	r2, [r7, #16]
 8001984:	68fb      	ldr	r3, [r7, #12]
 8001986:	429a      	cmp	r2, r3
 8001988:	dbdb      	blt.n	8001942 <CalibrateAccelerometer+0x1e>
    }

    accel_offset_x = sum_x / samples;
 800198a:	69fa      	ldr	r2, [r7, #28]
 800198c:	68fb      	ldr	r3, [r7, #12]
 800198e:	fb92 f3f3 	sdiv	r3, r2, r3
 8001992:	ee07 3a90 	vmov	s15, r3
 8001996:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800199a:	4b0f      	ldr	r3, [pc, #60]	@ (80019d8 <CalibrateAccelerometer+0xb4>)
 800199c:	edc3 7a00 	vstr	s15, [r3]
    accel_offset_y = sum_y / samples;
 80019a0:	69ba      	ldr	r2, [r7, #24]
 80019a2:	68fb      	ldr	r3, [r7, #12]
 80019a4:	fb92 f3f3 	sdiv	r3, r2, r3
 80019a8:	ee07 3a90 	vmov	s15, r3
 80019ac:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80019b0:	4b0a      	ldr	r3, [pc, #40]	@ (80019dc <CalibrateAccelerometer+0xb8>)
 80019b2:	edc3 7a00 	vstr	s15, [r3]
    accel_offset_z = (sum_z / samples) - 16384; // Compensar gravedad (1g ≈ 16384 en ±2g)
 80019b6:	697a      	ldr	r2, [r7, #20]
 80019b8:	68fb      	ldr	r3, [r7, #12]
 80019ba:	fb92 f3f3 	sdiv	r3, r2, r3
 80019be:	f5a3 4380 	sub.w	r3, r3, #16384	@ 0x4000
 80019c2:	ee07 3a90 	vmov	s15, r3
 80019c6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80019ca:	4b05      	ldr	r3, [pc, #20]	@ (80019e0 <CalibrateAccelerometer+0xbc>)
 80019cc:	edc3 7a00 	vstr	s15, [r3]
}
 80019d0:	bf00      	nop
 80019d2:	3720      	adds	r7, #32
 80019d4:	46bd      	mov	sp, r7
 80019d6:	bd80      	pop	{r7, pc}
 80019d8:	20000240 	.word	0x20000240
 80019dc:	20000244 	.word	0x20000244
 80019e0:	20000248 	.word	0x20000248

080019e4 <CompensateAccelerometer>:

void CompensateAccelerometer(int16_t *x, int16_t *y, int16_t *z) {
 80019e4:	b480      	push	{r7}
 80019e6:	b085      	sub	sp, #20
 80019e8:	af00      	add	r7, sp, #0
 80019ea:	60f8      	str	r0, [r7, #12]
 80019ec:	60b9      	str	r1, [r7, #8]
 80019ee:	607a      	str	r2, [r7, #4]
    *x -= accel_offset_x;
 80019f0:	68fb      	ldr	r3, [r7, #12]
 80019f2:	f9b3 3000 	ldrsh.w	r3, [r3]
 80019f6:	ee07 3a90 	vmov	s15, r3
 80019fa:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80019fe:	4b1c      	ldr	r3, [pc, #112]	@ (8001a70 <CompensateAccelerometer+0x8c>)
 8001a00:	edd3 7a00 	vldr	s15, [r3]
 8001a04:	ee77 7a67 	vsub.f32	s15, s14, s15
 8001a08:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8001a0c:	ee17 3a90 	vmov	r3, s15
 8001a10:	b21a      	sxth	r2, r3
 8001a12:	68fb      	ldr	r3, [r7, #12]
 8001a14:	801a      	strh	r2, [r3, #0]
    *y -= accel_offset_y;
 8001a16:	68bb      	ldr	r3, [r7, #8]
 8001a18:	f9b3 3000 	ldrsh.w	r3, [r3]
 8001a1c:	ee07 3a90 	vmov	s15, r3
 8001a20:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8001a24:	4b13      	ldr	r3, [pc, #76]	@ (8001a74 <CompensateAccelerometer+0x90>)
 8001a26:	edd3 7a00 	vldr	s15, [r3]
 8001a2a:	ee77 7a67 	vsub.f32	s15, s14, s15
 8001a2e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8001a32:	ee17 3a90 	vmov	r3, s15
 8001a36:	b21a      	sxth	r2, r3
 8001a38:	68bb      	ldr	r3, [r7, #8]
 8001a3a:	801a      	strh	r2, [r3, #0]
    *z -= accel_offset_z;
 8001a3c:	687b      	ldr	r3, [r7, #4]
 8001a3e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8001a42:	ee07 3a90 	vmov	s15, r3
 8001a46:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8001a4a:	4b0b      	ldr	r3, [pc, #44]	@ (8001a78 <CompensateAccelerometer+0x94>)
 8001a4c:	edd3 7a00 	vldr	s15, [r3]
 8001a50:	ee77 7a67 	vsub.f32	s15, s14, s15
 8001a54:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8001a58:	ee17 3a90 	vmov	r3, s15
 8001a5c:	b21a      	sxth	r2, r3
 8001a5e:	687b      	ldr	r3, [r7, #4]
 8001a60:	801a      	strh	r2, [r3, #0]
}
 8001a62:	bf00      	nop
 8001a64:	3714      	adds	r7, #20
 8001a66:	46bd      	mov	sp, r7
 8001a68:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a6c:	4770      	bx	lr
 8001a6e:	bf00      	nop
 8001a70:	20000240 	.word	0x20000240
 8001a74:	20000244 	.word	0x20000244
 8001a78:	20000248 	.word	0x20000248

08001a7c <CalibrateGyroscope>:



void CalibrateGyroscope() {
 8001a7c:	b580      	push	{r7, lr}
 8001a7e:	b088      	sub	sp, #32
 8001a80:	af00      	add	r7, sp, #0
    int32_t sum_x = 0, sum_y = 0, sum_z = 0;
 8001a82:	2300      	movs	r3, #0
 8001a84:	61fb      	str	r3, [r7, #28]
 8001a86:	2300      	movs	r3, #0
 8001a88:	61bb      	str	r3, [r7, #24]
 8001a8a:	2300      	movs	r3, #0
 8001a8c:	617b      	str	r3, [r7, #20]
    int samples = 1000;
 8001a8e:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8001a92:	60fb      	str	r3, [r7, #12]

    for (int i = 0; i < samples; i++) {
 8001a94:	2300      	movs	r3, #0
 8001a96:	613b      	str	r3, [r7, #16]
 8001a98:	e01f      	b.n	8001ada <CalibrateGyroscope+0x5e>
        int16_t x, y, z;
        ITG3205_ReadData(&x, &y, &z);
 8001a9a:	1dba      	adds	r2, r7, #6
 8001a9c:	f107 0108 	add.w	r1, r7, #8
 8001aa0:	f107 030a 	add.w	r3, r7, #10
 8001aa4:	4618      	mov	r0, r3
 8001aa6:	f7ff fd75 	bl	8001594 <ITG3205_ReadData>
        sum_x += x;
 8001aaa:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 8001aae:	461a      	mov	r2, r3
 8001ab0:	69fb      	ldr	r3, [r7, #28]
 8001ab2:	4413      	add	r3, r2
 8001ab4:	61fb      	str	r3, [r7, #28]
        sum_y += y;
 8001ab6:	f9b7 3008 	ldrsh.w	r3, [r7, #8]
 8001aba:	461a      	mov	r2, r3
 8001abc:	69bb      	ldr	r3, [r7, #24]
 8001abe:	4413      	add	r3, r2
 8001ac0:	61bb      	str	r3, [r7, #24]
        sum_z += z;
 8001ac2:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8001ac6:	461a      	mov	r2, r3
 8001ac8:	697b      	ldr	r3, [r7, #20]
 8001aca:	4413      	add	r3, r2
 8001acc:	617b      	str	r3, [r7, #20]
        HAL_Delay(5);
 8001ace:	2005      	movs	r0, #5
 8001ad0:	f000 ff8a 	bl	80029e8 <HAL_Delay>
    for (int i = 0; i < samples; i++) {
 8001ad4:	693b      	ldr	r3, [r7, #16]
 8001ad6:	3301      	adds	r3, #1
 8001ad8:	613b      	str	r3, [r7, #16]
 8001ada:	693a      	ldr	r2, [r7, #16]
 8001adc:	68fb      	ldr	r3, [r7, #12]
 8001ade:	429a      	cmp	r2, r3
 8001ae0:	dbdb      	blt.n	8001a9a <CalibrateGyroscope+0x1e>
    }

    gyro_offset_x = sum_x / samples;
 8001ae2:	69fa      	ldr	r2, [r7, #28]
 8001ae4:	68fb      	ldr	r3, [r7, #12]
 8001ae6:	fb92 f3f3 	sdiv	r3, r2, r3
 8001aea:	ee07 3a90 	vmov	s15, r3
 8001aee:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001af2:	4b0e      	ldr	r3, [pc, #56]	@ (8001b2c <CalibrateGyroscope+0xb0>)
 8001af4:	edc3 7a00 	vstr	s15, [r3]
    gyro_offset_y = sum_y / samples;
 8001af8:	69ba      	ldr	r2, [r7, #24]
 8001afa:	68fb      	ldr	r3, [r7, #12]
 8001afc:	fb92 f3f3 	sdiv	r3, r2, r3
 8001b00:	ee07 3a90 	vmov	s15, r3
 8001b04:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001b08:	4b09      	ldr	r3, [pc, #36]	@ (8001b30 <CalibrateGyroscope+0xb4>)
 8001b0a:	edc3 7a00 	vstr	s15, [r3]
    gyro_offset_z = sum_z / samples;
 8001b0e:	697a      	ldr	r2, [r7, #20]
 8001b10:	68fb      	ldr	r3, [r7, #12]
 8001b12:	fb92 f3f3 	sdiv	r3, r2, r3
 8001b16:	ee07 3a90 	vmov	s15, r3
 8001b1a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001b1e:	4b05      	ldr	r3, [pc, #20]	@ (8001b34 <CalibrateGyroscope+0xb8>)
 8001b20:	edc3 7a00 	vstr	s15, [r3]
}
 8001b24:	bf00      	nop
 8001b26:	3720      	adds	r7, #32
 8001b28:	46bd      	mov	sp, r7
 8001b2a:	bd80      	pop	{r7, pc}
 8001b2c:	2000024c 	.word	0x2000024c
 8001b30:	20000250 	.word	0x20000250
 8001b34:	20000254 	.word	0x20000254

08001b38 <CompensateGyroscope>:

void CompensateGyroscope(int16_t *x, int16_t *y, int16_t *z) {
 8001b38:	b480      	push	{r7}
 8001b3a:	b085      	sub	sp, #20
 8001b3c:	af00      	add	r7, sp, #0
 8001b3e:	60f8      	str	r0, [r7, #12]
 8001b40:	60b9      	str	r1, [r7, #8]
 8001b42:	607a      	str	r2, [r7, #4]
    *x -= gyro_offset_x;
 8001b44:	68fb      	ldr	r3, [r7, #12]
 8001b46:	f9b3 3000 	ldrsh.w	r3, [r3]
 8001b4a:	ee07 3a90 	vmov	s15, r3
 8001b4e:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8001b52:	4b1c      	ldr	r3, [pc, #112]	@ (8001bc4 <CompensateGyroscope+0x8c>)
 8001b54:	edd3 7a00 	vldr	s15, [r3]
 8001b58:	ee77 7a67 	vsub.f32	s15, s14, s15
 8001b5c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8001b60:	ee17 3a90 	vmov	r3, s15
 8001b64:	b21a      	sxth	r2, r3
 8001b66:	68fb      	ldr	r3, [r7, #12]
 8001b68:	801a      	strh	r2, [r3, #0]
    *y -= gyro_offset_y;
 8001b6a:	68bb      	ldr	r3, [r7, #8]
 8001b6c:	f9b3 3000 	ldrsh.w	r3, [r3]
 8001b70:	ee07 3a90 	vmov	s15, r3
 8001b74:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8001b78:	4b13      	ldr	r3, [pc, #76]	@ (8001bc8 <CompensateGyroscope+0x90>)
 8001b7a:	edd3 7a00 	vldr	s15, [r3]
 8001b7e:	ee77 7a67 	vsub.f32	s15, s14, s15
 8001b82:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8001b86:	ee17 3a90 	vmov	r3, s15
 8001b8a:	b21a      	sxth	r2, r3
 8001b8c:	68bb      	ldr	r3, [r7, #8]
 8001b8e:	801a      	strh	r2, [r3, #0]
    *z -= gyro_offset_z;
 8001b90:	687b      	ldr	r3, [r7, #4]
 8001b92:	f9b3 3000 	ldrsh.w	r3, [r3]
 8001b96:	ee07 3a90 	vmov	s15, r3
 8001b9a:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8001b9e:	4b0b      	ldr	r3, [pc, #44]	@ (8001bcc <CompensateGyroscope+0x94>)
 8001ba0:	edd3 7a00 	vldr	s15, [r3]
 8001ba4:	ee77 7a67 	vsub.f32	s15, s14, s15
 8001ba8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8001bac:	ee17 3a90 	vmov	r3, s15
 8001bb0:	b21a      	sxth	r2, r3
 8001bb2:	687b      	ldr	r3, [r7, #4]
 8001bb4:	801a      	strh	r2, [r3, #0]
}
 8001bb6:	bf00      	nop
 8001bb8:	3714      	adds	r7, #20
 8001bba:	46bd      	mov	sp, r7
 8001bbc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001bc0:	4770      	bx	lr
 8001bc2:	bf00      	nop
 8001bc4:	2000024c 	.word	0x2000024c
 8001bc8:	20000250 	.word	0x20000250
 8001bcc:	20000254 	.word	0x20000254

08001bd0 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8001bd0:	b580      	push	{r7, lr}
 8001bd2:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8001bd4:	f000 fea2 	bl	800291c <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8001bd8:	f000 f852 	bl	8001c80 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8001bdc:	f000 fad2 	bl	8002184 <MX_GPIO_Init>
  MX_USART2_UART_Init();
 8001be0:	f000 faa0 	bl	8002124 <MX_USART2_UART_Init>
  MX_USART1_UART_Init();
 8001be4:	f000 fa6e 	bl	80020c4 <MX_USART1_UART_Init>
  MX_I2C1_Init();
 8001be8:	f000 f8a4 	bl	8001d34 <MX_I2C1_Init>
  MX_TIM1_Init();
 8001bec:	f000 f8e2 	bl	8001db4 <MX_TIM1_Init>
  MX_TIM2_Init();
 8001bf0:	f000 f998 	bl	8001f24 <MX_TIM2_Init>
  MX_TIM3_Init();
 8001bf4:	f000 fa18 	bl	8002028 <MX_TIM3_Init>
  /* USER CODE BEGIN 2 */
  // Inicializar el sensor GY-85
  GY85_Init();
 8001bf8:	f7ff fbe8 	bl	80013cc <GY85_Init>

  Control_Init();
 8001bfc:	f7ff f90a 	bl	8000e14 <Control_Init>

  HAL_UART_Receive_IT(&huart1, rx_buffer, sizeof(rx_buffer));
 8001c00:	2280      	movs	r2, #128	@ 0x80
 8001c02:	4917      	ldr	r1, [pc, #92]	@ (8001c60 <main+0x90>)
 8001c04:	4817      	ldr	r0, [pc, #92]	@ (8001c64 <main+0x94>)
 8001c06:	f004 feac 	bl	8006962 <HAL_UART_Receive_IT>

  HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_1);
 8001c0a:	2100      	movs	r1, #0
 8001c0c:	4816      	ldr	r0, [pc, #88]	@ (8001c68 <main+0x98>)
 8001c0e:	f003 fce5 	bl	80055dc <HAL_TIM_PWM_Start>
  HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_4);
 8001c12:	210c      	movs	r1, #12
 8001c14:	4814      	ldr	r0, [pc, #80]	@ (8001c68 <main+0x98>)
 8001c16:	f003 fce1 	bl	80055dc <HAL_TIM_PWM_Start>
  HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_1);
 8001c1a:	2100      	movs	r1, #0
 8001c1c:	4813      	ldr	r0, [pc, #76]	@ (8001c6c <main+0x9c>)
 8001c1e:	f003 fcdd 	bl	80055dc <HAL_TIM_PWM_Start>
  HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_2);
 8001c22:	2104      	movs	r1, #4
 8001c24:	4811      	ldr	r0, [pc, #68]	@ (8001c6c <main+0x9c>)
 8001c26:	f003 fcd9 	bl	80055dc <HAL_TIM_PWM_Start>

#if Calibrate
  Control_ArmMotors();
 8001c2a:	f7ff f93b 	bl	8000ea4 <Control_ArmMotors>


#endif
  printData("Iniciando pulso de estabilizador\n");
 8001c2e:	4810      	ldr	r0, [pc, #64]	@ (8001c70 <main+0xa0>)
 8001c30:	f000 faf2 	bl	8002218 <printData>
  HAL_TIM_Base_Start_IT(&htim3);
 8001c34:	480f      	ldr	r0, [pc, #60]	@ (8001c74 <main+0xa4>)
 8001c36:	f003 fc13 	bl	8005460 <HAL_TIM_Base_Start_IT>

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
  {
	if (control_update_flag) {
 8001c3a:	4b0f      	ldr	r3, [pc, #60]	@ (8001c78 <main+0xa8>)
 8001c3c:	781b      	ldrb	r3, [r3, #0]
 8001c3e:	2b00      	cmp	r3, #0
 8001c40:	d004      	beq.n	8001c4c <main+0x7c>
		control_update_flag = 0;
 8001c42:	4b0d      	ldr	r3, [pc, #52]	@ (8001c78 <main+0xa8>)
 8001c44:	2200      	movs	r2, #0
 8001c46:	701a      	strb	r2, [r3, #0]
		Control_Update();
 8001c48:	f7ff f94e 	bl	8000ee8 <Control_Update>
//		struct girodata_t gyro;
//		Sensor_Read(&gyro);
//		printKalman(&gyro);
	}

	if (send_data_flag) {
 8001c4c:	4b0b      	ldr	r3, [pc, #44]	@ (8001c7c <main+0xac>)
 8001c4e:	781b      	ldrb	r3, [r3, #0]
 8001c50:	2b00      	cmp	r3, #0
 8001c52:	d0f2      	beq.n	8001c3a <main+0x6a>
		send_data_flag = 0;
 8001c54:	4b09      	ldr	r3, [pc, #36]	@ (8001c7c <main+0xac>)
 8001c56:	2200      	movs	r2, #0
 8001c58:	701a      	strb	r2, [r3, #0]
		//sendAngles();
		sendSensorData();
 8001c5a:	f7fe fff5 	bl	8000c48 <sendSensorData>
	if (control_update_flag) {
 8001c5e:	e7ec      	b.n	8001c3a <main+0x6a>
 8001c60:	200004b8 	.word	0x200004b8
 8001c64:	200003a8 	.word	0x200003a8
 8001c68:	200002c4 	.word	0x200002c4
 8001c6c:	20000310 	.word	0x20000310
 8001c70:	0800ad0c 	.word	0x0800ad0c
 8001c74:	2000035c 	.word	0x2000035c
 8001c78:	2000053e 	.word	0x2000053e
 8001c7c:	2000053f 	.word	0x2000053f

08001c80 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8001c80:	b580      	push	{r7, lr}
 8001c82:	b096      	sub	sp, #88	@ 0x58
 8001c84:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001c86:	f107 0330 	add.w	r3, r7, #48	@ 0x30
 8001c8a:	2228      	movs	r2, #40	@ 0x28
 8001c8c:	2100      	movs	r1, #0
 8001c8e:	4618      	mov	r0, r3
 8001c90:	f006 feda 	bl	8008a48 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001c94:	f107 031c 	add.w	r3, r7, #28
 8001c98:	2200      	movs	r2, #0
 8001c9a:	601a      	str	r2, [r3, #0]
 8001c9c:	605a      	str	r2, [r3, #4]
 8001c9e:	609a      	str	r2, [r3, #8]
 8001ca0:	60da      	str	r2, [r3, #12]
 8001ca2:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 8001ca4:	1d3b      	adds	r3, r7, #4
 8001ca6:	2200      	movs	r2, #0
 8001ca8:	601a      	str	r2, [r3, #0]
 8001caa:	605a      	str	r2, [r3, #4]
 8001cac:	609a      	str	r2, [r3, #8]
 8001cae:	60da      	str	r2, [r3, #12]
 8001cb0:	611a      	str	r2, [r3, #16]
 8001cb2:	615a      	str	r2, [r3, #20]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 8001cb4:	2302      	movs	r3, #2
 8001cb6:	633b      	str	r3, [r7, #48]	@ 0x30
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8001cb8:	2301      	movs	r3, #1
 8001cba:	643b      	str	r3, [r7, #64]	@ 0x40
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8001cbc:	2310      	movs	r3, #16
 8001cbe:	647b      	str	r3, [r7, #68]	@ 0x44
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 8001cc0:	2300      	movs	r3, #0
 8001cc2:	64fb      	str	r3, [r7, #76]	@ 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001cc4:	f107 0330 	add.w	r3, r7, #48	@ 0x30
 8001cc8:	4618      	mov	r0, r3
 8001cca:	f001 ffed 	bl	8003ca8 <HAL_RCC_OscConfig>
 8001cce:	4603      	mov	r3, r0
 8001cd0:	2b00      	cmp	r3, #0
 8001cd2:	d001      	beq.n	8001cd8 <SystemClock_Config+0x58>
  {
    Error_Handler();
 8001cd4:	f000 fb2c 	bl	8002330 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001cd8:	230f      	movs	r3, #15
 8001cda:	61fb      	str	r3, [r7, #28]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 8001cdc:	2300      	movs	r3, #0
 8001cde:	623b      	str	r3, [r7, #32]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8001ce0:	2300      	movs	r3, #0
 8001ce2:	627b      	str	r3, [r7, #36]	@ 0x24
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 8001ce4:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8001ce8:	62bb      	str	r3, [r7, #40]	@ 0x28
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8001cea:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8001cee:	62fb      	str	r3, [r7, #44]	@ 0x2c

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 8001cf0:	f107 031c 	add.w	r3, r7, #28
 8001cf4:	2100      	movs	r1, #0
 8001cf6:	4618      	mov	r0, r3
 8001cf8:	f003 f814 	bl	8004d24 <HAL_RCC_ClockConfig>
 8001cfc:	4603      	mov	r3, r0
 8001cfe:	2b00      	cmp	r3, #0
 8001d00:	d001      	beq.n	8001d06 <SystemClock_Config+0x86>
  {
    Error_Handler();
 8001d02:	f000 fb15 	bl	8002330 <Error_Handler>
  }
  PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART1|RCC_PERIPHCLK_I2C1
 8001d06:	f241 0321 	movw	r3, #4129	@ 0x1021
 8001d0a:	607b      	str	r3, [r7, #4]
                              |RCC_PERIPHCLK_TIM1;
  PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK1;
 8001d0c:	2300      	movs	r3, #0
 8001d0e:	60fb      	str	r3, [r7, #12]
  PeriphClkInit.I2c1ClockSelection = RCC_I2C1CLKSOURCE_HSI;
 8001d10:	2300      	movs	r3, #0
 8001d12:	613b      	str	r3, [r7, #16]
  PeriphClkInit.Tim1ClockSelection = RCC_TIM1CLK_HCLK;
 8001d14:	2300      	movs	r3, #0
 8001d16:	61bb      	str	r3, [r7, #24]
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8001d18:	1d3b      	adds	r3, r7, #4
 8001d1a:	4618      	mov	r0, r3
 8001d1c:	f003 fa22 	bl	8005164 <HAL_RCCEx_PeriphCLKConfig>
 8001d20:	4603      	mov	r3, r0
 8001d22:	2b00      	cmp	r3, #0
 8001d24:	d001      	beq.n	8001d2a <SystemClock_Config+0xaa>
  {
    Error_Handler();
 8001d26:	f000 fb03 	bl	8002330 <Error_Handler>
  }
}
 8001d2a:	bf00      	nop
 8001d2c:	3758      	adds	r7, #88	@ 0x58
 8001d2e:	46bd      	mov	sp, r7
 8001d30:	bd80      	pop	{r7, pc}
	...

08001d34 <MX_I2C1_Init>:
  * @brief I2C1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_I2C1_Init(void)
{
 8001d34:	b580      	push	{r7, lr}
 8001d36:	af00      	add	r7, sp, #0
  /* USER CODE END I2C1_Init 0 */

  /* USER CODE BEGIN I2C1_Init 1 */

  /* USER CODE END I2C1_Init 1 */
  hi2c1.Instance = I2C1;
 8001d38:	4b1b      	ldr	r3, [pc, #108]	@ (8001da8 <MX_I2C1_Init+0x74>)
 8001d3a:	4a1c      	ldr	r2, [pc, #112]	@ (8001dac <MX_I2C1_Init+0x78>)
 8001d3c:	601a      	str	r2, [r3, #0]
  hi2c1.Init.Timing = 0x00201D2B;
 8001d3e:	4b1a      	ldr	r3, [pc, #104]	@ (8001da8 <MX_I2C1_Init+0x74>)
 8001d40:	4a1b      	ldr	r2, [pc, #108]	@ (8001db0 <MX_I2C1_Init+0x7c>)
 8001d42:	605a      	str	r2, [r3, #4]
  hi2c1.Init.OwnAddress1 = 0;
 8001d44:	4b18      	ldr	r3, [pc, #96]	@ (8001da8 <MX_I2C1_Init+0x74>)
 8001d46:	2200      	movs	r2, #0
 8001d48:	609a      	str	r2, [r3, #8]
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8001d4a:	4b17      	ldr	r3, [pc, #92]	@ (8001da8 <MX_I2C1_Init+0x74>)
 8001d4c:	2201      	movs	r2, #1
 8001d4e:	60da      	str	r2, [r3, #12]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8001d50:	4b15      	ldr	r3, [pc, #84]	@ (8001da8 <MX_I2C1_Init+0x74>)
 8001d52:	2200      	movs	r2, #0
 8001d54:	611a      	str	r2, [r3, #16]
  hi2c1.Init.OwnAddress2 = 0;
 8001d56:	4b14      	ldr	r3, [pc, #80]	@ (8001da8 <MX_I2C1_Init+0x74>)
 8001d58:	2200      	movs	r2, #0
 8001d5a:	615a      	str	r2, [r3, #20]
  hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 8001d5c:	4b12      	ldr	r3, [pc, #72]	@ (8001da8 <MX_I2C1_Init+0x74>)
 8001d5e:	2200      	movs	r2, #0
 8001d60:	619a      	str	r2, [r3, #24]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8001d62:	4b11      	ldr	r3, [pc, #68]	@ (8001da8 <MX_I2C1_Init+0x74>)
 8001d64:	2200      	movs	r2, #0
 8001d66:	61da      	str	r2, [r3, #28]
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8001d68:	4b0f      	ldr	r3, [pc, #60]	@ (8001da8 <MX_I2C1_Init+0x74>)
 8001d6a:	2200      	movs	r2, #0
 8001d6c:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 8001d6e:	480e      	ldr	r0, [pc, #56]	@ (8001da8 <MX_I2C1_Init+0x74>)
 8001d70:	f001 f976 	bl	8003060 <HAL_I2C_Init>
 8001d74:	4603      	mov	r3, r0
 8001d76:	2b00      	cmp	r3, #0
 8001d78:	d001      	beq.n	8001d7e <MX_I2C1_Init+0x4a>
  {
    Error_Handler();
 8001d7a:	f000 fad9 	bl	8002330 <Error_Handler>
  }

  /** Configure Analogue filter
  */
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c1, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 8001d7e:	2100      	movs	r1, #0
 8001d80:	4809      	ldr	r0, [pc, #36]	@ (8001da8 <MX_I2C1_Init+0x74>)
 8001d82:	f001 fef9 	bl	8003b78 <HAL_I2CEx_ConfigAnalogFilter>
 8001d86:	4603      	mov	r3, r0
 8001d88:	2b00      	cmp	r3, #0
 8001d8a:	d001      	beq.n	8001d90 <MX_I2C1_Init+0x5c>
  {
    Error_Handler();
 8001d8c:	f000 fad0 	bl	8002330 <Error_Handler>
  }

  /** Configure Digital filter
  */
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c1, 0) != HAL_OK)
 8001d90:	2100      	movs	r1, #0
 8001d92:	4805      	ldr	r0, [pc, #20]	@ (8001da8 <MX_I2C1_Init+0x74>)
 8001d94:	f001 ff3b 	bl	8003c0e <HAL_I2CEx_ConfigDigitalFilter>
 8001d98:	4603      	mov	r3, r0
 8001d9a:	2b00      	cmp	r3, #0
 8001d9c:	d001      	beq.n	8001da2 <MX_I2C1_Init+0x6e>
  {
    Error_Handler();
 8001d9e:	f000 fac7 	bl	8002330 <Error_Handler>
  }
  /* USER CODE BEGIN I2C1_Init 2 */

  /* USER CODE END I2C1_Init 2 */

}
 8001da2:	bf00      	nop
 8001da4:	bd80      	pop	{r7, pc}
 8001da6:	bf00      	nop
 8001da8:	20000270 	.word	0x20000270
 8001dac:	40005400 	.word	0x40005400
 8001db0:	00201d2b 	.word	0x00201d2b

08001db4 <MX_TIM1_Init>:
  * @brief TIM1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM1_Init(void)
{
 8001db4:	b580      	push	{r7, lr}
 8001db6:	b09a      	sub	sp, #104	@ 0x68
 8001db8:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM1_Init 0 */

  /* USER CODE END TIM1_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001dba:	f107 0358 	add.w	r3, r7, #88	@ 0x58
 8001dbe:	2200      	movs	r2, #0
 8001dc0:	601a      	str	r2, [r3, #0]
 8001dc2:	605a      	str	r2, [r3, #4]
 8001dc4:	609a      	str	r2, [r3, #8]
 8001dc6:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001dc8:	f107 034c 	add.w	r3, r7, #76	@ 0x4c
 8001dcc:	2200      	movs	r2, #0
 8001dce:	601a      	str	r2, [r3, #0]
 8001dd0:	605a      	str	r2, [r3, #4]
 8001dd2:	609a      	str	r2, [r3, #8]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8001dd4:	f107 0330 	add.w	r3, r7, #48	@ 0x30
 8001dd8:	2200      	movs	r2, #0
 8001dda:	601a      	str	r2, [r3, #0]
 8001ddc:	605a      	str	r2, [r3, #4]
 8001dde:	609a      	str	r2, [r3, #8]
 8001de0:	60da      	str	r2, [r3, #12]
 8001de2:	611a      	str	r2, [r3, #16]
 8001de4:	615a      	str	r2, [r3, #20]
 8001de6:	619a      	str	r2, [r3, #24]
  TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 8001de8:	1d3b      	adds	r3, r7, #4
 8001dea:	222c      	movs	r2, #44	@ 0x2c
 8001dec:	2100      	movs	r1, #0
 8001dee:	4618      	mov	r0, r3
 8001df0:	f006 fe2a 	bl	8008a48 <memset>

  /* USER CODE BEGIN TIM1_Init 1 */

  /* USER CODE END TIM1_Init 1 */
  htim1.Instance = TIM1;
 8001df4:	4b49      	ldr	r3, [pc, #292]	@ (8001f1c <MX_TIM1_Init+0x168>)
 8001df6:	4a4a      	ldr	r2, [pc, #296]	@ (8001f20 <MX_TIM1_Init+0x16c>)
 8001df8:	601a      	str	r2, [r3, #0]
  htim1.Init.Prescaler = 80-1;
 8001dfa:	4b48      	ldr	r3, [pc, #288]	@ (8001f1c <MX_TIM1_Init+0x168>)
 8001dfc:	224f      	movs	r2, #79	@ 0x4f
 8001dfe:	605a      	str	r2, [r3, #4]
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001e00:	4b46      	ldr	r3, [pc, #280]	@ (8001f1c <MX_TIM1_Init+0x168>)
 8001e02:	2200      	movs	r2, #0
 8001e04:	609a      	str	r2, [r3, #8]
  htim1.Init.Period = 2000-1;
 8001e06:	4b45      	ldr	r3, [pc, #276]	@ (8001f1c <MX_TIM1_Init+0x168>)
 8001e08:	f240 72cf 	movw	r2, #1999	@ 0x7cf
 8001e0c:	60da      	str	r2, [r3, #12]
  htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001e0e:	4b43      	ldr	r3, [pc, #268]	@ (8001f1c <MX_TIM1_Init+0x168>)
 8001e10:	2200      	movs	r2, #0
 8001e12:	611a      	str	r2, [r3, #16]
  htim1.Init.RepetitionCounter = 0;
 8001e14:	4b41      	ldr	r3, [pc, #260]	@ (8001f1c <MX_TIM1_Init+0x168>)
 8001e16:	2200      	movs	r2, #0
 8001e18:	615a      	str	r2, [r3, #20]
  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001e1a:	4b40      	ldr	r3, [pc, #256]	@ (8001f1c <MX_TIM1_Init+0x168>)
 8001e1c:	2200      	movs	r2, #0
 8001e1e:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 8001e20:	483e      	ldr	r0, [pc, #248]	@ (8001f1c <MX_TIM1_Init+0x168>)
 8001e22:	f003 fac5 	bl	80053b0 <HAL_TIM_Base_Init>
 8001e26:	4603      	mov	r3, r0
 8001e28:	2b00      	cmp	r3, #0
 8001e2a:	d001      	beq.n	8001e30 <MX_TIM1_Init+0x7c>
  {
    Error_Handler();
 8001e2c:	f000 fa80 	bl	8002330 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001e30:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8001e34:	65bb      	str	r3, [r7, #88]	@ 0x58
  if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 8001e36:	f107 0358 	add.w	r3, r7, #88	@ 0x58
 8001e3a:	4619      	mov	r1, r3
 8001e3c:	4837      	ldr	r0, [pc, #220]	@ (8001f1c <MX_TIM1_Init+0x168>)
 8001e3e:	f003 fecf 	bl	8005be0 <HAL_TIM_ConfigClockSource>
 8001e42:	4603      	mov	r3, r0
 8001e44:	2b00      	cmp	r3, #0
 8001e46:	d001      	beq.n	8001e4c <MX_TIM1_Init+0x98>
  {
    Error_Handler();
 8001e48:	f000 fa72 	bl	8002330 <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 8001e4c:	4833      	ldr	r0, [pc, #204]	@ (8001f1c <MX_TIM1_Init+0x168>)
 8001e4e:	f003 fb63 	bl	8005518 <HAL_TIM_PWM_Init>
 8001e52:	4603      	mov	r3, r0
 8001e54:	2b00      	cmp	r3, #0
 8001e56:	d001      	beq.n	8001e5c <MX_TIM1_Init+0xa8>
  {
    Error_Handler();
 8001e58:	f000 fa6a 	bl	8002330 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8001e5c:	2300      	movs	r3, #0
 8001e5e:	64fb      	str	r3, [r7, #76]	@ 0x4c
  sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 8001e60:	2300      	movs	r3, #0
 8001e62:	653b      	str	r3, [r7, #80]	@ 0x50
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001e64:	2300      	movs	r3, #0
 8001e66:	657b      	str	r3, [r7, #84]	@ 0x54
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 8001e68:	f107 034c 	add.w	r3, r7, #76	@ 0x4c
 8001e6c:	4619      	mov	r1, r3
 8001e6e:	482b      	ldr	r0, [pc, #172]	@ (8001f1c <MX_TIM1_Init+0x168>)
 8001e70:	f004 fb9c 	bl	80065ac <HAL_TIMEx_MasterConfigSynchronization>
 8001e74:	4603      	mov	r3, r0
 8001e76:	2b00      	cmp	r3, #0
 8001e78:	d001      	beq.n	8001e7e <MX_TIM1_Init+0xca>
  {
    Error_Handler();
 8001e7a:	f000 fa59 	bl	8002330 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8001e7e:	2360      	movs	r3, #96	@ 0x60
 8001e80:	633b      	str	r3, [r7, #48]	@ 0x30
  sConfigOC.Pulse = 0;
 8001e82:	2300      	movs	r3, #0
 8001e84:	637b      	str	r3, [r7, #52]	@ 0x34
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8001e86:	2300      	movs	r3, #0
 8001e88:	63bb      	str	r3, [r7, #56]	@ 0x38
  sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 8001e8a:	2300      	movs	r3, #0
 8001e8c:	63fb      	str	r3, [r7, #60]	@ 0x3c
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8001e8e:	2300      	movs	r3, #0
 8001e90:	643b      	str	r3, [r7, #64]	@ 0x40
  sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 8001e92:	2300      	movs	r3, #0
 8001e94:	647b      	str	r3, [r7, #68]	@ 0x44
  sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 8001e96:	2300      	movs	r3, #0
 8001e98:	64bb      	str	r3, [r7, #72]	@ 0x48
  if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8001e9a:	f107 0330 	add.w	r3, r7, #48	@ 0x30
 8001e9e:	2200      	movs	r2, #0
 8001ea0:	4619      	mov	r1, r3
 8001ea2:	481e      	ldr	r0, [pc, #120]	@ (8001f1c <MX_TIM1_Init+0x168>)
 8001ea4:	f003 fd88 	bl	80059b8 <HAL_TIM_PWM_ConfigChannel>
 8001ea8:	4603      	mov	r3, r0
 8001eaa:	2b00      	cmp	r3, #0
 8001eac:	d001      	beq.n	8001eb2 <MX_TIM1_Init+0xfe>
  {
    Error_Handler();
 8001eae:	f000 fa3f 	bl	8002330 <Error_Handler>
  }
  if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 8001eb2:	f107 0330 	add.w	r3, r7, #48	@ 0x30
 8001eb6:	220c      	movs	r2, #12
 8001eb8:	4619      	mov	r1, r3
 8001eba:	4818      	ldr	r0, [pc, #96]	@ (8001f1c <MX_TIM1_Init+0x168>)
 8001ebc:	f003 fd7c 	bl	80059b8 <HAL_TIM_PWM_ConfigChannel>
 8001ec0:	4603      	mov	r3, r0
 8001ec2:	2b00      	cmp	r3, #0
 8001ec4:	d001      	beq.n	8001eca <MX_TIM1_Init+0x116>
  {
    Error_Handler();
 8001ec6:	f000 fa33 	bl	8002330 <Error_Handler>
  }
  sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 8001eca:	2300      	movs	r3, #0
 8001ecc:	607b      	str	r3, [r7, #4]
  sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 8001ece:	2300      	movs	r3, #0
 8001ed0:	60bb      	str	r3, [r7, #8]
  sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 8001ed2:	2300      	movs	r3, #0
 8001ed4:	60fb      	str	r3, [r7, #12]
  sBreakDeadTimeConfig.DeadTime = 0;
 8001ed6:	2300      	movs	r3, #0
 8001ed8:	613b      	str	r3, [r7, #16]
  sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 8001eda:	2300      	movs	r3, #0
 8001edc:	617b      	str	r3, [r7, #20]
  sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 8001ede:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 8001ee2:	61bb      	str	r3, [r7, #24]
  sBreakDeadTimeConfig.BreakFilter = 0;
 8001ee4:	2300      	movs	r3, #0
 8001ee6:	61fb      	str	r3, [r7, #28]
  sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
 8001ee8:	2300      	movs	r3, #0
 8001eea:	623b      	str	r3, [r7, #32]
  sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 8001eec:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
 8001ef0:	627b      	str	r3, [r7, #36]	@ 0x24
  sBreakDeadTimeConfig.Break2Filter = 0;
 8001ef2:	2300      	movs	r3, #0
 8001ef4:	62bb      	str	r3, [r7, #40]	@ 0x28
  sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 8001ef6:	2300      	movs	r3, #0
 8001ef8:	62fb      	str	r3, [r7, #44]	@ 0x2c
  if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 8001efa:	1d3b      	adds	r3, r7, #4
 8001efc:	4619      	mov	r1, r3
 8001efe:	4807      	ldr	r0, [pc, #28]	@ (8001f1c <MX_TIM1_Init+0x168>)
 8001f00:	f004 fbc2 	bl	8006688 <HAL_TIMEx_ConfigBreakDeadTime>
 8001f04:	4603      	mov	r3, r0
 8001f06:	2b00      	cmp	r3, #0
 8001f08:	d001      	beq.n	8001f0e <MX_TIM1_Init+0x15a>
  {
    Error_Handler();
 8001f0a:	f000 fa11 	bl	8002330 <Error_Handler>
  }
  /* USER CODE BEGIN TIM1_Init 2 */

  /* USER CODE END TIM1_Init 2 */
  HAL_TIM_MspPostInit(&htim1);
 8001f0e:	4803      	ldr	r0, [pc, #12]	@ (8001f1c <MX_TIM1_Init+0x168>)
 8001f10:	f000 fac8 	bl	80024a4 <HAL_TIM_MspPostInit>

}
 8001f14:	bf00      	nop
 8001f16:	3768      	adds	r7, #104	@ 0x68
 8001f18:	46bd      	mov	sp, r7
 8001f1a:	bd80      	pop	{r7, pc}
 8001f1c:	200002c4 	.word	0x200002c4
 8001f20:	40012c00 	.word	0x40012c00

08001f24 <MX_TIM2_Init>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 8001f24:	b580      	push	{r7, lr}
 8001f26:	b08e      	sub	sp, #56	@ 0x38
 8001f28:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001f2a:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 8001f2e:	2200      	movs	r2, #0
 8001f30:	601a      	str	r2, [r3, #0]
 8001f32:	605a      	str	r2, [r3, #4]
 8001f34:	609a      	str	r2, [r3, #8]
 8001f36:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001f38:	f107 031c 	add.w	r3, r7, #28
 8001f3c:	2200      	movs	r2, #0
 8001f3e:	601a      	str	r2, [r3, #0]
 8001f40:	605a      	str	r2, [r3, #4]
 8001f42:	609a      	str	r2, [r3, #8]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8001f44:	463b      	mov	r3, r7
 8001f46:	2200      	movs	r2, #0
 8001f48:	601a      	str	r2, [r3, #0]
 8001f4a:	605a      	str	r2, [r3, #4]
 8001f4c:	609a      	str	r2, [r3, #8]
 8001f4e:	60da      	str	r2, [r3, #12]
 8001f50:	611a      	str	r2, [r3, #16]
 8001f52:	615a      	str	r2, [r3, #20]
 8001f54:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 8001f56:	4b33      	ldr	r3, [pc, #204]	@ (8002024 <MX_TIM2_Init+0x100>)
 8001f58:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 8001f5c:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 80-1;
 8001f5e:	4b31      	ldr	r3, [pc, #196]	@ (8002024 <MX_TIM2_Init+0x100>)
 8001f60:	224f      	movs	r2, #79	@ 0x4f
 8001f62:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001f64:	4b2f      	ldr	r3, [pc, #188]	@ (8002024 <MX_TIM2_Init+0x100>)
 8001f66:	2200      	movs	r2, #0
 8001f68:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 2000-1;
 8001f6a:	4b2e      	ldr	r3, [pc, #184]	@ (8002024 <MX_TIM2_Init+0x100>)
 8001f6c:	f240 72cf 	movw	r2, #1999	@ 0x7cf
 8001f70:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001f72:	4b2c      	ldr	r3, [pc, #176]	@ (8002024 <MX_TIM2_Init+0x100>)
 8001f74:	2200      	movs	r2, #0
 8001f76:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001f78:	4b2a      	ldr	r3, [pc, #168]	@ (8002024 <MX_TIM2_Init+0x100>)
 8001f7a:	2200      	movs	r2, #0
 8001f7c:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8001f7e:	4829      	ldr	r0, [pc, #164]	@ (8002024 <MX_TIM2_Init+0x100>)
 8001f80:	f003 fa16 	bl	80053b0 <HAL_TIM_Base_Init>
 8001f84:	4603      	mov	r3, r0
 8001f86:	2b00      	cmp	r3, #0
 8001f88:	d001      	beq.n	8001f8e <MX_TIM2_Init+0x6a>
  {
    Error_Handler();
 8001f8a:	f000 f9d1 	bl	8002330 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001f8e:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8001f92:	62bb      	str	r3, [r7, #40]	@ 0x28
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8001f94:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 8001f98:	4619      	mov	r1, r3
 8001f9a:	4822      	ldr	r0, [pc, #136]	@ (8002024 <MX_TIM2_Init+0x100>)
 8001f9c:	f003 fe20 	bl	8005be0 <HAL_TIM_ConfigClockSource>
 8001fa0:	4603      	mov	r3, r0
 8001fa2:	2b00      	cmp	r3, #0
 8001fa4:	d001      	beq.n	8001faa <MX_TIM2_Init+0x86>
  {
    Error_Handler();
 8001fa6:	f000 f9c3 	bl	8002330 <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 8001faa:	481e      	ldr	r0, [pc, #120]	@ (8002024 <MX_TIM2_Init+0x100>)
 8001fac:	f003 fab4 	bl	8005518 <HAL_TIM_PWM_Init>
 8001fb0:	4603      	mov	r3, r0
 8001fb2:	2b00      	cmp	r3, #0
 8001fb4:	d001      	beq.n	8001fba <MX_TIM2_Init+0x96>
  {
    Error_Handler();
 8001fb6:	f000 f9bb 	bl	8002330 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8001fba:	2300      	movs	r3, #0
 8001fbc:	61fb      	str	r3, [r7, #28]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001fbe:	2300      	movs	r3, #0
 8001fc0:	627b      	str	r3, [r7, #36]	@ 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8001fc2:	f107 031c 	add.w	r3, r7, #28
 8001fc6:	4619      	mov	r1, r3
 8001fc8:	4816      	ldr	r0, [pc, #88]	@ (8002024 <MX_TIM2_Init+0x100>)
 8001fca:	f004 faef 	bl	80065ac <HAL_TIMEx_MasterConfigSynchronization>
 8001fce:	4603      	mov	r3, r0
 8001fd0:	2b00      	cmp	r3, #0
 8001fd2:	d001      	beq.n	8001fd8 <MX_TIM2_Init+0xb4>
  {
    Error_Handler();
 8001fd4:	f000 f9ac 	bl	8002330 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8001fd8:	2360      	movs	r3, #96	@ 0x60
 8001fda:	603b      	str	r3, [r7, #0]
  sConfigOC.Pulse = 0;
 8001fdc:	2300      	movs	r3, #0
 8001fde:	607b      	str	r3, [r7, #4]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8001fe0:	2300      	movs	r3, #0
 8001fe2:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8001fe4:	2300      	movs	r3, #0
 8001fe6:	613b      	str	r3, [r7, #16]
  if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8001fe8:	463b      	mov	r3, r7
 8001fea:	2200      	movs	r2, #0
 8001fec:	4619      	mov	r1, r3
 8001fee:	480d      	ldr	r0, [pc, #52]	@ (8002024 <MX_TIM2_Init+0x100>)
 8001ff0:	f003 fce2 	bl	80059b8 <HAL_TIM_PWM_ConfigChannel>
 8001ff4:	4603      	mov	r3, r0
 8001ff6:	2b00      	cmp	r3, #0
 8001ff8:	d001      	beq.n	8001ffe <MX_TIM2_Init+0xda>
  {
    Error_Handler();
 8001ffa:	f000 f999 	bl	8002330 <Error_Handler>
  }
  if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 8001ffe:	463b      	mov	r3, r7
 8002000:	2204      	movs	r2, #4
 8002002:	4619      	mov	r1, r3
 8002004:	4807      	ldr	r0, [pc, #28]	@ (8002024 <MX_TIM2_Init+0x100>)
 8002006:	f003 fcd7 	bl	80059b8 <HAL_TIM_PWM_ConfigChannel>
 800200a:	4603      	mov	r3, r0
 800200c:	2b00      	cmp	r3, #0
 800200e:	d001      	beq.n	8002014 <MX_TIM2_Init+0xf0>
  {
    Error_Handler();
 8002010:	f000 f98e 	bl	8002330 <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */
  HAL_TIM_MspPostInit(&htim2);
 8002014:	4803      	ldr	r0, [pc, #12]	@ (8002024 <MX_TIM2_Init+0x100>)
 8002016:	f000 fa45 	bl	80024a4 <HAL_TIM_MspPostInit>

}
 800201a:	bf00      	nop
 800201c:	3738      	adds	r7, #56	@ 0x38
 800201e:	46bd      	mov	sp, r7
 8002020:	bd80      	pop	{r7, pc}
 8002022:	bf00      	nop
 8002024:	20000310 	.word	0x20000310

08002028 <MX_TIM3_Init>:
  * @brief TIM3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM3_Init(void)
{
 8002028:	b580      	push	{r7, lr}
 800202a:	b088      	sub	sp, #32
 800202c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM3_Init 0 */

  /* USER CODE END TIM3_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 800202e:	f107 0310 	add.w	r3, r7, #16
 8002032:	2200      	movs	r2, #0
 8002034:	601a      	str	r2, [r3, #0]
 8002036:	605a      	str	r2, [r3, #4]
 8002038:	609a      	str	r2, [r3, #8]
 800203a:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 800203c:	1d3b      	adds	r3, r7, #4
 800203e:	2200      	movs	r2, #0
 8002040:	601a      	str	r2, [r3, #0]
 8002042:	605a      	str	r2, [r3, #4]
 8002044:	609a      	str	r2, [r3, #8]

  /* USER CODE BEGIN TIM3_Init 1 */

  /* USER CODE END TIM3_Init 1 */
  htim3.Instance = TIM3;
 8002046:	4b1d      	ldr	r3, [pc, #116]	@ (80020bc <MX_TIM3_Init+0x94>)
 8002048:	4a1d      	ldr	r2, [pc, #116]	@ (80020c0 <MX_TIM3_Init+0x98>)
 800204a:	601a      	str	r2, [r3, #0]
  htim3.Init.Prescaler = 8-1;
 800204c:	4b1b      	ldr	r3, [pc, #108]	@ (80020bc <MX_TIM3_Init+0x94>)
 800204e:	2207      	movs	r2, #7
 8002050:	605a      	str	r2, [r3, #4]
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 8002052:	4b1a      	ldr	r3, [pc, #104]	@ (80020bc <MX_TIM3_Init+0x94>)
 8002054:	2200      	movs	r2, #0
 8002056:	609a      	str	r2, [r3, #8]
  htim3.Init.Period = 1000-1;
 8002058:	4b18      	ldr	r3, [pc, #96]	@ (80020bc <MX_TIM3_Init+0x94>)
 800205a:	f240 32e7 	movw	r2, #999	@ 0x3e7
 800205e:	60da      	str	r2, [r3, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8002060:	4b16      	ldr	r3, [pc, #88]	@ (80020bc <MX_TIM3_Init+0x94>)
 8002062:	2200      	movs	r2, #0
 8002064:	611a      	str	r2, [r3, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8002066:	4b15      	ldr	r3, [pc, #84]	@ (80020bc <MX_TIM3_Init+0x94>)
 8002068:	2200      	movs	r2, #0
 800206a:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 800206c:	4813      	ldr	r0, [pc, #76]	@ (80020bc <MX_TIM3_Init+0x94>)
 800206e:	f003 f99f 	bl	80053b0 <HAL_TIM_Base_Init>
 8002072:	4603      	mov	r3, r0
 8002074:	2b00      	cmp	r3, #0
 8002076:	d001      	beq.n	800207c <MX_TIM3_Init+0x54>
  {
    Error_Handler();
 8002078:	f000 f95a 	bl	8002330 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 800207c:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8002080:	613b      	str	r3, [r7, #16]
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 8002082:	f107 0310 	add.w	r3, r7, #16
 8002086:	4619      	mov	r1, r3
 8002088:	480c      	ldr	r0, [pc, #48]	@ (80020bc <MX_TIM3_Init+0x94>)
 800208a:	f003 fda9 	bl	8005be0 <HAL_TIM_ConfigClockSource>
 800208e:	4603      	mov	r3, r0
 8002090:	2b00      	cmp	r3, #0
 8002092:	d001      	beq.n	8002098 <MX_TIM3_Init+0x70>
  {
    Error_Handler();
 8002094:	f000 f94c 	bl	8002330 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8002098:	2300      	movs	r3, #0
 800209a:	607b      	str	r3, [r7, #4]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 800209c:	2300      	movs	r3, #0
 800209e:	60fb      	str	r3, [r7, #12]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 80020a0:	1d3b      	adds	r3, r7, #4
 80020a2:	4619      	mov	r1, r3
 80020a4:	4805      	ldr	r0, [pc, #20]	@ (80020bc <MX_TIM3_Init+0x94>)
 80020a6:	f004 fa81 	bl	80065ac <HAL_TIMEx_MasterConfigSynchronization>
 80020aa:	4603      	mov	r3, r0
 80020ac:	2b00      	cmp	r3, #0
 80020ae:	d001      	beq.n	80020b4 <MX_TIM3_Init+0x8c>
  {
    Error_Handler();
 80020b0:	f000 f93e 	bl	8002330 <Error_Handler>
  }
  /* USER CODE BEGIN TIM3_Init 2 */

  /* USER CODE END TIM3_Init 2 */

}
 80020b4:	bf00      	nop
 80020b6:	3720      	adds	r7, #32
 80020b8:	46bd      	mov	sp, r7
 80020ba:	bd80      	pop	{r7, pc}
 80020bc:	2000035c 	.word	0x2000035c
 80020c0:	40000400 	.word	0x40000400

080020c4 <MX_USART1_UART_Init>:
  * @brief USART1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART1_UART_Init(void)
{
 80020c4:	b580      	push	{r7, lr}
 80020c6:	af00      	add	r7, sp, #0
  /* USER CODE END USART1_Init 0 */

  /* USER CODE BEGIN USART1_Init 1 */

  /* USER CODE END USART1_Init 1 */
  huart1.Instance = USART1;
 80020c8:	4b14      	ldr	r3, [pc, #80]	@ (800211c <MX_USART1_UART_Init+0x58>)
 80020ca:	4a15      	ldr	r2, [pc, #84]	@ (8002120 <MX_USART1_UART_Init+0x5c>)
 80020cc:	601a      	str	r2, [r3, #0]
  huart1.Init.BaudRate = 9600;
 80020ce:	4b13      	ldr	r3, [pc, #76]	@ (800211c <MX_USART1_UART_Init+0x58>)
 80020d0:	f44f 5216 	mov.w	r2, #9600	@ 0x2580
 80020d4:	605a      	str	r2, [r3, #4]
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
 80020d6:	4b11      	ldr	r3, [pc, #68]	@ (800211c <MX_USART1_UART_Init+0x58>)
 80020d8:	2200      	movs	r2, #0
 80020da:	609a      	str	r2, [r3, #8]
  huart1.Init.StopBits = UART_STOPBITS_1;
 80020dc:	4b0f      	ldr	r3, [pc, #60]	@ (800211c <MX_USART1_UART_Init+0x58>)
 80020de:	2200      	movs	r2, #0
 80020e0:	60da      	str	r2, [r3, #12]
  huart1.Init.Parity = UART_PARITY_NONE;
 80020e2:	4b0e      	ldr	r3, [pc, #56]	@ (800211c <MX_USART1_UART_Init+0x58>)
 80020e4:	2200      	movs	r2, #0
 80020e6:	611a      	str	r2, [r3, #16]
  huart1.Init.Mode = UART_MODE_TX_RX;
 80020e8:	4b0c      	ldr	r3, [pc, #48]	@ (800211c <MX_USART1_UART_Init+0x58>)
 80020ea:	220c      	movs	r2, #12
 80020ec:	615a      	str	r2, [r3, #20]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80020ee:	4b0b      	ldr	r3, [pc, #44]	@ (800211c <MX_USART1_UART_Init+0x58>)
 80020f0:	2200      	movs	r2, #0
 80020f2:	619a      	str	r2, [r3, #24]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 80020f4:	4b09      	ldr	r3, [pc, #36]	@ (800211c <MX_USART1_UART_Init+0x58>)
 80020f6:	2200      	movs	r2, #0
 80020f8:	61da      	str	r2, [r3, #28]
  huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 80020fa:	4b08      	ldr	r3, [pc, #32]	@ (800211c <MX_USART1_UART_Init+0x58>)
 80020fc:	2200      	movs	r2, #0
 80020fe:	621a      	str	r2, [r3, #32]
  huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 8002100:	4b06      	ldr	r3, [pc, #24]	@ (800211c <MX_USART1_UART_Init+0x58>)
 8002102:	2200      	movs	r2, #0
 8002104:	625a      	str	r2, [r3, #36]	@ 0x24
  if (HAL_UART_Init(&huart1) != HAL_OK)
 8002106:	4805      	ldr	r0, [pc, #20]	@ (800211c <MX_USART1_UART_Init+0x58>)
 8002108:	f004 fb54 	bl	80067b4 <HAL_UART_Init>
 800210c:	4603      	mov	r3, r0
 800210e:	2b00      	cmp	r3, #0
 8002110:	d001      	beq.n	8002116 <MX_USART1_UART_Init+0x52>
  {
    Error_Handler();
 8002112:	f000 f90d 	bl	8002330 <Error_Handler>
  }
  /* USER CODE BEGIN USART1_Init 2 */

  /* USER CODE END USART1_Init 2 */

}
 8002116:	bf00      	nop
 8002118:	bd80      	pop	{r7, pc}
 800211a:	bf00      	nop
 800211c:	200003a8 	.word	0x200003a8
 8002120:	40013800 	.word	0x40013800

08002124 <MX_USART2_UART_Init>:
  * @brief USART2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART2_UART_Init(void)
{
 8002124:	b580      	push	{r7, lr}
 8002126:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 8002128:	4b14      	ldr	r3, [pc, #80]	@ (800217c <MX_USART2_UART_Init+0x58>)
 800212a:	4a15      	ldr	r2, [pc, #84]	@ (8002180 <MX_USART2_UART_Init+0x5c>)
 800212c:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 115200;
 800212e:	4b13      	ldr	r3, [pc, #76]	@ (800217c <MX_USART2_UART_Init+0x58>)
 8002130:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 8002134:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 8002136:	4b11      	ldr	r3, [pc, #68]	@ (800217c <MX_USART2_UART_Init+0x58>)
 8002138:	2200      	movs	r2, #0
 800213a:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 800213c:	4b0f      	ldr	r3, [pc, #60]	@ (800217c <MX_USART2_UART_Init+0x58>)
 800213e:	2200      	movs	r2, #0
 8002140:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 8002142:	4b0e      	ldr	r3, [pc, #56]	@ (800217c <MX_USART2_UART_Init+0x58>)
 8002144:	2200      	movs	r2, #0
 8002146:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 8002148:	4b0c      	ldr	r3, [pc, #48]	@ (800217c <MX_USART2_UART_Init+0x58>)
 800214a:	220c      	movs	r2, #12
 800214c:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 800214e:	4b0b      	ldr	r3, [pc, #44]	@ (800217c <MX_USART2_UART_Init+0x58>)
 8002150:	2200      	movs	r2, #0
 8002152:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 8002154:	4b09      	ldr	r3, [pc, #36]	@ (800217c <MX_USART2_UART_Init+0x58>)
 8002156:	2200      	movs	r2, #0
 8002158:	61da      	str	r2, [r3, #28]
  huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 800215a:	4b08      	ldr	r3, [pc, #32]	@ (800217c <MX_USART2_UART_Init+0x58>)
 800215c:	2200      	movs	r2, #0
 800215e:	621a      	str	r2, [r3, #32]
  huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 8002160:	4b06      	ldr	r3, [pc, #24]	@ (800217c <MX_USART2_UART_Init+0x58>)
 8002162:	2200      	movs	r2, #0
 8002164:	625a      	str	r2, [r3, #36]	@ 0x24
  if (HAL_UART_Init(&huart2) != HAL_OK)
 8002166:	4805      	ldr	r0, [pc, #20]	@ (800217c <MX_USART2_UART_Init+0x58>)
 8002168:	f004 fb24 	bl	80067b4 <HAL_UART_Init>
 800216c:	4603      	mov	r3, r0
 800216e:	2b00      	cmp	r3, #0
 8002170:	d001      	beq.n	8002176 <MX_USART2_UART_Init+0x52>
  {
    Error_Handler();
 8002172:	f000 f8dd 	bl	8002330 <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 8002176:	bf00      	nop
 8002178:	bd80      	pop	{r7, pc}
 800217a:	bf00      	nop
 800217c:	20000430 	.word	0x20000430
 8002180:	40004400 	.word	0x40004400

08002184 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8002184:	b580      	push	{r7, lr}
 8002186:	b088      	sub	sp, #32
 8002188:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800218a:	f107 030c 	add.w	r3, r7, #12
 800218e:	2200      	movs	r2, #0
 8002190:	601a      	str	r2, [r3, #0]
 8002192:	605a      	str	r2, [r3, #4]
 8002194:	609a      	str	r2, [r3, #8]
 8002196:	60da      	str	r2, [r3, #12]
 8002198:	611a      	str	r2, [r3, #16]
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOF_CLK_ENABLE();
 800219a:	4b1d      	ldr	r3, [pc, #116]	@ (8002210 <MX_GPIO_Init+0x8c>)
 800219c:	695b      	ldr	r3, [r3, #20]
 800219e:	4a1c      	ldr	r2, [pc, #112]	@ (8002210 <MX_GPIO_Init+0x8c>)
 80021a0:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 80021a4:	6153      	str	r3, [r2, #20]
 80021a6:	4b1a      	ldr	r3, [pc, #104]	@ (8002210 <MX_GPIO_Init+0x8c>)
 80021a8:	695b      	ldr	r3, [r3, #20]
 80021aa:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 80021ae:	60bb      	str	r3, [r7, #8]
 80021b0:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80021b2:	4b17      	ldr	r3, [pc, #92]	@ (8002210 <MX_GPIO_Init+0x8c>)
 80021b4:	695b      	ldr	r3, [r3, #20]
 80021b6:	4a16      	ldr	r2, [pc, #88]	@ (8002210 <MX_GPIO_Init+0x8c>)
 80021b8:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 80021bc:	6153      	str	r3, [r2, #20]
 80021be:	4b14      	ldr	r3, [pc, #80]	@ (8002210 <MX_GPIO_Init+0x8c>)
 80021c0:	695b      	ldr	r3, [r3, #20]
 80021c2:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80021c6:	607b      	str	r3, [r7, #4]
 80021c8:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80021ca:	4b11      	ldr	r3, [pc, #68]	@ (8002210 <MX_GPIO_Init+0x8c>)
 80021cc:	695b      	ldr	r3, [r3, #20]
 80021ce:	4a10      	ldr	r2, [pc, #64]	@ (8002210 <MX_GPIO_Init+0x8c>)
 80021d0:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 80021d4:	6153      	str	r3, [r2, #20]
 80021d6:	4b0e      	ldr	r3, [pc, #56]	@ (8002210 <MX_GPIO_Init+0x8c>)
 80021d8:	695b      	ldr	r3, [r3, #20]
 80021da:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 80021de:	603b      	str	r3, [r7, #0]
 80021e0:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_3, GPIO_PIN_RESET);
 80021e2:	2200      	movs	r2, #0
 80021e4:	2108      	movs	r1, #8
 80021e6:	480b      	ldr	r0, [pc, #44]	@ (8002214 <MX_GPIO_Init+0x90>)
 80021e8:	f000 ff22 	bl	8003030 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : PB3 */
  GPIO_InitStruct.Pin = GPIO_PIN_3;
 80021ec:	2308      	movs	r3, #8
 80021ee:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80021f0:	2301      	movs	r3, #1
 80021f2:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80021f4:	2300      	movs	r3, #0
 80021f6:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80021f8:	2300      	movs	r3, #0
 80021fa:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80021fc:	f107 030c 	add.w	r3, r7, #12
 8002200:	4619      	mov	r1, r3
 8002202:	4804      	ldr	r0, [pc, #16]	@ (8002214 <MX_GPIO_Init+0x90>)
 8002204:	f000 fda2 	bl	8002d4c <HAL_GPIO_Init>

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 8002208:	bf00      	nop
 800220a:	3720      	adds	r7, #32
 800220c:	46bd      	mov	sp, r7
 800220e:	bd80      	pop	{r7, pc}
 8002210:	40021000 	.word	0x40021000
 8002214:	48000400 	.word	0x48000400

08002218 <printData>:
/* USER CODE BEGIN 4 */




void printData(char* data) {
 8002218:	b580      	push	{r7, lr}
 800221a:	b082      	sub	sp, #8
 800221c:	af00      	add	r7, sp, #0
 800221e:	6078      	str	r0, [r7, #4]
  HAL_UART_Transmit(&huart2, (uint8_t*)data, strlen(data), 100);
 8002220:	6878      	ldr	r0, [r7, #4]
 8002222:	f7fe f825 	bl	8000270 <strlen>
 8002226:	4603      	mov	r3, r0
 8002228:	b29a      	uxth	r2, r3
 800222a:	2364      	movs	r3, #100	@ 0x64
 800222c:	6879      	ldr	r1, [r7, #4]
 800222e:	4803      	ldr	r0, [pc, #12]	@ (800223c <printData+0x24>)
 8002230:	f004 fb0e 	bl	8006850 <HAL_UART_Transmit>
}
 8002234:	bf00      	nop
 8002236:	3708      	adds	r7, #8
 8002238:	46bd      	mov	sp, r7
 800223a:	bd80      	pop	{r7, pc}
 800223c:	20000430 	.word	0x20000430

08002240 <_write>:

void sendData(char* data) {
  HAL_UART_Transmit(&huart1, (uint8_t*)data, strlen(data), 100);
}

int _write(int file, char *data, int len) {
 8002240:	b580      	push	{r7, lr}
 8002242:	b084      	sub	sp, #16
 8002244:	af00      	add	r7, sp, #0
 8002246:	60f8      	str	r0, [r7, #12]
 8002248:	60b9      	str	r1, [r7, #8]
 800224a:	607a      	str	r2, [r7, #4]
    HAL_UART_Transmit(&huart2, (uint8_t*)data, len, HAL_MAX_DELAY);
 800224c:	687b      	ldr	r3, [r7, #4]
 800224e:	b29a      	uxth	r2, r3
 8002250:	f04f 33ff 	mov.w	r3, #4294967295
 8002254:	68b9      	ldr	r1, [r7, #8]
 8002256:	4804      	ldr	r0, [pc, #16]	@ (8002268 <_write+0x28>)
 8002258:	f004 fafa 	bl	8006850 <HAL_UART_Transmit>
    return len;
 800225c:	687b      	ldr	r3, [r7, #4]
}
 800225e:	4618      	mov	r0, r3
 8002260:	3710      	adds	r7, #16
 8002262:	46bd      	mov	sp, r7
 8002264:	bd80      	pop	{r7, pc}
 8002266:	bf00      	nop
 8002268:	20000430 	.word	0x20000430

0800226c <HAL_UART_RxCpltCallback>:


// Función que se llama cuando un byte es recibido
void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart) {
 800226c:	b580      	push	{r7, lr}
 800226e:	b084      	sub	sp, #16
 8002270:	af00      	add	r7, sp, #0
 8002272:	6078      	str	r0, [r7, #4]
	//Control_Update();// por probar
    if (huart->Instance == USART1) {
 8002274:	687b      	ldr	r3, [r7, #4]
 8002276:	681b      	ldr	r3, [r3, #0]
 8002278:	4a27      	ldr	r2, [pc, #156]	@ (8002318 <HAL_UART_RxCpltCallback+0xac>)
 800227a:	4293      	cmp	r3, r2
 800227c:	d148      	bne.n	8002310 <HAL_UART_RxCpltCallback+0xa4>
        // Almacenar el byte recibido en el buffer circular
        rx_buffer[write_index++] = temp_byte;
 800227e:	4b27      	ldr	r3, [pc, #156]	@ (800231c <HAL_UART_RxCpltCallback+0xb0>)
 8002280:	881b      	ldrh	r3, [r3, #0]
 8002282:	b29b      	uxth	r3, r3
 8002284:	1c5a      	adds	r2, r3, #1
 8002286:	b291      	uxth	r1, r2
 8002288:	4a24      	ldr	r2, [pc, #144]	@ (800231c <HAL_UART_RxCpltCallback+0xb0>)
 800228a:	8011      	strh	r1, [r2, #0]
 800228c:	461a      	mov	r2, r3
 800228e:	4b24      	ldr	r3, [pc, #144]	@ (8002320 <HAL_UART_RxCpltCallback+0xb4>)
 8002290:	7819      	ldrb	r1, [r3, #0]
 8002292:	4b24      	ldr	r3, [pc, #144]	@ (8002324 <HAL_UART_RxCpltCallback+0xb8>)
 8002294:	5499      	strb	r1, [r3, r2]

        // Asegurar que el índice no se desborde
        if (write_index >= RX_BUFFER_SIZE) {
 8002296:	4b21      	ldr	r3, [pc, #132]	@ (800231c <HAL_UART_RxCpltCallback+0xb0>)
 8002298:	881b      	ldrh	r3, [r3, #0]
 800229a:	b29b      	uxth	r3, r3
 800229c:	2b7f      	cmp	r3, #127	@ 0x7f
 800229e:	d902      	bls.n	80022a6 <HAL_UART_RxCpltCallback+0x3a>
            write_index = 0;
 80022a0:	4b1e      	ldr	r3, [pc, #120]	@ (800231c <HAL_UART_RxCpltCallback+0xb0>)
 80022a2:	2200      	movs	r2, #0
 80022a4:	801a      	strh	r2, [r3, #0]
        }

        // Si el byte recibido es un delimitador (por ejemplo, '\n'), procesamos el mensaje
        if (temp_byte == '\n') {
 80022a6:	4b1e      	ldr	r3, [pc, #120]	@ (8002320 <HAL_UART_RxCpltCallback+0xb4>)
 80022a8:	781b      	ldrb	r3, [r3, #0]
 80022aa:	2b0a      	cmp	r3, #10
 80022ac:	d12b      	bne.n	8002306 <HAL_UART_RxCpltCallback+0x9a>
            // Procesar el buffer hasta la posición de lectura
            uint16_t length = (write_index > read_index) ? (write_index - read_index) : (RX_BUFFER_SIZE - read_index + write_index);
 80022ae:	4b1b      	ldr	r3, [pc, #108]	@ (800231c <HAL_UART_RxCpltCallback+0xb0>)
 80022b0:	881b      	ldrh	r3, [r3, #0]
 80022b2:	b29a      	uxth	r2, r3
 80022b4:	4b1c      	ldr	r3, [pc, #112]	@ (8002328 <HAL_UART_RxCpltCallback+0xbc>)
 80022b6:	881b      	ldrh	r3, [r3, #0]
 80022b8:	b29b      	uxth	r3, r3
 80022ba:	429a      	cmp	r2, r3
 80022bc:	d908      	bls.n	80022d0 <HAL_UART_RxCpltCallback+0x64>
 80022be:	4b17      	ldr	r3, [pc, #92]	@ (800231c <HAL_UART_RxCpltCallback+0xb0>)
 80022c0:	881b      	ldrh	r3, [r3, #0]
 80022c2:	b29a      	uxth	r2, r3
 80022c4:	4b18      	ldr	r3, [pc, #96]	@ (8002328 <HAL_UART_RxCpltCallback+0xbc>)
 80022c6:	881b      	ldrh	r3, [r3, #0]
 80022c8:	b29b      	uxth	r3, r3
 80022ca:	1ad3      	subs	r3, r2, r3
 80022cc:	b29b      	uxth	r3, r3
 80022ce:	e009      	b.n	80022e4 <HAL_UART_RxCpltCallback+0x78>
 80022d0:	4b12      	ldr	r3, [pc, #72]	@ (800231c <HAL_UART_RxCpltCallback+0xb0>)
 80022d2:	881b      	ldrh	r3, [r3, #0]
 80022d4:	b29a      	uxth	r2, r3
 80022d6:	4b14      	ldr	r3, [pc, #80]	@ (8002328 <HAL_UART_RxCpltCallback+0xbc>)
 80022d8:	881b      	ldrh	r3, [r3, #0]
 80022da:	b29b      	uxth	r3, r3
 80022dc:	1ad3      	subs	r3, r2, r3
 80022de:	b29b      	uxth	r3, r3
 80022e0:	3380      	adds	r3, #128	@ 0x80
 80022e2:	b29b      	uxth	r3, r3
 80022e4:	81fb      	strh	r3, [r7, #14]
            receiveControlCommand(&rx_buffer[read_index], length);
 80022e6:	4b10      	ldr	r3, [pc, #64]	@ (8002328 <HAL_UART_RxCpltCallback+0xbc>)
 80022e8:	881b      	ldrh	r3, [r3, #0]
 80022ea:	b29b      	uxth	r3, r3
 80022ec:	461a      	mov	r2, r3
 80022ee:	4b0d      	ldr	r3, [pc, #52]	@ (8002324 <HAL_UART_RxCpltCallback+0xb8>)
 80022f0:	4413      	add	r3, r2
 80022f2:	89fa      	ldrh	r2, [r7, #14]
 80022f4:	4611      	mov	r1, r2
 80022f6:	4618      	mov	r0, r3
 80022f8:	f7fe fd0c 	bl	8000d14 <receiveControlCommand>

            // Avanzar el índice de lectura
            read_index = write_index;
 80022fc:	4b07      	ldr	r3, [pc, #28]	@ (800231c <HAL_UART_RxCpltCallback+0xb0>)
 80022fe:	881b      	ldrh	r3, [r3, #0]
 8002300:	b29a      	uxth	r2, r3
 8002302:	4b09      	ldr	r3, [pc, #36]	@ (8002328 <HAL_UART_RxCpltCallback+0xbc>)
 8002304:	801a      	strh	r2, [r3, #0]
        }

        // Continuar recibiendo el siguiente byte
        HAL_UART_Receive_IT(&huart1, &temp_byte, 1);
 8002306:	2201      	movs	r2, #1
 8002308:	4905      	ldr	r1, [pc, #20]	@ (8002320 <HAL_UART_RxCpltCallback+0xb4>)
 800230a:	4808      	ldr	r0, [pc, #32]	@ (800232c <HAL_UART_RxCpltCallback+0xc0>)
 800230c:	f004 fb29 	bl	8006962 <HAL_UART_Receive_IT>
    }
}
 8002310:	bf00      	nop
 8002312:	3710      	adds	r7, #16
 8002314:	46bd      	mov	sp, r7
 8002316:	bd80      	pop	{r7, pc}
 8002318:	40013800 	.word	0x40013800
 800231c:	2000053a 	.word	0x2000053a
 8002320:	20000538 	.word	0x20000538
 8002324:	200004b8 	.word	0x200004b8
 8002328:	2000053c 	.word	0x2000053c
 800232c:	200003a8 	.word	0x200003a8

08002330 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8002330:	b480      	push	{r7}
 8002332:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8002334:	b672      	cpsid	i
}
 8002336:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8002338:	bf00      	nop
 800233a:	e7fd      	b.n	8002338 <Error_Handler+0x8>

0800233c <HAL_MspInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);
                                        /**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 800233c:	b480      	push	{r7}
 800233e:	b083      	sub	sp, #12
 8002340:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8002342:	4b0f      	ldr	r3, [pc, #60]	@ (8002380 <HAL_MspInit+0x44>)
 8002344:	699b      	ldr	r3, [r3, #24]
 8002346:	4a0e      	ldr	r2, [pc, #56]	@ (8002380 <HAL_MspInit+0x44>)
 8002348:	f043 0301 	orr.w	r3, r3, #1
 800234c:	6193      	str	r3, [r2, #24]
 800234e:	4b0c      	ldr	r3, [pc, #48]	@ (8002380 <HAL_MspInit+0x44>)
 8002350:	699b      	ldr	r3, [r3, #24]
 8002352:	f003 0301 	and.w	r3, r3, #1
 8002356:	607b      	str	r3, [r7, #4]
 8002358:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 800235a:	4b09      	ldr	r3, [pc, #36]	@ (8002380 <HAL_MspInit+0x44>)
 800235c:	69db      	ldr	r3, [r3, #28]
 800235e:	4a08      	ldr	r2, [pc, #32]	@ (8002380 <HAL_MspInit+0x44>)
 8002360:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8002364:	61d3      	str	r3, [r2, #28]
 8002366:	4b06      	ldr	r3, [pc, #24]	@ (8002380 <HAL_MspInit+0x44>)
 8002368:	69db      	ldr	r3, [r3, #28]
 800236a:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800236e:	603b      	str	r3, [r7, #0]
 8002370:	683b      	ldr	r3, [r7, #0]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8002372:	bf00      	nop
 8002374:	370c      	adds	r7, #12
 8002376:	46bd      	mov	sp, r7
 8002378:	f85d 7b04 	ldr.w	r7, [sp], #4
 800237c:	4770      	bx	lr
 800237e:	bf00      	nop
 8002380:	40021000 	.word	0x40021000

08002384 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8002384:	b580      	push	{r7, lr}
 8002386:	b08a      	sub	sp, #40	@ 0x28
 8002388:	af00      	add	r7, sp, #0
 800238a:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800238c:	f107 0314 	add.w	r3, r7, #20
 8002390:	2200      	movs	r2, #0
 8002392:	601a      	str	r2, [r3, #0]
 8002394:	605a      	str	r2, [r3, #4]
 8002396:	609a      	str	r2, [r3, #8]
 8002398:	60da      	str	r2, [r3, #12]
 800239a:	611a      	str	r2, [r3, #16]
  if(hi2c->Instance==I2C1)
 800239c:	687b      	ldr	r3, [r7, #4]
 800239e:	681b      	ldr	r3, [r3, #0]
 80023a0:	4a17      	ldr	r2, [pc, #92]	@ (8002400 <HAL_I2C_MspInit+0x7c>)
 80023a2:	4293      	cmp	r3, r2
 80023a4:	d127      	bne.n	80023f6 <HAL_I2C_MspInit+0x72>
  {
  /* USER CODE BEGIN I2C1_MspInit 0 */

  /* USER CODE END I2C1_MspInit 0 */

    __HAL_RCC_GPIOB_CLK_ENABLE();
 80023a6:	4b17      	ldr	r3, [pc, #92]	@ (8002404 <HAL_I2C_MspInit+0x80>)
 80023a8:	695b      	ldr	r3, [r3, #20]
 80023aa:	4a16      	ldr	r2, [pc, #88]	@ (8002404 <HAL_I2C_MspInit+0x80>)
 80023ac:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 80023b0:	6153      	str	r3, [r2, #20]
 80023b2:	4b14      	ldr	r3, [pc, #80]	@ (8002404 <HAL_I2C_MspInit+0x80>)
 80023b4:	695b      	ldr	r3, [r3, #20]
 80023b6:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 80023ba:	613b      	str	r3, [r7, #16]
 80023bc:	693b      	ldr	r3, [r7, #16]
    /**I2C1 GPIO Configuration
    PB6     ------> I2C1_SCL
    PB7     ------> I2C1_SDA
    */
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 80023be:	23c0      	movs	r3, #192	@ 0xc0
 80023c0:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 80023c2:	2312      	movs	r3, #18
 80023c4:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80023c6:	2300      	movs	r3, #0
 80023c8:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80023ca:	2303      	movs	r3, #3
 80023cc:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 80023ce:	2304      	movs	r3, #4
 80023d0:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80023d2:	f107 0314 	add.w	r3, r7, #20
 80023d6:	4619      	mov	r1, r3
 80023d8:	480b      	ldr	r0, [pc, #44]	@ (8002408 <HAL_I2C_MspInit+0x84>)
 80023da:	f000 fcb7 	bl	8002d4c <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C1_CLK_ENABLE();
 80023de:	4b09      	ldr	r3, [pc, #36]	@ (8002404 <HAL_I2C_MspInit+0x80>)
 80023e0:	69db      	ldr	r3, [r3, #28]
 80023e2:	4a08      	ldr	r2, [pc, #32]	@ (8002404 <HAL_I2C_MspInit+0x80>)
 80023e4:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 80023e8:	61d3      	str	r3, [r2, #28]
 80023ea:	4b06      	ldr	r3, [pc, #24]	@ (8002404 <HAL_I2C_MspInit+0x80>)
 80023ec:	69db      	ldr	r3, [r3, #28]
 80023ee:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 80023f2:	60fb      	str	r3, [r7, #12]
 80023f4:	68fb      	ldr	r3, [r7, #12]

  /* USER CODE END I2C1_MspInit 1 */

  }

}
 80023f6:	bf00      	nop
 80023f8:	3728      	adds	r7, #40	@ 0x28
 80023fa:	46bd      	mov	sp, r7
 80023fc:	bd80      	pop	{r7, pc}
 80023fe:	bf00      	nop
 8002400:	40005400 	.word	0x40005400
 8002404:	40021000 	.word	0x40021000
 8002408:	48000400 	.word	0x48000400

0800240c <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 800240c:	b580      	push	{r7, lr}
 800240e:	b086      	sub	sp, #24
 8002410:	af00      	add	r7, sp, #0
 8002412:	6078      	str	r0, [r7, #4]
  if(htim_base->Instance==TIM1)
 8002414:	687b      	ldr	r3, [r7, #4]
 8002416:	681b      	ldr	r3, [r3, #0]
 8002418:	4a1f      	ldr	r2, [pc, #124]	@ (8002498 <HAL_TIM_Base_MspInit+0x8c>)
 800241a:	4293      	cmp	r3, r2
 800241c:	d10c      	bne.n	8002438 <HAL_TIM_Base_MspInit+0x2c>
  {
  /* USER CODE BEGIN TIM1_MspInit 0 */

  /* USER CODE END TIM1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM1_CLK_ENABLE();
 800241e:	4b1f      	ldr	r3, [pc, #124]	@ (800249c <HAL_TIM_Base_MspInit+0x90>)
 8002420:	699b      	ldr	r3, [r3, #24]
 8002422:	4a1e      	ldr	r2, [pc, #120]	@ (800249c <HAL_TIM_Base_MspInit+0x90>)
 8002424:	f443 6300 	orr.w	r3, r3, #2048	@ 0x800
 8002428:	6193      	str	r3, [r2, #24]
 800242a:	4b1c      	ldr	r3, [pc, #112]	@ (800249c <HAL_TIM_Base_MspInit+0x90>)
 800242c:	699b      	ldr	r3, [r3, #24]
 800242e:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 8002432:	617b      	str	r3, [r7, #20]
 8002434:	697b      	ldr	r3, [r7, #20]
  /* USER CODE BEGIN TIM3_MspInit 1 */

  /* USER CODE END TIM3_MspInit 1 */
  }

}
 8002436:	e02a      	b.n	800248e <HAL_TIM_Base_MspInit+0x82>
  else if(htim_base->Instance==TIM2)
 8002438:	687b      	ldr	r3, [r7, #4]
 800243a:	681b      	ldr	r3, [r3, #0]
 800243c:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8002440:	d10c      	bne.n	800245c <HAL_TIM_Base_MspInit+0x50>
    __HAL_RCC_TIM2_CLK_ENABLE();
 8002442:	4b16      	ldr	r3, [pc, #88]	@ (800249c <HAL_TIM_Base_MspInit+0x90>)
 8002444:	69db      	ldr	r3, [r3, #28]
 8002446:	4a15      	ldr	r2, [pc, #84]	@ (800249c <HAL_TIM_Base_MspInit+0x90>)
 8002448:	f043 0301 	orr.w	r3, r3, #1
 800244c:	61d3      	str	r3, [r2, #28]
 800244e:	4b13      	ldr	r3, [pc, #76]	@ (800249c <HAL_TIM_Base_MspInit+0x90>)
 8002450:	69db      	ldr	r3, [r3, #28]
 8002452:	f003 0301 	and.w	r3, r3, #1
 8002456:	613b      	str	r3, [r7, #16]
 8002458:	693b      	ldr	r3, [r7, #16]
}
 800245a:	e018      	b.n	800248e <HAL_TIM_Base_MspInit+0x82>
  else if(htim_base->Instance==TIM3)
 800245c:	687b      	ldr	r3, [r7, #4]
 800245e:	681b      	ldr	r3, [r3, #0]
 8002460:	4a0f      	ldr	r2, [pc, #60]	@ (80024a0 <HAL_TIM_Base_MspInit+0x94>)
 8002462:	4293      	cmp	r3, r2
 8002464:	d113      	bne.n	800248e <HAL_TIM_Base_MspInit+0x82>
    __HAL_RCC_TIM3_CLK_ENABLE();
 8002466:	4b0d      	ldr	r3, [pc, #52]	@ (800249c <HAL_TIM_Base_MspInit+0x90>)
 8002468:	69db      	ldr	r3, [r3, #28]
 800246a:	4a0c      	ldr	r2, [pc, #48]	@ (800249c <HAL_TIM_Base_MspInit+0x90>)
 800246c:	f043 0302 	orr.w	r3, r3, #2
 8002470:	61d3      	str	r3, [r2, #28]
 8002472:	4b0a      	ldr	r3, [pc, #40]	@ (800249c <HAL_TIM_Base_MspInit+0x90>)
 8002474:	69db      	ldr	r3, [r3, #28]
 8002476:	f003 0302 	and.w	r3, r3, #2
 800247a:	60fb      	str	r3, [r7, #12]
 800247c:	68fb      	ldr	r3, [r7, #12]
    HAL_NVIC_SetPriority(TIM3_IRQn, 0, 0);
 800247e:	2200      	movs	r2, #0
 8002480:	2100      	movs	r1, #0
 8002482:	201d      	movs	r0, #29
 8002484:	f000 fbaf 	bl	8002be6 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM3_IRQn);
 8002488:	201d      	movs	r0, #29
 800248a:	f000 fbc8 	bl	8002c1e <HAL_NVIC_EnableIRQ>
}
 800248e:	bf00      	nop
 8002490:	3718      	adds	r7, #24
 8002492:	46bd      	mov	sp, r7
 8002494:	bd80      	pop	{r7, pc}
 8002496:	bf00      	nop
 8002498:	40012c00 	.word	0x40012c00
 800249c:	40021000 	.word	0x40021000
 80024a0:	40000400 	.word	0x40000400

080024a4 <HAL_TIM_MspPostInit>:

void HAL_TIM_MspPostInit(TIM_HandleTypeDef* htim)
{
 80024a4:	b580      	push	{r7, lr}
 80024a6:	b08a      	sub	sp, #40	@ 0x28
 80024a8:	af00      	add	r7, sp, #0
 80024aa:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80024ac:	f107 0314 	add.w	r3, r7, #20
 80024b0:	2200      	movs	r2, #0
 80024b2:	601a      	str	r2, [r3, #0]
 80024b4:	605a      	str	r2, [r3, #4]
 80024b6:	609a      	str	r2, [r3, #8]
 80024b8:	60da      	str	r2, [r3, #12]
 80024ba:	611a      	str	r2, [r3, #16]
  if(htim->Instance==TIM1)
 80024bc:	687b      	ldr	r3, [r7, #4]
 80024be:	681b      	ldr	r3, [r3, #0]
 80024c0:	4a2c      	ldr	r2, [pc, #176]	@ (8002574 <HAL_TIM_MspPostInit+0xd0>)
 80024c2:	4293      	cmp	r3, r2
 80024c4:	d130      	bne.n	8002528 <HAL_TIM_MspPostInit+0x84>
  {
  /* USER CODE BEGIN TIM1_MspPostInit 0 */

  /* USER CODE END TIM1_MspPostInit 0 */
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80024c6:	4b2c      	ldr	r3, [pc, #176]	@ (8002578 <HAL_TIM_MspPostInit+0xd4>)
 80024c8:	695b      	ldr	r3, [r3, #20]
 80024ca:	4a2b      	ldr	r2, [pc, #172]	@ (8002578 <HAL_TIM_MspPostInit+0xd4>)
 80024cc:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 80024d0:	6153      	str	r3, [r2, #20]
 80024d2:	4b29      	ldr	r3, [pc, #164]	@ (8002578 <HAL_TIM_MspPostInit+0xd4>)
 80024d4:	695b      	ldr	r3, [r3, #20]
 80024d6:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80024da:	613b      	str	r3, [r7, #16]
 80024dc:	693b      	ldr	r3, [r7, #16]
    /**TIM1 GPIO Configuration
    PA8     ------> TIM1_CH1
    PA11     ------> TIM1_CH4
    */
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 80024de:	f44f 7380 	mov.w	r3, #256	@ 0x100
 80024e2:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80024e4:	2302      	movs	r3, #2
 80024e6:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80024e8:	2300      	movs	r3, #0
 80024ea:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80024ec:	2300      	movs	r3, #0
 80024ee:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF6_TIM1;
 80024f0:	2306      	movs	r3, #6
 80024f2:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80024f4:	f107 0314 	add.w	r3, r7, #20
 80024f8:	4619      	mov	r1, r3
 80024fa:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 80024fe:	f000 fc25 	bl	8002d4c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_11;
 8002502:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 8002506:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002508:	2302      	movs	r3, #2
 800250a:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800250c:	2300      	movs	r3, #0
 800250e:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002510:	2300      	movs	r3, #0
 8002512:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF11_TIM1;
 8002514:	230b      	movs	r3, #11
 8002516:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002518:	f107 0314 	add.w	r3, r7, #20
 800251c:	4619      	mov	r1, r3
 800251e:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8002522:	f000 fc13 	bl	8002d4c <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM2_MspPostInit 1 */

  /* USER CODE END TIM2_MspPostInit 1 */
  }

}
 8002526:	e021      	b.n	800256c <HAL_TIM_MspPostInit+0xc8>
  else if(htim->Instance==TIM2)
 8002528:	687b      	ldr	r3, [r7, #4]
 800252a:	681b      	ldr	r3, [r3, #0]
 800252c:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8002530:	d11c      	bne.n	800256c <HAL_TIM_MspPostInit+0xc8>
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002532:	4b11      	ldr	r3, [pc, #68]	@ (8002578 <HAL_TIM_MspPostInit+0xd4>)
 8002534:	695b      	ldr	r3, [r3, #20]
 8002536:	4a10      	ldr	r2, [pc, #64]	@ (8002578 <HAL_TIM_MspPostInit+0xd4>)
 8002538:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 800253c:	6153      	str	r3, [r2, #20]
 800253e:	4b0e      	ldr	r3, [pc, #56]	@ (8002578 <HAL_TIM_MspPostInit+0xd4>)
 8002540:	695b      	ldr	r3, [r3, #20]
 8002542:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002546:	60fb      	str	r3, [r7, #12]
 8002548:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 800254a:	2303      	movs	r3, #3
 800254c:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800254e:	2302      	movs	r3, #2
 8002550:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002552:	2300      	movs	r3, #0
 8002554:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002556:	2300      	movs	r3, #0
 8002558:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF1_TIM2;
 800255a:	2301      	movs	r3, #1
 800255c:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800255e:	f107 0314 	add.w	r3, r7, #20
 8002562:	4619      	mov	r1, r3
 8002564:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8002568:	f000 fbf0 	bl	8002d4c <HAL_GPIO_Init>
}
 800256c:	bf00      	nop
 800256e:	3728      	adds	r7, #40	@ 0x28
 8002570:	46bd      	mov	sp, r7
 8002572:	bd80      	pop	{r7, pc}
 8002574:	40012c00 	.word	0x40012c00
 8002578:	40021000 	.word	0x40021000

0800257c <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 800257c:	b580      	push	{r7, lr}
 800257e:	b08c      	sub	sp, #48	@ 0x30
 8002580:	af00      	add	r7, sp, #0
 8002582:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002584:	f107 031c 	add.w	r3, r7, #28
 8002588:	2200      	movs	r2, #0
 800258a:	601a      	str	r2, [r3, #0]
 800258c:	605a      	str	r2, [r3, #4]
 800258e:	609a      	str	r2, [r3, #8]
 8002590:	60da      	str	r2, [r3, #12]
 8002592:	611a      	str	r2, [r3, #16]
  if(huart->Instance==USART1)
 8002594:	687b      	ldr	r3, [r7, #4]
 8002596:	681b      	ldr	r3, [r3, #0]
 8002598:	4a37      	ldr	r2, [pc, #220]	@ (8002678 <HAL_UART_MspInit+0xfc>)
 800259a:	4293      	cmp	r3, r2
 800259c:	d132      	bne.n	8002604 <HAL_UART_MspInit+0x88>
  {
  /* USER CODE BEGIN USART1_MspInit 0 */

  /* USER CODE END USART1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_USART1_CLK_ENABLE();
 800259e:	4b37      	ldr	r3, [pc, #220]	@ (800267c <HAL_UART_MspInit+0x100>)
 80025a0:	699b      	ldr	r3, [r3, #24]
 80025a2:	4a36      	ldr	r2, [pc, #216]	@ (800267c <HAL_UART_MspInit+0x100>)
 80025a4:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 80025a8:	6193      	str	r3, [r2, #24]
 80025aa:	4b34      	ldr	r3, [pc, #208]	@ (800267c <HAL_UART_MspInit+0x100>)
 80025ac:	699b      	ldr	r3, [r3, #24]
 80025ae:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 80025b2:	61bb      	str	r3, [r7, #24]
 80025b4:	69bb      	ldr	r3, [r7, #24]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 80025b6:	4b31      	ldr	r3, [pc, #196]	@ (800267c <HAL_UART_MspInit+0x100>)
 80025b8:	695b      	ldr	r3, [r3, #20]
 80025ba:	4a30      	ldr	r2, [pc, #192]	@ (800267c <HAL_UART_MspInit+0x100>)
 80025bc:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 80025c0:	6153      	str	r3, [r2, #20]
 80025c2:	4b2e      	ldr	r3, [pc, #184]	@ (800267c <HAL_UART_MspInit+0x100>)
 80025c4:	695b      	ldr	r3, [r3, #20]
 80025c6:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80025ca:	617b      	str	r3, [r7, #20]
 80025cc:	697b      	ldr	r3, [r7, #20]
    /**USART1 GPIO Configuration
    PA9     ------> USART1_TX
    PA10     ------> USART1_RX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_10;
 80025ce:	f44f 63c0 	mov.w	r3, #1536	@ 0x600
 80025d2:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80025d4:	2302      	movs	r3, #2
 80025d6:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80025d8:	2300      	movs	r3, #0
 80025da:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80025dc:	2303      	movs	r3, #3
 80025de:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 80025e0:	2307      	movs	r3, #7
 80025e2:	62fb      	str	r3, [r7, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80025e4:	f107 031c 	add.w	r3, r7, #28
 80025e8:	4619      	mov	r1, r3
 80025ea:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 80025ee:	f000 fbad 	bl	8002d4c <HAL_GPIO_Init>

    /* USART1 interrupt Init */
    HAL_NVIC_SetPriority(USART1_IRQn, 0, 0);
 80025f2:	2200      	movs	r2, #0
 80025f4:	2100      	movs	r1, #0
 80025f6:	2025      	movs	r0, #37	@ 0x25
 80025f8:	f000 faf5 	bl	8002be6 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART1_IRQn);
 80025fc:	2025      	movs	r0, #37	@ 0x25
 80025fe:	f000 fb0e 	bl	8002c1e <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN USART2_MspInit 1 */

  /* USER CODE END USART2_MspInit 1 */
  }

}
 8002602:	e035      	b.n	8002670 <HAL_UART_MspInit+0xf4>
  else if(huart->Instance==USART2)
 8002604:	687b      	ldr	r3, [r7, #4]
 8002606:	681b      	ldr	r3, [r3, #0]
 8002608:	4a1d      	ldr	r2, [pc, #116]	@ (8002680 <HAL_UART_MspInit+0x104>)
 800260a:	4293      	cmp	r3, r2
 800260c:	d130      	bne.n	8002670 <HAL_UART_MspInit+0xf4>
    __HAL_RCC_USART2_CLK_ENABLE();
 800260e:	4b1b      	ldr	r3, [pc, #108]	@ (800267c <HAL_UART_MspInit+0x100>)
 8002610:	69db      	ldr	r3, [r3, #28]
 8002612:	4a1a      	ldr	r2, [pc, #104]	@ (800267c <HAL_UART_MspInit+0x100>)
 8002614:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8002618:	61d3      	str	r3, [r2, #28]
 800261a:	4b18      	ldr	r3, [pc, #96]	@ (800267c <HAL_UART_MspInit+0x100>)
 800261c:	69db      	ldr	r3, [r3, #28]
 800261e:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002622:	613b      	str	r3, [r7, #16]
 8002624:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002626:	4b15      	ldr	r3, [pc, #84]	@ (800267c <HAL_UART_MspInit+0x100>)
 8002628:	695b      	ldr	r3, [r3, #20]
 800262a:	4a14      	ldr	r2, [pc, #80]	@ (800267c <HAL_UART_MspInit+0x100>)
 800262c:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8002630:	6153      	str	r3, [r2, #20]
 8002632:	4b12      	ldr	r3, [pc, #72]	@ (800267c <HAL_UART_MspInit+0x100>)
 8002634:	695b      	ldr	r3, [r3, #20]
 8002636:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800263a:	60fb      	str	r3, [r7, #12]
 800263c:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = VCP_TX_Pin|VCP_RX_Pin;
 800263e:	230c      	movs	r3, #12
 8002640:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002642:	2302      	movs	r3, #2
 8002644:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002646:	2300      	movs	r3, #0
 8002648:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800264a:	2303      	movs	r3, #3
 800264c:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 800264e:	2307      	movs	r3, #7
 8002650:	62fb      	str	r3, [r7, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002652:	f107 031c 	add.w	r3, r7, #28
 8002656:	4619      	mov	r1, r3
 8002658:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 800265c:	f000 fb76 	bl	8002d4c <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(USART2_IRQn, 0, 0);
 8002660:	2200      	movs	r2, #0
 8002662:	2100      	movs	r1, #0
 8002664:	2026      	movs	r0, #38	@ 0x26
 8002666:	f000 fabe 	bl	8002be6 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART2_IRQn);
 800266a:	2026      	movs	r0, #38	@ 0x26
 800266c:	f000 fad7 	bl	8002c1e <HAL_NVIC_EnableIRQ>
}
 8002670:	bf00      	nop
 8002672:	3730      	adds	r7, #48	@ 0x30
 8002674:	46bd      	mov	sp, r7
 8002676:	bd80      	pop	{r7, pc}
 8002678:	40013800 	.word	0x40013800
 800267c:	40021000 	.word	0x40021000
 8002680:	40004400 	.word	0x40004400

08002684 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8002684:	b480      	push	{r7}
 8002686:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 8002688:	bf00      	nop
 800268a:	e7fd      	b.n	8002688 <NMI_Handler+0x4>

0800268c <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 800268c:	b480      	push	{r7}
 800268e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8002690:	bf00      	nop
 8002692:	e7fd      	b.n	8002690 <HardFault_Handler+0x4>

08002694 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8002694:	b480      	push	{r7}
 8002696:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8002698:	bf00      	nop
 800269a:	e7fd      	b.n	8002698 <MemManage_Handler+0x4>

0800269c <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 800269c:	b480      	push	{r7}
 800269e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 80026a0:	bf00      	nop
 80026a2:	e7fd      	b.n	80026a0 <BusFault_Handler+0x4>

080026a4 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 80026a4:	b480      	push	{r7}
 80026a6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 80026a8:	bf00      	nop
 80026aa:	e7fd      	b.n	80026a8 <UsageFault_Handler+0x4>

080026ac <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 80026ac:	b480      	push	{r7}
 80026ae:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 80026b0:	bf00      	nop
 80026b2:	46bd      	mov	sp, r7
 80026b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80026b8:	4770      	bx	lr

080026ba <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 80026ba:	b480      	push	{r7}
 80026bc:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 80026be:	bf00      	nop
 80026c0:	46bd      	mov	sp, r7
 80026c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80026c6:	4770      	bx	lr

080026c8 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 80026c8:	b480      	push	{r7}
 80026ca:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 80026cc:	bf00      	nop
 80026ce:	46bd      	mov	sp, r7
 80026d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80026d4:	4770      	bx	lr

080026d6 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 80026d6:	b580      	push	{r7, lr}
 80026d8:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 80026da:	f000 f965 	bl	80029a8 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 80026de:	bf00      	nop
 80026e0:	bd80      	pop	{r7, pc}
	...

080026e4 <TIM3_IRQHandler>:

/**
  * @brief This function handles TIM3 global interrupt.
  */
void TIM3_IRQHandler(void)
{
 80026e4:	b580      	push	{r7, lr}
 80026e6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM3_IRQn 0 */

	/* USER CODE END TIM3_IRQn 0 */
	HAL_TIM_IRQHandler(&htim3);
 80026e8:	480b      	ldr	r0, [pc, #44]	@ (8002718 <TIM3_IRQHandler+0x34>)
 80026ea:	f003 f863 	bl	80057b4 <HAL_TIM_IRQHandler>
	/* USER CODE BEGIN TIM3_IRQn 1 */
	control_update_flag = 1;
 80026ee:	4b0b      	ldr	r3, [pc, #44]	@ (800271c <TIM3_IRQHandler+0x38>)
 80026f0:	2201      	movs	r2, #1
 80026f2:	701a      	strb	r2, [r3, #0]

	//cada 300 ticks enviar datos
	if (sendDelay == 150) {
 80026f4:	4b0a      	ldr	r3, [pc, #40]	@ (8002720 <TIM3_IRQHandler+0x3c>)
 80026f6:	881b      	ldrh	r3, [r3, #0]
 80026f8:	2b96      	cmp	r3, #150	@ 0x96
 80026fa:	d105      	bne.n	8002708 <TIM3_IRQHandler+0x24>
		sendDelay = 0;
 80026fc:	4b08      	ldr	r3, [pc, #32]	@ (8002720 <TIM3_IRQHandler+0x3c>)
 80026fe:	2200      	movs	r2, #0
 8002700:	801a      	strh	r2, [r3, #0]
		send_data_flag = 1;
 8002702:	4b08      	ldr	r3, [pc, #32]	@ (8002724 <TIM3_IRQHandler+0x40>)
 8002704:	2201      	movs	r2, #1
 8002706:	701a      	strb	r2, [r3, #0]

	}


	sendDelay++;
 8002708:	4b05      	ldr	r3, [pc, #20]	@ (8002720 <TIM3_IRQHandler+0x3c>)
 800270a:	881b      	ldrh	r3, [r3, #0]
 800270c:	3301      	adds	r3, #1
 800270e:	b29a      	uxth	r2, r3
 8002710:	4b03      	ldr	r3, [pc, #12]	@ (8002720 <TIM3_IRQHandler+0x3c>)
 8002712:	801a      	strh	r2, [r3, #0]
  /* USER CODE END TIM3_IRQn 1 */
}
 8002714:	bf00      	nop
 8002716:	bd80      	pop	{r7, pc}
 8002718:	2000035c 	.word	0x2000035c
 800271c:	2000053e 	.word	0x2000053e
 8002720:	20000540 	.word	0x20000540
 8002724:	2000053f 	.word	0x2000053f

08002728 <USART1_IRQHandler>:

/**
  * @brief This function handles USART1 global interrupt / USART1 wake-up interrupt through EXT line 25.
  */
void USART1_IRQHandler(void)
{
 8002728:	b580      	push	{r7, lr}
 800272a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USART1_IRQn 0 */

  /* USER CODE END USART1_IRQn 0 */
  HAL_UART_IRQHandler(&huart1);
 800272c:	4802      	ldr	r0, [pc, #8]	@ (8002738 <USART1_IRQHandler+0x10>)
 800272e:	f004 f95d 	bl	80069ec <HAL_UART_IRQHandler>
  /* USER CODE BEGIN USART1_IRQn 1 */

  /* USER CODE END USART1_IRQn 1 */
}
 8002732:	bf00      	nop
 8002734:	bd80      	pop	{r7, pc}
 8002736:	bf00      	nop
 8002738:	200003a8 	.word	0x200003a8

0800273c <USART2_IRQHandler>:

/**
  * @brief This function handles USART2 global interrupt / USART2 wake-up interrupt through EXT line 26.
  */
void USART2_IRQHandler(void)
{
 800273c:	b580      	push	{r7, lr}
 800273e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USART2_IRQn 0 */

  /* USER CODE END USART2_IRQn 0 */
  HAL_UART_IRQHandler(&huart2);
 8002740:	4802      	ldr	r0, [pc, #8]	@ (800274c <USART2_IRQHandler+0x10>)
 8002742:	f004 f953 	bl	80069ec <HAL_UART_IRQHandler>
  /* USER CODE BEGIN USART2_IRQn 1 */

  /* USER CODE END USART2_IRQn 1 */
}
 8002746:	bf00      	nop
 8002748:	bd80      	pop	{r7, pc}
 800274a:	bf00      	nop
 800274c:	20000430 	.word	0x20000430

08002750 <_getpid>:
 8002750:	b480      	push	{r7}
 8002752:	af00      	add	r7, sp, #0
 8002754:	2301      	movs	r3, #1
 8002756:	4618      	mov	r0, r3
 8002758:	46bd      	mov	sp, r7
 800275a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800275e:	4770      	bx	lr

08002760 <_kill>:
 8002760:	b580      	push	{r7, lr}
 8002762:	b082      	sub	sp, #8
 8002764:	af00      	add	r7, sp, #0
 8002766:	6078      	str	r0, [r7, #4]
 8002768:	6039      	str	r1, [r7, #0]
 800276a:	f006 f9d1 	bl	8008b10 <__errno>
 800276e:	4603      	mov	r3, r0
 8002770:	2216      	movs	r2, #22
 8002772:	601a      	str	r2, [r3, #0]
 8002774:	f04f 33ff 	mov.w	r3, #4294967295
 8002778:	4618      	mov	r0, r3
 800277a:	3708      	adds	r7, #8
 800277c:	46bd      	mov	sp, r7
 800277e:	bd80      	pop	{r7, pc}

08002780 <_exit>:
 8002780:	b580      	push	{r7, lr}
 8002782:	b082      	sub	sp, #8
 8002784:	af00      	add	r7, sp, #0
 8002786:	6078      	str	r0, [r7, #4]
 8002788:	f04f 31ff 	mov.w	r1, #4294967295
 800278c:	6878      	ldr	r0, [r7, #4]
 800278e:	f7ff ffe7 	bl	8002760 <_kill>
 8002792:	bf00      	nop
 8002794:	e7fd      	b.n	8002792 <_exit+0x12>

08002796 <_read>:
 8002796:	b580      	push	{r7, lr}
 8002798:	b086      	sub	sp, #24
 800279a:	af00      	add	r7, sp, #0
 800279c:	60f8      	str	r0, [r7, #12]
 800279e:	60b9      	str	r1, [r7, #8]
 80027a0:	607a      	str	r2, [r7, #4]
 80027a2:	2300      	movs	r3, #0
 80027a4:	617b      	str	r3, [r7, #20]
 80027a6:	e00a      	b.n	80027be <_read+0x28>
 80027a8:	f3af 8000 	nop.w
 80027ac:	4601      	mov	r1, r0
 80027ae:	68bb      	ldr	r3, [r7, #8]
 80027b0:	1c5a      	adds	r2, r3, #1
 80027b2:	60ba      	str	r2, [r7, #8]
 80027b4:	b2ca      	uxtb	r2, r1
 80027b6:	701a      	strb	r2, [r3, #0]
 80027b8:	697b      	ldr	r3, [r7, #20]
 80027ba:	3301      	adds	r3, #1
 80027bc:	617b      	str	r3, [r7, #20]
 80027be:	697a      	ldr	r2, [r7, #20]
 80027c0:	687b      	ldr	r3, [r7, #4]
 80027c2:	429a      	cmp	r2, r3
 80027c4:	dbf0      	blt.n	80027a8 <_read+0x12>
 80027c6:	687b      	ldr	r3, [r7, #4]
 80027c8:	4618      	mov	r0, r3
 80027ca:	3718      	adds	r7, #24
 80027cc:	46bd      	mov	sp, r7
 80027ce:	bd80      	pop	{r7, pc}

080027d0 <_close>:
 80027d0:	b480      	push	{r7}
 80027d2:	b083      	sub	sp, #12
 80027d4:	af00      	add	r7, sp, #0
 80027d6:	6078      	str	r0, [r7, #4]
 80027d8:	f04f 33ff 	mov.w	r3, #4294967295
 80027dc:	4618      	mov	r0, r3
 80027de:	370c      	adds	r7, #12
 80027e0:	46bd      	mov	sp, r7
 80027e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80027e6:	4770      	bx	lr

080027e8 <_fstat>:
 80027e8:	b480      	push	{r7}
 80027ea:	b083      	sub	sp, #12
 80027ec:	af00      	add	r7, sp, #0
 80027ee:	6078      	str	r0, [r7, #4]
 80027f0:	6039      	str	r1, [r7, #0]
 80027f2:	683b      	ldr	r3, [r7, #0]
 80027f4:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 80027f8:	605a      	str	r2, [r3, #4]
 80027fa:	2300      	movs	r3, #0
 80027fc:	4618      	mov	r0, r3
 80027fe:	370c      	adds	r7, #12
 8002800:	46bd      	mov	sp, r7
 8002802:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002806:	4770      	bx	lr

08002808 <_isatty>:
 8002808:	b480      	push	{r7}
 800280a:	b083      	sub	sp, #12
 800280c:	af00      	add	r7, sp, #0
 800280e:	6078      	str	r0, [r7, #4]
 8002810:	2301      	movs	r3, #1
 8002812:	4618      	mov	r0, r3
 8002814:	370c      	adds	r7, #12
 8002816:	46bd      	mov	sp, r7
 8002818:	f85d 7b04 	ldr.w	r7, [sp], #4
 800281c:	4770      	bx	lr

0800281e <_lseek>:
 800281e:	b480      	push	{r7}
 8002820:	b085      	sub	sp, #20
 8002822:	af00      	add	r7, sp, #0
 8002824:	60f8      	str	r0, [r7, #12]
 8002826:	60b9      	str	r1, [r7, #8]
 8002828:	607a      	str	r2, [r7, #4]
 800282a:	2300      	movs	r3, #0
 800282c:	4618      	mov	r0, r3
 800282e:	3714      	adds	r7, #20
 8002830:	46bd      	mov	sp, r7
 8002832:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002836:	4770      	bx	lr

08002838 <_sbrk>:
 8002838:	b580      	push	{r7, lr}
 800283a:	b086      	sub	sp, #24
 800283c:	af00      	add	r7, sp, #0
 800283e:	6078      	str	r0, [r7, #4]
 8002840:	4a14      	ldr	r2, [pc, #80]	@ (8002894 <_sbrk+0x5c>)
 8002842:	4b15      	ldr	r3, [pc, #84]	@ (8002898 <_sbrk+0x60>)
 8002844:	1ad3      	subs	r3, r2, r3
 8002846:	617b      	str	r3, [r7, #20]
 8002848:	697b      	ldr	r3, [r7, #20]
 800284a:	613b      	str	r3, [r7, #16]
 800284c:	4b13      	ldr	r3, [pc, #76]	@ (800289c <_sbrk+0x64>)
 800284e:	681b      	ldr	r3, [r3, #0]
 8002850:	2b00      	cmp	r3, #0
 8002852:	d102      	bne.n	800285a <_sbrk+0x22>
 8002854:	4b11      	ldr	r3, [pc, #68]	@ (800289c <_sbrk+0x64>)
 8002856:	4a12      	ldr	r2, [pc, #72]	@ (80028a0 <_sbrk+0x68>)
 8002858:	601a      	str	r2, [r3, #0]
 800285a:	4b10      	ldr	r3, [pc, #64]	@ (800289c <_sbrk+0x64>)
 800285c:	681a      	ldr	r2, [r3, #0]
 800285e:	687b      	ldr	r3, [r7, #4]
 8002860:	4413      	add	r3, r2
 8002862:	693a      	ldr	r2, [r7, #16]
 8002864:	429a      	cmp	r2, r3
 8002866:	d207      	bcs.n	8002878 <_sbrk+0x40>
 8002868:	f006 f952 	bl	8008b10 <__errno>
 800286c:	4603      	mov	r3, r0
 800286e:	220c      	movs	r2, #12
 8002870:	601a      	str	r2, [r3, #0]
 8002872:	f04f 33ff 	mov.w	r3, #4294967295
 8002876:	e009      	b.n	800288c <_sbrk+0x54>
 8002878:	4b08      	ldr	r3, [pc, #32]	@ (800289c <_sbrk+0x64>)
 800287a:	681b      	ldr	r3, [r3, #0]
 800287c:	60fb      	str	r3, [r7, #12]
 800287e:	4b07      	ldr	r3, [pc, #28]	@ (800289c <_sbrk+0x64>)
 8002880:	681a      	ldr	r2, [r3, #0]
 8002882:	687b      	ldr	r3, [r7, #4]
 8002884:	4413      	add	r3, r2
 8002886:	4a05      	ldr	r2, [pc, #20]	@ (800289c <_sbrk+0x64>)
 8002888:	6013      	str	r3, [r2, #0]
 800288a:	68fb      	ldr	r3, [r7, #12]
 800288c:	4618      	mov	r0, r3
 800288e:	3718      	adds	r7, #24
 8002890:	46bd      	mov	sp, r7
 8002892:	bd80      	pop	{r7, pc}
 8002894:	20003000 	.word	0x20003000
 8002898:	00000400 	.word	0x00000400
 800289c:	20000544 	.word	0x20000544
 80028a0:	20000698 	.word	0x20000698

080028a4 <SystemInit>:
 80028a4:	b480      	push	{r7}
 80028a6:	af00      	add	r7, sp, #0
 80028a8:	4b06      	ldr	r3, [pc, #24]	@ (80028c4 <SystemInit+0x20>)
 80028aa:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80028ae:	4a05      	ldr	r2, [pc, #20]	@ (80028c4 <SystemInit+0x20>)
 80028b0:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 80028b4:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
 80028b8:	bf00      	nop
 80028ba:	46bd      	mov	sp, r7
 80028bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80028c0:	4770      	bx	lr
 80028c2:	bf00      	nop
 80028c4:	e000ed00 	.word	0xe000ed00

080028c8 <Reset_Handler>:
 80028c8:	f8df d034 	ldr.w	sp, [pc, #52]	@ 8002900 <LoopForever+0x2>
 80028cc:	f7ff ffea 	bl	80028a4 <SystemInit>
 80028d0:	480c      	ldr	r0, [pc, #48]	@ (8002904 <LoopForever+0x6>)
 80028d2:	490d      	ldr	r1, [pc, #52]	@ (8002908 <LoopForever+0xa>)
 80028d4:	4a0d      	ldr	r2, [pc, #52]	@ (800290c <LoopForever+0xe>)
 80028d6:	2300      	movs	r3, #0
 80028d8:	e002      	b.n	80028e0 <LoopCopyDataInit>

080028da <CopyDataInit>:
 80028da:	58d4      	ldr	r4, [r2, r3]
 80028dc:	50c4      	str	r4, [r0, r3]
 80028de:	3304      	adds	r3, #4

080028e0 <LoopCopyDataInit>:
 80028e0:	18c4      	adds	r4, r0, r3
 80028e2:	428c      	cmp	r4, r1
 80028e4:	d3f9      	bcc.n	80028da <CopyDataInit>
 80028e6:	4a0a      	ldr	r2, [pc, #40]	@ (8002910 <LoopForever+0x12>)
 80028e8:	4c0a      	ldr	r4, [pc, #40]	@ (8002914 <LoopForever+0x16>)
 80028ea:	2300      	movs	r3, #0
 80028ec:	e001      	b.n	80028f2 <LoopFillZerobss>

080028ee <FillZerobss>:
 80028ee:	6013      	str	r3, [r2, #0]
 80028f0:	3204      	adds	r2, #4

080028f2 <LoopFillZerobss>:
 80028f2:	42a2      	cmp	r2, r4
 80028f4:	d3fb      	bcc.n	80028ee <FillZerobss>
 80028f6:	f006 f911 	bl	8008b1c <__libc_init_array>
 80028fa:	f7ff f969 	bl	8001bd0 <main>

080028fe <LoopForever>:
 80028fe:	e7fe      	b.n	80028fe <LoopForever>
 8002900:	20003000 	.word	0x20003000
 8002904:	20000000 	.word	0x20000000
 8002908:	200001d4 	.word	0x200001d4
 800290c:	0800b0e8 	.word	0x0800b0e8
 8002910:	200001d4 	.word	0x200001d4
 8002914:	20000698 	.word	0x20000698

08002918 <ADC1_2_IRQHandler>:
 8002918:	e7fe      	b.n	8002918 <ADC1_2_IRQHandler>
	...

0800291c <HAL_Init>:
 800291c:	b580      	push	{r7, lr}
 800291e:	af00      	add	r7, sp, #0
 8002920:	4b08      	ldr	r3, [pc, #32]	@ (8002944 <HAL_Init+0x28>)
 8002922:	681b      	ldr	r3, [r3, #0]
 8002924:	4a07      	ldr	r2, [pc, #28]	@ (8002944 <HAL_Init+0x28>)
 8002926:	f043 0310 	orr.w	r3, r3, #16
 800292a:	6013      	str	r3, [r2, #0]
 800292c:	2003      	movs	r0, #3
 800292e:	f000 f94f 	bl	8002bd0 <HAL_NVIC_SetPriorityGrouping>
 8002932:	2000      	movs	r0, #0
 8002934:	f000 f808 	bl	8002948 <HAL_InitTick>
 8002938:	f7ff fd00 	bl	800233c <HAL_MspInit>
 800293c:	2300      	movs	r3, #0
 800293e:	4618      	mov	r0, r3
 8002940:	bd80      	pop	{r7, pc}
 8002942:	bf00      	nop
 8002944:	40022000 	.word	0x40022000

08002948 <HAL_InitTick>:
 8002948:	b580      	push	{r7, lr}
 800294a:	b082      	sub	sp, #8
 800294c:	af00      	add	r7, sp, #0
 800294e:	6078      	str	r0, [r7, #4]
 8002950:	4b12      	ldr	r3, [pc, #72]	@ (800299c <HAL_InitTick+0x54>)
 8002952:	681a      	ldr	r2, [r3, #0]
 8002954:	4b12      	ldr	r3, [pc, #72]	@ (80029a0 <HAL_InitTick+0x58>)
 8002956:	781b      	ldrb	r3, [r3, #0]
 8002958:	4619      	mov	r1, r3
 800295a:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 800295e:	fbb3 f3f1 	udiv	r3, r3, r1
 8002962:	fbb2 f3f3 	udiv	r3, r2, r3
 8002966:	4618      	mov	r0, r3
 8002968:	f000 f967 	bl	8002c3a <HAL_SYSTICK_Config>
 800296c:	4603      	mov	r3, r0
 800296e:	2b00      	cmp	r3, #0
 8002970:	d001      	beq.n	8002976 <HAL_InitTick+0x2e>
 8002972:	2301      	movs	r3, #1
 8002974:	e00e      	b.n	8002994 <HAL_InitTick+0x4c>
 8002976:	687b      	ldr	r3, [r7, #4]
 8002978:	2b0f      	cmp	r3, #15
 800297a:	d80a      	bhi.n	8002992 <HAL_InitTick+0x4a>
 800297c:	2200      	movs	r2, #0
 800297e:	6879      	ldr	r1, [r7, #4]
 8002980:	f04f 30ff 	mov.w	r0, #4294967295
 8002984:	f000 f92f 	bl	8002be6 <HAL_NVIC_SetPriority>
 8002988:	4a06      	ldr	r2, [pc, #24]	@ (80029a4 <HAL_InitTick+0x5c>)
 800298a:	687b      	ldr	r3, [r7, #4]
 800298c:	6013      	str	r3, [r2, #0]
 800298e:	2300      	movs	r3, #0
 8002990:	e000      	b.n	8002994 <HAL_InitTick+0x4c>
 8002992:	2301      	movs	r3, #1
 8002994:	4618      	mov	r0, r3
 8002996:	3708      	adds	r7, #8
 8002998:	46bd      	mov	sp, r7
 800299a:	bd80      	pop	{r7, pc}
 800299c:	20000000 	.word	0x20000000
 80029a0:	20000008 	.word	0x20000008
 80029a4:	20000004 	.word	0x20000004

080029a8 <HAL_IncTick>:
 80029a8:	b480      	push	{r7}
 80029aa:	af00      	add	r7, sp, #0
 80029ac:	4b06      	ldr	r3, [pc, #24]	@ (80029c8 <HAL_IncTick+0x20>)
 80029ae:	781b      	ldrb	r3, [r3, #0]
 80029b0:	461a      	mov	r2, r3
 80029b2:	4b06      	ldr	r3, [pc, #24]	@ (80029cc <HAL_IncTick+0x24>)
 80029b4:	681b      	ldr	r3, [r3, #0]
 80029b6:	4413      	add	r3, r2
 80029b8:	4a04      	ldr	r2, [pc, #16]	@ (80029cc <HAL_IncTick+0x24>)
 80029ba:	6013      	str	r3, [r2, #0]
 80029bc:	bf00      	nop
 80029be:	46bd      	mov	sp, r7
 80029c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80029c4:	4770      	bx	lr
 80029c6:	bf00      	nop
 80029c8:	20000008 	.word	0x20000008
 80029cc:	20000548 	.word	0x20000548

080029d0 <HAL_GetTick>:
 80029d0:	b480      	push	{r7}
 80029d2:	af00      	add	r7, sp, #0
 80029d4:	4b03      	ldr	r3, [pc, #12]	@ (80029e4 <HAL_GetTick+0x14>)
 80029d6:	681b      	ldr	r3, [r3, #0]
 80029d8:	4618      	mov	r0, r3
 80029da:	46bd      	mov	sp, r7
 80029dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80029e0:	4770      	bx	lr
 80029e2:	bf00      	nop
 80029e4:	20000548 	.word	0x20000548

080029e8 <HAL_Delay>:
 80029e8:	b580      	push	{r7, lr}
 80029ea:	b084      	sub	sp, #16
 80029ec:	af00      	add	r7, sp, #0
 80029ee:	6078      	str	r0, [r7, #4]
 80029f0:	f7ff ffee 	bl	80029d0 <HAL_GetTick>
 80029f4:	60b8      	str	r0, [r7, #8]
 80029f6:	687b      	ldr	r3, [r7, #4]
 80029f8:	60fb      	str	r3, [r7, #12]
 80029fa:	68fb      	ldr	r3, [r7, #12]
 80029fc:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002a00:	d005      	beq.n	8002a0e <HAL_Delay+0x26>
 8002a02:	4b0a      	ldr	r3, [pc, #40]	@ (8002a2c <HAL_Delay+0x44>)
 8002a04:	781b      	ldrb	r3, [r3, #0]
 8002a06:	461a      	mov	r2, r3
 8002a08:	68fb      	ldr	r3, [r7, #12]
 8002a0a:	4413      	add	r3, r2
 8002a0c:	60fb      	str	r3, [r7, #12]
 8002a0e:	bf00      	nop
 8002a10:	f7ff ffde 	bl	80029d0 <HAL_GetTick>
 8002a14:	4602      	mov	r2, r0
 8002a16:	68bb      	ldr	r3, [r7, #8]
 8002a18:	1ad3      	subs	r3, r2, r3
 8002a1a:	68fa      	ldr	r2, [r7, #12]
 8002a1c:	429a      	cmp	r2, r3
 8002a1e:	d8f7      	bhi.n	8002a10 <HAL_Delay+0x28>
 8002a20:	bf00      	nop
 8002a22:	bf00      	nop
 8002a24:	3710      	adds	r7, #16
 8002a26:	46bd      	mov	sp, r7
 8002a28:	bd80      	pop	{r7, pc}
 8002a2a:	bf00      	nop
 8002a2c:	20000008 	.word	0x20000008

08002a30 <__NVIC_SetPriorityGrouping>:
 8002a30:	b480      	push	{r7}
 8002a32:	b085      	sub	sp, #20
 8002a34:	af00      	add	r7, sp, #0
 8002a36:	6078      	str	r0, [r7, #4]
 8002a38:	687b      	ldr	r3, [r7, #4]
 8002a3a:	f003 0307 	and.w	r3, r3, #7
 8002a3e:	60fb      	str	r3, [r7, #12]
 8002a40:	4b0c      	ldr	r3, [pc, #48]	@ (8002a74 <__NVIC_SetPriorityGrouping+0x44>)
 8002a42:	68db      	ldr	r3, [r3, #12]
 8002a44:	60bb      	str	r3, [r7, #8]
 8002a46:	68ba      	ldr	r2, [r7, #8]
 8002a48:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 8002a4c:	4013      	ands	r3, r2
 8002a4e:	60bb      	str	r3, [r7, #8]
 8002a50:	68fb      	ldr	r3, [r7, #12]
 8002a52:	021a      	lsls	r2, r3, #8
 8002a54:	68bb      	ldr	r3, [r7, #8]
 8002a56:	4313      	orrs	r3, r2
 8002a58:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 8002a5c:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8002a60:	60bb      	str	r3, [r7, #8]
 8002a62:	4a04      	ldr	r2, [pc, #16]	@ (8002a74 <__NVIC_SetPriorityGrouping+0x44>)
 8002a64:	68bb      	ldr	r3, [r7, #8]
 8002a66:	60d3      	str	r3, [r2, #12]
 8002a68:	bf00      	nop
 8002a6a:	3714      	adds	r7, #20
 8002a6c:	46bd      	mov	sp, r7
 8002a6e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002a72:	4770      	bx	lr
 8002a74:	e000ed00 	.word	0xe000ed00

08002a78 <__NVIC_GetPriorityGrouping>:
 8002a78:	b480      	push	{r7}
 8002a7a:	af00      	add	r7, sp, #0
 8002a7c:	4b04      	ldr	r3, [pc, #16]	@ (8002a90 <__NVIC_GetPriorityGrouping+0x18>)
 8002a7e:	68db      	ldr	r3, [r3, #12]
 8002a80:	0a1b      	lsrs	r3, r3, #8
 8002a82:	f003 0307 	and.w	r3, r3, #7
 8002a86:	4618      	mov	r0, r3
 8002a88:	46bd      	mov	sp, r7
 8002a8a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002a8e:	4770      	bx	lr
 8002a90:	e000ed00 	.word	0xe000ed00

08002a94 <__NVIC_EnableIRQ>:
 8002a94:	b480      	push	{r7}
 8002a96:	b083      	sub	sp, #12
 8002a98:	af00      	add	r7, sp, #0
 8002a9a:	4603      	mov	r3, r0
 8002a9c:	71fb      	strb	r3, [r7, #7]
 8002a9e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002aa2:	2b00      	cmp	r3, #0
 8002aa4:	db0b      	blt.n	8002abe <__NVIC_EnableIRQ+0x2a>
 8002aa6:	79fb      	ldrb	r3, [r7, #7]
 8002aa8:	f003 021f 	and.w	r2, r3, #31
 8002aac:	4907      	ldr	r1, [pc, #28]	@ (8002acc <__NVIC_EnableIRQ+0x38>)
 8002aae:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002ab2:	095b      	lsrs	r3, r3, #5
 8002ab4:	2001      	movs	r0, #1
 8002ab6:	fa00 f202 	lsl.w	r2, r0, r2
 8002aba:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8002abe:	bf00      	nop
 8002ac0:	370c      	adds	r7, #12
 8002ac2:	46bd      	mov	sp, r7
 8002ac4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002ac8:	4770      	bx	lr
 8002aca:	bf00      	nop
 8002acc:	e000e100 	.word	0xe000e100

08002ad0 <__NVIC_SetPriority>:
 8002ad0:	b480      	push	{r7}
 8002ad2:	b083      	sub	sp, #12
 8002ad4:	af00      	add	r7, sp, #0
 8002ad6:	4603      	mov	r3, r0
 8002ad8:	6039      	str	r1, [r7, #0]
 8002ada:	71fb      	strb	r3, [r7, #7]
 8002adc:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002ae0:	2b00      	cmp	r3, #0
 8002ae2:	db0a      	blt.n	8002afa <__NVIC_SetPriority+0x2a>
 8002ae4:	683b      	ldr	r3, [r7, #0]
 8002ae6:	b2da      	uxtb	r2, r3
 8002ae8:	490c      	ldr	r1, [pc, #48]	@ (8002b1c <__NVIC_SetPriority+0x4c>)
 8002aea:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002aee:	0112      	lsls	r2, r2, #4
 8002af0:	b2d2      	uxtb	r2, r2
 8002af2:	440b      	add	r3, r1
 8002af4:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 8002af8:	e00a      	b.n	8002b10 <__NVIC_SetPriority+0x40>
 8002afa:	683b      	ldr	r3, [r7, #0]
 8002afc:	b2da      	uxtb	r2, r3
 8002afe:	4908      	ldr	r1, [pc, #32]	@ (8002b20 <__NVIC_SetPriority+0x50>)
 8002b00:	79fb      	ldrb	r3, [r7, #7]
 8002b02:	f003 030f 	and.w	r3, r3, #15
 8002b06:	3b04      	subs	r3, #4
 8002b08:	0112      	lsls	r2, r2, #4
 8002b0a:	b2d2      	uxtb	r2, r2
 8002b0c:	440b      	add	r3, r1
 8002b0e:	761a      	strb	r2, [r3, #24]
 8002b10:	bf00      	nop
 8002b12:	370c      	adds	r7, #12
 8002b14:	46bd      	mov	sp, r7
 8002b16:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002b1a:	4770      	bx	lr
 8002b1c:	e000e100 	.word	0xe000e100
 8002b20:	e000ed00 	.word	0xe000ed00

08002b24 <NVIC_EncodePriority>:
 8002b24:	b480      	push	{r7}
 8002b26:	b089      	sub	sp, #36	@ 0x24
 8002b28:	af00      	add	r7, sp, #0
 8002b2a:	60f8      	str	r0, [r7, #12]
 8002b2c:	60b9      	str	r1, [r7, #8]
 8002b2e:	607a      	str	r2, [r7, #4]
 8002b30:	68fb      	ldr	r3, [r7, #12]
 8002b32:	f003 0307 	and.w	r3, r3, #7
 8002b36:	61fb      	str	r3, [r7, #28]
 8002b38:	69fb      	ldr	r3, [r7, #28]
 8002b3a:	f1c3 0307 	rsb	r3, r3, #7
 8002b3e:	2b04      	cmp	r3, #4
 8002b40:	bf28      	it	cs
 8002b42:	2304      	movcs	r3, #4
 8002b44:	61bb      	str	r3, [r7, #24]
 8002b46:	69fb      	ldr	r3, [r7, #28]
 8002b48:	3304      	adds	r3, #4
 8002b4a:	2b06      	cmp	r3, #6
 8002b4c:	d902      	bls.n	8002b54 <NVIC_EncodePriority+0x30>
 8002b4e:	69fb      	ldr	r3, [r7, #28]
 8002b50:	3b03      	subs	r3, #3
 8002b52:	e000      	b.n	8002b56 <NVIC_EncodePriority+0x32>
 8002b54:	2300      	movs	r3, #0
 8002b56:	617b      	str	r3, [r7, #20]
 8002b58:	f04f 32ff 	mov.w	r2, #4294967295
 8002b5c:	69bb      	ldr	r3, [r7, #24]
 8002b5e:	fa02 f303 	lsl.w	r3, r2, r3
 8002b62:	43da      	mvns	r2, r3
 8002b64:	68bb      	ldr	r3, [r7, #8]
 8002b66:	401a      	ands	r2, r3
 8002b68:	697b      	ldr	r3, [r7, #20]
 8002b6a:	409a      	lsls	r2, r3
 8002b6c:	f04f 31ff 	mov.w	r1, #4294967295
 8002b70:	697b      	ldr	r3, [r7, #20]
 8002b72:	fa01 f303 	lsl.w	r3, r1, r3
 8002b76:	43d9      	mvns	r1, r3
 8002b78:	687b      	ldr	r3, [r7, #4]
 8002b7a:	400b      	ands	r3, r1
 8002b7c:	4313      	orrs	r3, r2
 8002b7e:	4618      	mov	r0, r3
 8002b80:	3724      	adds	r7, #36	@ 0x24
 8002b82:	46bd      	mov	sp, r7
 8002b84:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002b88:	4770      	bx	lr
	...

08002b8c <SysTick_Config>:
 8002b8c:	b580      	push	{r7, lr}
 8002b8e:	b082      	sub	sp, #8
 8002b90:	af00      	add	r7, sp, #0
 8002b92:	6078      	str	r0, [r7, #4]
 8002b94:	687b      	ldr	r3, [r7, #4]
 8002b96:	3b01      	subs	r3, #1
 8002b98:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8002b9c:	d301      	bcc.n	8002ba2 <SysTick_Config+0x16>
 8002b9e:	2301      	movs	r3, #1
 8002ba0:	e00f      	b.n	8002bc2 <SysTick_Config+0x36>
 8002ba2:	4a0a      	ldr	r2, [pc, #40]	@ (8002bcc <SysTick_Config+0x40>)
 8002ba4:	687b      	ldr	r3, [r7, #4]
 8002ba6:	3b01      	subs	r3, #1
 8002ba8:	6053      	str	r3, [r2, #4]
 8002baa:	210f      	movs	r1, #15
 8002bac:	f04f 30ff 	mov.w	r0, #4294967295
 8002bb0:	f7ff ff8e 	bl	8002ad0 <__NVIC_SetPriority>
 8002bb4:	4b05      	ldr	r3, [pc, #20]	@ (8002bcc <SysTick_Config+0x40>)
 8002bb6:	2200      	movs	r2, #0
 8002bb8:	609a      	str	r2, [r3, #8]
 8002bba:	4b04      	ldr	r3, [pc, #16]	@ (8002bcc <SysTick_Config+0x40>)
 8002bbc:	2207      	movs	r2, #7
 8002bbe:	601a      	str	r2, [r3, #0]
 8002bc0:	2300      	movs	r3, #0
 8002bc2:	4618      	mov	r0, r3
 8002bc4:	3708      	adds	r7, #8
 8002bc6:	46bd      	mov	sp, r7
 8002bc8:	bd80      	pop	{r7, pc}
 8002bca:	bf00      	nop
 8002bcc:	e000e010 	.word	0xe000e010

08002bd0 <HAL_NVIC_SetPriorityGrouping>:
 8002bd0:	b580      	push	{r7, lr}
 8002bd2:	b082      	sub	sp, #8
 8002bd4:	af00      	add	r7, sp, #0
 8002bd6:	6078      	str	r0, [r7, #4]
 8002bd8:	6878      	ldr	r0, [r7, #4]
 8002bda:	f7ff ff29 	bl	8002a30 <__NVIC_SetPriorityGrouping>
 8002bde:	bf00      	nop
 8002be0:	3708      	adds	r7, #8
 8002be2:	46bd      	mov	sp, r7
 8002be4:	bd80      	pop	{r7, pc}

08002be6 <HAL_NVIC_SetPriority>:
 8002be6:	b580      	push	{r7, lr}
 8002be8:	b086      	sub	sp, #24
 8002bea:	af00      	add	r7, sp, #0
 8002bec:	4603      	mov	r3, r0
 8002bee:	60b9      	str	r1, [r7, #8]
 8002bf0:	607a      	str	r2, [r7, #4]
 8002bf2:	73fb      	strb	r3, [r7, #15]
 8002bf4:	2300      	movs	r3, #0
 8002bf6:	617b      	str	r3, [r7, #20]
 8002bf8:	f7ff ff3e 	bl	8002a78 <__NVIC_GetPriorityGrouping>
 8002bfc:	6178      	str	r0, [r7, #20]
 8002bfe:	687a      	ldr	r2, [r7, #4]
 8002c00:	68b9      	ldr	r1, [r7, #8]
 8002c02:	6978      	ldr	r0, [r7, #20]
 8002c04:	f7ff ff8e 	bl	8002b24 <NVIC_EncodePriority>
 8002c08:	4602      	mov	r2, r0
 8002c0a:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8002c0e:	4611      	mov	r1, r2
 8002c10:	4618      	mov	r0, r3
 8002c12:	f7ff ff5d 	bl	8002ad0 <__NVIC_SetPriority>
 8002c16:	bf00      	nop
 8002c18:	3718      	adds	r7, #24
 8002c1a:	46bd      	mov	sp, r7
 8002c1c:	bd80      	pop	{r7, pc}

08002c1e <HAL_NVIC_EnableIRQ>:
 8002c1e:	b580      	push	{r7, lr}
 8002c20:	b082      	sub	sp, #8
 8002c22:	af00      	add	r7, sp, #0
 8002c24:	4603      	mov	r3, r0
 8002c26:	71fb      	strb	r3, [r7, #7]
 8002c28:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002c2c:	4618      	mov	r0, r3
 8002c2e:	f7ff ff31 	bl	8002a94 <__NVIC_EnableIRQ>
 8002c32:	bf00      	nop
 8002c34:	3708      	adds	r7, #8
 8002c36:	46bd      	mov	sp, r7
 8002c38:	bd80      	pop	{r7, pc}

08002c3a <HAL_SYSTICK_Config>:
 8002c3a:	b580      	push	{r7, lr}
 8002c3c:	b082      	sub	sp, #8
 8002c3e:	af00      	add	r7, sp, #0
 8002c40:	6078      	str	r0, [r7, #4]
 8002c42:	6878      	ldr	r0, [r7, #4]
 8002c44:	f7ff ffa2 	bl	8002b8c <SysTick_Config>
 8002c48:	4603      	mov	r3, r0
 8002c4a:	4618      	mov	r0, r3
 8002c4c:	3708      	adds	r7, #8
 8002c4e:	46bd      	mov	sp, r7
 8002c50:	bd80      	pop	{r7, pc}

08002c52 <HAL_DMA_Abort>:
 8002c52:	b480      	push	{r7}
 8002c54:	b083      	sub	sp, #12
 8002c56:	af00      	add	r7, sp, #0
 8002c58:	6078      	str	r0, [r7, #4]
 8002c5a:	687b      	ldr	r3, [r7, #4]
 8002c5c:	2b00      	cmp	r3, #0
 8002c5e:	d101      	bne.n	8002c64 <HAL_DMA_Abort+0x12>
 8002c60:	2301      	movs	r3, #1
 8002c62:	e02e      	b.n	8002cc2 <HAL_DMA_Abort+0x70>
 8002c64:	687b      	ldr	r3, [r7, #4]
 8002c66:	f893 3021 	ldrb.w	r3, [r3, #33]	@ 0x21
 8002c6a:	2b02      	cmp	r3, #2
 8002c6c:	d008      	beq.n	8002c80 <HAL_DMA_Abort+0x2e>
 8002c6e:	687b      	ldr	r3, [r7, #4]
 8002c70:	2204      	movs	r2, #4
 8002c72:	639a      	str	r2, [r3, #56]	@ 0x38
 8002c74:	687b      	ldr	r3, [r7, #4]
 8002c76:	2200      	movs	r2, #0
 8002c78:	f883 2020 	strb.w	r2, [r3, #32]
 8002c7c:	2301      	movs	r3, #1
 8002c7e:	e020      	b.n	8002cc2 <HAL_DMA_Abort+0x70>
 8002c80:	687b      	ldr	r3, [r7, #4]
 8002c82:	681b      	ldr	r3, [r3, #0]
 8002c84:	681a      	ldr	r2, [r3, #0]
 8002c86:	687b      	ldr	r3, [r7, #4]
 8002c88:	681b      	ldr	r3, [r3, #0]
 8002c8a:	f022 020e 	bic.w	r2, r2, #14
 8002c8e:	601a      	str	r2, [r3, #0]
 8002c90:	687b      	ldr	r3, [r7, #4]
 8002c92:	681b      	ldr	r3, [r3, #0]
 8002c94:	681a      	ldr	r2, [r3, #0]
 8002c96:	687b      	ldr	r3, [r7, #4]
 8002c98:	681b      	ldr	r3, [r3, #0]
 8002c9a:	f022 0201 	bic.w	r2, r2, #1
 8002c9e:	601a      	str	r2, [r3, #0]
 8002ca0:	687b      	ldr	r3, [r7, #4]
 8002ca2:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8002ca4:	687b      	ldr	r3, [r7, #4]
 8002ca6:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8002ca8:	2101      	movs	r1, #1
 8002caa:	fa01 f202 	lsl.w	r2, r1, r2
 8002cae:	605a      	str	r2, [r3, #4]
 8002cb0:	687b      	ldr	r3, [r7, #4]
 8002cb2:	2201      	movs	r2, #1
 8002cb4:	f883 2021 	strb.w	r2, [r3, #33]	@ 0x21
 8002cb8:	687b      	ldr	r3, [r7, #4]
 8002cba:	2200      	movs	r2, #0
 8002cbc:	f883 2020 	strb.w	r2, [r3, #32]
 8002cc0:	2300      	movs	r3, #0
 8002cc2:	4618      	mov	r0, r3
 8002cc4:	370c      	adds	r7, #12
 8002cc6:	46bd      	mov	sp, r7
 8002cc8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002ccc:	4770      	bx	lr

08002cce <HAL_DMA_Abort_IT>:
 8002cce:	b580      	push	{r7, lr}
 8002cd0:	b084      	sub	sp, #16
 8002cd2:	af00      	add	r7, sp, #0
 8002cd4:	6078      	str	r0, [r7, #4]
 8002cd6:	2300      	movs	r3, #0
 8002cd8:	73fb      	strb	r3, [r7, #15]
 8002cda:	687b      	ldr	r3, [r7, #4]
 8002cdc:	f893 3021 	ldrb.w	r3, [r3, #33]	@ 0x21
 8002ce0:	2b02      	cmp	r3, #2
 8002ce2:	d005      	beq.n	8002cf0 <HAL_DMA_Abort_IT+0x22>
 8002ce4:	687b      	ldr	r3, [r7, #4]
 8002ce6:	2204      	movs	r2, #4
 8002ce8:	639a      	str	r2, [r3, #56]	@ 0x38
 8002cea:	2301      	movs	r3, #1
 8002cec:	73fb      	strb	r3, [r7, #15]
 8002cee:	e027      	b.n	8002d40 <HAL_DMA_Abort_IT+0x72>
 8002cf0:	687b      	ldr	r3, [r7, #4]
 8002cf2:	681b      	ldr	r3, [r3, #0]
 8002cf4:	681a      	ldr	r2, [r3, #0]
 8002cf6:	687b      	ldr	r3, [r7, #4]
 8002cf8:	681b      	ldr	r3, [r3, #0]
 8002cfa:	f022 020e 	bic.w	r2, r2, #14
 8002cfe:	601a      	str	r2, [r3, #0]
 8002d00:	687b      	ldr	r3, [r7, #4]
 8002d02:	681b      	ldr	r3, [r3, #0]
 8002d04:	681a      	ldr	r2, [r3, #0]
 8002d06:	687b      	ldr	r3, [r7, #4]
 8002d08:	681b      	ldr	r3, [r3, #0]
 8002d0a:	f022 0201 	bic.w	r2, r2, #1
 8002d0e:	601a      	str	r2, [r3, #0]
 8002d10:	687b      	ldr	r3, [r7, #4]
 8002d12:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8002d14:	687b      	ldr	r3, [r7, #4]
 8002d16:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8002d18:	2101      	movs	r1, #1
 8002d1a:	fa01 f202 	lsl.w	r2, r1, r2
 8002d1e:	605a      	str	r2, [r3, #4]
 8002d20:	687b      	ldr	r3, [r7, #4]
 8002d22:	2201      	movs	r2, #1
 8002d24:	f883 2021 	strb.w	r2, [r3, #33]	@ 0x21
 8002d28:	687b      	ldr	r3, [r7, #4]
 8002d2a:	2200      	movs	r2, #0
 8002d2c:	f883 2020 	strb.w	r2, [r3, #32]
 8002d30:	687b      	ldr	r3, [r7, #4]
 8002d32:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8002d34:	2b00      	cmp	r3, #0
 8002d36:	d003      	beq.n	8002d40 <HAL_DMA_Abort_IT+0x72>
 8002d38:	687b      	ldr	r3, [r7, #4]
 8002d3a:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8002d3c:	6878      	ldr	r0, [r7, #4]
 8002d3e:	4798      	blx	r3
 8002d40:	7bfb      	ldrb	r3, [r7, #15]
 8002d42:	4618      	mov	r0, r3
 8002d44:	3710      	adds	r7, #16
 8002d46:	46bd      	mov	sp, r7
 8002d48:	bd80      	pop	{r7, pc}
	...

08002d4c <HAL_GPIO_Init>:
 8002d4c:	b480      	push	{r7}
 8002d4e:	b087      	sub	sp, #28
 8002d50:	af00      	add	r7, sp, #0
 8002d52:	6078      	str	r0, [r7, #4]
 8002d54:	6039      	str	r1, [r7, #0]
 8002d56:	2300      	movs	r3, #0
 8002d58:	617b      	str	r3, [r7, #20]
 8002d5a:	e14e      	b.n	8002ffa <HAL_GPIO_Init+0x2ae>
 8002d5c:	683b      	ldr	r3, [r7, #0]
 8002d5e:	681a      	ldr	r2, [r3, #0]
 8002d60:	2101      	movs	r1, #1
 8002d62:	697b      	ldr	r3, [r7, #20]
 8002d64:	fa01 f303 	lsl.w	r3, r1, r3
 8002d68:	4013      	ands	r3, r2
 8002d6a:	60fb      	str	r3, [r7, #12]
 8002d6c:	68fb      	ldr	r3, [r7, #12]
 8002d6e:	2b00      	cmp	r3, #0
 8002d70:	f000 8140 	beq.w	8002ff4 <HAL_GPIO_Init+0x2a8>
 8002d74:	683b      	ldr	r3, [r7, #0]
 8002d76:	685b      	ldr	r3, [r3, #4]
 8002d78:	f003 0303 	and.w	r3, r3, #3
 8002d7c:	2b01      	cmp	r3, #1
 8002d7e:	d005      	beq.n	8002d8c <HAL_GPIO_Init+0x40>
 8002d80:	683b      	ldr	r3, [r7, #0]
 8002d82:	685b      	ldr	r3, [r3, #4]
 8002d84:	f003 0303 	and.w	r3, r3, #3
 8002d88:	2b02      	cmp	r3, #2
 8002d8a:	d130      	bne.n	8002dee <HAL_GPIO_Init+0xa2>
 8002d8c:	687b      	ldr	r3, [r7, #4]
 8002d8e:	689b      	ldr	r3, [r3, #8]
 8002d90:	613b      	str	r3, [r7, #16]
 8002d92:	697b      	ldr	r3, [r7, #20]
 8002d94:	005b      	lsls	r3, r3, #1
 8002d96:	2203      	movs	r2, #3
 8002d98:	fa02 f303 	lsl.w	r3, r2, r3
 8002d9c:	43db      	mvns	r3, r3
 8002d9e:	693a      	ldr	r2, [r7, #16]
 8002da0:	4013      	ands	r3, r2
 8002da2:	613b      	str	r3, [r7, #16]
 8002da4:	683b      	ldr	r3, [r7, #0]
 8002da6:	68da      	ldr	r2, [r3, #12]
 8002da8:	697b      	ldr	r3, [r7, #20]
 8002daa:	005b      	lsls	r3, r3, #1
 8002dac:	fa02 f303 	lsl.w	r3, r2, r3
 8002db0:	693a      	ldr	r2, [r7, #16]
 8002db2:	4313      	orrs	r3, r2
 8002db4:	613b      	str	r3, [r7, #16]
 8002db6:	687b      	ldr	r3, [r7, #4]
 8002db8:	693a      	ldr	r2, [r7, #16]
 8002dba:	609a      	str	r2, [r3, #8]
 8002dbc:	687b      	ldr	r3, [r7, #4]
 8002dbe:	685b      	ldr	r3, [r3, #4]
 8002dc0:	613b      	str	r3, [r7, #16]
 8002dc2:	2201      	movs	r2, #1
 8002dc4:	697b      	ldr	r3, [r7, #20]
 8002dc6:	fa02 f303 	lsl.w	r3, r2, r3
 8002dca:	43db      	mvns	r3, r3
 8002dcc:	693a      	ldr	r2, [r7, #16]
 8002dce:	4013      	ands	r3, r2
 8002dd0:	613b      	str	r3, [r7, #16]
 8002dd2:	683b      	ldr	r3, [r7, #0]
 8002dd4:	685b      	ldr	r3, [r3, #4]
 8002dd6:	091b      	lsrs	r3, r3, #4
 8002dd8:	f003 0201 	and.w	r2, r3, #1
 8002ddc:	697b      	ldr	r3, [r7, #20]
 8002dde:	fa02 f303 	lsl.w	r3, r2, r3
 8002de2:	693a      	ldr	r2, [r7, #16]
 8002de4:	4313      	orrs	r3, r2
 8002de6:	613b      	str	r3, [r7, #16]
 8002de8:	687b      	ldr	r3, [r7, #4]
 8002dea:	693a      	ldr	r2, [r7, #16]
 8002dec:	605a      	str	r2, [r3, #4]
 8002dee:	683b      	ldr	r3, [r7, #0]
 8002df0:	685b      	ldr	r3, [r3, #4]
 8002df2:	f003 0303 	and.w	r3, r3, #3
 8002df6:	2b03      	cmp	r3, #3
 8002df8:	d017      	beq.n	8002e2a <HAL_GPIO_Init+0xde>
 8002dfa:	687b      	ldr	r3, [r7, #4]
 8002dfc:	68db      	ldr	r3, [r3, #12]
 8002dfe:	613b      	str	r3, [r7, #16]
 8002e00:	697b      	ldr	r3, [r7, #20]
 8002e02:	005b      	lsls	r3, r3, #1
 8002e04:	2203      	movs	r2, #3
 8002e06:	fa02 f303 	lsl.w	r3, r2, r3
 8002e0a:	43db      	mvns	r3, r3
 8002e0c:	693a      	ldr	r2, [r7, #16]
 8002e0e:	4013      	ands	r3, r2
 8002e10:	613b      	str	r3, [r7, #16]
 8002e12:	683b      	ldr	r3, [r7, #0]
 8002e14:	689a      	ldr	r2, [r3, #8]
 8002e16:	697b      	ldr	r3, [r7, #20]
 8002e18:	005b      	lsls	r3, r3, #1
 8002e1a:	fa02 f303 	lsl.w	r3, r2, r3
 8002e1e:	693a      	ldr	r2, [r7, #16]
 8002e20:	4313      	orrs	r3, r2
 8002e22:	613b      	str	r3, [r7, #16]
 8002e24:	687b      	ldr	r3, [r7, #4]
 8002e26:	693a      	ldr	r2, [r7, #16]
 8002e28:	60da      	str	r2, [r3, #12]
 8002e2a:	683b      	ldr	r3, [r7, #0]
 8002e2c:	685b      	ldr	r3, [r3, #4]
 8002e2e:	f003 0303 	and.w	r3, r3, #3
 8002e32:	2b02      	cmp	r3, #2
 8002e34:	d123      	bne.n	8002e7e <HAL_GPIO_Init+0x132>
 8002e36:	697b      	ldr	r3, [r7, #20]
 8002e38:	08da      	lsrs	r2, r3, #3
 8002e3a:	687b      	ldr	r3, [r7, #4]
 8002e3c:	3208      	adds	r2, #8
 8002e3e:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8002e42:	613b      	str	r3, [r7, #16]
 8002e44:	697b      	ldr	r3, [r7, #20]
 8002e46:	f003 0307 	and.w	r3, r3, #7
 8002e4a:	009b      	lsls	r3, r3, #2
 8002e4c:	220f      	movs	r2, #15
 8002e4e:	fa02 f303 	lsl.w	r3, r2, r3
 8002e52:	43db      	mvns	r3, r3
 8002e54:	693a      	ldr	r2, [r7, #16]
 8002e56:	4013      	ands	r3, r2
 8002e58:	613b      	str	r3, [r7, #16]
 8002e5a:	683b      	ldr	r3, [r7, #0]
 8002e5c:	691a      	ldr	r2, [r3, #16]
 8002e5e:	697b      	ldr	r3, [r7, #20]
 8002e60:	f003 0307 	and.w	r3, r3, #7
 8002e64:	009b      	lsls	r3, r3, #2
 8002e66:	fa02 f303 	lsl.w	r3, r2, r3
 8002e6a:	693a      	ldr	r2, [r7, #16]
 8002e6c:	4313      	orrs	r3, r2
 8002e6e:	613b      	str	r3, [r7, #16]
 8002e70:	697b      	ldr	r3, [r7, #20]
 8002e72:	08da      	lsrs	r2, r3, #3
 8002e74:	687b      	ldr	r3, [r7, #4]
 8002e76:	3208      	adds	r2, #8
 8002e78:	6939      	ldr	r1, [r7, #16]
 8002e7a:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8002e7e:	687b      	ldr	r3, [r7, #4]
 8002e80:	681b      	ldr	r3, [r3, #0]
 8002e82:	613b      	str	r3, [r7, #16]
 8002e84:	697b      	ldr	r3, [r7, #20]
 8002e86:	005b      	lsls	r3, r3, #1
 8002e88:	2203      	movs	r2, #3
 8002e8a:	fa02 f303 	lsl.w	r3, r2, r3
 8002e8e:	43db      	mvns	r3, r3
 8002e90:	693a      	ldr	r2, [r7, #16]
 8002e92:	4013      	ands	r3, r2
 8002e94:	613b      	str	r3, [r7, #16]
 8002e96:	683b      	ldr	r3, [r7, #0]
 8002e98:	685b      	ldr	r3, [r3, #4]
 8002e9a:	f003 0203 	and.w	r2, r3, #3
 8002e9e:	697b      	ldr	r3, [r7, #20]
 8002ea0:	005b      	lsls	r3, r3, #1
 8002ea2:	fa02 f303 	lsl.w	r3, r2, r3
 8002ea6:	693a      	ldr	r2, [r7, #16]
 8002ea8:	4313      	orrs	r3, r2
 8002eaa:	613b      	str	r3, [r7, #16]
 8002eac:	687b      	ldr	r3, [r7, #4]
 8002eae:	693a      	ldr	r2, [r7, #16]
 8002eb0:	601a      	str	r2, [r3, #0]
 8002eb2:	683b      	ldr	r3, [r7, #0]
 8002eb4:	685b      	ldr	r3, [r3, #4]
 8002eb6:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 8002eba:	2b00      	cmp	r3, #0
 8002ebc:	f000 809a 	beq.w	8002ff4 <HAL_GPIO_Init+0x2a8>
 8002ec0:	4b55      	ldr	r3, [pc, #340]	@ (8003018 <HAL_GPIO_Init+0x2cc>)
 8002ec2:	699b      	ldr	r3, [r3, #24]
 8002ec4:	4a54      	ldr	r2, [pc, #336]	@ (8003018 <HAL_GPIO_Init+0x2cc>)
 8002ec6:	f043 0301 	orr.w	r3, r3, #1
 8002eca:	6193      	str	r3, [r2, #24]
 8002ecc:	4b52      	ldr	r3, [pc, #328]	@ (8003018 <HAL_GPIO_Init+0x2cc>)
 8002ece:	699b      	ldr	r3, [r3, #24]
 8002ed0:	f003 0301 	and.w	r3, r3, #1
 8002ed4:	60bb      	str	r3, [r7, #8]
 8002ed6:	68bb      	ldr	r3, [r7, #8]
 8002ed8:	4a50      	ldr	r2, [pc, #320]	@ (800301c <HAL_GPIO_Init+0x2d0>)
 8002eda:	697b      	ldr	r3, [r7, #20]
 8002edc:	089b      	lsrs	r3, r3, #2
 8002ede:	3302      	adds	r3, #2
 8002ee0:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8002ee4:	613b      	str	r3, [r7, #16]
 8002ee6:	697b      	ldr	r3, [r7, #20]
 8002ee8:	f003 0303 	and.w	r3, r3, #3
 8002eec:	009b      	lsls	r3, r3, #2
 8002eee:	220f      	movs	r2, #15
 8002ef0:	fa02 f303 	lsl.w	r3, r2, r3
 8002ef4:	43db      	mvns	r3, r3
 8002ef6:	693a      	ldr	r2, [r7, #16]
 8002ef8:	4013      	ands	r3, r2
 8002efa:	613b      	str	r3, [r7, #16]
 8002efc:	687b      	ldr	r3, [r7, #4]
 8002efe:	f1b3 4f90 	cmp.w	r3, #1207959552	@ 0x48000000
 8002f02:	d013      	beq.n	8002f2c <HAL_GPIO_Init+0x1e0>
 8002f04:	687b      	ldr	r3, [r7, #4]
 8002f06:	4a46      	ldr	r2, [pc, #280]	@ (8003020 <HAL_GPIO_Init+0x2d4>)
 8002f08:	4293      	cmp	r3, r2
 8002f0a:	d00d      	beq.n	8002f28 <HAL_GPIO_Init+0x1dc>
 8002f0c:	687b      	ldr	r3, [r7, #4]
 8002f0e:	4a45      	ldr	r2, [pc, #276]	@ (8003024 <HAL_GPIO_Init+0x2d8>)
 8002f10:	4293      	cmp	r3, r2
 8002f12:	d007      	beq.n	8002f24 <HAL_GPIO_Init+0x1d8>
 8002f14:	687b      	ldr	r3, [r7, #4]
 8002f16:	4a44      	ldr	r2, [pc, #272]	@ (8003028 <HAL_GPIO_Init+0x2dc>)
 8002f18:	4293      	cmp	r3, r2
 8002f1a:	d101      	bne.n	8002f20 <HAL_GPIO_Init+0x1d4>
 8002f1c:	2303      	movs	r3, #3
 8002f1e:	e006      	b.n	8002f2e <HAL_GPIO_Init+0x1e2>
 8002f20:	2305      	movs	r3, #5
 8002f22:	e004      	b.n	8002f2e <HAL_GPIO_Init+0x1e2>
 8002f24:	2302      	movs	r3, #2
 8002f26:	e002      	b.n	8002f2e <HAL_GPIO_Init+0x1e2>
 8002f28:	2301      	movs	r3, #1
 8002f2a:	e000      	b.n	8002f2e <HAL_GPIO_Init+0x1e2>
 8002f2c:	2300      	movs	r3, #0
 8002f2e:	697a      	ldr	r2, [r7, #20]
 8002f30:	f002 0203 	and.w	r2, r2, #3
 8002f34:	0092      	lsls	r2, r2, #2
 8002f36:	4093      	lsls	r3, r2
 8002f38:	693a      	ldr	r2, [r7, #16]
 8002f3a:	4313      	orrs	r3, r2
 8002f3c:	613b      	str	r3, [r7, #16]
 8002f3e:	4937      	ldr	r1, [pc, #220]	@ (800301c <HAL_GPIO_Init+0x2d0>)
 8002f40:	697b      	ldr	r3, [r7, #20]
 8002f42:	089b      	lsrs	r3, r3, #2
 8002f44:	3302      	adds	r3, #2
 8002f46:	693a      	ldr	r2, [r7, #16]
 8002f48:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8002f4c:	4b37      	ldr	r3, [pc, #220]	@ (800302c <HAL_GPIO_Init+0x2e0>)
 8002f4e:	689b      	ldr	r3, [r3, #8]
 8002f50:	613b      	str	r3, [r7, #16]
 8002f52:	68fb      	ldr	r3, [r7, #12]
 8002f54:	43db      	mvns	r3, r3
 8002f56:	693a      	ldr	r2, [r7, #16]
 8002f58:	4013      	ands	r3, r2
 8002f5a:	613b      	str	r3, [r7, #16]
 8002f5c:	683b      	ldr	r3, [r7, #0]
 8002f5e:	685b      	ldr	r3, [r3, #4]
 8002f60:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 8002f64:	2b00      	cmp	r3, #0
 8002f66:	d003      	beq.n	8002f70 <HAL_GPIO_Init+0x224>
 8002f68:	693a      	ldr	r2, [r7, #16]
 8002f6a:	68fb      	ldr	r3, [r7, #12]
 8002f6c:	4313      	orrs	r3, r2
 8002f6e:	613b      	str	r3, [r7, #16]
 8002f70:	4a2e      	ldr	r2, [pc, #184]	@ (800302c <HAL_GPIO_Init+0x2e0>)
 8002f72:	693b      	ldr	r3, [r7, #16]
 8002f74:	6093      	str	r3, [r2, #8]
 8002f76:	4b2d      	ldr	r3, [pc, #180]	@ (800302c <HAL_GPIO_Init+0x2e0>)
 8002f78:	68db      	ldr	r3, [r3, #12]
 8002f7a:	613b      	str	r3, [r7, #16]
 8002f7c:	68fb      	ldr	r3, [r7, #12]
 8002f7e:	43db      	mvns	r3, r3
 8002f80:	693a      	ldr	r2, [r7, #16]
 8002f82:	4013      	ands	r3, r2
 8002f84:	613b      	str	r3, [r7, #16]
 8002f86:	683b      	ldr	r3, [r7, #0]
 8002f88:	685b      	ldr	r3, [r3, #4]
 8002f8a:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8002f8e:	2b00      	cmp	r3, #0
 8002f90:	d003      	beq.n	8002f9a <HAL_GPIO_Init+0x24e>
 8002f92:	693a      	ldr	r2, [r7, #16]
 8002f94:	68fb      	ldr	r3, [r7, #12]
 8002f96:	4313      	orrs	r3, r2
 8002f98:	613b      	str	r3, [r7, #16]
 8002f9a:	4a24      	ldr	r2, [pc, #144]	@ (800302c <HAL_GPIO_Init+0x2e0>)
 8002f9c:	693b      	ldr	r3, [r7, #16]
 8002f9e:	60d3      	str	r3, [r2, #12]
 8002fa0:	4b22      	ldr	r3, [pc, #136]	@ (800302c <HAL_GPIO_Init+0x2e0>)
 8002fa2:	685b      	ldr	r3, [r3, #4]
 8002fa4:	613b      	str	r3, [r7, #16]
 8002fa6:	68fb      	ldr	r3, [r7, #12]
 8002fa8:	43db      	mvns	r3, r3
 8002faa:	693a      	ldr	r2, [r7, #16]
 8002fac:	4013      	ands	r3, r2
 8002fae:	613b      	str	r3, [r7, #16]
 8002fb0:	683b      	ldr	r3, [r7, #0]
 8002fb2:	685b      	ldr	r3, [r3, #4]
 8002fb4:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002fb8:	2b00      	cmp	r3, #0
 8002fba:	d003      	beq.n	8002fc4 <HAL_GPIO_Init+0x278>
 8002fbc:	693a      	ldr	r2, [r7, #16]
 8002fbe:	68fb      	ldr	r3, [r7, #12]
 8002fc0:	4313      	orrs	r3, r2
 8002fc2:	613b      	str	r3, [r7, #16]
 8002fc4:	4a19      	ldr	r2, [pc, #100]	@ (800302c <HAL_GPIO_Init+0x2e0>)
 8002fc6:	693b      	ldr	r3, [r7, #16]
 8002fc8:	6053      	str	r3, [r2, #4]
 8002fca:	4b18      	ldr	r3, [pc, #96]	@ (800302c <HAL_GPIO_Init+0x2e0>)
 8002fcc:	681b      	ldr	r3, [r3, #0]
 8002fce:	613b      	str	r3, [r7, #16]
 8002fd0:	68fb      	ldr	r3, [r7, #12]
 8002fd2:	43db      	mvns	r3, r3
 8002fd4:	693a      	ldr	r2, [r7, #16]
 8002fd6:	4013      	ands	r3, r2
 8002fd8:	613b      	str	r3, [r7, #16]
 8002fda:	683b      	ldr	r3, [r7, #0]
 8002fdc:	685b      	ldr	r3, [r3, #4]
 8002fde:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8002fe2:	2b00      	cmp	r3, #0
 8002fe4:	d003      	beq.n	8002fee <HAL_GPIO_Init+0x2a2>
 8002fe6:	693a      	ldr	r2, [r7, #16]
 8002fe8:	68fb      	ldr	r3, [r7, #12]
 8002fea:	4313      	orrs	r3, r2
 8002fec:	613b      	str	r3, [r7, #16]
 8002fee:	4a0f      	ldr	r2, [pc, #60]	@ (800302c <HAL_GPIO_Init+0x2e0>)
 8002ff0:	693b      	ldr	r3, [r7, #16]
 8002ff2:	6013      	str	r3, [r2, #0]
 8002ff4:	697b      	ldr	r3, [r7, #20]
 8002ff6:	3301      	adds	r3, #1
 8002ff8:	617b      	str	r3, [r7, #20]
 8002ffa:	683b      	ldr	r3, [r7, #0]
 8002ffc:	681a      	ldr	r2, [r3, #0]
 8002ffe:	697b      	ldr	r3, [r7, #20]
 8003000:	fa22 f303 	lsr.w	r3, r2, r3
 8003004:	2b00      	cmp	r3, #0
 8003006:	f47f aea9 	bne.w	8002d5c <HAL_GPIO_Init+0x10>
 800300a:	bf00      	nop
 800300c:	bf00      	nop
 800300e:	371c      	adds	r7, #28
 8003010:	46bd      	mov	sp, r7
 8003012:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003016:	4770      	bx	lr
 8003018:	40021000 	.word	0x40021000
 800301c:	40010000 	.word	0x40010000
 8003020:	48000400 	.word	0x48000400
 8003024:	48000800 	.word	0x48000800
 8003028:	48000c00 	.word	0x48000c00
 800302c:	40010400 	.word	0x40010400

08003030 <HAL_GPIO_WritePin>:
 8003030:	b480      	push	{r7}
 8003032:	b083      	sub	sp, #12
 8003034:	af00      	add	r7, sp, #0
 8003036:	6078      	str	r0, [r7, #4]
 8003038:	460b      	mov	r3, r1
 800303a:	807b      	strh	r3, [r7, #2]
 800303c:	4613      	mov	r3, r2
 800303e:	707b      	strb	r3, [r7, #1]
 8003040:	787b      	ldrb	r3, [r7, #1]
 8003042:	2b00      	cmp	r3, #0
 8003044:	d003      	beq.n	800304e <HAL_GPIO_WritePin+0x1e>
 8003046:	887a      	ldrh	r2, [r7, #2]
 8003048:	687b      	ldr	r3, [r7, #4]
 800304a:	619a      	str	r2, [r3, #24]
 800304c:	e002      	b.n	8003054 <HAL_GPIO_WritePin+0x24>
 800304e:	887a      	ldrh	r2, [r7, #2]
 8003050:	687b      	ldr	r3, [r7, #4]
 8003052:	629a      	str	r2, [r3, #40]	@ 0x28
 8003054:	bf00      	nop
 8003056:	370c      	adds	r7, #12
 8003058:	46bd      	mov	sp, r7
 800305a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800305e:	4770      	bx	lr

08003060 <HAL_I2C_Init>:
 8003060:	b580      	push	{r7, lr}
 8003062:	b082      	sub	sp, #8
 8003064:	af00      	add	r7, sp, #0
 8003066:	6078      	str	r0, [r7, #4]
 8003068:	687b      	ldr	r3, [r7, #4]
 800306a:	2b00      	cmp	r3, #0
 800306c:	d101      	bne.n	8003072 <HAL_I2C_Init+0x12>
 800306e:	2301      	movs	r3, #1
 8003070:	e08d      	b.n	800318e <HAL_I2C_Init+0x12e>
 8003072:	687b      	ldr	r3, [r7, #4]
 8003074:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8003078:	b2db      	uxtb	r3, r3
 800307a:	2b00      	cmp	r3, #0
 800307c:	d106      	bne.n	800308c <HAL_I2C_Init+0x2c>
 800307e:	687b      	ldr	r3, [r7, #4]
 8003080:	2200      	movs	r2, #0
 8003082:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8003086:	6878      	ldr	r0, [r7, #4]
 8003088:	f7ff f97c 	bl	8002384 <HAL_I2C_MspInit>
 800308c:	687b      	ldr	r3, [r7, #4]
 800308e:	2224      	movs	r2, #36	@ 0x24
 8003090:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8003094:	687b      	ldr	r3, [r7, #4]
 8003096:	681b      	ldr	r3, [r3, #0]
 8003098:	681a      	ldr	r2, [r3, #0]
 800309a:	687b      	ldr	r3, [r7, #4]
 800309c:	681b      	ldr	r3, [r3, #0]
 800309e:	f022 0201 	bic.w	r2, r2, #1
 80030a2:	601a      	str	r2, [r3, #0]
 80030a4:	687b      	ldr	r3, [r7, #4]
 80030a6:	685a      	ldr	r2, [r3, #4]
 80030a8:	687b      	ldr	r3, [r7, #4]
 80030aa:	681b      	ldr	r3, [r3, #0]
 80030ac:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
 80030b0:	611a      	str	r2, [r3, #16]
 80030b2:	687b      	ldr	r3, [r7, #4]
 80030b4:	681b      	ldr	r3, [r3, #0]
 80030b6:	689a      	ldr	r2, [r3, #8]
 80030b8:	687b      	ldr	r3, [r7, #4]
 80030ba:	681b      	ldr	r3, [r3, #0]
 80030bc:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 80030c0:	609a      	str	r2, [r3, #8]
 80030c2:	687b      	ldr	r3, [r7, #4]
 80030c4:	68db      	ldr	r3, [r3, #12]
 80030c6:	2b01      	cmp	r3, #1
 80030c8:	d107      	bne.n	80030da <HAL_I2C_Init+0x7a>
 80030ca:	687b      	ldr	r3, [r7, #4]
 80030cc:	689a      	ldr	r2, [r3, #8]
 80030ce:	687b      	ldr	r3, [r7, #4]
 80030d0:	681b      	ldr	r3, [r3, #0]
 80030d2:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 80030d6:	609a      	str	r2, [r3, #8]
 80030d8:	e006      	b.n	80030e8 <HAL_I2C_Init+0x88>
 80030da:	687b      	ldr	r3, [r7, #4]
 80030dc:	689a      	ldr	r2, [r3, #8]
 80030de:	687b      	ldr	r3, [r7, #4]
 80030e0:	681b      	ldr	r3, [r3, #0]
 80030e2:	f442 4204 	orr.w	r2, r2, #33792	@ 0x8400
 80030e6:	609a      	str	r2, [r3, #8]
 80030e8:	687b      	ldr	r3, [r7, #4]
 80030ea:	68db      	ldr	r3, [r3, #12]
 80030ec:	2b02      	cmp	r3, #2
 80030ee:	d108      	bne.n	8003102 <HAL_I2C_Init+0xa2>
 80030f0:	687b      	ldr	r3, [r7, #4]
 80030f2:	681b      	ldr	r3, [r3, #0]
 80030f4:	685a      	ldr	r2, [r3, #4]
 80030f6:	687b      	ldr	r3, [r7, #4]
 80030f8:	681b      	ldr	r3, [r3, #0]
 80030fa:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 80030fe:	605a      	str	r2, [r3, #4]
 8003100:	e007      	b.n	8003112 <HAL_I2C_Init+0xb2>
 8003102:	687b      	ldr	r3, [r7, #4]
 8003104:	681b      	ldr	r3, [r3, #0]
 8003106:	685a      	ldr	r2, [r3, #4]
 8003108:	687b      	ldr	r3, [r7, #4]
 800310a:	681b      	ldr	r3, [r3, #0]
 800310c:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8003110:	605a      	str	r2, [r3, #4]
 8003112:	687b      	ldr	r3, [r7, #4]
 8003114:	681b      	ldr	r3, [r3, #0]
 8003116:	685b      	ldr	r3, [r3, #4]
 8003118:	687a      	ldr	r2, [r7, #4]
 800311a:	6812      	ldr	r2, [r2, #0]
 800311c:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 8003120:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8003124:	6053      	str	r3, [r2, #4]
 8003126:	687b      	ldr	r3, [r7, #4]
 8003128:	681b      	ldr	r3, [r3, #0]
 800312a:	68da      	ldr	r2, [r3, #12]
 800312c:	687b      	ldr	r3, [r7, #4]
 800312e:	681b      	ldr	r3, [r3, #0]
 8003130:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 8003134:	60da      	str	r2, [r3, #12]
 8003136:	687b      	ldr	r3, [r7, #4]
 8003138:	691a      	ldr	r2, [r3, #16]
 800313a:	687b      	ldr	r3, [r7, #4]
 800313c:	695b      	ldr	r3, [r3, #20]
 800313e:	ea42 0103 	orr.w	r1, r2, r3
 8003142:	687b      	ldr	r3, [r7, #4]
 8003144:	699b      	ldr	r3, [r3, #24]
 8003146:	021a      	lsls	r2, r3, #8
 8003148:	687b      	ldr	r3, [r7, #4]
 800314a:	681b      	ldr	r3, [r3, #0]
 800314c:	430a      	orrs	r2, r1
 800314e:	60da      	str	r2, [r3, #12]
 8003150:	687b      	ldr	r3, [r7, #4]
 8003152:	69d9      	ldr	r1, [r3, #28]
 8003154:	687b      	ldr	r3, [r7, #4]
 8003156:	6a1a      	ldr	r2, [r3, #32]
 8003158:	687b      	ldr	r3, [r7, #4]
 800315a:	681b      	ldr	r3, [r3, #0]
 800315c:	430a      	orrs	r2, r1
 800315e:	601a      	str	r2, [r3, #0]
 8003160:	687b      	ldr	r3, [r7, #4]
 8003162:	681b      	ldr	r3, [r3, #0]
 8003164:	681a      	ldr	r2, [r3, #0]
 8003166:	687b      	ldr	r3, [r7, #4]
 8003168:	681b      	ldr	r3, [r3, #0]
 800316a:	f042 0201 	orr.w	r2, r2, #1
 800316e:	601a      	str	r2, [r3, #0]
 8003170:	687b      	ldr	r3, [r7, #4]
 8003172:	2200      	movs	r2, #0
 8003174:	645a      	str	r2, [r3, #68]	@ 0x44
 8003176:	687b      	ldr	r3, [r7, #4]
 8003178:	2220      	movs	r2, #32
 800317a:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800317e:	687b      	ldr	r3, [r7, #4]
 8003180:	2200      	movs	r2, #0
 8003182:	631a      	str	r2, [r3, #48]	@ 0x30
 8003184:	687b      	ldr	r3, [r7, #4]
 8003186:	2200      	movs	r2, #0
 8003188:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 800318c:	2300      	movs	r3, #0
 800318e:	4618      	mov	r0, r3
 8003190:	3708      	adds	r7, #8
 8003192:	46bd      	mov	sp, r7
 8003194:	bd80      	pop	{r7, pc}
	...

08003198 <HAL_I2C_Mem_Write>:
 8003198:	b580      	push	{r7, lr}
 800319a:	b088      	sub	sp, #32
 800319c:	af02      	add	r7, sp, #8
 800319e:	60f8      	str	r0, [r7, #12]
 80031a0:	4608      	mov	r0, r1
 80031a2:	4611      	mov	r1, r2
 80031a4:	461a      	mov	r2, r3
 80031a6:	4603      	mov	r3, r0
 80031a8:	817b      	strh	r3, [r7, #10]
 80031aa:	460b      	mov	r3, r1
 80031ac:	813b      	strh	r3, [r7, #8]
 80031ae:	4613      	mov	r3, r2
 80031b0:	80fb      	strh	r3, [r7, #6]
 80031b2:	68fb      	ldr	r3, [r7, #12]
 80031b4:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 80031b8:	b2db      	uxtb	r3, r3
 80031ba:	2b20      	cmp	r3, #32
 80031bc:	f040 80f9 	bne.w	80033b2 <HAL_I2C_Mem_Write+0x21a>
 80031c0:	6a3b      	ldr	r3, [r7, #32]
 80031c2:	2b00      	cmp	r3, #0
 80031c4:	d002      	beq.n	80031cc <HAL_I2C_Mem_Write+0x34>
 80031c6:	8cbb      	ldrh	r3, [r7, #36]	@ 0x24
 80031c8:	2b00      	cmp	r3, #0
 80031ca:	d105      	bne.n	80031d8 <HAL_I2C_Mem_Write+0x40>
 80031cc:	68fb      	ldr	r3, [r7, #12]
 80031ce:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80031d2:	645a      	str	r2, [r3, #68]	@ 0x44
 80031d4:	2301      	movs	r3, #1
 80031d6:	e0ed      	b.n	80033b4 <HAL_I2C_Mem_Write+0x21c>
 80031d8:	68fb      	ldr	r3, [r7, #12]
 80031da:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 80031de:	2b01      	cmp	r3, #1
 80031e0:	d101      	bne.n	80031e6 <HAL_I2C_Mem_Write+0x4e>
 80031e2:	2302      	movs	r3, #2
 80031e4:	e0e6      	b.n	80033b4 <HAL_I2C_Mem_Write+0x21c>
 80031e6:	68fb      	ldr	r3, [r7, #12]
 80031e8:	2201      	movs	r2, #1
 80031ea:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 80031ee:	f7ff fbef 	bl	80029d0 <HAL_GetTick>
 80031f2:	6178      	str	r0, [r7, #20]
 80031f4:	697b      	ldr	r3, [r7, #20]
 80031f6:	9300      	str	r3, [sp, #0]
 80031f8:	2319      	movs	r3, #25
 80031fa:	2201      	movs	r2, #1
 80031fc:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 8003200:	68f8      	ldr	r0, [r7, #12]
 8003202:	f000 fac3 	bl	800378c <I2C_WaitOnFlagUntilTimeout>
 8003206:	4603      	mov	r3, r0
 8003208:	2b00      	cmp	r3, #0
 800320a:	d001      	beq.n	8003210 <HAL_I2C_Mem_Write+0x78>
 800320c:	2301      	movs	r3, #1
 800320e:	e0d1      	b.n	80033b4 <HAL_I2C_Mem_Write+0x21c>
 8003210:	68fb      	ldr	r3, [r7, #12]
 8003212:	2221      	movs	r2, #33	@ 0x21
 8003214:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8003218:	68fb      	ldr	r3, [r7, #12]
 800321a:	2240      	movs	r2, #64	@ 0x40
 800321c:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8003220:	68fb      	ldr	r3, [r7, #12]
 8003222:	2200      	movs	r2, #0
 8003224:	645a      	str	r2, [r3, #68]	@ 0x44
 8003226:	68fb      	ldr	r3, [r7, #12]
 8003228:	6a3a      	ldr	r2, [r7, #32]
 800322a:	625a      	str	r2, [r3, #36]	@ 0x24
 800322c:	68fb      	ldr	r3, [r7, #12]
 800322e:	8cba      	ldrh	r2, [r7, #36]	@ 0x24
 8003230:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8003232:	68fb      	ldr	r3, [r7, #12]
 8003234:	2200      	movs	r2, #0
 8003236:	635a      	str	r2, [r3, #52]	@ 0x34
 8003238:	88f8      	ldrh	r0, [r7, #6]
 800323a:	893a      	ldrh	r2, [r7, #8]
 800323c:	8979      	ldrh	r1, [r7, #10]
 800323e:	697b      	ldr	r3, [r7, #20]
 8003240:	9301      	str	r3, [sp, #4]
 8003242:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8003244:	9300      	str	r3, [sp, #0]
 8003246:	4603      	mov	r3, r0
 8003248:	68f8      	ldr	r0, [r7, #12]
 800324a:	f000 f9d3 	bl	80035f4 <I2C_RequestMemoryWrite>
 800324e:	4603      	mov	r3, r0
 8003250:	2b00      	cmp	r3, #0
 8003252:	d005      	beq.n	8003260 <HAL_I2C_Mem_Write+0xc8>
 8003254:	68fb      	ldr	r3, [r7, #12]
 8003256:	2200      	movs	r2, #0
 8003258:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 800325c:	2301      	movs	r3, #1
 800325e:	e0a9      	b.n	80033b4 <HAL_I2C_Mem_Write+0x21c>
 8003260:	68fb      	ldr	r3, [r7, #12]
 8003262:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8003264:	b29b      	uxth	r3, r3
 8003266:	2bff      	cmp	r3, #255	@ 0xff
 8003268:	d90e      	bls.n	8003288 <HAL_I2C_Mem_Write+0xf0>
 800326a:	68fb      	ldr	r3, [r7, #12]
 800326c:	22ff      	movs	r2, #255	@ 0xff
 800326e:	851a      	strh	r2, [r3, #40]	@ 0x28
 8003270:	68fb      	ldr	r3, [r7, #12]
 8003272:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003274:	b2da      	uxtb	r2, r3
 8003276:	8979      	ldrh	r1, [r7, #10]
 8003278:	2300      	movs	r3, #0
 800327a:	9300      	str	r3, [sp, #0]
 800327c:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 8003280:	68f8      	ldr	r0, [r7, #12]
 8003282:	f000 fc47 	bl	8003b14 <I2C_TransferConfig>
 8003286:	e00f      	b.n	80032a8 <HAL_I2C_Mem_Write+0x110>
 8003288:	68fb      	ldr	r3, [r7, #12]
 800328a:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800328c:	b29a      	uxth	r2, r3
 800328e:	68fb      	ldr	r3, [r7, #12]
 8003290:	851a      	strh	r2, [r3, #40]	@ 0x28
 8003292:	68fb      	ldr	r3, [r7, #12]
 8003294:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003296:	b2da      	uxtb	r2, r3
 8003298:	8979      	ldrh	r1, [r7, #10]
 800329a:	2300      	movs	r3, #0
 800329c:	9300      	str	r3, [sp, #0]
 800329e:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
 80032a2:	68f8      	ldr	r0, [r7, #12]
 80032a4:	f000 fc36 	bl	8003b14 <I2C_TransferConfig>
 80032a8:	697a      	ldr	r2, [r7, #20]
 80032aa:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 80032ac:	68f8      	ldr	r0, [r7, #12]
 80032ae:	f000 fac6 	bl	800383e <I2C_WaitOnTXISFlagUntilTimeout>
 80032b2:	4603      	mov	r3, r0
 80032b4:	2b00      	cmp	r3, #0
 80032b6:	d001      	beq.n	80032bc <HAL_I2C_Mem_Write+0x124>
 80032b8:	2301      	movs	r3, #1
 80032ba:	e07b      	b.n	80033b4 <HAL_I2C_Mem_Write+0x21c>
 80032bc:	68fb      	ldr	r3, [r7, #12]
 80032be:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80032c0:	781a      	ldrb	r2, [r3, #0]
 80032c2:	68fb      	ldr	r3, [r7, #12]
 80032c4:	681b      	ldr	r3, [r3, #0]
 80032c6:	629a      	str	r2, [r3, #40]	@ 0x28
 80032c8:	68fb      	ldr	r3, [r7, #12]
 80032ca:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80032cc:	1c5a      	adds	r2, r3, #1
 80032ce:	68fb      	ldr	r3, [r7, #12]
 80032d0:	625a      	str	r2, [r3, #36]	@ 0x24
 80032d2:	68fb      	ldr	r3, [r7, #12]
 80032d4:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80032d6:	b29b      	uxth	r3, r3
 80032d8:	3b01      	subs	r3, #1
 80032da:	b29a      	uxth	r2, r3
 80032dc:	68fb      	ldr	r3, [r7, #12]
 80032de:	855a      	strh	r2, [r3, #42]	@ 0x2a
 80032e0:	68fb      	ldr	r3, [r7, #12]
 80032e2:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80032e4:	3b01      	subs	r3, #1
 80032e6:	b29a      	uxth	r2, r3
 80032e8:	68fb      	ldr	r3, [r7, #12]
 80032ea:	851a      	strh	r2, [r3, #40]	@ 0x28
 80032ec:	68fb      	ldr	r3, [r7, #12]
 80032ee:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80032f0:	b29b      	uxth	r3, r3
 80032f2:	2b00      	cmp	r3, #0
 80032f4:	d034      	beq.n	8003360 <HAL_I2C_Mem_Write+0x1c8>
 80032f6:	68fb      	ldr	r3, [r7, #12]
 80032f8:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80032fa:	2b00      	cmp	r3, #0
 80032fc:	d130      	bne.n	8003360 <HAL_I2C_Mem_Write+0x1c8>
 80032fe:	697b      	ldr	r3, [r7, #20]
 8003300:	9300      	str	r3, [sp, #0]
 8003302:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8003304:	2200      	movs	r2, #0
 8003306:	2180      	movs	r1, #128	@ 0x80
 8003308:	68f8      	ldr	r0, [r7, #12]
 800330a:	f000 fa3f 	bl	800378c <I2C_WaitOnFlagUntilTimeout>
 800330e:	4603      	mov	r3, r0
 8003310:	2b00      	cmp	r3, #0
 8003312:	d001      	beq.n	8003318 <HAL_I2C_Mem_Write+0x180>
 8003314:	2301      	movs	r3, #1
 8003316:	e04d      	b.n	80033b4 <HAL_I2C_Mem_Write+0x21c>
 8003318:	68fb      	ldr	r3, [r7, #12]
 800331a:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800331c:	b29b      	uxth	r3, r3
 800331e:	2bff      	cmp	r3, #255	@ 0xff
 8003320:	d90e      	bls.n	8003340 <HAL_I2C_Mem_Write+0x1a8>
 8003322:	68fb      	ldr	r3, [r7, #12]
 8003324:	22ff      	movs	r2, #255	@ 0xff
 8003326:	851a      	strh	r2, [r3, #40]	@ 0x28
 8003328:	68fb      	ldr	r3, [r7, #12]
 800332a:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800332c:	b2da      	uxtb	r2, r3
 800332e:	8979      	ldrh	r1, [r7, #10]
 8003330:	2300      	movs	r3, #0
 8003332:	9300      	str	r3, [sp, #0]
 8003334:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 8003338:	68f8      	ldr	r0, [r7, #12]
 800333a:	f000 fbeb 	bl	8003b14 <I2C_TransferConfig>
 800333e:	e00f      	b.n	8003360 <HAL_I2C_Mem_Write+0x1c8>
 8003340:	68fb      	ldr	r3, [r7, #12]
 8003342:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8003344:	b29a      	uxth	r2, r3
 8003346:	68fb      	ldr	r3, [r7, #12]
 8003348:	851a      	strh	r2, [r3, #40]	@ 0x28
 800334a:	68fb      	ldr	r3, [r7, #12]
 800334c:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800334e:	b2da      	uxtb	r2, r3
 8003350:	8979      	ldrh	r1, [r7, #10]
 8003352:	2300      	movs	r3, #0
 8003354:	9300      	str	r3, [sp, #0]
 8003356:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
 800335a:	68f8      	ldr	r0, [r7, #12]
 800335c:	f000 fbda 	bl	8003b14 <I2C_TransferConfig>
 8003360:	68fb      	ldr	r3, [r7, #12]
 8003362:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8003364:	b29b      	uxth	r3, r3
 8003366:	2b00      	cmp	r3, #0
 8003368:	d19e      	bne.n	80032a8 <HAL_I2C_Mem_Write+0x110>
 800336a:	697a      	ldr	r2, [r7, #20]
 800336c:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 800336e:	68f8      	ldr	r0, [r7, #12]
 8003370:	f000 faac 	bl	80038cc <I2C_WaitOnSTOPFlagUntilTimeout>
 8003374:	4603      	mov	r3, r0
 8003376:	2b00      	cmp	r3, #0
 8003378:	d001      	beq.n	800337e <HAL_I2C_Mem_Write+0x1e6>
 800337a:	2301      	movs	r3, #1
 800337c:	e01a      	b.n	80033b4 <HAL_I2C_Mem_Write+0x21c>
 800337e:	68fb      	ldr	r3, [r7, #12]
 8003380:	681b      	ldr	r3, [r3, #0]
 8003382:	2220      	movs	r2, #32
 8003384:	61da      	str	r2, [r3, #28]
 8003386:	68fb      	ldr	r3, [r7, #12]
 8003388:	681b      	ldr	r3, [r3, #0]
 800338a:	6859      	ldr	r1, [r3, #4]
 800338c:	68fb      	ldr	r3, [r7, #12]
 800338e:	681a      	ldr	r2, [r3, #0]
 8003390:	4b0a      	ldr	r3, [pc, #40]	@ (80033bc <HAL_I2C_Mem_Write+0x224>)
 8003392:	400b      	ands	r3, r1
 8003394:	6053      	str	r3, [r2, #4]
 8003396:	68fb      	ldr	r3, [r7, #12]
 8003398:	2220      	movs	r2, #32
 800339a:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800339e:	68fb      	ldr	r3, [r7, #12]
 80033a0:	2200      	movs	r2, #0
 80033a2:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80033a6:	68fb      	ldr	r3, [r7, #12]
 80033a8:	2200      	movs	r2, #0
 80033aa:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 80033ae:	2300      	movs	r3, #0
 80033b0:	e000      	b.n	80033b4 <HAL_I2C_Mem_Write+0x21c>
 80033b2:	2302      	movs	r3, #2
 80033b4:	4618      	mov	r0, r3
 80033b6:	3718      	adds	r7, #24
 80033b8:	46bd      	mov	sp, r7
 80033ba:	bd80      	pop	{r7, pc}
 80033bc:	fe00e800 	.word	0xfe00e800

080033c0 <HAL_I2C_Mem_Read>:
 80033c0:	b580      	push	{r7, lr}
 80033c2:	b088      	sub	sp, #32
 80033c4:	af02      	add	r7, sp, #8
 80033c6:	60f8      	str	r0, [r7, #12]
 80033c8:	4608      	mov	r0, r1
 80033ca:	4611      	mov	r1, r2
 80033cc:	461a      	mov	r2, r3
 80033ce:	4603      	mov	r3, r0
 80033d0:	817b      	strh	r3, [r7, #10]
 80033d2:	460b      	mov	r3, r1
 80033d4:	813b      	strh	r3, [r7, #8]
 80033d6:	4613      	mov	r3, r2
 80033d8:	80fb      	strh	r3, [r7, #6]
 80033da:	68fb      	ldr	r3, [r7, #12]
 80033dc:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 80033e0:	b2db      	uxtb	r3, r3
 80033e2:	2b20      	cmp	r3, #32
 80033e4:	f040 80fd 	bne.w	80035e2 <HAL_I2C_Mem_Read+0x222>
 80033e8:	6a3b      	ldr	r3, [r7, #32]
 80033ea:	2b00      	cmp	r3, #0
 80033ec:	d002      	beq.n	80033f4 <HAL_I2C_Mem_Read+0x34>
 80033ee:	8cbb      	ldrh	r3, [r7, #36]	@ 0x24
 80033f0:	2b00      	cmp	r3, #0
 80033f2:	d105      	bne.n	8003400 <HAL_I2C_Mem_Read+0x40>
 80033f4:	68fb      	ldr	r3, [r7, #12]
 80033f6:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80033fa:	645a      	str	r2, [r3, #68]	@ 0x44
 80033fc:	2301      	movs	r3, #1
 80033fe:	e0f1      	b.n	80035e4 <HAL_I2C_Mem_Read+0x224>
 8003400:	68fb      	ldr	r3, [r7, #12]
 8003402:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 8003406:	2b01      	cmp	r3, #1
 8003408:	d101      	bne.n	800340e <HAL_I2C_Mem_Read+0x4e>
 800340a:	2302      	movs	r3, #2
 800340c:	e0ea      	b.n	80035e4 <HAL_I2C_Mem_Read+0x224>
 800340e:	68fb      	ldr	r3, [r7, #12]
 8003410:	2201      	movs	r2, #1
 8003412:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8003416:	f7ff fadb 	bl	80029d0 <HAL_GetTick>
 800341a:	6178      	str	r0, [r7, #20]
 800341c:	697b      	ldr	r3, [r7, #20]
 800341e:	9300      	str	r3, [sp, #0]
 8003420:	2319      	movs	r3, #25
 8003422:	2201      	movs	r2, #1
 8003424:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 8003428:	68f8      	ldr	r0, [r7, #12]
 800342a:	f000 f9af 	bl	800378c <I2C_WaitOnFlagUntilTimeout>
 800342e:	4603      	mov	r3, r0
 8003430:	2b00      	cmp	r3, #0
 8003432:	d001      	beq.n	8003438 <HAL_I2C_Mem_Read+0x78>
 8003434:	2301      	movs	r3, #1
 8003436:	e0d5      	b.n	80035e4 <HAL_I2C_Mem_Read+0x224>
 8003438:	68fb      	ldr	r3, [r7, #12]
 800343a:	2222      	movs	r2, #34	@ 0x22
 800343c:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8003440:	68fb      	ldr	r3, [r7, #12]
 8003442:	2240      	movs	r2, #64	@ 0x40
 8003444:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8003448:	68fb      	ldr	r3, [r7, #12]
 800344a:	2200      	movs	r2, #0
 800344c:	645a      	str	r2, [r3, #68]	@ 0x44
 800344e:	68fb      	ldr	r3, [r7, #12]
 8003450:	6a3a      	ldr	r2, [r7, #32]
 8003452:	625a      	str	r2, [r3, #36]	@ 0x24
 8003454:	68fb      	ldr	r3, [r7, #12]
 8003456:	8cba      	ldrh	r2, [r7, #36]	@ 0x24
 8003458:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800345a:	68fb      	ldr	r3, [r7, #12]
 800345c:	2200      	movs	r2, #0
 800345e:	635a      	str	r2, [r3, #52]	@ 0x34
 8003460:	88f8      	ldrh	r0, [r7, #6]
 8003462:	893a      	ldrh	r2, [r7, #8]
 8003464:	8979      	ldrh	r1, [r7, #10]
 8003466:	697b      	ldr	r3, [r7, #20]
 8003468:	9301      	str	r3, [sp, #4]
 800346a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800346c:	9300      	str	r3, [sp, #0]
 800346e:	4603      	mov	r3, r0
 8003470:	68f8      	ldr	r0, [r7, #12]
 8003472:	f000 f913 	bl	800369c <I2C_RequestMemoryRead>
 8003476:	4603      	mov	r3, r0
 8003478:	2b00      	cmp	r3, #0
 800347a:	d005      	beq.n	8003488 <HAL_I2C_Mem_Read+0xc8>
 800347c:	68fb      	ldr	r3, [r7, #12]
 800347e:	2200      	movs	r2, #0
 8003480:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8003484:	2301      	movs	r3, #1
 8003486:	e0ad      	b.n	80035e4 <HAL_I2C_Mem_Read+0x224>
 8003488:	68fb      	ldr	r3, [r7, #12]
 800348a:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800348c:	b29b      	uxth	r3, r3
 800348e:	2bff      	cmp	r3, #255	@ 0xff
 8003490:	d90e      	bls.n	80034b0 <HAL_I2C_Mem_Read+0xf0>
 8003492:	68fb      	ldr	r3, [r7, #12]
 8003494:	2201      	movs	r2, #1
 8003496:	851a      	strh	r2, [r3, #40]	@ 0x28
 8003498:	68fb      	ldr	r3, [r7, #12]
 800349a:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800349c:	b2da      	uxtb	r2, r3
 800349e:	8979      	ldrh	r1, [r7, #10]
 80034a0:	4b52      	ldr	r3, [pc, #328]	@ (80035ec <HAL_I2C_Mem_Read+0x22c>)
 80034a2:	9300      	str	r3, [sp, #0]
 80034a4:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 80034a8:	68f8      	ldr	r0, [r7, #12]
 80034aa:	f000 fb33 	bl	8003b14 <I2C_TransferConfig>
 80034ae:	e00f      	b.n	80034d0 <HAL_I2C_Mem_Read+0x110>
 80034b0:	68fb      	ldr	r3, [r7, #12]
 80034b2:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80034b4:	b29a      	uxth	r2, r3
 80034b6:	68fb      	ldr	r3, [r7, #12]
 80034b8:	851a      	strh	r2, [r3, #40]	@ 0x28
 80034ba:	68fb      	ldr	r3, [r7, #12]
 80034bc:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80034be:	b2da      	uxtb	r2, r3
 80034c0:	8979      	ldrh	r1, [r7, #10]
 80034c2:	4b4a      	ldr	r3, [pc, #296]	@ (80035ec <HAL_I2C_Mem_Read+0x22c>)
 80034c4:	9300      	str	r3, [sp, #0]
 80034c6:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
 80034ca:	68f8      	ldr	r0, [r7, #12]
 80034cc:	f000 fb22 	bl	8003b14 <I2C_TransferConfig>
 80034d0:	697b      	ldr	r3, [r7, #20]
 80034d2:	9300      	str	r3, [sp, #0]
 80034d4:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80034d6:	2200      	movs	r2, #0
 80034d8:	2104      	movs	r1, #4
 80034da:	68f8      	ldr	r0, [r7, #12]
 80034dc:	f000 f956 	bl	800378c <I2C_WaitOnFlagUntilTimeout>
 80034e0:	4603      	mov	r3, r0
 80034e2:	2b00      	cmp	r3, #0
 80034e4:	d001      	beq.n	80034ea <HAL_I2C_Mem_Read+0x12a>
 80034e6:	2301      	movs	r3, #1
 80034e8:	e07c      	b.n	80035e4 <HAL_I2C_Mem_Read+0x224>
 80034ea:	68fb      	ldr	r3, [r7, #12]
 80034ec:	681b      	ldr	r3, [r3, #0]
 80034ee:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 80034f0:	68fb      	ldr	r3, [r7, #12]
 80034f2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80034f4:	b2d2      	uxtb	r2, r2
 80034f6:	701a      	strb	r2, [r3, #0]
 80034f8:	68fb      	ldr	r3, [r7, #12]
 80034fa:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80034fc:	1c5a      	adds	r2, r3, #1
 80034fe:	68fb      	ldr	r3, [r7, #12]
 8003500:	625a      	str	r2, [r3, #36]	@ 0x24
 8003502:	68fb      	ldr	r3, [r7, #12]
 8003504:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003506:	3b01      	subs	r3, #1
 8003508:	b29a      	uxth	r2, r3
 800350a:	68fb      	ldr	r3, [r7, #12]
 800350c:	851a      	strh	r2, [r3, #40]	@ 0x28
 800350e:	68fb      	ldr	r3, [r7, #12]
 8003510:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8003512:	b29b      	uxth	r3, r3
 8003514:	3b01      	subs	r3, #1
 8003516:	b29a      	uxth	r2, r3
 8003518:	68fb      	ldr	r3, [r7, #12]
 800351a:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800351c:	68fb      	ldr	r3, [r7, #12]
 800351e:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8003520:	b29b      	uxth	r3, r3
 8003522:	2b00      	cmp	r3, #0
 8003524:	d034      	beq.n	8003590 <HAL_I2C_Mem_Read+0x1d0>
 8003526:	68fb      	ldr	r3, [r7, #12]
 8003528:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800352a:	2b00      	cmp	r3, #0
 800352c:	d130      	bne.n	8003590 <HAL_I2C_Mem_Read+0x1d0>
 800352e:	697b      	ldr	r3, [r7, #20]
 8003530:	9300      	str	r3, [sp, #0]
 8003532:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8003534:	2200      	movs	r2, #0
 8003536:	2180      	movs	r1, #128	@ 0x80
 8003538:	68f8      	ldr	r0, [r7, #12]
 800353a:	f000 f927 	bl	800378c <I2C_WaitOnFlagUntilTimeout>
 800353e:	4603      	mov	r3, r0
 8003540:	2b00      	cmp	r3, #0
 8003542:	d001      	beq.n	8003548 <HAL_I2C_Mem_Read+0x188>
 8003544:	2301      	movs	r3, #1
 8003546:	e04d      	b.n	80035e4 <HAL_I2C_Mem_Read+0x224>
 8003548:	68fb      	ldr	r3, [r7, #12]
 800354a:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800354c:	b29b      	uxth	r3, r3
 800354e:	2bff      	cmp	r3, #255	@ 0xff
 8003550:	d90e      	bls.n	8003570 <HAL_I2C_Mem_Read+0x1b0>
 8003552:	68fb      	ldr	r3, [r7, #12]
 8003554:	2201      	movs	r2, #1
 8003556:	851a      	strh	r2, [r3, #40]	@ 0x28
 8003558:	68fb      	ldr	r3, [r7, #12]
 800355a:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800355c:	b2da      	uxtb	r2, r3
 800355e:	8979      	ldrh	r1, [r7, #10]
 8003560:	2300      	movs	r3, #0
 8003562:	9300      	str	r3, [sp, #0]
 8003564:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 8003568:	68f8      	ldr	r0, [r7, #12]
 800356a:	f000 fad3 	bl	8003b14 <I2C_TransferConfig>
 800356e:	e00f      	b.n	8003590 <HAL_I2C_Mem_Read+0x1d0>
 8003570:	68fb      	ldr	r3, [r7, #12]
 8003572:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8003574:	b29a      	uxth	r2, r3
 8003576:	68fb      	ldr	r3, [r7, #12]
 8003578:	851a      	strh	r2, [r3, #40]	@ 0x28
 800357a:	68fb      	ldr	r3, [r7, #12]
 800357c:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800357e:	b2da      	uxtb	r2, r3
 8003580:	8979      	ldrh	r1, [r7, #10]
 8003582:	2300      	movs	r3, #0
 8003584:	9300      	str	r3, [sp, #0]
 8003586:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
 800358a:	68f8      	ldr	r0, [r7, #12]
 800358c:	f000 fac2 	bl	8003b14 <I2C_TransferConfig>
 8003590:	68fb      	ldr	r3, [r7, #12]
 8003592:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8003594:	b29b      	uxth	r3, r3
 8003596:	2b00      	cmp	r3, #0
 8003598:	d19a      	bne.n	80034d0 <HAL_I2C_Mem_Read+0x110>
 800359a:	697a      	ldr	r2, [r7, #20]
 800359c:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 800359e:	68f8      	ldr	r0, [r7, #12]
 80035a0:	f000 f994 	bl	80038cc <I2C_WaitOnSTOPFlagUntilTimeout>
 80035a4:	4603      	mov	r3, r0
 80035a6:	2b00      	cmp	r3, #0
 80035a8:	d001      	beq.n	80035ae <HAL_I2C_Mem_Read+0x1ee>
 80035aa:	2301      	movs	r3, #1
 80035ac:	e01a      	b.n	80035e4 <HAL_I2C_Mem_Read+0x224>
 80035ae:	68fb      	ldr	r3, [r7, #12]
 80035b0:	681b      	ldr	r3, [r3, #0]
 80035b2:	2220      	movs	r2, #32
 80035b4:	61da      	str	r2, [r3, #28]
 80035b6:	68fb      	ldr	r3, [r7, #12]
 80035b8:	681b      	ldr	r3, [r3, #0]
 80035ba:	6859      	ldr	r1, [r3, #4]
 80035bc:	68fb      	ldr	r3, [r7, #12]
 80035be:	681a      	ldr	r2, [r3, #0]
 80035c0:	4b0b      	ldr	r3, [pc, #44]	@ (80035f0 <HAL_I2C_Mem_Read+0x230>)
 80035c2:	400b      	ands	r3, r1
 80035c4:	6053      	str	r3, [r2, #4]
 80035c6:	68fb      	ldr	r3, [r7, #12]
 80035c8:	2220      	movs	r2, #32
 80035ca:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80035ce:	68fb      	ldr	r3, [r7, #12]
 80035d0:	2200      	movs	r2, #0
 80035d2:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80035d6:	68fb      	ldr	r3, [r7, #12]
 80035d8:	2200      	movs	r2, #0
 80035da:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 80035de:	2300      	movs	r3, #0
 80035e0:	e000      	b.n	80035e4 <HAL_I2C_Mem_Read+0x224>
 80035e2:	2302      	movs	r3, #2
 80035e4:	4618      	mov	r0, r3
 80035e6:	3718      	adds	r7, #24
 80035e8:	46bd      	mov	sp, r7
 80035ea:	bd80      	pop	{r7, pc}
 80035ec:	80002400 	.word	0x80002400
 80035f0:	fe00e800 	.word	0xfe00e800

080035f4 <I2C_RequestMemoryWrite>:
 80035f4:	b580      	push	{r7, lr}
 80035f6:	b086      	sub	sp, #24
 80035f8:	af02      	add	r7, sp, #8
 80035fa:	60f8      	str	r0, [r7, #12]
 80035fc:	4608      	mov	r0, r1
 80035fe:	4611      	mov	r1, r2
 8003600:	461a      	mov	r2, r3
 8003602:	4603      	mov	r3, r0
 8003604:	817b      	strh	r3, [r7, #10]
 8003606:	460b      	mov	r3, r1
 8003608:	813b      	strh	r3, [r7, #8]
 800360a:	4613      	mov	r3, r2
 800360c:	80fb      	strh	r3, [r7, #6]
 800360e:	88fb      	ldrh	r3, [r7, #6]
 8003610:	b2da      	uxtb	r2, r3
 8003612:	8979      	ldrh	r1, [r7, #10]
 8003614:	4b20      	ldr	r3, [pc, #128]	@ (8003698 <I2C_RequestMemoryWrite+0xa4>)
 8003616:	9300      	str	r3, [sp, #0]
 8003618:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 800361c:	68f8      	ldr	r0, [r7, #12]
 800361e:	f000 fa79 	bl	8003b14 <I2C_TransferConfig>
 8003622:	69fa      	ldr	r2, [r7, #28]
 8003624:	69b9      	ldr	r1, [r7, #24]
 8003626:	68f8      	ldr	r0, [r7, #12]
 8003628:	f000 f909 	bl	800383e <I2C_WaitOnTXISFlagUntilTimeout>
 800362c:	4603      	mov	r3, r0
 800362e:	2b00      	cmp	r3, #0
 8003630:	d001      	beq.n	8003636 <I2C_RequestMemoryWrite+0x42>
 8003632:	2301      	movs	r3, #1
 8003634:	e02c      	b.n	8003690 <I2C_RequestMemoryWrite+0x9c>
 8003636:	88fb      	ldrh	r3, [r7, #6]
 8003638:	2b01      	cmp	r3, #1
 800363a:	d105      	bne.n	8003648 <I2C_RequestMemoryWrite+0x54>
 800363c:	893b      	ldrh	r3, [r7, #8]
 800363e:	b2da      	uxtb	r2, r3
 8003640:	68fb      	ldr	r3, [r7, #12]
 8003642:	681b      	ldr	r3, [r3, #0]
 8003644:	629a      	str	r2, [r3, #40]	@ 0x28
 8003646:	e015      	b.n	8003674 <I2C_RequestMemoryWrite+0x80>
 8003648:	893b      	ldrh	r3, [r7, #8]
 800364a:	0a1b      	lsrs	r3, r3, #8
 800364c:	b29b      	uxth	r3, r3
 800364e:	b2da      	uxtb	r2, r3
 8003650:	68fb      	ldr	r3, [r7, #12]
 8003652:	681b      	ldr	r3, [r3, #0]
 8003654:	629a      	str	r2, [r3, #40]	@ 0x28
 8003656:	69fa      	ldr	r2, [r7, #28]
 8003658:	69b9      	ldr	r1, [r7, #24]
 800365a:	68f8      	ldr	r0, [r7, #12]
 800365c:	f000 f8ef 	bl	800383e <I2C_WaitOnTXISFlagUntilTimeout>
 8003660:	4603      	mov	r3, r0
 8003662:	2b00      	cmp	r3, #0
 8003664:	d001      	beq.n	800366a <I2C_RequestMemoryWrite+0x76>
 8003666:	2301      	movs	r3, #1
 8003668:	e012      	b.n	8003690 <I2C_RequestMemoryWrite+0x9c>
 800366a:	893b      	ldrh	r3, [r7, #8]
 800366c:	b2da      	uxtb	r2, r3
 800366e:	68fb      	ldr	r3, [r7, #12]
 8003670:	681b      	ldr	r3, [r3, #0]
 8003672:	629a      	str	r2, [r3, #40]	@ 0x28
 8003674:	69fb      	ldr	r3, [r7, #28]
 8003676:	9300      	str	r3, [sp, #0]
 8003678:	69bb      	ldr	r3, [r7, #24]
 800367a:	2200      	movs	r2, #0
 800367c:	2180      	movs	r1, #128	@ 0x80
 800367e:	68f8      	ldr	r0, [r7, #12]
 8003680:	f000 f884 	bl	800378c <I2C_WaitOnFlagUntilTimeout>
 8003684:	4603      	mov	r3, r0
 8003686:	2b00      	cmp	r3, #0
 8003688:	d001      	beq.n	800368e <I2C_RequestMemoryWrite+0x9a>
 800368a:	2301      	movs	r3, #1
 800368c:	e000      	b.n	8003690 <I2C_RequestMemoryWrite+0x9c>
 800368e:	2300      	movs	r3, #0
 8003690:	4618      	mov	r0, r3
 8003692:	3710      	adds	r7, #16
 8003694:	46bd      	mov	sp, r7
 8003696:	bd80      	pop	{r7, pc}
 8003698:	80002000 	.word	0x80002000

0800369c <I2C_RequestMemoryRead>:
 800369c:	b580      	push	{r7, lr}
 800369e:	b086      	sub	sp, #24
 80036a0:	af02      	add	r7, sp, #8
 80036a2:	60f8      	str	r0, [r7, #12]
 80036a4:	4608      	mov	r0, r1
 80036a6:	4611      	mov	r1, r2
 80036a8:	461a      	mov	r2, r3
 80036aa:	4603      	mov	r3, r0
 80036ac:	817b      	strh	r3, [r7, #10]
 80036ae:	460b      	mov	r3, r1
 80036b0:	813b      	strh	r3, [r7, #8]
 80036b2:	4613      	mov	r3, r2
 80036b4:	80fb      	strh	r3, [r7, #6]
 80036b6:	88fb      	ldrh	r3, [r7, #6]
 80036b8:	b2da      	uxtb	r2, r3
 80036ba:	8979      	ldrh	r1, [r7, #10]
 80036bc:	4b20      	ldr	r3, [pc, #128]	@ (8003740 <I2C_RequestMemoryRead+0xa4>)
 80036be:	9300      	str	r3, [sp, #0]
 80036c0:	2300      	movs	r3, #0
 80036c2:	68f8      	ldr	r0, [r7, #12]
 80036c4:	f000 fa26 	bl	8003b14 <I2C_TransferConfig>
 80036c8:	69fa      	ldr	r2, [r7, #28]
 80036ca:	69b9      	ldr	r1, [r7, #24]
 80036cc:	68f8      	ldr	r0, [r7, #12]
 80036ce:	f000 f8b6 	bl	800383e <I2C_WaitOnTXISFlagUntilTimeout>
 80036d2:	4603      	mov	r3, r0
 80036d4:	2b00      	cmp	r3, #0
 80036d6:	d001      	beq.n	80036dc <I2C_RequestMemoryRead+0x40>
 80036d8:	2301      	movs	r3, #1
 80036da:	e02c      	b.n	8003736 <I2C_RequestMemoryRead+0x9a>
 80036dc:	88fb      	ldrh	r3, [r7, #6]
 80036de:	2b01      	cmp	r3, #1
 80036e0:	d105      	bne.n	80036ee <I2C_RequestMemoryRead+0x52>
 80036e2:	893b      	ldrh	r3, [r7, #8]
 80036e4:	b2da      	uxtb	r2, r3
 80036e6:	68fb      	ldr	r3, [r7, #12]
 80036e8:	681b      	ldr	r3, [r3, #0]
 80036ea:	629a      	str	r2, [r3, #40]	@ 0x28
 80036ec:	e015      	b.n	800371a <I2C_RequestMemoryRead+0x7e>
 80036ee:	893b      	ldrh	r3, [r7, #8]
 80036f0:	0a1b      	lsrs	r3, r3, #8
 80036f2:	b29b      	uxth	r3, r3
 80036f4:	b2da      	uxtb	r2, r3
 80036f6:	68fb      	ldr	r3, [r7, #12]
 80036f8:	681b      	ldr	r3, [r3, #0]
 80036fa:	629a      	str	r2, [r3, #40]	@ 0x28
 80036fc:	69fa      	ldr	r2, [r7, #28]
 80036fe:	69b9      	ldr	r1, [r7, #24]
 8003700:	68f8      	ldr	r0, [r7, #12]
 8003702:	f000 f89c 	bl	800383e <I2C_WaitOnTXISFlagUntilTimeout>
 8003706:	4603      	mov	r3, r0
 8003708:	2b00      	cmp	r3, #0
 800370a:	d001      	beq.n	8003710 <I2C_RequestMemoryRead+0x74>
 800370c:	2301      	movs	r3, #1
 800370e:	e012      	b.n	8003736 <I2C_RequestMemoryRead+0x9a>
 8003710:	893b      	ldrh	r3, [r7, #8]
 8003712:	b2da      	uxtb	r2, r3
 8003714:	68fb      	ldr	r3, [r7, #12]
 8003716:	681b      	ldr	r3, [r3, #0]
 8003718:	629a      	str	r2, [r3, #40]	@ 0x28
 800371a:	69fb      	ldr	r3, [r7, #28]
 800371c:	9300      	str	r3, [sp, #0]
 800371e:	69bb      	ldr	r3, [r7, #24]
 8003720:	2200      	movs	r2, #0
 8003722:	2140      	movs	r1, #64	@ 0x40
 8003724:	68f8      	ldr	r0, [r7, #12]
 8003726:	f000 f831 	bl	800378c <I2C_WaitOnFlagUntilTimeout>
 800372a:	4603      	mov	r3, r0
 800372c:	2b00      	cmp	r3, #0
 800372e:	d001      	beq.n	8003734 <I2C_RequestMemoryRead+0x98>
 8003730:	2301      	movs	r3, #1
 8003732:	e000      	b.n	8003736 <I2C_RequestMemoryRead+0x9a>
 8003734:	2300      	movs	r3, #0
 8003736:	4618      	mov	r0, r3
 8003738:	3710      	adds	r7, #16
 800373a:	46bd      	mov	sp, r7
 800373c:	bd80      	pop	{r7, pc}
 800373e:	bf00      	nop
 8003740:	80002000 	.word	0x80002000

08003744 <I2C_Flush_TXDR>:
 8003744:	b480      	push	{r7}
 8003746:	b083      	sub	sp, #12
 8003748:	af00      	add	r7, sp, #0
 800374a:	6078      	str	r0, [r7, #4]
 800374c:	687b      	ldr	r3, [r7, #4]
 800374e:	681b      	ldr	r3, [r3, #0]
 8003750:	699b      	ldr	r3, [r3, #24]
 8003752:	f003 0302 	and.w	r3, r3, #2
 8003756:	2b02      	cmp	r3, #2
 8003758:	d103      	bne.n	8003762 <I2C_Flush_TXDR+0x1e>
 800375a:	687b      	ldr	r3, [r7, #4]
 800375c:	681b      	ldr	r3, [r3, #0]
 800375e:	2200      	movs	r2, #0
 8003760:	629a      	str	r2, [r3, #40]	@ 0x28
 8003762:	687b      	ldr	r3, [r7, #4]
 8003764:	681b      	ldr	r3, [r3, #0]
 8003766:	699b      	ldr	r3, [r3, #24]
 8003768:	f003 0301 	and.w	r3, r3, #1
 800376c:	2b01      	cmp	r3, #1
 800376e:	d007      	beq.n	8003780 <I2C_Flush_TXDR+0x3c>
 8003770:	687b      	ldr	r3, [r7, #4]
 8003772:	681b      	ldr	r3, [r3, #0]
 8003774:	699a      	ldr	r2, [r3, #24]
 8003776:	687b      	ldr	r3, [r7, #4]
 8003778:	681b      	ldr	r3, [r3, #0]
 800377a:	f042 0201 	orr.w	r2, r2, #1
 800377e:	619a      	str	r2, [r3, #24]
 8003780:	bf00      	nop
 8003782:	370c      	adds	r7, #12
 8003784:	46bd      	mov	sp, r7
 8003786:	f85d 7b04 	ldr.w	r7, [sp], #4
 800378a:	4770      	bx	lr

0800378c <I2C_WaitOnFlagUntilTimeout>:
 800378c:	b580      	push	{r7, lr}
 800378e:	b084      	sub	sp, #16
 8003790:	af00      	add	r7, sp, #0
 8003792:	60f8      	str	r0, [r7, #12]
 8003794:	60b9      	str	r1, [r7, #8]
 8003796:	603b      	str	r3, [r7, #0]
 8003798:	4613      	mov	r3, r2
 800379a:	71fb      	strb	r3, [r7, #7]
 800379c:	e03b      	b.n	8003816 <I2C_WaitOnFlagUntilTimeout+0x8a>
 800379e:	69ba      	ldr	r2, [r7, #24]
 80037a0:	6839      	ldr	r1, [r7, #0]
 80037a2:	68f8      	ldr	r0, [r7, #12]
 80037a4:	f000 f8d6 	bl	8003954 <I2C_IsErrorOccurred>
 80037a8:	4603      	mov	r3, r0
 80037aa:	2b00      	cmp	r3, #0
 80037ac:	d001      	beq.n	80037b2 <I2C_WaitOnFlagUntilTimeout+0x26>
 80037ae:	2301      	movs	r3, #1
 80037b0:	e041      	b.n	8003836 <I2C_WaitOnFlagUntilTimeout+0xaa>
 80037b2:	683b      	ldr	r3, [r7, #0]
 80037b4:	f1b3 3fff 	cmp.w	r3, #4294967295
 80037b8:	d02d      	beq.n	8003816 <I2C_WaitOnFlagUntilTimeout+0x8a>
 80037ba:	f7ff f909 	bl	80029d0 <HAL_GetTick>
 80037be:	4602      	mov	r2, r0
 80037c0:	69bb      	ldr	r3, [r7, #24]
 80037c2:	1ad3      	subs	r3, r2, r3
 80037c4:	683a      	ldr	r2, [r7, #0]
 80037c6:	429a      	cmp	r2, r3
 80037c8:	d302      	bcc.n	80037d0 <I2C_WaitOnFlagUntilTimeout+0x44>
 80037ca:	683b      	ldr	r3, [r7, #0]
 80037cc:	2b00      	cmp	r3, #0
 80037ce:	d122      	bne.n	8003816 <I2C_WaitOnFlagUntilTimeout+0x8a>
 80037d0:	68fb      	ldr	r3, [r7, #12]
 80037d2:	681b      	ldr	r3, [r3, #0]
 80037d4:	699a      	ldr	r2, [r3, #24]
 80037d6:	68bb      	ldr	r3, [r7, #8]
 80037d8:	4013      	ands	r3, r2
 80037da:	68ba      	ldr	r2, [r7, #8]
 80037dc:	429a      	cmp	r2, r3
 80037de:	bf0c      	ite	eq
 80037e0:	2301      	moveq	r3, #1
 80037e2:	2300      	movne	r3, #0
 80037e4:	b2db      	uxtb	r3, r3
 80037e6:	461a      	mov	r2, r3
 80037e8:	79fb      	ldrb	r3, [r7, #7]
 80037ea:	429a      	cmp	r2, r3
 80037ec:	d113      	bne.n	8003816 <I2C_WaitOnFlagUntilTimeout+0x8a>
 80037ee:	68fb      	ldr	r3, [r7, #12]
 80037f0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80037f2:	f043 0220 	orr.w	r2, r3, #32
 80037f6:	68fb      	ldr	r3, [r7, #12]
 80037f8:	645a      	str	r2, [r3, #68]	@ 0x44
 80037fa:	68fb      	ldr	r3, [r7, #12]
 80037fc:	2220      	movs	r2, #32
 80037fe:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8003802:	68fb      	ldr	r3, [r7, #12]
 8003804:	2200      	movs	r2, #0
 8003806:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 800380a:	68fb      	ldr	r3, [r7, #12]
 800380c:	2200      	movs	r2, #0
 800380e:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8003812:	2301      	movs	r3, #1
 8003814:	e00f      	b.n	8003836 <I2C_WaitOnFlagUntilTimeout+0xaa>
 8003816:	68fb      	ldr	r3, [r7, #12]
 8003818:	681b      	ldr	r3, [r3, #0]
 800381a:	699a      	ldr	r2, [r3, #24]
 800381c:	68bb      	ldr	r3, [r7, #8]
 800381e:	4013      	ands	r3, r2
 8003820:	68ba      	ldr	r2, [r7, #8]
 8003822:	429a      	cmp	r2, r3
 8003824:	bf0c      	ite	eq
 8003826:	2301      	moveq	r3, #1
 8003828:	2300      	movne	r3, #0
 800382a:	b2db      	uxtb	r3, r3
 800382c:	461a      	mov	r2, r3
 800382e:	79fb      	ldrb	r3, [r7, #7]
 8003830:	429a      	cmp	r2, r3
 8003832:	d0b4      	beq.n	800379e <I2C_WaitOnFlagUntilTimeout+0x12>
 8003834:	2300      	movs	r3, #0
 8003836:	4618      	mov	r0, r3
 8003838:	3710      	adds	r7, #16
 800383a:	46bd      	mov	sp, r7
 800383c:	bd80      	pop	{r7, pc}

0800383e <I2C_WaitOnTXISFlagUntilTimeout>:
 800383e:	b580      	push	{r7, lr}
 8003840:	b084      	sub	sp, #16
 8003842:	af00      	add	r7, sp, #0
 8003844:	60f8      	str	r0, [r7, #12]
 8003846:	60b9      	str	r1, [r7, #8]
 8003848:	607a      	str	r2, [r7, #4]
 800384a:	e033      	b.n	80038b4 <I2C_WaitOnTXISFlagUntilTimeout+0x76>
 800384c:	687a      	ldr	r2, [r7, #4]
 800384e:	68b9      	ldr	r1, [r7, #8]
 8003850:	68f8      	ldr	r0, [r7, #12]
 8003852:	f000 f87f 	bl	8003954 <I2C_IsErrorOccurred>
 8003856:	4603      	mov	r3, r0
 8003858:	2b00      	cmp	r3, #0
 800385a:	d001      	beq.n	8003860 <I2C_WaitOnTXISFlagUntilTimeout+0x22>
 800385c:	2301      	movs	r3, #1
 800385e:	e031      	b.n	80038c4 <I2C_WaitOnTXISFlagUntilTimeout+0x86>
 8003860:	68bb      	ldr	r3, [r7, #8]
 8003862:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003866:	d025      	beq.n	80038b4 <I2C_WaitOnTXISFlagUntilTimeout+0x76>
 8003868:	f7ff f8b2 	bl	80029d0 <HAL_GetTick>
 800386c:	4602      	mov	r2, r0
 800386e:	687b      	ldr	r3, [r7, #4]
 8003870:	1ad3      	subs	r3, r2, r3
 8003872:	68ba      	ldr	r2, [r7, #8]
 8003874:	429a      	cmp	r2, r3
 8003876:	d302      	bcc.n	800387e <I2C_WaitOnTXISFlagUntilTimeout+0x40>
 8003878:	68bb      	ldr	r3, [r7, #8]
 800387a:	2b00      	cmp	r3, #0
 800387c:	d11a      	bne.n	80038b4 <I2C_WaitOnTXISFlagUntilTimeout+0x76>
 800387e:	68fb      	ldr	r3, [r7, #12]
 8003880:	681b      	ldr	r3, [r3, #0]
 8003882:	699b      	ldr	r3, [r3, #24]
 8003884:	f003 0302 	and.w	r3, r3, #2
 8003888:	2b02      	cmp	r3, #2
 800388a:	d013      	beq.n	80038b4 <I2C_WaitOnTXISFlagUntilTimeout+0x76>
 800388c:	68fb      	ldr	r3, [r7, #12]
 800388e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003890:	f043 0220 	orr.w	r2, r3, #32
 8003894:	68fb      	ldr	r3, [r7, #12]
 8003896:	645a      	str	r2, [r3, #68]	@ 0x44
 8003898:	68fb      	ldr	r3, [r7, #12]
 800389a:	2220      	movs	r2, #32
 800389c:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80038a0:	68fb      	ldr	r3, [r7, #12]
 80038a2:	2200      	movs	r2, #0
 80038a4:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80038a8:	68fb      	ldr	r3, [r7, #12]
 80038aa:	2200      	movs	r2, #0
 80038ac:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 80038b0:	2301      	movs	r3, #1
 80038b2:	e007      	b.n	80038c4 <I2C_WaitOnTXISFlagUntilTimeout+0x86>
 80038b4:	68fb      	ldr	r3, [r7, #12]
 80038b6:	681b      	ldr	r3, [r3, #0]
 80038b8:	699b      	ldr	r3, [r3, #24]
 80038ba:	f003 0302 	and.w	r3, r3, #2
 80038be:	2b02      	cmp	r3, #2
 80038c0:	d1c4      	bne.n	800384c <I2C_WaitOnTXISFlagUntilTimeout+0xe>
 80038c2:	2300      	movs	r3, #0
 80038c4:	4618      	mov	r0, r3
 80038c6:	3710      	adds	r7, #16
 80038c8:	46bd      	mov	sp, r7
 80038ca:	bd80      	pop	{r7, pc}

080038cc <I2C_WaitOnSTOPFlagUntilTimeout>:
 80038cc:	b580      	push	{r7, lr}
 80038ce:	b084      	sub	sp, #16
 80038d0:	af00      	add	r7, sp, #0
 80038d2:	60f8      	str	r0, [r7, #12]
 80038d4:	60b9      	str	r1, [r7, #8]
 80038d6:	607a      	str	r2, [r7, #4]
 80038d8:	e02f      	b.n	800393a <I2C_WaitOnSTOPFlagUntilTimeout+0x6e>
 80038da:	687a      	ldr	r2, [r7, #4]
 80038dc:	68b9      	ldr	r1, [r7, #8]
 80038de:	68f8      	ldr	r0, [r7, #12]
 80038e0:	f000 f838 	bl	8003954 <I2C_IsErrorOccurred>
 80038e4:	4603      	mov	r3, r0
 80038e6:	2b00      	cmp	r3, #0
 80038e8:	d001      	beq.n	80038ee <I2C_WaitOnSTOPFlagUntilTimeout+0x22>
 80038ea:	2301      	movs	r3, #1
 80038ec:	e02d      	b.n	800394a <I2C_WaitOnSTOPFlagUntilTimeout+0x7e>
 80038ee:	f7ff f86f 	bl	80029d0 <HAL_GetTick>
 80038f2:	4602      	mov	r2, r0
 80038f4:	687b      	ldr	r3, [r7, #4]
 80038f6:	1ad3      	subs	r3, r2, r3
 80038f8:	68ba      	ldr	r2, [r7, #8]
 80038fa:	429a      	cmp	r2, r3
 80038fc:	d302      	bcc.n	8003904 <I2C_WaitOnSTOPFlagUntilTimeout+0x38>
 80038fe:	68bb      	ldr	r3, [r7, #8]
 8003900:	2b00      	cmp	r3, #0
 8003902:	d11a      	bne.n	800393a <I2C_WaitOnSTOPFlagUntilTimeout+0x6e>
 8003904:	68fb      	ldr	r3, [r7, #12]
 8003906:	681b      	ldr	r3, [r3, #0]
 8003908:	699b      	ldr	r3, [r3, #24]
 800390a:	f003 0320 	and.w	r3, r3, #32
 800390e:	2b20      	cmp	r3, #32
 8003910:	d013      	beq.n	800393a <I2C_WaitOnSTOPFlagUntilTimeout+0x6e>
 8003912:	68fb      	ldr	r3, [r7, #12]
 8003914:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003916:	f043 0220 	orr.w	r2, r3, #32
 800391a:	68fb      	ldr	r3, [r7, #12]
 800391c:	645a      	str	r2, [r3, #68]	@ 0x44
 800391e:	68fb      	ldr	r3, [r7, #12]
 8003920:	2220      	movs	r2, #32
 8003922:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8003926:	68fb      	ldr	r3, [r7, #12]
 8003928:	2200      	movs	r2, #0
 800392a:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 800392e:	68fb      	ldr	r3, [r7, #12]
 8003930:	2200      	movs	r2, #0
 8003932:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8003936:	2301      	movs	r3, #1
 8003938:	e007      	b.n	800394a <I2C_WaitOnSTOPFlagUntilTimeout+0x7e>
 800393a:	68fb      	ldr	r3, [r7, #12]
 800393c:	681b      	ldr	r3, [r3, #0]
 800393e:	699b      	ldr	r3, [r3, #24]
 8003940:	f003 0320 	and.w	r3, r3, #32
 8003944:	2b20      	cmp	r3, #32
 8003946:	d1c8      	bne.n	80038da <I2C_WaitOnSTOPFlagUntilTimeout+0xe>
 8003948:	2300      	movs	r3, #0
 800394a:	4618      	mov	r0, r3
 800394c:	3710      	adds	r7, #16
 800394e:	46bd      	mov	sp, r7
 8003950:	bd80      	pop	{r7, pc}
	...

08003954 <I2C_IsErrorOccurred>:
 8003954:	b580      	push	{r7, lr}
 8003956:	b08a      	sub	sp, #40	@ 0x28
 8003958:	af00      	add	r7, sp, #0
 800395a:	60f8      	str	r0, [r7, #12]
 800395c:	60b9      	str	r1, [r7, #8]
 800395e:	607a      	str	r2, [r7, #4]
 8003960:	2300      	movs	r3, #0
 8003962:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 8003966:	68fb      	ldr	r3, [r7, #12]
 8003968:	681b      	ldr	r3, [r3, #0]
 800396a:	699b      	ldr	r3, [r3, #24]
 800396c:	61bb      	str	r3, [r7, #24]
 800396e:	2300      	movs	r3, #0
 8003970:	623b      	str	r3, [r7, #32]
 8003972:	687b      	ldr	r3, [r7, #4]
 8003974:	61fb      	str	r3, [r7, #28]
 8003976:	69bb      	ldr	r3, [r7, #24]
 8003978:	f003 0310 	and.w	r3, r3, #16
 800397c:	2b00      	cmp	r3, #0
 800397e:	d068      	beq.n	8003a52 <I2C_IsErrorOccurred+0xfe>
 8003980:	68fb      	ldr	r3, [r7, #12]
 8003982:	681b      	ldr	r3, [r3, #0]
 8003984:	2210      	movs	r2, #16
 8003986:	61da      	str	r2, [r3, #28]
 8003988:	e049      	b.n	8003a1e <I2C_IsErrorOccurred+0xca>
 800398a:	68bb      	ldr	r3, [r7, #8]
 800398c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003990:	d045      	beq.n	8003a1e <I2C_IsErrorOccurred+0xca>
 8003992:	f7ff f81d 	bl	80029d0 <HAL_GetTick>
 8003996:	4602      	mov	r2, r0
 8003998:	69fb      	ldr	r3, [r7, #28]
 800399a:	1ad3      	subs	r3, r2, r3
 800399c:	68ba      	ldr	r2, [r7, #8]
 800399e:	429a      	cmp	r2, r3
 80039a0:	d302      	bcc.n	80039a8 <I2C_IsErrorOccurred+0x54>
 80039a2:	68bb      	ldr	r3, [r7, #8]
 80039a4:	2b00      	cmp	r3, #0
 80039a6:	d13a      	bne.n	8003a1e <I2C_IsErrorOccurred+0xca>
 80039a8:	68fb      	ldr	r3, [r7, #12]
 80039aa:	681b      	ldr	r3, [r3, #0]
 80039ac:	685b      	ldr	r3, [r3, #4]
 80039ae:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 80039b2:	617b      	str	r3, [r7, #20]
 80039b4:	68fb      	ldr	r3, [r7, #12]
 80039b6:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 80039ba:	74fb      	strb	r3, [r7, #19]
 80039bc:	68fb      	ldr	r3, [r7, #12]
 80039be:	681b      	ldr	r3, [r3, #0]
 80039c0:	699b      	ldr	r3, [r3, #24]
 80039c2:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 80039c6:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 80039ca:	d121      	bne.n	8003a10 <I2C_IsErrorOccurred+0xbc>
 80039cc:	697b      	ldr	r3, [r7, #20]
 80039ce:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 80039d2:	d01d      	beq.n	8003a10 <I2C_IsErrorOccurred+0xbc>
 80039d4:	7cfb      	ldrb	r3, [r7, #19]
 80039d6:	2b20      	cmp	r3, #32
 80039d8:	d01a      	beq.n	8003a10 <I2C_IsErrorOccurred+0xbc>
 80039da:	68fb      	ldr	r3, [r7, #12]
 80039dc:	681b      	ldr	r3, [r3, #0]
 80039de:	685a      	ldr	r2, [r3, #4]
 80039e0:	68fb      	ldr	r3, [r7, #12]
 80039e2:	681b      	ldr	r3, [r3, #0]
 80039e4:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 80039e8:	605a      	str	r2, [r3, #4]
 80039ea:	f7fe fff1 	bl	80029d0 <HAL_GetTick>
 80039ee:	61f8      	str	r0, [r7, #28]
 80039f0:	e00e      	b.n	8003a10 <I2C_IsErrorOccurred+0xbc>
 80039f2:	f7fe ffed 	bl	80029d0 <HAL_GetTick>
 80039f6:	4602      	mov	r2, r0
 80039f8:	69fb      	ldr	r3, [r7, #28]
 80039fa:	1ad3      	subs	r3, r2, r3
 80039fc:	2b19      	cmp	r3, #25
 80039fe:	d907      	bls.n	8003a10 <I2C_IsErrorOccurred+0xbc>
 8003a00:	6a3b      	ldr	r3, [r7, #32]
 8003a02:	f043 0320 	orr.w	r3, r3, #32
 8003a06:	623b      	str	r3, [r7, #32]
 8003a08:	2301      	movs	r3, #1
 8003a0a:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 8003a0e:	e006      	b.n	8003a1e <I2C_IsErrorOccurred+0xca>
 8003a10:	68fb      	ldr	r3, [r7, #12]
 8003a12:	681b      	ldr	r3, [r3, #0]
 8003a14:	699b      	ldr	r3, [r3, #24]
 8003a16:	f003 0320 	and.w	r3, r3, #32
 8003a1a:	2b20      	cmp	r3, #32
 8003a1c:	d1e9      	bne.n	80039f2 <I2C_IsErrorOccurred+0x9e>
 8003a1e:	68fb      	ldr	r3, [r7, #12]
 8003a20:	681b      	ldr	r3, [r3, #0]
 8003a22:	699b      	ldr	r3, [r3, #24]
 8003a24:	f003 0320 	and.w	r3, r3, #32
 8003a28:	2b20      	cmp	r3, #32
 8003a2a:	d003      	beq.n	8003a34 <I2C_IsErrorOccurred+0xe0>
 8003a2c:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 8003a30:	2b00      	cmp	r3, #0
 8003a32:	d0aa      	beq.n	800398a <I2C_IsErrorOccurred+0x36>
 8003a34:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 8003a38:	2b00      	cmp	r3, #0
 8003a3a:	d103      	bne.n	8003a44 <I2C_IsErrorOccurred+0xf0>
 8003a3c:	68fb      	ldr	r3, [r7, #12]
 8003a3e:	681b      	ldr	r3, [r3, #0]
 8003a40:	2220      	movs	r2, #32
 8003a42:	61da      	str	r2, [r3, #28]
 8003a44:	6a3b      	ldr	r3, [r7, #32]
 8003a46:	f043 0304 	orr.w	r3, r3, #4
 8003a4a:	623b      	str	r3, [r7, #32]
 8003a4c:	2301      	movs	r3, #1
 8003a4e:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 8003a52:	68fb      	ldr	r3, [r7, #12]
 8003a54:	681b      	ldr	r3, [r3, #0]
 8003a56:	699b      	ldr	r3, [r3, #24]
 8003a58:	61bb      	str	r3, [r7, #24]
 8003a5a:	69bb      	ldr	r3, [r7, #24]
 8003a5c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003a60:	2b00      	cmp	r3, #0
 8003a62:	d00b      	beq.n	8003a7c <I2C_IsErrorOccurred+0x128>
 8003a64:	6a3b      	ldr	r3, [r7, #32]
 8003a66:	f043 0301 	orr.w	r3, r3, #1
 8003a6a:	623b      	str	r3, [r7, #32]
 8003a6c:	68fb      	ldr	r3, [r7, #12]
 8003a6e:	681b      	ldr	r3, [r3, #0]
 8003a70:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8003a74:	61da      	str	r2, [r3, #28]
 8003a76:	2301      	movs	r3, #1
 8003a78:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 8003a7c:	69bb      	ldr	r3, [r7, #24]
 8003a7e:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8003a82:	2b00      	cmp	r3, #0
 8003a84:	d00b      	beq.n	8003a9e <I2C_IsErrorOccurred+0x14a>
 8003a86:	6a3b      	ldr	r3, [r7, #32]
 8003a88:	f043 0308 	orr.w	r3, r3, #8
 8003a8c:	623b      	str	r3, [r7, #32]
 8003a8e:	68fb      	ldr	r3, [r7, #12]
 8003a90:	681b      	ldr	r3, [r3, #0]
 8003a92:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 8003a96:	61da      	str	r2, [r3, #28]
 8003a98:	2301      	movs	r3, #1
 8003a9a:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 8003a9e:	69bb      	ldr	r3, [r7, #24]
 8003aa0:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 8003aa4:	2b00      	cmp	r3, #0
 8003aa6:	d00b      	beq.n	8003ac0 <I2C_IsErrorOccurred+0x16c>
 8003aa8:	6a3b      	ldr	r3, [r7, #32]
 8003aaa:	f043 0302 	orr.w	r3, r3, #2
 8003aae:	623b      	str	r3, [r7, #32]
 8003ab0:	68fb      	ldr	r3, [r7, #12]
 8003ab2:	681b      	ldr	r3, [r3, #0]
 8003ab4:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8003ab8:	61da      	str	r2, [r3, #28]
 8003aba:	2301      	movs	r3, #1
 8003abc:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 8003ac0:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 8003ac4:	2b00      	cmp	r3, #0
 8003ac6:	d01c      	beq.n	8003b02 <I2C_IsErrorOccurred+0x1ae>
 8003ac8:	68f8      	ldr	r0, [r7, #12]
 8003aca:	f7ff fe3b 	bl	8003744 <I2C_Flush_TXDR>
 8003ace:	68fb      	ldr	r3, [r7, #12]
 8003ad0:	681b      	ldr	r3, [r3, #0]
 8003ad2:	6859      	ldr	r1, [r3, #4]
 8003ad4:	68fb      	ldr	r3, [r7, #12]
 8003ad6:	681a      	ldr	r2, [r3, #0]
 8003ad8:	4b0d      	ldr	r3, [pc, #52]	@ (8003b10 <I2C_IsErrorOccurred+0x1bc>)
 8003ada:	400b      	ands	r3, r1
 8003adc:	6053      	str	r3, [r2, #4]
 8003ade:	68fb      	ldr	r3, [r7, #12]
 8003ae0:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8003ae2:	6a3b      	ldr	r3, [r7, #32]
 8003ae4:	431a      	orrs	r2, r3
 8003ae6:	68fb      	ldr	r3, [r7, #12]
 8003ae8:	645a      	str	r2, [r3, #68]	@ 0x44
 8003aea:	68fb      	ldr	r3, [r7, #12]
 8003aec:	2220      	movs	r2, #32
 8003aee:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8003af2:	68fb      	ldr	r3, [r7, #12]
 8003af4:	2200      	movs	r2, #0
 8003af6:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8003afa:	68fb      	ldr	r3, [r7, #12]
 8003afc:	2200      	movs	r2, #0
 8003afe:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8003b02:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 8003b06:	4618      	mov	r0, r3
 8003b08:	3728      	adds	r7, #40	@ 0x28
 8003b0a:	46bd      	mov	sp, r7
 8003b0c:	bd80      	pop	{r7, pc}
 8003b0e:	bf00      	nop
 8003b10:	fe00e800 	.word	0xfe00e800

08003b14 <I2C_TransferConfig>:
 8003b14:	b480      	push	{r7}
 8003b16:	b087      	sub	sp, #28
 8003b18:	af00      	add	r7, sp, #0
 8003b1a:	60f8      	str	r0, [r7, #12]
 8003b1c:	607b      	str	r3, [r7, #4]
 8003b1e:	460b      	mov	r3, r1
 8003b20:	817b      	strh	r3, [r7, #10]
 8003b22:	4613      	mov	r3, r2
 8003b24:	727b      	strb	r3, [r7, #9]
 8003b26:	897b      	ldrh	r3, [r7, #10]
 8003b28:	f3c3 0209 	ubfx	r2, r3, #0, #10
 8003b2c:	7a7b      	ldrb	r3, [r7, #9]
 8003b2e:	041b      	lsls	r3, r3, #16
 8003b30:	f403 037f 	and.w	r3, r3, #16711680	@ 0xff0000
 8003b34:	431a      	orrs	r2, r3
 8003b36:	687b      	ldr	r3, [r7, #4]
 8003b38:	431a      	orrs	r2, r3
 8003b3a:	6a3b      	ldr	r3, [r7, #32]
 8003b3c:	4313      	orrs	r3, r2
 8003b3e:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8003b42:	617b      	str	r3, [r7, #20]
 8003b44:	68fb      	ldr	r3, [r7, #12]
 8003b46:	681b      	ldr	r3, [r3, #0]
 8003b48:	685a      	ldr	r2, [r3, #4]
 8003b4a:	6a3b      	ldr	r3, [r7, #32]
 8003b4c:	0d5b      	lsrs	r3, r3, #21
 8003b4e:	f403 6180 	and.w	r1, r3, #1024	@ 0x400
 8003b52:	4b08      	ldr	r3, [pc, #32]	@ (8003b74 <I2C_TransferConfig+0x60>)
 8003b54:	430b      	orrs	r3, r1
 8003b56:	43db      	mvns	r3, r3
 8003b58:	ea02 0103 	and.w	r1, r2, r3
 8003b5c:	68fb      	ldr	r3, [r7, #12]
 8003b5e:	681b      	ldr	r3, [r3, #0]
 8003b60:	697a      	ldr	r2, [r7, #20]
 8003b62:	430a      	orrs	r2, r1
 8003b64:	605a      	str	r2, [r3, #4]
 8003b66:	bf00      	nop
 8003b68:	371c      	adds	r7, #28
 8003b6a:	46bd      	mov	sp, r7
 8003b6c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003b70:	4770      	bx	lr
 8003b72:	bf00      	nop
 8003b74:	03ff63ff 	.word	0x03ff63ff

08003b78 <HAL_I2CEx_ConfigAnalogFilter>:
 8003b78:	b480      	push	{r7}
 8003b7a:	b083      	sub	sp, #12
 8003b7c:	af00      	add	r7, sp, #0
 8003b7e:	6078      	str	r0, [r7, #4]
 8003b80:	6039      	str	r1, [r7, #0]
 8003b82:	687b      	ldr	r3, [r7, #4]
 8003b84:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8003b88:	b2db      	uxtb	r3, r3
 8003b8a:	2b20      	cmp	r3, #32
 8003b8c:	d138      	bne.n	8003c00 <HAL_I2CEx_ConfigAnalogFilter+0x88>
 8003b8e:	687b      	ldr	r3, [r7, #4]
 8003b90:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 8003b94:	2b01      	cmp	r3, #1
 8003b96:	d101      	bne.n	8003b9c <HAL_I2CEx_ConfigAnalogFilter+0x24>
 8003b98:	2302      	movs	r3, #2
 8003b9a:	e032      	b.n	8003c02 <HAL_I2CEx_ConfigAnalogFilter+0x8a>
 8003b9c:	687b      	ldr	r3, [r7, #4]
 8003b9e:	2201      	movs	r2, #1
 8003ba0:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8003ba4:	687b      	ldr	r3, [r7, #4]
 8003ba6:	2224      	movs	r2, #36	@ 0x24
 8003ba8:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8003bac:	687b      	ldr	r3, [r7, #4]
 8003bae:	681b      	ldr	r3, [r3, #0]
 8003bb0:	681a      	ldr	r2, [r3, #0]
 8003bb2:	687b      	ldr	r3, [r7, #4]
 8003bb4:	681b      	ldr	r3, [r3, #0]
 8003bb6:	f022 0201 	bic.w	r2, r2, #1
 8003bba:	601a      	str	r2, [r3, #0]
 8003bbc:	687b      	ldr	r3, [r7, #4]
 8003bbe:	681b      	ldr	r3, [r3, #0]
 8003bc0:	681a      	ldr	r2, [r3, #0]
 8003bc2:	687b      	ldr	r3, [r7, #4]
 8003bc4:	681b      	ldr	r3, [r3, #0]
 8003bc6:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
 8003bca:	601a      	str	r2, [r3, #0]
 8003bcc:	687b      	ldr	r3, [r7, #4]
 8003bce:	681b      	ldr	r3, [r3, #0]
 8003bd0:	6819      	ldr	r1, [r3, #0]
 8003bd2:	687b      	ldr	r3, [r7, #4]
 8003bd4:	681b      	ldr	r3, [r3, #0]
 8003bd6:	683a      	ldr	r2, [r7, #0]
 8003bd8:	430a      	orrs	r2, r1
 8003bda:	601a      	str	r2, [r3, #0]
 8003bdc:	687b      	ldr	r3, [r7, #4]
 8003bde:	681b      	ldr	r3, [r3, #0]
 8003be0:	681a      	ldr	r2, [r3, #0]
 8003be2:	687b      	ldr	r3, [r7, #4]
 8003be4:	681b      	ldr	r3, [r3, #0]
 8003be6:	f042 0201 	orr.w	r2, r2, #1
 8003bea:	601a      	str	r2, [r3, #0]
 8003bec:	687b      	ldr	r3, [r7, #4]
 8003bee:	2220      	movs	r2, #32
 8003bf0:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8003bf4:	687b      	ldr	r3, [r7, #4]
 8003bf6:	2200      	movs	r2, #0
 8003bf8:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8003bfc:	2300      	movs	r3, #0
 8003bfe:	e000      	b.n	8003c02 <HAL_I2CEx_ConfigAnalogFilter+0x8a>
 8003c00:	2302      	movs	r3, #2
 8003c02:	4618      	mov	r0, r3
 8003c04:	370c      	adds	r7, #12
 8003c06:	46bd      	mov	sp, r7
 8003c08:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003c0c:	4770      	bx	lr

08003c0e <HAL_I2CEx_ConfigDigitalFilter>:
 8003c0e:	b480      	push	{r7}
 8003c10:	b085      	sub	sp, #20
 8003c12:	af00      	add	r7, sp, #0
 8003c14:	6078      	str	r0, [r7, #4]
 8003c16:	6039      	str	r1, [r7, #0]
 8003c18:	687b      	ldr	r3, [r7, #4]
 8003c1a:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8003c1e:	b2db      	uxtb	r3, r3
 8003c20:	2b20      	cmp	r3, #32
 8003c22:	d139      	bne.n	8003c98 <HAL_I2CEx_ConfigDigitalFilter+0x8a>
 8003c24:	687b      	ldr	r3, [r7, #4]
 8003c26:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 8003c2a:	2b01      	cmp	r3, #1
 8003c2c:	d101      	bne.n	8003c32 <HAL_I2CEx_ConfigDigitalFilter+0x24>
 8003c2e:	2302      	movs	r3, #2
 8003c30:	e033      	b.n	8003c9a <HAL_I2CEx_ConfigDigitalFilter+0x8c>
 8003c32:	687b      	ldr	r3, [r7, #4]
 8003c34:	2201      	movs	r2, #1
 8003c36:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8003c3a:	687b      	ldr	r3, [r7, #4]
 8003c3c:	2224      	movs	r2, #36	@ 0x24
 8003c3e:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8003c42:	687b      	ldr	r3, [r7, #4]
 8003c44:	681b      	ldr	r3, [r3, #0]
 8003c46:	681a      	ldr	r2, [r3, #0]
 8003c48:	687b      	ldr	r3, [r7, #4]
 8003c4a:	681b      	ldr	r3, [r3, #0]
 8003c4c:	f022 0201 	bic.w	r2, r2, #1
 8003c50:	601a      	str	r2, [r3, #0]
 8003c52:	687b      	ldr	r3, [r7, #4]
 8003c54:	681b      	ldr	r3, [r3, #0]
 8003c56:	681b      	ldr	r3, [r3, #0]
 8003c58:	60fb      	str	r3, [r7, #12]
 8003c5a:	68fb      	ldr	r3, [r7, #12]
 8003c5c:	f423 6370 	bic.w	r3, r3, #3840	@ 0xf00
 8003c60:	60fb      	str	r3, [r7, #12]
 8003c62:	683b      	ldr	r3, [r7, #0]
 8003c64:	021b      	lsls	r3, r3, #8
 8003c66:	68fa      	ldr	r2, [r7, #12]
 8003c68:	4313      	orrs	r3, r2
 8003c6a:	60fb      	str	r3, [r7, #12]
 8003c6c:	687b      	ldr	r3, [r7, #4]
 8003c6e:	681b      	ldr	r3, [r3, #0]
 8003c70:	68fa      	ldr	r2, [r7, #12]
 8003c72:	601a      	str	r2, [r3, #0]
 8003c74:	687b      	ldr	r3, [r7, #4]
 8003c76:	681b      	ldr	r3, [r3, #0]
 8003c78:	681a      	ldr	r2, [r3, #0]
 8003c7a:	687b      	ldr	r3, [r7, #4]
 8003c7c:	681b      	ldr	r3, [r3, #0]
 8003c7e:	f042 0201 	orr.w	r2, r2, #1
 8003c82:	601a      	str	r2, [r3, #0]
 8003c84:	687b      	ldr	r3, [r7, #4]
 8003c86:	2220      	movs	r2, #32
 8003c88:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8003c8c:	687b      	ldr	r3, [r7, #4]
 8003c8e:	2200      	movs	r2, #0
 8003c90:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8003c94:	2300      	movs	r3, #0
 8003c96:	e000      	b.n	8003c9a <HAL_I2CEx_ConfigDigitalFilter+0x8c>
 8003c98:	2302      	movs	r3, #2
 8003c9a:	4618      	mov	r0, r3
 8003c9c:	3714      	adds	r7, #20
 8003c9e:	46bd      	mov	sp, r7
 8003ca0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003ca4:	4770      	bx	lr
	...

08003ca8 <HAL_RCC_OscConfig>:
 8003ca8:	b580      	push	{r7, lr}
 8003caa:	f5ad 7d00 	sub.w	sp, sp, #512	@ 0x200
 8003cae:	af00      	add	r7, sp, #0
 8003cb0:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8003cb4:	f5a3 73fe 	sub.w	r3, r3, #508	@ 0x1fc
 8003cb8:	6018      	str	r0, [r3, #0]
 8003cba:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8003cbe:	f5a3 73fe 	sub.w	r3, r3, #508	@ 0x1fc
 8003cc2:	681b      	ldr	r3, [r3, #0]
 8003cc4:	2b00      	cmp	r3, #0
 8003cc6:	d102      	bne.n	8003cce <HAL_RCC_OscConfig+0x26>
 8003cc8:	2301      	movs	r3, #1
 8003cca:	f001 b823 	b.w	8004d14 <HAL_RCC_OscConfig+0x106c>
 8003cce:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8003cd2:	f5a3 73fe 	sub.w	r3, r3, #508	@ 0x1fc
 8003cd6:	681b      	ldr	r3, [r3, #0]
 8003cd8:	681b      	ldr	r3, [r3, #0]
 8003cda:	f003 0301 	and.w	r3, r3, #1
 8003cde:	2b00      	cmp	r3, #0
 8003ce0:	f000 817d 	beq.w	8003fde <HAL_RCC_OscConfig+0x336>
 8003ce4:	4bbc      	ldr	r3, [pc, #752]	@ (8003fd8 <HAL_RCC_OscConfig+0x330>)
 8003ce6:	685b      	ldr	r3, [r3, #4]
 8003ce8:	f003 030c 	and.w	r3, r3, #12
 8003cec:	2b04      	cmp	r3, #4
 8003cee:	d00c      	beq.n	8003d0a <HAL_RCC_OscConfig+0x62>
 8003cf0:	4bb9      	ldr	r3, [pc, #740]	@ (8003fd8 <HAL_RCC_OscConfig+0x330>)
 8003cf2:	685b      	ldr	r3, [r3, #4]
 8003cf4:	f003 030c 	and.w	r3, r3, #12
 8003cf8:	2b08      	cmp	r3, #8
 8003cfa:	d15c      	bne.n	8003db6 <HAL_RCC_OscConfig+0x10e>
 8003cfc:	4bb6      	ldr	r3, [pc, #728]	@ (8003fd8 <HAL_RCC_OscConfig+0x330>)
 8003cfe:	685b      	ldr	r3, [r3, #4]
 8003d00:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8003d04:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8003d08:	d155      	bne.n	8003db6 <HAL_RCC_OscConfig+0x10e>
 8003d0a:	f44f 3300 	mov.w	r3, #131072	@ 0x20000
 8003d0e:	f8c7 31f0 	str.w	r3, [r7, #496]	@ 0x1f0
 8003d12:	f8d7 31f0 	ldr.w	r3, [r7, #496]	@ 0x1f0
 8003d16:	fa93 f3a3 	rbit	r3, r3
 8003d1a:	f8c7 31ec 	str.w	r3, [r7, #492]	@ 0x1ec
 8003d1e:	f8d7 31ec 	ldr.w	r3, [r7, #492]	@ 0x1ec
 8003d22:	fab3 f383 	clz	r3, r3
 8003d26:	b2db      	uxtb	r3, r3
 8003d28:	095b      	lsrs	r3, r3, #5
 8003d2a:	b2db      	uxtb	r3, r3
 8003d2c:	f043 0301 	orr.w	r3, r3, #1
 8003d30:	b2db      	uxtb	r3, r3
 8003d32:	2b01      	cmp	r3, #1
 8003d34:	d102      	bne.n	8003d3c <HAL_RCC_OscConfig+0x94>
 8003d36:	4ba8      	ldr	r3, [pc, #672]	@ (8003fd8 <HAL_RCC_OscConfig+0x330>)
 8003d38:	681b      	ldr	r3, [r3, #0]
 8003d3a:	e015      	b.n	8003d68 <HAL_RCC_OscConfig+0xc0>
 8003d3c:	f44f 3300 	mov.w	r3, #131072	@ 0x20000
 8003d40:	f8c7 31e8 	str.w	r3, [r7, #488]	@ 0x1e8
 8003d44:	f8d7 31e8 	ldr.w	r3, [r7, #488]	@ 0x1e8
 8003d48:	fa93 f3a3 	rbit	r3, r3
 8003d4c:	f8c7 31e4 	str.w	r3, [r7, #484]	@ 0x1e4
 8003d50:	f44f 3300 	mov.w	r3, #131072	@ 0x20000
 8003d54:	f8c7 31e0 	str.w	r3, [r7, #480]	@ 0x1e0
 8003d58:	f8d7 31e0 	ldr.w	r3, [r7, #480]	@ 0x1e0
 8003d5c:	fa93 f3a3 	rbit	r3, r3
 8003d60:	f8c7 31dc 	str.w	r3, [r7, #476]	@ 0x1dc
 8003d64:	4b9c      	ldr	r3, [pc, #624]	@ (8003fd8 <HAL_RCC_OscConfig+0x330>)
 8003d66:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003d68:	f44f 3200 	mov.w	r2, #131072	@ 0x20000
 8003d6c:	f8c7 21d8 	str.w	r2, [r7, #472]	@ 0x1d8
 8003d70:	f8d7 21d8 	ldr.w	r2, [r7, #472]	@ 0x1d8
 8003d74:	fa92 f2a2 	rbit	r2, r2
 8003d78:	f8c7 21d4 	str.w	r2, [r7, #468]	@ 0x1d4
 8003d7c:	f8d7 21d4 	ldr.w	r2, [r7, #468]	@ 0x1d4
 8003d80:	fab2 f282 	clz	r2, r2
 8003d84:	b2d2      	uxtb	r2, r2
 8003d86:	f042 0220 	orr.w	r2, r2, #32
 8003d8a:	b2d2      	uxtb	r2, r2
 8003d8c:	f002 021f 	and.w	r2, r2, #31
 8003d90:	2101      	movs	r1, #1
 8003d92:	fa01 f202 	lsl.w	r2, r1, r2
 8003d96:	4013      	ands	r3, r2
 8003d98:	2b00      	cmp	r3, #0
 8003d9a:	f000 811f 	beq.w	8003fdc <HAL_RCC_OscConfig+0x334>
 8003d9e:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8003da2:	f5a3 73fe 	sub.w	r3, r3, #508	@ 0x1fc
 8003da6:	681b      	ldr	r3, [r3, #0]
 8003da8:	685b      	ldr	r3, [r3, #4]
 8003daa:	2b00      	cmp	r3, #0
 8003dac:	f040 8116 	bne.w	8003fdc <HAL_RCC_OscConfig+0x334>
 8003db0:	2301      	movs	r3, #1
 8003db2:	f000 bfaf 	b.w	8004d14 <HAL_RCC_OscConfig+0x106c>
 8003db6:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8003dba:	f5a3 73fe 	sub.w	r3, r3, #508	@ 0x1fc
 8003dbe:	681b      	ldr	r3, [r3, #0]
 8003dc0:	685b      	ldr	r3, [r3, #4]
 8003dc2:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8003dc6:	d106      	bne.n	8003dd6 <HAL_RCC_OscConfig+0x12e>
 8003dc8:	4b83      	ldr	r3, [pc, #524]	@ (8003fd8 <HAL_RCC_OscConfig+0x330>)
 8003dca:	681b      	ldr	r3, [r3, #0]
 8003dcc:	4a82      	ldr	r2, [pc, #520]	@ (8003fd8 <HAL_RCC_OscConfig+0x330>)
 8003dce:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8003dd2:	6013      	str	r3, [r2, #0]
 8003dd4:	e036      	b.n	8003e44 <HAL_RCC_OscConfig+0x19c>
 8003dd6:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8003dda:	f5a3 73fe 	sub.w	r3, r3, #508	@ 0x1fc
 8003dde:	681b      	ldr	r3, [r3, #0]
 8003de0:	685b      	ldr	r3, [r3, #4]
 8003de2:	2b00      	cmp	r3, #0
 8003de4:	d10c      	bne.n	8003e00 <HAL_RCC_OscConfig+0x158>
 8003de6:	4b7c      	ldr	r3, [pc, #496]	@ (8003fd8 <HAL_RCC_OscConfig+0x330>)
 8003de8:	681b      	ldr	r3, [r3, #0]
 8003dea:	4a7b      	ldr	r2, [pc, #492]	@ (8003fd8 <HAL_RCC_OscConfig+0x330>)
 8003dec:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8003df0:	6013      	str	r3, [r2, #0]
 8003df2:	4b79      	ldr	r3, [pc, #484]	@ (8003fd8 <HAL_RCC_OscConfig+0x330>)
 8003df4:	681b      	ldr	r3, [r3, #0]
 8003df6:	4a78      	ldr	r2, [pc, #480]	@ (8003fd8 <HAL_RCC_OscConfig+0x330>)
 8003df8:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8003dfc:	6013      	str	r3, [r2, #0]
 8003dfe:	e021      	b.n	8003e44 <HAL_RCC_OscConfig+0x19c>
 8003e00:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8003e04:	f5a3 73fe 	sub.w	r3, r3, #508	@ 0x1fc
 8003e08:	681b      	ldr	r3, [r3, #0]
 8003e0a:	685b      	ldr	r3, [r3, #4]
 8003e0c:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8003e10:	d10c      	bne.n	8003e2c <HAL_RCC_OscConfig+0x184>
 8003e12:	4b71      	ldr	r3, [pc, #452]	@ (8003fd8 <HAL_RCC_OscConfig+0x330>)
 8003e14:	681b      	ldr	r3, [r3, #0]
 8003e16:	4a70      	ldr	r2, [pc, #448]	@ (8003fd8 <HAL_RCC_OscConfig+0x330>)
 8003e18:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8003e1c:	6013      	str	r3, [r2, #0]
 8003e1e:	4b6e      	ldr	r3, [pc, #440]	@ (8003fd8 <HAL_RCC_OscConfig+0x330>)
 8003e20:	681b      	ldr	r3, [r3, #0]
 8003e22:	4a6d      	ldr	r2, [pc, #436]	@ (8003fd8 <HAL_RCC_OscConfig+0x330>)
 8003e24:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8003e28:	6013      	str	r3, [r2, #0]
 8003e2a:	e00b      	b.n	8003e44 <HAL_RCC_OscConfig+0x19c>
 8003e2c:	4b6a      	ldr	r3, [pc, #424]	@ (8003fd8 <HAL_RCC_OscConfig+0x330>)
 8003e2e:	681b      	ldr	r3, [r3, #0]
 8003e30:	4a69      	ldr	r2, [pc, #420]	@ (8003fd8 <HAL_RCC_OscConfig+0x330>)
 8003e32:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8003e36:	6013      	str	r3, [r2, #0]
 8003e38:	4b67      	ldr	r3, [pc, #412]	@ (8003fd8 <HAL_RCC_OscConfig+0x330>)
 8003e3a:	681b      	ldr	r3, [r3, #0]
 8003e3c:	4a66      	ldr	r2, [pc, #408]	@ (8003fd8 <HAL_RCC_OscConfig+0x330>)
 8003e3e:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8003e42:	6013      	str	r3, [r2, #0]
 8003e44:	4b64      	ldr	r3, [pc, #400]	@ (8003fd8 <HAL_RCC_OscConfig+0x330>)
 8003e46:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003e48:	f023 020f 	bic.w	r2, r3, #15
 8003e4c:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8003e50:	f5a3 73fe 	sub.w	r3, r3, #508	@ 0x1fc
 8003e54:	681b      	ldr	r3, [r3, #0]
 8003e56:	689b      	ldr	r3, [r3, #8]
 8003e58:	495f      	ldr	r1, [pc, #380]	@ (8003fd8 <HAL_RCC_OscConfig+0x330>)
 8003e5a:	4313      	orrs	r3, r2
 8003e5c:	62cb      	str	r3, [r1, #44]	@ 0x2c
 8003e5e:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8003e62:	f5a3 73fe 	sub.w	r3, r3, #508	@ 0x1fc
 8003e66:	681b      	ldr	r3, [r3, #0]
 8003e68:	685b      	ldr	r3, [r3, #4]
 8003e6a:	2b00      	cmp	r3, #0
 8003e6c:	d059      	beq.n	8003f22 <HAL_RCC_OscConfig+0x27a>
 8003e6e:	f7fe fdaf 	bl	80029d0 <HAL_GetTick>
 8003e72:	f8c7 01f8 	str.w	r0, [r7, #504]	@ 0x1f8
 8003e76:	e00a      	b.n	8003e8e <HAL_RCC_OscConfig+0x1e6>
 8003e78:	f7fe fdaa 	bl	80029d0 <HAL_GetTick>
 8003e7c:	4602      	mov	r2, r0
 8003e7e:	f8d7 31f8 	ldr.w	r3, [r7, #504]	@ 0x1f8
 8003e82:	1ad3      	subs	r3, r2, r3
 8003e84:	2b64      	cmp	r3, #100	@ 0x64
 8003e86:	d902      	bls.n	8003e8e <HAL_RCC_OscConfig+0x1e6>
 8003e88:	2303      	movs	r3, #3
 8003e8a:	f000 bf43 	b.w	8004d14 <HAL_RCC_OscConfig+0x106c>
 8003e8e:	f44f 3300 	mov.w	r3, #131072	@ 0x20000
 8003e92:	f8c7 31d0 	str.w	r3, [r7, #464]	@ 0x1d0
 8003e96:	f8d7 31d0 	ldr.w	r3, [r7, #464]	@ 0x1d0
 8003e9a:	fa93 f3a3 	rbit	r3, r3
 8003e9e:	f8c7 31cc 	str.w	r3, [r7, #460]	@ 0x1cc
 8003ea2:	f8d7 31cc 	ldr.w	r3, [r7, #460]	@ 0x1cc
 8003ea6:	fab3 f383 	clz	r3, r3
 8003eaa:	b2db      	uxtb	r3, r3
 8003eac:	095b      	lsrs	r3, r3, #5
 8003eae:	b2db      	uxtb	r3, r3
 8003eb0:	f043 0301 	orr.w	r3, r3, #1
 8003eb4:	b2db      	uxtb	r3, r3
 8003eb6:	2b01      	cmp	r3, #1
 8003eb8:	d102      	bne.n	8003ec0 <HAL_RCC_OscConfig+0x218>
 8003eba:	4b47      	ldr	r3, [pc, #284]	@ (8003fd8 <HAL_RCC_OscConfig+0x330>)
 8003ebc:	681b      	ldr	r3, [r3, #0]
 8003ebe:	e015      	b.n	8003eec <HAL_RCC_OscConfig+0x244>
 8003ec0:	f44f 3300 	mov.w	r3, #131072	@ 0x20000
 8003ec4:	f8c7 31c8 	str.w	r3, [r7, #456]	@ 0x1c8
 8003ec8:	f8d7 31c8 	ldr.w	r3, [r7, #456]	@ 0x1c8
 8003ecc:	fa93 f3a3 	rbit	r3, r3
 8003ed0:	f8c7 31c4 	str.w	r3, [r7, #452]	@ 0x1c4
 8003ed4:	f44f 3300 	mov.w	r3, #131072	@ 0x20000
 8003ed8:	f8c7 31c0 	str.w	r3, [r7, #448]	@ 0x1c0
 8003edc:	f8d7 31c0 	ldr.w	r3, [r7, #448]	@ 0x1c0
 8003ee0:	fa93 f3a3 	rbit	r3, r3
 8003ee4:	f8c7 31bc 	str.w	r3, [r7, #444]	@ 0x1bc
 8003ee8:	4b3b      	ldr	r3, [pc, #236]	@ (8003fd8 <HAL_RCC_OscConfig+0x330>)
 8003eea:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003eec:	f44f 3200 	mov.w	r2, #131072	@ 0x20000
 8003ef0:	f8c7 21b8 	str.w	r2, [r7, #440]	@ 0x1b8
 8003ef4:	f8d7 21b8 	ldr.w	r2, [r7, #440]	@ 0x1b8
 8003ef8:	fa92 f2a2 	rbit	r2, r2
 8003efc:	f8c7 21b4 	str.w	r2, [r7, #436]	@ 0x1b4
 8003f00:	f8d7 21b4 	ldr.w	r2, [r7, #436]	@ 0x1b4
 8003f04:	fab2 f282 	clz	r2, r2
 8003f08:	b2d2      	uxtb	r2, r2
 8003f0a:	f042 0220 	orr.w	r2, r2, #32
 8003f0e:	b2d2      	uxtb	r2, r2
 8003f10:	f002 021f 	and.w	r2, r2, #31
 8003f14:	2101      	movs	r1, #1
 8003f16:	fa01 f202 	lsl.w	r2, r1, r2
 8003f1a:	4013      	ands	r3, r2
 8003f1c:	2b00      	cmp	r3, #0
 8003f1e:	d0ab      	beq.n	8003e78 <HAL_RCC_OscConfig+0x1d0>
 8003f20:	e05d      	b.n	8003fde <HAL_RCC_OscConfig+0x336>
 8003f22:	f7fe fd55 	bl	80029d0 <HAL_GetTick>
 8003f26:	f8c7 01f8 	str.w	r0, [r7, #504]	@ 0x1f8
 8003f2a:	e00a      	b.n	8003f42 <HAL_RCC_OscConfig+0x29a>
 8003f2c:	f7fe fd50 	bl	80029d0 <HAL_GetTick>
 8003f30:	4602      	mov	r2, r0
 8003f32:	f8d7 31f8 	ldr.w	r3, [r7, #504]	@ 0x1f8
 8003f36:	1ad3      	subs	r3, r2, r3
 8003f38:	2b64      	cmp	r3, #100	@ 0x64
 8003f3a:	d902      	bls.n	8003f42 <HAL_RCC_OscConfig+0x29a>
 8003f3c:	2303      	movs	r3, #3
 8003f3e:	f000 bee9 	b.w	8004d14 <HAL_RCC_OscConfig+0x106c>
 8003f42:	f44f 3300 	mov.w	r3, #131072	@ 0x20000
 8003f46:	f8c7 31b0 	str.w	r3, [r7, #432]	@ 0x1b0
 8003f4a:	f8d7 31b0 	ldr.w	r3, [r7, #432]	@ 0x1b0
 8003f4e:	fa93 f3a3 	rbit	r3, r3
 8003f52:	f8c7 31ac 	str.w	r3, [r7, #428]	@ 0x1ac
 8003f56:	f8d7 31ac 	ldr.w	r3, [r7, #428]	@ 0x1ac
 8003f5a:	fab3 f383 	clz	r3, r3
 8003f5e:	b2db      	uxtb	r3, r3
 8003f60:	095b      	lsrs	r3, r3, #5
 8003f62:	b2db      	uxtb	r3, r3
 8003f64:	f043 0301 	orr.w	r3, r3, #1
 8003f68:	b2db      	uxtb	r3, r3
 8003f6a:	2b01      	cmp	r3, #1
 8003f6c:	d102      	bne.n	8003f74 <HAL_RCC_OscConfig+0x2cc>
 8003f6e:	4b1a      	ldr	r3, [pc, #104]	@ (8003fd8 <HAL_RCC_OscConfig+0x330>)
 8003f70:	681b      	ldr	r3, [r3, #0]
 8003f72:	e015      	b.n	8003fa0 <HAL_RCC_OscConfig+0x2f8>
 8003f74:	f44f 3300 	mov.w	r3, #131072	@ 0x20000
 8003f78:	f8c7 31a8 	str.w	r3, [r7, #424]	@ 0x1a8
 8003f7c:	f8d7 31a8 	ldr.w	r3, [r7, #424]	@ 0x1a8
 8003f80:	fa93 f3a3 	rbit	r3, r3
 8003f84:	f8c7 31a4 	str.w	r3, [r7, #420]	@ 0x1a4
 8003f88:	f44f 3300 	mov.w	r3, #131072	@ 0x20000
 8003f8c:	f8c7 31a0 	str.w	r3, [r7, #416]	@ 0x1a0
 8003f90:	f8d7 31a0 	ldr.w	r3, [r7, #416]	@ 0x1a0
 8003f94:	fa93 f3a3 	rbit	r3, r3
 8003f98:	f8c7 319c 	str.w	r3, [r7, #412]	@ 0x19c
 8003f9c:	4b0e      	ldr	r3, [pc, #56]	@ (8003fd8 <HAL_RCC_OscConfig+0x330>)
 8003f9e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003fa0:	f44f 3200 	mov.w	r2, #131072	@ 0x20000
 8003fa4:	f8c7 2198 	str.w	r2, [r7, #408]	@ 0x198
 8003fa8:	f8d7 2198 	ldr.w	r2, [r7, #408]	@ 0x198
 8003fac:	fa92 f2a2 	rbit	r2, r2
 8003fb0:	f8c7 2194 	str.w	r2, [r7, #404]	@ 0x194
 8003fb4:	f8d7 2194 	ldr.w	r2, [r7, #404]	@ 0x194
 8003fb8:	fab2 f282 	clz	r2, r2
 8003fbc:	b2d2      	uxtb	r2, r2
 8003fbe:	f042 0220 	orr.w	r2, r2, #32
 8003fc2:	b2d2      	uxtb	r2, r2
 8003fc4:	f002 021f 	and.w	r2, r2, #31
 8003fc8:	2101      	movs	r1, #1
 8003fca:	fa01 f202 	lsl.w	r2, r1, r2
 8003fce:	4013      	ands	r3, r2
 8003fd0:	2b00      	cmp	r3, #0
 8003fd2:	d1ab      	bne.n	8003f2c <HAL_RCC_OscConfig+0x284>
 8003fd4:	e003      	b.n	8003fde <HAL_RCC_OscConfig+0x336>
 8003fd6:	bf00      	nop
 8003fd8:	40021000 	.word	0x40021000
 8003fdc:	bf00      	nop
 8003fde:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8003fe2:	f5a3 73fe 	sub.w	r3, r3, #508	@ 0x1fc
 8003fe6:	681b      	ldr	r3, [r3, #0]
 8003fe8:	681b      	ldr	r3, [r3, #0]
 8003fea:	f003 0302 	and.w	r3, r3, #2
 8003fee:	2b00      	cmp	r3, #0
 8003ff0:	f000 817d 	beq.w	80042ee <HAL_RCC_OscConfig+0x646>
 8003ff4:	4ba6      	ldr	r3, [pc, #664]	@ (8004290 <HAL_RCC_OscConfig+0x5e8>)
 8003ff6:	685b      	ldr	r3, [r3, #4]
 8003ff8:	f003 030c 	and.w	r3, r3, #12
 8003ffc:	2b00      	cmp	r3, #0
 8003ffe:	d00b      	beq.n	8004018 <HAL_RCC_OscConfig+0x370>
 8004000:	4ba3      	ldr	r3, [pc, #652]	@ (8004290 <HAL_RCC_OscConfig+0x5e8>)
 8004002:	685b      	ldr	r3, [r3, #4]
 8004004:	f003 030c 	and.w	r3, r3, #12
 8004008:	2b08      	cmp	r3, #8
 800400a:	d172      	bne.n	80040f2 <HAL_RCC_OscConfig+0x44a>
 800400c:	4ba0      	ldr	r3, [pc, #640]	@ (8004290 <HAL_RCC_OscConfig+0x5e8>)
 800400e:	685b      	ldr	r3, [r3, #4]
 8004010:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8004014:	2b00      	cmp	r3, #0
 8004016:	d16c      	bne.n	80040f2 <HAL_RCC_OscConfig+0x44a>
 8004018:	2302      	movs	r3, #2
 800401a:	f8c7 3190 	str.w	r3, [r7, #400]	@ 0x190
 800401e:	f8d7 3190 	ldr.w	r3, [r7, #400]	@ 0x190
 8004022:	fa93 f3a3 	rbit	r3, r3
 8004026:	f8c7 318c 	str.w	r3, [r7, #396]	@ 0x18c
 800402a:	f8d7 318c 	ldr.w	r3, [r7, #396]	@ 0x18c
 800402e:	fab3 f383 	clz	r3, r3
 8004032:	b2db      	uxtb	r3, r3
 8004034:	095b      	lsrs	r3, r3, #5
 8004036:	b2db      	uxtb	r3, r3
 8004038:	f043 0301 	orr.w	r3, r3, #1
 800403c:	b2db      	uxtb	r3, r3
 800403e:	2b01      	cmp	r3, #1
 8004040:	d102      	bne.n	8004048 <HAL_RCC_OscConfig+0x3a0>
 8004042:	4b93      	ldr	r3, [pc, #588]	@ (8004290 <HAL_RCC_OscConfig+0x5e8>)
 8004044:	681b      	ldr	r3, [r3, #0]
 8004046:	e013      	b.n	8004070 <HAL_RCC_OscConfig+0x3c8>
 8004048:	2302      	movs	r3, #2
 800404a:	f8c7 3188 	str.w	r3, [r7, #392]	@ 0x188
 800404e:	f8d7 3188 	ldr.w	r3, [r7, #392]	@ 0x188
 8004052:	fa93 f3a3 	rbit	r3, r3
 8004056:	f8c7 3184 	str.w	r3, [r7, #388]	@ 0x184
 800405a:	2302      	movs	r3, #2
 800405c:	f8c7 3180 	str.w	r3, [r7, #384]	@ 0x180
 8004060:	f8d7 3180 	ldr.w	r3, [r7, #384]	@ 0x180
 8004064:	fa93 f3a3 	rbit	r3, r3
 8004068:	f8c7 317c 	str.w	r3, [r7, #380]	@ 0x17c
 800406c:	4b88      	ldr	r3, [pc, #544]	@ (8004290 <HAL_RCC_OscConfig+0x5e8>)
 800406e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004070:	2202      	movs	r2, #2
 8004072:	f8c7 2178 	str.w	r2, [r7, #376]	@ 0x178
 8004076:	f8d7 2178 	ldr.w	r2, [r7, #376]	@ 0x178
 800407a:	fa92 f2a2 	rbit	r2, r2
 800407e:	f8c7 2174 	str.w	r2, [r7, #372]	@ 0x174
 8004082:	f8d7 2174 	ldr.w	r2, [r7, #372]	@ 0x174
 8004086:	fab2 f282 	clz	r2, r2
 800408a:	b2d2      	uxtb	r2, r2
 800408c:	f042 0220 	orr.w	r2, r2, #32
 8004090:	b2d2      	uxtb	r2, r2
 8004092:	f002 021f 	and.w	r2, r2, #31
 8004096:	2101      	movs	r1, #1
 8004098:	fa01 f202 	lsl.w	r2, r1, r2
 800409c:	4013      	ands	r3, r2
 800409e:	2b00      	cmp	r3, #0
 80040a0:	d00a      	beq.n	80040b8 <HAL_RCC_OscConfig+0x410>
 80040a2:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80040a6:	f5a3 73fe 	sub.w	r3, r3, #508	@ 0x1fc
 80040aa:	681b      	ldr	r3, [r3, #0]
 80040ac:	691b      	ldr	r3, [r3, #16]
 80040ae:	2b01      	cmp	r3, #1
 80040b0:	d002      	beq.n	80040b8 <HAL_RCC_OscConfig+0x410>
 80040b2:	2301      	movs	r3, #1
 80040b4:	f000 be2e 	b.w	8004d14 <HAL_RCC_OscConfig+0x106c>
 80040b8:	4b75      	ldr	r3, [pc, #468]	@ (8004290 <HAL_RCC_OscConfig+0x5e8>)
 80040ba:	681b      	ldr	r3, [r3, #0]
 80040bc:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 80040c0:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80040c4:	f5a3 73fe 	sub.w	r3, r3, #508	@ 0x1fc
 80040c8:	681b      	ldr	r3, [r3, #0]
 80040ca:	695b      	ldr	r3, [r3, #20]
 80040cc:	21f8      	movs	r1, #248	@ 0xf8
 80040ce:	f8c7 1170 	str.w	r1, [r7, #368]	@ 0x170
 80040d2:	f8d7 1170 	ldr.w	r1, [r7, #368]	@ 0x170
 80040d6:	fa91 f1a1 	rbit	r1, r1
 80040da:	f8c7 116c 	str.w	r1, [r7, #364]	@ 0x16c
 80040de:	f8d7 116c 	ldr.w	r1, [r7, #364]	@ 0x16c
 80040e2:	fab1 f181 	clz	r1, r1
 80040e6:	b2c9      	uxtb	r1, r1
 80040e8:	408b      	lsls	r3, r1
 80040ea:	4969      	ldr	r1, [pc, #420]	@ (8004290 <HAL_RCC_OscConfig+0x5e8>)
 80040ec:	4313      	orrs	r3, r2
 80040ee:	600b      	str	r3, [r1, #0]
 80040f0:	e0fd      	b.n	80042ee <HAL_RCC_OscConfig+0x646>
 80040f2:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80040f6:	f5a3 73fe 	sub.w	r3, r3, #508	@ 0x1fc
 80040fa:	681b      	ldr	r3, [r3, #0]
 80040fc:	691b      	ldr	r3, [r3, #16]
 80040fe:	2b00      	cmp	r3, #0
 8004100:	f000 8088 	beq.w	8004214 <HAL_RCC_OscConfig+0x56c>
 8004104:	2301      	movs	r3, #1
 8004106:	f8c7 3168 	str.w	r3, [r7, #360]	@ 0x168
 800410a:	f8d7 3168 	ldr.w	r3, [r7, #360]	@ 0x168
 800410e:	fa93 f3a3 	rbit	r3, r3
 8004112:	f8c7 3164 	str.w	r3, [r7, #356]	@ 0x164
 8004116:	f8d7 3164 	ldr.w	r3, [r7, #356]	@ 0x164
 800411a:	fab3 f383 	clz	r3, r3
 800411e:	b2db      	uxtb	r3, r3
 8004120:	f103 5384 	add.w	r3, r3, #276824064	@ 0x10800000
 8004124:	f503 1384 	add.w	r3, r3, #1081344	@ 0x108000
 8004128:	009b      	lsls	r3, r3, #2
 800412a:	461a      	mov	r2, r3
 800412c:	2301      	movs	r3, #1
 800412e:	6013      	str	r3, [r2, #0]
 8004130:	f7fe fc4e 	bl	80029d0 <HAL_GetTick>
 8004134:	f8c7 01f8 	str.w	r0, [r7, #504]	@ 0x1f8
 8004138:	e00a      	b.n	8004150 <HAL_RCC_OscConfig+0x4a8>
 800413a:	f7fe fc49 	bl	80029d0 <HAL_GetTick>
 800413e:	4602      	mov	r2, r0
 8004140:	f8d7 31f8 	ldr.w	r3, [r7, #504]	@ 0x1f8
 8004144:	1ad3      	subs	r3, r2, r3
 8004146:	2b02      	cmp	r3, #2
 8004148:	d902      	bls.n	8004150 <HAL_RCC_OscConfig+0x4a8>
 800414a:	2303      	movs	r3, #3
 800414c:	f000 bde2 	b.w	8004d14 <HAL_RCC_OscConfig+0x106c>
 8004150:	2302      	movs	r3, #2
 8004152:	f8c7 3160 	str.w	r3, [r7, #352]	@ 0x160
 8004156:	f8d7 3160 	ldr.w	r3, [r7, #352]	@ 0x160
 800415a:	fa93 f3a3 	rbit	r3, r3
 800415e:	f8c7 315c 	str.w	r3, [r7, #348]	@ 0x15c
 8004162:	f8d7 315c 	ldr.w	r3, [r7, #348]	@ 0x15c
 8004166:	fab3 f383 	clz	r3, r3
 800416a:	b2db      	uxtb	r3, r3
 800416c:	095b      	lsrs	r3, r3, #5
 800416e:	b2db      	uxtb	r3, r3
 8004170:	f043 0301 	orr.w	r3, r3, #1
 8004174:	b2db      	uxtb	r3, r3
 8004176:	2b01      	cmp	r3, #1
 8004178:	d102      	bne.n	8004180 <HAL_RCC_OscConfig+0x4d8>
 800417a:	4b45      	ldr	r3, [pc, #276]	@ (8004290 <HAL_RCC_OscConfig+0x5e8>)
 800417c:	681b      	ldr	r3, [r3, #0]
 800417e:	e013      	b.n	80041a8 <HAL_RCC_OscConfig+0x500>
 8004180:	2302      	movs	r3, #2
 8004182:	f8c7 3158 	str.w	r3, [r7, #344]	@ 0x158
 8004186:	f8d7 3158 	ldr.w	r3, [r7, #344]	@ 0x158
 800418a:	fa93 f3a3 	rbit	r3, r3
 800418e:	f8c7 3154 	str.w	r3, [r7, #340]	@ 0x154
 8004192:	2302      	movs	r3, #2
 8004194:	f8c7 3150 	str.w	r3, [r7, #336]	@ 0x150
 8004198:	f8d7 3150 	ldr.w	r3, [r7, #336]	@ 0x150
 800419c:	fa93 f3a3 	rbit	r3, r3
 80041a0:	f8c7 314c 	str.w	r3, [r7, #332]	@ 0x14c
 80041a4:	4b3a      	ldr	r3, [pc, #232]	@ (8004290 <HAL_RCC_OscConfig+0x5e8>)
 80041a6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80041a8:	2202      	movs	r2, #2
 80041aa:	f8c7 2148 	str.w	r2, [r7, #328]	@ 0x148
 80041ae:	f8d7 2148 	ldr.w	r2, [r7, #328]	@ 0x148
 80041b2:	fa92 f2a2 	rbit	r2, r2
 80041b6:	f8c7 2144 	str.w	r2, [r7, #324]	@ 0x144
 80041ba:	f8d7 2144 	ldr.w	r2, [r7, #324]	@ 0x144
 80041be:	fab2 f282 	clz	r2, r2
 80041c2:	b2d2      	uxtb	r2, r2
 80041c4:	f042 0220 	orr.w	r2, r2, #32
 80041c8:	b2d2      	uxtb	r2, r2
 80041ca:	f002 021f 	and.w	r2, r2, #31
 80041ce:	2101      	movs	r1, #1
 80041d0:	fa01 f202 	lsl.w	r2, r1, r2
 80041d4:	4013      	ands	r3, r2
 80041d6:	2b00      	cmp	r3, #0
 80041d8:	d0af      	beq.n	800413a <HAL_RCC_OscConfig+0x492>
 80041da:	4b2d      	ldr	r3, [pc, #180]	@ (8004290 <HAL_RCC_OscConfig+0x5e8>)
 80041dc:	681b      	ldr	r3, [r3, #0]
 80041de:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 80041e2:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80041e6:	f5a3 73fe 	sub.w	r3, r3, #508	@ 0x1fc
 80041ea:	681b      	ldr	r3, [r3, #0]
 80041ec:	695b      	ldr	r3, [r3, #20]
 80041ee:	21f8      	movs	r1, #248	@ 0xf8
 80041f0:	f8c7 1140 	str.w	r1, [r7, #320]	@ 0x140
 80041f4:	f8d7 1140 	ldr.w	r1, [r7, #320]	@ 0x140
 80041f8:	fa91 f1a1 	rbit	r1, r1
 80041fc:	f8c7 113c 	str.w	r1, [r7, #316]	@ 0x13c
 8004200:	f8d7 113c 	ldr.w	r1, [r7, #316]	@ 0x13c
 8004204:	fab1 f181 	clz	r1, r1
 8004208:	b2c9      	uxtb	r1, r1
 800420a:	408b      	lsls	r3, r1
 800420c:	4920      	ldr	r1, [pc, #128]	@ (8004290 <HAL_RCC_OscConfig+0x5e8>)
 800420e:	4313      	orrs	r3, r2
 8004210:	600b      	str	r3, [r1, #0]
 8004212:	e06c      	b.n	80042ee <HAL_RCC_OscConfig+0x646>
 8004214:	2301      	movs	r3, #1
 8004216:	f8c7 3138 	str.w	r3, [r7, #312]	@ 0x138
 800421a:	f8d7 3138 	ldr.w	r3, [r7, #312]	@ 0x138
 800421e:	fa93 f3a3 	rbit	r3, r3
 8004222:	f8c7 3134 	str.w	r3, [r7, #308]	@ 0x134
 8004226:	f8d7 3134 	ldr.w	r3, [r7, #308]	@ 0x134
 800422a:	fab3 f383 	clz	r3, r3
 800422e:	b2db      	uxtb	r3, r3
 8004230:	f103 5384 	add.w	r3, r3, #276824064	@ 0x10800000
 8004234:	f503 1384 	add.w	r3, r3, #1081344	@ 0x108000
 8004238:	009b      	lsls	r3, r3, #2
 800423a:	461a      	mov	r2, r3
 800423c:	2300      	movs	r3, #0
 800423e:	6013      	str	r3, [r2, #0]
 8004240:	f7fe fbc6 	bl	80029d0 <HAL_GetTick>
 8004244:	f8c7 01f8 	str.w	r0, [r7, #504]	@ 0x1f8
 8004248:	e00a      	b.n	8004260 <HAL_RCC_OscConfig+0x5b8>
 800424a:	f7fe fbc1 	bl	80029d0 <HAL_GetTick>
 800424e:	4602      	mov	r2, r0
 8004250:	f8d7 31f8 	ldr.w	r3, [r7, #504]	@ 0x1f8
 8004254:	1ad3      	subs	r3, r2, r3
 8004256:	2b02      	cmp	r3, #2
 8004258:	d902      	bls.n	8004260 <HAL_RCC_OscConfig+0x5b8>
 800425a:	2303      	movs	r3, #3
 800425c:	f000 bd5a 	b.w	8004d14 <HAL_RCC_OscConfig+0x106c>
 8004260:	2302      	movs	r3, #2
 8004262:	f8c7 3130 	str.w	r3, [r7, #304]	@ 0x130
 8004266:	f8d7 3130 	ldr.w	r3, [r7, #304]	@ 0x130
 800426a:	fa93 f3a3 	rbit	r3, r3
 800426e:	f8c7 312c 	str.w	r3, [r7, #300]	@ 0x12c
 8004272:	f8d7 312c 	ldr.w	r3, [r7, #300]	@ 0x12c
 8004276:	fab3 f383 	clz	r3, r3
 800427a:	b2db      	uxtb	r3, r3
 800427c:	095b      	lsrs	r3, r3, #5
 800427e:	b2db      	uxtb	r3, r3
 8004280:	f043 0301 	orr.w	r3, r3, #1
 8004284:	b2db      	uxtb	r3, r3
 8004286:	2b01      	cmp	r3, #1
 8004288:	d104      	bne.n	8004294 <HAL_RCC_OscConfig+0x5ec>
 800428a:	4b01      	ldr	r3, [pc, #4]	@ (8004290 <HAL_RCC_OscConfig+0x5e8>)
 800428c:	681b      	ldr	r3, [r3, #0]
 800428e:	e015      	b.n	80042bc <HAL_RCC_OscConfig+0x614>
 8004290:	40021000 	.word	0x40021000
 8004294:	2302      	movs	r3, #2
 8004296:	f8c7 3128 	str.w	r3, [r7, #296]	@ 0x128
 800429a:	f8d7 3128 	ldr.w	r3, [r7, #296]	@ 0x128
 800429e:	fa93 f3a3 	rbit	r3, r3
 80042a2:	f8c7 3124 	str.w	r3, [r7, #292]	@ 0x124
 80042a6:	2302      	movs	r3, #2
 80042a8:	f8c7 3120 	str.w	r3, [r7, #288]	@ 0x120
 80042ac:	f8d7 3120 	ldr.w	r3, [r7, #288]	@ 0x120
 80042b0:	fa93 f3a3 	rbit	r3, r3
 80042b4:	f8c7 311c 	str.w	r3, [r7, #284]	@ 0x11c
 80042b8:	4bc8      	ldr	r3, [pc, #800]	@ (80045dc <HAL_RCC_OscConfig+0x934>)
 80042ba:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80042bc:	2202      	movs	r2, #2
 80042be:	f8c7 2118 	str.w	r2, [r7, #280]	@ 0x118
 80042c2:	f8d7 2118 	ldr.w	r2, [r7, #280]	@ 0x118
 80042c6:	fa92 f2a2 	rbit	r2, r2
 80042ca:	f8c7 2114 	str.w	r2, [r7, #276]	@ 0x114
 80042ce:	f8d7 2114 	ldr.w	r2, [r7, #276]	@ 0x114
 80042d2:	fab2 f282 	clz	r2, r2
 80042d6:	b2d2      	uxtb	r2, r2
 80042d8:	f042 0220 	orr.w	r2, r2, #32
 80042dc:	b2d2      	uxtb	r2, r2
 80042de:	f002 021f 	and.w	r2, r2, #31
 80042e2:	2101      	movs	r1, #1
 80042e4:	fa01 f202 	lsl.w	r2, r1, r2
 80042e8:	4013      	ands	r3, r2
 80042ea:	2b00      	cmp	r3, #0
 80042ec:	d1ad      	bne.n	800424a <HAL_RCC_OscConfig+0x5a2>
 80042ee:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80042f2:	f5a3 73fe 	sub.w	r3, r3, #508	@ 0x1fc
 80042f6:	681b      	ldr	r3, [r3, #0]
 80042f8:	681b      	ldr	r3, [r3, #0]
 80042fa:	f003 0308 	and.w	r3, r3, #8
 80042fe:	2b00      	cmp	r3, #0
 8004300:	f000 8110 	beq.w	8004524 <HAL_RCC_OscConfig+0x87c>
 8004304:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004308:	f5a3 73fe 	sub.w	r3, r3, #508	@ 0x1fc
 800430c:	681b      	ldr	r3, [r3, #0]
 800430e:	699b      	ldr	r3, [r3, #24]
 8004310:	2b00      	cmp	r3, #0
 8004312:	d079      	beq.n	8004408 <HAL_RCC_OscConfig+0x760>
 8004314:	2301      	movs	r3, #1
 8004316:	f8c7 3110 	str.w	r3, [r7, #272]	@ 0x110
 800431a:	f8d7 3110 	ldr.w	r3, [r7, #272]	@ 0x110
 800431e:	fa93 f3a3 	rbit	r3, r3
 8004322:	f8c7 310c 	str.w	r3, [r7, #268]	@ 0x10c
 8004326:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 800432a:	fab3 f383 	clz	r3, r3
 800432e:	b2db      	uxtb	r3, r3
 8004330:	461a      	mov	r2, r3
 8004332:	4bab      	ldr	r3, [pc, #684]	@ (80045e0 <HAL_RCC_OscConfig+0x938>)
 8004334:	4413      	add	r3, r2
 8004336:	009b      	lsls	r3, r3, #2
 8004338:	461a      	mov	r2, r3
 800433a:	2301      	movs	r3, #1
 800433c:	6013      	str	r3, [r2, #0]
 800433e:	f7fe fb47 	bl	80029d0 <HAL_GetTick>
 8004342:	f8c7 01f8 	str.w	r0, [r7, #504]	@ 0x1f8
 8004346:	e00a      	b.n	800435e <HAL_RCC_OscConfig+0x6b6>
 8004348:	f7fe fb42 	bl	80029d0 <HAL_GetTick>
 800434c:	4602      	mov	r2, r0
 800434e:	f8d7 31f8 	ldr.w	r3, [r7, #504]	@ 0x1f8
 8004352:	1ad3      	subs	r3, r2, r3
 8004354:	2b02      	cmp	r3, #2
 8004356:	d902      	bls.n	800435e <HAL_RCC_OscConfig+0x6b6>
 8004358:	2303      	movs	r3, #3
 800435a:	f000 bcdb 	b.w	8004d14 <HAL_RCC_OscConfig+0x106c>
 800435e:	2302      	movs	r3, #2
 8004360:	f8c7 3108 	str.w	r3, [r7, #264]	@ 0x108
 8004364:	f8d7 3108 	ldr.w	r3, [r7, #264]	@ 0x108
 8004368:	fa93 f3a3 	rbit	r3, r3
 800436c:	f8c7 3104 	str.w	r3, [r7, #260]	@ 0x104
 8004370:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004374:	f5a3 7380 	sub.w	r3, r3, #256	@ 0x100
 8004378:	2202      	movs	r2, #2
 800437a:	601a      	str	r2, [r3, #0]
 800437c:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004380:	f5a3 7380 	sub.w	r3, r3, #256	@ 0x100
 8004384:	681b      	ldr	r3, [r3, #0]
 8004386:	fa93 f2a3 	rbit	r2, r3
 800438a:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 800438e:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 8004392:	601a      	str	r2, [r3, #0]
 8004394:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004398:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 800439c:	2202      	movs	r2, #2
 800439e:	601a      	str	r2, [r3, #0]
 80043a0:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80043a4:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 80043a8:	681b      	ldr	r3, [r3, #0]
 80043aa:	fa93 f2a3 	rbit	r2, r3
 80043ae:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80043b2:	f5a3 7386 	sub.w	r3, r3, #268	@ 0x10c
 80043b6:	601a      	str	r2, [r3, #0]
 80043b8:	4b88      	ldr	r3, [pc, #544]	@ (80045dc <HAL_RCC_OscConfig+0x934>)
 80043ba:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 80043bc:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80043c0:	f5a3 7388 	sub.w	r3, r3, #272	@ 0x110
 80043c4:	2102      	movs	r1, #2
 80043c6:	6019      	str	r1, [r3, #0]
 80043c8:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80043cc:	f5a3 7388 	sub.w	r3, r3, #272	@ 0x110
 80043d0:	681b      	ldr	r3, [r3, #0]
 80043d2:	fa93 f1a3 	rbit	r1, r3
 80043d6:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80043da:	f5a3 738a 	sub.w	r3, r3, #276	@ 0x114
 80043de:	6019      	str	r1, [r3, #0]
 80043e0:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80043e4:	f5a3 738a 	sub.w	r3, r3, #276	@ 0x114
 80043e8:	681b      	ldr	r3, [r3, #0]
 80043ea:	fab3 f383 	clz	r3, r3
 80043ee:	b2db      	uxtb	r3, r3
 80043f0:	f043 0360 	orr.w	r3, r3, #96	@ 0x60
 80043f4:	b2db      	uxtb	r3, r3
 80043f6:	f003 031f 	and.w	r3, r3, #31
 80043fa:	2101      	movs	r1, #1
 80043fc:	fa01 f303 	lsl.w	r3, r1, r3
 8004400:	4013      	ands	r3, r2
 8004402:	2b00      	cmp	r3, #0
 8004404:	d0a0      	beq.n	8004348 <HAL_RCC_OscConfig+0x6a0>
 8004406:	e08d      	b.n	8004524 <HAL_RCC_OscConfig+0x87c>
 8004408:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 800440c:	f5a3 738c 	sub.w	r3, r3, #280	@ 0x118
 8004410:	2201      	movs	r2, #1
 8004412:	601a      	str	r2, [r3, #0]
 8004414:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004418:	f5a3 738c 	sub.w	r3, r3, #280	@ 0x118
 800441c:	681b      	ldr	r3, [r3, #0]
 800441e:	fa93 f2a3 	rbit	r2, r3
 8004422:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004426:	f5a3 738e 	sub.w	r3, r3, #284	@ 0x11c
 800442a:	601a      	str	r2, [r3, #0]
 800442c:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004430:	f5a3 738e 	sub.w	r3, r3, #284	@ 0x11c
 8004434:	681b      	ldr	r3, [r3, #0]
 8004436:	fab3 f383 	clz	r3, r3
 800443a:	b2db      	uxtb	r3, r3
 800443c:	461a      	mov	r2, r3
 800443e:	4b68      	ldr	r3, [pc, #416]	@ (80045e0 <HAL_RCC_OscConfig+0x938>)
 8004440:	4413      	add	r3, r2
 8004442:	009b      	lsls	r3, r3, #2
 8004444:	461a      	mov	r2, r3
 8004446:	2300      	movs	r3, #0
 8004448:	6013      	str	r3, [r2, #0]
 800444a:	f7fe fac1 	bl	80029d0 <HAL_GetTick>
 800444e:	f8c7 01f8 	str.w	r0, [r7, #504]	@ 0x1f8
 8004452:	e00a      	b.n	800446a <HAL_RCC_OscConfig+0x7c2>
 8004454:	f7fe fabc 	bl	80029d0 <HAL_GetTick>
 8004458:	4602      	mov	r2, r0
 800445a:	f8d7 31f8 	ldr.w	r3, [r7, #504]	@ 0x1f8
 800445e:	1ad3      	subs	r3, r2, r3
 8004460:	2b02      	cmp	r3, #2
 8004462:	d902      	bls.n	800446a <HAL_RCC_OscConfig+0x7c2>
 8004464:	2303      	movs	r3, #3
 8004466:	f000 bc55 	b.w	8004d14 <HAL_RCC_OscConfig+0x106c>
 800446a:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 800446e:	f5a3 7390 	sub.w	r3, r3, #288	@ 0x120
 8004472:	2202      	movs	r2, #2
 8004474:	601a      	str	r2, [r3, #0]
 8004476:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 800447a:	f5a3 7390 	sub.w	r3, r3, #288	@ 0x120
 800447e:	681b      	ldr	r3, [r3, #0]
 8004480:	fa93 f2a3 	rbit	r2, r3
 8004484:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004488:	f5a3 7392 	sub.w	r3, r3, #292	@ 0x124
 800448c:	601a      	str	r2, [r3, #0]
 800448e:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004492:	f5a3 7394 	sub.w	r3, r3, #296	@ 0x128
 8004496:	2202      	movs	r2, #2
 8004498:	601a      	str	r2, [r3, #0]
 800449a:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 800449e:	f5a3 7394 	sub.w	r3, r3, #296	@ 0x128
 80044a2:	681b      	ldr	r3, [r3, #0]
 80044a4:	fa93 f2a3 	rbit	r2, r3
 80044a8:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80044ac:	f5a3 7396 	sub.w	r3, r3, #300	@ 0x12c
 80044b0:	601a      	str	r2, [r3, #0]
 80044b2:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80044b6:	f5a3 7398 	sub.w	r3, r3, #304	@ 0x130
 80044ba:	2202      	movs	r2, #2
 80044bc:	601a      	str	r2, [r3, #0]
 80044be:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80044c2:	f5a3 7398 	sub.w	r3, r3, #304	@ 0x130
 80044c6:	681b      	ldr	r3, [r3, #0]
 80044c8:	fa93 f2a3 	rbit	r2, r3
 80044cc:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80044d0:	f5a3 739a 	sub.w	r3, r3, #308	@ 0x134
 80044d4:	601a      	str	r2, [r3, #0]
 80044d6:	4b41      	ldr	r3, [pc, #260]	@ (80045dc <HAL_RCC_OscConfig+0x934>)
 80044d8:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 80044da:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80044de:	f5a3 739c 	sub.w	r3, r3, #312	@ 0x138
 80044e2:	2102      	movs	r1, #2
 80044e4:	6019      	str	r1, [r3, #0]
 80044e6:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80044ea:	f5a3 739c 	sub.w	r3, r3, #312	@ 0x138
 80044ee:	681b      	ldr	r3, [r3, #0]
 80044f0:	fa93 f1a3 	rbit	r1, r3
 80044f4:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80044f8:	f5a3 739e 	sub.w	r3, r3, #316	@ 0x13c
 80044fc:	6019      	str	r1, [r3, #0]
 80044fe:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004502:	f5a3 739e 	sub.w	r3, r3, #316	@ 0x13c
 8004506:	681b      	ldr	r3, [r3, #0]
 8004508:	fab3 f383 	clz	r3, r3
 800450c:	b2db      	uxtb	r3, r3
 800450e:	f043 0360 	orr.w	r3, r3, #96	@ 0x60
 8004512:	b2db      	uxtb	r3, r3
 8004514:	f003 031f 	and.w	r3, r3, #31
 8004518:	2101      	movs	r1, #1
 800451a:	fa01 f303 	lsl.w	r3, r1, r3
 800451e:	4013      	ands	r3, r2
 8004520:	2b00      	cmp	r3, #0
 8004522:	d197      	bne.n	8004454 <HAL_RCC_OscConfig+0x7ac>
 8004524:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004528:	f5a3 73fe 	sub.w	r3, r3, #508	@ 0x1fc
 800452c:	681b      	ldr	r3, [r3, #0]
 800452e:	681b      	ldr	r3, [r3, #0]
 8004530:	f003 0304 	and.w	r3, r3, #4
 8004534:	2b00      	cmp	r3, #0
 8004536:	f000 81a1 	beq.w	800487c <HAL_RCC_OscConfig+0xbd4>
 800453a:	2300      	movs	r3, #0
 800453c:	f887 31ff 	strb.w	r3, [r7, #511]	@ 0x1ff
 8004540:	4b26      	ldr	r3, [pc, #152]	@ (80045dc <HAL_RCC_OscConfig+0x934>)
 8004542:	69db      	ldr	r3, [r3, #28]
 8004544:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8004548:	2b00      	cmp	r3, #0
 800454a:	d116      	bne.n	800457a <HAL_RCC_OscConfig+0x8d2>
 800454c:	4b23      	ldr	r3, [pc, #140]	@ (80045dc <HAL_RCC_OscConfig+0x934>)
 800454e:	69db      	ldr	r3, [r3, #28]
 8004550:	4a22      	ldr	r2, [pc, #136]	@ (80045dc <HAL_RCC_OscConfig+0x934>)
 8004552:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8004556:	61d3      	str	r3, [r2, #28]
 8004558:	4b20      	ldr	r3, [pc, #128]	@ (80045dc <HAL_RCC_OscConfig+0x934>)
 800455a:	69db      	ldr	r3, [r3, #28]
 800455c:	f003 5280 	and.w	r2, r3, #268435456	@ 0x10000000
 8004560:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004564:	f5a3 73fc 	sub.w	r3, r3, #504	@ 0x1f8
 8004568:	601a      	str	r2, [r3, #0]
 800456a:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 800456e:	f5a3 73fc 	sub.w	r3, r3, #504	@ 0x1f8
 8004572:	681b      	ldr	r3, [r3, #0]
 8004574:	2301      	movs	r3, #1
 8004576:	f887 31ff 	strb.w	r3, [r7, #511]	@ 0x1ff
 800457a:	4b1a      	ldr	r3, [pc, #104]	@ (80045e4 <HAL_RCC_OscConfig+0x93c>)
 800457c:	681b      	ldr	r3, [r3, #0]
 800457e:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8004582:	2b00      	cmp	r3, #0
 8004584:	d11a      	bne.n	80045bc <HAL_RCC_OscConfig+0x914>
 8004586:	4b17      	ldr	r3, [pc, #92]	@ (80045e4 <HAL_RCC_OscConfig+0x93c>)
 8004588:	681b      	ldr	r3, [r3, #0]
 800458a:	4a16      	ldr	r2, [pc, #88]	@ (80045e4 <HAL_RCC_OscConfig+0x93c>)
 800458c:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8004590:	6013      	str	r3, [r2, #0]
 8004592:	f7fe fa1d 	bl	80029d0 <HAL_GetTick>
 8004596:	f8c7 01f8 	str.w	r0, [r7, #504]	@ 0x1f8
 800459a:	e009      	b.n	80045b0 <HAL_RCC_OscConfig+0x908>
 800459c:	f7fe fa18 	bl	80029d0 <HAL_GetTick>
 80045a0:	4602      	mov	r2, r0
 80045a2:	f8d7 31f8 	ldr.w	r3, [r7, #504]	@ 0x1f8
 80045a6:	1ad3      	subs	r3, r2, r3
 80045a8:	2b64      	cmp	r3, #100	@ 0x64
 80045aa:	d901      	bls.n	80045b0 <HAL_RCC_OscConfig+0x908>
 80045ac:	2303      	movs	r3, #3
 80045ae:	e3b1      	b.n	8004d14 <HAL_RCC_OscConfig+0x106c>
 80045b0:	4b0c      	ldr	r3, [pc, #48]	@ (80045e4 <HAL_RCC_OscConfig+0x93c>)
 80045b2:	681b      	ldr	r3, [r3, #0]
 80045b4:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80045b8:	2b00      	cmp	r3, #0
 80045ba:	d0ef      	beq.n	800459c <HAL_RCC_OscConfig+0x8f4>
 80045bc:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80045c0:	f5a3 73fe 	sub.w	r3, r3, #508	@ 0x1fc
 80045c4:	681b      	ldr	r3, [r3, #0]
 80045c6:	68db      	ldr	r3, [r3, #12]
 80045c8:	2b01      	cmp	r3, #1
 80045ca:	d10d      	bne.n	80045e8 <HAL_RCC_OscConfig+0x940>
 80045cc:	4b03      	ldr	r3, [pc, #12]	@ (80045dc <HAL_RCC_OscConfig+0x934>)
 80045ce:	6a1b      	ldr	r3, [r3, #32]
 80045d0:	4a02      	ldr	r2, [pc, #8]	@ (80045dc <HAL_RCC_OscConfig+0x934>)
 80045d2:	f043 0301 	orr.w	r3, r3, #1
 80045d6:	6213      	str	r3, [r2, #32]
 80045d8:	e03c      	b.n	8004654 <HAL_RCC_OscConfig+0x9ac>
 80045da:	bf00      	nop
 80045dc:	40021000 	.word	0x40021000
 80045e0:	10908120 	.word	0x10908120
 80045e4:	40007000 	.word	0x40007000
 80045e8:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80045ec:	f5a3 73fe 	sub.w	r3, r3, #508	@ 0x1fc
 80045f0:	681b      	ldr	r3, [r3, #0]
 80045f2:	68db      	ldr	r3, [r3, #12]
 80045f4:	2b00      	cmp	r3, #0
 80045f6:	d10c      	bne.n	8004612 <HAL_RCC_OscConfig+0x96a>
 80045f8:	4bc1      	ldr	r3, [pc, #772]	@ (8004900 <HAL_RCC_OscConfig+0xc58>)
 80045fa:	6a1b      	ldr	r3, [r3, #32]
 80045fc:	4ac0      	ldr	r2, [pc, #768]	@ (8004900 <HAL_RCC_OscConfig+0xc58>)
 80045fe:	f023 0301 	bic.w	r3, r3, #1
 8004602:	6213      	str	r3, [r2, #32]
 8004604:	4bbe      	ldr	r3, [pc, #760]	@ (8004900 <HAL_RCC_OscConfig+0xc58>)
 8004606:	6a1b      	ldr	r3, [r3, #32]
 8004608:	4abd      	ldr	r2, [pc, #756]	@ (8004900 <HAL_RCC_OscConfig+0xc58>)
 800460a:	f023 0304 	bic.w	r3, r3, #4
 800460e:	6213      	str	r3, [r2, #32]
 8004610:	e020      	b.n	8004654 <HAL_RCC_OscConfig+0x9ac>
 8004612:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004616:	f5a3 73fe 	sub.w	r3, r3, #508	@ 0x1fc
 800461a:	681b      	ldr	r3, [r3, #0]
 800461c:	68db      	ldr	r3, [r3, #12]
 800461e:	2b05      	cmp	r3, #5
 8004620:	d10c      	bne.n	800463c <HAL_RCC_OscConfig+0x994>
 8004622:	4bb7      	ldr	r3, [pc, #732]	@ (8004900 <HAL_RCC_OscConfig+0xc58>)
 8004624:	6a1b      	ldr	r3, [r3, #32]
 8004626:	4ab6      	ldr	r2, [pc, #728]	@ (8004900 <HAL_RCC_OscConfig+0xc58>)
 8004628:	f043 0304 	orr.w	r3, r3, #4
 800462c:	6213      	str	r3, [r2, #32]
 800462e:	4bb4      	ldr	r3, [pc, #720]	@ (8004900 <HAL_RCC_OscConfig+0xc58>)
 8004630:	6a1b      	ldr	r3, [r3, #32]
 8004632:	4ab3      	ldr	r2, [pc, #716]	@ (8004900 <HAL_RCC_OscConfig+0xc58>)
 8004634:	f043 0301 	orr.w	r3, r3, #1
 8004638:	6213      	str	r3, [r2, #32]
 800463a:	e00b      	b.n	8004654 <HAL_RCC_OscConfig+0x9ac>
 800463c:	4bb0      	ldr	r3, [pc, #704]	@ (8004900 <HAL_RCC_OscConfig+0xc58>)
 800463e:	6a1b      	ldr	r3, [r3, #32]
 8004640:	4aaf      	ldr	r2, [pc, #700]	@ (8004900 <HAL_RCC_OscConfig+0xc58>)
 8004642:	f023 0301 	bic.w	r3, r3, #1
 8004646:	6213      	str	r3, [r2, #32]
 8004648:	4bad      	ldr	r3, [pc, #692]	@ (8004900 <HAL_RCC_OscConfig+0xc58>)
 800464a:	6a1b      	ldr	r3, [r3, #32]
 800464c:	4aac      	ldr	r2, [pc, #688]	@ (8004900 <HAL_RCC_OscConfig+0xc58>)
 800464e:	f023 0304 	bic.w	r3, r3, #4
 8004652:	6213      	str	r3, [r2, #32]
 8004654:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004658:	f5a3 73fe 	sub.w	r3, r3, #508	@ 0x1fc
 800465c:	681b      	ldr	r3, [r3, #0]
 800465e:	68db      	ldr	r3, [r3, #12]
 8004660:	2b00      	cmp	r3, #0
 8004662:	f000 8081 	beq.w	8004768 <HAL_RCC_OscConfig+0xac0>
 8004666:	f7fe f9b3 	bl	80029d0 <HAL_GetTick>
 800466a:	f8c7 01f8 	str.w	r0, [r7, #504]	@ 0x1f8
 800466e:	e00b      	b.n	8004688 <HAL_RCC_OscConfig+0x9e0>
 8004670:	f7fe f9ae 	bl	80029d0 <HAL_GetTick>
 8004674:	4602      	mov	r2, r0
 8004676:	f8d7 31f8 	ldr.w	r3, [r7, #504]	@ 0x1f8
 800467a:	1ad3      	subs	r3, r2, r3
 800467c:	f241 3288 	movw	r2, #5000	@ 0x1388
 8004680:	4293      	cmp	r3, r2
 8004682:	d901      	bls.n	8004688 <HAL_RCC_OscConfig+0x9e0>
 8004684:	2303      	movs	r3, #3
 8004686:	e345      	b.n	8004d14 <HAL_RCC_OscConfig+0x106c>
 8004688:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 800468c:	f5a3 73a0 	sub.w	r3, r3, #320	@ 0x140
 8004690:	2202      	movs	r2, #2
 8004692:	601a      	str	r2, [r3, #0]
 8004694:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004698:	f5a3 73a0 	sub.w	r3, r3, #320	@ 0x140
 800469c:	681b      	ldr	r3, [r3, #0]
 800469e:	fa93 f2a3 	rbit	r2, r3
 80046a2:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80046a6:	f5a3 73a2 	sub.w	r3, r3, #324	@ 0x144
 80046aa:	601a      	str	r2, [r3, #0]
 80046ac:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80046b0:	f5a3 73a4 	sub.w	r3, r3, #328	@ 0x148
 80046b4:	2202      	movs	r2, #2
 80046b6:	601a      	str	r2, [r3, #0]
 80046b8:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80046bc:	f5a3 73a4 	sub.w	r3, r3, #328	@ 0x148
 80046c0:	681b      	ldr	r3, [r3, #0]
 80046c2:	fa93 f2a3 	rbit	r2, r3
 80046c6:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80046ca:	f5a3 73a6 	sub.w	r3, r3, #332	@ 0x14c
 80046ce:	601a      	str	r2, [r3, #0]
 80046d0:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80046d4:	f5a3 73a6 	sub.w	r3, r3, #332	@ 0x14c
 80046d8:	681b      	ldr	r3, [r3, #0]
 80046da:	fab3 f383 	clz	r3, r3
 80046de:	b2db      	uxtb	r3, r3
 80046e0:	095b      	lsrs	r3, r3, #5
 80046e2:	b2db      	uxtb	r3, r3
 80046e4:	f043 0302 	orr.w	r3, r3, #2
 80046e8:	b2db      	uxtb	r3, r3
 80046ea:	2b02      	cmp	r3, #2
 80046ec:	d102      	bne.n	80046f4 <HAL_RCC_OscConfig+0xa4c>
 80046ee:	4b84      	ldr	r3, [pc, #528]	@ (8004900 <HAL_RCC_OscConfig+0xc58>)
 80046f0:	6a1b      	ldr	r3, [r3, #32]
 80046f2:	e013      	b.n	800471c <HAL_RCC_OscConfig+0xa74>
 80046f4:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80046f8:	f5a3 73a8 	sub.w	r3, r3, #336	@ 0x150
 80046fc:	2202      	movs	r2, #2
 80046fe:	601a      	str	r2, [r3, #0]
 8004700:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004704:	f5a3 73a8 	sub.w	r3, r3, #336	@ 0x150
 8004708:	681b      	ldr	r3, [r3, #0]
 800470a:	fa93 f2a3 	rbit	r2, r3
 800470e:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004712:	f5a3 73aa 	sub.w	r3, r3, #340	@ 0x154
 8004716:	601a      	str	r2, [r3, #0]
 8004718:	4b79      	ldr	r3, [pc, #484]	@ (8004900 <HAL_RCC_OscConfig+0xc58>)
 800471a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800471c:	f507 7200 	add.w	r2, r7, #512	@ 0x200
 8004720:	f5a2 72ac 	sub.w	r2, r2, #344	@ 0x158
 8004724:	2102      	movs	r1, #2
 8004726:	6011      	str	r1, [r2, #0]
 8004728:	f507 7200 	add.w	r2, r7, #512	@ 0x200
 800472c:	f5a2 72ac 	sub.w	r2, r2, #344	@ 0x158
 8004730:	6812      	ldr	r2, [r2, #0]
 8004732:	fa92 f1a2 	rbit	r1, r2
 8004736:	f507 7200 	add.w	r2, r7, #512	@ 0x200
 800473a:	f5a2 72ae 	sub.w	r2, r2, #348	@ 0x15c
 800473e:	6011      	str	r1, [r2, #0]
 8004740:	f507 7200 	add.w	r2, r7, #512	@ 0x200
 8004744:	f5a2 72ae 	sub.w	r2, r2, #348	@ 0x15c
 8004748:	6812      	ldr	r2, [r2, #0]
 800474a:	fab2 f282 	clz	r2, r2
 800474e:	b2d2      	uxtb	r2, r2
 8004750:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8004754:	b2d2      	uxtb	r2, r2
 8004756:	f002 021f 	and.w	r2, r2, #31
 800475a:	2101      	movs	r1, #1
 800475c:	fa01 f202 	lsl.w	r2, r1, r2
 8004760:	4013      	ands	r3, r2
 8004762:	2b00      	cmp	r3, #0
 8004764:	d084      	beq.n	8004670 <HAL_RCC_OscConfig+0x9c8>
 8004766:	e07f      	b.n	8004868 <HAL_RCC_OscConfig+0xbc0>
 8004768:	f7fe f932 	bl	80029d0 <HAL_GetTick>
 800476c:	f8c7 01f8 	str.w	r0, [r7, #504]	@ 0x1f8
 8004770:	e00b      	b.n	800478a <HAL_RCC_OscConfig+0xae2>
 8004772:	f7fe f92d 	bl	80029d0 <HAL_GetTick>
 8004776:	4602      	mov	r2, r0
 8004778:	f8d7 31f8 	ldr.w	r3, [r7, #504]	@ 0x1f8
 800477c:	1ad3      	subs	r3, r2, r3
 800477e:	f241 3288 	movw	r2, #5000	@ 0x1388
 8004782:	4293      	cmp	r3, r2
 8004784:	d901      	bls.n	800478a <HAL_RCC_OscConfig+0xae2>
 8004786:	2303      	movs	r3, #3
 8004788:	e2c4      	b.n	8004d14 <HAL_RCC_OscConfig+0x106c>
 800478a:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 800478e:	f5a3 73b0 	sub.w	r3, r3, #352	@ 0x160
 8004792:	2202      	movs	r2, #2
 8004794:	601a      	str	r2, [r3, #0]
 8004796:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 800479a:	f5a3 73b0 	sub.w	r3, r3, #352	@ 0x160
 800479e:	681b      	ldr	r3, [r3, #0]
 80047a0:	fa93 f2a3 	rbit	r2, r3
 80047a4:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80047a8:	f5a3 73b2 	sub.w	r3, r3, #356	@ 0x164
 80047ac:	601a      	str	r2, [r3, #0]
 80047ae:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80047b2:	f5a3 73b4 	sub.w	r3, r3, #360	@ 0x168
 80047b6:	2202      	movs	r2, #2
 80047b8:	601a      	str	r2, [r3, #0]
 80047ba:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80047be:	f5a3 73b4 	sub.w	r3, r3, #360	@ 0x168
 80047c2:	681b      	ldr	r3, [r3, #0]
 80047c4:	fa93 f2a3 	rbit	r2, r3
 80047c8:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80047cc:	f5a3 73b6 	sub.w	r3, r3, #364	@ 0x16c
 80047d0:	601a      	str	r2, [r3, #0]
 80047d2:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80047d6:	f5a3 73b6 	sub.w	r3, r3, #364	@ 0x16c
 80047da:	681b      	ldr	r3, [r3, #0]
 80047dc:	fab3 f383 	clz	r3, r3
 80047e0:	b2db      	uxtb	r3, r3
 80047e2:	095b      	lsrs	r3, r3, #5
 80047e4:	b2db      	uxtb	r3, r3
 80047e6:	f043 0302 	orr.w	r3, r3, #2
 80047ea:	b2db      	uxtb	r3, r3
 80047ec:	2b02      	cmp	r3, #2
 80047ee:	d102      	bne.n	80047f6 <HAL_RCC_OscConfig+0xb4e>
 80047f0:	4b43      	ldr	r3, [pc, #268]	@ (8004900 <HAL_RCC_OscConfig+0xc58>)
 80047f2:	6a1b      	ldr	r3, [r3, #32]
 80047f4:	e013      	b.n	800481e <HAL_RCC_OscConfig+0xb76>
 80047f6:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80047fa:	f5a3 73b8 	sub.w	r3, r3, #368	@ 0x170
 80047fe:	2202      	movs	r2, #2
 8004800:	601a      	str	r2, [r3, #0]
 8004802:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004806:	f5a3 73b8 	sub.w	r3, r3, #368	@ 0x170
 800480a:	681b      	ldr	r3, [r3, #0]
 800480c:	fa93 f2a3 	rbit	r2, r3
 8004810:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004814:	f5a3 73ba 	sub.w	r3, r3, #372	@ 0x174
 8004818:	601a      	str	r2, [r3, #0]
 800481a:	4b39      	ldr	r3, [pc, #228]	@ (8004900 <HAL_RCC_OscConfig+0xc58>)
 800481c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800481e:	f507 7200 	add.w	r2, r7, #512	@ 0x200
 8004822:	f5a2 72bc 	sub.w	r2, r2, #376	@ 0x178
 8004826:	2102      	movs	r1, #2
 8004828:	6011      	str	r1, [r2, #0]
 800482a:	f507 7200 	add.w	r2, r7, #512	@ 0x200
 800482e:	f5a2 72bc 	sub.w	r2, r2, #376	@ 0x178
 8004832:	6812      	ldr	r2, [r2, #0]
 8004834:	fa92 f1a2 	rbit	r1, r2
 8004838:	f507 7200 	add.w	r2, r7, #512	@ 0x200
 800483c:	f5a2 72be 	sub.w	r2, r2, #380	@ 0x17c
 8004840:	6011      	str	r1, [r2, #0]
 8004842:	f507 7200 	add.w	r2, r7, #512	@ 0x200
 8004846:	f5a2 72be 	sub.w	r2, r2, #380	@ 0x17c
 800484a:	6812      	ldr	r2, [r2, #0]
 800484c:	fab2 f282 	clz	r2, r2
 8004850:	b2d2      	uxtb	r2, r2
 8004852:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8004856:	b2d2      	uxtb	r2, r2
 8004858:	f002 021f 	and.w	r2, r2, #31
 800485c:	2101      	movs	r1, #1
 800485e:	fa01 f202 	lsl.w	r2, r1, r2
 8004862:	4013      	ands	r3, r2
 8004864:	2b00      	cmp	r3, #0
 8004866:	d184      	bne.n	8004772 <HAL_RCC_OscConfig+0xaca>
 8004868:	f897 31ff 	ldrb.w	r3, [r7, #511]	@ 0x1ff
 800486c:	2b01      	cmp	r3, #1
 800486e:	d105      	bne.n	800487c <HAL_RCC_OscConfig+0xbd4>
 8004870:	4b23      	ldr	r3, [pc, #140]	@ (8004900 <HAL_RCC_OscConfig+0xc58>)
 8004872:	69db      	ldr	r3, [r3, #28]
 8004874:	4a22      	ldr	r2, [pc, #136]	@ (8004900 <HAL_RCC_OscConfig+0xc58>)
 8004876:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 800487a:	61d3      	str	r3, [r2, #28]
 800487c:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004880:	f5a3 73fe 	sub.w	r3, r3, #508	@ 0x1fc
 8004884:	681b      	ldr	r3, [r3, #0]
 8004886:	69db      	ldr	r3, [r3, #28]
 8004888:	2b00      	cmp	r3, #0
 800488a:	f000 8242 	beq.w	8004d12 <HAL_RCC_OscConfig+0x106a>
 800488e:	4b1c      	ldr	r3, [pc, #112]	@ (8004900 <HAL_RCC_OscConfig+0xc58>)
 8004890:	685b      	ldr	r3, [r3, #4]
 8004892:	f003 030c 	and.w	r3, r3, #12
 8004896:	2b08      	cmp	r3, #8
 8004898:	f000 8213 	beq.w	8004cc2 <HAL_RCC_OscConfig+0x101a>
 800489c:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80048a0:	f5a3 73fe 	sub.w	r3, r3, #508	@ 0x1fc
 80048a4:	681b      	ldr	r3, [r3, #0]
 80048a6:	69db      	ldr	r3, [r3, #28]
 80048a8:	2b02      	cmp	r3, #2
 80048aa:	f040 8162 	bne.w	8004b72 <HAL_RCC_OscConfig+0xeca>
 80048ae:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80048b2:	f5a3 73c0 	sub.w	r3, r3, #384	@ 0x180
 80048b6:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 80048ba:	601a      	str	r2, [r3, #0]
 80048bc:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80048c0:	f5a3 73c0 	sub.w	r3, r3, #384	@ 0x180
 80048c4:	681b      	ldr	r3, [r3, #0]
 80048c6:	fa93 f2a3 	rbit	r2, r3
 80048ca:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80048ce:	f5a3 73c2 	sub.w	r3, r3, #388	@ 0x184
 80048d2:	601a      	str	r2, [r3, #0]
 80048d4:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80048d8:	f5a3 73c2 	sub.w	r3, r3, #388	@ 0x184
 80048dc:	681b      	ldr	r3, [r3, #0]
 80048de:	fab3 f383 	clz	r3, r3
 80048e2:	b2db      	uxtb	r3, r3
 80048e4:	f103 5384 	add.w	r3, r3, #276824064	@ 0x10800000
 80048e8:	f503 1384 	add.w	r3, r3, #1081344	@ 0x108000
 80048ec:	009b      	lsls	r3, r3, #2
 80048ee:	461a      	mov	r2, r3
 80048f0:	2300      	movs	r3, #0
 80048f2:	6013      	str	r3, [r2, #0]
 80048f4:	f7fe f86c 	bl	80029d0 <HAL_GetTick>
 80048f8:	f8c7 01f8 	str.w	r0, [r7, #504]	@ 0x1f8
 80048fc:	e00c      	b.n	8004918 <HAL_RCC_OscConfig+0xc70>
 80048fe:	bf00      	nop
 8004900:	40021000 	.word	0x40021000
 8004904:	f7fe f864 	bl	80029d0 <HAL_GetTick>
 8004908:	4602      	mov	r2, r0
 800490a:	f8d7 31f8 	ldr.w	r3, [r7, #504]	@ 0x1f8
 800490e:	1ad3      	subs	r3, r2, r3
 8004910:	2b02      	cmp	r3, #2
 8004912:	d901      	bls.n	8004918 <HAL_RCC_OscConfig+0xc70>
 8004914:	2303      	movs	r3, #3
 8004916:	e1fd      	b.n	8004d14 <HAL_RCC_OscConfig+0x106c>
 8004918:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 800491c:	f5a3 73c4 	sub.w	r3, r3, #392	@ 0x188
 8004920:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8004924:	601a      	str	r2, [r3, #0]
 8004926:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 800492a:	f5a3 73c4 	sub.w	r3, r3, #392	@ 0x188
 800492e:	681b      	ldr	r3, [r3, #0]
 8004930:	fa93 f2a3 	rbit	r2, r3
 8004934:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004938:	f5a3 73c6 	sub.w	r3, r3, #396	@ 0x18c
 800493c:	601a      	str	r2, [r3, #0]
 800493e:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004942:	f5a3 73c6 	sub.w	r3, r3, #396	@ 0x18c
 8004946:	681b      	ldr	r3, [r3, #0]
 8004948:	fab3 f383 	clz	r3, r3
 800494c:	b2db      	uxtb	r3, r3
 800494e:	095b      	lsrs	r3, r3, #5
 8004950:	b2db      	uxtb	r3, r3
 8004952:	f043 0301 	orr.w	r3, r3, #1
 8004956:	b2db      	uxtb	r3, r3
 8004958:	2b01      	cmp	r3, #1
 800495a:	d102      	bne.n	8004962 <HAL_RCC_OscConfig+0xcba>
 800495c:	4bb0      	ldr	r3, [pc, #704]	@ (8004c20 <HAL_RCC_OscConfig+0xf78>)
 800495e:	681b      	ldr	r3, [r3, #0]
 8004960:	e027      	b.n	80049b2 <HAL_RCC_OscConfig+0xd0a>
 8004962:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004966:	f5a3 73c8 	sub.w	r3, r3, #400	@ 0x190
 800496a:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 800496e:	601a      	str	r2, [r3, #0]
 8004970:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004974:	f5a3 73c8 	sub.w	r3, r3, #400	@ 0x190
 8004978:	681b      	ldr	r3, [r3, #0]
 800497a:	fa93 f2a3 	rbit	r2, r3
 800497e:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004982:	f5a3 73ca 	sub.w	r3, r3, #404	@ 0x194
 8004986:	601a      	str	r2, [r3, #0]
 8004988:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 800498c:	f5a3 73cc 	sub.w	r3, r3, #408	@ 0x198
 8004990:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8004994:	601a      	str	r2, [r3, #0]
 8004996:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 800499a:	f5a3 73cc 	sub.w	r3, r3, #408	@ 0x198
 800499e:	681b      	ldr	r3, [r3, #0]
 80049a0:	fa93 f2a3 	rbit	r2, r3
 80049a4:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80049a8:	f5a3 73ce 	sub.w	r3, r3, #412	@ 0x19c
 80049ac:	601a      	str	r2, [r3, #0]
 80049ae:	4b9c      	ldr	r3, [pc, #624]	@ (8004c20 <HAL_RCC_OscConfig+0xf78>)
 80049b0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80049b2:	f507 7200 	add.w	r2, r7, #512	@ 0x200
 80049b6:	f5a2 72d0 	sub.w	r2, r2, #416	@ 0x1a0
 80049ba:	f04f 7100 	mov.w	r1, #33554432	@ 0x2000000
 80049be:	6011      	str	r1, [r2, #0]
 80049c0:	f507 7200 	add.w	r2, r7, #512	@ 0x200
 80049c4:	f5a2 72d0 	sub.w	r2, r2, #416	@ 0x1a0
 80049c8:	6812      	ldr	r2, [r2, #0]
 80049ca:	fa92 f1a2 	rbit	r1, r2
 80049ce:	f507 7200 	add.w	r2, r7, #512	@ 0x200
 80049d2:	f5a2 72d2 	sub.w	r2, r2, #420	@ 0x1a4
 80049d6:	6011      	str	r1, [r2, #0]
 80049d8:	f507 7200 	add.w	r2, r7, #512	@ 0x200
 80049dc:	f5a2 72d2 	sub.w	r2, r2, #420	@ 0x1a4
 80049e0:	6812      	ldr	r2, [r2, #0]
 80049e2:	fab2 f282 	clz	r2, r2
 80049e6:	b2d2      	uxtb	r2, r2
 80049e8:	f042 0220 	orr.w	r2, r2, #32
 80049ec:	b2d2      	uxtb	r2, r2
 80049ee:	f002 021f 	and.w	r2, r2, #31
 80049f2:	2101      	movs	r1, #1
 80049f4:	fa01 f202 	lsl.w	r2, r1, r2
 80049f8:	4013      	ands	r3, r2
 80049fa:	2b00      	cmp	r3, #0
 80049fc:	d182      	bne.n	8004904 <HAL_RCC_OscConfig+0xc5c>
 80049fe:	4b88      	ldr	r3, [pc, #544]	@ (8004c20 <HAL_RCC_OscConfig+0xf78>)
 8004a00:	685b      	ldr	r3, [r3, #4]
 8004a02:	f423 1274 	bic.w	r2, r3, #3997696	@ 0x3d0000
 8004a06:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004a0a:	f5a3 73fe 	sub.w	r3, r3, #508	@ 0x1fc
 8004a0e:	681b      	ldr	r3, [r3, #0]
 8004a10:	6a59      	ldr	r1, [r3, #36]	@ 0x24
 8004a12:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004a16:	f5a3 73fe 	sub.w	r3, r3, #508	@ 0x1fc
 8004a1a:	681b      	ldr	r3, [r3, #0]
 8004a1c:	6a1b      	ldr	r3, [r3, #32]
 8004a1e:	430b      	orrs	r3, r1
 8004a20:	497f      	ldr	r1, [pc, #508]	@ (8004c20 <HAL_RCC_OscConfig+0xf78>)
 8004a22:	4313      	orrs	r3, r2
 8004a24:	604b      	str	r3, [r1, #4]
 8004a26:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004a2a:	f5a3 73d4 	sub.w	r3, r3, #424	@ 0x1a8
 8004a2e:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8004a32:	601a      	str	r2, [r3, #0]
 8004a34:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004a38:	f5a3 73d4 	sub.w	r3, r3, #424	@ 0x1a8
 8004a3c:	681b      	ldr	r3, [r3, #0]
 8004a3e:	fa93 f2a3 	rbit	r2, r3
 8004a42:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004a46:	f5a3 73d6 	sub.w	r3, r3, #428	@ 0x1ac
 8004a4a:	601a      	str	r2, [r3, #0]
 8004a4c:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004a50:	f5a3 73d6 	sub.w	r3, r3, #428	@ 0x1ac
 8004a54:	681b      	ldr	r3, [r3, #0]
 8004a56:	fab3 f383 	clz	r3, r3
 8004a5a:	b2db      	uxtb	r3, r3
 8004a5c:	f103 5384 	add.w	r3, r3, #276824064	@ 0x10800000
 8004a60:	f503 1384 	add.w	r3, r3, #1081344	@ 0x108000
 8004a64:	009b      	lsls	r3, r3, #2
 8004a66:	461a      	mov	r2, r3
 8004a68:	2301      	movs	r3, #1
 8004a6a:	6013      	str	r3, [r2, #0]
 8004a6c:	f7fd ffb0 	bl	80029d0 <HAL_GetTick>
 8004a70:	f8c7 01f8 	str.w	r0, [r7, #504]	@ 0x1f8
 8004a74:	e009      	b.n	8004a8a <HAL_RCC_OscConfig+0xde2>
 8004a76:	f7fd ffab 	bl	80029d0 <HAL_GetTick>
 8004a7a:	4602      	mov	r2, r0
 8004a7c:	f8d7 31f8 	ldr.w	r3, [r7, #504]	@ 0x1f8
 8004a80:	1ad3      	subs	r3, r2, r3
 8004a82:	2b02      	cmp	r3, #2
 8004a84:	d901      	bls.n	8004a8a <HAL_RCC_OscConfig+0xde2>
 8004a86:	2303      	movs	r3, #3
 8004a88:	e144      	b.n	8004d14 <HAL_RCC_OscConfig+0x106c>
 8004a8a:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004a8e:	f5a3 73d8 	sub.w	r3, r3, #432	@ 0x1b0
 8004a92:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8004a96:	601a      	str	r2, [r3, #0]
 8004a98:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004a9c:	f5a3 73d8 	sub.w	r3, r3, #432	@ 0x1b0
 8004aa0:	681b      	ldr	r3, [r3, #0]
 8004aa2:	fa93 f2a3 	rbit	r2, r3
 8004aa6:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004aaa:	f5a3 73da 	sub.w	r3, r3, #436	@ 0x1b4
 8004aae:	601a      	str	r2, [r3, #0]
 8004ab0:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004ab4:	f5a3 73da 	sub.w	r3, r3, #436	@ 0x1b4
 8004ab8:	681b      	ldr	r3, [r3, #0]
 8004aba:	fab3 f383 	clz	r3, r3
 8004abe:	b2db      	uxtb	r3, r3
 8004ac0:	095b      	lsrs	r3, r3, #5
 8004ac2:	b2db      	uxtb	r3, r3
 8004ac4:	f043 0301 	orr.w	r3, r3, #1
 8004ac8:	b2db      	uxtb	r3, r3
 8004aca:	2b01      	cmp	r3, #1
 8004acc:	d102      	bne.n	8004ad4 <HAL_RCC_OscConfig+0xe2c>
 8004ace:	4b54      	ldr	r3, [pc, #336]	@ (8004c20 <HAL_RCC_OscConfig+0xf78>)
 8004ad0:	681b      	ldr	r3, [r3, #0]
 8004ad2:	e027      	b.n	8004b24 <HAL_RCC_OscConfig+0xe7c>
 8004ad4:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004ad8:	f5a3 73dc 	sub.w	r3, r3, #440	@ 0x1b8
 8004adc:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8004ae0:	601a      	str	r2, [r3, #0]
 8004ae2:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004ae6:	f5a3 73dc 	sub.w	r3, r3, #440	@ 0x1b8
 8004aea:	681b      	ldr	r3, [r3, #0]
 8004aec:	fa93 f2a3 	rbit	r2, r3
 8004af0:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004af4:	f5a3 73de 	sub.w	r3, r3, #444	@ 0x1bc
 8004af8:	601a      	str	r2, [r3, #0]
 8004afa:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004afe:	f5a3 73e0 	sub.w	r3, r3, #448	@ 0x1c0
 8004b02:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8004b06:	601a      	str	r2, [r3, #0]
 8004b08:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004b0c:	f5a3 73e0 	sub.w	r3, r3, #448	@ 0x1c0
 8004b10:	681b      	ldr	r3, [r3, #0]
 8004b12:	fa93 f2a3 	rbit	r2, r3
 8004b16:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004b1a:	f5a3 73e2 	sub.w	r3, r3, #452	@ 0x1c4
 8004b1e:	601a      	str	r2, [r3, #0]
 8004b20:	4b3f      	ldr	r3, [pc, #252]	@ (8004c20 <HAL_RCC_OscConfig+0xf78>)
 8004b22:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004b24:	f507 7200 	add.w	r2, r7, #512	@ 0x200
 8004b28:	f5a2 72e4 	sub.w	r2, r2, #456	@ 0x1c8
 8004b2c:	f04f 7100 	mov.w	r1, #33554432	@ 0x2000000
 8004b30:	6011      	str	r1, [r2, #0]
 8004b32:	f507 7200 	add.w	r2, r7, #512	@ 0x200
 8004b36:	f5a2 72e4 	sub.w	r2, r2, #456	@ 0x1c8
 8004b3a:	6812      	ldr	r2, [r2, #0]
 8004b3c:	fa92 f1a2 	rbit	r1, r2
 8004b40:	f507 7200 	add.w	r2, r7, #512	@ 0x200
 8004b44:	f5a2 72e6 	sub.w	r2, r2, #460	@ 0x1cc
 8004b48:	6011      	str	r1, [r2, #0]
 8004b4a:	f507 7200 	add.w	r2, r7, #512	@ 0x200
 8004b4e:	f5a2 72e6 	sub.w	r2, r2, #460	@ 0x1cc
 8004b52:	6812      	ldr	r2, [r2, #0]
 8004b54:	fab2 f282 	clz	r2, r2
 8004b58:	b2d2      	uxtb	r2, r2
 8004b5a:	f042 0220 	orr.w	r2, r2, #32
 8004b5e:	b2d2      	uxtb	r2, r2
 8004b60:	f002 021f 	and.w	r2, r2, #31
 8004b64:	2101      	movs	r1, #1
 8004b66:	fa01 f202 	lsl.w	r2, r1, r2
 8004b6a:	4013      	ands	r3, r2
 8004b6c:	2b00      	cmp	r3, #0
 8004b6e:	d082      	beq.n	8004a76 <HAL_RCC_OscConfig+0xdce>
 8004b70:	e0cf      	b.n	8004d12 <HAL_RCC_OscConfig+0x106a>
 8004b72:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004b76:	f5a3 73e8 	sub.w	r3, r3, #464	@ 0x1d0
 8004b7a:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8004b7e:	601a      	str	r2, [r3, #0]
 8004b80:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004b84:	f5a3 73e8 	sub.w	r3, r3, #464	@ 0x1d0
 8004b88:	681b      	ldr	r3, [r3, #0]
 8004b8a:	fa93 f2a3 	rbit	r2, r3
 8004b8e:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004b92:	f5a3 73ea 	sub.w	r3, r3, #468	@ 0x1d4
 8004b96:	601a      	str	r2, [r3, #0]
 8004b98:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004b9c:	f5a3 73ea 	sub.w	r3, r3, #468	@ 0x1d4
 8004ba0:	681b      	ldr	r3, [r3, #0]
 8004ba2:	fab3 f383 	clz	r3, r3
 8004ba6:	b2db      	uxtb	r3, r3
 8004ba8:	f103 5384 	add.w	r3, r3, #276824064	@ 0x10800000
 8004bac:	f503 1384 	add.w	r3, r3, #1081344	@ 0x108000
 8004bb0:	009b      	lsls	r3, r3, #2
 8004bb2:	461a      	mov	r2, r3
 8004bb4:	2300      	movs	r3, #0
 8004bb6:	6013      	str	r3, [r2, #0]
 8004bb8:	f7fd ff0a 	bl	80029d0 <HAL_GetTick>
 8004bbc:	f8c7 01f8 	str.w	r0, [r7, #504]	@ 0x1f8
 8004bc0:	e009      	b.n	8004bd6 <HAL_RCC_OscConfig+0xf2e>
 8004bc2:	f7fd ff05 	bl	80029d0 <HAL_GetTick>
 8004bc6:	4602      	mov	r2, r0
 8004bc8:	f8d7 31f8 	ldr.w	r3, [r7, #504]	@ 0x1f8
 8004bcc:	1ad3      	subs	r3, r2, r3
 8004bce:	2b02      	cmp	r3, #2
 8004bd0:	d901      	bls.n	8004bd6 <HAL_RCC_OscConfig+0xf2e>
 8004bd2:	2303      	movs	r3, #3
 8004bd4:	e09e      	b.n	8004d14 <HAL_RCC_OscConfig+0x106c>
 8004bd6:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004bda:	f5a3 73ec 	sub.w	r3, r3, #472	@ 0x1d8
 8004bde:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8004be2:	601a      	str	r2, [r3, #0]
 8004be4:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004be8:	f5a3 73ec 	sub.w	r3, r3, #472	@ 0x1d8
 8004bec:	681b      	ldr	r3, [r3, #0]
 8004bee:	fa93 f2a3 	rbit	r2, r3
 8004bf2:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004bf6:	f5a3 73ee 	sub.w	r3, r3, #476	@ 0x1dc
 8004bfa:	601a      	str	r2, [r3, #0]
 8004bfc:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004c00:	f5a3 73ee 	sub.w	r3, r3, #476	@ 0x1dc
 8004c04:	681b      	ldr	r3, [r3, #0]
 8004c06:	fab3 f383 	clz	r3, r3
 8004c0a:	b2db      	uxtb	r3, r3
 8004c0c:	095b      	lsrs	r3, r3, #5
 8004c0e:	b2db      	uxtb	r3, r3
 8004c10:	f043 0301 	orr.w	r3, r3, #1
 8004c14:	b2db      	uxtb	r3, r3
 8004c16:	2b01      	cmp	r3, #1
 8004c18:	d104      	bne.n	8004c24 <HAL_RCC_OscConfig+0xf7c>
 8004c1a:	4b01      	ldr	r3, [pc, #4]	@ (8004c20 <HAL_RCC_OscConfig+0xf78>)
 8004c1c:	681b      	ldr	r3, [r3, #0]
 8004c1e:	e029      	b.n	8004c74 <HAL_RCC_OscConfig+0xfcc>
 8004c20:	40021000 	.word	0x40021000
 8004c24:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004c28:	f5a3 73f0 	sub.w	r3, r3, #480	@ 0x1e0
 8004c2c:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8004c30:	601a      	str	r2, [r3, #0]
 8004c32:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004c36:	f5a3 73f0 	sub.w	r3, r3, #480	@ 0x1e0
 8004c3a:	681b      	ldr	r3, [r3, #0]
 8004c3c:	fa93 f2a3 	rbit	r2, r3
 8004c40:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004c44:	f5a3 73f2 	sub.w	r3, r3, #484	@ 0x1e4
 8004c48:	601a      	str	r2, [r3, #0]
 8004c4a:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004c4e:	f5a3 73f4 	sub.w	r3, r3, #488	@ 0x1e8
 8004c52:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8004c56:	601a      	str	r2, [r3, #0]
 8004c58:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004c5c:	f5a3 73f4 	sub.w	r3, r3, #488	@ 0x1e8
 8004c60:	681b      	ldr	r3, [r3, #0]
 8004c62:	fa93 f2a3 	rbit	r2, r3
 8004c66:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004c6a:	f5a3 73f6 	sub.w	r3, r3, #492	@ 0x1ec
 8004c6e:	601a      	str	r2, [r3, #0]
 8004c70:	4b2b      	ldr	r3, [pc, #172]	@ (8004d20 <HAL_RCC_OscConfig+0x1078>)
 8004c72:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004c74:	f507 7200 	add.w	r2, r7, #512	@ 0x200
 8004c78:	f5a2 72f8 	sub.w	r2, r2, #496	@ 0x1f0
 8004c7c:	f04f 7100 	mov.w	r1, #33554432	@ 0x2000000
 8004c80:	6011      	str	r1, [r2, #0]
 8004c82:	f507 7200 	add.w	r2, r7, #512	@ 0x200
 8004c86:	f5a2 72f8 	sub.w	r2, r2, #496	@ 0x1f0
 8004c8a:	6812      	ldr	r2, [r2, #0]
 8004c8c:	fa92 f1a2 	rbit	r1, r2
 8004c90:	f507 7200 	add.w	r2, r7, #512	@ 0x200
 8004c94:	f5a2 72fa 	sub.w	r2, r2, #500	@ 0x1f4
 8004c98:	6011      	str	r1, [r2, #0]
 8004c9a:	f507 7200 	add.w	r2, r7, #512	@ 0x200
 8004c9e:	f5a2 72fa 	sub.w	r2, r2, #500	@ 0x1f4
 8004ca2:	6812      	ldr	r2, [r2, #0]
 8004ca4:	fab2 f282 	clz	r2, r2
 8004ca8:	b2d2      	uxtb	r2, r2
 8004caa:	f042 0220 	orr.w	r2, r2, #32
 8004cae:	b2d2      	uxtb	r2, r2
 8004cb0:	f002 021f 	and.w	r2, r2, #31
 8004cb4:	2101      	movs	r1, #1
 8004cb6:	fa01 f202 	lsl.w	r2, r1, r2
 8004cba:	4013      	ands	r3, r2
 8004cbc:	2b00      	cmp	r3, #0
 8004cbe:	d180      	bne.n	8004bc2 <HAL_RCC_OscConfig+0xf1a>
 8004cc0:	e027      	b.n	8004d12 <HAL_RCC_OscConfig+0x106a>
 8004cc2:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004cc6:	f5a3 73fe 	sub.w	r3, r3, #508	@ 0x1fc
 8004cca:	681b      	ldr	r3, [r3, #0]
 8004ccc:	69db      	ldr	r3, [r3, #28]
 8004cce:	2b01      	cmp	r3, #1
 8004cd0:	d101      	bne.n	8004cd6 <HAL_RCC_OscConfig+0x102e>
 8004cd2:	2301      	movs	r3, #1
 8004cd4:	e01e      	b.n	8004d14 <HAL_RCC_OscConfig+0x106c>
 8004cd6:	4b12      	ldr	r3, [pc, #72]	@ (8004d20 <HAL_RCC_OscConfig+0x1078>)
 8004cd8:	685b      	ldr	r3, [r3, #4]
 8004cda:	f8c7 31f4 	str.w	r3, [r7, #500]	@ 0x1f4
 8004cde:	f8d7 31f4 	ldr.w	r3, [r7, #500]	@ 0x1f4
 8004ce2:	f403 3280 	and.w	r2, r3, #65536	@ 0x10000
 8004ce6:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004cea:	f5a3 73fe 	sub.w	r3, r3, #508	@ 0x1fc
 8004cee:	681b      	ldr	r3, [r3, #0]
 8004cf0:	6a1b      	ldr	r3, [r3, #32]
 8004cf2:	429a      	cmp	r2, r3
 8004cf4:	d10b      	bne.n	8004d0e <HAL_RCC_OscConfig+0x1066>
 8004cf6:	f8d7 31f4 	ldr.w	r3, [r7, #500]	@ 0x1f4
 8004cfa:	f403 1270 	and.w	r2, r3, #3932160	@ 0x3c0000
 8004cfe:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8004d02:	f5a3 73fe 	sub.w	r3, r3, #508	@ 0x1fc
 8004d06:	681b      	ldr	r3, [r3, #0]
 8004d08:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004d0a:	429a      	cmp	r2, r3
 8004d0c:	d001      	beq.n	8004d12 <HAL_RCC_OscConfig+0x106a>
 8004d0e:	2301      	movs	r3, #1
 8004d10:	e000      	b.n	8004d14 <HAL_RCC_OscConfig+0x106c>
 8004d12:	2300      	movs	r3, #0
 8004d14:	4618      	mov	r0, r3
 8004d16:	f507 7700 	add.w	r7, r7, #512	@ 0x200
 8004d1a:	46bd      	mov	sp, r7
 8004d1c:	bd80      	pop	{r7, pc}
 8004d1e:	bf00      	nop
 8004d20:	40021000 	.word	0x40021000

08004d24 <HAL_RCC_ClockConfig>:
 8004d24:	b580      	push	{r7, lr}
 8004d26:	b09e      	sub	sp, #120	@ 0x78
 8004d28:	af00      	add	r7, sp, #0
 8004d2a:	6078      	str	r0, [r7, #4]
 8004d2c:	6039      	str	r1, [r7, #0]
 8004d2e:	2300      	movs	r3, #0
 8004d30:	677b      	str	r3, [r7, #116]	@ 0x74
 8004d32:	687b      	ldr	r3, [r7, #4]
 8004d34:	2b00      	cmp	r3, #0
 8004d36:	d101      	bne.n	8004d3c <HAL_RCC_ClockConfig+0x18>
 8004d38:	2301      	movs	r3, #1
 8004d3a:	e162      	b.n	8005002 <HAL_RCC_ClockConfig+0x2de>
 8004d3c:	4b90      	ldr	r3, [pc, #576]	@ (8004f80 <HAL_RCC_ClockConfig+0x25c>)
 8004d3e:	681b      	ldr	r3, [r3, #0]
 8004d40:	f003 0307 	and.w	r3, r3, #7
 8004d44:	683a      	ldr	r2, [r7, #0]
 8004d46:	429a      	cmp	r2, r3
 8004d48:	d910      	bls.n	8004d6c <HAL_RCC_ClockConfig+0x48>
 8004d4a:	4b8d      	ldr	r3, [pc, #564]	@ (8004f80 <HAL_RCC_ClockConfig+0x25c>)
 8004d4c:	681b      	ldr	r3, [r3, #0]
 8004d4e:	f023 0207 	bic.w	r2, r3, #7
 8004d52:	498b      	ldr	r1, [pc, #556]	@ (8004f80 <HAL_RCC_ClockConfig+0x25c>)
 8004d54:	683b      	ldr	r3, [r7, #0]
 8004d56:	4313      	orrs	r3, r2
 8004d58:	600b      	str	r3, [r1, #0]
 8004d5a:	4b89      	ldr	r3, [pc, #548]	@ (8004f80 <HAL_RCC_ClockConfig+0x25c>)
 8004d5c:	681b      	ldr	r3, [r3, #0]
 8004d5e:	f003 0307 	and.w	r3, r3, #7
 8004d62:	683a      	ldr	r2, [r7, #0]
 8004d64:	429a      	cmp	r2, r3
 8004d66:	d001      	beq.n	8004d6c <HAL_RCC_ClockConfig+0x48>
 8004d68:	2301      	movs	r3, #1
 8004d6a:	e14a      	b.n	8005002 <HAL_RCC_ClockConfig+0x2de>
 8004d6c:	687b      	ldr	r3, [r7, #4]
 8004d6e:	681b      	ldr	r3, [r3, #0]
 8004d70:	f003 0302 	and.w	r3, r3, #2
 8004d74:	2b00      	cmp	r3, #0
 8004d76:	d008      	beq.n	8004d8a <HAL_RCC_ClockConfig+0x66>
 8004d78:	4b82      	ldr	r3, [pc, #520]	@ (8004f84 <HAL_RCC_ClockConfig+0x260>)
 8004d7a:	685b      	ldr	r3, [r3, #4]
 8004d7c:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 8004d80:	687b      	ldr	r3, [r7, #4]
 8004d82:	689b      	ldr	r3, [r3, #8]
 8004d84:	497f      	ldr	r1, [pc, #508]	@ (8004f84 <HAL_RCC_ClockConfig+0x260>)
 8004d86:	4313      	orrs	r3, r2
 8004d88:	604b      	str	r3, [r1, #4]
 8004d8a:	687b      	ldr	r3, [r7, #4]
 8004d8c:	681b      	ldr	r3, [r3, #0]
 8004d8e:	f003 0301 	and.w	r3, r3, #1
 8004d92:	2b00      	cmp	r3, #0
 8004d94:	f000 80dc 	beq.w	8004f50 <HAL_RCC_ClockConfig+0x22c>
 8004d98:	687b      	ldr	r3, [r7, #4]
 8004d9a:	685b      	ldr	r3, [r3, #4]
 8004d9c:	2b01      	cmp	r3, #1
 8004d9e:	d13c      	bne.n	8004e1a <HAL_RCC_ClockConfig+0xf6>
 8004da0:	f44f 3300 	mov.w	r3, #131072	@ 0x20000
 8004da4:	673b      	str	r3, [r7, #112]	@ 0x70
 8004da6:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 8004da8:	fa93 f3a3 	rbit	r3, r3
 8004dac:	66fb      	str	r3, [r7, #108]	@ 0x6c
 8004dae:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8004db0:	fab3 f383 	clz	r3, r3
 8004db4:	b2db      	uxtb	r3, r3
 8004db6:	095b      	lsrs	r3, r3, #5
 8004db8:	b2db      	uxtb	r3, r3
 8004dba:	f043 0301 	orr.w	r3, r3, #1
 8004dbe:	b2db      	uxtb	r3, r3
 8004dc0:	2b01      	cmp	r3, #1
 8004dc2:	d102      	bne.n	8004dca <HAL_RCC_ClockConfig+0xa6>
 8004dc4:	4b6f      	ldr	r3, [pc, #444]	@ (8004f84 <HAL_RCC_ClockConfig+0x260>)
 8004dc6:	681b      	ldr	r3, [r3, #0]
 8004dc8:	e00f      	b.n	8004dea <HAL_RCC_ClockConfig+0xc6>
 8004dca:	f44f 3300 	mov.w	r3, #131072	@ 0x20000
 8004dce:	66bb      	str	r3, [r7, #104]	@ 0x68
 8004dd0:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 8004dd2:	fa93 f3a3 	rbit	r3, r3
 8004dd6:	667b      	str	r3, [r7, #100]	@ 0x64
 8004dd8:	f44f 3300 	mov.w	r3, #131072	@ 0x20000
 8004ddc:	663b      	str	r3, [r7, #96]	@ 0x60
 8004dde:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 8004de0:	fa93 f3a3 	rbit	r3, r3
 8004de4:	65fb      	str	r3, [r7, #92]	@ 0x5c
 8004de6:	4b67      	ldr	r3, [pc, #412]	@ (8004f84 <HAL_RCC_ClockConfig+0x260>)
 8004de8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004dea:	f44f 3200 	mov.w	r2, #131072	@ 0x20000
 8004dee:	65ba      	str	r2, [r7, #88]	@ 0x58
 8004df0:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 8004df2:	fa92 f2a2 	rbit	r2, r2
 8004df6:	657a      	str	r2, [r7, #84]	@ 0x54
 8004df8:	6d7a      	ldr	r2, [r7, #84]	@ 0x54
 8004dfa:	fab2 f282 	clz	r2, r2
 8004dfe:	b2d2      	uxtb	r2, r2
 8004e00:	f042 0220 	orr.w	r2, r2, #32
 8004e04:	b2d2      	uxtb	r2, r2
 8004e06:	f002 021f 	and.w	r2, r2, #31
 8004e0a:	2101      	movs	r1, #1
 8004e0c:	fa01 f202 	lsl.w	r2, r1, r2
 8004e10:	4013      	ands	r3, r2
 8004e12:	2b00      	cmp	r3, #0
 8004e14:	d17b      	bne.n	8004f0e <HAL_RCC_ClockConfig+0x1ea>
 8004e16:	2301      	movs	r3, #1
 8004e18:	e0f3      	b.n	8005002 <HAL_RCC_ClockConfig+0x2de>
 8004e1a:	687b      	ldr	r3, [r7, #4]
 8004e1c:	685b      	ldr	r3, [r3, #4]
 8004e1e:	2b02      	cmp	r3, #2
 8004e20:	d13c      	bne.n	8004e9c <HAL_RCC_ClockConfig+0x178>
 8004e22:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
 8004e26:	653b      	str	r3, [r7, #80]	@ 0x50
 8004e28:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 8004e2a:	fa93 f3a3 	rbit	r3, r3
 8004e2e:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8004e30:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8004e32:	fab3 f383 	clz	r3, r3
 8004e36:	b2db      	uxtb	r3, r3
 8004e38:	095b      	lsrs	r3, r3, #5
 8004e3a:	b2db      	uxtb	r3, r3
 8004e3c:	f043 0301 	orr.w	r3, r3, #1
 8004e40:	b2db      	uxtb	r3, r3
 8004e42:	2b01      	cmp	r3, #1
 8004e44:	d102      	bne.n	8004e4c <HAL_RCC_ClockConfig+0x128>
 8004e46:	4b4f      	ldr	r3, [pc, #316]	@ (8004f84 <HAL_RCC_ClockConfig+0x260>)
 8004e48:	681b      	ldr	r3, [r3, #0]
 8004e4a:	e00f      	b.n	8004e6c <HAL_RCC_ClockConfig+0x148>
 8004e4c:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
 8004e50:	64bb      	str	r3, [r7, #72]	@ 0x48
 8004e52:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8004e54:	fa93 f3a3 	rbit	r3, r3
 8004e58:	647b      	str	r3, [r7, #68]	@ 0x44
 8004e5a:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
 8004e5e:	643b      	str	r3, [r7, #64]	@ 0x40
 8004e60:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 8004e62:	fa93 f3a3 	rbit	r3, r3
 8004e66:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8004e68:	4b46      	ldr	r3, [pc, #280]	@ (8004f84 <HAL_RCC_ClockConfig+0x260>)
 8004e6a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004e6c:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8004e70:	63ba      	str	r2, [r7, #56]	@ 0x38
 8004e72:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 8004e74:	fa92 f2a2 	rbit	r2, r2
 8004e78:	637a      	str	r2, [r7, #52]	@ 0x34
 8004e7a:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 8004e7c:	fab2 f282 	clz	r2, r2
 8004e80:	b2d2      	uxtb	r2, r2
 8004e82:	f042 0220 	orr.w	r2, r2, #32
 8004e86:	b2d2      	uxtb	r2, r2
 8004e88:	f002 021f 	and.w	r2, r2, #31
 8004e8c:	2101      	movs	r1, #1
 8004e8e:	fa01 f202 	lsl.w	r2, r1, r2
 8004e92:	4013      	ands	r3, r2
 8004e94:	2b00      	cmp	r3, #0
 8004e96:	d13a      	bne.n	8004f0e <HAL_RCC_ClockConfig+0x1ea>
 8004e98:	2301      	movs	r3, #1
 8004e9a:	e0b2      	b.n	8005002 <HAL_RCC_ClockConfig+0x2de>
 8004e9c:	2302      	movs	r3, #2
 8004e9e:	633b      	str	r3, [r7, #48]	@ 0x30
 8004ea0:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004ea2:	fa93 f3a3 	rbit	r3, r3
 8004ea6:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8004ea8:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8004eaa:	fab3 f383 	clz	r3, r3
 8004eae:	b2db      	uxtb	r3, r3
 8004eb0:	095b      	lsrs	r3, r3, #5
 8004eb2:	b2db      	uxtb	r3, r3
 8004eb4:	f043 0301 	orr.w	r3, r3, #1
 8004eb8:	b2db      	uxtb	r3, r3
 8004eba:	2b01      	cmp	r3, #1
 8004ebc:	d102      	bne.n	8004ec4 <HAL_RCC_ClockConfig+0x1a0>
 8004ebe:	4b31      	ldr	r3, [pc, #196]	@ (8004f84 <HAL_RCC_ClockConfig+0x260>)
 8004ec0:	681b      	ldr	r3, [r3, #0]
 8004ec2:	e00d      	b.n	8004ee0 <HAL_RCC_ClockConfig+0x1bc>
 8004ec4:	2302      	movs	r3, #2
 8004ec6:	62bb      	str	r3, [r7, #40]	@ 0x28
 8004ec8:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8004eca:	fa93 f3a3 	rbit	r3, r3
 8004ece:	627b      	str	r3, [r7, #36]	@ 0x24
 8004ed0:	2302      	movs	r3, #2
 8004ed2:	623b      	str	r3, [r7, #32]
 8004ed4:	6a3b      	ldr	r3, [r7, #32]
 8004ed6:	fa93 f3a3 	rbit	r3, r3
 8004eda:	61fb      	str	r3, [r7, #28]
 8004edc:	4b29      	ldr	r3, [pc, #164]	@ (8004f84 <HAL_RCC_ClockConfig+0x260>)
 8004ede:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004ee0:	2202      	movs	r2, #2
 8004ee2:	61ba      	str	r2, [r7, #24]
 8004ee4:	69ba      	ldr	r2, [r7, #24]
 8004ee6:	fa92 f2a2 	rbit	r2, r2
 8004eea:	617a      	str	r2, [r7, #20]
 8004eec:	697a      	ldr	r2, [r7, #20]
 8004eee:	fab2 f282 	clz	r2, r2
 8004ef2:	b2d2      	uxtb	r2, r2
 8004ef4:	f042 0220 	orr.w	r2, r2, #32
 8004ef8:	b2d2      	uxtb	r2, r2
 8004efa:	f002 021f 	and.w	r2, r2, #31
 8004efe:	2101      	movs	r1, #1
 8004f00:	fa01 f202 	lsl.w	r2, r1, r2
 8004f04:	4013      	ands	r3, r2
 8004f06:	2b00      	cmp	r3, #0
 8004f08:	d101      	bne.n	8004f0e <HAL_RCC_ClockConfig+0x1ea>
 8004f0a:	2301      	movs	r3, #1
 8004f0c:	e079      	b.n	8005002 <HAL_RCC_ClockConfig+0x2de>
 8004f0e:	4b1d      	ldr	r3, [pc, #116]	@ (8004f84 <HAL_RCC_ClockConfig+0x260>)
 8004f10:	685b      	ldr	r3, [r3, #4]
 8004f12:	f023 0203 	bic.w	r2, r3, #3
 8004f16:	687b      	ldr	r3, [r7, #4]
 8004f18:	685b      	ldr	r3, [r3, #4]
 8004f1a:	491a      	ldr	r1, [pc, #104]	@ (8004f84 <HAL_RCC_ClockConfig+0x260>)
 8004f1c:	4313      	orrs	r3, r2
 8004f1e:	604b      	str	r3, [r1, #4]
 8004f20:	f7fd fd56 	bl	80029d0 <HAL_GetTick>
 8004f24:	6778      	str	r0, [r7, #116]	@ 0x74
 8004f26:	e00a      	b.n	8004f3e <HAL_RCC_ClockConfig+0x21a>
 8004f28:	f7fd fd52 	bl	80029d0 <HAL_GetTick>
 8004f2c:	4602      	mov	r2, r0
 8004f2e:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 8004f30:	1ad3      	subs	r3, r2, r3
 8004f32:	f241 3288 	movw	r2, #5000	@ 0x1388
 8004f36:	4293      	cmp	r3, r2
 8004f38:	d901      	bls.n	8004f3e <HAL_RCC_ClockConfig+0x21a>
 8004f3a:	2303      	movs	r3, #3
 8004f3c:	e061      	b.n	8005002 <HAL_RCC_ClockConfig+0x2de>
 8004f3e:	4b11      	ldr	r3, [pc, #68]	@ (8004f84 <HAL_RCC_ClockConfig+0x260>)
 8004f40:	685b      	ldr	r3, [r3, #4]
 8004f42:	f003 020c 	and.w	r2, r3, #12
 8004f46:	687b      	ldr	r3, [r7, #4]
 8004f48:	685b      	ldr	r3, [r3, #4]
 8004f4a:	009b      	lsls	r3, r3, #2
 8004f4c:	429a      	cmp	r2, r3
 8004f4e:	d1eb      	bne.n	8004f28 <HAL_RCC_ClockConfig+0x204>
 8004f50:	4b0b      	ldr	r3, [pc, #44]	@ (8004f80 <HAL_RCC_ClockConfig+0x25c>)
 8004f52:	681b      	ldr	r3, [r3, #0]
 8004f54:	f003 0307 	and.w	r3, r3, #7
 8004f58:	683a      	ldr	r2, [r7, #0]
 8004f5a:	429a      	cmp	r2, r3
 8004f5c:	d214      	bcs.n	8004f88 <HAL_RCC_ClockConfig+0x264>
 8004f5e:	4b08      	ldr	r3, [pc, #32]	@ (8004f80 <HAL_RCC_ClockConfig+0x25c>)
 8004f60:	681b      	ldr	r3, [r3, #0]
 8004f62:	f023 0207 	bic.w	r2, r3, #7
 8004f66:	4906      	ldr	r1, [pc, #24]	@ (8004f80 <HAL_RCC_ClockConfig+0x25c>)
 8004f68:	683b      	ldr	r3, [r7, #0]
 8004f6a:	4313      	orrs	r3, r2
 8004f6c:	600b      	str	r3, [r1, #0]
 8004f6e:	4b04      	ldr	r3, [pc, #16]	@ (8004f80 <HAL_RCC_ClockConfig+0x25c>)
 8004f70:	681b      	ldr	r3, [r3, #0]
 8004f72:	f003 0307 	and.w	r3, r3, #7
 8004f76:	683a      	ldr	r2, [r7, #0]
 8004f78:	429a      	cmp	r2, r3
 8004f7a:	d005      	beq.n	8004f88 <HAL_RCC_ClockConfig+0x264>
 8004f7c:	2301      	movs	r3, #1
 8004f7e:	e040      	b.n	8005002 <HAL_RCC_ClockConfig+0x2de>
 8004f80:	40022000 	.word	0x40022000
 8004f84:	40021000 	.word	0x40021000
 8004f88:	687b      	ldr	r3, [r7, #4]
 8004f8a:	681b      	ldr	r3, [r3, #0]
 8004f8c:	f003 0304 	and.w	r3, r3, #4
 8004f90:	2b00      	cmp	r3, #0
 8004f92:	d008      	beq.n	8004fa6 <HAL_RCC_ClockConfig+0x282>
 8004f94:	4b1d      	ldr	r3, [pc, #116]	@ (800500c <HAL_RCC_ClockConfig+0x2e8>)
 8004f96:	685b      	ldr	r3, [r3, #4]
 8004f98:	f423 62e0 	bic.w	r2, r3, #1792	@ 0x700
 8004f9c:	687b      	ldr	r3, [r7, #4]
 8004f9e:	68db      	ldr	r3, [r3, #12]
 8004fa0:	491a      	ldr	r1, [pc, #104]	@ (800500c <HAL_RCC_ClockConfig+0x2e8>)
 8004fa2:	4313      	orrs	r3, r2
 8004fa4:	604b      	str	r3, [r1, #4]
 8004fa6:	687b      	ldr	r3, [r7, #4]
 8004fa8:	681b      	ldr	r3, [r3, #0]
 8004faa:	f003 0308 	and.w	r3, r3, #8
 8004fae:	2b00      	cmp	r3, #0
 8004fb0:	d009      	beq.n	8004fc6 <HAL_RCC_ClockConfig+0x2a2>
 8004fb2:	4b16      	ldr	r3, [pc, #88]	@ (800500c <HAL_RCC_ClockConfig+0x2e8>)
 8004fb4:	685b      	ldr	r3, [r3, #4]
 8004fb6:	f423 5260 	bic.w	r2, r3, #14336	@ 0x3800
 8004fba:	687b      	ldr	r3, [r7, #4]
 8004fbc:	691b      	ldr	r3, [r3, #16]
 8004fbe:	00db      	lsls	r3, r3, #3
 8004fc0:	4912      	ldr	r1, [pc, #72]	@ (800500c <HAL_RCC_ClockConfig+0x2e8>)
 8004fc2:	4313      	orrs	r3, r2
 8004fc4:	604b      	str	r3, [r1, #4]
 8004fc6:	f000 f829 	bl	800501c <HAL_RCC_GetSysClockFreq>
 8004fca:	4601      	mov	r1, r0
 8004fcc:	4b0f      	ldr	r3, [pc, #60]	@ (800500c <HAL_RCC_ClockConfig+0x2e8>)
 8004fce:	685b      	ldr	r3, [r3, #4]
 8004fd0:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 8004fd4:	22f0      	movs	r2, #240	@ 0xf0
 8004fd6:	613a      	str	r2, [r7, #16]
 8004fd8:	693a      	ldr	r2, [r7, #16]
 8004fda:	fa92 f2a2 	rbit	r2, r2
 8004fde:	60fa      	str	r2, [r7, #12]
 8004fe0:	68fa      	ldr	r2, [r7, #12]
 8004fe2:	fab2 f282 	clz	r2, r2
 8004fe6:	b2d2      	uxtb	r2, r2
 8004fe8:	40d3      	lsrs	r3, r2
 8004fea:	4a09      	ldr	r2, [pc, #36]	@ (8005010 <HAL_RCC_ClockConfig+0x2ec>)
 8004fec:	5cd3      	ldrb	r3, [r2, r3]
 8004fee:	fa21 f303 	lsr.w	r3, r1, r3
 8004ff2:	4a08      	ldr	r2, [pc, #32]	@ (8005014 <HAL_RCC_ClockConfig+0x2f0>)
 8004ff4:	6013      	str	r3, [r2, #0]
 8004ff6:	4b08      	ldr	r3, [pc, #32]	@ (8005018 <HAL_RCC_ClockConfig+0x2f4>)
 8004ff8:	681b      	ldr	r3, [r3, #0]
 8004ffa:	4618      	mov	r0, r3
 8004ffc:	f7fd fca4 	bl	8002948 <HAL_InitTick>
 8005000:	2300      	movs	r3, #0
 8005002:	4618      	mov	r0, r3
 8005004:	3778      	adds	r7, #120	@ 0x78
 8005006:	46bd      	mov	sp, r7
 8005008:	bd80      	pop	{r7, pc}
 800500a:	bf00      	nop
 800500c:	40021000 	.word	0x40021000
 8005010:	0800ad30 	.word	0x0800ad30
 8005014:	20000000 	.word	0x20000000
 8005018:	20000004 	.word	0x20000004

0800501c <HAL_RCC_GetSysClockFreq>:
 800501c:	b480      	push	{r7}
 800501e:	b087      	sub	sp, #28
 8005020:	af00      	add	r7, sp, #0
 8005022:	2300      	movs	r3, #0
 8005024:	60fb      	str	r3, [r7, #12]
 8005026:	2300      	movs	r3, #0
 8005028:	60bb      	str	r3, [r7, #8]
 800502a:	2300      	movs	r3, #0
 800502c:	617b      	str	r3, [r7, #20]
 800502e:	2300      	movs	r3, #0
 8005030:	607b      	str	r3, [r7, #4]
 8005032:	2300      	movs	r3, #0
 8005034:	613b      	str	r3, [r7, #16]
 8005036:	4b1e      	ldr	r3, [pc, #120]	@ (80050b0 <HAL_RCC_GetSysClockFreq+0x94>)
 8005038:	685b      	ldr	r3, [r3, #4]
 800503a:	60fb      	str	r3, [r7, #12]
 800503c:	68fb      	ldr	r3, [r7, #12]
 800503e:	f003 030c 	and.w	r3, r3, #12
 8005042:	2b04      	cmp	r3, #4
 8005044:	d002      	beq.n	800504c <HAL_RCC_GetSysClockFreq+0x30>
 8005046:	2b08      	cmp	r3, #8
 8005048:	d003      	beq.n	8005052 <HAL_RCC_GetSysClockFreq+0x36>
 800504a:	e026      	b.n	800509a <HAL_RCC_GetSysClockFreq+0x7e>
 800504c:	4b19      	ldr	r3, [pc, #100]	@ (80050b4 <HAL_RCC_GetSysClockFreq+0x98>)
 800504e:	613b      	str	r3, [r7, #16]
 8005050:	e026      	b.n	80050a0 <HAL_RCC_GetSysClockFreq+0x84>
 8005052:	68fb      	ldr	r3, [r7, #12]
 8005054:	0c9b      	lsrs	r3, r3, #18
 8005056:	f003 030f 	and.w	r3, r3, #15
 800505a:	4a17      	ldr	r2, [pc, #92]	@ (80050b8 <HAL_RCC_GetSysClockFreq+0x9c>)
 800505c:	5cd3      	ldrb	r3, [r2, r3]
 800505e:	607b      	str	r3, [r7, #4]
 8005060:	4b13      	ldr	r3, [pc, #76]	@ (80050b0 <HAL_RCC_GetSysClockFreq+0x94>)
 8005062:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8005064:	f003 030f 	and.w	r3, r3, #15
 8005068:	4a14      	ldr	r2, [pc, #80]	@ (80050bc <HAL_RCC_GetSysClockFreq+0xa0>)
 800506a:	5cd3      	ldrb	r3, [r2, r3]
 800506c:	60bb      	str	r3, [r7, #8]
 800506e:	68fb      	ldr	r3, [r7, #12]
 8005070:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8005074:	2b00      	cmp	r3, #0
 8005076:	d008      	beq.n	800508a <HAL_RCC_GetSysClockFreq+0x6e>
 8005078:	4a0e      	ldr	r2, [pc, #56]	@ (80050b4 <HAL_RCC_GetSysClockFreq+0x98>)
 800507a:	68bb      	ldr	r3, [r7, #8]
 800507c:	fbb2 f2f3 	udiv	r2, r2, r3
 8005080:	687b      	ldr	r3, [r7, #4]
 8005082:	fb02 f303 	mul.w	r3, r2, r3
 8005086:	617b      	str	r3, [r7, #20]
 8005088:	e004      	b.n	8005094 <HAL_RCC_GetSysClockFreq+0x78>
 800508a:	687b      	ldr	r3, [r7, #4]
 800508c:	4a0c      	ldr	r2, [pc, #48]	@ (80050c0 <HAL_RCC_GetSysClockFreq+0xa4>)
 800508e:	fb02 f303 	mul.w	r3, r2, r3
 8005092:	617b      	str	r3, [r7, #20]
 8005094:	697b      	ldr	r3, [r7, #20]
 8005096:	613b      	str	r3, [r7, #16]
 8005098:	e002      	b.n	80050a0 <HAL_RCC_GetSysClockFreq+0x84>
 800509a:	4b06      	ldr	r3, [pc, #24]	@ (80050b4 <HAL_RCC_GetSysClockFreq+0x98>)
 800509c:	613b      	str	r3, [r7, #16]
 800509e:	bf00      	nop
 80050a0:	693b      	ldr	r3, [r7, #16]
 80050a2:	4618      	mov	r0, r3
 80050a4:	371c      	adds	r7, #28
 80050a6:	46bd      	mov	sp, r7
 80050a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80050ac:	4770      	bx	lr
 80050ae:	bf00      	nop
 80050b0:	40021000 	.word	0x40021000
 80050b4:	007a1200 	.word	0x007a1200
 80050b8:	0800ad48 	.word	0x0800ad48
 80050bc:	0800ad58 	.word	0x0800ad58
 80050c0:	003d0900 	.word	0x003d0900

080050c4 <HAL_RCC_GetHCLKFreq>:
 80050c4:	b480      	push	{r7}
 80050c6:	af00      	add	r7, sp, #0
 80050c8:	4b03      	ldr	r3, [pc, #12]	@ (80050d8 <HAL_RCC_GetHCLKFreq+0x14>)
 80050ca:	681b      	ldr	r3, [r3, #0]
 80050cc:	4618      	mov	r0, r3
 80050ce:	46bd      	mov	sp, r7
 80050d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80050d4:	4770      	bx	lr
 80050d6:	bf00      	nop
 80050d8:	20000000 	.word	0x20000000

080050dc <HAL_RCC_GetPCLK1Freq>:
 80050dc:	b580      	push	{r7, lr}
 80050de:	b082      	sub	sp, #8
 80050e0:	af00      	add	r7, sp, #0
 80050e2:	f7ff ffef 	bl	80050c4 <HAL_RCC_GetHCLKFreq>
 80050e6:	4601      	mov	r1, r0
 80050e8:	4b0b      	ldr	r3, [pc, #44]	@ (8005118 <HAL_RCC_GetPCLK1Freq+0x3c>)
 80050ea:	685b      	ldr	r3, [r3, #4]
 80050ec:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
 80050f0:	f44f 62e0 	mov.w	r2, #1792	@ 0x700
 80050f4:	607a      	str	r2, [r7, #4]
 80050f6:	687a      	ldr	r2, [r7, #4]
 80050f8:	fa92 f2a2 	rbit	r2, r2
 80050fc:	603a      	str	r2, [r7, #0]
 80050fe:	683a      	ldr	r2, [r7, #0]
 8005100:	fab2 f282 	clz	r2, r2
 8005104:	b2d2      	uxtb	r2, r2
 8005106:	40d3      	lsrs	r3, r2
 8005108:	4a04      	ldr	r2, [pc, #16]	@ (800511c <HAL_RCC_GetPCLK1Freq+0x40>)
 800510a:	5cd3      	ldrb	r3, [r2, r3]
 800510c:	fa21 f303 	lsr.w	r3, r1, r3
 8005110:	4618      	mov	r0, r3
 8005112:	3708      	adds	r7, #8
 8005114:	46bd      	mov	sp, r7
 8005116:	bd80      	pop	{r7, pc}
 8005118:	40021000 	.word	0x40021000
 800511c:	0800ad40 	.word	0x0800ad40

08005120 <HAL_RCC_GetPCLK2Freq>:
 8005120:	b580      	push	{r7, lr}
 8005122:	b082      	sub	sp, #8
 8005124:	af00      	add	r7, sp, #0
 8005126:	f7ff ffcd 	bl	80050c4 <HAL_RCC_GetHCLKFreq>
 800512a:	4601      	mov	r1, r0
 800512c:	4b0b      	ldr	r3, [pc, #44]	@ (800515c <HAL_RCC_GetPCLK2Freq+0x3c>)
 800512e:	685b      	ldr	r3, [r3, #4]
 8005130:	f403 5360 	and.w	r3, r3, #14336	@ 0x3800
 8005134:	f44f 5260 	mov.w	r2, #14336	@ 0x3800
 8005138:	607a      	str	r2, [r7, #4]
 800513a:	687a      	ldr	r2, [r7, #4]
 800513c:	fa92 f2a2 	rbit	r2, r2
 8005140:	603a      	str	r2, [r7, #0]
 8005142:	683a      	ldr	r2, [r7, #0]
 8005144:	fab2 f282 	clz	r2, r2
 8005148:	b2d2      	uxtb	r2, r2
 800514a:	40d3      	lsrs	r3, r2
 800514c:	4a04      	ldr	r2, [pc, #16]	@ (8005160 <HAL_RCC_GetPCLK2Freq+0x40>)
 800514e:	5cd3      	ldrb	r3, [r2, r3]
 8005150:	fa21 f303 	lsr.w	r3, r1, r3
 8005154:	4618      	mov	r0, r3
 8005156:	3708      	adds	r7, #8
 8005158:	46bd      	mov	sp, r7
 800515a:	bd80      	pop	{r7, pc}
 800515c:	40021000 	.word	0x40021000
 8005160:	0800ad40 	.word	0x0800ad40

08005164 <HAL_RCCEx_PeriphCLKConfig>:
 8005164:	b580      	push	{r7, lr}
 8005166:	b092      	sub	sp, #72	@ 0x48
 8005168:	af00      	add	r7, sp, #0
 800516a:	6078      	str	r0, [r7, #4]
 800516c:	2300      	movs	r3, #0
 800516e:	643b      	str	r3, [r7, #64]	@ 0x40
 8005170:	2300      	movs	r3, #0
 8005172:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8005174:	2300      	movs	r3, #0
 8005176:	f887 3047 	strb.w	r3, [r7, #71]	@ 0x47
 800517a:	687b      	ldr	r3, [r7, #4]
 800517c:	681b      	ldr	r3, [r3, #0]
 800517e:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8005182:	2b00      	cmp	r3, #0
 8005184:	f000 80cd 	beq.w	8005322 <HAL_RCCEx_PeriphCLKConfig+0x1be>
 8005188:	4b86      	ldr	r3, [pc, #536]	@ (80053a4 <HAL_RCCEx_PeriphCLKConfig+0x240>)
 800518a:	69db      	ldr	r3, [r3, #28]
 800518c:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8005190:	2b00      	cmp	r3, #0
 8005192:	d10e      	bne.n	80051b2 <HAL_RCCEx_PeriphCLKConfig+0x4e>
 8005194:	4b83      	ldr	r3, [pc, #524]	@ (80053a4 <HAL_RCCEx_PeriphCLKConfig+0x240>)
 8005196:	69db      	ldr	r3, [r3, #28]
 8005198:	4a82      	ldr	r2, [pc, #520]	@ (80053a4 <HAL_RCCEx_PeriphCLKConfig+0x240>)
 800519a:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 800519e:	61d3      	str	r3, [r2, #28]
 80051a0:	4b80      	ldr	r3, [pc, #512]	@ (80053a4 <HAL_RCCEx_PeriphCLKConfig+0x240>)
 80051a2:	69db      	ldr	r3, [r3, #28]
 80051a4:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80051a8:	60bb      	str	r3, [r7, #8]
 80051aa:	68bb      	ldr	r3, [r7, #8]
 80051ac:	2301      	movs	r3, #1
 80051ae:	f887 3047 	strb.w	r3, [r7, #71]	@ 0x47
 80051b2:	4b7d      	ldr	r3, [pc, #500]	@ (80053a8 <HAL_RCCEx_PeriphCLKConfig+0x244>)
 80051b4:	681b      	ldr	r3, [r3, #0]
 80051b6:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80051ba:	2b00      	cmp	r3, #0
 80051bc:	d118      	bne.n	80051f0 <HAL_RCCEx_PeriphCLKConfig+0x8c>
 80051be:	4b7a      	ldr	r3, [pc, #488]	@ (80053a8 <HAL_RCCEx_PeriphCLKConfig+0x244>)
 80051c0:	681b      	ldr	r3, [r3, #0]
 80051c2:	4a79      	ldr	r2, [pc, #484]	@ (80053a8 <HAL_RCCEx_PeriphCLKConfig+0x244>)
 80051c4:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80051c8:	6013      	str	r3, [r2, #0]
 80051ca:	f7fd fc01 	bl	80029d0 <HAL_GetTick>
 80051ce:	6438      	str	r0, [r7, #64]	@ 0x40
 80051d0:	e008      	b.n	80051e4 <HAL_RCCEx_PeriphCLKConfig+0x80>
 80051d2:	f7fd fbfd 	bl	80029d0 <HAL_GetTick>
 80051d6:	4602      	mov	r2, r0
 80051d8:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 80051da:	1ad3      	subs	r3, r2, r3
 80051dc:	2b64      	cmp	r3, #100	@ 0x64
 80051de:	d901      	bls.n	80051e4 <HAL_RCCEx_PeriphCLKConfig+0x80>
 80051e0:	2303      	movs	r3, #3
 80051e2:	e0db      	b.n	800539c <HAL_RCCEx_PeriphCLKConfig+0x238>
 80051e4:	4b70      	ldr	r3, [pc, #448]	@ (80053a8 <HAL_RCCEx_PeriphCLKConfig+0x244>)
 80051e6:	681b      	ldr	r3, [r3, #0]
 80051e8:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80051ec:	2b00      	cmp	r3, #0
 80051ee:	d0f0      	beq.n	80051d2 <HAL_RCCEx_PeriphCLKConfig+0x6e>
 80051f0:	4b6c      	ldr	r3, [pc, #432]	@ (80053a4 <HAL_RCCEx_PeriphCLKConfig+0x240>)
 80051f2:	6a1b      	ldr	r3, [r3, #32]
 80051f4:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 80051f8:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80051fa:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 80051fc:	2b00      	cmp	r3, #0
 80051fe:	d07d      	beq.n	80052fc <HAL_RCCEx_PeriphCLKConfig+0x198>
 8005200:	687b      	ldr	r3, [r7, #4]
 8005202:	685b      	ldr	r3, [r3, #4]
 8005204:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8005208:	6bfa      	ldr	r2, [r7, #60]	@ 0x3c
 800520a:	429a      	cmp	r2, r3
 800520c:	d076      	beq.n	80052fc <HAL_RCCEx_PeriphCLKConfig+0x198>
 800520e:	4b65      	ldr	r3, [pc, #404]	@ (80053a4 <HAL_RCCEx_PeriphCLKConfig+0x240>)
 8005210:	6a1b      	ldr	r3, [r3, #32]
 8005212:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8005216:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8005218:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 800521c:	633b      	str	r3, [r7, #48]	@ 0x30
 800521e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8005220:	fa93 f3a3 	rbit	r3, r3
 8005224:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8005226:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8005228:	fab3 f383 	clz	r3, r3
 800522c:	b2db      	uxtb	r3, r3
 800522e:	461a      	mov	r2, r3
 8005230:	4b5e      	ldr	r3, [pc, #376]	@ (80053ac <HAL_RCCEx_PeriphCLKConfig+0x248>)
 8005232:	4413      	add	r3, r2
 8005234:	009b      	lsls	r3, r3, #2
 8005236:	461a      	mov	r2, r3
 8005238:	2301      	movs	r3, #1
 800523a:	6013      	str	r3, [r2, #0]
 800523c:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 8005240:	63bb      	str	r3, [r7, #56]	@ 0x38
 8005242:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8005244:	fa93 f3a3 	rbit	r3, r3
 8005248:	637b      	str	r3, [r7, #52]	@ 0x34
 800524a:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800524c:	fab3 f383 	clz	r3, r3
 8005250:	b2db      	uxtb	r3, r3
 8005252:	461a      	mov	r2, r3
 8005254:	4b55      	ldr	r3, [pc, #340]	@ (80053ac <HAL_RCCEx_PeriphCLKConfig+0x248>)
 8005256:	4413      	add	r3, r2
 8005258:	009b      	lsls	r3, r3, #2
 800525a:	461a      	mov	r2, r3
 800525c:	2300      	movs	r3, #0
 800525e:	6013      	str	r3, [r2, #0]
 8005260:	4a50      	ldr	r2, [pc, #320]	@ (80053a4 <HAL_RCCEx_PeriphCLKConfig+0x240>)
 8005262:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8005264:	6213      	str	r3, [r2, #32]
 8005266:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8005268:	f003 0301 	and.w	r3, r3, #1
 800526c:	2b00      	cmp	r3, #0
 800526e:	d045      	beq.n	80052fc <HAL_RCCEx_PeriphCLKConfig+0x198>
 8005270:	f7fd fbae 	bl	80029d0 <HAL_GetTick>
 8005274:	6438      	str	r0, [r7, #64]	@ 0x40
 8005276:	e00a      	b.n	800528e <HAL_RCCEx_PeriphCLKConfig+0x12a>
 8005278:	f7fd fbaa 	bl	80029d0 <HAL_GetTick>
 800527c:	4602      	mov	r2, r0
 800527e:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 8005280:	1ad3      	subs	r3, r2, r3
 8005282:	f241 3288 	movw	r2, #5000	@ 0x1388
 8005286:	4293      	cmp	r3, r2
 8005288:	d901      	bls.n	800528e <HAL_RCCEx_PeriphCLKConfig+0x12a>
 800528a:	2303      	movs	r3, #3
 800528c:	e086      	b.n	800539c <HAL_RCCEx_PeriphCLKConfig+0x238>
 800528e:	2302      	movs	r3, #2
 8005290:	62bb      	str	r3, [r7, #40]	@ 0x28
 8005292:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8005294:	fa93 f3a3 	rbit	r3, r3
 8005298:	627b      	str	r3, [r7, #36]	@ 0x24
 800529a:	2302      	movs	r3, #2
 800529c:	623b      	str	r3, [r7, #32]
 800529e:	6a3b      	ldr	r3, [r7, #32]
 80052a0:	fa93 f3a3 	rbit	r3, r3
 80052a4:	61fb      	str	r3, [r7, #28]
 80052a6:	69fb      	ldr	r3, [r7, #28]
 80052a8:	fab3 f383 	clz	r3, r3
 80052ac:	b2db      	uxtb	r3, r3
 80052ae:	095b      	lsrs	r3, r3, #5
 80052b0:	b2db      	uxtb	r3, r3
 80052b2:	f043 0302 	orr.w	r3, r3, #2
 80052b6:	b2db      	uxtb	r3, r3
 80052b8:	2b02      	cmp	r3, #2
 80052ba:	d102      	bne.n	80052c2 <HAL_RCCEx_PeriphCLKConfig+0x15e>
 80052bc:	4b39      	ldr	r3, [pc, #228]	@ (80053a4 <HAL_RCCEx_PeriphCLKConfig+0x240>)
 80052be:	6a1b      	ldr	r3, [r3, #32]
 80052c0:	e007      	b.n	80052d2 <HAL_RCCEx_PeriphCLKConfig+0x16e>
 80052c2:	2302      	movs	r3, #2
 80052c4:	61bb      	str	r3, [r7, #24]
 80052c6:	69bb      	ldr	r3, [r7, #24]
 80052c8:	fa93 f3a3 	rbit	r3, r3
 80052cc:	617b      	str	r3, [r7, #20]
 80052ce:	4b35      	ldr	r3, [pc, #212]	@ (80053a4 <HAL_RCCEx_PeriphCLKConfig+0x240>)
 80052d0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80052d2:	2202      	movs	r2, #2
 80052d4:	613a      	str	r2, [r7, #16]
 80052d6:	693a      	ldr	r2, [r7, #16]
 80052d8:	fa92 f2a2 	rbit	r2, r2
 80052dc:	60fa      	str	r2, [r7, #12]
 80052de:	68fa      	ldr	r2, [r7, #12]
 80052e0:	fab2 f282 	clz	r2, r2
 80052e4:	b2d2      	uxtb	r2, r2
 80052e6:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 80052ea:	b2d2      	uxtb	r2, r2
 80052ec:	f002 021f 	and.w	r2, r2, #31
 80052f0:	2101      	movs	r1, #1
 80052f2:	fa01 f202 	lsl.w	r2, r1, r2
 80052f6:	4013      	ands	r3, r2
 80052f8:	2b00      	cmp	r3, #0
 80052fa:	d0bd      	beq.n	8005278 <HAL_RCCEx_PeriphCLKConfig+0x114>
 80052fc:	4b29      	ldr	r3, [pc, #164]	@ (80053a4 <HAL_RCCEx_PeriphCLKConfig+0x240>)
 80052fe:	6a1b      	ldr	r3, [r3, #32]
 8005300:	f423 7240 	bic.w	r2, r3, #768	@ 0x300
 8005304:	687b      	ldr	r3, [r7, #4]
 8005306:	685b      	ldr	r3, [r3, #4]
 8005308:	4926      	ldr	r1, [pc, #152]	@ (80053a4 <HAL_RCCEx_PeriphCLKConfig+0x240>)
 800530a:	4313      	orrs	r3, r2
 800530c:	620b      	str	r3, [r1, #32]
 800530e:	f897 3047 	ldrb.w	r3, [r7, #71]	@ 0x47
 8005312:	2b01      	cmp	r3, #1
 8005314:	d105      	bne.n	8005322 <HAL_RCCEx_PeriphCLKConfig+0x1be>
 8005316:	4b23      	ldr	r3, [pc, #140]	@ (80053a4 <HAL_RCCEx_PeriphCLKConfig+0x240>)
 8005318:	69db      	ldr	r3, [r3, #28]
 800531a:	4a22      	ldr	r2, [pc, #136]	@ (80053a4 <HAL_RCCEx_PeriphCLKConfig+0x240>)
 800531c:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8005320:	61d3      	str	r3, [r2, #28]
 8005322:	687b      	ldr	r3, [r7, #4]
 8005324:	681b      	ldr	r3, [r3, #0]
 8005326:	f003 0301 	and.w	r3, r3, #1
 800532a:	2b00      	cmp	r3, #0
 800532c:	d008      	beq.n	8005340 <HAL_RCCEx_PeriphCLKConfig+0x1dc>
 800532e:	4b1d      	ldr	r3, [pc, #116]	@ (80053a4 <HAL_RCCEx_PeriphCLKConfig+0x240>)
 8005330:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005332:	f023 0203 	bic.w	r2, r3, #3
 8005336:	687b      	ldr	r3, [r7, #4]
 8005338:	689b      	ldr	r3, [r3, #8]
 800533a:	491a      	ldr	r1, [pc, #104]	@ (80053a4 <HAL_RCCEx_PeriphCLKConfig+0x240>)
 800533c:	4313      	orrs	r3, r2
 800533e:	630b      	str	r3, [r1, #48]	@ 0x30
 8005340:	687b      	ldr	r3, [r7, #4]
 8005342:	681b      	ldr	r3, [r3, #0]
 8005344:	f003 0320 	and.w	r3, r3, #32
 8005348:	2b00      	cmp	r3, #0
 800534a:	d008      	beq.n	800535e <HAL_RCCEx_PeriphCLKConfig+0x1fa>
 800534c:	4b15      	ldr	r3, [pc, #84]	@ (80053a4 <HAL_RCCEx_PeriphCLKConfig+0x240>)
 800534e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005350:	f023 0210 	bic.w	r2, r3, #16
 8005354:	687b      	ldr	r3, [r7, #4]
 8005356:	68db      	ldr	r3, [r3, #12]
 8005358:	4912      	ldr	r1, [pc, #72]	@ (80053a4 <HAL_RCCEx_PeriphCLKConfig+0x240>)
 800535a:	4313      	orrs	r3, r2
 800535c:	630b      	str	r3, [r1, #48]	@ 0x30
 800535e:	687b      	ldr	r3, [r7, #4]
 8005360:	681b      	ldr	r3, [r3, #0]
 8005362:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8005366:	2b00      	cmp	r3, #0
 8005368:	d008      	beq.n	800537c <HAL_RCCEx_PeriphCLKConfig+0x218>
 800536a:	4b0e      	ldr	r3, [pc, #56]	@ (80053a4 <HAL_RCCEx_PeriphCLKConfig+0x240>)
 800536c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800536e:	f423 72f8 	bic.w	r2, r3, #496	@ 0x1f0
 8005372:	687b      	ldr	r3, [r7, #4]
 8005374:	691b      	ldr	r3, [r3, #16]
 8005376:	490b      	ldr	r1, [pc, #44]	@ (80053a4 <HAL_RCCEx_PeriphCLKConfig+0x240>)
 8005378:	4313      	orrs	r3, r2
 800537a:	62cb      	str	r3, [r1, #44]	@ 0x2c
 800537c:	687b      	ldr	r3, [r7, #4]
 800537e:	681b      	ldr	r3, [r3, #0]
 8005380:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8005384:	2b00      	cmp	r3, #0
 8005386:	d008      	beq.n	800539a <HAL_RCCEx_PeriphCLKConfig+0x236>
 8005388:	4b06      	ldr	r3, [pc, #24]	@ (80053a4 <HAL_RCCEx_PeriphCLKConfig+0x240>)
 800538a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800538c:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 8005390:	687b      	ldr	r3, [r7, #4]
 8005392:	695b      	ldr	r3, [r3, #20]
 8005394:	4903      	ldr	r1, [pc, #12]	@ (80053a4 <HAL_RCCEx_PeriphCLKConfig+0x240>)
 8005396:	4313      	orrs	r3, r2
 8005398:	630b      	str	r3, [r1, #48]	@ 0x30
 800539a:	2300      	movs	r3, #0
 800539c:	4618      	mov	r0, r3
 800539e:	3748      	adds	r7, #72	@ 0x48
 80053a0:	46bd      	mov	sp, r7
 80053a2:	bd80      	pop	{r7, pc}
 80053a4:	40021000 	.word	0x40021000
 80053a8:	40007000 	.word	0x40007000
 80053ac:	10908100 	.word	0x10908100

080053b0 <HAL_TIM_Base_Init>:
 80053b0:	b580      	push	{r7, lr}
 80053b2:	b082      	sub	sp, #8
 80053b4:	af00      	add	r7, sp, #0
 80053b6:	6078      	str	r0, [r7, #4]
 80053b8:	687b      	ldr	r3, [r7, #4]
 80053ba:	2b00      	cmp	r3, #0
 80053bc:	d101      	bne.n	80053c2 <HAL_TIM_Base_Init+0x12>
 80053be:	2301      	movs	r3, #1
 80053c0:	e049      	b.n	8005456 <HAL_TIM_Base_Init+0xa6>
 80053c2:	687b      	ldr	r3, [r7, #4]
 80053c4:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 80053c8:	b2db      	uxtb	r3, r3
 80053ca:	2b00      	cmp	r3, #0
 80053cc:	d106      	bne.n	80053dc <HAL_TIM_Base_Init+0x2c>
 80053ce:	687b      	ldr	r3, [r7, #4]
 80053d0:	2200      	movs	r2, #0
 80053d2:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80053d6:	6878      	ldr	r0, [r7, #4]
 80053d8:	f7fd f818 	bl	800240c <HAL_TIM_Base_MspInit>
 80053dc:	687b      	ldr	r3, [r7, #4]
 80053de:	2202      	movs	r2, #2
 80053e0:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80053e4:	687b      	ldr	r3, [r7, #4]
 80053e6:	681a      	ldr	r2, [r3, #0]
 80053e8:	687b      	ldr	r3, [r7, #4]
 80053ea:	3304      	adds	r3, #4
 80053ec:	4619      	mov	r1, r3
 80053ee:	4610      	mov	r0, r2
 80053f0:	f000 fcf2 	bl	8005dd8 <TIM_Base_SetConfig>
 80053f4:	687b      	ldr	r3, [r7, #4]
 80053f6:	2201      	movs	r2, #1
 80053f8:	f883 2048 	strb.w	r2, [r3, #72]	@ 0x48
 80053fc:	687b      	ldr	r3, [r7, #4]
 80053fe:	2201      	movs	r2, #1
 8005400:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8005404:	687b      	ldr	r3, [r7, #4]
 8005406:	2201      	movs	r2, #1
 8005408:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 800540c:	687b      	ldr	r3, [r7, #4]
 800540e:	2201      	movs	r2, #1
 8005410:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8005414:	687b      	ldr	r3, [r7, #4]
 8005416:	2201      	movs	r2, #1
 8005418:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800541c:	687b      	ldr	r3, [r7, #4]
 800541e:	2201      	movs	r2, #1
 8005420:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8005424:	687b      	ldr	r3, [r7, #4]
 8005426:	2201      	movs	r2, #1
 8005428:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 800542c:	687b      	ldr	r3, [r7, #4]
 800542e:	2201      	movs	r2, #1
 8005430:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8005434:	687b      	ldr	r3, [r7, #4]
 8005436:	2201      	movs	r2, #1
 8005438:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 800543c:	687b      	ldr	r3, [r7, #4]
 800543e:	2201      	movs	r2, #1
 8005440:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 8005444:	687b      	ldr	r3, [r7, #4]
 8005446:	2201      	movs	r2, #1
 8005448:	f883 2047 	strb.w	r2, [r3, #71]	@ 0x47
 800544c:	687b      	ldr	r3, [r7, #4]
 800544e:	2201      	movs	r2, #1
 8005450:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005454:	2300      	movs	r3, #0
 8005456:	4618      	mov	r0, r3
 8005458:	3708      	adds	r7, #8
 800545a:	46bd      	mov	sp, r7
 800545c:	bd80      	pop	{r7, pc}
	...

08005460 <HAL_TIM_Base_Start_IT>:
 8005460:	b480      	push	{r7}
 8005462:	b085      	sub	sp, #20
 8005464:	af00      	add	r7, sp, #0
 8005466:	6078      	str	r0, [r7, #4]
 8005468:	687b      	ldr	r3, [r7, #4]
 800546a:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 800546e:	b2db      	uxtb	r3, r3
 8005470:	2b01      	cmp	r3, #1
 8005472:	d001      	beq.n	8005478 <HAL_TIM_Base_Start_IT+0x18>
 8005474:	2301      	movs	r3, #1
 8005476:	e040      	b.n	80054fa <HAL_TIM_Base_Start_IT+0x9a>
 8005478:	687b      	ldr	r3, [r7, #4]
 800547a:	2202      	movs	r2, #2
 800547c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005480:	687b      	ldr	r3, [r7, #4]
 8005482:	681b      	ldr	r3, [r3, #0]
 8005484:	68da      	ldr	r2, [r3, #12]
 8005486:	687b      	ldr	r3, [r7, #4]
 8005488:	681b      	ldr	r3, [r3, #0]
 800548a:	f042 0201 	orr.w	r2, r2, #1
 800548e:	60da      	str	r2, [r3, #12]
 8005490:	687b      	ldr	r3, [r7, #4]
 8005492:	681b      	ldr	r3, [r3, #0]
 8005494:	4a1c      	ldr	r2, [pc, #112]	@ (8005508 <HAL_TIM_Base_Start_IT+0xa8>)
 8005496:	4293      	cmp	r3, r2
 8005498:	d00e      	beq.n	80054b8 <HAL_TIM_Base_Start_IT+0x58>
 800549a:	687b      	ldr	r3, [r7, #4]
 800549c:	681b      	ldr	r3, [r3, #0]
 800549e:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80054a2:	d009      	beq.n	80054b8 <HAL_TIM_Base_Start_IT+0x58>
 80054a4:	687b      	ldr	r3, [r7, #4]
 80054a6:	681b      	ldr	r3, [r3, #0]
 80054a8:	4a18      	ldr	r2, [pc, #96]	@ (800550c <HAL_TIM_Base_Start_IT+0xac>)
 80054aa:	4293      	cmp	r3, r2
 80054ac:	d004      	beq.n	80054b8 <HAL_TIM_Base_Start_IT+0x58>
 80054ae:	687b      	ldr	r3, [r7, #4]
 80054b0:	681b      	ldr	r3, [r3, #0]
 80054b2:	4a17      	ldr	r2, [pc, #92]	@ (8005510 <HAL_TIM_Base_Start_IT+0xb0>)
 80054b4:	4293      	cmp	r3, r2
 80054b6:	d115      	bne.n	80054e4 <HAL_TIM_Base_Start_IT+0x84>
 80054b8:	687b      	ldr	r3, [r7, #4]
 80054ba:	681b      	ldr	r3, [r3, #0]
 80054bc:	689a      	ldr	r2, [r3, #8]
 80054be:	4b15      	ldr	r3, [pc, #84]	@ (8005514 <HAL_TIM_Base_Start_IT+0xb4>)
 80054c0:	4013      	ands	r3, r2
 80054c2:	60fb      	str	r3, [r7, #12]
 80054c4:	68fb      	ldr	r3, [r7, #12]
 80054c6:	2b06      	cmp	r3, #6
 80054c8:	d015      	beq.n	80054f6 <HAL_TIM_Base_Start_IT+0x96>
 80054ca:	68fb      	ldr	r3, [r7, #12]
 80054cc:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 80054d0:	d011      	beq.n	80054f6 <HAL_TIM_Base_Start_IT+0x96>
 80054d2:	687b      	ldr	r3, [r7, #4]
 80054d4:	681b      	ldr	r3, [r3, #0]
 80054d6:	681a      	ldr	r2, [r3, #0]
 80054d8:	687b      	ldr	r3, [r7, #4]
 80054da:	681b      	ldr	r3, [r3, #0]
 80054dc:	f042 0201 	orr.w	r2, r2, #1
 80054e0:	601a      	str	r2, [r3, #0]
 80054e2:	e008      	b.n	80054f6 <HAL_TIM_Base_Start_IT+0x96>
 80054e4:	687b      	ldr	r3, [r7, #4]
 80054e6:	681b      	ldr	r3, [r3, #0]
 80054e8:	681a      	ldr	r2, [r3, #0]
 80054ea:	687b      	ldr	r3, [r7, #4]
 80054ec:	681b      	ldr	r3, [r3, #0]
 80054ee:	f042 0201 	orr.w	r2, r2, #1
 80054f2:	601a      	str	r2, [r3, #0]
 80054f4:	e000      	b.n	80054f8 <HAL_TIM_Base_Start_IT+0x98>
 80054f6:	bf00      	nop
 80054f8:	2300      	movs	r3, #0
 80054fa:	4618      	mov	r0, r3
 80054fc:	3714      	adds	r7, #20
 80054fe:	46bd      	mov	sp, r7
 8005500:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005504:	4770      	bx	lr
 8005506:	bf00      	nop
 8005508:	40012c00 	.word	0x40012c00
 800550c:	40000400 	.word	0x40000400
 8005510:	40014000 	.word	0x40014000
 8005514:	00010007 	.word	0x00010007

08005518 <HAL_TIM_PWM_Init>:
 8005518:	b580      	push	{r7, lr}
 800551a:	b082      	sub	sp, #8
 800551c:	af00      	add	r7, sp, #0
 800551e:	6078      	str	r0, [r7, #4]
 8005520:	687b      	ldr	r3, [r7, #4]
 8005522:	2b00      	cmp	r3, #0
 8005524:	d101      	bne.n	800552a <HAL_TIM_PWM_Init+0x12>
 8005526:	2301      	movs	r3, #1
 8005528:	e049      	b.n	80055be <HAL_TIM_PWM_Init+0xa6>
 800552a:	687b      	ldr	r3, [r7, #4]
 800552c:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8005530:	b2db      	uxtb	r3, r3
 8005532:	2b00      	cmp	r3, #0
 8005534:	d106      	bne.n	8005544 <HAL_TIM_PWM_Init+0x2c>
 8005536:	687b      	ldr	r3, [r7, #4]
 8005538:	2200      	movs	r2, #0
 800553a:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800553e:	6878      	ldr	r0, [r7, #4]
 8005540:	f000 f841 	bl	80055c6 <HAL_TIM_PWM_MspInit>
 8005544:	687b      	ldr	r3, [r7, #4]
 8005546:	2202      	movs	r2, #2
 8005548:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800554c:	687b      	ldr	r3, [r7, #4]
 800554e:	681a      	ldr	r2, [r3, #0]
 8005550:	687b      	ldr	r3, [r7, #4]
 8005552:	3304      	adds	r3, #4
 8005554:	4619      	mov	r1, r3
 8005556:	4610      	mov	r0, r2
 8005558:	f000 fc3e 	bl	8005dd8 <TIM_Base_SetConfig>
 800555c:	687b      	ldr	r3, [r7, #4]
 800555e:	2201      	movs	r2, #1
 8005560:	f883 2048 	strb.w	r2, [r3, #72]	@ 0x48
 8005564:	687b      	ldr	r3, [r7, #4]
 8005566:	2201      	movs	r2, #1
 8005568:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800556c:	687b      	ldr	r3, [r7, #4]
 800556e:	2201      	movs	r2, #1
 8005570:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8005574:	687b      	ldr	r3, [r7, #4]
 8005576:	2201      	movs	r2, #1
 8005578:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 800557c:	687b      	ldr	r3, [r7, #4]
 800557e:	2201      	movs	r2, #1
 8005580:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8005584:	687b      	ldr	r3, [r7, #4]
 8005586:	2201      	movs	r2, #1
 8005588:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 800558c:	687b      	ldr	r3, [r7, #4]
 800558e:	2201      	movs	r2, #1
 8005590:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8005594:	687b      	ldr	r3, [r7, #4]
 8005596:	2201      	movs	r2, #1
 8005598:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 800559c:	687b      	ldr	r3, [r7, #4]
 800559e:	2201      	movs	r2, #1
 80055a0:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 80055a4:	687b      	ldr	r3, [r7, #4]
 80055a6:	2201      	movs	r2, #1
 80055a8:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 80055ac:	687b      	ldr	r3, [r7, #4]
 80055ae:	2201      	movs	r2, #1
 80055b0:	f883 2047 	strb.w	r2, [r3, #71]	@ 0x47
 80055b4:	687b      	ldr	r3, [r7, #4]
 80055b6:	2201      	movs	r2, #1
 80055b8:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80055bc:	2300      	movs	r3, #0
 80055be:	4618      	mov	r0, r3
 80055c0:	3708      	adds	r7, #8
 80055c2:	46bd      	mov	sp, r7
 80055c4:	bd80      	pop	{r7, pc}

080055c6 <HAL_TIM_PWM_MspInit>:
 80055c6:	b480      	push	{r7}
 80055c8:	b083      	sub	sp, #12
 80055ca:	af00      	add	r7, sp, #0
 80055cc:	6078      	str	r0, [r7, #4]
 80055ce:	bf00      	nop
 80055d0:	370c      	adds	r7, #12
 80055d2:	46bd      	mov	sp, r7
 80055d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80055d8:	4770      	bx	lr
	...

080055dc <HAL_TIM_PWM_Start>:
 80055dc:	b580      	push	{r7, lr}
 80055de:	b084      	sub	sp, #16
 80055e0:	af00      	add	r7, sp, #0
 80055e2:	6078      	str	r0, [r7, #4]
 80055e4:	6039      	str	r1, [r7, #0]
 80055e6:	683b      	ldr	r3, [r7, #0]
 80055e8:	2b00      	cmp	r3, #0
 80055ea:	d109      	bne.n	8005600 <HAL_TIM_PWM_Start+0x24>
 80055ec:	687b      	ldr	r3, [r7, #4]
 80055ee:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 80055f2:	b2db      	uxtb	r3, r3
 80055f4:	2b01      	cmp	r3, #1
 80055f6:	bf14      	ite	ne
 80055f8:	2301      	movne	r3, #1
 80055fa:	2300      	moveq	r3, #0
 80055fc:	b2db      	uxtb	r3, r3
 80055fe:	e03c      	b.n	800567a <HAL_TIM_PWM_Start+0x9e>
 8005600:	683b      	ldr	r3, [r7, #0]
 8005602:	2b04      	cmp	r3, #4
 8005604:	d109      	bne.n	800561a <HAL_TIM_PWM_Start+0x3e>
 8005606:	687b      	ldr	r3, [r7, #4]
 8005608:	f893 303f 	ldrb.w	r3, [r3, #63]	@ 0x3f
 800560c:	b2db      	uxtb	r3, r3
 800560e:	2b01      	cmp	r3, #1
 8005610:	bf14      	ite	ne
 8005612:	2301      	movne	r3, #1
 8005614:	2300      	moveq	r3, #0
 8005616:	b2db      	uxtb	r3, r3
 8005618:	e02f      	b.n	800567a <HAL_TIM_PWM_Start+0x9e>
 800561a:	683b      	ldr	r3, [r7, #0]
 800561c:	2b08      	cmp	r3, #8
 800561e:	d109      	bne.n	8005634 <HAL_TIM_PWM_Start+0x58>
 8005620:	687b      	ldr	r3, [r7, #4]
 8005622:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 8005626:	b2db      	uxtb	r3, r3
 8005628:	2b01      	cmp	r3, #1
 800562a:	bf14      	ite	ne
 800562c:	2301      	movne	r3, #1
 800562e:	2300      	moveq	r3, #0
 8005630:	b2db      	uxtb	r3, r3
 8005632:	e022      	b.n	800567a <HAL_TIM_PWM_Start+0x9e>
 8005634:	683b      	ldr	r3, [r7, #0]
 8005636:	2b0c      	cmp	r3, #12
 8005638:	d109      	bne.n	800564e <HAL_TIM_PWM_Start+0x72>
 800563a:	687b      	ldr	r3, [r7, #4]
 800563c:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8005640:	b2db      	uxtb	r3, r3
 8005642:	2b01      	cmp	r3, #1
 8005644:	bf14      	ite	ne
 8005646:	2301      	movne	r3, #1
 8005648:	2300      	moveq	r3, #0
 800564a:	b2db      	uxtb	r3, r3
 800564c:	e015      	b.n	800567a <HAL_TIM_PWM_Start+0x9e>
 800564e:	683b      	ldr	r3, [r7, #0]
 8005650:	2b10      	cmp	r3, #16
 8005652:	d109      	bne.n	8005668 <HAL_TIM_PWM_Start+0x8c>
 8005654:	687b      	ldr	r3, [r7, #4]
 8005656:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 800565a:	b2db      	uxtb	r3, r3
 800565c:	2b01      	cmp	r3, #1
 800565e:	bf14      	ite	ne
 8005660:	2301      	movne	r3, #1
 8005662:	2300      	moveq	r3, #0
 8005664:	b2db      	uxtb	r3, r3
 8005666:	e008      	b.n	800567a <HAL_TIM_PWM_Start+0x9e>
 8005668:	687b      	ldr	r3, [r7, #4]
 800566a:	f893 3043 	ldrb.w	r3, [r3, #67]	@ 0x43
 800566e:	b2db      	uxtb	r3, r3
 8005670:	2b01      	cmp	r3, #1
 8005672:	bf14      	ite	ne
 8005674:	2301      	movne	r3, #1
 8005676:	2300      	moveq	r3, #0
 8005678:	b2db      	uxtb	r3, r3
 800567a:	2b00      	cmp	r3, #0
 800567c:	d001      	beq.n	8005682 <HAL_TIM_PWM_Start+0xa6>
 800567e:	2301      	movs	r3, #1
 8005680:	e088      	b.n	8005794 <HAL_TIM_PWM_Start+0x1b8>
 8005682:	683b      	ldr	r3, [r7, #0]
 8005684:	2b00      	cmp	r3, #0
 8005686:	d104      	bne.n	8005692 <HAL_TIM_PWM_Start+0xb6>
 8005688:	687b      	ldr	r3, [r7, #4]
 800568a:	2202      	movs	r2, #2
 800568c:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8005690:	e023      	b.n	80056da <HAL_TIM_PWM_Start+0xfe>
 8005692:	683b      	ldr	r3, [r7, #0]
 8005694:	2b04      	cmp	r3, #4
 8005696:	d104      	bne.n	80056a2 <HAL_TIM_PWM_Start+0xc6>
 8005698:	687b      	ldr	r3, [r7, #4]
 800569a:	2202      	movs	r2, #2
 800569c:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 80056a0:	e01b      	b.n	80056da <HAL_TIM_PWM_Start+0xfe>
 80056a2:	683b      	ldr	r3, [r7, #0]
 80056a4:	2b08      	cmp	r3, #8
 80056a6:	d104      	bne.n	80056b2 <HAL_TIM_PWM_Start+0xd6>
 80056a8:	687b      	ldr	r3, [r7, #4]
 80056aa:	2202      	movs	r2, #2
 80056ac:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 80056b0:	e013      	b.n	80056da <HAL_TIM_PWM_Start+0xfe>
 80056b2:	683b      	ldr	r3, [r7, #0]
 80056b4:	2b0c      	cmp	r3, #12
 80056b6:	d104      	bne.n	80056c2 <HAL_TIM_PWM_Start+0xe6>
 80056b8:	687b      	ldr	r3, [r7, #4]
 80056ba:	2202      	movs	r2, #2
 80056bc:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80056c0:	e00b      	b.n	80056da <HAL_TIM_PWM_Start+0xfe>
 80056c2:	683b      	ldr	r3, [r7, #0]
 80056c4:	2b10      	cmp	r3, #16
 80056c6:	d104      	bne.n	80056d2 <HAL_TIM_PWM_Start+0xf6>
 80056c8:	687b      	ldr	r3, [r7, #4]
 80056ca:	2202      	movs	r2, #2
 80056cc:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80056d0:	e003      	b.n	80056da <HAL_TIM_PWM_Start+0xfe>
 80056d2:	687b      	ldr	r3, [r7, #4]
 80056d4:	2202      	movs	r2, #2
 80056d6:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 80056da:	687b      	ldr	r3, [r7, #4]
 80056dc:	681b      	ldr	r3, [r3, #0]
 80056de:	2201      	movs	r2, #1
 80056e0:	6839      	ldr	r1, [r7, #0]
 80056e2:	4618      	mov	r0, r3
 80056e4:	f000 ff3c 	bl	8006560 <TIM_CCxChannelCmd>
 80056e8:	687b      	ldr	r3, [r7, #4]
 80056ea:	681b      	ldr	r3, [r3, #0]
 80056ec:	4a2b      	ldr	r2, [pc, #172]	@ (800579c <HAL_TIM_PWM_Start+0x1c0>)
 80056ee:	4293      	cmp	r3, r2
 80056f0:	d00e      	beq.n	8005710 <HAL_TIM_PWM_Start+0x134>
 80056f2:	687b      	ldr	r3, [r7, #4]
 80056f4:	681b      	ldr	r3, [r3, #0]
 80056f6:	4a2a      	ldr	r2, [pc, #168]	@ (80057a0 <HAL_TIM_PWM_Start+0x1c4>)
 80056f8:	4293      	cmp	r3, r2
 80056fa:	d009      	beq.n	8005710 <HAL_TIM_PWM_Start+0x134>
 80056fc:	687b      	ldr	r3, [r7, #4]
 80056fe:	681b      	ldr	r3, [r3, #0]
 8005700:	4a28      	ldr	r2, [pc, #160]	@ (80057a4 <HAL_TIM_PWM_Start+0x1c8>)
 8005702:	4293      	cmp	r3, r2
 8005704:	d004      	beq.n	8005710 <HAL_TIM_PWM_Start+0x134>
 8005706:	687b      	ldr	r3, [r7, #4]
 8005708:	681b      	ldr	r3, [r3, #0]
 800570a:	4a27      	ldr	r2, [pc, #156]	@ (80057a8 <HAL_TIM_PWM_Start+0x1cc>)
 800570c:	4293      	cmp	r3, r2
 800570e:	d101      	bne.n	8005714 <HAL_TIM_PWM_Start+0x138>
 8005710:	2301      	movs	r3, #1
 8005712:	e000      	b.n	8005716 <HAL_TIM_PWM_Start+0x13a>
 8005714:	2300      	movs	r3, #0
 8005716:	2b00      	cmp	r3, #0
 8005718:	d007      	beq.n	800572a <HAL_TIM_PWM_Start+0x14e>
 800571a:	687b      	ldr	r3, [r7, #4]
 800571c:	681b      	ldr	r3, [r3, #0]
 800571e:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8005720:	687b      	ldr	r3, [r7, #4]
 8005722:	681b      	ldr	r3, [r3, #0]
 8005724:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8005728:	645a      	str	r2, [r3, #68]	@ 0x44
 800572a:	687b      	ldr	r3, [r7, #4]
 800572c:	681b      	ldr	r3, [r3, #0]
 800572e:	4a1b      	ldr	r2, [pc, #108]	@ (800579c <HAL_TIM_PWM_Start+0x1c0>)
 8005730:	4293      	cmp	r3, r2
 8005732:	d00e      	beq.n	8005752 <HAL_TIM_PWM_Start+0x176>
 8005734:	687b      	ldr	r3, [r7, #4]
 8005736:	681b      	ldr	r3, [r3, #0]
 8005738:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800573c:	d009      	beq.n	8005752 <HAL_TIM_PWM_Start+0x176>
 800573e:	687b      	ldr	r3, [r7, #4]
 8005740:	681b      	ldr	r3, [r3, #0]
 8005742:	4a1a      	ldr	r2, [pc, #104]	@ (80057ac <HAL_TIM_PWM_Start+0x1d0>)
 8005744:	4293      	cmp	r3, r2
 8005746:	d004      	beq.n	8005752 <HAL_TIM_PWM_Start+0x176>
 8005748:	687b      	ldr	r3, [r7, #4]
 800574a:	681b      	ldr	r3, [r3, #0]
 800574c:	4a14      	ldr	r2, [pc, #80]	@ (80057a0 <HAL_TIM_PWM_Start+0x1c4>)
 800574e:	4293      	cmp	r3, r2
 8005750:	d115      	bne.n	800577e <HAL_TIM_PWM_Start+0x1a2>
 8005752:	687b      	ldr	r3, [r7, #4]
 8005754:	681b      	ldr	r3, [r3, #0]
 8005756:	689a      	ldr	r2, [r3, #8]
 8005758:	4b15      	ldr	r3, [pc, #84]	@ (80057b0 <HAL_TIM_PWM_Start+0x1d4>)
 800575a:	4013      	ands	r3, r2
 800575c:	60fb      	str	r3, [r7, #12]
 800575e:	68fb      	ldr	r3, [r7, #12]
 8005760:	2b06      	cmp	r3, #6
 8005762:	d015      	beq.n	8005790 <HAL_TIM_PWM_Start+0x1b4>
 8005764:	68fb      	ldr	r3, [r7, #12]
 8005766:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 800576a:	d011      	beq.n	8005790 <HAL_TIM_PWM_Start+0x1b4>
 800576c:	687b      	ldr	r3, [r7, #4]
 800576e:	681b      	ldr	r3, [r3, #0]
 8005770:	681a      	ldr	r2, [r3, #0]
 8005772:	687b      	ldr	r3, [r7, #4]
 8005774:	681b      	ldr	r3, [r3, #0]
 8005776:	f042 0201 	orr.w	r2, r2, #1
 800577a:	601a      	str	r2, [r3, #0]
 800577c:	e008      	b.n	8005790 <HAL_TIM_PWM_Start+0x1b4>
 800577e:	687b      	ldr	r3, [r7, #4]
 8005780:	681b      	ldr	r3, [r3, #0]
 8005782:	681a      	ldr	r2, [r3, #0]
 8005784:	687b      	ldr	r3, [r7, #4]
 8005786:	681b      	ldr	r3, [r3, #0]
 8005788:	f042 0201 	orr.w	r2, r2, #1
 800578c:	601a      	str	r2, [r3, #0]
 800578e:	e000      	b.n	8005792 <HAL_TIM_PWM_Start+0x1b6>
 8005790:	bf00      	nop
 8005792:	2300      	movs	r3, #0
 8005794:	4618      	mov	r0, r3
 8005796:	3710      	adds	r7, #16
 8005798:	46bd      	mov	sp, r7
 800579a:	bd80      	pop	{r7, pc}
 800579c:	40012c00 	.word	0x40012c00
 80057a0:	40014000 	.word	0x40014000
 80057a4:	40014400 	.word	0x40014400
 80057a8:	40014800 	.word	0x40014800
 80057ac:	40000400 	.word	0x40000400
 80057b0:	00010007 	.word	0x00010007

080057b4 <HAL_TIM_IRQHandler>:
 80057b4:	b580      	push	{r7, lr}
 80057b6:	b084      	sub	sp, #16
 80057b8:	af00      	add	r7, sp, #0
 80057ba:	6078      	str	r0, [r7, #4]
 80057bc:	687b      	ldr	r3, [r7, #4]
 80057be:	681b      	ldr	r3, [r3, #0]
 80057c0:	68db      	ldr	r3, [r3, #12]
 80057c2:	60fb      	str	r3, [r7, #12]
 80057c4:	687b      	ldr	r3, [r7, #4]
 80057c6:	681b      	ldr	r3, [r3, #0]
 80057c8:	691b      	ldr	r3, [r3, #16]
 80057ca:	60bb      	str	r3, [r7, #8]
 80057cc:	68bb      	ldr	r3, [r7, #8]
 80057ce:	f003 0302 	and.w	r3, r3, #2
 80057d2:	2b00      	cmp	r3, #0
 80057d4:	d020      	beq.n	8005818 <HAL_TIM_IRQHandler+0x64>
 80057d6:	68fb      	ldr	r3, [r7, #12]
 80057d8:	f003 0302 	and.w	r3, r3, #2
 80057dc:	2b00      	cmp	r3, #0
 80057de:	d01b      	beq.n	8005818 <HAL_TIM_IRQHandler+0x64>
 80057e0:	687b      	ldr	r3, [r7, #4]
 80057e2:	681b      	ldr	r3, [r3, #0]
 80057e4:	f06f 0202 	mvn.w	r2, #2
 80057e8:	611a      	str	r2, [r3, #16]
 80057ea:	687b      	ldr	r3, [r7, #4]
 80057ec:	2201      	movs	r2, #1
 80057ee:	771a      	strb	r2, [r3, #28]
 80057f0:	687b      	ldr	r3, [r7, #4]
 80057f2:	681b      	ldr	r3, [r3, #0]
 80057f4:	699b      	ldr	r3, [r3, #24]
 80057f6:	f003 0303 	and.w	r3, r3, #3
 80057fa:	2b00      	cmp	r3, #0
 80057fc:	d003      	beq.n	8005806 <HAL_TIM_IRQHandler+0x52>
 80057fe:	6878      	ldr	r0, [r7, #4]
 8005800:	f000 facb 	bl	8005d9a <HAL_TIM_IC_CaptureCallback>
 8005804:	e005      	b.n	8005812 <HAL_TIM_IRQHandler+0x5e>
 8005806:	6878      	ldr	r0, [r7, #4]
 8005808:	f000 fabd 	bl	8005d86 <HAL_TIM_OC_DelayElapsedCallback>
 800580c:	6878      	ldr	r0, [r7, #4]
 800580e:	f000 face 	bl	8005dae <HAL_TIM_PWM_PulseFinishedCallback>
 8005812:	687b      	ldr	r3, [r7, #4]
 8005814:	2200      	movs	r2, #0
 8005816:	771a      	strb	r2, [r3, #28]
 8005818:	68bb      	ldr	r3, [r7, #8]
 800581a:	f003 0304 	and.w	r3, r3, #4
 800581e:	2b00      	cmp	r3, #0
 8005820:	d020      	beq.n	8005864 <HAL_TIM_IRQHandler+0xb0>
 8005822:	68fb      	ldr	r3, [r7, #12]
 8005824:	f003 0304 	and.w	r3, r3, #4
 8005828:	2b00      	cmp	r3, #0
 800582a:	d01b      	beq.n	8005864 <HAL_TIM_IRQHandler+0xb0>
 800582c:	687b      	ldr	r3, [r7, #4]
 800582e:	681b      	ldr	r3, [r3, #0]
 8005830:	f06f 0204 	mvn.w	r2, #4
 8005834:	611a      	str	r2, [r3, #16]
 8005836:	687b      	ldr	r3, [r7, #4]
 8005838:	2202      	movs	r2, #2
 800583a:	771a      	strb	r2, [r3, #28]
 800583c:	687b      	ldr	r3, [r7, #4]
 800583e:	681b      	ldr	r3, [r3, #0]
 8005840:	699b      	ldr	r3, [r3, #24]
 8005842:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8005846:	2b00      	cmp	r3, #0
 8005848:	d003      	beq.n	8005852 <HAL_TIM_IRQHandler+0x9e>
 800584a:	6878      	ldr	r0, [r7, #4]
 800584c:	f000 faa5 	bl	8005d9a <HAL_TIM_IC_CaptureCallback>
 8005850:	e005      	b.n	800585e <HAL_TIM_IRQHandler+0xaa>
 8005852:	6878      	ldr	r0, [r7, #4]
 8005854:	f000 fa97 	bl	8005d86 <HAL_TIM_OC_DelayElapsedCallback>
 8005858:	6878      	ldr	r0, [r7, #4]
 800585a:	f000 faa8 	bl	8005dae <HAL_TIM_PWM_PulseFinishedCallback>
 800585e:	687b      	ldr	r3, [r7, #4]
 8005860:	2200      	movs	r2, #0
 8005862:	771a      	strb	r2, [r3, #28]
 8005864:	68bb      	ldr	r3, [r7, #8]
 8005866:	f003 0308 	and.w	r3, r3, #8
 800586a:	2b00      	cmp	r3, #0
 800586c:	d020      	beq.n	80058b0 <HAL_TIM_IRQHandler+0xfc>
 800586e:	68fb      	ldr	r3, [r7, #12]
 8005870:	f003 0308 	and.w	r3, r3, #8
 8005874:	2b00      	cmp	r3, #0
 8005876:	d01b      	beq.n	80058b0 <HAL_TIM_IRQHandler+0xfc>
 8005878:	687b      	ldr	r3, [r7, #4]
 800587a:	681b      	ldr	r3, [r3, #0]
 800587c:	f06f 0208 	mvn.w	r2, #8
 8005880:	611a      	str	r2, [r3, #16]
 8005882:	687b      	ldr	r3, [r7, #4]
 8005884:	2204      	movs	r2, #4
 8005886:	771a      	strb	r2, [r3, #28]
 8005888:	687b      	ldr	r3, [r7, #4]
 800588a:	681b      	ldr	r3, [r3, #0]
 800588c:	69db      	ldr	r3, [r3, #28]
 800588e:	f003 0303 	and.w	r3, r3, #3
 8005892:	2b00      	cmp	r3, #0
 8005894:	d003      	beq.n	800589e <HAL_TIM_IRQHandler+0xea>
 8005896:	6878      	ldr	r0, [r7, #4]
 8005898:	f000 fa7f 	bl	8005d9a <HAL_TIM_IC_CaptureCallback>
 800589c:	e005      	b.n	80058aa <HAL_TIM_IRQHandler+0xf6>
 800589e:	6878      	ldr	r0, [r7, #4]
 80058a0:	f000 fa71 	bl	8005d86 <HAL_TIM_OC_DelayElapsedCallback>
 80058a4:	6878      	ldr	r0, [r7, #4]
 80058a6:	f000 fa82 	bl	8005dae <HAL_TIM_PWM_PulseFinishedCallback>
 80058aa:	687b      	ldr	r3, [r7, #4]
 80058ac:	2200      	movs	r2, #0
 80058ae:	771a      	strb	r2, [r3, #28]
 80058b0:	68bb      	ldr	r3, [r7, #8]
 80058b2:	f003 0310 	and.w	r3, r3, #16
 80058b6:	2b00      	cmp	r3, #0
 80058b8:	d020      	beq.n	80058fc <HAL_TIM_IRQHandler+0x148>
 80058ba:	68fb      	ldr	r3, [r7, #12]
 80058bc:	f003 0310 	and.w	r3, r3, #16
 80058c0:	2b00      	cmp	r3, #0
 80058c2:	d01b      	beq.n	80058fc <HAL_TIM_IRQHandler+0x148>
 80058c4:	687b      	ldr	r3, [r7, #4]
 80058c6:	681b      	ldr	r3, [r3, #0]
 80058c8:	f06f 0210 	mvn.w	r2, #16
 80058cc:	611a      	str	r2, [r3, #16]
 80058ce:	687b      	ldr	r3, [r7, #4]
 80058d0:	2208      	movs	r2, #8
 80058d2:	771a      	strb	r2, [r3, #28]
 80058d4:	687b      	ldr	r3, [r7, #4]
 80058d6:	681b      	ldr	r3, [r3, #0]
 80058d8:	69db      	ldr	r3, [r3, #28]
 80058da:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 80058de:	2b00      	cmp	r3, #0
 80058e0:	d003      	beq.n	80058ea <HAL_TIM_IRQHandler+0x136>
 80058e2:	6878      	ldr	r0, [r7, #4]
 80058e4:	f000 fa59 	bl	8005d9a <HAL_TIM_IC_CaptureCallback>
 80058e8:	e005      	b.n	80058f6 <HAL_TIM_IRQHandler+0x142>
 80058ea:	6878      	ldr	r0, [r7, #4]
 80058ec:	f000 fa4b 	bl	8005d86 <HAL_TIM_OC_DelayElapsedCallback>
 80058f0:	6878      	ldr	r0, [r7, #4]
 80058f2:	f000 fa5c 	bl	8005dae <HAL_TIM_PWM_PulseFinishedCallback>
 80058f6:	687b      	ldr	r3, [r7, #4]
 80058f8:	2200      	movs	r2, #0
 80058fa:	771a      	strb	r2, [r3, #28]
 80058fc:	68bb      	ldr	r3, [r7, #8]
 80058fe:	f003 0301 	and.w	r3, r3, #1
 8005902:	2b00      	cmp	r3, #0
 8005904:	d00c      	beq.n	8005920 <HAL_TIM_IRQHandler+0x16c>
 8005906:	68fb      	ldr	r3, [r7, #12]
 8005908:	f003 0301 	and.w	r3, r3, #1
 800590c:	2b00      	cmp	r3, #0
 800590e:	d007      	beq.n	8005920 <HAL_TIM_IRQHandler+0x16c>
 8005910:	687b      	ldr	r3, [r7, #4]
 8005912:	681b      	ldr	r3, [r3, #0]
 8005914:	f06f 0201 	mvn.w	r2, #1
 8005918:	611a      	str	r2, [r3, #16]
 800591a:	6878      	ldr	r0, [r7, #4]
 800591c:	f000 fa29 	bl	8005d72 <HAL_TIM_PeriodElapsedCallback>
 8005920:	68bb      	ldr	r3, [r7, #8]
 8005922:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8005926:	2b00      	cmp	r3, #0
 8005928:	d00c      	beq.n	8005944 <HAL_TIM_IRQHandler+0x190>
 800592a:	68fb      	ldr	r3, [r7, #12]
 800592c:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8005930:	2b00      	cmp	r3, #0
 8005932:	d007      	beq.n	8005944 <HAL_TIM_IRQHandler+0x190>
 8005934:	687b      	ldr	r3, [r7, #4]
 8005936:	681b      	ldr	r3, [r3, #0]
 8005938:	f06f 0280 	mvn.w	r2, #128	@ 0x80
 800593c:	611a      	str	r2, [r3, #16]
 800593e:	6878      	ldr	r0, [r7, #4]
 8005940:	f000 ff24 	bl	800678c <HAL_TIMEx_BreakCallback>
 8005944:	68bb      	ldr	r3, [r7, #8]
 8005946:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800594a:	2b00      	cmp	r3, #0
 800594c:	d00c      	beq.n	8005968 <HAL_TIM_IRQHandler+0x1b4>
 800594e:	68fb      	ldr	r3, [r7, #12]
 8005950:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8005954:	2b00      	cmp	r3, #0
 8005956:	d007      	beq.n	8005968 <HAL_TIM_IRQHandler+0x1b4>
 8005958:	687b      	ldr	r3, [r7, #4]
 800595a:	681b      	ldr	r3, [r3, #0]
 800595c:	f46f 7280 	mvn.w	r2, #256	@ 0x100
 8005960:	611a      	str	r2, [r3, #16]
 8005962:	6878      	ldr	r0, [r7, #4]
 8005964:	f000 ff1c 	bl	80067a0 <HAL_TIMEx_Break2Callback>
 8005968:	68bb      	ldr	r3, [r7, #8]
 800596a:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800596e:	2b00      	cmp	r3, #0
 8005970:	d00c      	beq.n	800598c <HAL_TIM_IRQHandler+0x1d8>
 8005972:	68fb      	ldr	r3, [r7, #12]
 8005974:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8005978:	2b00      	cmp	r3, #0
 800597a:	d007      	beq.n	800598c <HAL_TIM_IRQHandler+0x1d8>
 800597c:	687b      	ldr	r3, [r7, #4]
 800597e:	681b      	ldr	r3, [r3, #0]
 8005980:	f06f 0240 	mvn.w	r2, #64	@ 0x40
 8005984:	611a      	str	r2, [r3, #16]
 8005986:	6878      	ldr	r0, [r7, #4]
 8005988:	f000 fa1b 	bl	8005dc2 <HAL_TIM_TriggerCallback>
 800598c:	68bb      	ldr	r3, [r7, #8]
 800598e:	f003 0320 	and.w	r3, r3, #32
 8005992:	2b00      	cmp	r3, #0
 8005994:	d00c      	beq.n	80059b0 <HAL_TIM_IRQHandler+0x1fc>
 8005996:	68fb      	ldr	r3, [r7, #12]
 8005998:	f003 0320 	and.w	r3, r3, #32
 800599c:	2b00      	cmp	r3, #0
 800599e:	d007      	beq.n	80059b0 <HAL_TIM_IRQHandler+0x1fc>
 80059a0:	687b      	ldr	r3, [r7, #4]
 80059a2:	681b      	ldr	r3, [r3, #0]
 80059a4:	f06f 0220 	mvn.w	r2, #32
 80059a8:	611a      	str	r2, [r3, #16]
 80059aa:	6878      	ldr	r0, [r7, #4]
 80059ac:	f000 fee4 	bl	8006778 <HAL_TIMEx_CommutCallback>
 80059b0:	bf00      	nop
 80059b2:	3710      	adds	r7, #16
 80059b4:	46bd      	mov	sp, r7
 80059b6:	bd80      	pop	{r7, pc}

080059b8 <HAL_TIM_PWM_ConfigChannel>:
 80059b8:	b580      	push	{r7, lr}
 80059ba:	b086      	sub	sp, #24
 80059bc:	af00      	add	r7, sp, #0
 80059be:	60f8      	str	r0, [r7, #12]
 80059c0:	60b9      	str	r1, [r7, #8]
 80059c2:	607a      	str	r2, [r7, #4]
 80059c4:	2300      	movs	r3, #0
 80059c6:	75fb      	strb	r3, [r7, #23]
 80059c8:	68fb      	ldr	r3, [r7, #12]
 80059ca:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 80059ce:	2b01      	cmp	r3, #1
 80059d0:	d101      	bne.n	80059d6 <HAL_TIM_PWM_ConfigChannel+0x1e>
 80059d2:	2302      	movs	r3, #2
 80059d4:	e0ff      	b.n	8005bd6 <HAL_TIM_PWM_ConfigChannel+0x21e>
 80059d6:	68fb      	ldr	r3, [r7, #12]
 80059d8:	2201      	movs	r2, #1
 80059da:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80059de:	687b      	ldr	r3, [r7, #4]
 80059e0:	2b14      	cmp	r3, #20
 80059e2:	f200 80f0 	bhi.w	8005bc6 <HAL_TIM_PWM_ConfigChannel+0x20e>
 80059e6:	a201      	add	r2, pc, #4	@ (adr r2, 80059ec <HAL_TIM_PWM_ConfigChannel+0x34>)
 80059e8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80059ec:	08005a41 	.word	0x08005a41
 80059f0:	08005bc7 	.word	0x08005bc7
 80059f4:	08005bc7 	.word	0x08005bc7
 80059f8:	08005bc7 	.word	0x08005bc7
 80059fc:	08005a81 	.word	0x08005a81
 8005a00:	08005bc7 	.word	0x08005bc7
 8005a04:	08005bc7 	.word	0x08005bc7
 8005a08:	08005bc7 	.word	0x08005bc7
 8005a0c:	08005ac3 	.word	0x08005ac3
 8005a10:	08005bc7 	.word	0x08005bc7
 8005a14:	08005bc7 	.word	0x08005bc7
 8005a18:	08005bc7 	.word	0x08005bc7
 8005a1c:	08005b03 	.word	0x08005b03
 8005a20:	08005bc7 	.word	0x08005bc7
 8005a24:	08005bc7 	.word	0x08005bc7
 8005a28:	08005bc7 	.word	0x08005bc7
 8005a2c:	08005b45 	.word	0x08005b45
 8005a30:	08005bc7 	.word	0x08005bc7
 8005a34:	08005bc7 	.word	0x08005bc7
 8005a38:	08005bc7 	.word	0x08005bc7
 8005a3c:	08005b85 	.word	0x08005b85
 8005a40:	68fb      	ldr	r3, [r7, #12]
 8005a42:	681b      	ldr	r3, [r3, #0]
 8005a44:	68b9      	ldr	r1, [r7, #8]
 8005a46:	4618      	mov	r0, r3
 8005a48:	f000 fa4a 	bl	8005ee0 <TIM_OC1_SetConfig>
 8005a4c:	68fb      	ldr	r3, [r7, #12]
 8005a4e:	681b      	ldr	r3, [r3, #0]
 8005a50:	699a      	ldr	r2, [r3, #24]
 8005a52:	68fb      	ldr	r3, [r7, #12]
 8005a54:	681b      	ldr	r3, [r3, #0]
 8005a56:	f042 0208 	orr.w	r2, r2, #8
 8005a5a:	619a      	str	r2, [r3, #24]
 8005a5c:	68fb      	ldr	r3, [r7, #12]
 8005a5e:	681b      	ldr	r3, [r3, #0]
 8005a60:	699a      	ldr	r2, [r3, #24]
 8005a62:	68fb      	ldr	r3, [r7, #12]
 8005a64:	681b      	ldr	r3, [r3, #0]
 8005a66:	f022 0204 	bic.w	r2, r2, #4
 8005a6a:	619a      	str	r2, [r3, #24]
 8005a6c:	68fb      	ldr	r3, [r7, #12]
 8005a6e:	681b      	ldr	r3, [r3, #0]
 8005a70:	6999      	ldr	r1, [r3, #24]
 8005a72:	68bb      	ldr	r3, [r7, #8]
 8005a74:	691a      	ldr	r2, [r3, #16]
 8005a76:	68fb      	ldr	r3, [r7, #12]
 8005a78:	681b      	ldr	r3, [r3, #0]
 8005a7a:	430a      	orrs	r2, r1
 8005a7c:	619a      	str	r2, [r3, #24]
 8005a7e:	e0a5      	b.n	8005bcc <HAL_TIM_PWM_ConfigChannel+0x214>
 8005a80:	68fb      	ldr	r3, [r7, #12]
 8005a82:	681b      	ldr	r3, [r3, #0]
 8005a84:	68b9      	ldr	r1, [r7, #8]
 8005a86:	4618      	mov	r0, r3
 8005a88:	f000 fab0 	bl	8005fec <TIM_OC2_SetConfig>
 8005a8c:	68fb      	ldr	r3, [r7, #12]
 8005a8e:	681b      	ldr	r3, [r3, #0]
 8005a90:	699a      	ldr	r2, [r3, #24]
 8005a92:	68fb      	ldr	r3, [r7, #12]
 8005a94:	681b      	ldr	r3, [r3, #0]
 8005a96:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8005a9a:	619a      	str	r2, [r3, #24]
 8005a9c:	68fb      	ldr	r3, [r7, #12]
 8005a9e:	681b      	ldr	r3, [r3, #0]
 8005aa0:	699a      	ldr	r2, [r3, #24]
 8005aa2:	68fb      	ldr	r3, [r7, #12]
 8005aa4:	681b      	ldr	r3, [r3, #0]
 8005aa6:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8005aaa:	619a      	str	r2, [r3, #24]
 8005aac:	68fb      	ldr	r3, [r7, #12]
 8005aae:	681b      	ldr	r3, [r3, #0]
 8005ab0:	6999      	ldr	r1, [r3, #24]
 8005ab2:	68bb      	ldr	r3, [r7, #8]
 8005ab4:	691b      	ldr	r3, [r3, #16]
 8005ab6:	021a      	lsls	r2, r3, #8
 8005ab8:	68fb      	ldr	r3, [r7, #12]
 8005aba:	681b      	ldr	r3, [r3, #0]
 8005abc:	430a      	orrs	r2, r1
 8005abe:	619a      	str	r2, [r3, #24]
 8005ac0:	e084      	b.n	8005bcc <HAL_TIM_PWM_ConfigChannel+0x214>
 8005ac2:	68fb      	ldr	r3, [r7, #12]
 8005ac4:	681b      	ldr	r3, [r3, #0]
 8005ac6:	68b9      	ldr	r1, [r7, #8]
 8005ac8:	4618      	mov	r0, r3
 8005aca:	f000 fb0f 	bl	80060ec <TIM_OC3_SetConfig>
 8005ace:	68fb      	ldr	r3, [r7, #12]
 8005ad0:	681b      	ldr	r3, [r3, #0]
 8005ad2:	69da      	ldr	r2, [r3, #28]
 8005ad4:	68fb      	ldr	r3, [r7, #12]
 8005ad6:	681b      	ldr	r3, [r3, #0]
 8005ad8:	f042 0208 	orr.w	r2, r2, #8
 8005adc:	61da      	str	r2, [r3, #28]
 8005ade:	68fb      	ldr	r3, [r7, #12]
 8005ae0:	681b      	ldr	r3, [r3, #0]
 8005ae2:	69da      	ldr	r2, [r3, #28]
 8005ae4:	68fb      	ldr	r3, [r7, #12]
 8005ae6:	681b      	ldr	r3, [r3, #0]
 8005ae8:	f022 0204 	bic.w	r2, r2, #4
 8005aec:	61da      	str	r2, [r3, #28]
 8005aee:	68fb      	ldr	r3, [r7, #12]
 8005af0:	681b      	ldr	r3, [r3, #0]
 8005af2:	69d9      	ldr	r1, [r3, #28]
 8005af4:	68bb      	ldr	r3, [r7, #8]
 8005af6:	691a      	ldr	r2, [r3, #16]
 8005af8:	68fb      	ldr	r3, [r7, #12]
 8005afa:	681b      	ldr	r3, [r3, #0]
 8005afc:	430a      	orrs	r2, r1
 8005afe:	61da      	str	r2, [r3, #28]
 8005b00:	e064      	b.n	8005bcc <HAL_TIM_PWM_ConfigChannel+0x214>
 8005b02:	68fb      	ldr	r3, [r7, #12]
 8005b04:	681b      	ldr	r3, [r3, #0]
 8005b06:	68b9      	ldr	r1, [r7, #8]
 8005b08:	4618      	mov	r0, r3
 8005b0a:	f000 fb6d 	bl	80061e8 <TIM_OC4_SetConfig>
 8005b0e:	68fb      	ldr	r3, [r7, #12]
 8005b10:	681b      	ldr	r3, [r3, #0]
 8005b12:	69da      	ldr	r2, [r3, #28]
 8005b14:	68fb      	ldr	r3, [r7, #12]
 8005b16:	681b      	ldr	r3, [r3, #0]
 8005b18:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8005b1c:	61da      	str	r2, [r3, #28]
 8005b1e:	68fb      	ldr	r3, [r7, #12]
 8005b20:	681b      	ldr	r3, [r3, #0]
 8005b22:	69da      	ldr	r2, [r3, #28]
 8005b24:	68fb      	ldr	r3, [r7, #12]
 8005b26:	681b      	ldr	r3, [r3, #0]
 8005b28:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8005b2c:	61da      	str	r2, [r3, #28]
 8005b2e:	68fb      	ldr	r3, [r7, #12]
 8005b30:	681b      	ldr	r3, [r3, #0]
 8005b32:	69d9      	ldr	r1, [r3, #28]
 8005b34:	68bb      	ldr	r3, [r7, #8]
 8005b36:	691b      	ldr	r3, [r3, #16]
 8005b38:	021a      	lsls	r2, r3, #8
 8005b3a:	68fb      	ldr	r3, [r7, #12]
 8005b3c:	681b      	ldr	r3, [r3, #0]
 8005b3e:	430a      	orrs	r2, r1
 8005b40:	61da      	str	r2, [r3, #28]
 8005b42:	e043      	b.n	8005bcc <HAL_TIM_PWM_ConfigChannel+0x214>
 8005b44:	68fb      	ldr	r3, [r7, #12]
 8005b46:	681b      	ldr	r3, [r3, #0]
 8005b48:	68b9      	ldr	r1, [r7, #8]
 8005b4a:	4618      	mov	r0, r3
 8005b4c:	f000 fbb0 	bl	80062b0 <TIM_OC5_SetConfig>
 8005b50:	68fb      	ldr	r3, [r7, #12]
 8005b52:	681b      	ldr	r3, [r3, #0]
 8005b54:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
 8005b56:	68fb      	ldr	r3, [r7, #12]
 8005b58:	681b      	ldr	r3, [r3, #0]
 8005b5a:	f042 0208 	orr.w	r2, r2, #8
 8005b5e:	655a      	str	r2, [r3, #84]	@ 0x54
 8005b60:	68fb      	ldr	r3, [r7, #12]
 8005b62:	681b      	ldr	r3, [r3, #0]
 8005b64:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
 8005b66:	68fb      	ldr	r3, [r7, #12]
 8005b68:	681b      	ldr	r3, [r3, #0]
 8005b6a:	f022 0204 	bic.w	r2, r2, #4
 8005b6e:	655a      	str	r2, [r3, #84]	@ 0x54
 8005b70:	68fb      	ldr	r3, [r7, #12]
 8005b72:	681b      	ldr	r3, [r3, #0]
 8005b74:	6d59      	ldr	r1, [r3, #84]	@ 0x54
 8005b76:	68bb      	ldr	r3, [r7, #8]
 8005b78:	691a      	ldr	r2, [r3, #16]
 8005b7a:	68fb      	ldr	r3, [r7, #12]
 8005b7c:	681b      	ldr	r3, [r3, #0]
 8005b7e:	430a      	orrs	r2, r1
 8005b80:	655a      	str	r2, [r3, #84]	@ 0x54
 8005b82:	e023      	b.n	8005bcc <HAL_TIM_PWM_ConfigChannel+0x214>
 8005b84:	68fb      	ldr	r3, [r7, #12]
 8005b86:	681b      	ldr	r3, [r3, #0]
 8005b88:	68b9      	ldr	r1, [r7, #8]
 8005b8a:	4618      	mov	r0, r3
 8005b8c:	f000 fbee 	bl	800636c <TIM_OC6_SetConfig>
 8005b90:	68fb      	ldr	r3, [r7, #12]
 8005b92:	681b      	ldr	r3, [r3, #0]
 8005b94:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
 8005b96:	68fb      	ldr	r3, [r7, #12]
 8005b98:	681b      	ldr	r3, [r3, #0]
 8005b9a:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8005b9e:	655a      	str	r2, [r3, #84]	@ 0x54
 8005ba0:	68fb      	ldr	r3, [r7, #12]
 8005ba2:	681b      	ldr	r3, [r3, #0]
 8005ba4:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
 8005ba6:	68fb      	ldr	r3, [r7, #12]
 8005ba8:	681b      	ldr	r3, [r3, #0]
 8005baa:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8005bae:	655a      	str	r2, [r3, #84]	@ 0x54
 8005bb0:	68fb      	ldr	r3, [r7, #12]
 8005bb2:	681b      	ldr	r3, [r3, #0]
 8005bb4:	6d59      	ldr	r1, [r3, #84]	@ 0x54
 8005bb6:	68bb      	ldr	r3, [r7, #8]
 8005bb8:	691b      	ldr	r3, [r3, #16]
 8005bba:	021a      	lsls	r2, r3, #8
 8005bbc:	68fb      	ldr	r3, [r7, #12]
 8005bbe:	681b      	ldr	r3, [r3, #0]
 8005bc0:	430a      	orrs	r2, r1
 8005bc2:	655a      	str	r2, [r3, #84]	@ 0x54
 8005bc4:	e002      	b.n	8005bcc <HAL_TIM_PWM_ConfigChannel+0x214>
 8005bc6:	2301      	movs	r3, #1
 8005bc8:	75fb      	strb	r3, [r7, #23]
 8005bca:	bf00      	nop
 8005bcc:	68fb      	ldr	r3, [r7, #12]
 8005bce:	2200      	movs	r2, #0
 8005bd0:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8005bd4:	7dfb      	ldrb	r3, [r7, #23]
 8005bd6:	4618      	mov	r0, r3
 8005bd8:	3718      	adds	r7, #24
 8005bda:	46bd      	mov	sp, r7
 8005bdc:	bd80      	pop	{r7, pc}
 8005bde:	bf00      	nop

08005be0 <HAL_TIM_ConfigClockSource>:
 8005be0:	b580      	push	{r7, lr}
 8005be2:	b084      	sub	sp, #16
 8005be4:	af00      	add	r7, sp, #0
 8005be6:	6078      	str	r0, [r7, #4]
 8005be8:	6039      	str	r1, [r7, #0]
 8005bea:	2300      	movs	r3, #0
 8005bec:	73fb      	strb	r3, [r7, #15]
 8005bee:	687b      	ldr	r3, [r7, #4]
 8005bf0:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8005bf4:	2b01      	cmp	r3, #1
 8005bf6:	d101      	bne.n	8005bfc <HAL_TIM_ConfigClockSource+0x1c>
 8005bf8:	2302      	movs	r3, #2
 8005bfa:	e0b6      	b.n	8005d6a <HAL_TIM_ConfigClockSource+0x18a>
 8005bfc:	687b      	ldr	r3, [r7, #4]
 8005bfe:	2201      	movs	r2, #1
 8005c00:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8005c04:	687b      	ldr	r3, [r7, #4]
 8005c06:	2202      	movs	r2, #2
 8005c08:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005c0c:	687b      	ldr	r3, [r7, #4]
 8005c0e:	681b      	ldr	r3, [r3, #0]
 8005c10:	689b      	ldr	r3, [r3, #8]
 8005c12:	60bb      	str	r3, [r7, #8]
 8005c14:	68bb      	ldr	r3, [r7, #8]
 8005c16:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8005c1a:	f023 0377 	bic.w	r3, r3, #119	@ 0x77
 8005c1e:	60bb      	str	r3, [r7, #8]
 8005c20:	68bb      	ldr	r3, [r7, #8]
 8005c22:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 8005c26:	60bb      	str	r3, [r7, #8]
 8005c28:	687b      	ldr	r3, [r7, #4]
 8005c2a:	681b      	ldr	r3, [r3, #0]
 8005c2c:	68ba      	ldr	r2, [r7, #8]
 8005c2e:	609a      	str	r2, [r3, #8]
 8005c30:	683b      	ldr	r3, [r7, #0]
 8005c32:	681b      	ldr	r3, [r3, #0]
 8005c34:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8005c38:	d03e      	beq.n	8005cb8 <HAL_TIM_ConfigClockSource+0xd8>
 8005c3a:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8005c3e:	f200 8087 	bhi.w	8005d50 <HAL_TIM_ConfigClockSource+0x170>
 8005c42:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8005c46:	f000 8086 	beq.w	8005d56 <HAL_TIM_ConfigClockSource+0x176>
 8005c4a:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8005c4e:	d87f      	bhi.n	8005d50 <HAL_TIM_ConfigClockSource+0x170>
 8005c50:	2b70      	cmp	r3, #112	@ 0x70
 8005c52:	d01a      	beq.n	8005c8a <HAL_TIM_ConfigClockSource+0xaa>
 8005c54:	2b70      	cmp	r3, #112	@ 0x70
 8005c56:	d87b      	bhi.n	8005d50 <HAL_TIM_ConfigClockSource+0x170>
 8005c58:	2b60      	cmp	r3, #96	@ 0x60
 8005c5a:	d050      	beq.n	8005cfe <HAL_TIM_ConfigClockSource+0x11e>
 8005c5c:	2b60      	cmp	r3, #96	@ 0x60
 8005c5e:	d877      	bhi.n	8005d50 <HAL_TIM_ConfigClockSource+0x170>
 8005c60:	2b50      	cmp	r3, #80	@ 0x50
 8005c62:	d03c      	beq.n	8005cde <HAL_TIM_ConfigClockSource+0xfe>
 8005c64:	2b50      	cmp	r3, #80	@ 0x50
 8005c66:	d873      	bhi.n	8005d50 <HAL_TIM_ConfigClockSource+0x170>
 8005c68:	2b40      	cmp	r3, #64	@ 0x40
 8005c6a:	d058      	beq.n	8005d1e <HAL_TIM_ConfigClockSource+0x13e>
 8005c6c:	2b40      	cmp	r3, #64	@ 0x40
 8005c6e:	d86f      	bhi.n	8005d50 <HAL_TIM_ConfigClockSource+0x170>
 8005c70:	2b30      	cmp	r3, #48	@ 0x30
 8005c72:	d064      	beq.n	8005d3e <HAL_TIM_ConfigClockSource+0x15e>
 8005c74:	2b30      	cmp	r3, #48	@ 0x30
 8005c76:	d86b      	bhi.n	8005d50 <HAL_TIM_ConfigClockSource+0x170>
 8005c78:	2b20      	cmp	r3, #32
 8005c7a:	d060      	beq.n	8005d3e <HAL_TIM_ConfigClockSource+0x15e>
 8005c7c:	2b20      	cmp	r3, #32
 8005c7e:	d867      	bhi.n	8005d50 <HAL_TIM_ConfigClockSource+0x170>
 8005c80:	2b00      	cmp	r3, #0
 8005c82:	d05c      	beq.n	8005d3e <HAL_TIM_ConfigClockSource+0x15e>
 8005c84:	2b10      	cmp	r3, #16
 8005c86:	d05a      	beq.n	8005d3e <HAL_TIM_ConfigClockSource+0x15e>
 8005c88:	e062      	b.n	8005d50 <HAL_TIM_ConfigClockSource+0x170>
 8005c8a:	687b      	ldr	r3, [r7, #4]
 8005c8c:	6818      	ldr	r0, [r3, #0]
 8005c8e:	683b      	ldr	r3, [r7, #0]
 8005c90:	6899      	ldr	r1, [r3, #8]
 8005c92:	683b      	ldr	r3, [r7, #0]
 8005c94:	685a      	ldr	r2, [r3, #4]
 8005c96:	683b      	ldr	r3, [r7, #0]
 8005c98:	68db      	ldr	r3, [r3, #12]
 8005c9a:	f000 fc41 	bl	8006520 <TIM_ETR_SetConfig>
 8005c9e:	687b      	ldr	r3, [r7, #4]
 8005ca0:	681b      	ldr	r3, [r3, #0]
 8005ca2:	689b      	ldr	r3, [r3, #8]
 8005ca4:	60bb      	str	r3, [r7, #8]
 8005ca6:	68bb      	ldr	r3, [r7, #8]
 8005ca8:	f043 0377 	orr.w	r3, r3, #119	@ 0x77
 8005cac:	60bb      	str	r3, [r7, #8]
 8005cae:	687b      	ldr	r3, [r7, #4]
 8005cb0:	681b      	ldr	r3, [r3, #0]
 8005cb2:	68ba      	ldr	r2, [r7, #8]
 8005cb4:	609a      	str	r2, [r3, #8]
 8005cb6:	e04f      	b.n	8005d58 <HAL_TIM_ConfigClockSource+0x178>
 8005cb8:	687b      	ldr	r3, [r7, #4]
 8005cba:	6818      	ldr	r0, [r3, #0]
 8005cbc:	683b      	ldr	r3, [r7, #0]
 8005cbe:	6899      	ldr	r1, [r3, #8]
 8005cc0:	683b      	ldr	r3, [r7, #0]
 8005cc2:	685a      	ldr	r2, [r3, #4]
 8005cc4:	683b      	ldr	r3, [r7, #0]
 8005cc6:	68db      	ldr	r3, [r3, #12]
 8005cc8:	f000 fc2a 	bl	8006520 <TIM_ETR_SetConfig>
 8005ccc:	687b      	ldr	r3, [r7, #4]
 8005cce:	681b      	ldr	r3, [r3, #0]
 8005cd0:	689a      	ldr	r2, [r3, #8]
 8005cd2:	687b      	ldr	r3, [r7, #4]
 8005cd4:	681b      	ldr	r3, [r3, #0]
 8005cd6:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8005cda:	609a      	str	r2, [r3, #8]
 8005cdc:	e03c      	b.n	8005d58 <HAL_TIM_ConfigClockSource+0x178>
 8005cde:	687b      	ldr	r3, [r7, #4]
 8005ce0:	6818      	ldr	r0, [r3, #0]
 8005ce2:	683b      	ldr	r3, [r7, #0]
 8005ce4:	6859      	ldr	r1, [r3, #4]
 8005ce6:	683b      	ldr	r3, [r7, #0]
 8005ce8:	68db      	ldr	r3, [r3, #12]
 8005cea:	461a      	mov	r2, r3
 8005cec:	f000 fb9e 	bl	800642c <TIM_TI1_ConfigInputStage>
 8005cf0:	687b      	ldr	r3, [r7, #4]
 8005cf2:	681b      	ldr	r3, [r3, #0]
 8005cf4:	2150      	movs	r1, #80	@ 0x50
 8005cf6:	4618      	mov	r0, r3
 8005cf8:	f000 fbf7 	bl	80064ea <TIM_ITRx_SetConfig>
 8005cfc:	e02c      	b.n	8005d58 <HAL_TIM_ConfigClockSource+0x178>
 8005cfe:	687b      	ldr	r3, [r7, #4]
 8005d00:	6818      	ldr	r0, [r3, #0]
 8005d02:	683b      	ldr	r3, [r7, #0]
 8005d04:	6859      	ldr	r1, [r3, #4]
 8005d06:	683b      	ldr	r3, [r7, #0]
 8005d08:	68db      	ldr	r3, [r3, #12]
 8005d0a:	461a      	mov	r2, r3
 8005d0c:	f000 fbbd 	bl	800648a <TIM_TI2_ConfigInputStage>
 8005d10:	687b      	ldr	r3, [r7, #4]
 8005d12:	681b      	ldr	r3, [r3, #0]
 8005d14:	2160      	movs	r1, #96	@ 0x60
 8005d16:	4618      	mov	r0, r3
 8005d18:	f000 fbe7 	bl	80064ea <TIM_ITRx_SetConfig>
 8005d1c:	e01c      	b.n	8005d58 <HAL_TIM_ConfigClockSource+0x178>
 8005d1e:	687b      	ldr	r3, [r7, #4]
 8005d20:	6818      	ldr	r0, [r3, #0]
 8005d22:	683b      	ldr	r3, [r7, #0]
 8005d24:	6859      	ldr	r1, [r3, #4]
 8005d26:	683b      	ldr	r3, [r7, #0]
 8005d28:	68db      	ldr	r3, [r3, #12]
 8005d2a:	461a      	mov	r2, r3
 8005d2c:	f000 fb7e 	bl	800642c <TIM_TI1_ConfigInputStage>
 8005d30:	687b      	ldr	r3, [r7, #4]
 8005d32:	681b      	ldr	r3, [r3, #0]
 8005d34:	2140      	movs	r1, #64	@ 0x40
 8005d36:	4618      	mov	r0, r3
 8005d38:	f000 fbd7 	bl	80064ea <TIM_ITRx_SetConfig>
 8005d3c:	e00c      	b.n	8005d58 <HAL_TIM_ConfigClockSource+0x178>
 8005d3e:	687b      	ldr	r3, [r7, #4]
 8005d40:	681a      	ldr	r2, [r3, #0]
 8005d42:	683b      	ldr	r3, [r7, #0]
 8005d44:	681b      	ldr	r3, [r3, #0]
 8005d46:	4619      	mov	r1, r3
 8005d48:	4610      	mov	r0, r2
 8005d4a:	f000 fbce 	bl	80064ea <TIM_ITRx_SetConfig>
 8005d4e:	e003      	b.n	8005d58 <HAL_TIM_ConfigClockSource+0x178>
 8005d50:	2301      	movs	r3, #1
 8005d52:	73fb      	strb	r3, [r7, #15]
 8005d54:	e000      	b.n	8005d58 <HAL_TIM_ConfigClockSource+0x178>
 8005d56:	bf00      	nop
 8005d58:	687b      	ldr	r3, [r7, #4]
 8005d5a:	2201      	movs	r2, #1
 8005d5c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005d60:	687b      	ldr	r3, [r7, #4]
 8005d62:	2200      	movs	r2, #0
 8005d64:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8005d68:	7bfb      	ldrb	r3, [r7, #15]
 8005d6a:	4618      	mov	r0, r3
 8005d6c:	3710      	adds	r7, #16
 8005d6e:	46bd      	mov	sp, r7
 8005d70:	bd80      	pop	{r7, pc}

08005d72 <HAL_TIM_PeriodElapsedCallback>:
 8005d72:	b480      	push	{r7}
 8005d74:	b083      	sub	sp, #12
 8005d76:	af00      	add	r7, sp, #0
 8005d78:	6078      	str	r0, [r7, #4]
 8005d7a:	bf00      	nop
 8005d7c:	370c      	adds	r7, #12
 8005d7e:	46bd      	mov	sp, r7
 8005d80:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005d84:	4770      	bx	lr

08005d86 <HAL_TIM_OC_DelayElapsedCallback>:
 8005d86:	b480      	push	{r7}
 8005d88:	b083      	sub	sp, #12
 8005d8a:	af00      	add	r7, sp, #0
 8005d8c:	6078      	str	r0, [r7, #4]
 8005d8e:	bf00      	nop
 8005d90:	370c      	adds	r7, #12
 8005d92:	46bd      	mov	sp, r7
 8005d94:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005d98:	4770      	bx	lr

08005d9a <HAL_TIM_IC_CaptureCallback>:
 8005d9a:	b480      	push	{r7}
 8005d9c:	b083      	sub	sp, #12
 8005d9e:	af00      	add	r7, sp, #0
 8005da0:	6078      	str	r0, [r7, #4]
 8005da2:	bf00      	nop
 8005da4:	370c      	adds	r7, #12
 8005da6:	46bd      	mov	sp, r7
 8005da8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005dac:	4770      	bx	lr

08005dae <HAL_TIM_PWM_PulseFinishedCallback>:
 8005dae:	b480      	push	{r7}
 8005db0:	b083      	sub	sp, #12
 8005db2:	af00      	add	r7, sp, #0
 8005db4:	6078      	str	r0, [r7, #4]
 8005db6:	bf00      	nop
 8005db8:	370c      	adds	r7, #12
 8005dba:	46bd      	mov	sp, r7
 8005dbc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005dc0:	4770      	bx	lr

08005dc2 <HAL_TIM_TriggerCallback>:
 8005dc2:	b480      	push	{r7}
 8005dc4:	b083      	sub	sp, #12
 8005dc6:	af00      	add	r7, sp, #0
 8005dc8:	6078      	str	r0, [r7, #4]
 8005dca:	bf00      	nop
 8005dcc:	370c      	adds	r7, #12
 8005dce:	46bd      	mov	sp, r7
 8005dd0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005dd4:	4770      	bx	lr
	...

08005dd8 <TIM_Base_SetConfig>:
 8005dd8:	b480      	push	{r7}
 8005dda:	b085      	sub	sp, #20
 8005ddc:	af00      	add	r7, sp, #0
 8005dde:	6078      	str	r0, [r7, #4]
 8005de0:	6039      	str	r1, [r7, #0]
 8005de2:	687b      	ldr	r3, [r7, #4]
 8005de4:	681b      	ldr	r3, [r3, #0]
 8005de6:	60fb      	str	r3, [r7, #12]
 8005de8:	687b      	ldr	r3, [r7, #4]
 8005dea:	4a38      	ldr	r2, [pc, #224]	@ (8005ecc <TIM_Base_SetConfig+0xf4>)
 8005dec:	4293      	cmp	r3, r2
 8005dee:	d007      	beq.n	8005e00 <TIM_Base_SetConfig+0x28>
 8005df0:	687b      	ldr	r3, [r7, #4]
 8005df2:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8005df6:	d003      	beq.n	8005e00 <TIM_Base_SetConfig+0x28>
 8005df8:	687b      	ldr	r3, [r7, #4]
 8005dfa:	4a35      	ldr	r2, [pc, #212]	@ (8005ed0 <TIM_Base_SetConfig+0xf8>)
 8005dfc:	4293      	cmp	r3, r2
 8005dfe:	d108      	bne.n	8005e12 <TIM_Base_SetConfig+0x3a>
 8005e00:	68fb      	ldr	r3, [r7, #12]
 8005e02:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8005e06:	60fb      	str	r3, [r7, #12]
 8005e08:	683b      	ldr	r3, [r7, #0]
 8005e0a:	685b      	ldr	r3, [r3, #4]
 8005e0c:	68fa      	ldr	r2, [r7, #12]
 8005e0e:	4313      	orrs	r3, r2
 8005e10:	60fb      	str	r3, [r7, #12]
 8005e12:	687b      	ldr	r3, [r7, #4]
 8005e14:	4a2d      	ldr	r2, [pc, #180]	@ (8005ecc <TIM_Base_SetConfig+0xf4>)
 8005e16:	4293      	cmp	r3, r2
 8005e18:	d013      	beq.n	8005e42 <TIM_Base_SetConfig+0x6a>
 8005e1a:	687b      	ldr	r3, [r7, #4]
 8005e1c:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8005e20:	d00f      	beq.n	8005e42 <TIM_Base_SetConfig+0x6a>
 8005e22:	687b      	ldr	r3, [r7, #4]
 8005e24:	4a2a      	ldr	r2, [pc, #168]	@ (8005ed0 <TIM_Base_SetConfig+0xf8>)
 8005e26:	4293      	cmp	r3, r2
 8005e28:	d00b      	beq.n	8005e42 <TIM_Base_SetConfig+0x6a>
 8005e2a:	687b      	ldr	r3, [r7, #4]
 8005e2c:	4a29      	ldr	r2, [pc, #164]	@ (8005ed4 <TIM_Base_SetConfig+0xfc>)
 8005e2e:	4293      	cmp	r3, r2
 8005e30:	d007      	beq.n	8005e42 <TIM_Base_SetConfig+0x6a>
 8005e32:	687b      	ldr	r3, [r7, #4]
 8005e34:	4a28      	ldr	r2, [pc, #160]	@ (8005ed8 <TIM_Base_SetConfig+0x100>)
 8005e36:	4293      	cmp	r3, r2
 8005e38:	d003      	beq.n	8005e42 <TIM_Base_SetConfig+0x6a>
 8005e3a:	687b      	ldr	r3, [r7, #4]
 8005e3c:	4a27      	ldr	r2, [pc, #156]	@ (8005edc <TIM_Base_SetConfig+0x104>)
 8005e3e:	4293      	cmp	r3, r2
 8005e40:	d108      	bne.n	8005e54 <TIM_Base_SetConfig+0x7c>
 8005e42:	68fb      	ldr	r3, [r7, #12]
 8005e44:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8005e48:	60fb      	str	r3, [r7, #12]
 8005e4a:	683b      	ldr	r3, [r7, #0]
 8005e4c:	68db      	ldr	r3, [r3, #12]
 8005e4e:	68fa      	ldr	r2, [r7, #12]
 8005e50:	4313      	orrs	r3, r2
 8005e52:	60fb      	str	r3, [r7, #12]
 8005e54:	68fb      	ldr	r3, [r7, #12]
 8005e56:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 8005e5a:	683b      	ldr	r3, [r7, #0]
 8005e5c:	695b      	ldr	r3, [r3, #20]
 8005e5e:	4313      	orrs	r3, r2
 8005e60:	60fb      	str	r3, [r7, #12]
 8005e62:	687b      	ldr	r3, [r7, #4]
 8005e64:	68fa      	ldr	r2, [r7, #12]
 8005e66:	601a      	str	r2, [r3, #0]
 8005e68:	683b      	ldr	r3, [r7, #0]
 8005e6a:	689a      	ldr	r2, [r3, #8]
 8005e6c:	687b      	ldr	r3, [r7, #4]
 8005e6e:	62da      	str	r2, [r3, #44]	@ 0x2c
 8005e70:	683b      	ldr	r3, [r7, #0]
 8005e72:	681a      	ldr	r2, [r3, #0]
 8005e74:	687b      	ldr	r3, [r7, #4]
 8005e76:	629a      	str	r2, [r3, #40]	@ 0x28
 8005e78:	687b      	ldr	r3, [r7, #4]
 8005e7a:	4a14      	ldr	r2, [pc, #80]	@ (8005ecc <TIM_Base_SetConfig+0xf4>)
 8005e7c:	4293      	cmp	r3, r2
 8005e7e:	d00b      	beq.n	8005e98 <TIM_Base_SetConfig+0xc0>
 8005e80:	687b      	ldr	r3, [r7, #4]
 8005e82:	4a14      	ldr	r2, [pc, #80]	@ (8005ed4 <TIM_Base_SetConfig+0xfc>)
 8005e84:	4293      	cmp	r3, r2
 8005e86:	d007      	beq.n	8005e98 <TIM_Base_SetConfig+0xc0>
 8005e88:	687b      	ldr	r3, [r7, #4]
 8005e8a:	4a13      	ldr	r2, [pc, #76]	@ (8005ed8 <TIM_Base_SetConfig+0x100>)
 8005e8c:	4293      	cmp	r3, r2
 8005e8e:	d003      	beq.n	8005e98 <TIM_Base_SetConfig+0xc0>
 8005e90:	687b      	ldr	r3, [r7, #4]
 8005e92:	4a12      	ldr	r2, [pc, #72]	@ (8005edc <TIM_Base_SetConfig+0x104>)
 8005e94:	4293      	cmp	r3, r2
 8005e96:	d103      	bne.n	8005ea0 <TIM_Base_SetConfig+0xc8>
 8005e98:	683b      	ldr	r3, [r7, #0]
 8005e9a:	691a      	ldr	r2, [r3, #16]
 8005e9c:	687b      	ldr	r3, [r7, #4]
 8005e9e:	631a      	str	r2, [r3, #48]	@ 0x30
 8005ea0:	687b      	ldr	r3, [r7, #4]
 8005ea2:	2201      	movs	r2, #1
 8005ea4:	615a      	str	r2, [r3, #20]
 8005ea6:	687b      	ldr	r3, [r7, #4]
 8005ea8:	691b      	ldr	r3, [r3, #16]
 8005eaa:	f003 0301 	and.w	r3, r3, #1
 8005eae:	2b01      	cmp	r3, #1
 8005eb0:	d105      	bne.n	8005ebe <TIM_Base_SetConfig+0xe6>
 8005eb2:	687b      	ldr	r3, [r7, #4]
 8005eb4:	691b      	ldr	r3, [r3, #16]
 8005eb6:	f023 0201 	bic.w	r2, r3, #1
 8005eba:	687b      	ldr	r3, [r7, #4]
 8005ebc:	611a      	str	r2, [r3, #16]
 8005ebe:	bf00      	nop
 8005ec0:	3714      	adds	r7, #20
 8005ec2:	46bd      	mov	sp, r7
 8005ec4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005ec8:	4770      	bx	lr
 8005eca:	bf00      	nop
 8005ecc:	40012c00 	.word	0x40012c00
 8005ed0:	40000400 	.word	0x40000400
 8005ed4:	40014000 	.word	0x40014000
 8005ed8:	40014400 	.word	0x40014400
 8005edc:	40014800 	.word	0x40014800

08005ee0 <TIM_OC1_SetConfig>:
 8005ee0:	b480      	push	{r7}
 8005ee2:	b087      	sub	sp, #28
 8005ee4:	af00      	add	r7, sp, #0
 8005ee6:	6078      	str	r0, [r7, #4]
 8005ee8:	6039      	str	r1, [r7, #0]
 8005eea:	687b      	ldr	r3, [r7, #4]
 8005eec:	6a1b      	ldr	r3, [r3, #32]
 8005eee:	617b      	str	r3, [r7, #20]
 8005ef0:	687b      	ldr	r3, [r7, #4]
 8005ef2:	6a1b      	ldr	r3, [r3, #32]
 8005ef4:	f023 0201 	bic.w	r2, r3, #1
 8005ef8:	687b      	ldr	r3, [r7, #4]
 8005efa:	621a      	str	r2, [r3, #32]
 8005efc:	687b      	ldr	r3, [r7, #4]
 8005efe:	685b      	ldr	r3, [r3, #4]
 8005f00:	613b      	str	r3, [r7, #16]
 8005f02:	687b      	ldr	r3, [r7, #4]
 8005f04:	699b      	ldr	r3, [r3, #24]
 8005f06:	60fb      	str	r3, [r7, #12]
 8005f08:	68fb      	ldr	r3, [r7, #12]
 8005f0a:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8005f0e:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8005f12:	60fb      	str	r3, [r7, #12]
 8005f14:	68fb      	ldr	r3, [r7, #12]
 8005f16:	f023 0303 	bic.w	r3, r3, #3
 8005f1a:	60fb      	str	r3, [r7, #12]
 8005f1c:	683b      	ldr	r3, [r7, #0]
 8005f1e:	681b      	ldr	r3, [r3, #0]
 8005f20:	68fa      	ldr	r2, [r7, #12]
 8005f22:	4313      	orrs	r3, r2
 8005f24:	60fb      	str	r3, [r7, #12]
 8005f26:	697b      	ldr	r3, [r7, #20]
 8005f28:	f023 0302 	bic.w	r3, r3, #2
 8005f2c:	617b      	str	r3, [r7, #20]
 8005f2e:	683b      	ldr	r3, [r7, #0]
 8005f30:	689b      	ldr	r3, [r3, #8]
 8005f32:	697a      	ldr	r2, [r7, #20]
 8005f34:	4313      	orrs	r3, r2
 8005f36:	617b      	str	r3, [r7, #20]
 8005f38:	687b      	ldr	r3, [r7, #4]
 8005f3a:	4a28      	ldr	r2, [pc, #160]	@ (8005fdc <TIM_OC1_SetConfig+0xfc>)
 8005f3c:	4293      	cmp	r3, r2
 8005f3e:	d00b      	beq.n	8005f58 <TIM_OC1_SetConfig+0x78>
 8005f40:	687b      	ldr	r3, [r7, #4]
 8005f42:	4a27      	ldr	r2, [pc, #156]	@ (8005fe0 <TIM_OC1_SetConfig+0x100>)
 8005f44:	4293      	cmp	r3, r2
 8005f46:	d007      	beq.n	8005f58 <TIM_OC1_SetConfig+0x78>
 8005f48:	687b      	ldr	r3, [r7, #4]
 8005f4a:	4a26      	ldr	r2, [pc, #152]	@ (8005fe4 <TIM_OC1_SetConfig+0x104>)
 8005f4c:	4293      	cmp	r3, r2
 8005f4e:	d003      	beq.n	8005f58 <TIM_OC1_SetConfig+0x78>
 8005f50:	687b      	ldr	r3, [r7, #4]
 8005f52:	4a25      	ldr	r2, [pc, #148]	@ (8005fe8 <TIM_OC1_SetConfig+0x108>)
 8005f54:	4293      	cmp	r3, r2
 8005f56:	d10c      	bne.n	8005f72 <TIM_OC1_SetConfig+0x92>
 8005f58:	697b      	ldr	r3, [r7, #20]
 8005f5a:	f023 0308 	bic.w	r3, r3, #8
 8005f5e:	617b      	str	r3, [r7, #20]
 8005f60:	683b      	ldr	r3, [r7, #0]
 8005f62:	68db      	ldr	r3, [r3, #12]
 8005f64:	697a      	ldr	r2, [r7, #20]
 8005f66:	4313      	orrs	r3, r2
 8005f68:	617b      	str	r3, [r7, #20]
 8005f6a:	697b      	ldr	r3, [r7, #20]
 8005f6c:	f023 0304 	bic.w	r3, r3, #4
 8005f70:	617b      	str	r3, [r7, #20]
 8005f72:	687b      	ldr	r3, [r7, #4]
 8005f74:	4a19      	ldr	r2, [pc, #100]	@ (8005fdc <TIM_OC1_SetConfig+0xfc>)
 8005f76:	4293      	cmp	r3, r2
 8005f78:	d00b      	beq.n	8005f92 <TIM_OC1_SetConfig+0xb2>
 8005f7a:	687b      	ldr	r3, [r7, #4]
 8005f7c:	4a18      	ldr	r2, [pc, #96]	@ (8005fe0 <TIM_OC1_SetConfig+0x100>)
 8005f7e:	4293      	cmp	r3, r2
 8005f80:	d007      	beq.n	8005f92 <TIM_OC1_SetConfig+0xb2>
 8005f82:	687b      	ldr	r3, [r7, #4]
 8005f84:	4a17      	ldr	r2, [pc, #92]	@ (8005fe4 <TIM_OC1_SetConfig+0x104>)
 8005f86:	4293      	cmp	r3, r2
 8005f88:	d003      	beq.n	8005f92 <TIM_OC1_SetConfig+0xb2>
 8005f8a:	687b      	ldr	r3, [r7, #4]
 8005f8c:	4a16      	ldr	r2, [pc, #88]	@ (8005fe8 <TIM_OC1_SetConfig+0x108>)
 8005f8e:	4293      	cmp	r3, r2
 8005f90:	d111      	bne.n	8005fb6 <TIM_OC1_SetConfig+0xd6>
 8005f92:	693b      	ldr	r3, [r7, #16]
 8005f94:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8005f98:	613b      	str	r3, [r7, #16]
 8005f9a:	693b      	ldr	r3, [r7, #16]
 8005f9c:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8005fa0:	613b      	str	r3, [r7, #16]
 8005fa2:	683b      	ldr	r3, [r7, #0]
 8005fa4:	695b      	ldr	r3, [r3, #20]
 8005fa6:	693a      	ldr	r2, [r7, #16]
 8005fa8:	4313      	orrs	r3, r2
 8005faa:	613b      	str	r3, [r7, #16]
 8005fac:	683b      	ldr	r3, [r7, #0]
 8005fae:	699b      	ldr	r3, [r3, #24]
 8005fb0:	693a      	ldr	r2, [r7, #16]
 8005fb2:	4313      	orrs	r3, r2
 8005fb4:	613b      	str	r3, [r7, #16]
 8005fb6:	687b      	ldr	r3, [r7, #4]
 8005fb8:	693a      	ldr	r2, [r7, #16]
 8005fba:	605a      	str	r2, [r3, #4]
 8005fbc:	687b      	ldr	r3, [r7, #4]
 8005fbe:	68fa      	ldr	r2, [r7, #12]
 8005fc0:	619a      	str	r2, [r3, #24]
 8005fc2:	683b      	ldr	r3, [r7, #0]
 8005fc4:	685a      	ldr	r2, [r3, #4]
 8005fc6:	687b      	ldr	r3, [r7, #4]
 8005fc8:	635a      	str	r2, [r3, #52]	@ 0x34
 8005fca:	687b      	ldr	r3, [r7, #4]
 8005fcc:	697a      	ldr	r2, [r7, #20]
 8005fce:	621a      	str	r2, [r3, #32]
 8005fd0:	bf00      	nop
 8005fd2:	371c      	adds	r7, #28
 8005fd4:	46bd      	mov	sp, r7
 8005fd6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005fda:	4770      	bx	lr
 8005fdc:	40012c00 	.word	0x40012c00
 8005fe0:	40014000 	.word	0x40014000
 8005fe4:	40014400 	.word	0x40014400
 8005fe8:	40014800 	.word	0x40014800

08005fec <TIM_OC2_SetConfig>:
 8005fec:	b480      	push	{r7}
 8005fee:	b087      	sub	sp, #28
 8005ff0:	af00      	add	r7, sp, #0
 8005ff2:	6078      	str	r0, [r7, #4]
 8005ff4:	6039      	str	r1, [r7, #0]
 8005ff6:	687b      	ldr	r3, [r7, #4]
 8005ff8:	6a1b      	ldr	r3, [r3, #32]
 8005ffa:	617b      	str	r3, [r7, #20]
 8005ffc:	687b      	ldr	r3, [r7, #4]
 8005ffe:	6a1b      	ldr	r3, [r3, #32]
 8006000:	f023 0210 	bic.w	r2, r3, #16
 8006004:	687b      	ldr	r3, [r7, #4]
 8006006:	621a      	str	r2, [r3, #32]
 8006008:	687b      	ldr	r3, [r7, #4]
 800600a:	685b      	ldr	r3, [r3, #4]
 800600c:	613b      	str	r3, [r7, #16]
 800600e:	687b      	ldr	r3, [r7, #4]
 8006010:	699b      	ldr	r3, [r3, #24]
 8006012:	60fb      	str	r3, [r7, #12]
 8006014:	68fb      	ldr	r3, [r7, #12]
 8006016:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 800601a:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 800601e:	60fb      	str	r3, [r7, #12]
 8006020:	68fb      	ldr	r3, [r7, #12]
 8006022:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8006026:	60fb      	str	r3, [r7, #12]
 8006028:	683b      	ldr	r3, [r7, #0]
 800602a:	681b      	ldr	r3, [r3, #0]
 800602c:	021b      	lsls	r3, r3, #8
 800602e:	68fa      	ldr	r2, [r7, #12]
 8006030:	4313      	orrs	r3, r2
 8006032:	60fb      	str	r3, [r7, #12]
 8006034:	697b      	ldr	r3, [r7, #20]
 8006036:	f023 0320 	bic.w	r3, r3, #32
 800603a:	617b      	str	r3, [r7, #20]
 800603c:	683b      	ldr	r3, [r7, #0]
 800603e:	689b      	ldr	r3, [r3, #8]
 8006040:	011b      	lsls	r3, r3, #4
 8006042:	697a      	ldr	r2, [r7, #20]
 8006044:	4313      	orrs	r3, r2
 8006046:	617b      	str	r3, [r7, #20]
 8006048:	687b      	ldr	r3, [r7, #4]
 800604a:	4a24      	ldr	r2, [pc, #144]	@ (80060dc <TIM_OC2_SetConfig+0xf0>)
 800604c:	4293      	cmp	r3, r2
 800604e:	d10d      	bne.n	800606c <TIM_OC2_SetConfig+0x80>
 8006050:	697b      	ldr	r3, [r7, #20]
 8006052:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8006056:	617b      	str	r3, [r7, #20]
 8006058:	683b      	ldr	r3, [r7, #0]
 800605a:	68db      	ldr	r3, [r3, #12]
 800605c:	011b      	lsls	r3, r3, #4
 800605e:	697a      	ldr	r2, [r7, #20]
 8006060:	4313      	orrs	r3, r2
 8006062:	617b      	str	r3, [r7, #20]
 8006064:	697b      	ldr	r3, [r7, #20]
 8006066:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 800606a:	617b      	str	r3, [r7, #20]
 800606c:	687b      	ldr	r3, [r7, #4]
 800606e:	4a1b      	ldr	r2, [pc, #108]	@ (80060dc <TIM_OC2_SetConfig+0xf0>)
 8006070:	4293      	cmp	r3, r2
 8006072:	d00b      	beq.n	800608c <TIM_OC2_SetConfig+0xa0>
 8006074:	687b      	ldr	r3, [r7, #4]
 8006076:	4a1a      	ldr	r2, [pc, #104]	@ (80060e0 <TIM_OC2_SetConfig+0xf4>)
 8006078:	4293      	cmp	r3, r2
 800607a:	d007      	beq.n	800608c <TIM_OC2_SetConfig+0xa0>
 800607c:	687b      	ldr	r3, [r7, #4]
 800607e:	4a19      	ldr	r2, [pc, #100]	@ (80060e4 <TIM_OC2_SetConfig+0xf8>)
 8006080:	4293      	cmp	r3, r2
 8006082:	d003      	beq.n	800608c <TIM_OC2_SetConfig+0xa0>
 8006084:	687b      	ldr	r3, [r7, #4]
 8006086:	4a18      	ldr	r2, [pc, #96]	@ (80060e8 <TIM_OC2_SetConfig+0xfc>)
 8006088:	4293      	cmp	r3, r2
 800608a:	d113      	bne.n	80060b4 <TIM_OC2_SetConfig+0xc8>
 800608c:	693b      	ldr	r3, [r7, #16]
 800608e:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8006092:	613b      	str	r3, [r7, #16]
 8006094:	693b      	ldr	r3, [r7, #16]
 8006096:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 800609a:	613b      	str	r3, [r7, #16]
 800609c:	683b      	ldr	r3, [r7, #0]
 800609e:	695b      	ldr	r3, [r3, #20]
 80060a0:	009b      	lsls	r3, r3, #2
 80060a2:	693a      	ldr	r2, [r7, #16]
 80060a4:	4313      	orrs	r3, r2
 80060a6:	613b      	str	r3, [r7, #16]
 80060a8:	683b      	ldr	r3, [r7, #0]
 80060aa:	699b      	ldr	r3, [r3, #24]
 80060ac:	009b      	lsls	r3, r3, #2
 80060ae:	693a      	ldr	r2, [r7, #16]
 80060b0:	4313      	orrs	r3, r2
 80060b2:	613b      	str	r3, [r7, #16]
 80060b4:	687b      	ldr	r3, [r7, #4]
 80060b6:	693a      	ldr	r2, [r7, #16]
 80060b8:	605a      	str	r2, [r3, #4]
 80060ba:	687b      	ldr	r3, [r7, #4]
 80060bc:	68fa      	ldr	r2, [r7, #12]
 80060be:	619a      	str	r2, [r3, #24]
 80060c0:	683b      	ldr	r3, [r7, #0]
 80060c2:	685a      	ldr	r2, [r3, #4]
 80060c4:	687b      	ldr	r3, [r7, #4]
 80060c6:	639a      	str	r2, [r3, #56]	@ 0x38
 80060c8:	687b      	ldr	r3, [r7, #4]
 80060ca:	697a      	ldr	r2, [r7, #20]
 80060cc:	621a      	str	r2, [r3, #32]
 80060ce:	bf00      	nop
 80060d0:	371c      	adds	r7, #28
 80060d2:	46bd      	mov	sp, r7
 80060d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80060d8:	4770      	bx	lr
 80060da:	bf00      	nop
 80060dc:	40012c00 	.word	0x40012c00
 80060e0:	40014000 	.word	0x40014000
 80060e4:	40014400 	.word	0x40014400
 80060e8:	40014800 	.word	0x40014800

080060ec <TIM_OC3_SetConfig>:
 80060ec:	b480      	push	{r7}
 80060ee:	b087      	sub	sp, #28
 80060f0:	af00      	add	r7, sp, #0
 80060f2:	6078      	str	r0, [r7, #4]
 80060f4:	6039      	str	r1, [r7, #0]
 80060f6:	687b      	ldr	r3, [r7, #4]
 80060f8:	6a1b      	ldr	r3, [r3, #32]
 80060fa:	617b      	str	r3, [r7, #20]
 80060fc:	687b      	ldr	r3, [r7, #4]
 80060fe:	6a1b      	ldr	r3, [r3, #32]
 8006100:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 8006104:	687b      	ldr	r3, [r7, #4]
 8006106:	621a      	str	r2, [r3, #32]
 8006108:	687b      	ldr	r3, [r7, #4]
 800610a:	685b      	ldr	r3, [r3, #4]
 800610c:	613b      	str	r3, [r7, #16]
 800610e:	687b      	ldr	r3, [r7, #4]
 8006110:	69db      	ldr	r3, [r3, #28]
 8006112:	60fb      	str	r3, [r7, #12]
 8006114:	68fb      	ldr	r3, [r7, #12]
 8006116:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 800611a:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800611e:	60fb      	str	r3, [r7, #12]
 8006120:	68fb      	ldr	r3, [r7, #12]
 8006122:	f023 0303 	bic.w	r3, r3, #3
 8006126:	60fb      	str	r3, [r7, #12]
 8006128:	683b      	ldr	r3, [r7, #0]
 800612a:	681b      	ldr	r3, [r3, #0]
 800612c:	68fa      	ldr	r2, [r7, #12]
 800612e:	4313      	orrs	r3, r2
 8006130:	60fb      	str	r3, [r7, #12]
 8006132:	697b      	ldr	r3, [r7, #20]
 8006134:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8006138:	617b      	str	r3, [r7, #20]
 800613a:	683b      	ldr	r3, [r7, #0]
 800613c:	689b      	ldr	r3, [r3, #8]
 800613e:	021b      	lsls	r3, r3, #8
 8006140:	697a      	ldr	r2, [r7, #20]
 8006142:	4313      	orrs	r3, r2
 8006144:	617b      	str	r3, [r7, #20]
 8006146:	687b      	ldr	r3, [r7, #4]
 8006148:	4a23      	ldr	r2, [pc, #140]	@ (80061d8 <TIM_OC3_SetConfig+0xec>)
 800614a:	4293      	cmp	r3, r2
 800614c:	d10d      	bne.n	800616a <TIM_OC3_SetConfig+0x7e>
 800614e:	697b      	ldr	r3, [r7, #20]
 8006150:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8006154:	617b      	str	r3, [r7, #20]
 8006156:	683b      	ldr	r3, [r7, #0]
 8006158:	68db      	ldr	r3, [r3, #12]
 800615a:	021b      	lsls	r3, r3, #8
 800615c:	697a      	ldr	r2, [r7, #20]
 800615e:	4313      	orrs	r3, r2
 8006160:	617b      	str	r3, [r7, #20]
 8006162:	697b      	ldr	r3, [r7, #20]
 8006164:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8006168:	617b      	str	r3, [r7, #20]
 800616a:	687b      	ldr	r3, [r7, #4]
 800616c:	4a1a      	ldr	r2, [pc, #104]	@ (80061d8 <TIM_OC3_SetConfig+0xec>)
 800616e:	4293      	cmp	r3, r2
 8006170:	d00b      	beq.n	800618a <TIM_OC3_SetConfig+0x9e>
 8006172:	687b      	ldr	r3, [r7, #4]
 8006174:	4a19      	ldr	r2, [pc, #100]	@ (80061dc <TIM_OC3_SetConfig+0xf0>)
 8006176:	4293      	cmp	r3, r2
 8006178:	d007      	beq.n	800618a <TIM_OC3_SetConfig+0x9e>
 800617a:	687b      	ldr	r3, [r7, #4]
 800617c:	4a18      	ldr	r2, [pc, #96]	@ (80061e0 <TIM_OC3_SetConfig+0xf4>)
 800617e:	4293      	cmp	r3, r2
 8006180:	d003      	beq.n	800618a <TIM_OC3_SetConfig+0x9e>
 8006182:	687b      	ldr	r3, [r7, #4]
 8006184:	4a17      	ldr	r2, [pc, #92]	@ (80061e4 <TIM_OC3_SetConfig+0xf8>)
 8006186:	4293      	cmp	r3, r2
 8006188:	d113      	bne.n	80061b2 <TIM_OC3_SetConfig+0xc6>
 800618a:	693b      	ldr	r3, [r7, #16]
 800618c:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8006190:	613b      	str	r3, [r7, #16]
 8006192:	693b      	ldr	r3, [r7, #16]
 8006194:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8006198:	613b      	str	r3, [r7, #16]
 800619a:	683b      	ldr	r3, [r7, #0]
 800619c:	695b      	ldr	r3, [r3, #20]
 800619e:	011b      	lsls	r3, r3, #4
 80061a0:	693a      	ldr	r2, [r7, #16]
 80061a2:	4313      	orrs	r3, r2
 80061a4:	613b      	str	r3, [r7, #16]
 80061a6:	683b      	ldr	r3, [r7, #0]
 80061a8:	699b      	ldr	r3, [r3, #24]
 80061aa:	011b      	lsls	r3, r3, #4
 80061ac:	693a      	ldr	r2, [r7, #16]
 80061ae:	4313      	orrs	r3, r2
 80061b0:	613b      	str	r3, [r7, #16]
 80061b2:	687b      	ldr	r3, [r7, #4]
 80061b4:	693a      	ldr	r2, [r7, #16]
 80061b6:	605a      	str	r2, [r3, #4]
 80061b8:	687b      	ldr	r3, [r7, #4]
 80061ba:	68fa      	ldr	r2, [r7, #12]
 80061bc:	61da      	str	r2, [r3, #28]
 80061be:	683b      	ldr	r3, [r7, #0]
 80061c0:	685a      	ldr	r2, [r3, #4]
 80061c2:	687b      	ldr	r3, [r7, #4]
 80061c4:	63da      	str	r2, [r3, #60]	@ 0x3c
 80061c6:	687b      	ldr	r3, [r7, #4]
 80061c8:	697a      	ldr	r2, [r7, #20]
 80061ca:	621a      	str	r2, [r3, #32]
 80061cc:	bf00      	nop
 80061ce:	371c      	adds	r7, #28
 80061d0:	46bd      	mov	sp, r7
 80061d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80061d6:	4770      	bx	lr
 80061d8:	40012c00 	.word	0x40012c00
 80061dc:	40014000 	.word	0x40014000
 80061e0:	40014400 	.word	0x40014400
 80061e4:	40014800 	.word	0x40014800

080061e8 <TIM_OC4_SetConfig>:
 80061e8:	b480      	push	{r7}
 80061ea:	b087      	sub	sp, #28
 80061ec:	af00      	add	r7, sp, #0
 80061ee:	6078      	str	r0, [r7, #4]
 80061f0:	6039      	str	r1, [r7, #0]
 80061f2:	687b      	ldr	r3, [r7, #4]
 80061f4:	6a1b      	ldr	r3, [r3, #32]
 80061f6:	613b      	str	r3, [r7, #16]
 80061f8:	687b      	ldr	r3, [r7, #4]
 80061fa:	6a1b      	ldr	r3, [r3, #32]
 80061fc:	f423 5280 	bic.w	r2, r3, #4096	@ 0x1000
 8006200:	687b      	ldr	r3, [r7, #4]
 8006202:	621a      	str	r2, [r3, #32]
 8006204:	687b      	ldr	r3, [r7, #4]
 8006206:	685b      	ldr	r3, [r3, #4]
 8006208:	617b      	str	r3, [r7, #20]
 800620a:	687b      	ldr	r3, [r7, #4]
 800620c:	69db      	ldr	r3, [r3, #28]
 800620e:	60fb      	str	r3, [r7, #12]
 8006210:	68fb      	ldr	r3, [r7, #12]
 8006212:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 8006216:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 800621a:	60fb      	str	r3, [r7, #12]
 800621c:	68fb      	ldr	r3, [r7, #12]
 800621e:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8006222:	60fb      	str	r3, [r7, #12]
 8006224:	683b      	ldr	r3, [r7, #0]
 8006226:	681b      	ldr	r3, [r3, #0]
 8006228:	021b      	lsls	r3, r3, #8
 800622a:	68fa      	ldr	r2, [r7, #12]
 800622c:	4313      	orrs	r3, r2
 800622e:	60fb      	str	r3, [r7, #12]
 8006230:	693b      	ldr	r3, [r7, #16]
 8006232:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8006236:	613b      	str	r3, [r7, #16]
 8006238:	683b      	ldr	r3, [r7, #0]
 800623a:	689b      	ldr	r3, [r3, #8]
 800623c:	031b      	lsls	r3, r3, #12
 800623e:	693a      	ldr	r2, [r7, #16]
 8006240:	4313      	orrs	r3, r2
 8006242:	613b      	str	r3, [r7, #16]
 8006244:	687b      	ldr	r3, [r7, #4]
 8006246:	4a16      	ldr	r2, [pc, #88]	@ (80062a0 <TIM_OC4_SetConfig+0xb8>)
 8006248:	4293      	cmp	r3, r2
 800624a:	d00b      	beq.n	8006264 <TIM_OC4_SetConfig+0x7c>
 800624c:	687b      	ldr	r3, [r7, #4]
 800624e:	4a15      	ldr	r2, [pc, #84]	@ (80062a4 <TIM_OC4_SetConfig+0xbc>)
 8006250:	4293      	cmp	r3, r2
 8006252:	d007      	beq.n	8006264 <TIM_OC4_SetConfig+0x7c>
 8006254:	687b      	ldr	r3, [r7, #4]
 8006256:	4a14      	ldr	r2, [pc, #80]	@ (80062a8 <TIM_OC4_SetConfig+0xc0>)
 8006258:	4293      	cmp	r3, r2
 800625a:	d003      	beq.n	8006264 <TIM_OC4_SetConfig+0x7c>
 800625c:	687b      	ldr	r3, [r7, #4]
 800625e:	4a13      	ldr	r2, [pc, #76]	@ (80062ac <TIM_OC4_SetConfig+0xc4>)
 8006260:	4293      	cmp	r3, r2
 8006262:	d109      	bne.n	8006278 <TIM_OC4_SetConfig+0x90>
 8006264:	697b      	ldr	r3, [r7, #20]
 8006266:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 800626a:	617b      	str	r3, [r7, #20]
 800626c:	683b      	ldr	r3, [r7, #0]
 800626e:	695b      	ldr	r3, [r3, #20]
 8006270:	019b      	lsls	r3, r3, #6
 8006272:	697a      	ldr	r2, [r7, #20]
 8006274:	4313      	orrs	r3, r2
 8006276:	617b      	str	r3, [r7, #20]
 8006278:	687b      	ldr	r3, [r7, #4]
 800627a:	697a      	ldr	r2, [r7, #20]
 800627c:	605a      	str	r2, [r3, #4]
 800627e:	687b      	ldr	r3, [r7, #4]
 8006280:	68fa      	ldr	r2, [r7, #12]
 8006282:	61da      	str	r2, [r3, #28]
 8006284:	683b      	ldr	r3, [r7, #0]
 8006286:	685a      	ldr	r2, [r3, #4]
 8006288:	687b      	ldr	r3, [r7, #4]
 800628a:	641a      	str	r2, [r3, #64]	@ 0x40
 800628c:	687b      	ldr	r3, [r7, #4]
 800628e:	693a      	ldr	r2, [r7, #16]
 8006290:	621a      	str	r2, [r3, #32]
 8006292:	bf00      	nop
 8006294:	371c      	adds	r7, #28
 8006296:	46bd      	mov	sp, r7
 8006298:	f85d 7b04 	ldr.w	r7, [sp], #4
 800629c:	4770      	bx	lr
 800629e:	bf00      	nop
 80062a0:	40012c00 	.word	0x40012c00
 80062a4:	40014000 	.word	0x40014000
 80062a8:	40014400 	.word	0x40014400
 80062ac:	40014800 	.word	0x40014800

080062b0 <TIM_OC5_SetConfig>:
 80062b0:	b480      	push	{r7}
 80062b2:	b087      	sub	sp, #28
 80062b4:	af00      	add	r7, sp, #0
 80062b6:	6078      	str	r0, [r7, #4]
 80062b8:	6039      	str	r1, [r7, #0]
 80062ba:	687b      	ldr	r3, [r7, #4]
 80062bc:	6a1b      	ldr	r3, [r3, #32]
 80062be:	613b      	str	r3, [r7, #16]
 80062c0:	687b      	ldr	r3, [r7, #4]
 80062c2:	6a1b      	ldr	r3, [r3, #32]
 80062c4:	f423 3280 	bic.w	r2, r3, #65536	@ 0x10000
 80062c8:	687b      	ldr	r3, [r7, #4]
 80062ca:	621a      	str	r2, [r3, #32]
 80062cc:	687b      	ldr	r3, [r7, #4]
 80062ce:	685b      	ldr	r3, [r3, #4]
 80062d0:	617b      	str	r3, [r7, #20]
 80062d2:	687b      	ldr	r3, [r7, #4]
 80062d4:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80062d6:	60fb      	str	r3, [r7, #12]
 80062d8:	68fb      	ldr	r3, [r7, #12]
 80062da:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 80062de:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80062e2:	60fb      	str	r3, [r7, #12]
 80062e4:	683b      	ldr	r3, [r7, #0]
 80062e6:	681b      	ldr	r3, [r3, #0]
 80062e8:	68fa      	ldr	r2, [r7, #12]
 80062ea:	4313      	orrs	r3, r2
 80062ec:	60fb      	str	r3, [r7, #12]
 80062ee:	693b      	ldr	r3, [r7, #16]
 80062f0:	f423 3300 	bic.w	r3, r3, #131072	@ 0x20000
 80062f4:	613b      	str	r3, [r7, #16]
 80062f6:	683b      	ldr	r3, [r7, #0]
 80062f8:	689b      	ldr	r3, [r3, #8]
 80062fa:	041b      	lsls	r3, r3, #16
 80062fc:	693a      	ldr	r2, [r7, #16]
 80062fe:	4313      	orrs	r3, r2
 8006300:	613b      	str	r3, [r7, #16]
 8006302:	687b      	ldr	r3, [r7, #4]
 8006304:	4a15      	ldr	r2, [pc, #84]	@ (800635c <TIM_OC5_SetConfig+0xac>)
 8006306:	4293      	cmp	r3, r2
 8006308:	d00b      	beq.n	8006322 <TIM_OC5_SetConfig+0x72>
 800630a:	687b      	ldr	r3, [r7, #4]
 800630c:	4a14      	ldr	r2, [pc, #80]	@ (8006360 <TIM_OC5_SetConfig+0xb0>)
 800630e:	4293      	cmp	r3, r2
 8006310:	d007      	beq.n	8006322 <TIM_OC5_SetConfig+0x72>
 8006312:	687b      	ldr	r3, [r7, #4]
 8006314:	4a13      	ldr	r2, [pc, #76]	@ (8006364 <TIM_OC5_SetConfig+0xb4>)
 8006316:	4293      	cmp	r3, r2
 8006318:	d003      	beq.n	8006322 <TIM_OC5_SetConfig+0x72>
 800631a:	687b      	ldr	r3, [r7, #4]
 800631c:	4a12      	ldr	r2, [pc, #72]	@ (8006368 <TIM_OC5_SetConfig+0xb8>)
 800631e:	4293      	cmp	r3, r2
 8006320:	d109      	bne.n	8006336 <TIM_OC5_SetConfig+0x86>
 8006322:	697b      	ldr	r3, [r7, #20]
 8006324:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8006328:	617b      	str	r3, [r7, #20]
 800632a:	683b      	ldr	r3, [r7, #0]
 800632c:	695b      	ldr	r3, [r3, #20]
 800632e:	021b      	lsls	r3, r3, #8
 8006330:	697a      	ldr	r2, [r7, #20]
 8006332:	4313      	orrs	r3, r2
 8006334:	617b      	str	r3, [r7, #20]
 8006336:	687b      	ldr	r3, [r7, #4]
 8006338:	697a      	ldr	r2, [r7, #20]
 800633a:	605a      	str	r2, [r3, #4]
 800633c:	687b      	ldr	r3, [r7, #4]
 800633e:	68fa      	ldr	r2, [r7, #12]
 8006340:	655a      	str	r2, [r3, #84]	@ 0x54
 8006342:	683b      	ldr	r3, [r7, #0]
 8006344:	685a      	ldr	r2, [r3, #4]
 8006346:	687b      	ldr	r3, [r7, #4]
 8006348:	659a      	str	r2, [r3, #88]	@ 0x58
 800634a:	687b      	ldr	r3, [r7, #4]
 800634c:	693a      	ldr	r2, [r7, #16]
 800634e:	621a      	str	r2, [r3, #32]
 8006350:	bf00      	nop
 8006352:	371c      	adds	r7, #28
 8006354:	46bd      	mov	sp, r7
 8006356:	f85d 7b04 	ldr.w	r7, [sp], #4
 800635a:	4770      	bx	lr
 800635c:	40012c00 	.word	0x40012c00
 8006360:	40014000 	.word	0x40014000
 8006364:	40014400 	.word	0x40014400
 8006368:	40014800 	.word	0x40014800

0800636c <TIM_OC6_SetConfig>:
 800636c:	b480      	push	{r7}
 800636e:	b087      	sub	sp, #28
 8006370:	af00      	add	r7, sp, #0
 8006372:	6078      	str	r0, [r7, #4]
 8006374:	6039      	str	r1, [r7, #0]
 8006376:	687b      	ldr	r3, [r7, #4]
 8006378:	6a1b      	ldr	r3, [r3, #32]
 800637a:	613b      	str	r3, [r7, #16]
 800637c:	687b      	ldr	r3, [r7, #4]
 800637e:	6a1b      	ldr	r3, [r3, #32]
 8006380:	f423 1280 	bic.w	r2, r3, #1048576	@ 0x100000
 8006384:	687b      	ldr	r3, [r7, #4]
 8006386:	621a      	str	r2, [r3, #32]
 8006388:	687b      	ldr	r3, [r7, #4]
 800638a:	685b      	ldr	r3, [r3, #4]
 800638c:	617b      	str	r3, [r7, #20]
 800638e:	687b      	ldr	r3, [r7, #4]
 8006390:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8006392:	60fb      	str	r3, [r7, #12]
 8006394:	68fb      	ldr	r3, [r7, #12]
 8006396:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 800639a:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 800639e:	60fb      	str	r3, [r7, #12]
 80063a0:	683b      	ldr	r3, [r7, #0]
 80063a2:	681b      	ldr	r3, [r3, #0]
 80063a4:	021b      	lsls	r3, r3, #8
 80063a6:	68fa      	ldr	r2, [r7, #12]
 80063a8:	4313      	orrs	r3, r2
 80063aa:	60fb      	str	r3, [r7, #12]
 80063ac:	693b      	ldr	r3, [r7, #16]
 80063ae:	f423 1300 	bic.w	r3, r3, #2097152	@ 0x200000
 80063b2:	613b      	str	r3, [r7, #16]
 80063b4:	683b      	ldr	r3, [r7, #0]
 80063b6:	689b      	ldr	r3, [r3, #8]
 80063b8:	051b      	lsls	r3, r3, #20
 80063ba:	693a      	ldr	r2, [r7, #16]
 80063bc:	4313      	orrs	r3, r2
 80063be:	613b      	str	r3, [r7, #16]
 80063c0:	687b      	ldr	r3, [r7, #4]
 80063c2:	4a16      	ldr	r2, [pc, #88]	@ (800641c <TIM_OC6_SetConfig+0xb0>)
 80063c4:	4293      	cmp	r3, r2
 80063c6:	d00b      	beq.n	80063e0 <TIM_OC6_SetConfig+0x74>
 80063c8:	687b      	ldr	r3, [r7, #4]
 80063ca:	4a15      	ldr	r2, [pc, #84]	@ (8006420 <TIM_OC6_SetConfig+0xb4>)
 80063cc:	4293      	cmp	r3, r2
 80063ce:	d007      	beq.n	80063e0 <TIM_OC6_SetConfig+0x74>
 80063d0:	687b      	ldr	r3, [r7, #4]
 80063d2:	4a14      	ldr	r2, [pc, #80]	@ (8006424 <TIM_OC6_SetConfig+0xb8>)
 80063d4:	4293      	cmp	r3, r2
 80063d6:	d003      	beq.n	80063e0 <TIM_OC6_SetConfig+0x74>
 80063d8:	687b      	ldr	r3, [r7, #4]
 80063da:	4a13      	ldr	r2, [pc, #76]	@ (8006428 <TIM_OC6_SetConfig+0xbc>)
 80063dc:	4293      	cmp	r3, r2
 80063de:	d109      	bne.n	80063f4 <TIM_OC6_SetConfig+0x88>
 80063e0:	697b      	ldr	r3, [r7, #20]
 80063e2:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 80063e6:	617b      	str	r3, [r7, #20]
 80063e8:	683b      	ldr	r3, [r7, #0]
 80063ea:	695b      	ldr	r3, [r3, #20]
 80063ec:	029b      	lsls	r3, r3, #10
 80063ee:	697a      	ldr	r2, [r7, #20]
 80063f0:	4313      	orrs	r3, r2
 80063f2:	617b      	str	r3, [r7, #20]
 80063f4:	687b      	ldr	r3, [r7, #4]
 80063f6:	697a      	ldr	r2, [r7, #20]
 80063f8:	605a      	str	r2, [r3, #4]
 80063fa:	687b      	ldr	r3, [r7, #4]
 80063fc:	68fa      	ldr	r2, [r7, #12]
 80063fe:	655a      	str	r2, [r3, #84]	@ 0x54
 8006400:	683b      	ldr	r3, [r7, #0]
 8006402:	685a      	ldr	r2, [r3, #4]
 8006404:	687b      	ldr	r3, [r7, #4]
 8006406:	65da      	str	r2, [r3, #92]	@ 0x5c
 8006408:	687b      	ldr	r3, [r7, #4]
 800640a:	693a      	ldr	r2, [r7, #16]
 800640c:	621a      	str	r2, [r3, #32]
 800640e:	bf00      	nop
 8006410:	371c      	adds	r7, #28
 8006412:	46bd      	mov	sp, r7
 8006414:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006418:	4770      	bx	lr
 800641a:	bf00      	nop
 800641c:	40012c00 	.word	0x40012c00
 8006420:	40014000 	.word	0x40014000
 8006424:	40014400 	.word	0x40014400
 8006428:	40014800 	.word	0x40014800

0800642c <TIM_TI1_ConfigInputStage>:
 800642c:	b480      	push	{r7}
 800642e:	b087      	sub	sp, #28
 8006430:	af00      	add	r7, sp, #0
 8006432:	60f8      	str	r0, [r7, #12]
 8006434:	60b9      	str	r1, [r7, #8]
 8006436:	607a      	str	r2, [r7, #4]
 8006438:	68fb      	ldr	r3, [r7, #12]
 800643a:	6a1b      	ldr	r3, [r3, #32]
 800643c:	617b      	str	r3, [r7, #20]
 800643e:	68fb      	ldr	r3, [r7, #12]
 8006440:	6a1b      	ldr	r3, [r3, #32]
 8006442:	f023 0201 	bic.w	r2, r3, #1
 8006446:	68fb      	ldr	r3, [r7, #12]
 8006448:	621a      	str	r2, [r3, #32]
 800644a:	68fb      	ldr	r3, [r7, #12]
 800644c:	699b      	ldr	r3, [r3, #24]
 800644e:	613b      	str	r3, [r7, #16]
 8006450:	693b      	ldr	r3, [r7, #16]
 8006452:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 8006456:	613b      	str	r3, [r7, #16]
 8006458:	687b      	ldr	r3, [r7, #4]
 800645a:	011b      	lsls	r3, r3, #4
 800645c:	693a      	ldr	r2, [r7, #16]
 800645e:	4313      	orrs	r3, r2
 8006460:	613b      	str	r3, [r7, #16]
 8006462:	697b      	ldr	r3, [r7, #20]
 8006464:	f023 030a 	bic.w	r3, r3, #10
 8006468:	617b      	str	r3, [r7, #20]
 800646a:	697a      	ldr	r2, [r7, #20]
 800646c:	68bb      	ldr	r3, [r7, #8]
 800646e:	4313      	orrs	r3, r2
 8006470:	617b      	str	r3, [r7, #20]
 8006472:	68fb      	ldr	r3, [r7, #12]
 8006474:	693a      	ldr	r2, [r7, #16]
 8006476:	619a      	str	r2, [r3, #24]
 8006478:	68fb      	ldr	r3, [r7, #12]
 800647a:	697a      	ldr	r2, [r7, #20]
 800647c:	621a      	str	r2, [r3, #32]
 800647e:	bf00      	nop
 8006480:	371c      	adds	r7, #28
 8006482:	46bd      	mov	sp, r7
 8006484:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006488:	4770      	bx	lr

0800648a <TIM_TI2_ConfigInputStage>:
 800648a:	b480      	push	{r7}
 800648c:	b087      	sub	sp, #28
 800648e:	af00      	add	r7, sp, #0
 8006490:	60f8      	str	r0, [r7, #12]
 8006492:	60b9      	str	r1, [r7, #8]
 8006494:	607a      	str	r2, [r7, #4]
 8006496:	68fb      	ldr	r3, [r7, #12]
 8006498:	6a1b      	ldr	r3, [r3, #32]
 800649a:	617b      	str	r3, [r7, #20]
 800649c:	68fb      	ldr	r3, [r7, #12]
 800649e:	6a1b      	ldr	r3, [r3, #32]
 80064a0:	f023 0210 	bic.w	r2, r3, #16
 80064a4:	68fb      	ldr	r3, [r7, #12]
 80064a6:	621a      	str	r2, [r3, #32]
 80064a8:	68fb      	ldr	r3, [r7, #12]
 80064aa:	699b      	ldr	r3, [r3, #24]
 80064ac:	613b      	str	r3, [r7, #16]
 80064ae:	693b      	ldr	r3, [r7, #16]
 80064b0:	f423 4370 	bic.w	r3, r3, #61440	@ 0xf000
 80064b4:	613b      	str	r3, [r7, #16]
 80064b6:	687b      	ldr	r3, [r7, #4]
 80064b8:	031b      	lsls	r3, r3, #12
 80064ba:	693a      	ldr	r2, [r7, #16]
 80064bc:	4313      	orrs	r3, r2
 80064be:	613b      	str	r3, [r7, #16]
 80064c0:	697b      	ldr	r3, [r7, #20]
 80064c2:	f023 03a0 	bic.w	r3, r3, #160	@ 0xa0
 80064c6:	617b      	str	r3, [r7, #20]
 80064c8:	68bb      	ldr	r3, [r7, #8]
 80064ca:	011b      	lsls	r3, r3, #4
 80064cc:	697a      	ldr	r2, [r7, #20]
 80064ce:	4313      	orrs	r3, r2
 80064d0:	617b      	str	r3, [r7, #20]
 80064d2:	68fb      	ldr	r3, [r7, #12]
 80064d4:	693a      	ldr	r2, [r7, #16]
 80064d6:	619a      	str	r2, [r3, #24]
 80064d8:	68fb      	ldr	r3, [r7, #12]
 80064da:	697a      	ldr	r2, [r7, #20]
 80064dc:	621a      	str	r2, [r3, #32]
 80064de:	bf00      	nop
 80064e0:	371c      	adds	r7, #28
 80064e2:	46bd      	mov	sp, r7
 80064e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80064e8:	4770      	bx	lr

080064ea <TIM_ITRx_SetConfig>:
 80064ea:	b480      	push	{r7}
 80064ec:	b085      	sub	sp, #20
 80064ee:	af00      	add	r7, sp, #0
 80064f0:	6078      	str	r0, [r7, #4]
 80064f2:	6039      	str	r1, [r7, #0]
 80064f4:	687b      	ldr	r3, [r7, #4]
 80064f6:	689b      	ldr	r3, [r3, #8]
 80064f8:	60fb      	str	r3, [r7, #12]
 80064fa:	68fb      	ldr	r3, [r7, #12]
 80064fc:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8006500:	60fb      	str	r3, [r7, #12]
 8006502:	683a      	ldr	r2, [r7, #0]
 8006504:	68fb      	ldr	r3, [r7, #12]
 8006506:	4313      	orrs	r3, r2
 8006508:	f043 0307 	orr.w	r3, r3, #7
 800650c:	60fb      	str	r3, [r7, #12]
 800650e:	687b      	ldr	r3, [r7, #4]
 8006510:	68fa      	ldr	r2, [r7, #12]
 8006512:	609a      	str	r2, [r3, #8]
 8006514:	bf00      	nop
 8006516:	3714      	adds	r7, #20
 8006518:	46bd      	mov	sp, r7
 800651a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800651e:	4770      	bx	lr

08006520 <TIM_ETR_SetConfig>:
 8006520:	b480      	push	{r7}
 8006522:	b087      	sub	sp, #28
 8006524:	af00      	add	r7, sp, #0
 8006526:	60f8      	str	r0, [r7, #12]
 8006528:	60b9      	str	r1, [r7, #8]
 800652a:	607a      	str	r2, [r7, #4]
 800652c:	603b      	str	r3, [r7, #0]
 800652e:	68fb      	ldr	r3, [r7, #12]
 8006530:	689b      	ldr	r3, [r3, #8]
 8006532:	617b      	str	r3, [r7, #20]
 8006534:	697b      	ldr	r3, [r7, #20]
 8006536:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 800653a:	617b      	str	r3, [r7, #20]
 800653c:	683b      	ldr	r3, [r7, #0]
 800653e:	021a      	lsls	r2, r3, #8
 8006540:	687b      	ldr	r3, [r7, #4]
 8006542:	431a      	orrs	r2, r3
 8006544:	68bb      	ldr	r3, [r7, #8]
 8006546:	4313      	orrs	r3, r2
 8006548:	697a      	ldr	r2, [r7, #20]
 800654a:	4313      	orrs	r3, r2
 800654c:	617b      	str	r3, [r7, #20]
 800654e:	68fb      	ldr	r3, [r7, #12]
 8006550:	697a      	ldr	r2, [r7, #20]
 8006552:	609a      	str	r2, [r3, #8]
 8006554:	bf00      	nop
 8006556:	371c      	adds	r7, #28
 8006558:	46bd      	mov	sp, r7
 800655a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800655e:	4770      	bx	lr

08006560 <TIM_CCxChannelCmd>:
 8006560:	b480      	push	{r7}
 8006562:	b087      	sub	sp, #28
 8006564:	af00      	add	r7, sp, #0
 8006566:	60f8      	str	r0, [r7, #12]
 8006568:	60b9      	str	r1, [r7, #8]
 800656a:	607a      	str	r2, [r7, #4]
 800656c:	68bb      	ldr	r3, [r7, #8]
 800656e:	f003 031f 	and.w	r3, r3, #31
 8006572:	2201      	movs	r2, #1
 8006574:	fa02 f303 	lsl.w	r3, r2, r3
 8006578:	617b      	str	r3, [r7, #20]
 800657a:	68fb      	ldr	r3, [r7, #12]
 800657c:	6a1a      	ldr	r2, [r3, #32]
 800657e:	697b      	ldr	r3, [r7, #20]
 8006580:	43db      	mvns	r3, r3
 8006582:	401a      	ands	r2, r3
 8006584:	68fb      	ldr	r3, [r7, #12]
 8006586:	621a      	str	r2, [r3, #32]
 8006588:	68fb      	ldr	r3, [r7, #12]
 800658a:	6a1a      	ldr	r2, [r3, #32]
 800658c:	68bb      	ldr	r3, [r7, #8]
 800658e:	f003 031f 	and.w	r3, r3, #31
 8006592:	6879      	ldr	r1, [r7, #4]
 8006594:	fa01 f303 	lsl.w	r3, r1, r3
 8006598:	431a      	orrs	r2, r3
 800659a:	68fb      	ldr	r3, [r7, #12]
 800659c:	621a      	str	r2, [r3, #32]
 800659e:	bf00      	nop
 80065a0:	371c      	adds	r7, #28
 80065a2:	46bd      	mov	sp, r7
 80065a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80065a8:	4770      	bx	lr
	...

080065ac <HAL_TIMEx_MasterConfigSynchronization>:
 80065ac:	b480      	push	{r7}
 80065ae:	b085      	sub	sp, #20
 80065b0:	af00      	add	r7, sp, #0
 80065b2:	6078      	str	r0, [r7, #4]
 80065b4:	6039      	str	r1, [r7, #0]
 80065b6:	687b      	ldr	r3, [r7, #4]
 80065b8:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 80065bc:	2b01      	cmp	r3, #1
 80065be:	d101      	bne.n	80065c4 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 80065c0:	2302      	movs	r3, #2
 80065c2:	e054      	b.n	800666e <HAL_TIMEx_MasterConfigSynchronization+0xc2>
 80065c4:	687b      	ldr	r3, [r7, #4]
 80065c6:	2201      	movs	r2, #1
 80065c8:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80065cc:	687b      	ldr	r3, [r7, #4]
 80065ce:	2202      	movs	r2, #2
 80065d0:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80065d4:	687b      	ldr	r3, [r7, #4]
 80065d6:	681b      	ldr	r3, [r3, #0]
 80065d8:	685b      	ldr	r3, [r3, #4]
 80065da:	60fb      	str	r3, [r7, #12]
 80065dc:	687b      	ldr	r3, [r7, #4]
 80065de:	681b      	ldr	r3, [r3, #0]
 80065e0:	689b      	ldr	r3, [r3, #8]
 80065e2:	60bb      	str	r3, [r7, #8]
 80065e4:	687b      	ldr	r3, [r7, #4]
 80065e6:	681b      	ldr	r3, [r3, #0]
 80065e8:	4a24      	ldr	r2, [pc, #144]	@ (800667c <HAL_TIMEx_MasterConfigSynchronization+0xd0>)
 80065ea:	4293      	cmp	r3, r2
 80065ec:	d108      	bne.n	8006600 <HAL_TIMEx_MasterConfigSynchronization+0x54>
 80065ee:	68fb      	ldr	r3, [r7, #12]
 80065f0:	f423 0370 	bic.w	r3, r3, #15728640	@ 0xf00000
 80065f4:	60fb      	str	r3, [r7, #12]
 80065f6:	683b      	ldr	r3, [r7, #0]
 80065f8:	685b      	ldr	r3, [r3, #4]
 80065fa:	68fa      	ldr	r2, [r7, #12]
 80065fc:	4313      	orrs	r3, r2
 80065fe:	60fb      	str	r3, [r7, #12]
 8006600:	68fb      	ldr	r3, [r7, #12]
 8006602:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8006606:	60fb      	str	r3, [r7, #12]
 8006608:	683b      	ldr	r3, [r7, #0]
 800660a:	681b      	ldr	r3, [r3, #0]
 800660c:	68fa      	ldr	r2, [r7, #12]
 800660e:	4313      	orrs	r3, r2
 8006610:	60fb      	str	r3, [r7, #12]
 8006612:	687b      	ldr	r3, [r7, #4]
 8006614:	681b      	ldr	r3, [r3, #0]
 8006616:	68fa      	ldr	r2, [r7, #12]
 8006618:	605a      	str	r2, [r3, #4]
 800661a:	687b      	ldr	r3, [r7, #4]
 800661c:	681b      	ldr	r3, [r3, #0]
 800661e:	4a17      	ldr	r2, [pc, #92]	@ (800667c <HAL_TIMEx_MasterConfigSynchronization+0xd0>)
 8006620:	4293      	cmp	r3, r2
 8006622:	d00e      	beq.n	8006642 <HAL_TIMEx_MasterConfigSynchronization+0x96>
 8006624:	687b      	ldr	r3, [r7, #4]
 8006626:	681b      	ldr	r3, [r3, #0]
 8006628:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800662c:	d009      	beq.n	8006642 <HAL_TIMEx_MasterConfigSynchronization+0x96>
 800662e:	687b      	ldr	r3, [r7, #4]
 8006630:	681b      	ldr	r3, [r3, #0]
 8006632:	4a13      	ldr	r2, [pc, #76]	@ (8006680 <HAL_TIMEx_MasterConfigSynchronization+0xd4>)
 8006634:	4293      	cmp	r3, r2
 8006636:	d004      	beq.n	8006642 <HAL_TIMEx_MasterConfigSynchronization+0x96>
 8006638:	687b      	ldr	r3, [r7, #4]
 800663a:	681b      	ldr	r3, [r3, #0]
 800663c:	4a11      	ldr	r2, [pc, #68]	@ (8006684 <HAL_TIMEx_MasterConfigSynchronization+0xd8>)
 800663e:	4293      	cmp	r3, r2
 8006640:	d10c      	bne.n	800665c <HAL_TIMEx_MasterConfigSynchronization+0xb0>
 8006642:	68bb      	ldr	r3, [r7, #8]
 8006644:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8006648:	60bb      	str	r3, [r7, #8]
 800664a:	683b      	ldr	r3, [r7, #0]
 800664c:	689b      	ldr	r3, [r3, #8]
 800664e:	68ba      	ldr	r2, [r7, #8]
 8006650:	4313      	orrs	r3, r2
 8006652:	60bb      	str	r3, [r7, #8]
 8006654:	687b      	ldr	r3, [r7, #4]
 8006656:	681b      	ldr	r3, [r3, #0]
 8006658:	68ba      	ldr	r2, [r7, #8]
 800665a:	609a      	str	r2, [r3, #8]
 800665c:	687b      	ldr	r3, [r7, #4]
 800665e:	2201      	movs	r2, #1
 8006660:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8006664:	687b      	ldr	r3, [r7, #4]
 8006666:	2200      	movs	r2, #0
 8006668:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800666c:	2300      	movs	r3, #0
 800666e:	4618      	mov	r0, r3
 8006670:	3714      	adds	r7, #20
 8006672:	46bd      	mov	sp, r7
 8006674:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006678:	4770      	bx	lr
 800667a:	bf00      	nop
 800667c:	40012c00 	.word	0x40012c00
 8006680:	40000400 	.word	0x40000400
 8006684:	40014000 	.word	0x40014000

08006688 <HAL_TIMEx_ConfigBreakDeadTime>:
 8006688:	b480      	push	{r7}
 800668a:	b085      	sub	sp, #20
 800668c:	af00      	add	r7, sp, #0
 800668e:	6078      	str	r0, [r7, #4]
 8006690:	6039      	str	r1, [r7, #0]
 8006692:	2300      	movs	r3, #0
 8006694:	60fb      	str	r3, [r7, #12]
 8006696:	687b      	ldr	r3, [r7, #4]
 8006698:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 800669c:	2b01      	cmp	r3, #1
 800669e:	d101      	bne.n	80066a4 <HAL_TIMEx_ConfigBreakDeadTime+0x1c>
 80066a0:	2302      	movs	r3, #2
 80066a2:	e060      	b.n	8006766 <HAL_TIMEx_ConfigBreakDeadTime+0xde>
 80066a4:	687b      	ldr	r3, [r7, #4]
 80066a6:	2201      	movs	r2, #1
 80066a8:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80066ac:	68fb      	ldr	r3, [r7, #12]
 80066ae:	f023 02ff 	bic.w	r2, r3, #255	@ 0xff
 80066b2:	683b      	ldr	r3, [r7, #0]
 80066b4:	68db      	ldr	r3, [r3, #12]
 80066b6:	4313      	orrs	r3, r2
 80066b8:	60fb      	str	r3, [r7, #12]
 80066ba:	68fb      	ldr	r3, [r7, #12]
 80066bc:	f423 7240 	bic.w	r2, r3, #768	@ 0x300
 80066c0:	683b      	ldr	r3, [r7, #0]
 80066c2:	689b      	ldr	r3, [r3, #8]
 80066c4:	4313      	orrs	r3, r2
 80066c6:	60fb      	str	r3, [r7, #12]
 80066c8:	68fb      	ldr	r3, [r7, #12]
 80066ca:	f423 6280 	bic.w	r2, r3, #1024	@ 0x400
 80066ce:	683b      	ldr	r3, [r7, #0]
 80066d0:	685b      	ldr	r3, [r3, #4]
 80066d2:	4313      	orrs	r3, r2
 80066d4:	60fb      	str	r3, [r7, #12]
 80066d6:	68fb      	ldr	r3, [r7, #12]
 80066d8:	f423 6200 	bic.w	r2, r3, #2048	@ 0x800
 80066dc:	683b      	ldr	r3, [r7, #0]
 80066de:	681b      	ldr	r3, [r3, #0]
 80066e0:	4313      	orrs	r3, r2
 80066e2:	60fb      	str	r3, [r7, #12]
 80066e4:	68fb      	ldr	r3, [r7, #12]
 80066e6:	f423 5280 	bic.w	r2, r3, #4096	@ 0x1000
 80066ea:	683b      	ldr	r3, [r7, #0]
 80066ec:	691b      	ldr	r3, [r3, #16]
 80066ee:	4313      	orrs	r3, r2
 80066f0:	60fb      	str	r3, [r7, #12]
 80066f2:	68fb      	ldr	r3, [r7, #12]
 80066f4:	f423 5200 	bic.w	r2, r3, #8192	@ 0x2000
 80066f8:	683b      	ldr	r3, [r7, #0]
 80066fa:	695b      	ldr	r3, [r3, #20]
 80066fc:	4313      	orrs	r3, r2
 80066fe:	60fb      	str	r3, [r7, #12]
 8006700:	68fb      	ldr	r3, [r7, #12]
 8006702:	f423 4280 	bic.w	r2, r3, #16384	@ 0x4000
 8006706:	683b      	ldr	r3, [r7, #0]
 8006708:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800670a:	4313      	orrs	r3, r2
 800670c:	60fb      	str	r3, [r7, #12]
 800670e:	68fb      	ldr	r3, [r7, #12]
 8006710:	f423 2270 	bic.w	r2, r3, #983040	@ 0xf0000
 8006714:	683b      	ldr	r3, [r7, #0]
 8006716:	699b      	ldr	r3, [r3, #24]
 8006718:	041b      	lsls	r3, r3, #16
 800671a:	4313      	orrs	r3, r2
 800671c:	60fb      	str	r3, [r7, #12]
 800671e:	687b      	ldr	r3, [r7, #4]
 8006720:	681b      	ldr	r3, [r3, #0]
 8006722:	4a14      	ldr	r2, [pc, #80]	@ (8006774 <HAL_TIMEx_ConfigBreakDeadTime+0xec>)
 8006724:	4293      	cmp	r3, r2
 8006726:	d115      	bne.n	8006754 <HAL_TIMEx_ConfigBreakDeadTime+0xcc>
 8006728:	68fb      	ldr	r3, [r7, #12]
 800672a:	f423 0270 	bic.w	r2, r3, #15728640	@ 0xf00000
 800672e:	683b      	ldr	r3, [r7, #0]
 8006730:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8006732:	051b      	lsls	r3, r3, #20
 8006734:	4313      	orrs	r3, r2
 8006736:	60fb      	str	r3, [r7, #12]
 8006738:	68fb      	ldr	r3, [r7, #12]
 800673a:	f023 7280 	bic.w	r2, r3, #16777216	@ 0x1000000
 800673e:	683b      	ldr	r3, [r7, #0]
 8006740:	69db      	ldr	r3, [r3, #28]
 8006742:	4313      	orrs	r3, r2
 8006744:	60fb      	str	r3, [r7, #12]
 8006746:	68fb      	ldr	r3, [r7, #12]
 8006748:	f023 7200 	bic.w	r2, r3, #33554432	@ 0x2000000
 800674c:	683b      	ldr	r3, [r7, #0]
 800674e:	6a1b      	ldr	r3, [r3, #32]
 8006750:	4313      	orrs	r3, r2
 8006752:	60fb      	str	r3, [r7, #12]
 8006754:	687b      	ldr	r3, [r7, #4]
 8006756:	681b      	ldr	r3, [r3, #0]
 8006758:	68fa      	ldr	r2, [r7, #12]
 800675a:	645a      	str	r2, [r3, #68]	@ 0x44
 800675c:	687b      	ldr	r3, [r7, #4]
 800675e:	2200      	movs	r2, #0
 8006760:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8006764:	2300      	movs	r3, #0
 8006766:	4618      	mov	r0, r3
 8006768:	3714      	adds	r7, #20
 800676a:	46bd      	mov	sp, r7
 800676c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006770:	4770      	bx	lr
 8006772:	bf00      	nop
 8006774:	40012c00 	.word	0x40012c00

08006778 <HAL_TIMEx_CommutCallback>:
 8006778:	b480      	push	{r7}
 800677a:	b083      	sub	sp, #12
 800677c:	af00      	add	r7, sp, #0
 800677e:	6078      	str	r0, [r7, #4]
 8006780:	bf00      	nop
 8006782:	370c      	adds	r7, #12
 8006784:	46bd      	mov	sp, r7
 8006786:	f85d 7b04 	ldr.w	r7, [sp], #4
 800678a:	4770      	bx	lr

0800678c <HAL_TIMEx_BreakCallback>:
 800678c:	b480      	push	{r7}
 800678e:	b083      	sub	sp, #12
 8006790:	af00      	add	r7, sp, #0
 8006792:	6078      	str	r0, [r7, #4]
 8006794:	bf00      	nop
 8006796:	370c      	adds	r7, #12
 8006798:	46bd      	mov	sp, r7
 800679a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800679e:	4770      	bx	lr

080067a0 <HAL_TIMEx_Break2Callback>:
 80067a0:	b480      	push	{r7}
 80067a2:	b083      	sub	sp, #12
 80067a4:	af00      	add	r7, sp, #0
 80067a6:	6078      	str	r0, [r7, #4]
 80067a8:	bf00      	nop
 80067aa:	370c      	adds	r7, #12
 80067ac:	46bd      	mov	sp, r7
 80067ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 80067b2:	4770      	bx	lr

080067b4 <HAL_UART_Init>:
 80067b4:	b580      	push	{r7, lr}
 80067b6:	b082      	sub	sp, #8
 80067b8:	af00      	add	r7, sp, #0
 80067ba:	6078      	str	r0, [r7, #4]
 80067bc:	687b      	ldr	r3, [r7, #4]
 80067be:	2b00      	cmp	r3, #0
 80067c0:	d101      	bne.n	80067c6 <HAL_UART_Init+0x12>
 80067c2:	2301      	movs	r3, #1
 80067c4:	e040      	b.n	8006848 <HAL_UART_Init+0x94>
 80067c6:	687b      	ldr	r3, [r7, #4]
 80067c8:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 80067ca:	2b00      	cmp	r3, #0
 80067cc:	d106      	bne.n	80067dc <HAL_UART_Init+0x28>
 80067ce:	687b      	ldr	r3, [r7, #4]
 80067d0:	2200      	movs	r2, #0
 80067d2:	f883 2078 	strb.w	r2, [r3, #120]	@ 0x78
 80067d6:	6878      	ldr	r0, [r7, #4]
 80067d8:	f7fb fed0 	bl	800257c <HAL_UART_MspInit>
 80067dc:	687b      	ldr	r3, [r7, #4]
 80067de:	2224      	movs	r2, #36	@ 0x24
 80067e0:	67da      	str	r2, [r3, #124]	@ 0x7c
 80067e2:	687b      	ldr	r3, [r7, #4]
 80067e4:	681b      	ldr	r3, [r3, #0]
 80067e6:	681a      	ldr	r2, [r3, #0]
 80067e8:	687b      	ldr	r3, [r7, #4]
 80067ea:	681b      	ldr	r3, [r3, #0]
 80067ec:	f022 0201 	bic.w	r2, r2, #1
 80067f0:	601a      	str	r2, [r3, #0]
 80067f2:	687b      	ldr	r3, [r7, #4]
 80067f4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80067f6:	2b00      	cmp	r3, #0
 80067f8:	d002      	beq.n	8006800 <HAL_UART_Init+0x4c>
 80067fa:	6878      	ldr	r0, [r7, #4]
 80067fc:	f000 fd32 	bl	8007264 <UART_AdvFeatureConfig>
 8006800:	6878      	ldr	r0, [r7, #4]
 8006802:	f000 fbf9 	bl	8006ff8 <UART_SetConfig>
 8006806:	4603      	mov	r3, r0
 8006808:	2b01      	cmp	r3, #1
 800680a:	d101      	bne.n	8006810 <HAL_UART_Init+0x5c>
 800680c:	2301      	movs	r3, #1
 800680e:	e01b      	b.n	8006848 <HAL_UART_Init+0x94>
 8006810:	687b      	ldr	r3, [r7, #4]
 8006812:	681b      	ldr	r3, [r3, #0]
 8006814:	685a      	ldr	r2, [r3, #4]
 8006816:	687b      	ldr	r3, [r7, #4]
 8006818:	681b      	ldr	r3, [r3, #0]
 800681a:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
 800681e:	605a      	str	r2, [r3, #4]
 8006820:	687b      	ldr	r3, [r7, #4]
 8006822:	681b      	ldr	r3, [r3, #0]
 8006824:	689a      	ldr	r2, [r3, #8]
 8006826:	687b      	ldr	r3, [r7, #4]
 8006828:	681b      	ldr	r3, [r3, #0]
 800682a:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
 800682e:	609a      	str	r2, [r3, #8]
 8006830:	687b      	ldr	r3, [r7, #4]
 8006832:	681b      	ldr	r3, [r3, #0]
 8006834:	681a      	ldr	r2, [r3, #0]
 8006836:	687b      	ldr	r3, [r7, #4]
 8006838:	681b      	ldr	r3, [r3, #0]
 800683a:	f042 0201 	orr.w	r2, r2, #1
 800683e:	601a      	str	r2, [r3, #0]
 8006840:	6878      	ldr	r0, [r7, #4]
 8006842:	f000 fdb1 	bl	80073a8 <UART_CheckIdleState>
 8006846:	4603      	mov	r3, r0
 8006848:	4618      	mov	r0, r3
 800684a:	3708      	adds	r7, #8
 800684c:	46bd      	mov	sp, r7
 800684e:	bd80      	pop	{r7, pc}

08006850 <HAL_UART_Transmit>:
 8006850:	b580      	push	{r7, lr}
 8006852:	b08a      	sub	sp, #40	@ 0x28
 8006854:	af02      	add	r7, sp, #8
 8006856:	60f8      	str	r0, [r7, #12]
 8006858:	60b9      	str	r1, [r7, #8]
 800685a:	603b      	str	r3, [r7, #0]
 800685c:	4613      	mov	r3, r2
 800685e:	80fb      	strh	r3, [r7, #6]
 8006860:	68fb      	ldr	r3, [r7, #12]
 8006862:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8006864:	2b20      	cmp	r3, #32
 8006866:	d177      	bne.n	8006958 <HAL_UART_Transmit+0x108>
 8006868:	68bb      	ldr	r3, [r7, #8]
 800686a:	2b00      	cmp	r3, #0
 800686c:	d002      	beq.n	8006874 <HAL_UART_Transmit+0x24>
 800686e:	88fb      	ldrh	r3, [r7, #6]
 8006870:	2b00      	cmp	r3, #0
 8006872:	d101      	bne.n	8006878 <HAL_UART_Transmit+0x28>
 8006874:	2301      	movs	r3, #1
 8006876:	e070      	b.n	800695a <HAL_UART_Transmit+0x10a>
 8006878:	68fb      	ldr	r3, [r7, #12]
 800687a:	2200      	movs	r2, #0
 800687c:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 8006880:	68fb      	ldr	r3, [r7, #12]
 8006882:	2221      	movs	r2, #33	@ 0x21
 8006884:	67da      	str	r2, [r3, #124]	@ 0x7c
 8006886:	f7fc f8a3 	bl	80029d0 <HAL_GetTick>
 800688a:	6178      	str	r0, [r7, #20]
 800688c:	68fb      	ldr	r3, [r7, #12]
 800688e:	88fa      	ldrh	r2, [r7, #6]
 8006890:	f8a3 2050 	strh.w	r2, [r3, #80]	@ 0x50
 8006894:	68fb      	ldr	r3, [r7, #12]
 8006896:	88fa      	ldrh	r2, [r7, #6]
 8006898:	f8a3 2052 	strh.w	r2, [r3, #82]	@ 0x52
 800689c:	68fb      	ldr	r3, [r7, #12]
 800689e:	689b      	ldr	r3, [r3, #8]
 80068a0:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 80068a4:	d108      	bne.n	80068b8 <HAL_UART_Transmit+0x68>
 80068a6:	68fb      	ldr	r3, [r7, #12]
 80068a8:	691b      	ldr	r3, [r3, #16]
 80068aa:	2b00      	cmp	r3, #0
 80068ac:	d104      	bne.n	80068b8 <HAL_UART_Transmit+0x68>
 80068ae:	2300      	movs	r3, #0
 80068b0:	61fb      	str	r3, [r7, #28]
 80068b2:	68bb      	ldr	r3, [r7, #8]
 80068b4:	61bb      	str	r3, [r7, #24]
 80068b6:	e003      	b.n	80068c0 <HAL_UART_Transmit+0x70>
 80068b8:	68bb      	ldr	r3, [r7, #8]
 80068ba:	61fb      	str	r3, [r7, #28]
 80068bc:	2300      	movs	r3, #0
 80068be:	61bb      	str	r3, [r7, #24]
 80068c0:	e02f      	b.n	8006922 <HAL_UART_Transmit+0xd2>
 80068c2:	683b      	ldr	r3, [r7, #0]
 80068c4:	9300      	str	r3, [sp, #0]
 80068c6:	697b      	ldr	r3, [r7, #20]
 80068c8:	2200      	movs	r2, #0
 80068ca:	2180      	movs	r1, #128	@ 0x80
 80068cc:	68f8      	ldr	r0, [r7, #12]
 80068ce:	f000 fe13 	bl	80074f8 <UART_WaitOnFlagUntilTimeout>
 80068d2:	4603      	mov	r3, r0
 80068d4:	2b00      	cmp	r3, #0
 80068d6:	d004      	beq.n	80068e2 <HAL_UART_Transmit+0x92>
 80068d8:	68fb      	ldr	r3, [r7, #12]
 80068da:	2220      	movs	r2, #32
 80068dc:	67da      	str	r2, [r3, #124]	@ 0x7c
 80068de:	2303      	movs	r3, #3
 80068e0:	e03b      	b.n	800695a <HAL_UART_Transmit+0x10a>
 80068e2:	69fb      	ldr	r3, [r7, #28]
 80068e4:	2b00      	cmp	r3, #0
 80068e6:	d10b      	bne.n	8006900 <HAL_UART_Transmit+0xb0>
 80068e8:	69bb      	ldr	r3, [r7, #24]
 80068ea:	881a      	ldrh	r2, [r3, #0]
 80068ec:	68fb      	ldr	r3, [r7, #12]
 80068ee:	681b      	ldr	r3, [r3, #0]
 80068f0:	f3c2 0208 	ubfx	r2, r2, #0, #9
 80068f4:	b292      	uxth	r2, r2
 80068f6:	851a      	strh	r2, [r3, #40]	@ 0x28
 80068f8:	69bb      	ldr	r3, [r7, #24]
 80068fa:	3302      	adds	r3, #2
 80068fc:	61bb      	str	r3, [r7, #24]
 80068fe:	e007      	b.n	8006910 <HAL_UART_Transmit+0xc0>
 8006900:	69fb      	ldr	r3, [r7, #28]
 8006902:	781a      	ldrb	r2, [r3, #0]
 8006904:	68fb      	ldr	r3, [r7, #12]
 8006906:	681b      	ldr	r3, [r3, #0]
 8006908:	851a      	strh	r2, [r3, #40]	@ 0x28
 800690a:	69fb      	ldr	r3, [r7, #28]
 800690c:	3301      	adds	r3, #1
 800690e:	61fb      	str	r3, [r7, #28]
 8006910:	68fb      	ldr	r3, [r7, #12]
 8006912:	f8b3 3052 	ldrh.w	r3, [r3, #82]	@ 0x52
 8006916:	b29b      	uxth	r3, r3
 8006918:	3b01      	subs	r3, #1
 800691a:	b29a      	uxth	r2, r3
 800691c:	68fb      	ldr	r3, [r7, #12]
 800691e:	f8a3 2052 	strh.w	r2, [r3, #82]	@ 0x52
 8006922:	68fb      	ldr	r3, [r7, #12]
 8006924:	f8b3 3052 	ldrh.w	r3, [r3, #82]	@ 0x52
 8006928:	b29b      	uxth	r3, r3
 800692a:	2b00      	cmp	r3, #0
 800692c:	d1c9      	bne.n	80068c2 <HAL_UART_Transmit+0x72>
 800692e:	683b      	ldr	r3, [r7, #0]
 8006930:	9300      	str	r3, [sp, #0]
 8006932:	697b      	ldr	r3, [r7, #20]
 8006934:	2200      	movs	r2, #0
 8006936:	2140      	movs	r1, #64	@ 0x40
 8006938:	68f8      	ldr	r0, [r7, #12]
 800693a:	f000 fddd 	bl	80074f8 <UART_WaitOnFlagUntilTimeout>
 800693e:	4603      	mov	r3, r0
 8006940:	2b00      	cmp	r3, #0
 8006942:	d004      	beq.n	800694e <HAL_UART_Transmit+0xfe>
 8006944:	68fb      	ldr	r3, [r7, #12]
 8006946:	2220      	movs	r2, #32
 8006948:	67da      	str	r2, [r3, #124]	@ 0x7c
 800694a:	2303      	movs	r3, #3
 800694c:	e005      	b.n	800695a <HAL_UART_Transmit+0x10a>
 800694e:	68fb      	ldr	r3, [r7, #12]
 8006950:	2220      	movs	r2, #32
 8006952:	67da      	str	r2, [r3, #124]	@ 0x7c
 8006954:	2300      	movs	r3, #0
 8006956:	e000      	b.n	800695a <HAL_UART_Transmit+0x10a>
 8006958:	2302      	movs	r3, #2
 800695a:	4618      	mov	r0, r3
 800695c:	3720      	adds	r7, #32
 800695e:	46bd      	mov	sp, r7
 8006960:	bd80      	pop	{r7, pc}

08006962 <HAL_UART_Receive_IT>:
 8006962:	b580      	push	{r7, lr}
 8006964:	b08a      	sub	sp, #40	@ 0x28
 8006966:	af00      	add	r7, sp, #0
 8006968:	60f8      	str	r0, [r7, #12]
 800696a:	60b9      	str	r1, [r7, #8]
 800696c:	4613      	mov	r3, r2
 800696e:	80fb      	strh	r3, [r7, #6]
 8006970:	68fb      	ldr	r3, [r7, #12]
 8006972:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8006976:	2b20      	cmp	r3, #32
 8006978:	d132      	bne.n	80069e0 <HAL_UART_Receive_IT+0x7e>
 800697a:	68bb      	ldr	r3, [r7, #8]
 800697c:	2b00      	cmp	r3, #0
 800697e:	d002      	beq.n	8006986 <HAL_UART_Receive_IT+0x24>
 8006980:	88fb      	ldrh	r3, [r7, #6]
 8006982:	2b00      	cmp	r3, #0
 8006984:	d101      	bne.n	800698a <HAL_UART_Receive_IT+0x28>
 8006986:	2301      	movs	r3, #1
 8006988:	e02b      	b.n	80069e2 <HAL_UART_Receive_IT+0x80>
 800698a:	68fb      	ldr	r3, [r7, #12]
 800698c:	2200      	movs	r2, #0
 800698e:	661a      	str	r2, [r3, #96]	@ 0x60
 8006990:	68fb      	ldr	r3, [r7, #12]
 8006992:	681b      	ldr	r3, [r3, #0]
 8006994:	685b      	ldr	r3, [r3, #4]
 8006996:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 800699a:	2b00      	cmp	r3, #0
 800699c:	d018      	beq.n	80069d0 <HAL_UART_Receive_IT+0x6e>
 800699e:	68fb      	ldr	r3, [r7, #12]
 80069a0:	681b      	ldr	r3, [r3, #0]
 80069a2:	617b      	str	r3, [r7, #20]
 80069a4:	697b      	ldr	r3, [r7, #20]
 80069a6:	e853 3f00 	ldrex	r3, [r3]
 80069aa:	613b      	str	r3, [r7, #16]
 80069ac:	693b      	ldr	r3, [r7, #16]
 80069ae:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
 80069b2:	627b      	str	r3, [r7, #36]	@ 0x24
 80069b4:	68fb      	ldr	r3, [r7, #12]
 80069b6:	681b      	ldr	r3, [r3, #0]
 80069b8:	461a      	mov	r2, r3
 80069ba:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80069bc:	623b      	str	r3, [r7, #32]
 80069be:	61fa      	str	r2, [r7, #28]
 80069c0:	69f9      	ldr	r1, [r7, #28]
 80069c2:	6a3a      	ldr	r2, [r7, #32]
 80069c4:	e841 2300 	strex	r3, r2, [r1]
 80069c8:	61bb      	str	r3, [r7, #24]
 80069ca:	69bb      	ldr	r3, [r7, #24]
 80069cc:	2b00      	cmp	r3, #0
 80069ce:	d1e6      	bne.n	800699e <HAL_UART_Receive_IT+0x3c>
 80069d0:	88fb      	ldrh	r3, [r7, #6]
 80069d2:	461a      	mov	r2, r3
 80069d4:	68b9      	ldr	r1, [r7, #8]
 80069d6:	68f8      	ldr	r0, [r7, #12]
 80069d8:	f000 fdfc 	bl	80075d4 <UART_Start_Receive_IT>
 80069dc:	4603      	mov	r3, r0
 80069de:	e000      	b.n	80069e2 <HAL_UART_Receive_IT+0x80>
 80069e0:	2302      	movs	r3, #2
 80069e2:	4618      	mov	r0, r3
 80069e4:	3728      	adds	r7, #40	@ 0x28
 80069e6:	46bd      	mov	sp, r7
 80069e8:	bd80      	pop	{r7, pc}
	...

080069ec <HAL_UART_IRQHandler>:
 80069ec:	b580      	push	{r7, lr}
 80069ee:	b0ba      	sub	sp, #232	@ 0xe8
 80069f0:	af00      	add	r7, sp, #0
 80069f2:	6078      	str	r0, [r7, #4]
 80069f4:	687b      	ldr	r3, [r7, #4]
 80069f6:	681b      	ldr	r3, [r3, #0]
 80069f8:	69db      	ldr	r3, [r3, #28]
 80069fa:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 80069fe:	687b      	ldr	r3, [r7, #4]
 8006a00:	681b      	ldr	r3, [r3, #0]
 8006a02:	681b      	ldr	r3, [r3, #0]
 8006a04:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 8006a08:	687b      	ldr	r3, [r7, #4]
 8006a0a:	681b      	ldr	r3, [r3, #0]
 8006a0c:	689b      	ldr	r3, [r3, #8]
 8006a0e:	f8c7 30dc 	str.w	r3, [r7, #220]	@ 0xdc
 8006a12:	f8d7 20e4 	ldr.w	r2, [r7, #228]	@ 0xe4
 8006a16:	f640 030f 	movw	r3, #2063	@ 0x80f
 8006a1a:	4013      	ands	r3, r2
 8006a1c:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 8006a20:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 8006a24:	2b00      	cmp	r3, #0
 8006a26:	d115      	bne.n	8006a54 <HAL_UART_IRQHandler+0x68>
 8006a28:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8006a2c:	f003 0320 	and.w	r3, r3, #32
 8006a30:	2b00      	cmp	r3, #0
 8006a32:	d00f      	beq.n	8006a54 <HAL_UART_IRQHandler+0x68>
 8006a34:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8006a38:	f003 0320 	and.w	r3, r3, #32
 8006a3c:	2b00      	cmp	r3, #0
 8006a3e:	d009      	beq.n	8006a54 <HAL_UART_IRQHandler+0x68>
 8006a40:	687b      	ldr	r3, [r7, #4]
 8006a42:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 8006a44:	2b00      	cmp	r3, #0
 8006a46:	f000 82ab 	beq.w	8006fa0 <HAL_UART_IRQHandler+0x5b4>
 8006a4a:	687b      	ldr	r3, [r7, #4]
 8006a4c:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 8006a4e:	6878      	ldr	r0, [r7, #4]
 8006a50:	4798      	blx	r3
 8006a52:	e2a5      	b.n	8006fa0 <HAL_UART_IRQHandler+0x5b4>
 8006a54:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 8006a58:	2b00      	cmp	r3, #0
 8006a5a:	f000 8117 	beq.w	8006c8c <HAL_UART_IRQHandler+0x2a0>
 8006a5e:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8006a62:	f003 0301 	and.w	r3, r3, #1
 8006a66:	2b00      	cmp	r3, #0
 8006a68:	d106      	bne.n	8006a78 <HAL_UART_IRQHandler+0x8c>
 8006a6a:	f8d7 20e0 	ldr.w	r2, [r7, #224]	@ 0xe0
 8006a6e:	4b85      	ldr	r3, [pc, #532]	@ (8006c84 <HAL_UART_IRQHandler+0x298>)
 8006a70:	4013      	ands	r3, r2
 8006a72:	2b00      	cmp	r3, #0
 8006a74:	f000 810a 	beq.w	8006c8c <HAL_UART_IRQHandler+0x2a0>
 8006a78:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8006a7c:	f003 0301 	and.w	r3, r3, #1
 8006a80:	2b00      	cmp	r3, #0
 8006a82:	d011      	beq.n	8006aa8 <HAL_UART_IRQHandler+0xbc>
 8006a84:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8006a88:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8006a8c:	2b00      	cmp	r3, #0
 8006a8e:	d00b      	beq.n	8006aa8 <HAL_UART_IRQHandler+0xbc>
 8006a90:	687b      	ldr	r3, [r7, #4]
 8006a92:	681b      	ldr	r3, [r3, #0]
 8006a94:	2201      	movs	r2, #1
 8006a96:	621a      	str	r2, [r3, #32]
 8006a98:	687b      	ldr	r3, [r7, #4]
 8006a9a:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8006a9e:	f043 0201 	orr.w	r2, r3, #1
 8006aa2:	687b      	ldr	r3, [r7, #4]
 8006aa4:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 8006aa8:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8006aac:	f003 0302 	and.w	r3, r3, #2
 8006ab0:	2b00      	cmp	r3, #0
 8006ab2:	d011      	beq.n	8006ad8 <HAL_UART_IRQHandler+0xec>
 8006ab4:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8006ab8:	f003 0301 	and.w	r3, r3, #1
 8006abc:	2b00      	cmp	r3, #0
 8006abe:	d00b      	beq.n	8006ad8 <HAL_UART_IRQHandler+0xec>
 8006ac0:	687b      	ldr	r3, [r7, #4]
 8006ac2:	681b      	ldr	r3, [r3, #0]
 8006ac4:	2202      	movs	r2, #2
 8006ac6:	621a      	str	r2, [r3, #32]
 8006ac8:	687b      	ldr	r3, [r7, #4]
 8006aca:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8006ace:	f043 0204 	orr.w	r2, r3, #4
 8006ad2:	687b      	ldr	r3, [r7, #4]
 8006ad4:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 8006ad8:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8006adc:	f003 0304 	and.w	r3, r3, #4
 8006ae0:	2b00      	cmp	r3, #0
 8006ae2:	d011      	beq.n	8006b08 <HAL_UART_IRQHandler+0x11c>
 8006ae4:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8006ae8:	f003 0301 	and.w	r3, r3, #1
 8006aec:	2b00      	cmp	r3, #0
 8006aee:	d00b      	beq.n	8006b08 <HAL_UART_IRQHandler+0x11c>
 8006af0:	687b      	ldr	r3, [r7, #4]
 8006af2:	681b      	ldr	r3, [r3, #0]
 8006af4:	2204      	movs	r2, #4
 8006af6:	621a      	str	r2, [r3, #32]
 8006af8:	687b      	ldr	r3, [r7, #4]
 8006afa:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8006afe:	f043 0202 	orr.w	r2, r3, #2
 8006b02:	687b      	ldr	r3, [r7, #4]
 8006b04:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 8006b08:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8006b0c:	f003 0308 	and.w	r3, r3, #8
 8006b10:	2b00      	cmp	r3, #0
 8006b12:	d017      	beq.n	8006b44 <HAL_UART_IRQHandler+0x158>
 8006b14:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8006b18:	f003 0320 	and.w	r3, r3, #32
 8006b1c:	2b00      	cmp	r3, #0
 8006b1e:	d105      	bne.n	8006b2c <HAL_UART_IRQHandler+0x140>
 8006b20:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8006b24:	f003 0301 	and.w	r3, r3, #1
 8006b28:	2b00      	cmp	r3, #0
 8006b2a:	d00b      	beq.n	8006b44 <HAL_UART_IRQHandler+0x158>
 8006b2c:	687b      	ldr	r3, [r7, #4]
 8006b2e:	681b      	ldr	r3, [r3, #0]
 8006b30:	2208      	movs	r2, #8
 8006b32:	621a      	str	r2, [r3, #32]
 8006b34:	687b      	ldr	r3, [r7, #4]
 8006b36:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8006b3a:	f043 0208 	orr.w	r2, r3, #8
 8006b3e:	687b      	ldr	r3, [r7, #4]
 8006b40:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 8006b44:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8006b48:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 8006b4c:	2b00      	cmp	r3, #0
 8006b4e:	d012      	beq.n	8006b76 <HAL_UART_IRQHandler+0x18a>
 8006b50:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8006b54:	f003 6380 	and.w	r3, r3, #67108864	@ 0x4000000
 8006b58:	2b00      	cmp	r3, #0
 8006b5a:	d00c      	beq.n	8006b76 <HAL_UART_IRQHandler+0x18a>
 8006b5c:	687b      	ldr	r3, [r7, #4]
 8006b5e:	681b      	ldr	r3, [r3, #0]
 8006b60:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 8006b64:	621a      	str	r2, [r3, #32]
 8006b66:	687b      	ldr	r3, [r7, #4]
 8006b68:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8006b6c:	f043 0220 	orr.w	r2, r3, #32
 8006b70:	687b      	ldr	r3, [r7, #4]
 8006b72:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 8006b76:	687b      	ldr	r3, [r7, #4]
 8006b78:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8006b7c:	2b00      	cmp	r3, #0
 8006b7e:	f000 8211 	beq.w	8006fa4 <HAL_UART_IRQHandler+0x5b8>
 8006b82:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8006b86:	f003 0320 	and.w	r3, r3, #32
 8006b8a:	2b00      	cmp	r3, #0
 8006b8c:	d00d      	beq.n	8006baa <HAL_UART_IRQHandler+0x1be>
 8006b8e:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8006b92:	f003 0320 	and.w	r3, r3, #32
 8006b96:	2b00      	cmp	r3, #0
 8006b98:	d007      	beq.n	8006baa <HAL_UART_IRQHandler+0x1be>
 8006b9a:	687b      	ldr	r3, [r7, #4]
 8006b9c:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 8006b9e:	2b00      	cmp	r3, #0
 8006ba0:	d003      	beq.n	8006baa <HAL_UART_IRQHandler+0x1be>
 8006ba2:	687b      	ldr	r3, [r7, #4]
 8006ba4:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 8006ba6:	6878      	ldr	r0, [r7, #4]
 8006ba8:	4798      	blx	r3
 8006baa:	687b      	ldr	r3, [r7, #4]
 8006bac:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8006bb0:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
 8006bb4:	687b      	ldr	r3, [r7, #4]
 8006bb6:	681b      	ldr	r3, [r3, #0]
 8006bb8:	689b      	ldr	r3, [r3, #8]
 8006bba:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8006bbe:	2b40      	cmp	r3, #64	@ 0x40
 8006bc0:	d005      	beq.n	8006bce <HAL_UART_IRQHandler+0x1e2>
 8006bc2:	f8d7 30d4 	ldr.w	r3, [r7, #212]	@ 0xd4
 8006bc6:	f003 0328 	and.w	r3, r3, #40	@ 0x28
 8006bca:	2b00      	cmp	r3, #0
 8006bcc:	d04f      	beq.n	8006c6e <HAL_UART_IRQHandler+0x282>
 8006bce:	6878      	ldr	r0, [r7, #4]
 8006bd0:	f000 fdc6 	bl	8007760 <UART_EndRxTransfer>
 8006bd4:	687b      	ldr	r3, [r7, #4]
 8006bd6:	681b      	ldr	r3, [r3, #0]
 8006bd8:	689b      	ldr	r3, [r3, #8]
 8006bda:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8006bde:	2b40      	cmp	r3, #64	@ 0x40
 8006be0:	d141      	bne.n	8006c66 <HAL_UART_IRQHandler+0x27a>
 8006be2:	687b      	ldr	r3, [r7, #4]
 8006be4:	681b      	ldr	r3, [r3, #0]
 8006be6:	3308      	adds	r3, #8
 8006be8:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 8006bec:	f8d7 309c 	ldr.w	r3, [r7, #156]	@ 0x9c
 8006bf0:	e853 3f00 	ldrex	r3, [r3]
 8006bf4:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 8006bf8:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 8006bfc:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8006c00:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 8006c04:	687b      	ldr	r3, [r7, #4]
 8006c06:	681b      	ldr	r3, [r3, #0]
 8006c08:	3308      	adds	r3, #8
 8006c0a:	f8d7 20d0 	ldr.w	r2, [r7, #208]	@ 0xd0
 8006c0e:	f8c7 20a8 	str.w	r2, [r7, #168]	@ 0xa8
 8006c12:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
 8006c16:	f8d7 10a4 	ldr.w	r1, [r7, #164]	@ 0xa4
 8006c1a:	f8d7 20a8 	ldr.w	r2, [r7, #168]	@ 0xa8
 8006c1e:	e841 2300 	strex	r3, r2, [r1]
 8006c22:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 8006c26:	f8d7 30a0 	ldr.w	r3, [r7, #160]	@ 0xa0
 8006c2a:	2b00      	cmp	r3, #0
 8006c2c:	d1d9      	bne.n	8006be2 <HAL_UART_IRQHandler+0x1f6>
 8006c2e:	687b      	ldr	r3, [r7, #4]
 8006c30:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8006c32:	2b00      	cmp	r3, #0
 8006c34:	d013      	beq.n	8006c5e <HAL_UART_IRQHandler+0x272>
 8006c36:	687b      	ldr	r3, [r7, #4]
 8006c38:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8006c3a:	4a13      	ldr	r2, [pc, #76]	@ (8006c88 <HAL_UART_IRQHandler+0x29c>)
 8006c3c:	635a      	str	r2, [r3, #52]	@ 0x34
 8006c3e:	687b      	ldr	r3, [r7, #4]
 8006c40:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8006c42:	4618      	mov	r0, r3
 8006c44:	f7fc f843 	bl	8002cce <HAL_DMA_Abort_IT>
 8006c48:	4603      	mov	r3, r0
 8006c4a:	2b00      	cmp	r3, #0
 8006c4c:	d017      	beq.n	8006c7e <HAL_UART_IRQHandler+0x292>
 8006c4e:	687b      	ldr	r3, [r7, #4]
 8006c50:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8006c52:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8006c54:	687a      	ldr	r2, [r7, #4]
 8006c56:	6f52      	ldr	r2, [r2, #116]	@ 0x74
 8006c58:	4610      	mov	r0, r2
 8006c5a:	4798      	blx	r3
 8006c5c:	e00f      	b.n	8006c7e <HAL_UART_IRQHandler+0x292>
 8006c5e:	6878      	ldr	r0, [r7, #4]
 8006c60:	f000 f9b4 	bl	8006fcc <HAL_UART_ErrorCallback>
 8006c64:	e00b      	b.n	8006c7e <HAL_UART_IRQHandler+0x292>
 8006c66:	6878      	ldr	r0, [r7, #4]
 8006c68:	f000 f9b0 	bl	8006fcc <HAL_UART_ErrorCallback>
 8006c6c:	e007      	b.n	8006c7e <HAL_UART_IRQHandler+0x292>
 8006c6e:	6878      	ldr	r0, [r7, #4]
 8006c70:	f000 f9ac 	bl	8006fcc <HAL_UART_ErrorCallback>
 8006c74:	687b      	ldr	r3, [r7, #4]
 8006c76:	2200      	movs	r2, #0
 8006c78:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 8006c7c:	e192      	b.n	8006fa4 <HAL_UART_IRQHandler+0x5b8>
 8006c7e:	bf00      	nop
 8006c80:	e190      	b.n	8006fa4 <HAL_UART_IRQHandler+0x5b8>
 8006c82:	bf00      	nop
 8006c84:	04000120 	.word	0x04000120
 8006c88:	08007829 	.word	0x08007829
 8006c8c:	687b      	ldr	r3, [r7, #4]
 8006c8e:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8006c90:	2b01      	cmp	r3, #1
 8006c92:	f040 814b 	bne.w	8006f2c <HAL_UART_IRQHandler+0x540>
 8006c96:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8006c9a:	f003 0310 	and.w	r3, r3, #16
 8006c9e:	2b00      	cmp	r3, #0
 8006ca0:	f000 8144 	beq.w	8006f2c <HAL_UART_IRQHandler+0x540>
 8006ca4:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8006ca8:	f003 0310 	and.w	r3, r3, #16
 8006cac:	2b00      	cmp	r3, #0
 8006cae:	f000 813d 	beq.w	8006f2c <HAL_UART_IRQHandler+0x540>
 8006cb2:	687b      	ldr	r3, [r7, #4]
 8006cb4:	681b      	ldr	r3, [r3, #0]
 8006cb6:	2210      	movs	r2, #16
 8006cb8:	621a      	str	r2, [r3, #32]
 8006cba:	687b      	ldr	r3, [r7, #4]
 8006cbc:	681b      	ldr	r3, [r3, #0]
 8006cbe:	689b      	ldr	r3, [r3, #8]
 8006cc0:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8006cc4:	2b40      	cmp	r3, #64	@ 0x40
 8006cc6:	f040 80b5 	bne.w	8006e34 <HAL_UART_IRQHandler+0x448>
 8006cca:	687b      	ldr	r3, [r7, #4]
 8006ccc:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8006cce:	681b      	ldr	r3, [r3, #0]
 8006cd0:	685b      	ldr	r3, [r3, #4]
 8006cd2:	f8a7 30be 	strh.w	r3, [r7, #190]	@ 0xbe
 8006cd6:	f8b7 30be 	ldrh.w	r3, [r7, #190]	@ 0xbe
 8006cda:	2b00      	cmp	r3, #0
 8006cdc:	f000 8164 	beq.w	8006fa8 <HAL_UART_IRQHandler+0x5bc>
 8006ce0:	687b      	ldr	r3, [r7, #4]
 8006ce2:	f8b3 3058 	ldrh.w	r3, [r3, #88]	@ 0x58
 8006ce6:	f8b7 20be 	ldrh.w	r2, [r7, #190]	@ 0xbe
 8006cea:	429a      	cmp	r2, r3
 8006cec:	f080 815c 	bcs.w	8006fa8 <HAL_UART_IRQHandler+0x5bc>
 8006cf0:	687b      	ldr	r3, [r7, #4]
 8006cf2:	f8b7 20be 	ldrh.w	r2, [r7, #190]	@ 0xbe
 8006cf6:	f8a3 205a 	strh.w	r2, [r3, #90]	@ 0x5a
 8006cfa:	687b      	ldr	r3, [r7, #4]
 8006cfc:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8006cfe:	699b      	ldr	r3, [r3, #24]
 8006d00:	2b20      	cmp	r3, #32
 8006d02:	f000 8086 	beq.w	8006e12 <HAL_UART_IRQHandler+0x426>
 8006d06:	687b      	ldr	r3, [r7, #4]
 8006d08:	681b      	ldr	r3, [r3, #0]
 8006d0a:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 8006d0e:	f8d7 3088 	ldr.w	r3, [r7, #136]	@ 0x88
 8006d12:	e853 3f00 	ldrex	r3, [r3]
 8006d16:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 8006d1a:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 8006d1e:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8006d22:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 8006d26:	687b      	ldr	r3, [r7, #4]
 8006d28:	681b      	ldr	r3, [r3, #0]
 8006d2a:	461a      	mov	r2, r3
 8006d2c:	f8d7 30b8 	ldr.w	r3, [r7, #184]	@ 0xb8
 8006d30:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 8006d34:	f8c7 2090 	str.w	r2, [r7, #144]	@ 0x90
 8006d38:	f8d7 1090 	ldr.w	r1, [r7, #144]	@ 0x90
 8006d3c:	f8d7 2094 	ldr.w	r2, [r7, #148]	@ 0x94
 8006d40:	e841 2300 	strex	r3, r2, [r1]
 8006d44:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 8006d48:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 8006d4c:	2b00      	cmp	r3, #0
 8006d4e:	d1da      	bne.n	8006d06 <HAL_UART_IRQHandler+0x31a>
 8006d50:	687b      	ldr	r3, [r7, #4]
 8006d52:	681b      	ldr	r3, [r3, #0]
 8006d54:	3308      	adds	r3, #8
 8006d56:	677b      	str	r3, [r7, #116]	@ 0x74
 8006d58:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 8006d5a:	e853 3f00 	ldrex	r3, [r3]
 8006d5e:	673b      	str	r3, [r7, #112]	@ 0x70
 8006d60:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 8006d62:	f023 0301 	bic.w	r3, r3, #1
 8006d66:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8006d6a:	687b      	ldr	r3, [r7, #4]
 8006d6c:	681b      	ldr	r3, [r3, #0]
 8006d6e:	3308      	adds	r3, #8
 8006d70:	f8d7 20b4 	ldr.w	r2, [r7, #180]	@ 0xb4
 8006d74:	f8c7 2080 	str.w	r2, [r7, #128]	@ 0x80
 8006d78:	67fb      	str	r3, [r7, #124]	@ 0x7c
 8006d7a:	6ff9      	ldr	r1, [r7, #124]	@ 0x7c
 8006d7c:	f8d7 2080 	ldr.w	r2, [r7, #128]	@ 0x80
 8006d80:	e841 2300 	strex	r3, r2, [r1]
 8006d84:	67bb      	str	r3, [r7, #120]	@ 0x78
 8006d86:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 8006d88:	2b00      	cmp	r3, #0
 8006d8a:	d1e1      	bne.n	8006d50 <HAL_UART_IRQHandler+0x364>
 8006d8c:	687b      	ldr	r3, [r7, #4]
 8006d8e:	681b      	ldr	r3, [r3, #0]
 8006d90:	3308      	adds	r3, #8
 8006d92:	663b      	str	r3, [r7, #96]	@ 0x60
 8006d94:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 8006d96:	e853 3f00 	ldrex	r3, [r3]
 8006d9a:	65fb      	str	r3, [r7, #92]	@ 0x5c
 8006d9c:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 8006d9e:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8006da2:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 8006da6:	687b      	ldr	r3, [r7, #4]
 8006da8:	681b      	ldr	r3, [r3, #0]
 8006daa:	3308      	adds	r3, #8
 8006dac:	f8d7 20b0 	ldr.w	r2, [r7, #176]	@ 0xb0
 8006db0:	66fa      	str	r2, [r7, #108]	@ 0x6c
 8006db2:	66bb      	str	r3, [r7, #104]	@ 0x68
 8006db4:	6eb9      	ldr	r1, [r7, #104]	@ 0x68
 8006db6:	6efa      	ldr	r2, [r7, #108]	@ 0x6c
 8006db8:	e841 2300 	strex	r3, r2, [r1]
 8006dbc:	667b      	str	r3, [r7, #100]	@ 0x64
 8006dbe:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8006dc0:	2b00      	cmp	r3, #0
 8006dc2:	d1e3      	bne.n	8006d8c <HAL_UART_IRQHandler+0x3a0>
 8006dc4:	687b      	ldr	r3, [r7, #4]
 8006dc6:	2220      	movs	r2, #32
 8006dc8:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
 8006dcc:	687b      	ldr	r3, [r7, #4]
 8006dce:	2200      	movs	r2, #0
 8006dd0:	661a      	str	r2, [r3, #96]	@ 0x60
 8006dd2:	687b      	ldr	r3, [r7, #4]
 8006dd4:	681b      	ldr	r3, [r3, #0]
 8006dd6:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8006dd8:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8006dda:	e853 3f00 	ldrex	r3, [r3]
 8006dde:	64bb      	str	r3, [r7, #72]	@ 0x48
 8006de0:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8006de2:	f023 0310 	bic.w	r3, r3, #16
 8006de6:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 8006dea:	687b      	ldr	r3, [r7, #4]
 8006dec:	681b      	ldr	r3, [r3, #0]
 8006dee:	461a      	mov	r2, r3
 8006df0:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 8006df4:	65bb      	str	r3, [r7, #88]	@ 0x58
 8006df6:	657a      	str	r2, [r7, #84]	@ 0x54
 8006df8:	6d79      	ldr	r1, [r7, #84]	@ 0x54
 8006dfa:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 8006dfc:	e841 2300 	strex	r3, r2, [r1]
 8006e00:	653b      	str	r3, [r7, #80]	@ 0x50
 8006e02:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 8006e04:	2b00      	cmp	r3, #0
 8006e06:	d1e4      	bne.n	8006dd2 <HAL_UART_IRQHandler+0x3e6>
 8006e08:	687b      	ldr	r3, [r7, #4]
 8006e0a:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8006e0c:	4618      	mov	r0, r3
 8006e0e:	f7fb ff20 	bl	8002c52 <HAL_DMA_Abort>
 8006e12:	687b      	ldr	r3, [r7, #4]
 8006e14:	2202      	movs	r2, #2
 8006e16:	665a      	str	r2, [r3, #100]	@ 0x64
 8006e18:	687b      	ldr	r3, [r7, #4]
 8006e1a:	f8b3 2058 	ldrh.w	r2, [r3, #88]	@ 0x58
 8006e1e:	687b      	ldr	r3, [r7, #4]
 8006e20:	f8b3 305a 	ldrh.w	r3, [r3, #90]	@ 0x5a
 8006e24:	b29b      	uxth	r3, r3
 8006e26:	1ad3      	subs	r3, r2, r3
 8006e28:	b29b      	uxth	r3, r3
 8006e2a:	4619      	mov	r1, r3
 8006e2c:	6878      	ldr	r0, [r7, #4]
 8006e2e:	f000 f8d7 	bl	8006fe0 <HAL_UARTEx_RxEventCallback>
 8006e32:	e0b9      	b.n	8006fa8 <HAL_UART_IRQHandler+0x5bc>
 8006e34:	687b      	ldr	r3, [r7, #4]
 8006e36:	f8b3 2058 	ldrh.w	r2, [r3, #88]	@ 0x58
 8006e3a:	687b      	ldr	r3, [r7, #4]
 8006e3c:	f8b3 305a 	ldrh.w	r3, [r3, #90]	@ 0x5a
 8006e40:	b29b      	uxth	r3, r3
 8006e42:	1ad3      	subs	r3, r2, r3
 8006e44:	f8a7 30ce 	strh.w	r3, [r7, #206]	@ 0xce
 8006e48:	687b      	ldr	r3, [r7, #4]
 8006e4a:	f8b3 305a 	ldrh.w	r3, [r3, #90]	@ 0x5a
 8006e4e:	b29b      	uxth	r3, r3
 8006e50:	2b00      	cmp	r3, #0
 8006e52:	f000 80ab 	beq.w	8006fac <HAL_UART_IRQHandler+0x5c0>
 8006e56:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	@ 0xce
 8006e5a:	2b00      	cmp	r3, #0
 8006e5c:	f000 80a6 	beq.w	8006fac <HAL_UART_IRQHandler+0x5c0>
 8006e60:	687b      	ldr	r3, [r7, #4]
 8006e62:	681b      	ldr	r3, [r3, #0]
 8006e64:	63bb      	str	r3, [r7, #56]	@ 0x38
 8006e66:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8006e68:	e853 3f00 	ldrex	r3, [r3]
 8006e6c:	637b      	str	r3, [r7, #52]	@ 0x34
 8006e6e:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8006e70:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 8006e74:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 8006e78:	687b      	ldr	r3, [r7, #4]
 8006e7a:	681b      	ldr	r3, [r3, #0]
 8006e7c:	461a      	mov	r2, r3
 8006e7e:	f8d7 30c8 	ldr.w	r3, [r7, #200]	@ 0xc8
 8006e82:	647b      	str	r3, [r7, #68]	@ 0x44
 8006e84:	643a      	str	r2, [r7, #64]	@ 0x40
 8006e86:	6c39      	ldr	r1, [r7, #64]	@ 0x40
 8006e88:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 8006e8a:	e841 2300 	strex	r3, r2, [r1]
 8006e8e:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8006e90:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8006e92:	2b00      	cmp	r3, #0
 8006e94:	d1e4      	bne.n	8006e60 <HAL_UART_IRQHandler+0x474>
 8006e96:	687b      	ldr	r3, [r7, #4]
 8006e98:	681b      	ldr	r3, [r3, #0]
 8006e9a:	3308      	adds	r3, #8
 8006e9c:	627b      	str	r3, [r7, #36]	@ 0x24
 8006e9e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006ea0:	e853 3f00 	ldrex	r3, [r3]
 8006ea4:	623b      	str	r3, [r7, #32]
 8006ea6:	6a3b      	ldr	r3, [r7, #32]
 8006ea8:	f023 0301 	bic.w	r3, r3, #1
 8006eac:	f8c7 30c4 	str.w	r3, [r7, #196]	@ 0xc4
 8006eb0:	687b      	ldr	r3, [r7, #4]
 8006eb2:	681b      	ldr	r3, [r3, #0]
 8006eb4:	3308      	adds	r3, #8
 8006eb6:	f8d7 20c4 	ldr.w	r2, [r7, #196]	@ 0xc4
 8006eba:	633a      	str	r2, [r7, #48]	@ 0x30
 8006ebc:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8006ebe:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8006ec0:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8006ec2:	e841 2300 	strex	r3, r2, [r1]
 8006ec6:	62bb      	str	r3, [r7, #40]	@ 0x28
 8006ec8:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8006eca:	2b00      	cmp	r3, #0
 8006ecc:	d1e3      	bne.n	8006e96 <HAL_UART_IRQHandler+0x4aa>
 8006ece:	687b      	ldr	r3, [r7, #4]
 8006ed0:	2220      	movs	r2, #32
 8006ed2:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
 8006ed6:	687b      	ldr	r3, [r7, #4]
 8006ed8:	2200      	movs	r2, #0
 8006eda:	661a      	str	r2, [r3, #96]	@ 0x60
 8006edc:	687b      	ldr	r3, [r7, #4]
 8006ede:	2200      	movs	r2, #0
 8006ee0:	669a      	str	r2, [r3, #104]	@ 0x68
 8006ee2:	687b      	ldr	r3, [r7, #4]
 8006ee4:	681b      	ldr	r3, [r3, #0]
 8006ee6:	613b      	str	r3, [r7, #16]
 8006ee8:	693b      	ldr	r3, [r7, #16]
 8006eea:	e853 3f00 	ldrex	r3, [r3]
 8006eee:	60fb      	str	r3, [r7, #12]
 8006ef0:	68fb      	ldr	r3, [r7, #12]
 8006ef2:	f023 0310 	bic.w	r3, r3, #16
 8006ef6:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 8006efa:	687b      	ldr	r3, [r7, #4]
 8006efc:	681b      	ldr	r3, [r3, #0]
 8006efe:	461a      	mov	r2, r3
 8006f00:	f8d7 30c0 	ldr.w	r3, [r7, #192]	@ 0xc0
 8006f04:	61fb      	str	r3, [r7, #28]
 8006f06:	61ba      	str	r2, [r7, #24]
 8006f08:	69b9      	ldr	r1, [r7, #24]
 8006f0a:	69fa      	ldr	r2, [r7, #28]
 8006f0c:	e841 2300 	strex	r3, r2, [r1]
 8006f10:	617b      	str	r3, [r7, #20]
 8006f12:	697b      	ldr	r3, [r7, #20]
 8006f14:	2b00      	cmp	r3, #0
 8006f16:	d1e4      	bne.n	8006ee2 <HAL_UART_IRQHandler+0x4f6>
 8006f18:	687b      	ldr	r3, [r7, #4]
 8006f1a:	2202      	movs	r2, #2
 8006f1c:	665a      	str	r2, [r3, #100]	@ 0x64
 8006f1e:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	@ 0xce
 8006f22:	4619      	mov	r1, r3
 8006f24:	6878      	ldr	r0, [r7, #4]
 8006f26:	f000 f85b 	bl	8006fe0 <HAL_UARTEx_RxEventCallback>
 8006f2a:	e03f      	b.n	8006fac <HAL_UART_IRQHandler+0x5c0>
 8006f2c:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8006f30:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 8006f34:	2b00      	cmp	r3, #0
 8006f36:	d00e      	beq.n	8006f56 <HAL_UART_IRQHandler+0x56a>
 8006f38:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8006f3c:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8006f40:	2b00      	cmp	r3, #0
 8006f42:	d008      	beq.n	8006f56 <HAL_UART_IRQHandler+0x56a>
 8006f44:	687b      	ldr	r3, [r7, #4]
 8006f46:	681b      	ldr	r3, [r3, #0]
 8006f48:	f44f 1280 	mov.w	r2, #1048576	@ 0x100000
 8006f4c:	621a      	str	r2, [r3, #32]
 8006f4e:	6878      	ldr	r0, [r7, #4]
 8006f50:	f000 fe52 	bl	8007bf8 <HAL_UARTEx_WakeupCallback>
 8006f54:	e02d      	b.n	8006fb2 <HAL_UART_IRQHandler+0x5c6>
 8006f56:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8006f5a:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8006f5e:	2b00      	cmp	r3, #0
 8006f60:	d00e      	beq.n	8006f80 <HAL_UART_IRQHandler+0x594>
 8006f62:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8006f66:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8006f6a:	2b00      	cmp	r3, #0
 8006f6c:	d008      	beq.n	8006f80 <HAL_UART_IRQHandler+0x594>
 8006f6e:	687b      	ldr	r3, [r7, #4]
 8006f70:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8006f72:	2b00      	cmp	r3, #0
 8006f74:	d01c      	beq.n	8006fb0 <HAL_UART_IRQHandler+0x5c4>
 8006f76:	687b      	ldr	r3, [r7, #4]
 8006f78:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8006f7a:	6878      	ldr	r0, [r7, #4]
 8006f7c:	4798      	blx	r3
 8006f7e:	e017      	b.n	8006fb0 <HAL_UART_IRQHandler+0x5c4>
 8006f80:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8006f84:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8006f88:	2b00      	cmp	r3, #0
 8006f8a:	d012      	beq.n	8006fb2 <HAL_UART_IRQHandler+0x5c6>
 8006f8c:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8006f90:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8006f94:	2b00      	cmp	r3, #0
 8006f96:	d00c      	beq.n	8006fb2 <HAL_UART_IRQHandler+0x5c6>
 8006f98:	6878      	ldr	r0, [r7, #4]
 8006f9a:	f000 fc5b 	bl	8007854 <UART_EndTransmit_IT>
 8006f9e:	e008      	b.n	8006fb2 <HAL_UART_IRQHandler+0x5c6>
 8006fa0:	bf00      	nop
 8006fa2:	e006      	b.n	8006fb2 <HAL_UART_IRQHandler+0x5c6>
 8006fa4:	bf00      	nop
 8006fa6:	e004      	b.n	8006fb2 <HAL_UART_IRQHandler+0x5c6>
 8006fa8:	bf00      	nop
 8006faa:	e002      	b.n	8006fb2 <HAL_UART_IRQHandler+0x5c6>
 8006fac:	bf00      	nop
 8006fae:	e000      	b.n	8006fb2 <HAL_UART_IRQHandler+0x5c6>
 8006fb0:	bf00      	nop
 8006fb2:	37e8      	adds	r7, #232	@ 0xe8
 8006fb4:	46bd      	mov	sp, r7
 8006fb6:	bd80      	pop	{r7, pc}

08006fb8 <HAL_UART_TxCpltCallback>:
 8006fb8:	b480      	push	{r7}
 8006fba:	b083      	sub	sp, #12
 8006fbc:	af00      	add	r7, sp, #0
 8006fbe:	6078      	str	r0, [r7, #4]
 8006fc0:	bf00      	nop
 8006fc2:	370c      	adds	r7, #12
 8006fc4:	46bd      	mov	sp, r7
 8006fc6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006fca:	4770      	bx	lr

08006fcc <HAL_UART_ErrorCallback>:
 8006fcc:	b480      	push	{r7}
 8006fce:	b083      	sub	sp, #12
 8006fd0:	af00      	add	r7, sp, #0
 8006fd2:	6078      	str	r0, [r7, #4]
 8006fd4:	bf00      	nop
 8006fd6:	370c      	adds	r7, #12
 8006fd8:	46bd      	mov	sp, r7
 8006fda:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006fde:	4770      	bx	lr

08006fe0 <HAL_UARTEx_RxEventCallback>:
 8006fe0:	b480      	push	{r7}
 8006fe2:	b083      	sub	sp, #12
 8006fe4:	af00      	add	r7, sp, #0
 8006fe6:	6078      	str	r0, [r7, #4]
 8006fe8:	460b      	mov	r3, r1
 8006fea:	807b      	strh	r3, [r7, #2]
 8006fec:	bf00      	nop
 8006fee:	370c      	adds	r7, #12
 8006ff0:	46bd      	mov	sp, r7
 8006ff2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006ff6:	4770      	bx	lr

08006ff8 <UART_SetConfig>:
 8006ff8:	b580      	push	{r7, lr}
 8006ffa:	b088      	sub	sp, #32
 8006ffc:	af00      	add	r7, sp, #0
 8006ffe:	6078      	str	r0, [r7, #4]
 8007000:	2300      	movs	r3, #0
 8007002:	77bb      	strb	r3, [r7, #30]
 8007004:	687b      	ldr	r3, [r7, #4]
 8007006:	689a      	ldr	r2, [r3, #8]
 8007008:	687b      	ldr	r3, [r7, #4]
 800700a:	691b      	ldr	r3, [r3, #16]
 800700c:	431a      	orrs	r2, r3
 800700e:	687b      	ldr	r3, [r7, #4]
 8007010:	695b      	ldr	r3, [r3, #20]
 8007012:	431a      	orrs	r2, r3
 8007014:	687b      	ldr	r3, [r7, #4]
 8007016:	69db      	ldr	r3, [r3, #28]
 8007018:	4313      	orrs	r3, r2
 800701a:	617b      	str	r3, [r7, #20]
 800701c:	687b      	ldr	r3, [r7, #4]
 800701e:	681b      	ldr	r3, [r3, #0]
 8007020:	681a      	ldr	r2, [r3, #0]
 8007022:	4b8a      	ldr	r3, [pc, #552]	@ (800724c <UART_SetConfig+0x254>)
 8007024:	4013      	ands	r3, r2
 8007026:	687a      	ldr	r2, [r7, #4]
 8007028:	6812      	ldr	r2, [r2, #0]
 800702a:	6979      	ldr	r1, [r7, #20]
 800702c:	430b      	orrs	r3, r1
 800702e:	6013      	str	r3, [r2, #0]
 8007030:	687b      	ldr	r3, [r7, #4]
 8007032:	681b      	ldr	r3, [r3, #0]
 8007034:	685b      	ldr	r3, [r3, #4]
 8007036:	f423 5140 	bic.w	r1, r3, #12288	@ 0x3000
 800703a:	687b      	ldr	r3, [r7, #4]
 800703c:	68da      	ldr	r2, [r3, #12]
 800703e:	687b      	ldr	r3, [r7, #4]
 8007040:	681b      	ldr	r3, [r3, #0]
 8007042:	430a      	orrs	r2, r1
 8007044:	605a      	str	r2, [r3, #4]
 8007046:	687b      	ldr	r3, [r7, #4]
 8007048:	699b      	ldr	r3, [r3, #24]
 800704a:	617b      	str	r3, [r7, #20]
 800704c:	687b      	ldr	r3, [r7, #4]
 800704e:	6a1b      	ldr	r3, [r3, #32]
 8007050:	697a      	ldr	r2, [r7, #20]
 8007052:	4313      	orrs	r3, r2
 8007054:	617b      	str	r3, [r7, #20]
 8007056:	687b      	ldr	r3, [r7, #4]
 8007058:	681b      	ldr	r3, [r3, #0]
 800705a:	689b      	ldr	r3, [r3, #8]
 800705c:	f423 6130 	bic.w	r1, r3, #2816	@ 0xb00
 8007060:	687b      	ldr	r3, [r7, #4]
 8007062:	681b      	ldr	r3, [r3, #0]
 8007064:	697a      	ldr	r2, [r7, #20]
 8007066:	430a      	orrs	r2, r1
 8007068:	609a      	str	r2, [r3, #8]
 800706a:	687b      	ldr	r3, [r7, #4]
 800706c:	681b      	ldr	r3, [r3, #0]
 800706e:	4a78      	ldr	r2, [pc, #480]	@ (8007250 <UART_SetConfig+0x258>)
 8007070:	4293      	cmp	r3, r2
 8007072:	d120      	bne.n	80070b6 <UART_SetConfig+0xbe>
 8007074:	4b77      	ldr	r3, [pc, #476]	@ (8007254 <UART_SetConfig+0x25c>)
 8007076:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8007078:	f003 0303 	and.w	r3, r3, #3
 800707c:	2b03      	cmp	r3, #3
 800707e:	d817      	bhi.n	80070b0 <UART_SetConfig+0xb8>
 8007080:	a201      	add	r2, pc, #4	@ (adr r2, 8007088 <UART_SetConfig+0x90>)
 8007082:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8007086:	bf00      	nop
 8007088:	08007099 	.word	0x08007099
 800708c:	080070a5 	.word	0x080070a5
 8007090:	080070ab 	.word	0x080070ab
 8007094:	0800709f 	.word	0x0800709f
 8007098:	2300      	movs	r3, #0
 800709a:	77fb      	strb	r3, [r7, #31]
 800709c:	e01d      	b.n	80070da <UART_SetConfig+0xe2>
 800709e:	2302      	movs	r3, #2
 80070a0:	77fb      	strb	r3, [r7, #31]
 80070a2:	e01a      	b.n	80070da <UART_SetConfig+0xe2>
 80070a4:	2304      	movs	r3, #4
 80070a6:	77fb      	strb	r3, [r7, #31]
 80070a8:	e017      	b.n	80070da <UART_SetConfig+0xe2>
 80070aa:	2308      	movs	r3, #8
 80070ac:	77fb      	strb	r3, [r7, #31]
 80070ae:	e014      	b.n	80070da <UART_SetConfig+0xe2>
 80070b0:	2310      	movs	r3, #16
 80070b2:	77fb      	strb	r3, [r7, #31]
 80070b4:	e011      	b.n	80070da <UART_SetConfig+0xe2>
 80070b6:	687b      	ldr	r3, [r7, #4]
 80070b8:	681b      	ldr	r3, [r3, #0]
 80070ba:	4a67      	ldr	r2, [pc, #412]	@ (8007258 <UART_SetConfig+0x260>)
 80070bc:	4293      	cmp	r3, r2
 80070be:	d102      	bne.n	80070c6 <UART_SetConfig+0xce>
 80070c0:	2300      	movs	r3, #0
 80070c2:	77fb      	strb	r3, [r7, #31]
 80070c4:	e009      	b.n	80070da <UART_SetConfig+0xe2>
 80070c6:	687b      	ldr	r3, [r7, #4]
 80070c8:	681b      	ldr	r3, [r3, #0]
 80070ca:	4a64      	ldr	r2, [pc, #400]	@ (800725c <UART_SetConfig+0x264>)
 80070cc:	4293      	cmp	r3, r2
 80070ce:	d102      	bne.n	80070d6 <UART_SetConfig+0xde>
 80070d0:	2300      	movs	r3, #0
 80070d2:	77fb      	strb	r3, [r7, #31]
 80070d4:	e001      	b.n	80070da <UART_SetConfig+0xe2>
 80070d6:	2310      	movs	r3, #16
 80070d8:	77fb      	strb	r3, [r7, #31]
 80070da:	687b      	ldr	r3, [r7, #4]
 80070dc:	69db      	ldr	r3, [r3, #28]
 80070de:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 80070e2:	d15a      	bne.n	800719a <UART_SetConfig+0x1a2>
 80070e4:	7ffb      	ldrb	r3, [r7, #31]
 80070e6:	2b08      	cmp	r3, #8
 80070e8:	d827      	bhi.n	800713a <UART_SetConfig+0x142>
 80070ea:	a201      	add	r2, pc, #4	@ (adr r2, 80070f0 <UART_SetConfig+0xf8>)
 80070ec:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80070f0:	08007115 	.word	0x08007115
 80070f4:	0800711d 	.word	0x0800711d
 80070f8:	08007125 	.word	0x08007125
 80070fc:	0800713b 	.word	0x0800713b
 8007100:	0800712b 	.word	0x0800712b
 8007104:	0800713b 	.word	0x0800713b
 8007108:	0800713b 	.word	0x0800713b
 800710c:	0800713b 	.word	0x0800713b
 8007110:	08007133 	.word	0x08007133
 8007114:	f7fd ffe2 	bl	80050dc <HAL_RCC_GetPCLK1Freq>
 8007118:	61b8      	str	r0, [r7, #24]
 800711a:	e013      	b.n	8007144 <UART_SetConfig+0x14c>
 800711c:	f7fe f800 	bl	8005120 <HAL_RCC_GetPCLK2Freq>
 8007120:	61b8      	str	r0, [r7, #24]
 8007122:	e00f      	b.n	8007144 <UART_SetConfig+0x14c>
 8007124:	4b4e      	ldr	r3, [pc, #312]	@ (8007260 <UART_SetConfig+0x268>)
 8007126:	61bb      	str	r3, [r7, #24]
 8007128:	e00c      	b.n	8007144 <UART_SetConfig+0x14c>
 800712a:	f7fd ff77 	bl	800501c <HAL_RCC_GetSysClockFreq>
 800712e:	61b8      	str	r0, [r7, #24]
 8007130:	e008      	b.n	8007144 <UART_SetConfig+0x14c>
 8007132:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8007136:	61bb      	str	r3, [r7, #24]
 8007138:	e004      	b.n	8007144 <UART_SetConfig+0x14c>
 800713a:	2300      	movs	r3, #0
 800713c:	61bb      	str	r3, [r7, #24]
 800713e:	2301      	movs	r3, #1
 8007140:	77bb      	strb	r3, [r7, #30]
 8007142:	bf00      	nop
 8007144:	69bb      	ldr	r3, [r7, #24]
 8007146:	2b00      	cmp	r3, #0
 8007148:	d074      	beq.n	8007234 <UART_SetConfig+0x23c>
 800714a:	69bb      	ldr	r3, [r7, #24]
 800714c:	005a      	lsls	r2, r3, #1
 800714e:	687b      	ldr	r3, [r7, #4]
 8007150:	685b      	ldr	r3, [r3, #4]
 8007152:	085b      	lsrs	r3, r3, #1
 8007154:	441a      	add	r2, r3
 8007156:	687b      	ldr	r3, [r7, #4]
 8007158:	685b      	ldr	r3, [r3, #4]
 800715a:	fbb2 f3f3 	udiv	r3, r2, r3
 800715e:	613b      	str	r3, [r7, #16]
 8007160:	693b      	ldr	r3, [r7, #16]
 8007162:	2b0f      	cmp	r3, #15
 8007164:	d916      	bls.n	8007194 <UART_SetConfig+0x19c>
 8007166:	693b      	ldr	r3, [r7, #16]
 8007168:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 800716c:	d212      	bcs.n	8007194 <UART_SetConfig+0x19c>
 800716e:	693b      	ldr	r3, [r7, #16]
 8007170:	b29b      	uxth	r3, r3
 8007172:	f023 030f 	bic.w	r3, r3, #15
 8007176:	81fb      	strh	r3, [r7, #14]
 8007178:	693b      	ldr	r3, [r7, #16]
 800717a:	085b      	lsrs	r3, r3, #1
 800717c:	b29b      	uxth	r3, r3
 800717e:	f003 0307 	and.w	r3, r3, #7
 8007182:	b29a      	uxth	r2, r3
 8007184:	89fb      	ldrh	r3, [r7, #14]
 8007186:	4313      	orrs	r3, r2
 8007188:	81fb      	strh	r3, [r7, #14]
 800718a:	687b      	ldr	r3, [r7, #4]
 800718c:	681b      	ldr	r3, [r3, #0]
 800718e:	89fa      	ldrh	r2, [r7, #14]
 8007190:	60da      	str	r2, [r3, #12]
 8007192:	e04f      	b.n	8007234 <UART_SetConfig+0x23c>
 8007194:	2301      	movs	r3, #1
 8007196:	77bb      	strb	r3, [r7, #30]
 8007198:	e04c      	b.n	8007234 <UART_SetConfig+0x23c>
 800719a:	7ffb      	ldrb	r3, [r7, #31]
 800719c:	2b08      	cmp	r3, #8
 800719e:	d828      	bhi.n	80071f2 <UART_SetConfig+0x1fa>
 80071a0:	a201      	add	r2, pc, #4	@ (adr r2, 80071a8 <UART_SetConfig+0x1b0>)
 80071a2:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80071a6:	bf00      	nop
 80071a8:	080071cd 	.word	0x080071cd
 80071ac:	080071d5 	.word	0x080071d5
 80071b0:	080071dd 	.word	0x080071dd
 80071b4:	080071f3 	.word	0x080071f3
 80071b8:	080071e3 	.word	0x080071e3
 80071bc:	080071f3 	.word	0x080071f3
 80071c0:	080071f3 	.word	0x080071f3
 80071c4:	080071f3 	.word	0x080071f3
 80071c8:	080071eb 	.word	0x080071eb
 80071cc:	f7fd ff86 	bl	80050dc <HAL_RCC_GetPCLK1Freq>
 80071d0:	61b8      	str	r0, [r7, #24]
 80071d2:	e013      	b.n	80071fc <UART_SetConfig+0x204>
 80071d4:	f7fd ffa4 	bl	8005120 <HAL_RCC_GetPCLK2Freq>
 80071d8:	61b8      	str	r0, [r7, #24]
 80071da:	e00f      	b.n	80071fc <UART_SetConfig+0x204>
 80071dc:	4b20      	ldr	r3, [pc, #128]	@ (8007260 <UART_SetConfig+0x268>)
 80071de:	61bb      	str	r3, [r7, #24]
 80071e0:	e00c      	b.n	80071fc <UART_SetConfig+0x204>
 80071e2:	f7fd ff1b 	bl	800501c <HAL_RCC_GetSysClockFreq>
 80071e6:	61b8      	str	r0, [r7, #24]
 80071e8:	e008      	b.n	80071fc <UART_SetConfig+0x204>
 80071ea:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 80071ee:	61bb      	str	r3, [r7, #24]
 80071f0:	e004      	b.n	80071fc <UART_SetConfig+0x204>
 80071f2:	2300      	movs	r3, #0
 80071f4:	61bb      	str	r3, [r7, #24]
 80071f6:	2301      	movs	r3, #1
 80071f8:	77bb      	strb	r3, [r7, #30]
 80071fa:	bf00      	nop
 80071fc:	69bb      	ldr	r3, [r7, #24]
 80071fe:	2b00      	cmp	r3, #0
 8007200:	d018      	beq.n	8007234 <UART_SetConfig+0x23c>
 8007202:	687b      	ldr	r3, [r7, #4]
 8007204:	685b      	ldr	r3, [r3, #4]
 8007206:	085a      	lsrs	r2, r3, #1
 8007208:	69bb      	ldr	r3, [r7, #24]
 800720a:	441a      	add	r2, r3
 800720c:	687b      	ldr	r3, [r7, #4]
 800720e:	685b      	ldr	r3, [r3, #4]
 8007210:	fbb2 f3f3 	udiv	r3, r2, r3
 8007214:	613b      	str	r3, [r7, #16]
 8007216:	693b      	ldr	r3, [r7, #16]
 8007218:	2b0f      	cmp	r3, #15
 800721a:	d909      	bls.n	8007230 <UART_SetConfig+0x238>
 800721c:	693b      	ldr	r3, [r7, #16]
 800721e:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8007222:	d205      	bcs.n	8007230 <UART_SetConfig+0x238>
 8007224:	693b      	ldr	r3, [r7, #16]
 8007226:	b29a      	uxth	r2, r3
 8007228:	687b      	ldr	r3, [r7, #4]
 800722a:	681b      	ldr	r3, [r3, #0]
 800722c:	60da      	str	r2, [r3, #12]
 800722e:	e001      	b.n	8007234 <UART_SetConfig+0x23c>
 8007230:	2301      	movs	r3, #1
 8007232:	77bb      	strb	r3, [r7, #30]
 8007234:	687b      	ldr	r3, [r7, #4]
 8007236:	2200      	movs	r2, #0
 8007238:	669a      	str	r2, [r3, #104]	@ 0x68
 800723a:	687b      	ldr	r3, [r7, #4]
 800723c:	2200      	movs	r2, #0
 800723e:	66da      	str	r2, [r3, #108]	@ 0x6c
 8007240:	7fbb      	ldrb	r3, [r7, #30]
 8007242:	4618      	mov	r0, r3
 8007244:	3720      	adds	r7, #32
 8007246:	46bd      	mov	sp, r7
 8007248:	bd80      	pop	{r7, pc}
 800724a:	bf00      	nop
 800724c:	efff69f3 	.word	0xefff69f3
 8007250:	40013800 	.word	0x40013800
 8007254:	40021000 	.word	0x40021000
 8007258:	40004400 	.word	0x40004400
 800725c:	40004800 	.word	0x40004800
 8007260:	007a1200 	.word	0x007a1200

08007264 <UART_AdvFeatureConfig>:
 8007264:	b480      	push	{r7}
 8007266:	b083      	sub	sp, #12
 8007268:	af00      	add	r7, sp, #0
 800726a:	6078      	str	r0, [r7, #4]
 800726c:	687b      	ldr	r3, [r7, #4]
 800726e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8007270:	f003 0308 	and.w	r3, r3, #8
 8007274:	2b00      	cmp	r3, #0
 8007276:	d00a      	beq.n	800728e <UART_AdvFeatureConfig+0x2a>
 8007278:	687b      	ldr	r3, [r7, #4]
 800727a:	681b      	ldr	r3, [r3, #0]
 800727c:	685b      	ldr	r3, [r3, #4]
 800727e:	f423 4100 	bic.w	r1, r3, #32768	@ 0x8000
 8007282:	687b      	ldr	r3, [r7, #4]
 8007284:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8007286:	687b      	ldr	r3, [r7, #4]
 8007288:	681b      	ldr	r3, [r3, #0]
 800728a:	430a      	orrs	r2, r1
 800728c:	605a      	str	r2, [r3, #4]
 800728e:	687b      	ldr	r3, [r7, #4]
 8007290:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8007292:	f003 0301 	and.w	r3, r3, #1
 8007296:	2b00      	cmp	r3, #0
 8007298:	d00a      	beq.n	80072b0 <UART_AdvFeatureConfig+0x4c>
 800729a:	687b      	ldr	r3, [r7, #4]
 800729c:	681b      	ldr	r3, [r3, #0]
 800729e:	685b      	ldr	r3, [r3, #4]
 80072a0:	f423 3100 	bic.w	r1, r3, #131072	@ 0x20000
 80072a4:	687b      	ldr	r3, [r7, #4]
 80072a6:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 80072a8:	687b      	ldr	r3, [r7, #4]
 80072aa:	681b      	ldr	r3, [r3, #0]
 80072ac:	430a      	orrs	r2, r1
 80072ae:	605a      	str	r2, [r3, #4]
 80072b0:	687b      	ldr	r3, [r7, #4]
 80072b2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80072b4:	f003 0302 	and.w	r3, r3, #2
 80072b8:	2b00      	cmp	r3, #0
 80072ba:	d00a      	beq.n	80072d2 <UART_AdvFeatureConfig+0x6e>
 80072bc:	687b      	ldr	r3, [r7, #4]
 80072be:	681b      	ldr	r3, [r3, #0]
 80072c0:	685b      	ldr	r3, [r3, #4]
 80072c2:	f423 3180 	bic.w	r1, r3, #65536	@ 0x10000
 80072c6:	687b      	ldr	r3, [r7, #4]
 80072c8:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80072ca:	687b      	ldr	r3, [r7, #4]
 80072cc:	681b      	ldr	r3, [r3, #0]
 80072ce:	430a      	orrs	r2, r1
 80072d0:	605a      	str	r2, [r3, #4]
 80072d2:	687b      	ldr	r3, [r7, #4]
 80072d4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80072d6:	f003 0304 	and.w	r3, r3, #4
 80072da:	2b00      	cmp	r3, #0
 80072dc:	d00a      	beq.n	80072f4 <UART_AdvFeatureConfig+0x90>
 80072de:	687b      	ldr	r3, [r7, #4]
 80072e0:	681b      	ldr	r3, [r3, #0]
 80072e2:	685b      	ldr	r3, [r3, #4]
 80072e4:	f423 2180 	bic.w	r1, r3, #262144	@ 0x40000
 80072e8:	687b      	ldr	r3, [r7, #4]
 80072ea:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80072ec:	687b      	ldr	r3, [r7, #4]
 80072ee:	681b      	ldr	r3, [r3, #0]
 80072f0:	430a      	orrs	r2, r1
 80072f2:	605a      	str	r2, [r3, #4]
 80072f4:	687b      	ldr	r3, [r7, #4]
 80072f6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80072f8:	f003 0310 	and.w	r3, r3, #16
 80072fc:	2b00      	cmp	r3, #0
 80072fe:	d00a      	beq.n	8007316 <UART_AdvFeatureConfig+0xb2>
 8007300:	687b      	ldr	r3, [r7, #4]
 8007302:	681b      	ldr	r3, [r3, #0]
 8007304:	689b      	ldr	r3, [r3, #8]
 8007306:	f423 5180 	bic.w	r1, r3, #4096	@ 0x1000
 800730a:	687b      	ldr	r3, [r7, #4]
 800730c:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 800730e:	687b      	ldr	r3, [r7, #4]
 8007310:	681b      	ldr	r3, [r3, #0]
 8007312:	430a      	orrs	r2, r1
 8007314:	609a      	str	r2, [r3, #8]
 8007316:	687b      	ldr	r3, [r7, #4]
 8007318:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800731a:	f003 0320 	and.w	r3, r3, #32
 800731e:	2b00      	cmp	r3, #0
 8007320:	d00a      	beq.n	8007338 <UART_AdvFeatureConfig+0xd4>
 8007322:	687b      	ldr	r3, [r7, #4]
 8007324:	681b      	ldr	r3, [r3, #0]
 8007326:	689b      	ldr	r3, [r3, #8]
 8007328:	f423 5100 	bic.w	r1, r3, #8192	@ 0x2000
 800732c:	687b      	ldr	r3, [r7, #4]
 800732e:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 8007330:	687b      	ldr	r3, [r7, #4]
 8007332:	681b      	ldr	r3, [r3, #0]
 8007334:	430a      	orrs	r2, r1
 8007336:	609a      	str	r2, [r3, #8]
 8007338:	687b      	ldr	r3, [r7, #4]
 800733a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800733c:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8007340:	2b00      	cmp	r3, #0
 8007342:	d01a      	beq.n	800737a <UART_AdvFeatureConfig+0x116>
 8007344:	687b      	ldr	r3, [r7, #4]
 8007346:	681b      	ldr	r3, [r3, #0]
 8007348:	685b      	ldr	r3, [r3, #4]
 800734a:	f423 1180 	bic.w	r1, r3, #1048576	@ 0x100000
 800734e:	687b      	ldr	r3, [r7, #4]
 8007350:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8007352:	687b      	ldr	r3, [r7, #4]
 8007354:	681b      	ldr	r3, [r3, #0]
 8007356:	430a      	orrs	r2, r1
 8007358:	605a      	str	r2, [r3, #4]
 800735a:	687b      	ldr	r3, [r7, #4]
 800735c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800735e:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 8007362:	d10a      	bne.n	800737a <UART_AdvFeatureConfig+0x116>
 8007364:	687b      	ldr	r3, [r7, #4]
 8007366:	681b      	ldr	r3, [r3, #0]
 8007368:	685b      	ldr	r3, [r3, #4]
 800736a:	f423 01c0 	bic.w	r1, r3, #6291456	@ 0x600000
 800736e:	687b      	ldr	r3, [r7, #4]
 8007370:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8007372:	687b      	ldr	r3, [r7, #4]
 8007374:	681b      	ldr	r3, [r3, #0]
 8007376:	430a      	orrs	r2, r1
 8007378:	605a      	str	r2, [r3, #4]
 800737a:	687b      	ldr	r3, [r7, #4]
 800737c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800737e:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8007382:	2b00      	cmp	r3, #0
 8007384:	d00a      	beq.n	800739c <UART_AdvFeatureConfig+0x138>
 8007386:	687b      	ldr	r3, [r7, #4]
 8007388:	681b      	ldr	r3, [r3, #0]
 800738a:	685b      	ldr	r3, [r3, #4]
 800738c:	f423 2100 	bic.w	r1, r3, #524288	@ 0x80000
 8007390:	687b      	ldr	r3, [r7, #4]
 8007392:	6c9a      	ldr	r2, [r3, #72]	@ 0x48
 8007394:	687b      	ldr	r3, [r7, #4]
 8007396:	681b      	ldr	r3, [r3, #0]
 8007398:	430a      	orrs	r2, r1
 800739a:	605a      	str	r2, [r3, #4]
 800739c:	bf00      	nop
 800739e:	370c      	adds	r7, #12
 80073a0:	46bd      	mov	sp, r7
 80073a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80073a6:	4770      	bx	lr

080073a8 <UART_CheckIdleState>:
 80073a8:	b580      	push	{r7, lr}
 80073aa:	b098      	sub	sp, #96	@ 0x60
 80073ac:	af02      	add	r7, sp, #8
 80073ae:	6078      	str	r0, [r7, #4]
 80073b0:	687b      	ldr	r3, [r7, #4]
 80073b2:	2200      	movs	r2, #0
 80073b4:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 80073b8:	f7fb fb0a 	bl	80029d0 <HAL_GetTick>
 80073bc:	6578      	str	r0, [r7, #84]	@ 0x54
 80073be:	687b      	ldr	r3, [r7, #4]
 80073c0:	681b      	ldr	r3, [r3, #0]
 80073c2:	681b      	ldr	r3, [r3, #0]
 80073c4:	f003 0308 	and.w	r3, r3, #8
 80073c8:	2b08      	cmp	r3, #8
 80073ca:	d12e      	bne.n	800742a <UART_CheckIdleState+0x82>
 80073cc:	f06f 437e 	mvn.w	r3, #4261412864	@ 0xfe000000
 80073d0:	9300      	str	r3, [sp, #0]
 80073d2:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 80073d4:	2200      	movs	r2, #0
 80073d6:	f44f 1100 	mov.w	r1, #2097152	@ 0x200000
 80073da:	6878      	ldr	r0, [r7, #4]
 80073dc:	f000 f88c 	bl	80074f8 <UART_WaitOnFlagUntilTimeout>
 80073e0:	4603      	mov	r3, r0
 80073e2:	2b00      	cmp	r3, #0
 80073e4:	d021      	beq.n	800742a <UART_CheckIdleState+0x82>
 80073e6:	687b      	ldr	r3, [r7, #4]
 80073e8:	681b      	ldr	r3, [r3, #0]
 80073ea:	63bb      	str	r3, [r7, #56]	@ 0x38
 80073ec:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80073ee:	e853 3f00 	ldrex	r3, [r3]
 80073f2:	637b      	str	r3, [r7, #52]	@ 0x34
 80073f4:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80073f6:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 80073fa:	653b      	str	r3, [r7, #80]	@ 0x50
 80073fc:	687b      	ldr	r3, [r7, #4]
 80073fe:	681b      	ldr	r3, [r3, #0]
 8007400:	461a      	mov	r2, r3
 8007402:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 8007404:	647b      	str	r3, [r7, #68]	@ 0x44
 8007406:	643a      	str	r2, [r7, #64]	@ 0x40
 8007408:	6c39      	ldr	r1, [r7, #64]	@ 0x40
 800740a:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 800740c:	e841 2300 	strex	r3, r2, [r1]
 8007410:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8007412:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8007414:	2b00      	cmp	r3, #0
 8007416:	d1e6      	bne.n	80073e6 <UART_CheckIdleState+0x3e>
 8007418:	687b      	ldr	r3, [r7, #4]
 800741a:	2220      	movs	r2, #32
 800741c:	67da      	str	r2, [r3, #124]	@ 0x7c
 800741e:	687b      	ldr	r3, [r7, #4]
 8007420:	2200      	movs	r2, #0
 8007422:	f883 2078 	strb.w	r2, [r3, #120]	@ 0x78
 8007426:	2303      	movs	r3, #3
 8007428:	e062      	b.n	80074f0 <UART_CheckIdleState+0x148>
 800742a:	687b      	ldr	r3, [r7, #4]
 800742c:	681b      	ldr	r3, [r3, #0]
 800742e:	681b      	ldr	r3, [r3, #0]
 8007430:	f003 0304 	and.w	r3, r3, #4
 8007434:	2b04      	cmp	r3, #4
 8007436:	d149      	bne.n	80074cc <UART_CheckIdleState+0x124>
 8007438:	f06f 437e 	mvn.w	r3, #4261412864	@ 0xfe000000
 800743c:	9300      	str	r3, [sp, #0]
 800743e:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8007440:	2200      	movs	r2, #0
 8007442:	f44f 0180 	mov.w	r1, #4194304	@ 0x400000
 8007446:	6878      	ldr	r0, [r7, #4]
 8007448:	f000 f856 	bl	80074f8 <UART_WaitOnFlagUntilTimeout>
 800744c:	4603      	mov	r3, r0
 800744e:	2b00      	cmp	r3, #0
 8007450:	d03c      	beq.n	80074cc <UART_CheckIdleState+0x124>
 8007452:	687b      	ldr	r3, [r7, #4]
 8007454:	681b      	ldr	r3, [r3, #0]
 8007456:	627b      	str	r3, [r7, #36]	@ 0x24
 8007458:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800745a:	e853 3f00 	ldrex	r3, [r3]
 800745e:	623b      	str	r3, [r7, #32]
 8007460:	6a3b      	ldr	r3, [r7, #32]
 8007462:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 8007466:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8007468:	687b      	ldr	r3, [r7, #4]
 800746a:	681b      	ldr	r3, [r3, #0]
 800746c:	461a      	mov	r2, r3
 800746e:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8007470:	633b      	str	r3, [r7, #48]	@ 0x30
 8007472:	62fa      	str	r2, [r7, #44]	@ 0x2c
 8007474:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8007476:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8007478:	e841 2300 	strex	r3, r2, [r1]
 800747c:	62bb      	str	r3, [r7, #40]	@ 0x28
 800747e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8007480:	2b00      	cmp	r3, #0
 8007482:	d1e6      	bne.n	8007452 <UART_CheckIdleState+0xaa>
 8007484:	687b      	ldr	r3, [r7, #4]
 8007486:	681b      	ldr	r3, [r3, #0]
 8007488:	3308      	adds	r3, #8
 800748a:	613b      	str	r3, [r7, #16]
 800748c:	693b      	ldr	r3, [r7, #16]
 800748e:	e853 3f00 	ldrex	r3, [r3]
 8007492:	60fb      	str	r3, [r7, #12]
 8007494:	68fb      	ldr	r3, [r7, #12]
 8007496:	f023 0301 	bic.w	r3, r3, #1
 800749a:	64bb      	str	r3, [r7, #72]	@ 0x48
 800749c:	687b      	ldr	r3, [r7, #4]
 800749e:	681b      	ldr	r3, [r3, #0]
 80074a0:	3308      	adds	r3, #8
 80074a2:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 80074a4:	61fa      	str	r2, [r7, #28]
 80074a6:	61bb      	str	r3, [r7, #24]
 80074a8:	69b9      	ldr	r1, [r7, #24]
 80074aa:	69fa      	ldr	r2, [r7, #28]
 80074ac:	e841 2300 	strex	r3, r2, [r1]
 80074b0:	617b      	str	r3, [r7, #20]
 80074b2:	697b      	ldr	r3, [r7, #20]
 80074b4:	2b00      	cmp	r3, #0
 80074b6:	d1e5      	bne.n	8007484 <UART_CheckIdleState+0xdc>
 80074b8:	687b      	ldr	r3, [r7, #4]
 80074ba:	2220      	movs	r2, #32
 80074bc:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
 80074c0:	687b      	ldr	r3, [r7, #4]
 80074c2:	2200      	movs	r2, #0
 80074c4:	f883 2078 	strb.w	r2, [r3, #120]	@ 0x78
 80074c8:	2303      	movs	r3, #3
 80074ca:	e011      	b.n	80074f0 <UART_CheckIdleState+0x148>
 80074cc:	687b      	ldr	r3, [r7, #4]
 80074ce:	2220      	movs	r2, #32
 80074d0:	67da      	str	r2, [r3, #124]	@ 0x7c
 80074d2:	687b      	ldr	r3, [r7, #4]
 80074d4:	2220      	movs	r2, #32
 80074d6:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
 80074da:	687b      	ldr	r3, [r7, #4]
 80074dc:	2200      	movs	r2, #0
 80074de:	661a      	str	r2, [r3, #96]	@ 0x60
 80074e0:	687b      	ldr	r3, [r7, #4]
 80074e2:	2200      	movs	r2, #0
 80074e4:	665a      	str	r2, [r3, #100]	@ 0x64
 80074e6:	687b      	ldr	r3, [r7, #4]
 80074e8:	2200      	movs	r2, #0
 80074ea:	f883 2078 	strb.w	r2, [r3, #120]	@ 0x78
 80074ee:	2300      	movs	r3, #0
 80074f0:	4618      	mov	r0, r3
 80074f2:	3758      	adds	r7, #88	@ 0x58
 80074f4:	46bd      	mov	sp, r7
 80074f6:	bd80      	pop	{r7, pc}

080074f8 <UART_WaitOnFlagUntilTimeout>:
 80074f8:	b580      	push	{r7, lr}
 80074fa:	b084      	sub	sp, #16
 80074fc:	af00      	add	r7, sp, #0
 80074fe:	60f8      	str	r0, [r7, #12]
 8007500:	60b9      	str	r1, [r7, #8]
 8007502:	603b      	str	r3, [r7, #0]
 8007504:	4613      	mov	r3, r2
 8007506:	71fb      	strb	r3, [r7, #7]
 8007508:	e04f      	b.n	80075aa <UART_WaitOnFlagUntilTimeout+0xb2>
 800750a:	69bb      	ldr	r3, [r7, #24]
 800750c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8007510:	d04b      	beq.n	80075aa <UART_WaitOnFlagUntilTimeout+0xb2>
 8007512:	f7fb fa5d 	bl	80029d0 <HAL_GetTick>
 8007516:	4602      	mov	r2, r0
 8007518:	683b      	ldr	r3, [r7, #0]
 800751a:	1ad3      	subs	r3, r2, r3
 800751c:	69ba      	ldr	r2, [r7, #24]
 800751e:	429a      	cmp	r2, r3
 8007520:	d302      	bcc.n	8007528 <UART_WaitOnFlagUntilTimeout+0x30>
 8007522:	69bb      	ldr	r3, [r7, #24]
 8007524:	2b00      	cmp	r3, #0
 8007526:	d101      	bne.n	800752c <UART_WaitOnFlagUntilTimeout+0x34>
 8007528:	2303      	movs	r3, #3
 800752a:	e04e      	b.n	80075ca <UART_WaitOnFlagUntilTimeout+0xd2>
 800752c:	68fb      	ldr	r3, [r7, #12]
 800752e:	681b      	ldr	r3, [r3, #0]
 8007530:	681b      	ldr	r3, [r3, #0]
 8007532:	f003 0304 	and.w	r3, r3, #4
 8007536:	2b00      	cmp	r3, #0
 8007538:	d037      	beq.n	80075aa <UART_WaitOnFlagUntilTimeout+0xb2>
 800753a:	68bb      	ldr	r3, [r7, #8]
 800753c:	2b80      	cmp	r3, #128	@ 0x80
 800753e:	d034      	beq.n	80075aa <UART_WaitOnFlagUntilTimeout+0xb2>
 8007540:	68bb      	ldr	r3, [r7, #8]
 8007542:	2b40      	cmp	r3, #64	@ 0x40
 8007544:	d031      	beq.n	80075aa <UART_WaitOnFlagUntilTimeout+0xb2>
 8007546:	68fb      	ldr	r3, [r7, #12]
 8007548:	681b      	ldr	r3, [r3, #0]
 800754a:	69db      	ldr	r3, [r3, #28]
 800754c:	f003 0308 	and.w	r3, r3, #8
 8007550:	2b08      	cmp	r3, #8
 8007552:	d110      	bne.n	8007576 <UART_WaitOnFlagUntilTimeout+0x7e>
 8007554:	68fb      	ldr	r3, [r7, #12]
 8007556:	681b      	ldr	r3, [r3, #0]
 8007558:	2208      	movs	r2, #8
 800755a:	621a      	str	r2, [r3, #32]
 800755c:	68f8      	ldr	r0, [r7, #12]
 800755e:	f000 f8ff 	bl	8007760 <UART_EndRxTransfer>
 8007562:	68fb      	ldr	r3, [r7, #12]
 8007564:	2208      	movs	r2, #8
 8007566:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 800756a:	68fb      	ldr	r3, [r7, #12]
 800756c:	2200      	movs	r2, #0
 800756e:	f883 2078 	strb.w	r2, [r3, #120]	@ 0x78
 8007572:	2301      	movs	r3, #1
 8007574:	e029      	b.n	80075ca <UART_WaitOnFlagUntilTimeout+0xd2>
 8007576:	68fb      	ldr	r3, [r7, #12]
 8007578:	681b      	ldr	r3, [r3, #0]
 800757a:	69db      	ldr	r3, [r3, #28]
 800757c:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 8007580:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 8007584:	d111      	bne.n	80075aa <UART_WaitOnFlagUntilTimeout+0xb2>
 8007586:	68fb      	ldr	r3, [r7, #12]
 8007588:	681b      	ldr	r3, [r3, #0]
 800758a:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 800758e:	621a      	str	r2, [r3, #32]
 8007590:	68f8      	ldr	r0, [r7, #12]
 8007592:	f000 f8e5 	bl	8007760 <UART_EndRxTransfer>
 8007596:	68fb      	ldr	r3, [r7, #12]
 8007598:	2220      	movs	r2, #32
 800759a:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 800759e:	68fb      	ldr	r3, [r7, #12]
 80075a0:	2200      	movs	r2, #0
 80075a2:	f883 2078 	strb.w	r2, [r3, #120]	@ 0x78
 80075a6:	2303      	movs	r3, #3
 80075a8:	e00f      	b.n	80075ca <UART_WaitOnFlagUntilTimeout+0xd2>
 80075aa:	68fb      	ldr	r3, [r7, #12]
 80075ac:	681b      	ldr	r3, [r3, #0]
 80075ae:	69da      	ldr	r2, [r3, #28]
 80075b0:	68bb      	ldr	r3, [r7, #8]
 80075b2:	4013      	ands	r3, r2
 80075b4:	68ba      	ldr	r2, [r7, #8]
 80075b6:	429a      	cmp	r2, r3
 80075b8:	bf0c      	ite	eq
 80075ba:	2301      	moveq	r3, #1
 80075bc:	2300      	movne	r3, #0
 80075be:	b2db      	uxtb	r3, r3
 80075c0:	461a      	mov	r2, r3
 80075c2:	79fb      	ldrb	r3, [r7, #7]
 80075c4:	429a      	cmp	r2, r3
 80075c6:	d0a0      	beq.n	800750a <UART_WaitOnFlagUntilTimeout+0x12>
 80075c8:	2300      	movs	r3, #0
 80075ca:	4618      	mov	r0, r3
 80075cc:	3710      	adds	r7, #16
 80075ce:	46bd      	mov	sp, r7
 80075d0:	bd80      	pop	{r7, pc}
	...

080075d4 <UART_Start_Receive_IT>:
 80075d4:	b480      	push	{r7}
 80075d6:	b097      	sub	sp, #92	@ 0x5c
 80075d8:	af00      	add	r7, sp, #0
 80075da:	60f8      	str	r0, [r7, #12]
 80075dc:	60b9      	str	r1, [r7, #8]
 80075de:	4613      	mov	r3, r2
 80075e0:	80fb      	strh	r3, [r7, #6]
 80075e2:	68fb      	ldr	r3, [r7, #12]
 80075e4:	68ba      	ldr	r2, [r7, #8]
 80075e6:	655a      	str	r2, [r3, #84]	@ 0x54
 80075e8:	68fb      	ldr	r3, [r7, #12]
 80075ea:	88fa      	ldrh	r2, [r7, #6]
 80075ec:	f8a3 2058 	strh.w	r2, [r3, #88]	@ 0x58
 80075f0:	68fb      	ldr	r3, [r7, #12]
 80075f2:	88fa      	ldrh	r2, [r7, #6]
 80075f4:	f8a3 205a 	strh.w	r2, [r3, #90]	@ 0x5a
 80075f8:	68fb      	ldr	r3, [r7, #12]
 80075fa:	2200      	movs	r2, #0
 80075fc:	669a      	str	r2, [r3, #104]	@ 0x68
 80075fe:	68fb      	ldr	r3, [r7, #12]
 8007600:	689b      	ldr	r3, [r3, #8]
 8007602:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8007606:	d10e      	bne.n	8007626 <UART_Start_Receive_IT+0x52>
 8007608:	68fb      	ldr	r3, [r7, #12]
 800760a:	691b      	ldr	r3, [r3, #16]
 800760c:	2b00      	cmp	r3, #0
 800760e:	d105      	bne.n	800761c <UART_Start_Receive_IT+0x48>
 8007610:	68fb      	ldr	r3, [r7, #12]
 8007612:	f240 12ff 	movw	r2, #511	@ 0x1ff
 8007616:	f8a3 205c 	strh.w	r2, [r3, #92]	@ 0x5c
 800761a:	e02d      	b.n	8007678 <UART_Start_Receive_IT+0xa4>
 800761c:	68fb      	ldr	r3, [r7, #12]
 800761e:	22ff      	movs	r2, #255	@ 0xff
 8007620:	f8a3 205c 	strh.w	r2, [r3, #92]	@ 0x5c
 8007624:	e028      	b.n	8007678 <UART_Start_Receive_IT+0xa4>
 8007626:	68fb      	ldr	r3, [r7, #12]
 8007628:	689b      	ldr	r3, [r3, #8]
 800762a:	2b00      	cmp	r3, #0
 800762c:	d10d      	bne.n	800764a <UART_Start_Receive_IT+0x76>
 800762e:	68fb      	ldr	r3, [r7, #12]
 8007630:	691b      	ldr	r3, [r3, #16]
 8007632:	2b00      	cmp	r3, #0
 8007634:	d104      	bne.n	8007640 <UART_Start_Receive_IT+0x6c>
 8007636:	68fb      	ldr	r3, [r7, #12]
 8007638:	22ff      	movs	r2, #255	@ 0xff
 800763a:	f8a3 205c 	strh.w	r2, [r3, #92]	@ 0x5c
 800763e:	e01b      	b.n	8007678 <UART_Start_Receive_IT+0xa4>
 8007640:	68fb      	ldr	r3, [r7, #12]
 8007642:	227f      	movs	r2, #127	@ 0x7f
 8007644:	f8a3 205c 	strh.w	r2, [r3, #92]	@ 0x5c
 8007648:	e016      	b.n	8007678 <UART_Start_Receive_IT+0xa4>
 800764a:	68fb      	ldr	r3, [r7, #12]
 800764c:	689b      	ldr	r3, [r3, #8]
 800764e:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 8007652:	d10d      	bne.n	8007670 <UART_Start_Receive_IT+0x9c>
 8007654:	68fb      	ldr	r3, [r7, #12]
 8007656:	691b      	ldr	r3, [r3, #16]
 8007658:	2b00      	cmp	r3, #0
 800765a:	d104      	bne.n	8007666 <UART_Start_Receive_IT+0x92>
 800765c:	68fb      	ldr	r3, [r7, #12]
 800765e:	227f      	movs	r2, #127	@ 0x7f
 8007660:	f8a3 205c 	strh.w	r2, [r3, #92]	@ 0x5c
 8007664:	e008      	b.n	8007678 <UART_Start_Receive_IT+0xa4>
 8007666:	68fb      	ldr	r3, [r7, #12]
 8007668:	223f      	movs	r2, #63	@ 0x3f
 800766a:	f8a3 205c 	strh.w	r2, [r3, #92]	@ 0x5c
 800766e:	e003      	b.n	8007678 <UART_Start_Receive_IT+0xa4>
 8007670:	68fb      	ldr	r3, [r7, #12]
 8007672:	2200      	movs	r2, #0
 8007674:	f8a3 205c 	strh.w	r2, [r3, #92]	@ 0x5c
 8007678:	68fb      	ldr	r3, [r7, #12]
 800767a:	2200      	movs	r2, #0
 800767c:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 8007680:	68fb      	ldr	r3, [r7, #12]
 8007682:	2222      	movs	r2, #34	@ 0x22
 8007684:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
 8007688:	68fb      	ldr	r3, [r7, #12]
 800768a:	681b      	ldr	r3, [r3, #0]
 800768c:	3308      	adds	r3, #8
 800768e:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8007690:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8007692:	e853 3f00 	ldrex	r3, [r3]
 8007696:	63bb      	str	r3, [r7, #56]	@ 0x38
 8007698:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800769a:	f043 0301 	orr.w	r3, r3, #1
 800769e:	657b      	str	r3, [r7, #84]	@ 0x54
 80076a0:	68fb      	ldr	r3, [r7, #12]
 80076a2:	681b      	ldr	r3, [r3, #0]
 80076a4:	3308      	adds	r3, #8
 80076a6:	6d7a      	ldr	r2, [r7, #84]	@ 0x54
 80076a8:	64ba      	str	r2, [r7, #72]	@ 0x48
 80076aa:	647b      	str	r3, [r7, #68]	@ 0x44
 80076ac:	6c79      	ldr	r1, [r7, #68]	@ 0x44
 80076ae:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 80076b0:	e841 2300 	strex	r3, r2, [r1]
 80076b4:	643b      	str	r3, [r7, #64]	@ 0x40
 80076b6:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 80076b8:	2b00      	cmp	r3, #0
 80076ba:	d1e5      	bne.n	8007688 <UART_Start_Receive_IT+0xb4>
 80076bc:	68fb      	ldr	r3, [r7, #12]
 80076be:	689b      	ldr	r3, [r3, #8]
 80076c0:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 80076c4:	d107      	bne.n	80076d6 <UART_Start_Receive_IT+0x102>
 80076c6:	68fb      	ldr	r3, [r7, #12]
 80076c8:	691b      	ldr	r3, [r3, #16]
 80076ca:	2b00      	cmp	r3, #0
 80076cc:	d103      	bne.n	80076d6 <UART_Start_Receive_IT+0x102>
 80076ce:	68fb      	ldr	r3, [r7, #12]
 80076d0:	4a21      	ldr	r2, [pc, #132]	@ (8007758 <UART_Start_Receive_IT+0x184>)
 80076d2:	669a      	str	r2, [r3, #104]	@ 0x68
 80076d4:	e002      	b.n	80076dc <UART_Start_Receive_IT+0x108>
 80076d6:	68fb      	ldr	r3, [r7, #12]
 80076d8:	4a20      	ldr	r2, [pc, #128]	@ (800775c <UART_Start_Receive_IT+0x188>)
 80076da:	669a      	str	r2, [r3, #104]	@ 0x68
 80076dc:	68fb      	ldr	r3, [r7, #12]
 80076de:	691b      	ldr	r3, [r3, #16]
 80076e0:	2b00      	cmp	r3, #0
 80076e2:	d019      	beq.n	8007718 <UART_Start_Receive_IT+0x144>
 80076e4:	68fb      	ldr	r3, [r7, #12]
 80076e6:	681b      	ldr	r3, [r3, #0]
 80076e8:	62bb      	str	r3, [r7, #40]	@ 0x28
 80076ea:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80076ec:	e853 3f00 	ldrex	r3, [r3]
 80076f0:	627b      	str	r3, [r7, #36]	@ 0x24
 80076f2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80076f4:	f443 7390 	orr.w	r3, r3, #288	@ 0x120
 80076f8:	64fb      	str	r3, [r7, #76]	@ 0x4c
 80076fa:	68fb      	ldr	r3, [r7, #12]
 80076fc:	681b      	ldr	r3, [r3, #0]
 80076fe:	461a      	mov	r2, r3
 8007700:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8007702:	637b      	str	r3, [r7, #52]	@ 0x34
 8007704:	633a      	str	r2, [r7, #48]	@ 0x30
 8007706:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 8007708:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 800770a:	e841 2300 	strex	r3, r2, [r1]
 800770e:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8007710:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8007712:	2b00      	cmp	r3, #0
 8007714:	d1e6      	bne.n	80076e4 <UART_Start_Receive_IT+0x110>
 8007716:	e018      	b.n	800774a <UART_Start_Receive_IT+0x176>
 8007718:	68fb      	ldr	r3, [r7, #12]
 800771a:	681b      	ldr	r3, [r3, #0]
 800771c:	617b      	str	r3, [r7, #20]
 800771e:	697b      	ldr	r3, [r7, #20]
 8007720:	e853 3f00 	ldrex	r3, [r3]
 8007724:	613b      	str	r3, [r7, #16]
 8007726:	693b      	ldr	r3, [r7, #16]
 8007728:	f043 0320 	orr.w	r3, r3, #32
 800772c:	653b      	str	r3, [r7, #80]	@ 0x50
 800772e:	68fb      	ldr	r3, [r7, #12]
 8007730:	681b      	ldr	r3, [r3, #0]
 8007732:	461a      	mov	r2, r3
 8007734:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 8007736:	623b      	str	r3, [r7, #32]
 8007738:	61fa      	str	r2, [r7, #28]
 800773a:	69f9      	ldr	r1, [r7, #28]
 800773c:	6a3a      	ldr	r2, [r7, #32]
 800773e:	e841 2300 	strex	r3, r2, [r1]
 8007742:	61bb      	str	r3, [r7, #24]
 8007744:	69bb      	ldr	r3, [r7, #24]
 8007746:	2b00      	cmp	r3, #0
 8007748:	d1e6      	bne.n	8007718 <UART_Start_Receive_IT+0x144>
 800774a:	2300      	movs	r3, #0
 800774c:	4618      	mov	r0, r3
 800774e:	375c      	adds	r7, #92	@ 0x5c
 8007750:	46bd      	mov	sp, r7
 8007752:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007756:	4770      	bx	lr
 8007758:	08007a51 	.word	0x08007a51
 800775c:	080078a9 	.word	0x080078a9

08007760 <UART_EndRxTransfer>:
 8007760:	b480      	push	{r7}
 8007762:	b095      	sub	sp, #84	@ 0x54
 8007764:	af00      	add	r7, sp, #0
 8007766:	6078      	str	r0, [r7, #4]
 8007768:	687b      	ldr	r3, [r7, #4]
 800776a:	681b      	ldr	r3, [r3, #0]
 800776c:	637b      	str	r3, [r7, #52]	@ 0x34
 800776e:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8007770:	e853 3f00 	ldrex	r3, [r3]
 8007774:	633b      	str	r3, [r7, #48]	@ 0x30
 8007776:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8007778:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 800777c:	64fb      	str	r3, [r7, #76]	@ 0x4c
 800777e:	687b      	ldr	r3, [r7, #4]
 8007780:	681b      	ldr	r3, [r3, #0]
 8007782:	461a      	mov	r2, r3
 8007784:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8007786:	643b      	str	r3, [r7, #64]	@ 0x40
 8007788:	63fa      	str	r2, [r7, #60]	@ 0x3c
 800778a:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
 800778c:	6c3a      	ldr	r2, [r7, #64]	@ 0x40
 800778e:	e841 2300 	strex	r3, r2, [r1]
 8007792:	63bb      	str	r3, [r7, #56]	@ 0x38
 8007794:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8007796:	2b00      	cmp	r3, #0
 8007798:	d1e6      	bne.n	8007768 <UART_EndRxTransfer+0x8>
 800779a:	687b      	ldr	r3, [r7, #4]
 800779c:	681b      	ldr	r3, [r3, #0]
 800779e:	3308      	adds	r3, #8
 80077a0:	623b      	str	r3, [r7, #32]
 80077a2:	6a3b      	ldr	r3, [r7, #32]
 80077a4:	e853 3f00 	ldrex	r3, [r3]
 80077a8:	61fb      	str	r3, [r7, #28]
 80077aa:	69fb      	ldr	r3, [r7, #28]
 80077ac:	f023 0301 	bic.w	r3, r3, #1
 80077b0:	64bb      	str	r3, [r7, #72]	@ 0x48
 80077b2:	687b      	ldr	r3, [r7, #4]
 80077b4:	681b      	ldr	r3, [r3, #0]
 80077b6:	3308      	adds	r3, #8
 80077b8:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 80077ba:	62fa      	str	r2, [r7, #44]	@ 0x2c
 80077bc:	62bb      	str	r3, [r7, #40]	@ 0x28
 80077be:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 80077c0:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 80077c2:	e841 2300 	strex	r3, r2, [r1]
 80077c6:	627b      	str	r3, [r7, #36]	@ 0x24
 80077c8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80077ca:	2b00      	cmp	r3, #0
 80077cc:	d1e5      	bne.n	800779a <UART_EndRxTransfer+0x3a>
 80077ce:	687b      	ldr	r3, [r7, #4]
 80077d0:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80077d2:	2b01      	cmp	r3, #1
 80077d4:	d118      	bne.n	8007808 <UART_EndRxTransfer+0xa8>
 80077d6:	687b      	ldr	r3, [r7, #4]
 80077d8:	681b      	ldr	r3, [r3, #0]
 80077da:	60fb      	str	r3, [r7, #12]
 80077dc:	68fb      	ldr	r3, [r7, #12]
 80077de:	e853 3f00 	ldrex	r3, [r3]
 80077e2:	60bb      	str	r3, [r7, #8]
 80077e4:	68bb      	ldr	r3, [r7, #8]
 80077e6:	f023 0310 	bic.w	r3, r3, #16
 80077ea:	647b      	str	r3, [r7, #68]	@ 0x44
 80077ec:	687b      	ldr	r3, [r7, #4]
 80077ee:	681b      	ldr	r3, [r3, #0]
 80077f0:	461a      	mov	r2, r3
 80077f2:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 80077f4:	61bb      	str	r3, [r7, #24]
 80077f6:	617a      	str	r2, [r7, #20]
 80077f8:	6979      	ldr	r1, [r7, #20]
 80077fa:	69ba      	ldr	r2, [r7, #24]
 80077fc:	e841 2300 	strex	r3, r2, [r1]
 8007800:	613b      	str	r3, [r7, #16]
 8007802:	693b      	ldr	r3, [r7, #16]
 8007804:	2b00      	cmp	r3, #0
 8007806:	d1e6      	bne.n	80077d6 <UART_EndRxTransfer+0x76>
 8007808:	687b      	ldr	r3, [r7, #4]
 800780a:	2220      	movs	r2, #32
 800780c:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
 8007810:	687b      	ldr	r3, [r7, #4]
 8007812:	2200      	movs	r2, #0
 8007814:	661a      	str	r2, [r3, #96]	@ 0x60
 8007816:	687b      	ldr	r3, [r7, #4]
 8007818:	2200      	movs	r2, #0
 800781a:	669a      	str	r2, [r3, #104]	@ 0x68
 800781c:	bf00      	nop
 800781e:	3754      	adds	r7, #84	@ 0x54
 8007820:	46bd      	mov	sp, r7
 8007822:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007826:	4770      	bx	lr

08007828 <UART_DMAAbortOnError>:
 8007828:	b580      	push	{r7, lr}
 800782a:	b084      	sub	sp, #16
 800782c:	af00      	add	r7, sp, #0
 800782e:	6078      	str	r0, [r7, #4]
 8007830:	687b      	ldr	r3, [r7, #4]
 8007832:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8007834:	60fb      	str	r3, [r7, #12]
 8007836:	68fb      	ldr	r3, [r7, #12]
 8007838:	2200      	movs	r2, #0
 800783a:	f8a3 205a 	strh.w	r2, [r3, #90]	@ 0x5a
 800783e:	68fb      	ldr	r3, [r7, #12]
 8007840:	2200      	movs	r2, #0
 8007842:	f8a3 2052 	strh.w	r2, [r3, #82]	@ 0x52
 8007846:	68f8      	ldr	r0, [r7, #12]
 8007848:	f7ff fbc0 	bl	8006fcc <HAL_UART_ErrorCallback>
 800784c:	bf00      	nop
 800784e:	3710      	adds	r7, #16
 8007850:	46bd      	mov	sp, r7
 8007852:	bd80      	pop	{r7, pc}

08007854 <UART_EndTransmit_IT>:
 8007854:	b580      	push	{r7, lr}
 8007856:	b088      	sub	sp, #32
 8007858:	af00      	add	r7, sp, #0
 800785a:	6078      	str	r0, [r7, #4]
 800785c:	687b      	ldr	r3, [r7, #4]
 800785e:	681b      	ldr	r3, [r3, #0]
 8007860:	60fb      	str	r3, [r7, #12]
 8007862:	68fb      	ldr	r3, [r7, #12]
 8007864:	e853 3f00 	ldrex	r3, [r3]
 8007868:	60bb      	str	r3, [r7, #8]
 800786a:	68bb      	ldr	r3, [r7, #8]
 800786c:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8007870:	61fb      	str	r3, [r7, #28]
 8007872:	687b      	ldr	r3, [r7, #4]
 8007874:	681b      	ldr	r3, [r3, #0]
 8007876:	461a      	mov	r2, r3
 8007878:	69fb      	ldr	r3, [r7, #28]
 800787a:	61bb      	str	r3, [r7, #24]
 800787c:	617a      	str	r2, [r7, #20]
 800787e:	6979      	ldr	r1, [r7, #20]
 8007880:	69ba      	ldr	r2, [r7, #24]
 8007882:	e841 2300 	strex	r3, r2, [r1]
 8007886:	613b      	str	r3, [r7, #16]
 8007888:	693b      	ldr	r3, [r7, #16]
 800788a:	2b00      	cmp	r3, #0
 800788c:	d1e6      	bne.n	800785c <UART_EndTransmit_IT+0x8>
 800788e:	687b      	ldr	r3, [r7, #4]
 8007890:	2220      	movs	r2, #32
 8007892:	67da      	str	r2, [r3, #124]	@ 0x7c
 8007894:	687b      	ldr	r3, [r7, #4]
 8007896:	2200      	movs	r2, #0
 8007898:	66da      	str	r2, [r3, #108]	@ 0x6c
 800789a:	6878      	ldr	r0, [r7, #4]
 800789c:	f7ff fb8c 	bl	8006fb8 <HAL_UART_TxCpltCallback>
 80078a0:	bf00      	nop
 80078a2:	3720      	adds	r7, #32
 80078a4:	46bd      	mov	sp, r7
 80078a6:	bd80      	pop	{r7, pc}

080078a8 <UART_RxISR_8BIT>:
 80078a8:	b580      	push	{r7, lr}
 80078aa:	b09c      	sub	sp, #112	@ 0x70
 80078ac:	af00      	add	r7, sp, #0
 80078ae:	6078      	str	r0, [r7, #4]
 80078b0:	687b      	ldr	r3, [r7, #4]
 80078b2:	f8b3 305c 	ldrh.w	r3, [r3, #92]	@ 0x5c
 80078b6:	f8a7 306e 	strh.w	r3, [r7, #110]	@ 0x6e
 80078ba:	687b      	ldr	r3, [r7, #4]
 80078bc:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 80078c0:	2b22      	cmp	r3, #34	@ 0x22
 80078c2:	f040 80b9 	bne.w	8007a38 <UART_RxISR_8BIT+0x190>
 80078c6:	687b      	ldr	r3, [r7, #4]
 80078c8:	681b      	ldr	r3, [r3, #0]
 80078ca:	8c9b      	ldrh	r3, [r3, #36]	@ 0x24
 80078cc:	f8a7 306c 	strh.w	r3, [r7, #108]	@ 0x6c
 80078d0:	f8b7 306c 	ldrh.w	r3, [r7, #108]	@ 0x6c
 80078d4:	b2d9      	uxtb	r1, r3
 80078d6:	f8b7 306e 	ldrh.w	r3, [r7, #110]	@ 0x6e
 80078da:	b2da      	uxtb	r2, r3
 80078dc:	687b      	ldr	r3, [r7, #4]
 80078de:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80078e0:	400a      	ands	r2, r1
 80078e2:	b2d2      	uxtb	r2, r2
 80078e4:	701a      	strb	r2, [r3, #0]
 80078e6:	687b      	ldr	r3, [r7, #4]
 80078e8:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80078ea:	1c5a      	adds	r2, r3, #1
 80078ec:	687b      	ldr	r3, [r7, #4]
 80078ee:	655a      	str	r2, [r3, #84]	@ 0x54
 80078f0:	687b      	ldr	r3, [r7, #4]
 80078f2:	f8b3 305a 	ldrh.w	r3, [r3, #90]	@ 0x5a
 80078f6:	b29b      	uxth	r3, r3
 80078f8:	3b01      	subs	r3, #1
 80078fa:	b29a      	uxth	r2, r3
 80078fc:	687b      	ldr	r3, [r7, #4]
 80078fe:	f8a3 205a 	strh.w	r2, [r3, #90]	@ 0x5a
 8007902:	687b      	ldr	r3, [r7, #4]
 8007904:	f8b3 305a 	ldrh.w	r3, [r3, #90]	@ 0x5a
 8007908:	b29b      	uxth	r3, r3
 800790a:	2b00      	cmp	r3, #0
 800790c:	f040 809c 	bne.w	8007a48 <UART_RxISR_8BIT+0x1a0>
 8007910:	687b      	ldr	r3, [r7, #4]
 8007912:	681b      	ldr	r3, [r3, #0]
 8007914:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8007916:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8007918:	e853 3f00 	ldrex	r3, [r3]
 800791c:	64bb      	str	r3, [r7, #72]	@ 0x48
 800791e:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8007920:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 8007924:	66bb      	str	r3, [r7, #104]	@ 0x68
 8007926:	687b      	ldr	r3, [r7, #4]
 8007928:	681b      	ldr	r3, [r3, #0]
 800792a:	461a      	mov	r2, r3
 800792c:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 800792e:	65bb      	str	r3, [r7, #88]	@ 0x58
 8007930:	657a      	str	r2, [r7, #84]	@ 0x54
 8007932:	6d79      	ldr	r1, [r7, #84]	@ 0x54
 8007934:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 8007936:	e841 2300 	strex	r3, r2, [r1]
 800793a:	653b      	str	r3, [r7, #80]	@ 0x50
 800793c:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 800793e:	2b00      	cmp	r3, #0
 8007940:	d1e6      	bne.n	8007910 <UART_RxISR_8BIT+0x68>
 8007942:	687b      	ldr	r3, [r7, #4]
 8007944:	681b      	ldr	r3, [r3, #0]
 8007946:	3308      	adds	r3, #8
 8007948:	63bb      	str	r3, [r7, #56]	@ 0x38
 800794a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800794c:	e853 3f00 	ldrex	r3, [r3]
 8007950:	637b      	str	r3, [r7, #52]	@ 0x34
 8007952:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8007954:	f023 0301 	bic.w	r3, r3, #1
 8007958:	667b      	str	r3, [r7, #100]	@ 0x64
 800795a:	687b      	ldr	r3, [r7, #4]
 800795c:	681b      	ldr	r3, [r3, #0]
 800795e:	3308      	adds	r3, #8
 8007960:	6e7a      	ldr	r2, [r7, #100]	@ 0x64
 8007962:	647a      	str	r2, [r7, #68]	@ 0x44
 8007964:	643b      	str	r3, [r7, #64]	@ 0x40
 8007966:	6c39      	ldr	r1, [r7, #64]	@ 0x40
 8007968:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 800796a:	e841 2300 	strex	r3, r2, [r1]
 800796e:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8007970:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8007972:	2b00      	cmp	r3, #0
 8007974:	d1e5      	bne.n	8007942 <UART_RxISR_8BIT+0x9a>
 8007976:	687b      	ldr	r3, [r7, #4]
 8007978:	2220      	movs	r2, #32
 800797a:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
 800797e:	687b      	ldr	r3, [r7, #4]
 8007980:	2200      	movs	r2, #0
 8007982:	669a      	str	r2, [r3, #104]	@ 0x68
 8007984:	687b      	ldr	r3, [r7, #4]
 8007986:	2200      	movs	r2, #0
 8007988:	665a      	str	r2, [r3, #100]	@ 0x64
 800798a:	687b      	ldr	r3, [r7, #4]
 800798c:	681b      	ldr	r3, [r3, #0]
 800798e:	685b      	ldr	r3, [r3, #4]
 8007990:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8007994:	2b00      	cmp	r3, #0
 8007996:	d018      	beq.n	80079ca <UART_RxISR_8BIT+0x122>
 8007998:	687b      	ldr	r3, [r7, #4]
 800799a:	681b      	ldr	r3, [r3, #0]
 800799c:	627b      	str	r3, [r7, #36]	@ 0x24
 800799e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80079a0:	e853 3f00 	ldrex	r3, [r3]
 80079a4:	623b      	str	r3, [r7, #32]
 80079a6:	6a3b      	ldr	r3, [r7, #32]
 80079a8:	f023 6380 	bic.w	r3, r3, #67108864	@ 0x4000000
 80079ac:	663b      	str	r3, [r7, #96]	@ 0x60
 80079ae:	687b      	ldr	r3, [r7, #4]
 80079b0:	681b      	ldr	r3, [r3, #0]
 80079b2:	461a      	mov	r2, r3
 80079b4:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 80079b6:	633b      	str	r3, [r7, #48]	@ 0x30
 80079b8:	62fa      	str	r2, [r7, #44]	@ 0x2c
 80079ba:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 80079bc:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 80079be:	e841 2300 	strex	r3, r2, [r1]
 80079c2:	62bb      	str	r3, [r7, #40]	@ 0x28
 80079c4:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80079c6:	2b00      	cmp	r3, #0
 80079c8:	d1e6      	bne.n	8007998 <UART_RxISR_8BIT+0xf0>
 80079ca:	687b      	ldr	r3, [r7, #4]
 80079cc:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80079ce:	2b01      	cmp	r3, #1
 80079d0:	d12e      	bne.n	8007a30 <UART_RxISR_8BIT+0x188>
 80079d2:	687b      	ldr	r3, [r7, #4]
 80079d4:	2200      	movs	r2, #0
 80079d6:	661a      	str	r2, [r3, #96]	@ 0x60
 80079d8:	687b      	ldr	r3, [r7, #4]
 80079da:	681b      	ldr	r3, [r3, #0]
 80079dc:	613b      	str	r3, [r7, #16]
 80079de:	693b      	ldr	r3, [r7, #16]
 80079e0:	e853 3f00 	ldrex	r3, [r3]
 80079e4:	60fb      	str	r3, [r7, #12]
 80079e6:	68fb      	ldr	r3, [r7, #12]
 80079e8:	f023 0310 	bic.w	r3, r3, #16
 80079ec:	65fb      	str	r3, [r7, #92]	@ 0x5c
 80079ee:	687b      	ldr	r3, [r7, #4]
 80079f0:	681b      	ldr	r3, [r3, #0]
 80079f2:	461a      	mov	r2, r3
 80079f4:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 80079f6:	61fb      	str	r3, [r7, #28]
 80079f8:	61ba      	str	r2, [r7, #24]
 80079fa:	69b9      	ldr	r1, [r7, #24]
 80079fc:	69fa      	ldr	r2, [r7, #28]
 80079fe:	e841 2300 	strex	r3, r2, [r1]
 8007a02:	617b      	str	r3, [r7, #20]
 8007a04:	697b      	ldr	r3, [r7, #20]
 8007a06:	2b00      	cmp	r3, #0
 8007a08:	d1e6      	bne.n	80079d8 <UART_RxISR_8BIT+0x130>
 8007a0a:	687b      	ldr	r3, [r7, #4]
 8007a0c:	681b      	ldr	r3, [r3, #0]
 8007a0e:	69db      	ldr	r3, [r3, #28]
 8007a10:	f003 0310 	and.w	r3, r3, #16
 8007a14:	2b10      	cmp	r3, #16
 8007a16:	d103      	bne.n	8007a20 <UART_RxISR_8BIT+0x178>
 8007a18:	687b      	ldr	r3, [r7, #4]
 8007a1a:	681b      	ldr	r3, [r3, #0]
 8007a1c:	2210      	movs	r2, #16
 8007a1e:	621a      	str	r2, [r3, #32]
 8007a20:	687b      	ldr	r3, [r7, #4]
 8007a22:	f8b3 3058 	ldrh.w	r3, [r3, #88]	@ 0x58
 8007a26:	4619      	mov	r1, r3
 8007a28:	6878      	ldr	r0, [r7, #4]
 8007a2a:	f7ff fad9 	bl	8006fe0 <HAL_UARTEx_RxEventCallback>
 8007a2e:	e00b      	b.n	8007a48 <UART_RxISR_8BIT+0x1a0>
 8007a30:	6878      	ldr	r0, [r7, #4]
 8007a32:	f7fa fc1b 	bl	800226c <HAL_UART_RxCpltCallback>
 8007a36:	e007      	b.n	8007a48 <UART_RxISR_8BIT+0x1a0>
 8007a38:	687b      	ldr	r3, [r7, #4]
 8007a3a:	681b      	ldr	r3, [r3, #0]
 8007a3c:	699a      	ldr	r2, [r3, #24]
 8007a3e:	687b      	ldr	r3, [r7, #4]
 8007a40:	681b      	ldr	r3, [r3, #0]
 8007a42:	f042 0208 	orr.w	r2, r2, #8
 8007a46:	619a      	str	r2, [r3, #24]
 8007a48:	bf00      	nop
 8007a4a:	3770      	adds	r7, #112	@ 0x70
 8007a4c:	46bd      	mov	sp, r7
 8007a4e:	bd80      	pop	{r7, pc}

08007a50 <UART_RxISR_16BIT>:
 8007a50:	b580      	push	{r7, lr}
 8007a52:	b09c      	sub	sp, #112	@ 0x70
 8007a54:	af00      	add	r7, sp, #0
 8007a56:	6078      	str	r0, [r7, #4]
 8007a58:	687b      	ldr	r3, [r7, #4]
 8007a5a:	f8b3 305c 	ldrh.w	r3, [r3, #92]	@ 0x5c
 8007a5e:	f8a7 306e 	strh.w	r3, [r7, #110]	@ 0x6e
 8007a62:	687b      	ldr	r3, [r7, #4]
 8007a64:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8007a68:	2b22      	cmp	r3, #34	@ 0x22
 8007a6a:	f040 80b9 	bne.w	8007be0 <UART_RxISR_16BIT+0x190>
 8007a6e:	687b      	ldr	r3, [r7, #4]
 8007a70:	681b      	ldr	r3, [r3, #0]
 8007a72:	8c9b      	ldrh	r3, [r3, #36]	@ 0x24
 8007a74:	f8a7 306c 	strh.w	r3, [r7, #108]	@ 0x6c
 8007a78:	687b      	ldr	r3, [r7, #4]
 8007a7a:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8007a7c:	66bb      	str	r3, [r7, #104]	@ 0x68
 8007a7e:	f8b7 206c 	ldrh.w	r2, [r7, #108]	@ 0x6c
 8007a82:	f8b7 306e 	ldrh.w	r3, [r7, #110]	@ 0x6e
 8007a86:	4013      	ands	r3, r2
 8007a88:	b29a      	uxth	r2, r3
 8007a8a:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 8007a8c:	801a      	strh	r2, [r3, #0]
 8007a8e:	687b      	ldr	r3, [r7, #4]
 8007a90:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8007a92:	1c9a      	adds	r2, r3, #2
 8007a94:	687b      	ldr	r3, [r7, #4]
 8007a96:	655a      	str	r2, [r3, #84]	@ 0x54
 8007a98:	687b      	ldr	r3, [r7, #4]
 8007a9a:	f8b3 305a 	ldrh.w	r3, [r3, #90]	@ 0x5a
 8007a9e:	b29b      	uxth	r3, r3
 8007aa0:	3b01      	subs	r3, #1
 8007aa2:	b29a      	uxth	r2, r3
 8007aa4:	687b      	ldr	r3, [r7, #4]
 8007aa6:	f8a3 205a 	strh.w	r2, [r3, #90]	@ 0x5a
 8007aaa:	687b      	ldr	r3, [r7, #4]
 8007aac:	f8b3 305a 	ldrh.w	r3, [r3, #90]	@ 0x5a
 8007ab0:	b29b      	uxth	r3, r3
 8007ab2:	2b00      	cmp	r3, #0
 8007ab4:	f040 809c 	bne.w	8007bf0 <UART_RxISR_16BIT+0x1a0>
 8007ab8:	687b      	ldr	r3, [r7, #4]
 8007aba:	681b      	ldr	r3, [r3, #0]
 8007abc:	64bb      	str	r3, [r7, #72]	@ 0x48
 8007abe:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8007ac0:	e853 3f00 	ldrex	r3, [r3]
 8007ac4:	647b      	str	r3, [r7, #68]	@ 0x44
 8007ac6:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8007ac8:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 8007acc:	667b      	str	r3, [r7, #100]	@ 0x64
 8007ace:	687b      	ldr	r3, [r7, #4]
 8007ad0:	681b      	ldr	r3, [r3, #0]
 8007ad2:	461a      	mov	r2, r3
 8007ad4:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8007ad6:	657b      	str	r3, [r7, #84]	@ 0x54
 8007ad8:	653a      	str	r2, [r7, #80]	@ 0x50
 8007ada:	6d39      	ldr	r1, [r7, #80]	@ 0x50
 8007adc:	6d7a      	ldr	r2, [r7, #84]	@ 0x54
 8007ade:	e841 2300 	strex	r3, r2, [r1]
 8007ae2:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8007ae4:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8007ae6:	2b00      	cmp	r3, #0
 8007ae8:	d1e6      	bne.n	8007ab8 <UART_RxISR_16BIT+0x68>
 8007aea:	687b      	ldr	r3, [r7, #4]
 8007aec:	681b      	ldr	r3, [r3, #0]
 8007aee:	3308      	adds	r3, #8
 8007af0:	637b      	str	r3, [r7, #52]	@ 0x34
 8007af2:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8007af4:	e853 3f00 	ldrex	r3, [r3]
 8007af8:	633b      	str	r3, [r7, #48]	@ 0x30
 8007afa:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8007afc:	f023 0301 	bic.w	r3, r3, #1
 8007b00:	663b      	str	r3, [r7, #96]	@ 0x60
 8007b02:	687b      	ldr	r3, [r7, #4]
 8007b04:	681b      	ldr	r3, [r3, #0]
 8007b06:	3308      	adds	r3, #8
 8007b08:	6e3a      	ldr	r2, [r7, #96]	@ 0x60
 8007b0a:	643a      	str	r2, [r7, #64]	@ 0x40
 8007b0c:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8007b0e:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
 8007b10:	6c3a      	ldr	r2, [r7, #64]	@ 0x40
 8007b12:	e841 2300 	strex	r3, r2, [r1]
 8007b16:	63bb      	str	r3, [r7, #56]	@ 0x38
 8007b18:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8007b1a:	2b00      	cmp	r3, #0
 8007b1c:	d1e5      	bne.n	8007aea <UART_RxISR_16BIT+0x9a>
 8007b1e:	687b      	ldr	r3, [r7, #4]
 8007b20:	2220      	movs	r2, #32
 8007b22:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
 8007b26:	687b      	ldr	r3, [r7, #4]
 8007b28:	2200      	movs	r2, #0
 8007b2a:	669a      	str	r2, [r3, #104]	@ 0x68
 8007b2c:	687b      	ldr	r3, [r7, #4]
 8007b2e:	2200      	movs	r2, #0
 8007b30:	665a      	str	r2, [r3, #100]	@ 0x64
 8007b32:	687b      	ldr	r3, [r7, #4]
 8007b34:	681b      	ldr	r3, [r3, #0]
 8007b36:	685b      	ldr	r3, [r3, #4]
 8007b38:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8007b3c:	2b00      	cmp	r3, #0
 8007b3e:	d018      	beq.n	8007b72 <UART_RxISR_16BIT+0x122>
 8007b40:	687b      	ldr	r3, [r7, #4]
 8007b42:	681b      	ldr	r3, [r3, #0]
 8007b44:	623b      	str	r3, [r7, #32]
 8007b46:	6a3b      	ldr	r3, [r7, #32]
 8007b48:	e853 3f00 	ldrex	r3, [r3]
 8007b4c:	61fb      	str	r3, [r7, #28]
 8007b4e:	69fb      	ldr	r3, [r7, #28]
 8007b50:	f023 6380 	bic.w	r3, r3, #67108864	@ 0x4000000
 8007b54:	65fb      	str	r3, [r7, #92]	@ 0x5c
 8007b56:	687b      	ldr	r3, [r7, #4]
 8007b58:	681b      	ldr	r3, [r3, #0]
 8007b5a:	461a      	mov	r2, r3
 8007b5c:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 8007b5e:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8007b60:	62ba      	str	r2, [r7, #40]	@ 0x28
 8007b62:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 8007b64:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8007b66:	e841 2300 	strex	r3, r2, [r1]
 8007b6a:	627b      	str	r3, [r7, #36]	@ 0x24
 8007b6c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8007b6e:	2b00      	cmp	r3, #0
 8007b70:	d1e6      	bne.n	8007b40 <UART_RxISR_16BIT+0xf0>
 8007b72:	687b      	ldr	r3, [r7, #4]
 8007b74:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8007b76:	2b01      	cmp	r3, #1
 8007b78:	d12e      	bne.n	8007bd8 <UART_RxISR_16BIT+0x188>
 8007b7a:	687b      	ldr	r3, [r7, #4]
 8007b7c:	2200      	movs	r2, #0
 8007b7e:	661a      	str	r2, [r3, #96]	@ 0x60
 8007b80:	687b      	ldr	r3, [r7, #4]
 8007b82:	681b      	ldr	r3, [r3, #0]
 8007b84:	60fb      	str	r3, [r7, #12]
 8007b86:	68fb      	ldr	r3, [r7, #12]
 8007b88:	e853 3f00 	ldrex	r3, [r3]
 8007b8c:	60bb      	str	r3, [r7, #8]
 8007b8e:	68bb      	ldr	r3, [r7, #8]
 8007b90:	f023 0310 	bic.w	r3, r3, #16
 8007b94:	65bb      	str	r3, [r7, #88]	@ 0x58
 8007b96:	687b      	ldr	r3, [r7, #4]
 8007b98:	681b      	ldr	r3, [r3, #0]
 8007b9a:	461a      	mov	r2, r3
 8007b9c:	6dbb      	ldr	r3, [r7, #88]	@ 0x58
 8007b9e:	61bb      	str	r3, [r7, #24]
 8007ba0:	617a      	str	r2, [r7, #20]
 8007ba2:	6979      	ldr	r1, [r7, #20]
 8007ba4:	69ba      	ldr	r2, [r7, #24]
 8007ba6:	e841 2300 	strex	r3, r2, [r1]
 8007baa:	613b      	str	r3, [r7, #16]
 8007bac:	693b      	ldr	r3, [r7, #16]
 8007bae:	2b00      	cmp	r3, #0
 8007bb0:	d1e6      	bne.n	8007b80 <UART_RxISR_16BIT+0x130>
 8007bb2:	687b      	ldr	r3, [r7, #4]
 8007bb4:	681b      	ldr	r3, [r3, #0]
 8007bb6:	69db      	ldr	r3, [r3, #28]
 8007bb8:	f003 0310 	and.w	r3, r3, #16
 8007bbc:	2b10      	cmp	r3, #16
 8007bbe:	d103      	bne.n	8007bc8 <UART_RxISR_16BIT+0x178>
 8007bc0:	687b      	ldr	r3, [r7, #4]
 8007bc2:	681b      	ldr	r3, [r3, #0]
 8007bc4:	2210      	movs	r2, #16
 8007bc6:	621a      	str	r2, [r3, #32]
 8007bc8:	687b      	ldr	r3, [r7, #4]
 8007bca:	f8b3 3058 	ldrh.w	r3, [r3, #88]	@ 0x58
 8007bce:	4619      	mov	r1, r3
 8007bd0:	6878      	ldr	r0, [r7, #4]
 8007bd2:	f7ff fa05 	bl	8006fe0 <HAL_UARTEx_RxEventCallback>
 8007bd6:	e00b      	b.n	8007bf0 <UART_RxISR_16BIT+0x1a0>
 8007bd8:	6878      	ldr	r0, [r7, #4]
 8007bda:	f7fa fb47 	bl	800226c <HAL_UART_RxCpltCallback>
 8007bde:	e007      	b.n	8007bf0 <UART_RxISR_16BIT+0x1a0>
 8007be0:	687b      	ldr	r3, [r7, #4]
 8007be2:	681b      	ldr	r3, [r3, #0]
 8007be4:	699a      	ldr	r2, [r3, #24]
 8007be6:	687b      	ldr	r3, [r7, #4]
 8007be8:	681b      	ldr	r3, [r3, #0]
 8007bea:	f042 0208 	orr.w	r2, r2, #8
 8007bee:	619a      	str	r2, [r3, #24]
 8007bf0:	bf00      	nop
 8007bf2:	3770      	adds	r7, #112	@ 0x70
 8007bf4:	46bd      	mov	sp, r7
 8007bf6:	bd80      	pop	{r7, pc}

08007bf8 <HAL_UARTEx_WakeupCallback>:
 8007bf8:	b480      	push	{r7}
 8007bfa:	b083      	sub	sp, #12
 8007bfc:	af00      	add	r7, sp, #0
 8007bfe:	6078      	str	r0, [r7, #4]
 8007c00:	bf00      	nop
 8007c02:	370c      	adds	r7, #12
 8007c04:	46bd      	mov	sp, r7
 8007c06:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007c0a:	4770      	bx	lr

08007c0c <atoi>:
 8007c0c:	220a      	movs	r2, #10
 8007c0e:	2100      	movs	r1, #0
 8007c10:	f000 b87a 	b.w	8007d08 <strtol>

08007c14 <_strtol_l.constprop.0>:
 8007c14:	2b24      	cmp	r3, #36	@ 0x24
 8007c16:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8007c1a:	4686      	mov	lr, r0
 8007c1c:	4690      	mov	r8, r2
 8007c1e:	d801      	bhi.n	8007c24 <_strtol_l.constprop.0+0x10>
 8007c20:	2b01      	cmp	r3, #1
 8007c22:	d106      	bne.n	8007c32 <_strtol_l.constprop.0+0x1e>
 8007c24:	f000 ff74 	bl	8008b10 <__errno>
 8007c28:	2316      	movs	r3, #22
 8007c2a:	6003      	str	r3, [r0, #0]
 8007c2c:	2000      	movs	r0, #0
 8007c2e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8007c32:	4834      	ldr	r0, [pc, #208]	@ (8007d04 <_strtol_l.constprop.0+0xf0>)
 8007c34:	460d      	mov	r5, r1
 8007c36:	462a      	mov	r2, r5
 8007c38:	f815 4b01 	ldrb.w	r4, [r5], #1
 8007c3c:	5d06      	ldrb	r6, [r0, r4]
 8007c3e:	f016 0608 	ands.w	r6, r6, #8
 8007c42:	d1f8      	bne.n	8007c36 <_strtol_l.constprop.0+0x22>
 8007c44:	2c2d      	cmp	r4, #45	@ 0x2d
 8007c46:	d12d      	bne.n	8007ca4 <_strtol_l.constprop.0+0x90>
 8007c48:	782c      	ldrb	r4, [r5, #0]
 8007c4a:	2601      	movs	r6, #1
 8007c4c:	1c95      	adds	r5, r2, #2
 8007c4e:	f033 0210 	bics.w	r2, r3, #16
 8007c52:	d109      	bne.n	8007c68 <_strtol_l.constprop.0+0x54>
 8007c54:	2c30      	cmp	r4, #48	@ 0x30
 8007c56:	d12a      	bne.n	8007cae <_strtol_l.constprop.0+0x9a>
 8007c58:	782a      	ldrb	r2, [r5, #0]
 8007c5a:	f002 02df 	and.w	r2, r2, #223	@ 0xdf
 8007c5e:	2a58      	cmp	r2, #88	@ 0x58
 8007c60:	d125      	bne.n	8007cae <_strtol_l.constprop.0+0x9a>
 8007c62:	786c      	ldrb	r4, [r5, #1]
 8007c64:	2310      	movs	r3, #16
 8007c66:	3502      	adds	r5, #2
 8007c68:	f106 4c00 	add.w	ip, r6, #2147483648	@ 0x80000000
 8007c6c:	f10c 3cff 	add.w	ip, ip, #4294967295
 8007c70:	2200      	movs	r2, #0
 8007c72:	fbbc f9f3 	udiv	r9, ip, r3
 8007c76:	4610      	mov	r0, r2
 8007c78:	fb03 ca19 	mls	sl, r3, r9, ip
 8007c7c:	f1a4 0730 	sub.w	r7, r4, #48	@ 0x30
 8007c80:	2f09      	cmp	r7, #9
 8007c82:	d81b      	bhi.n	8007cbc <_strtol_l.constprop.0+0xa8>
 8007c84:	463c      	mov	r4, r7
 8007c86:	42a3      	cmp	r3, r4
 8007c88:	dd27      	ble.n	8007cda <_strtol_l.constprop.0+0xc6>
 8007c8a:	1c57      	adds	r7, r2, #1
 8007c8c:	d007      	beq.n	8007c9e <_strtol_l.constprop.0+0x8a>
 8007c8e:	4581      	cmp	r9, r0
 8007c90:	d320      	bcc.n	8007cd4 <_strtol_l.constprop.0+0xc0>
 8007c92:	d101      	bne.n	8007c98 <_strtol_l.constprop.0+0x84>
 8007c94:	45a2      	cmp	sl, r4
 8007c96:	db1d      	blt.n	8007cd4 <_strtol_l.constprop.0+0xc0>
 8007c98:	fb00 4003 	mla	r0, r0, r3, r4
 8007c9c:	2201      	movs	r2, #1
 8007c9e:	f815 4b01 	ldrb.w	r4, [r5], #1
 8007ca2:	e7eb      	b.n	8007c7c <_strtol_l.constprop.0+0x68>
 8007ca4:	2c2b      	cmp	r4, #43	@ 0x2b
 8007ca6:	bf04      	itt	eq
 8007ca8:	782c      	ldrbeq	r4, [r5, #0]
 8007caa:	1c95      	addeq	r5, r2, #2
 8007cac:	e7cf      	b.n	8007c4e <_strtol_l.constprop.0+0x3a>
 8007cae:	2b00      	cmp	r3, #0
 8007cb0:	d1da      	bne.n	8007c68 <_strtol_l.constprop.0+0x54>
 8007cb2:	2c30      	cmp	r4, #48	@ 0x30
 8007cb4:	bf0c      	ite	eq
 8007cb6:	2308      	moveq	r3, #8
 8007cb8:	230a      	movne	r3, #10
 8007cba:	e7d5      	b.n	8007c68 <_strtol_l.constprop.0+0x54>
 8007cbc:	f1a4 0741 	sub.w	r7, r4, #65	@ 0x41
 8007cc0:	2f19      	cmp	r7, #25
 8007cc2:	d801      	bhi.n	8007cc8 <_strtol_l.constprop.0+0xb4>
 8007cc4:	3c37      	subs	r4, #55	@ 0x37
 8007cc6:	e7de      	b.n	8007c86 <_strtol_l.constprop.0+0x72>
 8007cc8:	f1a4 0761 	sub.w	r7, r4, #97	@ 0x61
 8007ccc:	2f19      	cmp	r7, #25
 8007cce:	d804      	bhi.n	8007cda <_strtol_l.constprop.0+0xc6>
 8007cd0:	3c57      	subs	r4, #87	@ 0x57
 8007cd2:	e7d8      	b.n	8007c86 <_strtol_l.constprop.0+0x72>
 8007cd4:	f04f 32ff 	mov.w	r2, #4294967295
 8007cd8:	e7e1      	b.n	8007c9e <_strtol_l.constprop.0+0x8a>
 8007cda:	1c53      	adds	r3, r2, #1
 8007cdc:	d108      	bne.n	8007cf0 <_strtol_l.constprop.0+0xdc>
 8007cde:	2322      	movs	r3, #34	@ 0x22
 8007ce0:	f8ce 3000 	str.w	r3, [lr]
 8007ce4:	4660      	mov	r0, ip
 8007ce6:	f1b8 0f00 	cmp.w	r8, #0
 8007cea:	d0a0      	beq.n	8007c2e <_strtol_l.constprop.0+0x1a>
 8007cec:	1e69      	subs	r1, r5, #1
 8007cee:	e006      	b.n	8007cfe <_strtol_l.constprop.0+0xea>
 8007cf0:	b106      	cbz	r6, 8007cf4 <_strtol_l.constprop.0+0xe0>
 8007cf2:	4240      	negs	r0, r0
 8007cf4:	f1b8 0f00 	cmp.w	r8, #0
 8007cf8:	d099      	beq.n	8007c2e <_strtol_l.constprop.0+0x1a>
 8007cfa:	2a00      	cmp	r2, #0
 8007cfc:	d1f6      	bne.n	8007cec <_strtol_l.constprop.0+0xd8>
 8007cfe:	f8c8 1000 	str.w	r1, [r8]
 8007d02:	e794      	b.n	8007c2e <_strtol_l.constprop.0+0x1a>
 8007d04:	0800ad69 	.word	0x0800ad69

08007d08 <strtol>:
 8007d08:	4613      	mov	r3, r2
 8007d0a:	460a      	mov	r2, r1
 8007d0c:	4601      	mov	r1, r0
 8007d0e:	4802      	ldr	r0, [pc, #8]	@ (8007d18 <strtol+0x10>)
 8007d10:	6800      	ldr	r0, [r0, #0]
 8007d12:	f7ff bf7f 	b.w	8007c14 <_strtol_l.constprop.0>
 8007d16:	bf00      	nop
 8007d18:	20000018 	.word	0x20000018

08007d1c <__cvt>:
 8007d1c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8007d20:	ec57 6b10 	vmov	r6, r7, d0
 8007d24:	2f00      	cmp	r7, #0
 8007d26:	460c      	mov	r4, r1
 8007d28:	4619      	mov	r1, r3
 8007d2a:	463b      	mov	r3, r7
 8007d2c:	bfbb      	ittet	lt
 8007d2e:	f107 4300 	addlt.w	r3, r7, #2147483648	@ 0x80000000
 8007d32:	461f      	movlt	r7, r3
 8007d34:	2300      	movge	r3, #0
 8007d36:	232d      	movlt	r3, #45	@ 0x2d
 8007d38:	700b      	strb	r3, [r1, #0]
 8007d3a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8007d3c:	f8dd a030 	ldr.w	sl, [sp, #48]	@ 0x30
 8007d40:	4691      	mov	r9, r2
 8007d42:	f023 0820 	bic.w	r8, r3, #32
 8007d46:	bfbc      	itt	lt
 8007d48:	4632      	movlt	r2, r6
 8007d4a:	4616      	movlt	r6, r2
 8007d4c:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 8007d50:	d005      	beq.n	8007d5e <__cvt+0x42>
 8007d52:	f1b8 0f45 	cmp.w	r8, #69	@ 0x45
 8007d56:	d100      	bne.n	8007d5a <__cvt+0x3e>
 8007d58:	3401      	adds	r4, #1
 8007d5a:	2102      	movs	r1, #2
 8007d5c:	e000      	b.n	8007d60 <__cvt+0x44>
 8007d5e:	2103      	movs	r1, #3
 8007d60:	ab03      	add	r3, sp, #12
 8007d62:	9301      	str	r3, [sp, #4]
 8007d64:	ab02      	add	r3, sp, #8
 8007d66:	9300      	str	r3, [sp, #0]
 8007d68:	ec47 6b10 	vmov	d0, r6, r7
 8007d6c:	4653      	mov	r3, sl
 8007d6e:	4622      	mov	r2, r4
 8007d70:	f000 ff86 	bl	8008c80 <_dtoa_r>
 8007d74:	f1b8 0f47 	cmp.w	r8, #71	@ 0x47
 8007d78:	4605      	mov	r5, r0
 8007d7a:	d119      	bne.n	8007db0 <__cvt+0x94>
 8007d7c:	f019 0f01 	tst.w	r9, #1
 8007d80:	d00e      	beq.n	8007da0 <__cvt+0x84>
 8007d82:	eb00 0904 	add.w	r9, r0, r4
 8007d86:	2200      	movs	r2, #0
 8007d88:	2300      	movs	r3, #0
 8007d8a:	4630      	mov	r0, r6
 8007d8c:	4639      	mov	r1, r7
 8007d8e:	f7f8 fe9b 	bl	8000ac8 <__aeabi_dcmpeq>
 8007d92:	b108      	cbz	r0, 8007d98 <__cvt+0x7c>
 8007d94:	f8cd 900c 	str.w	r9, [sp, #12]
 8007d98:	2230      	movs	r2, #48	@ 0x30
 8007d9a:	9b03      	ldr	r3, [sp, #12]
 8007d9c:	454b      	cmp	r3, r9
 8007d9e:	d31e      	bcc.n	8007dde <__cvt+0xc2>
 8007da0:	9b03      	ldr	r3, [sp, #12]
 8007da2:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8007da4:	1b5b      	subs	r3, r3, r5
 8007da6:	4628      	mov	r0, r5
 8007da8:	6013      	str	r3, [r2, #0]
 8007daa:	b004      	add	sp, #16
 8007dac:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8007db0:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 8007db4:	eb00 0904 	add.w	r9, r0, r4
 8007db8:	d1e5      	bne.n	8007d86 <__cvt+0x6a>
 8007dba:	7803      	ldrb	r3, [r0, #0]
 8007dbc:	2b30      	cmp	r3, #48	@ 0x30
 8007dbe:	d10a      	bne.n	8007dd6 <__cvt+0xba>
 8007dc0:	2200      	movs	r2, #0
 8007dc2:	2300      	movs	r3, #0
 8007dc4:	4630      	mov	r0, r6
 8007dc6:	4639      	mov	r1, r7
 8007dc8:	f7f8 fe7e 	bl	8000ac8 <__aeabi_dcmpeq>
 8007dcc:	b918      	cbnz	r0, 8007dd6 <__cvt+0xba>
 8007dce:	f1c4 0401 	rsb	r4, r4, #1
 8007dd2:	f8ca 4000 	str.w	r4, [sl]
 8007dd6:	f8da 3000 	ldr.w	r3, [sl]
 8007dda:	4499      	add	r9, r3
 8007ddc:	e7d3      	b.n	8007d86 <__cvt+0x6a>
 8007dde:	1c59      	adds	r1, r3, #1
 8007de0:	9103      	str	r1, [sp, #12]
 8007de2:	701a      	strb	r2, [r3, #0]
 8007de4:	e7d9      	b.n	8007d9a <__cvt+0x7e>

08007de6 <__exponent>:
 8007de6:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8007de8:	2900      	cmp	r1, #0
 8007dea:	bfba      	itte	lt
 8007dec:	4249      	neglt	r1, r1
 8007dee:	232d      	movlt	r3, #45	@ 0x2d
 8007df0:	232b      	movge	r3, #43	@ 0x2b
 8007df2:	2909      	cmp	r1, #9
 8007df4:	7002      	strb	r2, [r0, #0]
 8007df6:	7043      	strb	r3, [r0, #1]
 8007df8:	dd29      	ble.n	8007e4e <__exponent+0x68>
 8007dfa:	f10d 0307 	add.w	r3, sp, #7
 8007dfe:	461d      	mov	r5, r3
 8007e00:	270a      	movs	r7, #10
 8007e02:	461a      	mov	r2, r3
 8007e04:	fbb1 f6f7 	udiv	r6, r1, r7
 8007e08:	fb07 1416 	mls	r4, r7, r6, r1
 8007e0c:	3430      	adds	r4, #48	@ 0x30
 8007e0e:	f802 4c01 	strb.w	r4, [r2, #-1]
 8007e12:	460c      	mov	r4, r1
 8007e14:	2c63      	cmp	r4, #99	@ 0x63
 8007e16:	f103 33ff 	add.w	r3, r3, #4294967295
 8007e1a:	4631      	mov	r1, r6
 8007e1c:	dcf1      	bgt.n	8007e02 <__exponent+0x1c>
 8007e1e:	3130      	adds	r1, #48	@ 0x30
 8007e20:	1e94      	subs	r4, r2, #2
 8007e22:	f803 1c01 	strb.w	r1, [r3, #-1]
 8007e26:	1c41      	adds	r1, r0, #1
 8007e28:	4623      	mov	r3, r4
 8007e2a:	42ab      	cmp	r3, r5
 8007e2c:	d30a      	bcc.n	8007e44 <__exponent+0x5e>
 8007e2e:	f10d 0309 	add.w	r3, sp, #9
 8007e32:	1a9b      	subs	r3, r3, r2
 8007e34:	42ac      	cmp	r4, r5
 8007e36:	bf88      	it	hi
 8007e38:	2300      	movhi	r3, #0
 8007e3a:	3302      	adds	r3, #2
 8007e3c:	4403      	add	r3, r0
 8007e3e:	1a18      	subs	r0, r3, r0
 8007e40:	b003      	add	sp, #12
 8007e42:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8007e44:	f813 6b01 	ldrb.w	r6, [r3], #1
 8007e48:	f801 6f01 	strb.w	r6, [r1, #1]!
 8007e4c:	e7ed      	b.n	8007e2a <__exponent+0x44>
 8007e4e:	2330      	movs	r3, #48	@ 0x30
 8007e50:	3130      	adds	r1, #48	@ 0x30
 8007e52:	7083      	strb	r3, [r0, #2]
 8007e54:	70c1      	strb	r1, [r0, #3]
 8007e56:	1d03      	adds	r3, r0, #4
 8007e58:	e7f1      	b.n	8007e3e <__exponent+0x58>
	...

08007e5c <_printf_float>:
 8007e5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007e60:	b08d      	sub	sp, #52	@ 0x34
 8007e62:	460c      	mov	r4, r1
 8007e64:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 8007e68:	4616      	mov	r6, r2
 8007e6a:	461f      	mov	r7, r3
 8007e6c:	4605      	mov	r5, r0
 8007e6e:	f000 fe05 	bl	8008a7c <_localeconv_r>
 8007e72:	6803      	ldr	r3, [r0, #0]
 8007e74:	9304      	str	r3, [sp, #16]
 8007e76:	4618      	mov	r0, r3
 8007e78:	f7f8 f9fa 	bl	8000270 <strlen>
 8007e7c:	2300      	movs	r3, #0
 8007e7e:	930a      	str	r3, [sp, #40]	@ 0x28
 8007e80:	f8d8 3000 	ldr.w	r3, [r8]
 8007e84:	9005      	str	r0, [sp, #20]
 8007e86:	3307      	adds	r3, #7
 8007e88:	f023 0307 	bic.w	r3, r3, #7
 8007e8c:	f103 0208 	add.w	r2, r3, #8
 8007e90:	f894 a018 	ldrb.w	sl, [r4, #24]
 8007e94:	f8d4 b000 	ldr.w	fp, [r4]
 8007e98:	f8c8 2000 	str.w	r2, [r8]
 8007e9c:	e9d3 8900 	ldrd	r8, r9, [r3]
 8007ea0:	f029 4300 	bic.w	r3, r9, #2147483648	@ 0x80000000
 8007ea4:	9307      	str	r3, [sp, #28]
 8007ea6:	f8cd 8018 	str.w	r8, [sp, #24]
 8007eaa:	e9c4 8912 	strd	r8, r9, [r4, #72]	@ 0x48
 8007eae:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8007eb2:	4b9c      	ldr	r3, [pc, #624]	@ (8008124 <_printf_float+0x2c8>)
 8007eb4:	f04f 32ff 	mov.w	r2, #4294967295
 8007eb8:	f7f8 fe38 	bl	8000b2c <__aeabi_dcmpun>
 8007ebc:	bb70      	cbnz	r0, 8007f1c <_printf_float+0xc0>
 8007ebe:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8007ec2:	4b98      	ldr	r3, [pc, #608]	@ (8008124 <_printf_float+0x2c8>)
 8007ec4:	f04f 32ff 	mov.w	r2, #4294967295
 8007ec8:	f7f8 fe12 	bl	8000af0 <__aeabi_dcmple>
 8007ecc:	bb30      	cbnz	r0, 8007f1c <_printf_float+0xc0>
 8007ece:	2200      	movs	r2, #0
 8007ed0:	2300      	movs	r3, #0
 8007ed2:	4640      	mov	r0, r8
 8007ed4:	4649      	mov	r1, r9
 8007ed6:	f7f8 fe01 	bl	8000adc <__aeabi_dcmplt>
 8007eda:	b110      	cbz	r0, 8007ee2 <_printf_float+0x86>
 8007edc:	232d      	movs	r3, #45	@ 0x2d
 8007ede:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8007ee2:	4a91      	ldr	r2, [pc, #580]	@ (8008128 <_printf_float+0x2cc>)
 8007ee4:	4b91      	ldr	r3, [pc, #580]	@ (800812c <_printf_float+0x2d0>)
 8007ee6:	f1ba 0f47 	cmp.w	sl, #71	@ 0x47
 8007eea:	bf94      	ite	ls
 8007eec:	4690      	movls	r8, r2
 8007eee:	4698      	movhi	r8, r3
 8007ef0:	2303      	movs	r3, #3
 8007ef2:	6123      	str	r3, [r4, #16]
 8007ef4:	f02b 0304 	bic.w	r3, fp, #4
 8007ef8:	6023      	str	r3, [r4, #0]
 8007efa:	f04f 0900 	mov.w	r9, #0
 8007efe:	9700      	str	r7, [sp, #0]
 8007f00:	4633      	mov	r3, r6
 8007f02:	aa0b      	add	r2, sp, #44	@ 0x2c
 8007f04:	4621      	mov	r1, r4
 8007f06:	4628      	mov	r0, r5
 8007f08:	f000 f9d2 	bl	80082b0 <_printf_common>
 8007f0c:	3001      	adds	r0, #1
 8007f0e:	f040 808d 	bne.w	800802c <_printf_float+0x1d0>
 8007f12:	f04f 30ff 	mov.w	r0, #4294967295
 8007f16:	b00d      	add	sp, #52	@ 0x34
 8007f18:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007f1c:	4642      	mov	r2, r8
 8007f1e:	464b      	mov	r3, r9
 8007f20:	4640      	mov	r0, r8
 8007f22:	4649      	mov	r1, r9
 8007f24:	f7f8 fe02 	bl	8000b2c <__aeabi_dcmpun>
 8007f28:	b140      	cbz	r0, 8007f3c <_printf_float+0xe0>
 8007f2a:	464b      	mov	r3, r9
 8007f2c:	2b00      	cmp	r3, #0
 8007f2e:	bfbc      	itt	lt
 8007f30:	232d      	movlt	r3, #45	@ 0x2d
 8007f32:	f884 3043 	strblt.w	r3, [r4, #67]	@ 0x43
 8007f36:	4a7e      	ldr	r2, [pc, #504]	@ (8008130 <_printf_float+0x2d4>)
 8007f38:	4b7e      	ldr	r3, [pc, #504]	@ (8008134 <_printf_float+0x2d8>)
 8007f3a:	e7d4      	b.n	8007ee6 <_printf_float+0x8a>
 8007f3c:	6863      	ldr	r3, [r4, #4]
 8007f3e:	f00a 02df 	and.w	r2, sl, #223	@ 0xdf
 8007f42:	9206      	str	r2, [sp, #24]
 8007f44:	1c5a      	adds	r2, r3, #1
 8007f46:	d13b      	bne.n	8007fc0 <_printf_float+0x164>
 8007f48:	2306      	movs	r3, #6
 8007f4a:	6063      	str	r3, [r4, #4]
 8007f4c:	f44b 6280 	orr.w	r2, fp, #1024	@ 0x400
 8007f50:	2300      	movs	r3, #0
 8007f52:	6022      	str	r2, [r4, #0]
 8007f54:	9303      	str	r3, [sp, #12]
 8007f56:	ab0a      	add	r3, sp, #40	@ 0x28
 8007f58:	e9cd a301 	strd	sl, r3, [sp, #4]
 8007f5c:	ab09      	add	r3, sp, #36	@ 0x24
 8007f5e:	9300      	str	r3, [sp, #0]
 8007f60:	6861      	ldr	r1, [r4, #4]
 8007f62:	ec49 8b10 	vmov	d0, r8, r9
 8007f66:	f10d 0323 	add.w	r3, sp, #35	@ 0x23
 8007f6a:	4628      	mov	r0, r5
 8007f6c:	f7ff fed6 	bl	8007d1c <__cvt>
 8007f70:	9b06      	ldr	r3, [sp, #24]
 8007f72:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8007f74:	2b47      	cmp	r3, #71	@ 0x47
 8007f76:	4680      	mov	r8, r0
 8007f78:	d129      	bne.n	8007fce <_printf_float+0x172>
 8007f7a:	1cc8      	adds	r0, r1, #3
 8007f7c:	db02      	blt.n	8007f84 <_printf_float+0x128>
 8007f7e:	6863      	ldr	r3, [r4, #4]
 8007f80:	4299      	cmp	r1, r3
 8007f82:	dd41      	ble.n	8008008 <_printf_float+0x1ac>
 8007f84:	f1aa 0a02 	sub.w	sl, sl, #2
 8007f88:	fa5f fa8a 	uxtb.w	sl, sl
 8007f8c:	3901      	subs	r1, #1
 8007f8e:	4652      	mov	r2, sl
 8007f90:	f104 0050 	add.w	r0, r4, #80	@ 0x50
 8007f94:	9109      	str	r1, [sp, #36]	@ 0x24
 8007f96:	f7ff ff26 	bl	8007de6 <__exponent>
 8007f9a:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8007f9c:	1813      	adds	r3, r2, r0
 8007f9e:	2a01      	cmp	r2, #1
 8007fa0:	4681      	mov	r9, r0
 8007fa2:	6123      	str	r3, [r4, #16]
 8007fa4:	dc02      	bgt.n	8007fac <_printf_float+0x150>
 8007fa6:	6822      	ldr	r2, [r4, #0]
 8007fa8:	07d2      	lsls	r2, r2, #31
 8007faa:	d501      	bpl.n	8007fb0 <_printf_float+0x154>
 8007fac:	3301      	adds	r3, #1
 8007fae:	6123      	str	r3, [r4, #16]
 8007fb0:	f89d 3023 	ldrb.w	r3, [sp, #35]	@ 0x23
 8007fb4:	2b00      	cmp	r3, #0
 8007fb6:	d0a2      	beq.n	8007efe <_printf_float+0xa2>
 8007fb8:	232d      	movs	r3, #45	@ 0x2d
 8007fba:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8007fbe:	e79e      	b.n	8007efe <_printf_float+0xa2>
 8007fc0:	9a06      	ldr	r2, [sp, #24]
 8007fc2:	2a47      	cmp	r2, #71	@ 0x47
 8007fc4:	d1c2      	bne.n	8007f4c <_printf_float+0xf0>
 8007fc6:	2b00      	cmp	r3, #0
 8007fc8:	d1c0      	bne.n	8007f4c <_printf_float+0xf0>
 8007fca:	2301      	movs	r3, #1
 8007fcc:	e7bd      	b.n	8007f4a <_printf_float+0xee>
 8007fce:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 8007fd2:	d9db      	bls.n	8007f8c <_printf_float+0x130>
 8007fd4:	f1ba 0f66 	cmp.w	sl, #102	@ 0x66
 8007fd8:	d118      	bne.n	800800c <_printf_float+0x1b0>
 8007fda:	2900      	cmp	r1, #0
 8007fdc:	6863      	ldr	r3, [r4, #4]
 8007fde:	dd0b      	ble.n	8007ff8 <_printf_float+0x19c>
 8007fe0:	6121      	str	r1, [r4, #16]
 8007fe2:	b913      	cbnz	r3, 8007fea <_printf_float+0x18e>
 8007fe4:	6822      	ldr	r2, [r4, #0]
 8007fe6:	07d0      	lsls	r0, r2, #31
 8007fe8:	d502      	bpl.n	8007ff0 <_printf_float+0x194>
 8007fea:	3301      	adds	r3, #1
 8007fec:	440b      	add	r3, r1
 8007fee:	6123      	str	r3, [r4, #16]
 8007ff0:	65a1      	str	r1, [r4, #88]	@ 0x58
 8007ff2:	f04f 0900 	mov.w	r9, #0
 8007ff6:	e7db      	b.n	8007fb0 <_printf_float+0x154>
 8007ff8:	b913      	cbnz	r3, 8008000 <_printf_float+0x1a4>
 8007ffa:	6822      	ldr	r2, [r4, #0]
 8007ffc:	07d2      	lsls	r2, r2, #31
 8007ffe:	d501      	bpl.n	8008004 <_printf_float+0x1a8>
 8008000:	3302      	adds	r3, #2
 8008002:	e7f4      	b.n	8007fee <_printf_float+0x192>
 8008004:	2301      	movs	r3, #1
 8008006:	e7f2      	b.n	8007fee <_printf_float+0x192>
 8008008:	f04f 0a67 	mov.w	sl, #103	@ 0x67
 800800c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800800e:	4299      	cmp	r1, r3
 8008010:	db05      	blt.n	800801e <_printf_float+0x1c2>
 8008012:	6823      	ldr	r3, [r4, #0]
 8008014:	6121      	str	r1, [r4, #16]
 8008016:	07d8      	lsls	r0, r3, #31
 8008018:	d5ea      	bpl.n	8007ff0 <_printf_float+0x194>
 800801a:	1c4b      	adds	r3, r1, #1
 800801c:	e7e7      	b.n	8007fee <_printf_float+0x192>
 800801e:	2900      	cmp	r1, #0
 8008020:	bfd4      	ite	le
 8008022:	f1c1 0202 	rsble	r2, r1, #2
 8008026:	2201      	movgt	r2, #1
 8008028:	4413      	add	r3, r2
 800802a:	e7e0      	b.n	8007fee <_printf_float+0x192>
 800802c:	6823      	ldr	r3, [r4, #0]
 800802e:	055a      	lsls	r2, r3, #21
 8008030:	d407      	bmi.n	8008042 <_printf_float+0x1e6>
 8008032:	6923      	ldr	r3, [r4, #16]
 8008034:	4642      	mov	r2, r8
 8008036:	4631      	mov	r1, r6
 8008038:	4628      	mov	r0, r5
 800803a:	47b8      	blx	r7
 800803c:	3001      	adds	r0, #1
 800803e:	d12b      	bne.n	8008098 <_printf_float+0x23c>
 8008040:	e767      	b.n	8007f12 <_printf_float+0xb6>
 8008042:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 8008046:	f240 80dd 	bls.w	8008204 <_printf_float+0x3a8>
 800804a:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 800804e:	2200      	movs	r2, #0
 8008050:	2300      	movs	r3, #0
 8008052:	f7f8 fd39 	bl	8000ac8 <__aeabi_dcmpeq>
 8008056:	2800      	cmp	r0, #0
 8008058:	d033      	beq.n	80080c2 <_printf_float+0x266>
 800805a:	4a37      	ldr	r2, [pc, #220]	@ (8008138 <_printf_float+0x2dc>)
 800805c:	2301      	movs	r3, #1
 800805e:	4631      	mov	r1, r6
 8008060:	4628      	mov	r0, r5
 8008062:	47b8      	blx	r7
 8008064:	3001      	adds	r0, #1
 8008066:	f43f af54 	beq.w	8007f12 <_printf_float+0xb6>
 800806a:	e9dd 3809 	ldrd	r3, r8, [sp, #36]	@ 0x24
 800806e:	4543      	cmp	r3, r8
 8008070:	db02      	blt.n	8008078 <_printf_float+0x21c>
 8008072:	6823      	ldr	r3, [r4, #0]
 8008074:	07d8      	lsls	r0, r3, #31
 8008076:	d50f      	bpl.n	8008098 <_printf_float+0x23c>
 8008078:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800807c:	4631      	mov	r1, r6
 800807e:	4628      	mov	r0, r5
 8008080:	47b8      	blx	r7
 8008082:	3001      	adds	r0, #1
 8008084:	f43f af45 	beq.w	8007f12 <_printf_float+0xb6>
 8008088:	f04f 0900 	mov.w	r9, #0
 800808c:	f108 38ff 	add.w	r8, r8, #4294967295
 8008090:	f104 0a1a 	add.w	sl, r4, #26
 8008094:	45c8      	cmp	r8, r9
 8008096:	dc09      	bgt.n	80080ac <_printf_float+0x250>
 8008098:	6823      	ldr	r3, [r4, #0]
 800809a:	079b      	lsls	r3, r3, #30
 800809c:	f100 8103 	bmi.w	80082a6 <_printf_float+0x44a>
 80080a0:	68e0      	ldr	r0, [r4, #12]
 80080a2:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80080a4:	4298      	cmp	r0, r3
 80080a6:	bfb8      	it	lt
 80080a8:	4618      	movlt	r0, r3
 80080aa:	e734      	b.n	8007f16 <_printf_float+0xba>
 80080ac:	2301      	movs	r3, #1
 80080ae:	4652      	mov	r2, sl
 80080b0:	4631      	mov	r1, r6
 80080b2:	4628      	mov	r0, r5
 80080b4:	47b8      	blx	r7
 80080b6:	3001      	adds	r0, #1
 80080b8:	f43f af2b 	beq.w	8007f12 <_printf_float+0xb6>
 80080bc:	f109 0901 	add.w	r9, r9, #1
 80080c0:	e7e8      	b.n	8008094 <_printf_float+0x238>
 80080c2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80080c4:	2b00      	cmp	r3, #0
 80080c6:	dc39      	bgt.n	800813c <_printf_float+0x2e0>
 80080c8:	4a1b      	ldr	r2, [pc, #108]	@ (8008138 <_printf_float+0x2dc>)
 80080ca:	2301      	movs	r3, #1
 80080cc:	4631      	mov	r1, r6
 80080ce:	4628      	mov	r0, r5
 80080d0:	47b8      	blx	r7
 80080d2:	3001      	adds	r0, #1
 80080d4:	f43f af1d 	beq.w	8007f12 <_printf_float+0xb6>
 80080d8:	e9dd 3909 	ldrd	r3, r9, [sp, #36]	@ 0x24
 80080dc:	ea59 0303 	orrs.w	r3, r9, r3
 80080e0:	d102      	bne.n	80080e8 <_printf_float+0x28c>
 80080e2:	6823      	ldr	r3, [r4, #0]
 80080e4:	07d9      	lsls	r1, r3, #31
 80080e6:	d5d7      	bpl.n	8008098 <_printf_float+0x23c>
 80080e8:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80080ec:	4631      	mov	r1, r6
 80080ee:	4628      	mov	r0, r5
 80080f0:	47b8      	blx	r7
 80080f2:	3001      	adds	r0, #1
 80080f4:	f43f af0d 	beq.w	8007f12 <_printf_float+0xb6>
 80080f8:	f04f 0a00 	mov.w	sl, #0
 80080fc:	f104 0b1a 	add.w	fp, r4, #26
 8008100:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8008102:	425b      	negs	r3, r3
 8008104:	4553      	cmp	r3, sl
 8008106:	dc01      	bgt.n	800810c <_printf_float+0x2b0>
 8008108:	464b      	mov	r3, r9
 800810a:	e793      	b.n	8008034 <_printf_float+0x1d8>
 800810c:	2301      	movs	r3, #1
 800810e:	465a      	mov	r2, fp
 8008110:	4631      	mov	r1, r6
 8008112:	4628      	mov	r0, r5
 8008114:	47b8      	blx	r7
 8008116:	3001      	adds	r0, #1
 8008118:	f43f aefb 	beq.w	8007f12 <_printf_float+0xb6>
 800811c:	f10a 0a01 	add.w	sl, sl, #1
 8008120:	e7ee      	b.n	8008100 <_printf_float+0x2a4>
 8008122:	bf00      	nop
 8008124:	7fefffff 	.word	0x7fefffff
 8008128:	0800ae69 	.word	0x0800ae69
 800812c:	0800ae6d 	.word	0x0800ae6d
 8008130:	0800ae71 	.word	0x0800ae71
 8008134:	0800ae75 	.word	0x0800ae75
 8008138:	0800ae79 	.word	0x0800ae79
 800813c:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 800813e:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
 8008142:	4553      	cmp	r3, sl
 8008144:	bfa8      	it	ge
 8008146:	4653      	movge	r3, sl
 8008148:	2b00      	cmp	r3, #0
 800814a:	4699      	mov	r9, r3
 800814c:	dc36      	bgt.n	80081bc <_printf_float+0x360>
 800814e:	f04f 0b00 	mov.w	fp, #0
 8008152:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8008156:	f104 021a 	add.w	r2, r4, #26
 800815a:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 800815c:	9306      	str	r3, [sp, #24]
 800815e:	eba3 0309 	sub.w	r3, r3, r9
 8008162:	455b      	cmp	r3, fp
 8008164:	dc31      	bgt.n	80081ca <_printf_float+0x36e>
 8008166:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8008168:	459a      	cmp	sl, r3
 800816a:	dc3a      	bgt.n	80081e2 <_printf_float+0x386>
 800816c:	6823      	ldr	r3, [r4, #0]
 800816e:	07da      	lsls	r2, r3, #31
 8008170:	d437      	bmi.n	80081e2 <_printf_float+0x386>
 8008172:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8008174:	ebaa 0903 	sub.w	r9, sl, r3
 8008178:	9b06      	ldr	r3, [sp, #24]
 800817a:	ebaa 0303 	sub.w	r3, sl, r3
 800817e:	4599      	cmp	r9, r3
 8008180:	bfa8      	it	ge
 8008182:	4699      	movge	r9, r3
 8008184:	f1b9 0f00 	cmp.w	r9, #0
 8008188:	dc33      	bgt.n	80081f2 <_printf_float+0x396>
 800818a:	f04f 0800 	mov.w	r8, #0
 800818e:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8008192:	f104 0b1a 	add.w	fp, r4, #26
 8008196:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8008198:	ebaa 0303 	sub.w	r3, sl, r3
 800819c:	eba3 0309 	sub.w	r3, r3, r9
 80081a0:	4543      	cmp	r3, r8
 80081a2:	f77f af79 	ble.w	8008098 <_printf_float+0x23c>
 80081a6:	2301      	movs	r3, #1
 80081a8:	465a      	mov	r2, fp
 80081aa:	4631      	mov	r1, r6
 80081ac:	4628      	mov	r0, r5
 80081ae:	47b8      	blx	r7
 80081b0:	3001      	adds	r0, #1
 80081b2:	f43f aeae 	beq.w	8007f12 <_printf_float+0xb6>
 80081b6:	f108 0801 	add.w	r8, r8, #1
 80081ba:	e7ec      	b.n	8008196 <_printf_float+0x33a>
 80081bc:	4642      	mov	r2, r8
 80081be:	4631      	mov	r1, r6
 80081c0:	4628      	mov	r0, r5
 80081c2:	47b8      	blx	r7
 80081c4:	3001      	adds	r0, #1
 80081c6:	d1c2      	bne.n	800814e <_printf_float+0x2f2>
 80081c8:	e6a3      	b.n	8007f12 <_printf_float+0xb6>
 80081ca:	2301      	movs	r3, #1
 80081cc:	4631      	mov	r1, r6
 80081ce:	4628      	mov	r0, r5
 80081d0:	9206      	str	r2, [sp, #24]
 80081d2:	47b8      	blx	r7
 80081d4:	3001      	adds	r0, #1
 80081d6:	f43f ae9c 	beq.w	8007f12 <_printf_float+0xb6>
 80081da:	9a06      	ldr	r2, [sp, #24]
 80081dc:	f10b 0b01 	add.w	fp, fp, #1
 80081e0:	e7bb      	b.n	800815a <_printf_float+0x2fe>
 80081e2:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80081e6:	4631      	mov	r1, r6
 80081e8:	4628      	mov	r0, r5
 80081ea:	47b8      	blx	r7
 80081ec:	3001      	adds	r0, #1
 80081ee:	d1c0      	bne.n	8008172 <_printf_float+0x316>
 80081f0:	e68f      	b.n	8007f12 <_printf_float+0xb6>
 80081f2:	9a06      	ldr	r2, [sp, #24]
 80081f4:	464b      	mov	r3, r9
 80081f6:	4442      	add	r2, r8
 80081f8:	4631      	mov	r1, r6
 80081fa:	4628      	mov	r0, r5
 80081fc:	47b8      	blx	r7
 80081fe:	3001      	adds	r0, #1
 8008200:	d1c3      	bne.n	800818a <_printf_float+0x32e>
 8008202:	e686      	b.n	8007f12 <_printf_float+0xb6>
 8008204:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
 8008208:	f1ba 0f01 	cmp.w	sl, #1
 800820c:	dc01      	bgt.n	8008212 <_printf_float+0x3b6>
 800820e:	07db      	lsls	r3, r3, #31
 8008210:	d536      	bpl.n	8008280 <_printf_float+0x424>
 8008212:	2301      	movs	r3, #1
 8008214:	4642      	mov	r2, r8
 8008216:	4631      	mov	r1, r6
 8008218:	4628      	mov	r0, r5
 800821a:	47b8      	blx	r7
 800821c:	3001      	adds	r0, #1
 800821e:	f43f ae78 	beq.w	8007f12 <_printf_float+0xb6>
 8008222:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8008226:	4631      	mov	r1, r6
 8008228:	4628      	mov	r0, r5
 800822a:	47b8      	blx	r7
 800822c:	3001      	adds	r0, #1
 800822e:	f43f ae70 	beq.w	8007f12 <_printf_float+0xb6>
 8008232:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 8008236:	2200      	movs	r2, #0
 8008238:	2300      	movs	r3, #0
 800823a:	f10a 3aff 	add.w	sl, sl, #4294967295
 800823e:	f7f8 fc43 	bl	8000ac8 <__aeabi_dcmpeq>
 8008242:	b9c0      	cbnz	r0, 8008276 <_printf_float+0x41a>
 8008244:	4653      	mov	r3, sl
 8008246:	f108 0201 	add.w	r2, r8, #1
 800824a:	4631      	mov	r1, r6
 800824c:	4628      	mov	r0, r5
 800824e:	47b8      	blx	r7
 8008250:	3001      	adds	r0, #1
 8008252:	d10c      	bne.n	800826e <_printf_float+0x412>
 8008254:	e65d      	b.n	8007f12 <_printf_float+0xb6>
 8008256:	2301      	movs	r3, #1
 8008258:	465a      	mov	r2, fp
 800825a:	4631      	mov	r1, r6
 800825c:	4628      	mov	r0, r5
 800825e:	47b8      	blx	r7
 8008260:	3001      	adds	r0, #1
 8008262:	f43f ae56 	beq.w	8007f12 <_printf_float+0xb6>
 8008266:	f108 0801 	add.w	r8, r8, #1
 800826a:	45d0      	cmp	r8, sl
 800826c:	dbf3      	blt.n	8008256 <_printf_float+0x3fa>
 800826e:	464b      	mov	r3, r9
 8008270:	f104 0250 	add.w	r2, r4, #80	@ 0x50
 8008274:	e6df      	b.n	8008036 <_printf_float+0x1da>
 8008276:	f04f 0800 	mov.w	r8, #0
 800827a:	f104 0b1a 	add.w	fp, r4, #26
 800827e:	e7f4      	b.n	800826a <_printf_float+0x40e>
 8008280:	2301      	movs	r3, #1
 8008282:	4642      	mov	r2, r8
 8008284:	e7e1      	b.n	800824a <_printf_float+0x3ee>
 8008286:	2301      	movs	r3, #1
 8008288:	464a      	mov	r2, r9
 800828a:	4631      	mov	r1, r6
 800828c:	4628      	mov	r0, r5
 800828e:	47b8      	blx	r7
 8008290:	3001      	adds	r0, #1
 8008292:	f43f ae3e 	beq.w	8007f12 <_printf_float+0xb6>
 8008296:	f108 0801 	add.w	r8, r8, #1
 800829a:	68e3      	ldr	r3, [r4, #12]
 800829c:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 800829e:	1a5b      	subs	r3, r3, r1
 80082a0:	4543      	cmp	r3, r8
 80082a2:	dcf0      	bgt.n	8008286 <_printf_float+0x42a>
 80082a4:	e6fc      	b.n	80080a0 <_printf_float+0x244>
 80082a6:	f04f 0800 	mov.w	r8, #0
 80082aa:	f104 0919 	add.w	r9, r4, #25
 80082ae:	e7f4      	b.n	800829a <_printf_float+0x43e>

080082b0 <_printf_common>:
 80082b0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80082b4:	4616      	mov	r6, r2
 80082b6:	4698      	mov	r8, r3
 80082b8:	688a      	ldr	r2, [r1, #8]
 80082ba:	690b      	ldr	r3, [r1, #16]
 80082bc:	f8dd 9020 	ldr.w	r9, [sp, #32]
 80082c0:	4293      	cmp	r3, r2
 80082c2:	bfb8      	it	lt
 80082c4:	4613      	movlt	r3, r2
 80082c6:	6033      	str	r3, [r6, #0]
 80082c8:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 80082cc:	4607      	mov	r7, r0
 80082ce:	460c      	mov	r4, r1
 80082d0:	b10a      	cbz	r2, 80082d6 <_printf_common+0x26>
 80082d2:	3301      	adds	r3, #1
 80082d4:	6033      	str	r3, [r6, #0]
 80082d6:	6823      	ldr	r3, [r4, #0]
 80082d8:	0699      	lsls	r1, r3, #26
 80082da:	bf42      	ittt	mi
 80082dc:	6833      	ldrmi	r3, [r6, #0]
 80082de:	3302      	addmi	r3, #2
 80082e0:	6033      	strmi	r3, [r6, #0]
 80082e2:	6825      	ldr	r5, [r4, #0]
 80082e4:	f015 0506 	ands.w	r5, r5, #6
 80082e8:	d106      	bne.n	80082f8 <_printf_common+0x48>
 80082ea:	f104 0a19 	add.w	sl, r4, #25
 80082ee:	68e3      	ldr	r3, [r4, #12]
 80082f0:	6832      	ldr	r2, [r6, #0]
 80082f2:	1a9b      	subs	r3, r3, r2
 80082f4:	42ab      	cmp	r3, r5
 80082f6:	dc26      	bgt.n	8008346 <_printf_common+0x96>
 80082f8:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 80082fc:	6822      	ldr	r2, [r4, #0]
 80082fe:	3b00      	subs	r3, #0
 8008300:	bf18      	it	ne
 8008302:	2301      	movne	r3, #1
 8008304:	0692      	lsls	r2, r2, #26
 8008306:	d42b      	bmi.n	8008360 <_printf_common+0xb0>
 8008308:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 800830c:	4641      	mov	r1, r8
 800830e:	4638      	mov	r0, r7
 8008310:	47c8      	blx	r9
 8008312:	3001      	adds	r0, #1
 8008314:	d01e      	beq.n	8008354 <_printf_common+0xa4>
 8008316:	6823      	ldr	r3, [r4, #0]
 8008318:	6922      	ldr	r2, [r4, #16]
 800831a:	f003 0306 	and.w	r3, r3, #6
 800831e:	2b04      	cmp	r3, #4
 8008320:	bf02      	ittt	eq
 8008322:	68e5      	ldreq	r5, [r4, #12]
 8008324:	6833      	ldreq	r3, [r6, #0]
 8008326:	1aed      	subeq	r5, r5, r3
 8008328:	68a3      	ldr	r3, [r4, #8]
 800832a:	bf0c      	ite	eq
 800832c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8008330:	2500      	movne	r5, #0
 8008332:	4293      	cmp	r3, r2
 8008334:	bfc4      	itt	gt
 8008336:	1a9b      	subgt	r3, r3, r2
 8008338:	18ed      	addgt	r5, r5, r3
 800833a:	2600      	movs	r6, #0
 800833c:	341a      	adds	r4, #26
 800833e:	42b5      	cmp	r5, r6
 8008340:	d11a      	bne.n	8008378 <_printf_common+0xc8>
 8008342:	2000      	movs	r0, #0
 8008344:	e008      	b.n	8008358 <_printf_common+0xa8>
 8008346:	2301      	movs	r3, #1
 8008348:	4652      	mov	r2, sl
 800834a:	4641      	mov	r1, r8
 800834c:	4638      	mov	r0, r7
 800834e:	47c8      	blx	r9
 8008350:	3001      	adds	r0, #1
 8008352:	d103      	bne.n	800835c <_printf_common+0xac>
 8008354:	f04f 30ff 	mov.w	r0, #4294967295
 8008358:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800835c:	3501      	adds	r5, #1
 800835e:	e7c6      	b.n	80082ee <_printf_common+0x3e>
 8008360:	18e1      	adds	r1, r4, r3
 8008362:	1c5a      	adds	r2, r3, #1
 8008364:	2030      	movs	r0, #48	@ 0x30
 8008366:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 800836a:	4422      	add	r2, r4
 800836c:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8008370:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8008374:	3302      	adds	r3, #2
 8008376:	e7c7      	b.n	8008308 <_printf_common+0x58>
 8008378:	2301      	movs	r3, #1
 800837a:	4622      	mov	r2, r4
 800837c:	4641      	mov	r1, r8
 800837e:	4638      	mov	r0, r7
 8008380:	47c8      	blx	r9
 8008382:	3001      	adds	r0, #1
 8008384:	d0e6      	beq.n	8008354 <_printf_common+0xa4>
 8008386:	3601      	adds	r6, #1
 8008388:	e7d9      	b.n	800833e <_printf_common+0x8e>
	...

0800838c <_printf_i>:
 800838c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8008390:	7e0f      	ldrb	r7, [r1, #24]
 8008392:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8008394:	2f78      	cmp	r7, #120	@ 0x78
 8008396:	4691      	mov	r9, r2
 8008398:	4680      	mov	r8, r0
 800839a:	460c      	mov	r4, r1
 800839c:	469a      	mov	sl, r3
 800839e:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 80083a2:	d807      	bhi.n	80083b4 <_printf_i+0x28>
 80083a4:	2f62      	cmp	r7, #98	@ 0x62
 80083a6:	d80a      	bhi.n	80083be <_printf_i+0x32>
 80083a8:	2f00      	cmp	r7, #0
 80083aa:	f000 80d2 	beq.w	8008552 <_printf_i+0x1c6>
 80083ae:	2f58      	cmp	r7, #88	@ 0x58
 80083b0:	f000 80b9 	beq.w	8008526 <_printf_i+0x19a>
 80083b4:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 80083b8:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 80083bc:	e03a      	b.n	8008434 <_printf_i+0xa8>
 80083be:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 80083c2:	2b15      	cmp	r3, #21
 80083c4:	d8f6      	bhi.n	80083b4 <_printf_i+0x28>
 80083c6:	a101      	add	r1, pc, #4	@ (adr r1, 80083cc <_printf_i+0x40>)
 80083c8:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 80083cc:	08008425 	.word	0x08008425
 80083d0:	08008439 	.word	0x08008439
 80083d4:	080083b5 	.word	0x080083b5
 80083d8:	080083b5 	.word	0x080083b5
 80083dc:	080083b5 	.word	0x080083b5
 80083e0:	080083b5 	.word	0x080083b5
 80083e4:	08008439 	.word	0x08008439
 80083e8:	080083b5 	.word	0x080083b5
 80083ec:	080083b5 	.word	0x080083b5
 80083f0:	080083b5 	.word	0x080083b5
 80083f4:	080083b5 	.word	0x080083b5
 80083f8:	08008539 	.word	0x08008539
 80083fc:	08008463 	.word	0x08008463
 8008400:	080084f3 	.word	0x080084f3
 8008404:	080083b5 	.word	0x080083b5
 8008408:	080083b5 	.word	0x080083b5
 800840c:	0800855b 	.word	0x0800855b
 8008410:	080083b5 	.word	0x080083b5
 8008414:	08008463 	.word	0x08008463
 8008418:	080083b5 	.word	0x080083b5
 800841c:	080083b5 	.word	0x080083b5
 8008420:	080084fb 	.word	0x080084fb
 8008424:	6833      	ldr	r3, [r6, #0]
 8008426:	1d1a      	adds	r2, r3, #4
 8008428:	681b      	ldr	r3, [r3, #0]
 800842a:	6032      	str	r2, [r6, #0]
 800842c:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8008430:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8008434:	2301      	movs	r3, #1
 8008436:	e09d      	b.n	8008574 <_printf_i+0x1e8>
 8008438:	6833      	ldr	r3, [r6, #0]
 800843a:	6820      	ldr	r0, [r4, #0]
 800843c:	1d19      	adds	r1, r3, #4
 800843e:	6031      	str	r1, [r6, #0]
 8008440:	0606      	lsls	r6, r0, #24
 8008442:	d501      	bpl.n	8008448 <_printf_i+0xbc>
 8008444:	681d      	ldr	r5, [r3, #0]
 8008446:	e003      	b.n	8008450 <_printf_i+0xc4>
 8008448:	0645      	lsls	r5, r0, #25
 800844a:	d5fb      	bpl.n	8008444 <_printf_i+0xb8>
 800844c:	f9b3 5000 	ldrsh.w	r5, [r3]
 8008450:	2d00      	cmp	r5, #0
 8008452:	da03      	bge.n	800845c <_printf_i+0xd0>
 8008454:	232d      	movs	r3, #45	@ 0x2d
 8008456:	426d      	negs	r5, r5
 8008458:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800845c:	4859      	ldr	r0, [pc, #356]	@ (80085c4 <_printf_i+0x238>)
 800845e:	230a      	movs	r3, #10
 8008460:	e011      	b.n	8008486 <_printf_i+0xfa>
 8008462:	6821      	ldr	r1, [r4, #0]
 8008464:	6833      	ldr	r3, [r6, #0]
 8008466:	0608      	lsls	r0, r1, #24
 8008468:	f853 5b04 	ldr.w	r5, [r3], #4
 800846c:	d402      	bmi.n	8008474 <_printf_i+0xe8>
 800846e:	0649      	lsls	r1, r1, #25
 8008470:	bf48      	it	mi
 8008472:	b2ad      	uxthmi	r5, r5
 8008474:	2f6f      	cmp	r7, #111	@ 0x6f
 8008476:	4853      	ldr	r0, [pc, #332]	@ (80085c4 <_printf_i+0x238>)
 8008478:	6033      	str	r3, [r6, #0]
 800847a:	bf14      	ite	ne
 800847c:	230a      	movne	r3, #10
 800847e:	2308      	moveq	r3, #8
 8008480:	2100      	movs	r1, #0
 8008482:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8008486:	6866      	ldr	r6, [r4, #4]
 8008488:	60a6      	str	r6, [r4, #8]
 800848a:	2e00      	cmp	r6, #0
 800848c:	bfa2      	ittt	ge
 800848e:	6821      	ldrge	r1, [r4, #0]
 8008490:	f021 0104 	bicge.w	r1, r1, #4
 8008494:	6021      	strge	r1, [r4, #0]
 8008496:	b90d      	cbnz	r5, 800849c <_printf_i+0x110>
 8008498:	2e00      	cmp	r6, #0
 800849a:	d04b      	beq.n	8008534 <_printf_i+0x1a8>
 800849c:	4616      	mov	r6, r2
 800849e:	fbb5 f1f3 	udiv	r1, r5, r3
 80084a2:	fb03 5711 	mls	r7, r3, r1, r5
 80084a6:	5dc7      	ldrb	r7, [r0, r7]
 80084a8:	f806 7d01 	strb.w	r7, [r6, #-1]!
 80084ac:	462f      	mov	r7, r5
 80084ae:	42bb      	cmp	r3, r7
 80084b0:	460d      	mov	r5, r1
 80084b2:	d9f4      	bls.n	800849e <_printf_i+0x112>
 80084b4:	2b08      	cmp	r3, #8
 80084b6:	d10b      	bne.n	80084d0 <_printf_i+0x144>
 80084b8:	6823      	ldr	r3, [r4, #0]
 80084ba:	07df      	lsls	r7, r3, #31
 80084bc:	d508      	bpl.n	80084d0 <_printf_i+0x144>
 80084be:	6923      	ldr	r3, [r4, #16]
 80084c0:	6861      	ldr	r1, [r4, #4]
 80084c2:	4299      	cmp	r1, r3
 80084c4:	bfde      	ittt	le
 80084c6:	2330      	movle	r3, #48	@ 0x30
 80084c8:	f806 3c01 	strble.w	r3, [r6, #-1]
 80084cc:	f106 36ff 	addle.w	r6, r6, #4294967295
 80084d0:	1b92      	subs	r2, r2, r6
 80084d2:	6122      	str	r2, [r4, #16]
 80084d4:	f8cd a000 	str.w	sl, [sp]
 80084d8:	464b      	mov	r3, r9
 80084da:	aa03      	add	r2, sp, #12
 80084dc:	4621      	mov	r1, r4
 80084de:	4640      	mov	r0, r8
 80084e0:	f7ff fee6 	bl	80082b0 <_printf_common>
 80084e4:	3001      	adds	r0, #1
 80084e6:	d14a      	bne.n	800857e <_printf_i+0x1f2>
 80084e8:	f04f 30ff 	mov.w	r0, #4294967295
 80084ec:	b004      	add	sp, #16
 80084ee:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80084f2:	6823      	ldr	r3, [r4, #0]
 80084f4:	f043 0320 	orr.w	r3, r3, #32
 80084f8:	6023      	str	r3, [r4, #0]
 80084fa:	4833      	ldr	r0, [pc, #204]	@ (80085c8 <_printf_i+0x23c>)
 80084fc:	2778      	movs	r7, #120	@ 0x78
 80084fe:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8008502:	6823      	ldr	r3, [r4, #0]
 8008504:	6831      	ldr	r1, [r6, #0]
 8008506:	061f      	lsls	r7, r3, #24
 8008508:	f851 5b04 	ldr.w	r5, [r1], #4
 800850c:	d402      	bmi.n	8008514 <_printf_i+0x188>
 800850e:	065f      	lsls	r7, r3, #25
 8008510:	bf48      	it	mi
 8008512:	b2ad      	uxthmi	r5, r5
 8008514:	6031      	str	r1, [r6, #0]
 8008516:	07d9      	lsls	r1, r3, #31
 8008518:	bf44      	itt	mi
 800851a:	f043 0320 	orrmi.w	r3, r3, #32
 800851e:	6023      	strmi	r3, [r4, #0]
 8008520:	b11d      	cbz	r5, 800852a <_printf_i+0x19e>
 8008522:	2310      	movs	r3, #16
 8008524:	e7ac      	b.n	8008480 <_printf_i+0xf4>
 8008526:	4827      	ldr	r0, [pc, #156]	@ (80085c4 <_printf_i+0x238>)
 8008528:	e7e9      	b.n	80084fe <_printf_i+0x172>
 800852a:	6823      	ldr	r3, [r4, #0]
 800852c:	f023 0320 	bic.w	r3, r3, #32
 8008530:	6023      	str	r3, [r4, #0]
 8008532:	e7f6      	b.n	8008522 <_printf_i+0x196>
 8008534:	4616      	mov	r6, r2
 8008536:	e7bd      	b.n	80084b4 <_printf_i+0x128>
 8008538:	6833      	ldr	r3, [r6, #0]
 800853a:	6825      	ldr	r5, [r4, #0]
 800853c:	6961      	ldr	r1, [r4, #20]
 800853e:	1d18      	adds	r0, r3, #4
 8008540:	6030      	str	r0, [r6, #0]
 8008542:	062e      	lsls	r6, r5, #24
 8008544:	681b      	ldr	r3, [r3, #0]
 8008546:	d501      	bpl.n	800854c <_printf_i+0x1c0>
 8008548:	6019      	str	r1, [r3, #0]
 800854a:	e002      	b.n	8008552 <_printf_i+0x1c6>
 800854c:	0668      	lsls	r0, r5, #25
 800854e:	d5fb      	bpl.n	8008548 <_printf_i+0x1bc>
 8008550:	8019      	strh	r1, [r3, #0]
 8008552:	2300      	movs	r3, #0
 8008554:	6123      	str	r3, [r4, #16]
 8008556:	4616      	mov	r6, r2
 8008558:	e7bc      	b.n	80084d4 <_printf_i+0x148>
 800855a:	6833      	ldr	r3, [r6, #0]
 800855c:	1d1a      	adds	r2, r3, #4
 800855e:	6032      	str	r2, [r6, #0]
 8008560:	681e      	ldr	r6, [r3, #0]
 8008562:	6862      	ldr	r2, [r4, #4]
 8008564:	2100      	movs	r1, #0
 8008566:	4630      	mov	r0, r6
 8008568:	f7f7 fe32 	bl	80001d0 <memchr>
 800856c:	b108      	cbz	r0, 8008572 <_printf_i+0x1e6>
 800856e:	1b80      	subs	r0, r0, r6
 8008570:	6060      	str	r0, [r4, #4]
 8008572:	6863      	ldr	r3, [r4, #4]
 8008574:	6123      	str	r3, [r4, #16]
 8008576:	2300      	movs	r3, #0
 8008578:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800857c:	e7aa      	b.n	80084d4 <_printf_i+0x148>
 800857e:	6923      	ldr	r3, [r4, #16]
 8008580:	4632      	mov	r2, r6
 8008582:	4649      	mov	r1, r9
 8008584:	4640      	mov	r0, r8
 8008586:	47d0      	blx	sl
 8008588:	3001      	adds	r0, #1
 800858a:	d0ad      	beq.n	80084e8 <_printf_i+0x15c>
 800858c:	6823      	ldr	r3, [r4, #0]
 800858e:	079b      	lsls	r3, r3, #30
 8008590:	d413      	bmi.n	80085ba <_printf_i+0x22e>
 8008592:	68e0      	ldr	r0, [r4, #12]
 8008594:	9b03      	ldr	r3, [sp, #12]
 8008596:	4298      	cmp	r0, r3
 8008598:	bfb8      	it	lt
 800859a:	4618      	movlt	r0, r3
 800859c:	e7a6      	b.n	80084ec <_printf_i+0x160>
 800859e:	2301      	movs	r3, #1
 80085a0:	4632      	mov	r2, r6
 80085a2:	4649      	mov	r1, r9
 80085a4:	4640      	mov	r0, r8
 80085a6:	47d0      	blx	sl
 80085a8:	3001      	adds	r0, #1
 80085aa:	d09d      	beq.n	80084e8 <_printf_i+0x15c>
 80085ac:	3501      	adds	r5, #1
 80085ae:	68e3      	ldr	r3, [r4, #12]
 80085b0:	9903      	ldr	r1, [sp, #12]
 80085b2:	1a5b      	subs	r3, r3, r1
 80085b4:	42ab      	cmp	r3, r5
 80085b6:	dcf2      	bgt.n	800859e <_printf_i+0x212>
 80085b8:	e7eb      	b.n	8008592 <_printf_i+0x206>
 80085ba:	2500      	movs	r5, #0
 80085bc:	f104 0619 	add.w	r6, r4, #25
 80085c0:	e7f5      	b.n	80085ae <_printf_i+0x222>
 80085c2:	bf00      	nop
 80085c4:	0800ae7b 	.word	0x0800ae7b
 80085c8:	0800ae8c 	.word	0x0800ae8c

080085cc <std>:
 80085cc:	2300      	movs	r3, #0
 80085ce:	b510      	push	{r4, lr}
 80085d0:	4604      	mov	r4, r0
 80085d2:	e9c0 3300 	strd	r3, r3, [r0]
 80085d6:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80085da:	6083      	str	r3, [r0, #8]
 80085dc:	8181      	strh	r1, [r0, #12]
 80085de:	6643      	str	r3, [r0, #100]	@ 0x64
 80085e0:	81c2      	strh	r2, [r0, #14]
 80085e2:	6183      	str	r3, [r0, #24]
 80085e4:	4619      	mov	r1, r3
 80085e6:	2208      	movs	r2, #8
 80085e8:	305c      	adds	r0, #92	@ 0x5c
 80085ea:	f000 fa2d 	bl	8008a48 <memset>
 80085ee:	4b0d      	ldr	r3, [pc, #52]	@ (8008624 <std+0x58>)
 80085f0:	6263      	str	r3, [r4, #36]	@ 0x24
 80085f2:	4b0d      	ldr	r3, [pc, #52]	@ (8008628 <std+0x5c>)
 80085f4:	62a3      	str	r3, [r4, #40]	@ 0x28
 80085f6:	4b0d      	ldr	r3, [pc, #52]	@ (800862c <std+0x60>)
 80085f8:	62e3      	str	r3, [r4, #44]	@ 0x2c
 80085fa:	4b0d      	ldr	r3, [pc, #52]	@ (8008630 <std+0x64>)
 80085fc:	6323      	str	r3, [r4, #48]	@ 0x30
 80085fe:	4b0d      	ldr	r3, [pc, #52]	@ (8008634 <std+0x68>)
 8008600:	6224      	str	r4, [r4, #32]
 8008602:	429c      	cmp	r4, r3
 8008604:	d006      	beq.n	8008614 <std+0x48>
 8008606:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 800860a:	4294      	cmp	r4, r2
 800860c:	d002      	beq.n	8008614 <std+0x48>
 800860e:	33d0      	adds	r3, #208	@ 0xd0
 8008610:	429c      	cmp	r4, r3
 8008612:	d105      	bne.n	8008620 <std+0x54>
 8008614:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8008618:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800861c:	f000 baa2 	b.w	8008b64 <__retarget_lock_init_recursive>
 8008620:	bd10      	pop	{r4, pc}
 8008622:	bf00      	nop
 8008624:	08008899 	.word	0x08008899
 8008628:	080088bb 	.word	0x080088bb
 800862c:	080088f3 	.word	0x080088f3
 8008630:	08008917 	.word	0x08008917
 8008634:	2000054c 	.word	0x2000054c

08008638 <stdio_exit_handler>:
 8008638:	4a02      	ldr	r2, [pc, #8]	@ (8008644 <stdio_exit_handler+0xc>)
 800863a:	4903      	ldr	r1, [pc, #12]	@ (8008648 <stdio_exit_handler+0x10>)
 800863c:	4803      	ldr	r0, [pc, #12]	@ (800864c <stdio_exit_handler+0x14>)
 800863e:	f000 b869 	b.w	8008714 <_fwalk_sglue>
 8008642:	bf00      	nop
 8008644:	2000000c 	.word	0x2000000c
 8008648:	0800a749 	.word	0x0800a749
 800864c:	2000001c 	.word	0x2000001c

08008650 <cleanup_stdio>:
 8008650:	6841      	ldr	r1, [r0, #4]
 8008652:	4b0c      	ldr	r3, [pc, #48]	@ (8008684 <cleanup_stdio+0x34>)
 8008654:	4299      	cmp	r1, r3
 8008656:	b510      	push	{r4, lr}
 8008658:	4604      	mov	r4, r0
 800865a:	d001      	beq.n	8008660 <cleanup_stdio+0x10>
 800865c:	f002 f874 	bl	800a748 <_fflush_r>
 8008660:	68a1      	ldr	r1, [r4, #8]
 8008662:	4b09      	ldr	r3, [pc, #36]	@ (8008688 <cleanup_stdio+0x38>)
 8008664:	4299      	cmp	r1, r3
 8008666:	d002      	beq.n	800866e <cleanup_stdio+0x1e>
 8008668:	4620      	mov	r0, r4
 800866a:	f002 f86d 	bl	800a748 <_fflush_r>
 800866e:	68e1      	ldr	r1, [r4, #12]
 8008670:	4b06      	ldr	r3, [pc, #24]	@ (800868c <cleanup_stdio+0x3c>)
 8008672:	4299      	cmp	r1, r3
 8008674:	d004      	beq.n	8008680 <cleanup_stdio+0x30>
 8008676:	4620      	mov	r0, r4
 8008678:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800867c:	f002 b864 	b.w	800a748 <_fflush_r>
 8008680:	bd10      	pop	{r4, pc}
 8008682:	bf00      	nop
 8008684:	2000054c 	.word	0x2000054c
 8008688:	200005b4 	.word	0x200005b4
 800868c:	2000061c 	.word	0x2000061c

08008690 <global_stdio_init.part.0>:
 8008690:	b510      	push	{r4, lr}
 8008692:	4b0b      	ldr	r3, [pc, #44]	@ (80086c0 <global_stdio_init.part.0+0x30>)
 8008694:	4c0b      	ldr	r4, [pc, #44]	@ (80086c4 <global_stdio_init.part.0+0x34>)
 8008696:	4a0c      	ldr	r2, [pc, #48]	@ (80086c8 <global_stdio_init.part.0+0x38>)
 8008698:	601a      	str	r2, [r3, #0]
 800869a:	4620      	mov	r0, r4
 800869c:	2200      	movs	r2, #0
 800869e:	2104      	movs	r1, #4
 80086a0:	f7ff ff94 	bl	80085cc <std>
 80086a4:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 80086a8:	2201      	movs	r2, #1
 80086aa:	2109      	movs	r1, #9
 80086ac:	f7ff ff8e 	bl	80085cc <std>
 80086b0:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 80086b4:	2202      	movs	r2, #2
 80086b6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80086ba:	2112      	movs	r1, #18
 80086bc:	f7ff bf86 	b.w	80085cc <std>
 80086c0:	20000684 	.word	0x20000684
 80086c4:	2000054c 	.word	0x2000054c
 80086c8:	08008639 	.word	0x08008639

080086cc <__sfp_lock_acquire>:
 80086cc:	4801      	ldr	r0, [pc, #4]	@ (80086d4 <__sfp_lock_acquire+0x8>)
 80086ce:	f000 ba4a 	b.w	8008b66 <__retarget_lock_acquire_recursive>
 80086d2:	bf00      	nop
 80086d4:	2000068d 	.word	0x2000068d

080086d8 <__sfp_lock_release>:
 80086d8:	4801      	ldr	r0, [pc, #4]	@ (80086e0 <__sfp_lock_release+0x8>)
 80086da:	f000 ba45 	b.w	8008b68 <__retarget_lock_release_recursive>
 80086de:	bf00      	nop
 80086e0:	2000068d 	.word	0x2000068d

080086e4 <__sinit>:
 80086e4:	b510      	push	{r4, lr}
 80086e6:	4604      	mov	r4, r0
 80086e8:	f7ff fff0 	bl	80086cc <__sfp_lock_acquire>
 80086ec:	6a23      	ldr	r3, [r4, #32]
 80086ee:	b11b      	cbz	r3, 80086f8 <__sinit+0x14>
 80086f0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80086f4:	f7ff bff0 	b.w	80086d8 <__sfp_lock_release>
 80086f8:	4b04      	ldr	r3, [pc, #16]	@ (800870c <__sinit+0x28>)
 80086fa:	6223      	str	r3, [r4, #32]
 80086fc:	4b04      	ldr	r3, [pc, #16]	@ (8008710 <__sinit+0x2c>)
 80086fe:	681b      	ldr	r3, [r3, #0]
 8008700:	2b00      	cmp	r3, #0
 8008702:	d1f5      	bne.n	80086f0 <__sinit+0xc>
 8008704:	f7ff ffc4 	bl	8008690 <global_stdio_init.part.0>
 8008708:	e7f2      	b.n	80086f0 <__sinit+0xc>
 800870a:	bf00      	nop
 800870c:	08008651 	.word	0x08008651
 8008710:	20000684 	.word	0x20000684

08008714 <_fwalk_sglue>:
 8008714:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8008718:	4607      	mov	r7, r0
 800871a:	4688      	mov	r8, r1
 800871c:	4614      	mov	r4, r2
 800871e:	2600      	movs	r6, #0
 8008720:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8008724:	f1b9 0901 	subs.w	r9, r9, #1
 8008728:	d505      	bpl.n	8008736 <_fwalk_sglue+0x22>
 800872a:	6824      	ldr	r4, [r4, #0]
 800872c:	2c00      	cmp	r4, #0
 800872e:	d1f7      	bne.n	8008720 <_fwalk_sglue+0xc>
 8008730:	4630      	mov	r0, r6
 8008732:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8008736:	89ab      	ldrh	r3, [r5, #12]
 8008738:	2b01      	cmp	r3, #1
 800873a:	d907      	bls.n	800874c <_fwalk_sglue+0x38>
 800873c:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8008740:	3301      	adds	r3, #1
 8008742:	d003      	beq.n	800874c <_fwalk_sglue+0x38>
 8008744:	4629      	mov	r1, r5
 8008746:	4638      	mov	r0, r7
 8008748:	47c0      	blx	r8
 800874a:	4306      	orrs	r6, r0
 800874c:	3568      	adds	r5, #104	@ 0x68
 800874e:	e7e9      	b.n	8008724 <_fwalk_sglue+0x10>

08008750 <iprintf>:
 8008750:	b40f      	push	{r0, r1, r2, r3}
 8008752:	b507      	push	{r0, r1, r2, lr}
 8008754:	4906      	ldr	r1, [pc, #24]	@ (8008770 <iprintf+0x20>)
 8008756:	ab04      	add	r3, sp, #16
 8008758:	6808      	ldr	r0, [r1, #0]
 800875a:	f853 2b04 	ldr.w	r2, [r3], #4
 800875e:	6881      	ldr	r1, [r0, #8]
 8008760:	9301      	str	r3, [sp, #4]
 8008762:	f001 fe55 	bl	800a410 <_vfiprintf_r>
 8008766:	b003      	add	sp, #12
 8008768:	f85d eb04 	ldr.w	lr, [sp], #4
 800876c:	b004      	add	sp, #16
 800876e:	4770      	bx	lr
 8008770:	20000018 	.word	0x20000018

08008774 <_puts_r>:
 8008774:	6a03      	ldr	r3, [r0, #32]
 8008776:	b570      	push	{r4, r5, r6, lr}
 8008778:	6884      	ldr	r4, [r0, #8]
 800877a:	4605      	mov	r5, r0
 800877c:	460e      	mov	r6, r1
 800877e:	b90b      	cbnz	r3, 8008784 <_puts_r+0x10>
 8008780:	f7ff ffb0 	bl	80086e4 <__sinit>
 8008784:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8008786:	07db      	lsls	r3, r3, #31
 8008788:	d405      	bmi.n	8008796 <_puts_r+0x22>
 800878a:	89a3      	ldrh	r3, [r4, #12]
 800878c:	0598      	lsls	r0, r3, #22
 800878e:	d402      	bmi.n	8008796 <_puts_r+0x22>
 8008790:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8008792:	f000 f9e8 	bl	8008b66 <__retarget_lock_acquire_recursive>
 8008796:	89a3      	ldrh	r3, [r4, #12]
 8008798:	0719      	lsls	r1, r3, #28
 800879a:	d502      	bpl.n	80087a2 <_puts_r+0x2e>
 800879c:	6923      	ldr	r3, [r4, #16]
 800879e:	2b00      	cmp	r3, #0
 80087a0:	d135      	bne.n	800880e <_puts_r+0x9a>
 80087a2:	4621      	mov	r1, r4
 80087a4:	4628      	mov	r0, r5
 80087a6:	f000 f8f9 	bl	800899c <__swsetup_r>
 80087aa:	b380      	cbz	r0, 800880e <_puts_r+0x9a>
 80087ac:	f04f 35ff 	mov.w	r5, #4294967295
 80087b0:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 80087b2:	07da      	lsls	r2, r3, #31
 80087b4:	d405      	bmi.n	80087c2 <_puts_r+0x4e>
 80087b6:	89a3      	ldrh	r3, [r4, #12]
 80087b8:	059b      	lsls	r3, r3, #22
 80087ba:	d402      	bmi.n	80087c2 <_puts_r+0x4e>
 80087bc:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80087be:	f000 f9d3 	bl	8008b68 <__retarget_lock_release_recursive>
 80087c2:	4628      	mov	r0, r5
 80087c4:	bd70      	pop	{r4, r5, r6, pc}
 80087c6:	2b00      	cmp	r3, #0
 80087c8:	da04      	bge.n	80087d4 <_puts_r+0x60>
 80087ca:	69a2      	ldr	r2, [r4, #24]
 80087cc:	429a      	cmp	r2, r3
 80087ce:	dc17      	bgt.n	8008800 <_puts_r+0x8c>
 80087d0:	290a      	cmp	r1, #10
 80087d2:	d015      	beq.n	8008800 <_puts_r+0x8c>
 80087d4:	6823      	ldr	r3, [r4, #0]
 80087d6:	1c5a      	adds	r2, r3, #1
 80087d8:	6022      	str	r2, [r4, #0]
 80087da:	7019      	strb	r1, [r3, #0]
 80087dc:	68a3      	ldr	r3, [r4, #8]
 80087de:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 80087e2:	3b01      	subs	r3, #1
 80087e4:	60a3      	str	r3, [r4, #8]
 80087e6:	2900      	cmp	r1, #0
 80087e8:	d1ed      	bne.n	80087c6 <_puts_r+0x52>
 80087ea:	2b00      	cmp	r3, #0
 80087ec:	da11      	bge.n	8008812 <_puts_r+0x9e>
 80087ee:	4622      	mov	r2, r4
 80087f0:	210a      	movs	r1, #10
 80087f2:	4628      	mov	r0, r5
 80087f4:	f000 f893 	bl	800891e <__swbuf_r>
 80087f8:	3001      	adds	r0, #1
 80087fa:	d0d7      	beq.n	80087ac <_puts_r+0x38>
 80087fc:	250a      	movs	r5, #10
 80087fe:	e7d7      	b.n	80087b0 <_puts_r+0x3c>
 8008800:	4622      	mov	r2, r4
 8008802:	4628      	mov	r0, r5
 8008804:	f000 f88b 	bl	800891e <__swbuf_r>
 8008808:	3001      	adds	r0, #1
 800880a:	d1e7      	bne.n	80087dc <_puts_r+0x68>
 800880c:	e7ce      	b.n	80087ac <_puts_r+0x38>
 800880e:	3e01      	subs	r6, #1
 8008810:	e7e4      	b.n	80087dc <_puts_r+0x68>
 8008812:	6823      	ldr	r3, [r4, #0]
 8008814:	1c5a      	adds	r2, r3, #1
 8008816:	6022      	str	r2, [r4, #0]
 8008818:	220a      	movs	r2, #10
 800881a:	701a      	strb	r2, [r3, #0]
 800881c:	e7ee      	b.n	80087fc <_puts_r+0x88>
	...

08008820 <puts>:
 8008820:	4b02      	ldr	r3, [pc, #8]	@ (800882c <puts+0xc>)
 8008822:	4601      	mov	r1, r0
 8008824:	6818      	ldr	r0, [r3, #0]
 8008826:	f7ff bfa5 	b.w	8008774 <_puts_r>
 800882a:	bf00      	nop
 800882c:	20000018 	.word	0x20000018

08008830 <sniprintf>:
 8008830:	b40c      	push	{r2, r3}
 8008832:	b530      	push	{r4, r5, lr}
 8008834:	4b17      	ldr	r3, [pc, #92]	@ (8008894 <sniprintf+0x64>)
 8008836:	1e0c      	subs	r4, r1, #0
 8008838:	681d      	ldr	r5, [r3, #0]
 800883a:	b09d      	sub	sp, #116	@ 0x74
 800883c:	da08      	bge.n	8008850 <sniprintf+0x20>
 800883e:	238b      	movs	r3, #139	@ 0x8b
 8008840:	602b      	str	r3, [r5, #0]
 8008842:	f04f 30ff 	mov.w	r0, #4294967295
 8008846:	b01d      	add	sp, #116	@ 0x74
 8008848:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800884c:	b002      	add	sp, #8
 800884e:	4770      	bx	lr
 8008850:	f44f 7302 	mov.w	r3, #520	@ 0x208
 8008854:	f8ad 3014 	strh.w	r3, [sp, #20]
 8008858:	bf14      	ite	ne
 800885a:	f104 33ff 	addne.w	r3, r4, #4294967295
 800885e:	4623      	moveq	r3, r4
 8008860:	9304      	str	r3, [sp, #16]
 8008862:	9307      	str	r3, [sp, #28]
 8008864:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8008868:	9002      	str	r0, [sp, #8]
 800886a:	9006      	str	r0, [sp, #24]
 800886c:	f8ad 3016 	strh.w	r3, [sp, #22]
 8008870:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 8008872:	ab21      	add	r3, sp, #132	@ 0x84
 8008874:	a902      	add	r1, sp, #8
 8008876:	4628      	mov	r0, r5
 8008878:	9301      	str	r3, [sp, #4]
 800887a:	f001 fca3 	bl	800a1c4 <_svfiprintf_r>
 800887e:	1c43      	adds	r3, r0, #1
 8008880:	bfbc      	itt	lt
 8008882:	238b      	movlt	r3, #139	@ 0x8b
 8008884:	602b      	strlt	r3, [r5, #0]
 8008886:	2c00      	cmp	r4, #0
 8008888:	d0dd      	beq.n	8008846 <sniprintf+0x16>
 800888a:	9b02      	ldr	r3, [sp, #8]
 800888c:	2200      	movs	r2, #0
 800888e:	701a      	strb	r2, [r3, #0]
 8008890:	e7d9      	b.n	8008846 <sniprintf+0x16>
 8008892:	bf00      	nop
 8008894:	20000018 	.word	0x20000018

08008898 <__sread>:
 8008898:	b510      	push	{r4, lr}
 800889a:	460c      	mov	r4, r1
 800889c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80088a0:	f000 f912 	bl	8008ac8 <_read_r>
 80088a4:	2800      	cmp	r0, #0
 80088a6:	bfab      	itete	ge
 80088a8:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 80088aa:	89a3      	ldrhlt	r3, [r4, #12]
 80088ac:	181b      	addge	r3, r3, r0
 80088ae:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 80088b2:	bfac      	ite	ge
 80088b4:	6563      	strge	r3, [r4, #84]	@ 0x54
 80088b6:	81a3      	strhlt	r3, [r4, #12]
 80088b8:	bd10      	pop	{r4, pc}

080088ba <__swrite>:
 80088ba:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80088be:	461f      	mov	r7, r3
 80088c0:	898b      	ldrh	r3, [r1, #12]
 80088c2:	05db      	lsls	r3, r3, #23
 80088c4:	4605      	mov	r5, r0
 80088c6:	460c      	mov	r4, r1
 80088c8:	4616      	mov	r6, r2
 80088ca:	d505      	bpl.n	80088d8 <__swrite+0x1e>
 80088cc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80088d0:	2302      	movs	r3, #2
 80088d2:	2200      	movs	r2, #0
 80088d4:	f000 f8e6 	bl	8008aa4 <_lseek_r>
 80088d8:	89a3      	ldrh	r3, [r4, #12]
 80088da:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80088de:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 80088e2:	81a3      	strh	r3, [r4, #12]
 80088e4:	4632      	mov	r2, r6
 80088e6:	463b      	mov	r3, r7
 80088e8:	4628      	mov	r0, r5
 80088ea:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80088ee:	f000 b8fd 	b.w	8008aec <_write_r>

080088f2 <__sseek>:
 80088f2:	b510      	push	{r4, lr}
 80088f4:	460c      	mov	r4, r1
 80088f6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80088fa:	f000 f8d3 	bl	8008aa4 <_lseek_r>
 80088fe:	1c43      	adds	r3, r0, #1
 8008900:	89a3      	ldrh	r3, [r4, #12]
 8008902:	bf15      	itete	ne
 8008904:	6560      	strne	r0, [r4, #84]	@ 0x54
 8008906:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 800890a:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 800890e:	81a3      	strheq	r3, [r4, #12]
 8008910:	bf18      	it	ne
 8008912:	81a3      	strhne	r3, [r4, #12]
 8008914:	bd10      	pop	{r4, pc}

08008916 <__sclose>:
 8008916:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800891a:	f000 b8b3 	b.w	8008a84 <_close_r>

0800891e <__swbuf_r>:
 800891e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008920:	460e      	mov	r6, r1
 8008922:	4614      	mov	r4, r2
 8008924:	4605      	mov	r5, r0
 8008926:	b118      	cbz	r0, 8008930 <__swbuf_r+0x12>
 8008928:	6a03      	ldr	r3, [r0, #32]
 800892a:	b90b      	cbnz	r3, 8008930 <__swbuf_r+0x12>
 800892c:	f7ff feda 	bl	80086e4 <__sinit>
 8008930:	69a3      	ldr	r3, [r4, #24]
 8008932:	60a3      	str	r3, [r4, #8]
 8008934:	89a3      	ldrh	r3, [r4, #12]
 8008936:	071a      	lsls	r2, r3, #28
 8008938:	d501      	bpl.n	800893e <__swbuf_r+0x20>
 800893a:	6923      	ldr	r3, [r4, #16]
 800893c:	b943      	cbnz	r3, 8008950 <__swbuf_r+0x32>
 800893e:	4621      	mov	r1, r4
 8008940:	4628      	mov	r0, r5
 8008942:	f000 f82b 	bl	800899c <__swsetup_r>
 8008946:	b118      	cbz	r0, 8008950 <__swbuf_r+0x32>
 8008948:	f04f 37ff 	mov.w	r7, #4294967295
 800894c:	4638      	mov	r0, r7
 800894e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8008950:	6823      	ldr	r3, [r4, #0]
 8008952:	6922      	ldr	r2, [r4, #16]
 8008954:	1a98      	subs	r0, r3, r2
 8008956:	6963      	ldr	r3, [r4, #20]
 8008958:	b2f6      	uxtb	r6, r6
 800895a:	4283      	cmp	r3, r0
 800895c:	4637      	mov	r7, r6
 800895e:	dc05      	bgt.n	800896c <__swbuf_r+0x4e>
 8008960:	4621      	mov	r1, r4
 8008962:	4628      	mov	r0, r5
 8008964:	f001 fef0 	bl	800a748 <_fflush_r>
 8008968:	2800      	cmp	r0, #0
 800896a:	d1ed      	bne.n	8008948 <__swbuf_r+0x2a>
 800896c:	68a3      	ldr	r3, [r4, #8]
 800896e:	3b01      	subs	r3, #1
 8008970:	60a3      	str	r3, [r4, #8]
 8008972:	6823      	ldr	r3, [r4, #0]
 8008974:	1c5a      	adds	r2, r3, #1
 8008976:	6022      	str	r2, [r4, #0]
 8008978:	701e      	strb	r6, [r3, #0]
 800897a:	6962      	ldr	r2, [r4, #20]
 800897c:	1c43      	adds	r3, r0, #1
 800897e:	429a      	cmp	r2, r3
 8008980:	d004      	beq.n	800898c <__swbuf_r+0x6e>
 8008982:	89a3      	ldrh	r3, [r4, #12]
 8008984:	07db      	lsls	r3, r3, #31
 8008986:	d5e1      	bpl.n	800894c <__swbuf_r+0x2e>
 8008988:	2e0a      	cmp	r6, #10
 800898a:	d1df      	bne.n	800894c <__swbuf_r+0x2e>
 800898c:	4621      	mov	r1, r4
 800898e:	4628      	mov	r0, r5
 8008990:	f001 feda 	bl	800a748 <_fflush_r>
 8008994:	2800      	cmp	r0, #0
 8008996:	d0d9      	beq.n	800894c <__swbuf_r+0x2e>
 8008998:	e7d6      	b.n	8008948 <__swbuf_r+0x2a>
	...

0800899c <__swsetup_r>:
 800899c:	b538      	push	{r3, r4, r5, lr}
 800899e:	4b29      	ldr	r3, [pc, #164]	@ (8008a44 <__swsetup_r+0xa8>)
 80089a0:	4605      	mov	r5, r0
 80089a2:	6818      	ldr	r0, [r3, #0]
 80089a4:	460c      	mov	r4, r1
 80089a6:	b118      	cbz	r0, 80089b0 <__swsetup_r+0x14>
 80089a8:	6a03      	ldr	r3, [r0, #32]
 80089aa:	b90b      	cbnz	r3, 80089b0 <__swsetup_r+0x14>
 80089ac:	f7ff fe9a 	bl	80086e4 <__sinit>
 80089b0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80089b4:	0719      	lsls	r1, r3, #28
 80089b6:	d422      	bmi.n	80089fe <__swsetup_r+0x62>
 80089b8:	06da      	lsls	r2, r3, #27
 80089ba:	d407      	bmi.n	80089cc <__swsetup_r+0x30>
 80089bc:	2209      	movs	r2, #9
 80089be:	602a      	str	r2, [r5, #0]
 80089c0:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80089c4:	81a3      	strh	r3, [r4, #12]
 80089c6:	f04f 30ff 	mov.w	r0, #4294967295
 80089ca:	e033      	b.n	8008a34 <__swsetup_r+0x98>
 80089cc:	0758      	lsls	r0, r3, #29
 80089ce:	d512      	bpl.n	80089f6 <__swsetup_r+0x5a>
 80089d0:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 80089d2:	b141      	cbz	r1, 80089e6 <__swsetup_r+0x4a>
 80089d4:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 80089d8:	4299      	cmp	r1, r3
 80089da:	d002      	beq.n	80089e2 <__swsetup_r+0x46>
 80089dc:	4628      	mov	r0, r5
 80089de:	f000 ff13 	bl	8009808 <_free_r>
 80089e2:	2300      	movs	r3, #0
 80089e4:	6363      	str	r3, [r4, #52]	@ 0x34
 80089e6:	89a3      	ldrh	r3, [r4, #12]
 80089e8:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 80089ec:	81a3      	strh	r3, [r4, #12]
 80089ee:	2300      	movs	r3, #0
 80089f0:	6063      	str	r3, [r4, #4]
 80089f2:	6923      	ldr	r3, [r4, #16]
 80089f4:	6023      	str	r3, [r4, #0]
 80089f6:	89a3      	ldrh	r3, [r4, #12]
 80089f8:	f043 0308 	orr.w	r3, r3, #8
 80089fc:	81a3      	strh	r3, [r4, #12]
 80089fe:	6923      	ldr	r3, [r4, #16]
 8008a00:	b94b      	cbnz	r3, 8008a16 <__swsetup_r+0x7a>
 8008a02:	89a3      	ldrh	r3, [r4, #12]
 8008a04:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 8008a08:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8008a0c:	d003      	beq.n	8008a16 <__swsetup_r+0x7a>
 8008a0e:	4621      	mov	r1, r4
 8008a10:	4628      	mov	r0, r5
 8008a12:	f001 fee7 	bl	800a7e4 <__smakebuf_r>
 8008a16:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8008a1a:	f013 0201 	ands.w	r2, r3, #1
 8008a1e:	d00a      	beq.n	8008a36 <__swsetup_r+0x9a>
 8008a20:	2200      	movs	r2, #0
 8008a22:	60a2      	str	r2, [r4, #8]
 8008a24:	6962      	ldr	r2, [r4, #20]
 8008a26:	4252      	negs	r2, r2
 8008a28:	61a2      	str	r2, [r4, #24]
 8008a2a:	6922      	ldr	r2, [r4, #16]
 8008a2c:	b942      	cbnz	r2, 8008a40 <__swsetup_r+0xa4>
 8008a2e:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 8008a32:	d1c5      	bne.n	80089c0 <__swsetup_r+0x24>
 8008a34:	bd38      	pop	{r3, r4, r5, pc}
 8008a36:	0799      	lsls	r1, r3, #30
 8008a38:	bf58      	it	pl
 8008a3a:	6962      	ldrpl	r2, [r4, #20]
 8008a3c:	60a2      	str	r2, [r4, #8]
 8008a3e:	e7f4      	b.n	8008a2a <__swsetup_r+0x8e>
 8008a40:	2000      	movs	r0, #0
 8008a42:	e7f7      	b.n	8008a34 <__swsetup_r+0x98>
 8008a44:	20000018 	.word	0x20000018

08008a48 <memset>:
 8008a48:	4402      	add	r2, r0
 8008a4a:	4603      	mov	r3, r0
 8008a4c:	4293      	cmp	r3, r2
 8008a4e:	d100      	bne.n	8008a52 <memset+0xa>
 8008a50:	4770      	bx	lr
 8008a52:	f803 1b01 	strb.w	r1, [r3], #1
 8008a56:	e7f9      	b.n	8008a4c <memset+0x4>

08008a58 <strncmp>:
 8008a58:	b510      	push	{r4, lr}
 8008a5a:	b16a      	cbz	r2, 8008a78 <strncmp+0x20>
 8008a5c:	3901      	subs	r1, #1
 8008a5e:	1884      	adds	r4, r0, r2
 8008a60:	f810 2b01 	ldrb.w	r2, [r0], #1
 8008a64:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 8008a68:	429a      	cmp	r2, r3
 8008a6a:	d103      	bne.n	8008a74 <strncmp+0x1c>
 8008a6c:	42a0      	cmp	r0, r4
 8008a6e:	d001      	beq.n	8008a74 <strncmp+0x1c>
 8008a70:	2a00      	cmp	r2, #0
 8008a72:	d1f5      	bne.n	8008a60 <strncmp+0x8>
 8008a74:	1ad0      	subs	r0, r2, r3
 8008a76:	bd10      	pop	{r4, pc}
 8008a78:	4610      	mov	r0, r2
 8008a7a:	e7fc      	b.n	8008a76 <strncmp+0x1e>

08008a7c <_localeconv_r>:
 8008a7c:	4800      	ldr	r0, [pc, #0]	@ (8008a80 <_localeconv_r+0x4>)
 8008a7e:	4770      	bx	lr
 8008a80:	20000158 	.word	0x20000158

08008a84 <_close_r>:
 8008a84:	b538      	push	{r3, r4, r5, lr}
 8008a86:	4d06      	ldr	r5, [pc, #24]	@ (8008aa0 <_close_r+0x1c>)
 8008a88:	2300      	movs	r3, #0
 8008a8a:	4604      	mov	r4, r0
 8008a8c:	4608      	mov	r0, r1
 8008a8e:	602b      	str	r3, [r5, #0]
 8008a90:	f7f9 fe9e 	bl	80027d0 <_close>
 8008a94:	1c43      	adds	r3, r0, #1
 8008a96:	d102      	bne.n	8008a9e <_close_r+0x1a>
 8008a98:	682b      	ldr	r3, [r5, #0]
 8008a9a:	b103      	cbz	r3, 8008a9e <_close_r+0x1a>
 8008a9c:	6023      	str	r3, [r4, #0]
 8008a9e:	bd38      	pop	{r3, r4, r5, pc}
 8008aa0:	20000688 	.word	0x20000688

08008aa4 <_lseek_r>:
 8008aa4:	b538      	push	{r3, r4, r5, lr}
 8008aa6:	4d07      	ldr	r5, [pc, #28]	@ (8008ac4 <_lseek_r+0x20>)
 8008aa8:	4604      	mov	r4, r0
 8008aaa:	4608      	mov	r0, r1
 8008aac:	4611      	mov	r1, r2
 8008aae:	2200      	movs	r2, #0
 8008ab0:	602a      	str	r2, [r5, #0]
 8008ab2:	461a      	mov	r2, r3
 8008ab4:	f7f9 feb3 	bl	800281e <_lseek>
 8008ab8:	1c43      	adds	r3, r0, #1
 8008aba:	d102      	bne.n	8008ac2 <_lseek_r+0x1e>
 8008abc:	682b      	ldr	r3, [r5, #0]
 8008abe:	b103      	cbz	r3, 8008ac2 <_lseek_r+0x1e>
 8008ac0:	6023      	str	r3, [r4, #0]
 8008ac2:	bd38      	pop	{r3, r4, r5, pc}
 8008ac4:	20000688 	.word	0x20000688

08008ac8 <_read_r>:
 8008ac8:	b538      	push	{r3, r4, r5, lr}
 8008aca:	4d07      	ldr	r5, [pc, #28]	@ (8008ae8 <_read_r+0x20>)
 8008acc:	4604      	mov	r4, r0
 8008ace:	4608      	mov	r0, r1
 8008ad0:	4611      	mov	r1, r2
 8008ad2:	2200      	movs	r2, #0
 8008ad4:	602a      	str	r2, [r5, #0]
 8008ad6:	461a      	mov	r2, r3
 8008ad8:	f7f9 fe5d 	bl	8002796 <_read>
 8008adc:	1c43      	adds	r3, r0, #1
 8008ade:	d102      	bne.n	8008ae6 <_read_r+0x1e>
 8008ae0:	682b      	ldr	r3, [r5, #0]
 8008ae2:	b103      	cbz	r3, 8008ae6 <_read_r+0x1e>
 8008ae4:	6023      	str	r3, [r4, #0]
 8008ae6:	bd38      	pop	{r3, r4, r5, pc}
 8008ae8:	20000688 	.word	0x20000688

08008aec <_write_r>:
 8008aec:	b538      	push	{r3, r4, r5, lr}
 8008aee:	4d07      	ldr	r5, [pc, #28]	@ (8008b0c <_write_r+0x20>)
 8008af0:	4604      	mov	r4, r0
 8008af2:	4608      	mov	r0, r1
 8008af4:	4611      	mov	r1, r2
 8008af6:	2200      	movs	r2, #0
 8008af8:	602a      	str	r2, [r5, #0]
 8008afa:	461a      	mov	r2, r3
 8008afc:	f7f9 fba0 	bl	8002240 <_write>
 8008b00:	1c43      	adds	r3, r0, #1
 8008b02:	d102      	bne.n	8008b0a <_write_r+0x1e>
 8008b04:	682b      	ldr	r3, [r5, #0]
 8008b06:	b103      	cbz	r3, 8008b0a <_write_r+0x1e>
 8008b08:	6023      	str	r3, [r4, #0]
 8008b0a:	bd38      	pop	{r3, r4, r5, pc}
 8008b0c:	20000688 	.word	0x20000688

08008b10 <__errno>:
 8008b10:	4b01      	ldr	r3, [pc, #4]	@ (8008b18 <__errno+0x8>)
 8008b12:	6818      	ldr	r0, [r3, #0]
 8008b14:	4770      	bx	lr
 8008b16:	bf00      	nop
 8008b18:	20000018 	.word	0x20000018

08008b1c <__libc_init_array>:
 8008b1c:	b570      	push	{r4, r5, r6, lr}
 8008b1e:	4d0d      	ldr	r5, [pc, #52]	@ (8008b54 <__libc_init_array+0x38>)
 8008b20:	4c0d      	ldr	r4, [pc, #52]	@ (8008b58 <__libc_init_array+0x3c>)
 8008b22:	1b64      	subs	r4, r4, r5
 8008b24:	10a4      	asrs	r4, r4, #2
 8008b26:	2600      	movs	r6, #0
 8008b28:	42a6      	cmp	r6, r4
 8008b2a:	d109      	bne.n	8008b40 <__libc_init_array+0x24>
 8008b2c:	4d0b      	ldr	r5, [pc, #44]	@ (8008b5c <__libc_init_array+0x40>)
 8008b2e:	4c0c      	ldr	r4, [pc, #48]	@ (8008b60 <__libc_init_array+0x44>)
 8008b30:	f001 ffd4 	bl	800aadc <_init>
 8008b34:	1b64      	subs	r4, r4, r5
 8008b36:	10a4      	asrs	r4, r4, #2
 8008b38:	2600      	movs	r6, #0
 8008b3a:	42a6      	cmp	r6, r4
 8008b3c:	d105      	bne.n	8008b4a <__libc_init_array+0x2e>
 8008b3e:	bd70      	pop	{r4, r5, r6, pc}
 8008b40:	f855 3b04 	ldr.w	r3, [r5], #4
 8008b44:	4798      	blx	r3
 8008b46:	3601      	adds	r6, #1
 8008b48:	e7ee      	b.n	8008b28 <__libc_init_array+0xc>
 8008b4a:	f855 3b04 	ldr.w	r3, [r5], #4
 8008b4e:	4798      	blx	r3
 8008b50:	3601      	adds	r6, #1
 8008b52:	e7f2      	b.n	8008b3a <__libc_init_array+0x1e>
 8008b54:	0800b0e0 	.word	0x0800b0e0
 8008b58:	0800b0e0 	.word	0x0800b0e0
 8008b5c:	0800b0e0 	.word	0x0800b0e0
 8008b60:	0800b0e4 	.word	0x0800b0e4

08008b64 <__retarget_lock_init_recursive>:
 8008b64:	4770      	bx	lr

08008b66 <__retarget_lock_acquire_recursive>:
 8008b66:	4770      	bx	lr

08008b68 <__retarget_lock_release_recursive>:
 8008b68:	4770      	bx	lr

08008b6a <quorem>:
 8008b6a:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008b6e:	6903      	ldr	r3, [r0, #16]
 8008b70:	690c      	ldr	r4, [r1, #16]
 8008b72:	42a3      	cmp	r3, r4
 8008b74:	4607      	mov	r7, r0
 8008b76:	db7e      	blt.n	8008c76 <quorem+0x10c>
 8008b78:	3c01      	subs	r4, #1
 8008b7a:	f101 0814 	add.w	r8, r1, #20
 8008b7e:	00a3      	lsls	r3, r4, #2
 8008b80:	f100 0514 	add.w	r5, r0, #20
 8008b84:	9300      	str	r3, [sp, #0]
 8008b86:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8008b8a:	9301      	str	r3, [sp, #4]
 8008b8c:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 8008b90:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8008b94:	3301      	adds	r3, #1
 8008b96:	429a      	cmp	r2, r3
 8008b98:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 8008b9c:	fbb2 f6f3 	udiv	r6, r2, r3
 8008ba0:	d32e      	bcc.n	8008c00 <quorem+0x96>
 8008ba2:	f04f 0a00 	mov.w	sl, #0
 8008ba6:	46c4      	mov	ip, r8
 8008ba8:	46ae      	mov	lr, r5
 8008baa:	46d3      	mov	fp, sl
 8008bac:	f85c 3b04 	ldr.w	r3, [ip], #4
 8008bb0:	b298      	uxth	r0, r3
 8008bb2:	fb06 a000 	mla	r0, r6, r0, sl
 8008bb6:	0c02      	lsrs	r2, r0, #16
 8008bb8:	0c1b      	lsrs	r3, r3, #16
 8008bba:	fb06 2303 	mla	r3, r6, r3, r2
 8008bbe:	f8de 2000 	ldr.w	r2, [lr]
 8008bc2:	b280      	uxth	r0, r0
 8008bc4:	b292      	uxth	r2, r2
 8008bc6:	1a12      	subs	r2, r2, r0
 8008bc8:	445a      	add	r2, fp
 8008bca:	f8de 0000 	ldr.w	r0, [lr]
 8008bce:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8008bd2:	b29b      	uxth	r3, r3
 8008bd4:	ebc3 4322 	rsb	r3, r3, r2, asr #16
 8008bd8:	eb03 4310 	add.w	r3, r3, r0, lsr #16
 8008bdc:	b292      	uxth	r2, r2
 8008bde:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
 8008be2:	45e1      	cmp	r9, ip
 8008be4:	f84e 2b04 	str.w	r2, [lr], #4
 8008be8:	ea4f 4b23 	mov.w	fp, r3, asr #16
 8008bec:	d2de      	bcs.n	8008bac <quorem+0x42>
 8008bee:	9b00      	ldr	r3, [sp, #0]
 8008bf0:	58eb      	ldr	r3, [r5, r3]
 8008bf2:	b92b      	cbnz	r3, 8008c00 <quorem+0x96>
 8008bf4:	9b01      	ldr	r3, [sp, #4]
 8008bf6:	3b04      	subs	r3, #4
 8008bf8:	429d      	cmp	r5, r3
 8008bfa:	461a      	mov	r2, r3
 8008bfc:	d32f      	bcc.n	8008c5e <quorem+0xf4>
 8008bfe:	613c      	str	r4, [r7, #16]
 8008c00:	4638      	mov	r0, r7
 8008c02:	f001 f97b 	bl	8009efc <__mcmp>
 8008c06:	2800      	cmp	r0, #0
 8008c08:	db25      	blt.n	8008c56 <quorem+0xec>
 8008c0a:	4629      	mov	r1, r5
 8008c0c:	2000      	movs	r0, #0
 8008c0e:	f858 2b04 	ldr.w	r2, [r8], #4
 8008c12:	f8d1 c000 	ldr.w	ip, [r1]
 8008c16:	fa1f fe82 	uxth.w	lr, r2
 8008c1a:	fa1f f38c 	uxth.w	r3, ip
 8008c1e:	eba3 030e 	sub.w	r3, r3, lr
 8008c22:	4403      	add	r3, r0
 8008c24:	0c12      	lsrs	r2, r2, #16
 8008c26:	ebc2 4223 	rsb	r2, r2, r3, asr #16
 8008c2a:	eb02 421c 	add.w	r2, r2, ip, lsr #16
 8008c2e:	b29b      	uxth	r3, r3
 8008c30:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8008c34:	45c1      	cmp	r9, r8
 8008c36:	f841 3b04 	str.w	r3, [r1], #4
 8008c3a:	ea4f 4022 	mov.w	r0, r2, asr #16
 8008c3e:	d2e6      	bcs.n	8008c0e <quorem+0xa4>
 8008c40:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8008c44:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8008c48:	b922      	cbnz	r2, 8008c54 <quorem+0xea>
 8008c4a:	3b04      	subs	r3, #4
 8008c4c:	429d      	cmp	r5, r3
 8008c4e:	461a      	mov	r2, r3
 8008c50:	d30b      	bcc.n	8008c6a <quorem+0x100>
 8008c52:	613c      	str	r4, [r7, #16]
 8008c54:	3601      	adds	r6, #1
 8008c56:	4630      	mov	r0, r6
 8008c58:	b003      	add	sp, #12
 8008c5a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008c5e:	6812      	ldr	r2, [r2, #0]
 8008c60:	3b04      	subs	r3, #4
 8008c62:	2a00      	cmp	r2, #0
 8008c64:	d1cb      	bne.n	8008bfe <quorem+0x94>
 8008c66:	3c01      	subs	r4, #1
 8008c68:	e7c6      	b.n	8008bf8 <quorem+0x8e>
 8008c6a:	6812      	ldr	r2, [r2, #0]
 8008c6c:	3b04      	subs	r3, #4
 8008c6e:	2a00      	cmp	r2, #0
 8008c70:	d1ef      	bne.n	8008c52 <quorem+0xe8>
 8008c72:	3c01      	subs	r4, #1
 8008c74:	e7ea      	b.n	8008c4c <quorem+0xe2>
 8008c76:	2000      	movs	r0, #0
 8008c78:	e7ee      	b.n	8008c58 <quorem+0xee>
 8008c7a:	0000      	movs	r0, r0
 8008c7c:	0000      	movs	r0, r0
	...

08008c80 <_dtoa_r>:
 8008c80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008c84:	69c7      	ldr	r7, [r0, #28]
 8008c86:	b099      	sub	sp, #100	@ 0x64
 8008c88:	ed8d 0b02 	vstr	d0, [sp, #8]
 8008c8c:	ec55 4b10 	vmov	r4, r5, d0
 8008c90:	9e22      	ldr	r6, [sp, #136]	@ 0x88
 8008c92:	9109      	str	r1, [sp, #36]	@ 0x24
 8008c94:	4683      	mov	fp, r0
 8008c96:	920e      	str	r2, [sp, #56]	@ 0x38
 8008c98:	9313      	str	r3, [sp, #76]	@ 0x4c
 8008c9a:	b97f      	cbnz	r7, 8008cbc <_dtoa_r+0x3c>
 8008c9c:	2010      	movs	r0, #16
 8008c9e:	f000 fdfd 	bl	800989c <malloc>
 8008ca2:	4602      	mov	r2, r0
 8008ca4:	f8cb 001c 	str.w	r0, [fp, #28]
 8008ca8:	b920      	cbnz	r0, 8008cb4 <_dtoa_r+0x34>
 8008caa:	4ba7      	ldr	r3, [pc, #668]	@ (8008f48 <_dtoa_r+0x2c8>)
 8008cac:	21ef      	movs	r1, #239	@ 0xef
 8008cae:	48a7      	ldr	r0, [pc, #668]	@ (8008f4c <_dtoa_r+0x2cc>)
 8008cb0:	f001 fe2e 	bl	800a910 <__assert_func>
 8008cb4:	e9c0 7701 	strd	r7, r7, [r0, #4]
 8008cb8:	6007      	str	r7, [r0, #0]
 8008cba:	60c7      	str	r7, [r0, #12]
 8008cbc:	f8db 301c 	ldr.w	r3, [fp, #28]
 8008cc0:	6819      	ldr	r1, [r3, #0]
 8008cc2:	b159      	cbz	r1, 8008cdc <_dtoa_r+0x5c>
 8008cc4:	685a      	ldr	r2, [r3, #4]
 8008cc6:	604a      	str	r2, [r1, #4]
 8008cc8:	2301      	movs	r3, #1
 8008cca:	4093      	lsls	r3, r2
 8008ccc:	608b      	str	r3, [r1, #8]
 8008cce:	4658      	mov	r0, fp
 8008cd0:	f000 feda 	bl	8009a88 <_Bfree>
 8008cd4:	f8db 301c 	ldr.w	r3, [fp, #28]
 8008cd8:	2200      	movs	r2, #0
 8008cda:	601a      	str	r2, [r3, #0]
 8008cdc:	1e2b      	subs	r3, r5, #0
 8008cde:	bfb9      	ittee	lt
 8008ce0:	f023 4300 	biclt.w	r3, r3, #2147483648	@ 0x80000000
 8008ce4:	9303      	strlt	r3, [sp, #12]
 8008ce6:	2300      	movge	r3, #0
 8008ce8:	6033      	strge	r3, [r6, #0]
 8008cea:	9f03      	ldr	r7, [sp, #12]
 8008cec:	4b98      	ldr	r3, [pc, #608]	@ (8008f50 <_dtoa_r+0x2d0>)
 8008cee:	bfbc      	itt	lt
 8008cf0:	2201      	movlt	r2, #1
 8008cf2:	6032      	strlt	r2, [r6, #0]
 8008cf4:	43bb      	bics	r3, r7
 8008cf6:	d112      	bne.n	8008d1e <_dtoa_r+0x9e>
 8008cf8:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8008cfa:	f242 730f 	movw	r3, #9999	@ 0x270f
 8008cfe:	6013      	str	r3, [r2, #0]
 8008d00:	f3c7 0313 	ubfx	r3, r7, #0, #20
 8008d04:	4323      	orrs	r3, r4
 8008d06:	f000 854d 	beq.w	80097a4 <_dtoa_r+0xb24>
 8008d0a:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8008d0c:	f8df a254 	ldr.w	sl, [pc, #596]	@ 8008f64 <_dtoa_r+0x2e4>
 8008d10:	2b00      	cmp	r3, #0
 8008d12:	f000 854f 	beq.w	80097b4 <_dtoa_r+0xb34>
 8008d16:	f10a 0303 	add.w	r3, sl, #3
 8008d1a:	f000 bd49 	b.w	80097b0 <_dtoa_r+0xb30>
 8008d1e:	ed9d 7b02 	vldr	d7, [sp, #8]
 8008d22:	2200      	movs	r2, #0
 8008d24:	ec51 0b17 	vmov	r0, r1, d7
 8008d28:	2300      	movs	r3, #0
 8008d2a:	ed8d 7b0c 	vstr	d7, [sp, #48]	@ 0x30
 8008d2e:	f7f7 fecb 	bl	8000ac8 <__aeabi_dcmpeq>
 8008d32:	4680      	mov	r8, r0
 8008d34:	b158      	cbz	r0, 8008d4e <_dtoa_r+0xce>
 8008d36:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8008d38:	2301      	movs	r3, #1
 8008d3a:	6013      	str	r3, [r2, #0]
 8008d3c:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8008d3e:	b113      	cbz	r3, 8008d46 <_dtoa_r+0xc6>
 8008d40:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 8008d42:	4b84      	ldr	r3, [pc, #528]	@ (8008f54 <_dtoa_r+0x2d4>)
 8008d44:	6013      	str	r3, [r2, #0]
 8008d46:	f8df a220 	ldr.w	sl, [pc, #544]	@ 8008f68 <_dtoa_r+0x2e8>
 8008d4a:	f000 bd33 	b.w	80097b4 <_dtoa_r+0xb34>
 8008d4e:	ed9d 0b0c 	vldr	d0, [sp, #48]	@ 0x30
 8008d52:	aa16      	add	r2, sp, #88	@ 0x58
 8008d54:	a917      	add	r1, sp, #92	@ 0x5c
 8008d56:	4658      	mov	r0, fp
 8008d58:	f001 f980 	bl	800a05c <__d2b>
 8008d5c:	f3c7 560a 	ubfx	r6, r7, #20, #11
 8008d60:	4681      	mov	r9, r0
 8008d62:	2e00      	cmp	r6, #0
 8008d64:	d077      	beq.n	8008e56 <_dtoa_r+0x1d6>
 8008d66:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8008d68:	f8cd 8050 	str.w	r8, [sp, #80]	@ 0x50
 8008d6c:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8008d70:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8008d74:	f043 537f 	orr.w	r3, r3, #1069547520	@ 0x3fc00000
 8008d78:	f443 1340 	orr.w	r3, r3, #3145728	@ 0x300000
 8008d7c:	f2a6 36ff 	subw	r6, r6, #1023	@ 0x3ff
 8008d80:	4619      	mov	r1, r3
 8008d82:	2200      	movs	r2, #0
 8008d84:	4b74      	ldr	r3, [pc, #464]	@ (8008f58 <_dtoa_r+0x2d8>)
 8008d86:	f7f7 fa7f 	bl	8000288 <__aeabi_dsub>
 8008d8a:	a369      	add	r3, pc, #420	@ (adr r3, 8008f30 <_dtoa_r+0x2b0>)
 8008d8c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008d90:	f7f7 fc32 	bl	80005f8 <__aeabi_dmul>
 8008d94:	a368      	add	r3, pc, #416	@ (adr r3, 8008f38 <_dtoa_r+0x2b8>)
 8008d96:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008d9a:	f7f7 fa77 	bl	800028c <__adddf3>
 8008d9e:	4604      	mov	r4, r0
 8008da0:	4630      	mov	r0, r6
 8008da2:	460d      	mov	r5, r1
 8008da4:	f7f7 fbbe 	bl	8000524 <__aeabi_i2d>
 8008da8:	a365      	add	r3, pc, #404	@ (adr r3, 8008f40 <_dtoa_r+0x2c0>)
 8008daa:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008dae:	f7f7 fc23 	bl	80005f8 <__aeabi_dmul>
 8008db2:	4602      	mov	r2, r0
 8008db4:	460b      	mov	r3, r1
 8008db6:	4620      	mov	r0, r4
 8008db8:	4629      	mov	r1, r5
 8008dba:	f7f7 fa67 	bl	800028c <__adddf3>
 8008dbe:	4604      	mov	r4, r0
 8008dc0:	460d      	mov	r5, r1
 8008dc2:	f7f7 fec9 	bl	8000b58 <__aeabi_d2iz>
 8008dc6:	2200      	movs	r2, #0
 8008dc8:	4607      	mov	r7, r0
 8008dca:	2300      	movs	r3, #0
 8008dcc:	4620      	mov	r0, r4
 8008dce:	4629      	mov	r1, r5
 8008dd0:	f7f7 fe84 	bl	8000adc <__aeabi_dcmplt>
 8008dd4:	b140      	cbz	r0, 8008de8 <_dtoa_r+0x168>
 8008dd6:	4638      	mov	r0, r7
 8008dd8:	f7f7 fba4 	bl	8000524 <__aeabi_i2d>
 8008ddc:	4622      	mov	r2, r4
 8008dde:	462b      	mov	r3, r5
 8008de0:	f7f7 fe72 	bl	8000ac8 <__aeabi_dcmpeq>
 8008de4:	b900      	cbnz	r0, 8008de8 <_dtoa_r+0x168>
 8008de6:	3f01      	subs	r7, #1
 8008de8:	2f16      	cmp	r7, #22
 8008dea:	d851      	bhi.n	8008e90 <_dtoa_r+0x210>
 8008dec:	4b5b      	ldr	r3, [pc, #364]	@ (8008f5c <_dtoa_r+0x2dc>)
 8008dee:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 8008df2:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008df6:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8008dfa:	f7f7 fe6f 	bl	8000adc <__aeabi_dcmplt>
 8008dfe:	2800      	cmp	r0, #0
 8008e00:	d048      	beq.n	8008e94 <_dtoa_r+0x214>
 8008e02:	3f01      	subs	r7, #1
 8008e04:	2300      	movs	r3, #0
 8008e06:	9312      	str	r3, [sp, #72]	@ 0x48
 8008e08:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8008e0a:	1b9b      	subs	r3, r3, r6
 8008e0c:	1e5a      	subs	r2, r3, #1
 8008e0e:	bf44      	itt	mi
 8008e10:	f1c3 0801 	rsbmi	r8, r3, #1
 8008e14:	2300      	movmi	r3, #0
 8008e16:	9208      	str	r2, [sp, #32]
 8008e18:	bf54      	ite	pl
 8008e1a:	f04f 0800 	movpl.w	r8, #0
 8008e1e:	9308      	strmi	r3, [sp, #32]
 8008e20:	2f00      	cmp	r7, #0
 8008e22:	db39      	blt.n	8008e98 <_dtoa_r+0x218>
 8008e24:	9b08      	ldr	r3, [sp, #32]
 8008e26:	970f      	str	r7, [sp, #60]	@ 0x3c
 8008e28:	443b      	add	r3, r7
 8008e2a:	9308      	str	r3, [sp, #32]
 8008e2c:	2300      	movs	r3, #0
 8008e2e:	930a      	str	r3, [sp, #40]	@ 0x28
 8008e30:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8008e32:	2b09      	cmp	r3, #9
 8008e34:	d864      	bhi.n	8008f00 <_dtoa_r+0x280>
 8008e36:	2b05      	cmp	r3, #5
 8008e38:	bfc4      	itt	gt
 8008e3a:	3b04      	subgt	r3, #4
 8008e3c:	9309      	strgt	r3, [sp, #36]	@ 0x24
 8008e3e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8008e40:	f1a3 0302 	sub.w	r3, r3, #2
 8008e44:	bfcc      	ite	gt
 8008e46:	2400      	movgt	r4, #0
 8008e48:	2401      	movle	r4, #1
 8008e4a:	2b03      	cmp	r3, #3
 8008e4c:	d863      	bhi.n	8008f16 <_dtoa_r+0x296>
 8008e4e:	e8df f003 	tbb	[pc, r3]
 8008e52:	372a      	.short	0x372a
 8008e54:	5535      	.short	0x5535
 8008e56:	e9dd 6316 	ldrd	r6, r3, [sp, #88]	@ 0x58
 8008e5a:	441e      	add	r6, r3
 8008e5c:	f206 4332 	addw	r3, r6, #1074	@ 0x432
 8008e60:	2b20      	cmp	r3, #32
 8008e62:	bfc1      	itttt	gt
 8008e64:	f1c3 0340 	rsbgt	r3, r3, #64	@ 0x40
 8008e68:	409f      	lslgt	r7, r3
 8008e6a:	f206 4312 	addwgt	r3, r6, #1042	@ 0x412
 8008e6e:	fa24 f303 	lsrgt.w	r3, r4, r3
 8008e72:	bfd6      	itet	le
 8008e74:	f1c3 0320 	rsble	r3, r3, #32
 8008e78:	ea47 0003 	orrgt.w	r0, r7, r3
 8008e7c:	fa04 f003 	lslle.w	r0, r4, r3
 8008e80:	f7f7 fb40 	bl	8000504 <__aeabi_ui2d>
 8008e84:	2201      	movs	r2, #1
 8008e86:	f1a1 73f8 	sub.w	r3, r1, #32505856	@ 0x1f00000
 8008e8a:	3e01      	subs	r6, #1
 8008e8c:	9214      	str	r2, [sp, #80]	@ 0x50
 8008e8e:	e777      	b.n	8008d80 <_dtoa_r+0x100>
 8008e90:	2301      	movs	r3, #1
 8008e92:	e7b8      	b.n	8008e06 <_dtoa_r+0x186>
 8008e94:	9012      	str	r0, [sp, #72]	@ 0x48
 8008e96:	e7b7      	b.n	8008e08 <_dtoa_r+0x188>
 8008e98:	427b      	negs	r3, r7
 8008e9a:	930a      	str	r3, [sp, #40]	@ 0x28
 8008e9c:	2300      	movs	r3, #0
 8008e9e:	eba8 0807 	sub.w	r8, r8, r7
 8008ea2:	930f      	str	r3, [sp, #60]	@ 0x3c
 8008ea4:	e7c4      	b.n	8008e30 <_dtoa_r+0x1b0>
 8008ea6:	2300      	movs	r3, #0
 8008ea8:	930b      	str	r3, [sp, #44]	@ 0x2c
 8008eaa:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8008eac:	2b00      	cmp	r3, #0
 8008eae:	dc35      	bgt.n	8008f1c <_dtoa_r+0x29c>
 8008eb0:	2301      	movs	r3, #1
 8008eb2:	9300      	str	r3, [sp, #0]
 8008eb4:	9307      	str	r3, [sp, #28]
 8008eb6:	461a      	mov	r2, r3
 8008eb8:	920e      	str	r2, [sp, #56]	@ 0x38
 8008eba:	e00b      	b.n	8008ed4 <_dtoa_r+0x254>
 8008ebc:	2301      	movs	r3, #1
 8008ebe:	e7f3      	b.n	8008ea8 <_dtoa_r+0x228>
 8008ec0:	2300      	movs	r3, #0
 8008ec2:	930b      	str	r3, [sp, #44]	@ 0x2c
 8008ec4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8008ec6:	18fb      	adds	r3, r7, r3
 8008ec8:	9300      	str	r3, [sp, #0]
 8008eca:	3301      	adds	r3, #1
 8008ecc:	2b01      	cmp	r3, #1
 8008ece:	9307      	str	r3, [sp, #28]
 8008ed0:	bfb8      	it	lt
 8008ed2:	2301      	movlt	r3, #1
 8008ed4:	f8db 001c 	ldr.w	r0, [fp, #28]
 8008ed8:	2100      	movs	r1, #0
 8008eda:	2204      	movs	r2, #4
 8008edc:	f102 0514 	add.w	r5, r2, #20
 8008ee0:	429d      	cmp	r5, r3
 8008ee2:	d91f      	bls.n	8008f24 <_dtoa_r+0x2a4>
 8008ee4:	6041      	str	r1, [r0, #4]
 8008ee6:	4658      	mov	r0, fp
 8008ee8:	f000 fd8e 	bl	8009a08 <_Balloc>
 8008eec:	4682      	mov	sl, r0
 8008eee:	2800      	cmp	r0, #0
 8008ef0:	d13c      	bne.n	8008f6c <_dtoa_r+0x2ec>
 8008ef2:	4b1b      	ldr	r3, [pc, #108]	@ (8008f60 <_dtoa_r+0x2e0>)
 8008ef4:	4602      	mov	r2, r0
 8008ef6:	f240 11af 	movw	r1, #431	@ 0x1af
 8008efa:	e6d8      	b.n	8008cae <_dtoa_r+0x2e>
 8008efc:	2301      	movs	r3, #1
 8008efe:	e7e0      	b.n	8008ec2 <_dtoa_r+0x242>
 8008f00:	2401      	movs	r4, #1
 8008f02:	2300      	movs	r3, #0
 8008f04:	9309      	str	r3, [sp, #36]	@ 0x24
 8008f06:	940b      	str	r4, [sp, #44]	@ 0x2c
 8008f08:	f04f 33ff 	mov.w	r3, #4294967295
 8008f0c:	9300      	str	r3, [sp, #0]
 8008f0e:	9307      	str	r3, [sp, #28]
 8008f10:	2200      	movs	r2, #0
 8008f12:	2312      	movs	r3, #18
 8008f14:	e7d0      	b.n	8008eb8 <_dtoa_r+0x238>
 8008f16:	2301      	movs	r3, #1
 8008f18:	930b      	str	r3, [sp, #44]	@ 0x2c
 8008f1a:	e7f5      	b.n	8008f08 <_dtoa_r+0x288>
 8008f1c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8008f1e:	9300      	str	r3, [sp, #0]
 8008f20:	9307      	str	r3, [sp, #28]
 8008f22:	e7d7      	b.n	8008ed4 <_dtoa_r+0x254>
 8008f24:	3101      	adds	r1, #1
 8008f26:	0052      	lsls	r2, r2, #1
 8008f28:	e7d8      	b.n	8008edc <_dtoa_r+0x25c>
 8008f2a:	bf00      	nop
 8008f2c:	f3af 8000 	nop.w
 8008f30:	636f4361 	.word	0x636f4361
 8008f34:	3fd287a7 	.word	0x3fd287a7
 8008f38:	8b60c8b3 	.word	0x8b60c8b3
 8008f3c:	3fc68a28 	.word	0x3fc68a28
 8008f40:	509f79fb 	.word	0x509f79fb
 8008f44:	3fd34413 	.word	0x3fd34413
 8008f48:	0800aeaa 	.word	0x0800aeaa
 8008f4c:	0800aec1 	.word	0x0800aec1
 8008f50:	7ff00000 	.word	0x7ff00000
 8008f54:	0800ae7a 	.word	0x0800ae7a
 8008f58:	3ff80000 	.word	0x3ff80000
 8008f5c:	0800afb8 	.word	0x0800afb8
 8008f60:	0800af19 	.word	0x0800af19
 8008f64:	0800aea6 	.word	0x0800aea6
 8008f68:	0800ae79 	.word	0x0800ae79
 8008f6c:	f8db 301c 	ldr.w	r3, [fp, #28]
 8008f70:	6018      	str	r0, [r3, #0]
 8008f72:	9b07      	ldr	r3, [sp, #28]
 8008f74:	2b0e      	cmp	r3, #14
 8008f76:	f200 80a4 	bhi.w	80090c2 <_dtoa_r+0x442>
 8008f7a:	2c00      	cmp	r4, #0
 8008f7c:	f000 80a1 	beq.w	80090c2 <_dtoa_r+0x442>
 8008f80:	2f00      	cmp	r7, #0
 8008f82:	dd33      	ble.n	8008fec <_dtoa_r+0x36c>
 8008f84:	4bad      	ldr	r3, [pc, #692]	@ (800923c <_dtoa_r+0x5bc>)
 8008f86:	f007 020f 	and.w	r2, r7, #15
 8008f8a:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8008f8e:	ed93 7b00 	vldr	d7, [r3]
 8008f92:	05f8      	lsls	r0, r7, #23
 8008f94:	ed8d 7b04 	vstr	d7, [sp, #16]
 8008f98:	ea4f 1427 	mov.w	r4, r7, asr #4
 8008f9c:	d516      	bpl.n	8008fcc <_dtoa_r+0x34c>
 8008f9e:	4ba8      	ldr	r3, [pc, #672]	@ (8009240 <_dtoa_r+0x5c0>)
 8008fa0:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8008fa4:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8008fa8:	f7f7 fc50 	bl	800084c <__aeabi_ddiv>
 8008fac:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8008fb0:	f004 040f 	and.w	r4, r4, #15
 8008fb4:	2603      	movs	r6, #3
 8008fb6:	4da2      	ldr	r5, [pc, #648]	@ (8009240 <_dtoa_r+0x5c0>)
 8008fb8:	b954      	cbnz	r4, 8008fd0 <_dtoa_r+0x350>
 8008fba:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8008fbe:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8008fc2:	f7f7 fc43 	bl	800084c <__aeabi_ddiv>
 8008fc6:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8008fca:	e028      	b.n	800901e <_dtoa_r+0x39e>
 8008fcc:	2602      	movs	r6, #2
 8008fce:	e7f2      	b.n	8008fb6 <_dtoa_r+0x336>
 8008fd0:	07e1      	lsls	r1, r4, #31
 8008fd2:	d508      	bpl.n	8008fe6 <_dtoa_r+0x366>
 8008fd4:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8008fd8:	e9d5 2300 	ldrd	r2, r3, [r5]
 8008fdc:	f7f7 fb0c 	bl	80005f8 <__aeabi_dmul>
 8008fe0:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8008fe4:	3601      	adds	r6, #1
 8008fe6:	1064      	asrs	r4, r4, #1
 8008fe8:	3508      	adds	r5, #8
 8008fea:	e7e5      	b.n	8008fb8 <_dtoa_r+0x338>
 8008fec:	f000 80d2 	beq.w	8009194 <_dtoa_r+0x514>
 8008ff0:	427c      	negs	r4, r7
 8008ff2:	4b92      	ldr	r3, [pc, #584]	@ (800923c <_dtoa_r+0x5bc>)
 8008ff4:	4d92      	ldr	r5, [pc, #584]	@ (8009240 <_dtoa_r+0x5c0>)
 8008ff6:	f004 020f 	and.w	r2, r4, #15
 8008ffa:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8008ffe:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009002:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8009006:	f7f7 faf7 	bl	80005f8 <__aeabi_dmul>
 800900a:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800900e:	1124      	asrs	r4, r4, #4
 8009010:	2300      	movs	r3, #0
 8009012:	2602      	movs	r6, #2
 8009014:	2c00      	cmp	r4, #0
 8009016:	f040 80b2 	bne.w	800917e <_dtoa_r+0x4fe>
 800901a:	2b00      	cmp	r3, #0
 800901c:	d1d3      	bne.n	8008fc6 <_dtoa_r+0x346>
 800901e:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8009020:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
 8009024:	2b00      	cmp	r3, #0
 8009026:	f000 80b7 	beq.w	8009198 <_dtoa_r+0x518>
 800902a:	4b86      	ldr	r3, [pc, #536]	@ (8009244 <_dtoa_r+0x5c4>)
 800902c:	2200      	movs	r2, #0
 800902e:	4620      	mov	r0, r4
 8009030:	4629      	mov	r1, r5
 8009032:	f7f7 fd53 	bl	8000adc <__aeabi_dcmplt>
 8009036:	2800      	cmp	r0, #0
 8009038:	f000 80ae 	beq.w	8009198 <_dtoa_r+0x518>
 800903c:	9b07      	ldr	r3, [sp, #28]
 800903e:	2b00      	cmp	r3, #0
 8009040:	f000 80aa 	beq.w	8009198 <_dtoa_r+0x518>
 8009044:	9b00      	ldr	r3, [sp, #0]
 8009046:	2b00      	cmp	r3, #0
 8009048:	dd37      	ble.n	80090ba <_dtoa_r+0x43a>
 800904a:	1e7b      	subs	r3, r7, #1
 800904c:	9304      	str	r3, [sp, #16]
 800904e:	4620      	mov	r0, r4
 8009050:	4b7d      	ldr	r3, [pc, #500]	@ (8009248 <_dtoa_r+0x5c8>)
 8009052:	2200      	movs	r2, #0
 8009054:	4629      	mov	r1, r5
 8009056:	f7f7 facf 	bl	80005f8 <__aeabi_dmul>
 800905a:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800905e:	9c00      	ldr	r4, [sp, #0]
 8009060:	3601      	adds	r6, #1
 8009062:	4630      	mov	r0, r6
 8009064:	f7f7 fa5e 	bl	8000524 <__aeabi_i2d>
 8009068:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800906c:	f7f7 fac4 	bl	80005f8 <__aeabi_dmul>
 8009070:	4b76      	ldr	r3, [pc, #472]	@ (800924c <_dtoa_r+0x5cc>)
 8009072:	2200      	movs	r2, #0
 8009074:	f7f7 f90a 	bl	800028c <__adddf3>
 8009078:	4605      	mov	r5, r0
 800907a:	f1a1 7650 	sub.w	r6, r1, #54525952	@ 0x3400000
 800907e:	2c00      	cmp	r4, #0
 8009080:	f040 808d 	bne.w	800919e <_dtoa_r+0x51e>
 8009084:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8009088:	4b71      	ldr	r3, [pc, #452]	@ (8009250 <_dtoa_r+0x5d0>)
 800908a:	2200      	movs	r2, #0
 800908c:	f7f7 f8fc 	bl	8000288 <__aeabi_dsub>
 8009090:	4602      	mov	r2, r0
 8009092:	460b      	mov	r3, r1
 8009094:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8009098:	462a      	mov	r2, r5
 800909a:	4633      	mov	r3, r6
 800909c:	f7f7 fd3c 	bl	8000b18 <__aeabi_dcmpgt>
 80090a0:	2800      	cmp	r0, #0
 80090a2:	f040 828b 	bne.w	80095bc <_dtoa_r+0x93c>
 80090a6:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80090aa:	462a      	mov	r2, r5
 80090ac:	f106 4300 	add.w	r3, r6, #2147483648	@ 0x80000000
 80090b0:	f7f7 fd14 	bl	8000adc <__aeabi_dcmplt>
 80090b4:	2800      	cmp	r0, #0
 80090b6:	f040 8128 	bne.w	800930a <_dtoa_r+0x68a>
 80090ba:	e9dd 340c 	ldrd	r3, r4, [sp, #48]	@ 0x30
 80090be:	e9cd 3402 	strd	r3, r4, [sp, #8]
 80090c2:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 80090c4:	2b00      	cmp	r3, #0
 80090c6:	f2c0 815a 	blt.w	800937e <_dtoa_r+0x6fe>
 80090ca:	2f0e      	cmp	r7, #14
 80090cc:	f300 8157 	bgt.w	800937e <_dtoa_r+0x6fe>
 80090d0:	4b5a      	ldr	r3, [pc, #360]	@ (800923c <_dtoa_r+0x5bc>)
 80090d2:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 80090d6:	ed93 7b00 	vldr	d7, [r3]
 80090da:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80090dc:	2b00      	cmp	r3, #0
 80090de:	ed8d 7b00 	vstr	d7, [sp]
 80090e2:	da03      	bge.n	80090ec <_dtoa_r+0x46c>
 80090e4:	9b07      	ldr	r3, [sp, #28]
 80090e6:	2b00      	cmp	r3, #0
 80090e8:	f340 8101 	ble.w	80092ee <_dtoa_r+0x66e>
 80090ec:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
 80090f0:	4656      	mov	r6, sl
 80090f2:	e9dd 2300 	ldrd	r2, r3, [sp]
 80090f6:	4620      	mov	r0, r4
 80090f8:	4629      	mov	r1, r5
 80090fa:	f7f7 fba7 	bl	800084c <__aeabi_ddiv>
 80090fe:	f7f7 fd2b 	bl	8000b58 <__aeabi_d2iz>
 8009102:	4680      	mov	r8, r0
 8009104:	f7f7 fa0e 	bl	8000524 <__aeabi_i2d>
 8009108:	e9dd 2300 	ldrd	r2, r3, [sp]
 800910c:	f7f7 fa74 	bl	80005f8 <__aeabi_dmul>
 8009110:	4602      	mov	r2, r0
 8009112:	460b      	mov	r3, r1
 8009114:	4620      	mov	r0, r4
 8009116:	4629      	mov	r1, r5
 8009118:	f108 0430 	add.w	r4, r8, #48	@ 0x30
 800911c:	f7f7 f8b4 	bl	8000288 <__aeabi_dsub>
 8009120:	f806 4b01 	strb.w	r4, [r6], #1
 8009124:	9d07      	ldr	r5, [sp, #28]
 8009126:	eba6 040a 	sub.w	r4, r6, sl
 800912a:	42a5      	cmp	r5, r4
 800912c:	4602      	mov	r2, r0
 800912e:	460b      	mov	r3, r1
 8009130:	f040 8117 	bne.w	8009362 <_dtoa_r+0x6e2>
 8009134:	f7f7 f8aa 	bl	800028c <__adddf3>
 8009138:	e9dd 2300 	ldrd	r2, r3, [sp]
 800913c:	4604      	mov	r4, r0
 800913e:	460d      	mov	r5, r1
 8009140:	f7f7 fcea 	bl	8000b18 <__aeabi_dcmpgt>
 8009144:	2800      	cmp	r0, #0
 8009146:	f040 80f9 	bne.w	800933c <_dtoa_r+0x6bc>
 800914a:	e9dd 2300 	ldrd	r2, r3, [sp]
 800914e:	4620      	mov	r0, r4
 8009150:	4629      	mov	r1, r5
 8009152:	f7f7 fcb9 	bl	8000ac8 <__aeabi_dcmpeq>
 8009156:	b118      	cbz	r0, 8009160 <_dtoa_r+0x4e0>
 8009158:	f018 0f01 	tst.w	r8, #1
 800915c:	f040 80ee 	bne.w	800933c <_dtoa_r+0x6bc>
 8009160:	4649      	mov	r1, r9
 8009162:	4658      	mov	r0, fp
 8009164:	f000 fc90 	bl	8009a88 <_Bfree>
 8009168:	2300      	movs	r3, #0
 800916a:	7033      	strb	r3, [r6, #0]
 800916c:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 800916e:	3701      	adds	r7, #1
 8009170:	601f      	str	r7, [r3, #0]
 8009172:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8009174:	2b00      	cmp	r3, #0
 8009176:	f000 831d 	beq.w	80097b4 <_dtoa_r+0xb34>
 800917a:	601e      	str	r6, [r3, #0]
 800917c:	e31a      	b.n	80097b4 <_dtoa_r+0xb34>
 800917e:	07e2      	lsls	r2, r4, #31
 8009180:	d505      	bpl.n	800918e <_dtoa_r+0x50e>
 8009182:	e9d5 2300 	ldrd	r2, r3, [r5]
 8009186:	f7f7 fa37 	bl	80005f8 <__aeabi_dmul>
 800918a:	3601      	adds	r6, #1
 800918c:	2301      	movs	r3, #1
 800918e:	1064      	asrs	r4, r4, #1
 8009190:	3508      	adds	r5, #8
 8009192:	e73f      	b.n	8009014 <_dtoa_r+0x394>
 8009194:	2602      	movs	r6, #2
 8009196:	e742      	b.n	800901e <_dtoa_r+0x39e>
 8009198:	9c07      	ldr	r4, [sp, #28]
 800919a:	9704      	str	r7, [sp, #16]
 800919c:	e761      	b.n	8009062 <_dtoa_r+0x3e2>
 800919e:	4b27      	ldr	r3, [pc, #156]	@ (800923c <_dtoa_r+0x5bc>)
 80091a0:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 80091a2:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 80091a6:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 80091aa:	4454      	add	r4, sl
 80091ac:	2900      	cmp	r1, #0
 80091ae:	d053      	beq.n	8009258 <_dtoa_r+0x5d8>
 80091b0:	4928      	ldr	r1, [pc, #160]	@ (8009254 <_dtoa_r+0x5d4>)
 80091b2:	2000      	movs	r0, #0
 80091b4:	f7f7 fb4a 	bl	800084c <__aeabi_ddiv>
 80091b8:	4633      	mov	r3, r6
 80091ba:	462a      	mov	r2, r5
 80091bc:	f7f7 f864 	bl	8000288 <__aeabi_dsub>
 80091c0:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 80091c4:	4656      	mov	r6, sl
 80091c6:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80091ca:	f7f7 fcc5 	bl	8000b58 <__aeabi_d2iz>
 80091ce:	4605      	mov	r5, r0
 80091d0:	f7f7 f9a8 	bl	8000524 <__aeabi_i2d>
 80091d4:	4602      	mov	r2, r0
 80091d6:	460b      	mov	r3, r1
 80091d8:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80091dc:	f7f7 f854 	bl	8000288 <__aeabi_dsub>
 80091e0:	3530      	adds	r5, #48	@ 0x30
 80091e2:	4602      	mov	r2, r0
 80091e4:	460b      	mov	r3, r1
 80091e6:	e9cd 2302 	strd	r2, r3, [sp, #8]
 80091ea:	f806 5b01 	strb.w	r5, [r6], #1
 80091ee:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 80091f2:	f7f7 fc73 	bl	8000adc <__aeabi_dcmplt>
 80091f6:	2800      	cmp	r0, #0
 80091f8:	d171      	bne.n	80092de <_dtoa_r+0x65e>
 80091fa:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80091fe:	4911      	ldr	r1, [pc, #68]	@ (8009244 <_dtoa_r+0x5c4>)
 8009200:	2000      	movs	r0, #0
 8009202:	f7f7 f841 	bl	8000288 <__aeabi_dsub>
 8009206:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 800920a:	f7f7 fc67 	bl	8000adc <__aeabi_dcmplt>
 800920e:	2800      	cmp	r0, #0
 8009210:	f040 8095 	bne.w	800933e <_dtoa_r+0x6be>
 8009214:	42a6      	cmp	r6, r4
 8009216:	f43f af50 	beq.w	80090ba <_dtoa_r+0x43a>
 800921a:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 800921e:	4b0a      	ldr	r3, [pc, #40]	@ (8009248 <_dtoa_r+0x5c8>)
 8009220:	2200      	movs	r2, #0
 8009222:	f7f7 f9e9 	bl	80005f8 <__aeabi_dmul>
 8009226:	4b08      	ldr	r3, [pc, #32]	@ (8009248 <_dtoa_r+0x5c8>)
 8009228:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 800922c:	2200      	movs	r2, #0
 800922e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8009232:	f7f7 f9e1 	bl	80005f8 <__aeabi_dmul>
 8009236:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800923a:	e7c4      	b.n	80091c6 <_dtoa_r+0x546>
 800923c:	0800afb8 	.word	0x0800afb8
 8009240:	0800af90 	.word	0x0800af90
 8009244:	3ff00000 	.word	0x3ff00000
 8009248:	40240000 	.word	0x40240000
 800924c:	401c0000 	.word	0x401c0000
 8009250:	40140000 	.word	0x40140000
 8009254:	3fe00000 	.word	0x3fe00000
 8009258:	4631      	mov	r1, r6
 800925a:	4628      	mov	r0, r5
 800925c:	f7f7 f9cc 	bl	80005f8 <__aeabi_dmul>
 8009260:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8009264:	9415      	str	r4, [sp, #84]	@ 0x54
 8009266:	4656      	mov	r6, sl
 8009268:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800926c:	f7f7 fc74 	bl	8000b58 <__aeabi_d2iz>
 8009270:	4605      	mov	r5, r0
 8009272:	f7f7 f957 	bl	8000524 <__aeabi_i2d>
 8009276:	4602      	mov	r2, r0
 8009278:	460b      	mov	r3, r1
 800927a:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800927e:	f7f7 f803 	bl	8000288 <__aeabi_dsub>
 8009282:	3530      	adds	r5, #48	@ 0x30
 8009284:	f806 5b01 	strb.w	r5, [r6], #1
 8009288:	4602      	mov	r2, r0
 800928a:	460b      	mov	r3, r1
 800928c:	42a6      	cmp	r6, r4
 800928e:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8009292:	f04f 0200 	mov.w	r2, #0
 8009296:	d124      	bne.n	80092e2 <_dtoa_r+0x662>
 8009298:	4bac      	ldr	r3, [pc, #688]	@ (800954c <_dtoa_r+0x8cc>)
 800929a:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 800929e:	f7f6 fff5 	bl	800028c <__adddf3>
 80092a2:	4602      	mov	r2, r0
 80092a4:	460b      	mov	r3, r1
 80092a6:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80092aa:	f7f7 fc35 	bl	8000b18 <__aeabi_dcmpgt>
 80092ae:	2800      	cmp	r0, #0
 80092b0:	d145      	bne.n	800933e <_dtoa_r+0x6be>
 80092b2:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 80092b6:	49a5      	ldr	r1, [pc, #660]	@ (800954c <_dtoa_r+0x8cc>)
 80092b8:	2000      	movs	r0, #0
 80092ba:	f7f6 ffe5 	bl	8000288 <__aeabi_dsub>
 80092be:	4602      	mov	r2, r0
 80092c0:	460b      	mov	r3, r1
 80092c2:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80092c6:	f7f7 fc09 	bl	8000adc <__aeabi_dcmplt>
 80092ca:	2800      	cmp	r0, #0
 80092cc:	f43f aef5 	beq.w	80090ba <_dtoa_r+0x43a>
 80092d0:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 80092d2:	1e73      	subs	r3, r6, #1
 80092d4:	9315      	str	r3, [sp, #84]	@ 0x54
 80092d6:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 80092da:	2b30      	cmp	r3, #48	@ 0x30
 80092dc:	d0f8      	beq.n	80092d0 <_dtoa_r+0x650>
 80092de:	9f04      	ldr	r7, [sp, #16]
 80092e0:	e73e      	b.n	8009160 <_dtoa_r+0x4e0>
 80092e2:	4b9b      	ldr	r3, [pc, #620]	@ (8009550 <_dtoa_r+0x8d0>)
 80092e4:	f7f7 f988 	bl	80005f8 <__aeabi_dmul>
 80092e8:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80092ec:	e7bc      	b.n	8009268 <_dtoa_r+0x5e8>
 80092ee:	d10c      	bne.n	800930a <_dtoa_r+0x68a>
 80092f0:	4b98      	ldr	r3, [pc, #608]	@ (8009554 <_dtoa_r+0x8d4>)
 80092f2:	2200      	movs	r2, #0
 80092f4:	e9dd 0100 	ldrd	r0, r1, [sp]
 80092f8:	f7f7 f97e 	bl	80005f8 <__aeabi_dmul>
 80092fc:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8009300:	f7f7 fc00 	bl	8000b04 <__aeabi_dcmpge>
 8009304:	2800      	cmp	r0, #0
 8009306:	f000 8157 	beq.w	80095b8 <_dtoa_r+0x938>
 800930a:	2400      	movs	r4, #0
 800930c:	4625      	mov	r5, r4
 800930e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8009310:	43db      	mvns	r3, r3
 8009312:	9304      	str	r3, [sp, #16]
 8009314:	4656      	mov	r6, sl
 8009316:	2700      	movs	r7, #0
 8009318:	4621      	mov	r1, r4
 800931a:	4658      	mov	r0, fp
 800931c:	f000 fbb4 	bl	8009a88 <_Bfree>
 8009320:	2d00      	cmp	r5, #0
 8009322:	d0dc      	beq.n	80092de <_dtoa_r+0x65e>
 8009324:	b12f      	cbz	r7, 8009332 <_dtoa_r+0x6b2>
 8009326:	42af      	cmp	r7, r5
 8009328:	d003      	beq.n	8009332 <_dtoa_r+0x6b2>
 800932a:	4639      	mov	r1, r7
 800932c:	4658      	mov	r0, fp
 800932e:	f000 fbab 	bl	8009a88 <_Bfree>
 8009332:	4629      	mov	r1, r5
 8009334:	4658      	mov	r0, fp
 8009336:	f000 fba7 	bl	8009a88 <_Bfree>
 800933a:	e7d0      	b.n	80092de <_dtoa_r+0x65e>
 800933c:	9704      	str	r7, [sp, #16]
 800933e:	4633      	mov	r3, r6
 8009340:	461e      	mov	r6, r3
 8009342:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8009346:	2a39      	cmp	r2, #57	@ 0x39
 8009348:	d107      	bne.n	800935a <_dtoa_r+0x6da>
 800934a:	459a      	cmp	sl, r3
 800934c:	d1f8      	bne.n	8009340 <_dtoa_r+0x6c0>
 800934e:	9a04      	ldr	r2, [sp, #16]
 8009350:	3201      	adds	r2, #1
 8009352:	9204      	str	r2, [sp, #16]
 8009354:	2230      	movs	r2, #48	@ 0x30
 8009356:	f88a 2000 	strb.w	r2, [sl]
 800935a:	781a      	ldrb	r2, [r3, #0]
 800935c:	3201      	adds	r2, #1
 800935e:	701a      	strb	r2, [r3, #0]
 8009360:	e7bd      	b.n	80092de <_dtoa_r+0x65e>
 8009362:	4b7b      	ldr	r3, [pc, #492]	@ (8009550 <_dtoa_r+0x8d0>)
 8009364:	2200      	movs	r2, #0
 8009366:	f7f7 f947 	bl	80005f8 <__aeabi_dmul>
 800936a:	2200      	movs	r2, #0
 800936c:	2300      	movs	r3, #0
 800936e:	4604      	mov	r4, r0
 8009370:	460d      	mov	r5, r1
 8009372:	f7f7 fba9 	bl	8000ac8 <__aeabi_dcmpeq>
 8009376:	2800      	cmp	r0, #0
 8009378:	f43f aebb 	beq.w	80090f2 <_dtoa_r+0x472>
 800937c:	e6f0      	b.n	8009160 <_dtoa_r+0x4e0>
 800937e:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8009380:	2a00      	cmp	r2, #0
 8009382:	f000 80db 	beq.w	800953c <_dtoa_r+0x8bc>
 8009386:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8009388:	2a01      	cmp	r2, #1
 800938a:	f300 80bf 	bgt.w	800950c <_dtoa_r+0x88c>
 800938e:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8009390:	2a00      	cmp	r2, #0
 8009392:	f000 80b7 	beq.w	8009504 <_dtoa_r+0x884>
 8009396:	f203 4333 	addw	r3, r3, #1075	@ 0x433
 800939a:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 800939c:	4646      	mov	r6, r8
 800939e:	9a08      	ldr	r2, [sp, #32]
 80093a0:	2101      	movs	r1, #1
 80093a2:	441a      	add	r2, r3
 80093a4:	4658      	mov	r0, fp
 80093a6:	4498      	add	r8, r3
 80093a8:	9208      	str	r2, [sp, #32]
 80093aa:	f000 fc21 	bl	8009bf0 <__i2b>
 80093ae:	4605      	mov	r5, r0
 80093b0:	b15e      	cbz	r6, 80093ca <_dtoa_r+0x74a>
 80093b2:	9b08      	ldr	r3, [sp, #32]
 80093b4:	2b00      	cmp	r3, #0
 80093b6:	dd08      	ble.n	80093ca <_dtoa_r+0x74a>
 80093b8:	42b3      	cmp	r3, r6
 80093ba:	9a08      	ldr	r2, [sp, #32]
 80093bc:	bfa8      	it	ge
 80093be:	4633      	movge	r3, r6
 80093c0:	eba8 0803 	sub.w	r8, r8, r3
 80093c4:	1af6      	subs	r6, r6, r3
 80093c6:	1ad3      	subs	r3, r2, r3
 80093c8:	9308      	str	r3, [sp, #32]
 80093ca:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80093cc:	b1f3      	cbz	r3, 800940c <_dtoa_r+0x78c>
 80093ce:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80093d0:	2b00      	cmp	r3, #0
 80093d2:	f000 80b7 	beq.w	8009544 <_dtoa_r+0x8c4>
 80093d6:	b18c      	cbz	r4, 80093fc <_dtoa_r+0x77c>
 80093d8:	4629      	mov	r1, r5
 80093da:	4622      	mov	r2, r4
 80093dc:	4658      	mov	r0, fp
 80093de:	f000 fcc7 	bl	8009d70 <__pow5mult>
 80093e2:	464a      	mov	r2, r9
 80093e4:	4601      	mov	r1, r0
 80093e6:	4605      	mov	r5, r0
 80093e8:	4658      	mov	r0, fp
 80093ea:	f000 fc17 	bl	8009c1c <__multiply>
 80093ee:	4649      	mov	r1, r9
 80093f0:	9004      	str	r0, [sp, #16]
 80093f2:	4658      	mov	r0, fp
 80093f4:	f000 fb48 	bl	8009a88 <_Bfree>
 80093f8:	9b04      	ldr	r3, [sp, #16]
 80093fa:	4699      	mov	r9, r3
 80093fc:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80093fe:	1b1a      	subs	r2, r3, r4
 8009400:	d004      	beq.n	800940c <_dtoa_r+0x78c>
 8009402:	4649      	mov	r1, r9
 8009404:	4658      	mov	r0, fp
 8009406:	f000 fcb3 	bl	8009d70 <__pow5mult>
 800940a:	4681      	mov	r9, r0
 800940c:	2101      	movs	r1, #1
 800940e:	4658      	mov	r0, fp
 8009410:	f000 fbee 	bl	8009bf0 <__i2b>
 8009414:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8009416:	4604      	mov	r4, r0
 8009418:	2b00      	cmp	r3, #0
 800941a:	f000 81cf 	beq.w	80097bc <_dtoa_r+0xb3c>
 800941e:	461a      	mov	r2, r3
 8009420:	4601      	mov	r1, r0
 8009422:	4658      	mov	r0, fp
 8009424:	f000 fca4 	bl	8009d70 <__pow5mult>
 8009428:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800942a:	2b01      	cmp	r3, #1
 800942c:	4604      	mov	r4, r0
 800942e:	f300 8095 	bgt.w	800955c <_dtoa_r+0x8dc>
 8009432:	9b02      	ldr	r3, [sp, #8]
 8009434:	2b00      	cmp	r3, #0
 8009436:	f040 8087 	bne.w	8009548 <_dtoa_r+0x8c8>
 800943a:	9b03      	ldr	r3, [sp, #12]
 800943c:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8009440:	2b00      	cmp	r3, #0
 8009442:	f040 8089 	bne.w	8009558 <_dtoa_r+0x8d8>
 8009446:	9b03      	ldr	r3, [sp, #12]
 8009448:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 800944c:	0d1b      	lsrs	r3, r3, #20
 800944e:	051b      	lsls	r3, r3, #20
 8009450:	b12b      	cbz	r3, 800945e <_dtoa_r+0x7de>
 8009452:	9b08      	ldr	r3, [sp, #32]
 8009454:	3301      	adds	r3, #1
 8009456:	9308      	str	r3, [sp, #32]
 8009458:	f108 0801 	add.w	r8, r8, #1
 800945c:	2301      	movs	r3, #1
 800945e:	930a      	str	r3, [sp, #40]	@ 0x28
 8009460:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8009462:	2b00      	cmp	r3, #0
 8009464:	f000 81b0 	beq.w	80097c8 <_dtoa_r+0xb48>
 8009468:	6923      	ldr	r3, [r4, #16]
 800946a:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 800946e:	6918      	ldr	r0, [r3, #16]
 8009470:	f000 fb72 	bl	8009b58 <__hi0bits>
 8009474:	f1c0 0020 	rsb	r0, r0, #32
 8009478:	9b08      	ldr	r3, [sp, #32]
 800947a:	4418      	add	r0, r3
 800947c:	f010 001f 	ands.w	r0, r0, #31
 8009480:	d077      	beq.n	8009572 <_dtoa_r+0x8f2>
 8009482:	f1c0 0320 	rsb	r3, r0, #32
 8009486:	2b04      	cmp	r3, #4
 8009488:	dd6b      	ble.n	8009562 <_dtoa_r+0x8e2>
 800948a:	9b08      	ldr	r3, [sp, #32]
 800948c:	f1c0 001c 	rsb	r0, r0, #28
 8009490:	4403      	add	r3, r0
 8009492:	4480      	add	r8, r0
 8009494:	4406      	add	r6, r0
 8009496:	9308      	str	r3, [sp, #32]
 8009498:	f1b8 0f00 	cmp.w	r8, #0
 800949c:	dd05      	ble.n	80094aa <_dtoa_r+0x82a>
 800949e:	4649      	mov	r1, r9
 80094a0:	4642      	mov	r2, r8
 80094a2:	4658      	mov	r0, fp
 80094a4:	f000 fcbe 	bl	8009e24 <__lshift>
 80094a8:	4681      	mov	r9, r0
 80094aa:	9b08      	ldr	r3, [sp, #32]
 80094ac:	2b00      	cmp	r3, #0
 80094ae:	dd05      	ble.n	80094bc <_dtoa_r+0x83c>
 80094b0:	4621      	mov	r1, r4
 80094b2:	461a      	mov	r2, r3
 80094b4:	4658      	mov	r0, fp
 80094b6:	f000 fcb5 	bl	8009e24 <__lshift>
 80094ba:	4604      	mov	r4, r0
 80094bc:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 80094be:	2b00      	cmp	r3, #0
 80094c0:	d059      	beq.n	8009576 <_dtoa_r+0x8f6>
 80094c2:	4621      	mov	r1, r4
 80094c4:	4648      	mov	r0, r9
 80094c6:	f000 fd19 	bl	8009efc <__mcmp>
 80094ca:	2800      	cmp	r0, #0
 80094cc:	da53      	bge.n	8009576 <_dtoa_r+0x8f6>
 80094ce:	1e7b      	subs	r3, r7, #1
 80094d0:	9304      	str	r3, [sp, #16]
 80094d2:	4649      	mov	r1, r9
 80094d4:	2300      	movs	r3, #0
 80094d6:	220a      	movs	r2, #10
 80094d8:	4658      	mov	r0, fp
 80094da:	f000 faf7 	bl	8009acc <__multadd>
 80094de:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80094e0:	4681      	mov	r9, r0
 80094e2:	2b00      	cmp	r3, #0
 80094e4:	f000 8172 	beq.w	80097cc <_dtoa_r+0xb4c>
 80094e8:	2300      	movs	r3, #0
 80094ea:	4629      	mov	r1, r5
 80094ec:	220a      	movs	r2, #10
 80094ee:	4658      	mov	r0, fp
 80094f0:	f000 faec 	bl	8009acc <__multadd>
 80094f4:	9b00      	ldr	r3, [sp, #0]
 80094f6:	2b00      	cmp	r3, #0
 80094f8:	4605      	mov	r5, r0
 80094fa:	dc67      	bgt.n	80095cc <_dtoa_r+0x94c>
 80094fc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80094fe:	2b02      	cmp	r3, #2
 8009500:	dc41      	bgt.n	8009586 <_dtoa_r+0x906>
 8009502:	e063      	b.n	80095cc <_dtoa_r+0x94c>
 8009504:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8009506:	f1c3 0336 	rsb	r3, r3, #54	@ 0x36
 800950a:	e746      	b.n	800939a <_dtoa_r+0x71a>
 800950c:	9b07      	ldr	r3, [sp, #28]
 800950e:	1e5c      	subs	r4, r3, #1
 8009510:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8009512:	42a3      	cmp	r3, r4
 8009514:	bfbf      	itttt	lt
 8009516:	9b0a      	ldrlt	r3, [sp, #40]	@ 0x28
 8009518:	9a0f      	ldrlt	r2, [sp, #60]	@ 0x3c
 800951a:	940a      	strlt	r4, [sp, #40]	@ 0x28
 800951c:	1ae3      	sublt	r3, r4, r3
 800951e:	bfb4      	ite	lt
 8009520:	18d2      	addlt	r2, r2, r3
 8009522:	1b1c      	subge	r4, r3, r4
 8009524:	9b07      	ldr	r3, [sp, #28]
 8009526:	bfbc      	itt	lt
 8009528:	920f      	strlt	r2, [sp, #60]	@ 0x3c
 800952a:	2400      	movlt	r4, #0
 800952c:	2b00      	cmp	r3, #0
 800952e:	bfb5      	itete	lt
 8009530:	eba8 0603 	sublt.w	r6, r8, r3
 8009534:	9b07      	ldrge	r3, [sp, #28]
 8009536:	2300      	movlt	r3, #0
 8009538:	4646      	movge	r6, r8
 800953a:	e730      	b.n	800939e <_dtoa_r+0x71e>
 800953c:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 800953e:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8009540:	4646      	mov	r6, r8
 8009542:	e735      	b.n	80093b0 <_dtoa_r+0x730>
 8009544:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8009546:	e75c      	b.n	8009402 <_dtoa_r+0x782>
 8009548:	2300      	movs	r3, #0
 800954a:	e788      	b.n	800945e <_dtoa_r+0x7de>
 800954c:	3fe00000 	.word	0x3fe00000
 8009550:	40240000 	.word	0x40240000
 8009554:	40140000 	.word	0x40140000
 8009558:	9b02      	ldr	r3, [sp, #8]
 800955a:	e780      	b.n	800945e <_dtoa_r+0x7de>
 800955c:	2300      	movs	r3, #0
 800955e:	930a      	str	r3, [sp, #40]	@ 0x28
 8009560:	e782      	b.n	8009468 <_dtoa_r+0x7e8>
 8009562:	d099      	beq.n	8009498 <_dtoa_r+0x818>
 8009564:	9a08      	ldr	r2, [sp, #32]
 8009566:	331c      	adds	r3, #28
 8009568:	441a      	add	r2, r3
 800956a:	4498      	add	r8, r3
 800956c:	441e      	add	r6, r3
 800956e:	9208      	str	r2, [sp, #32]
 8009570:	e792      	b.n	8009498 <_dtoa_r+0x818>
 8009572:	4603      	mov	r3, r0
 8009574:	e7f6      	b.n	8009564 <_dtoa_r+0x8e4>
 8009576:	9b07      	ldr	r3, [sp, #28]
 8009578:	9704      	str	r7, [sp, #16]
 800957a:	2b00      	cmp	r3, #0
 800957c:	dc20      	bgt.n	80095c0 <_dtoa_r+0x940>
 800957e:	9300      	str	r3, [sp, #0]
 8009580:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8009582:	2b02      	cmp	r3, #2
 8009584:	dd1e      	ble.n	80095c4 <_dtoa_r+0x944>
 8009586:	9b00      	ldr	r3, [sp, #0]
 8009588:	2b00      	cmp	r3, #0
 800958a:	f47f aec0 	bne.w	800930e <_dtoa_r+0x68e>
 800958e:	4621      	mov	r1, r4
 8009590:	2205      	movs	r2, #5
 8009592:	4658      	mov	r0, fp
 8009594:	f000 fa9a 	bl	8009acc <__multadd>
 8009598:	4601      	mov	r1, r0
 800959a:	4604      	mov	r4, r0
 800959c:	4648      	mov	r0, r9
 800959e:	f000 fcad 	bl	8009efc <__mcmp>
 80095a2:	2800      	cmp	r0, #0
 80095a4:	f77f aeb3 	ble.w	800930e <_dtoa_r+0x68e>
 80095a8:	4656      	mov	r6, sl
 80095aa:	2331      	movs	r3, #49	@ 0x31
 80095ac:	f806 3b01 	strb.w	r3, [r6], #1
 80095b0:	9b04      	ldr	r3, [sp, #16]
 80095b2:	3301      	adds	r3, #1
 80095b4:	9304      	str	r3, [sp, #16]
 80095b6:	e6ae      	b.n	8009316 <_dtoa_r+0x696>
 80095b8:	9c07      	ldr	r4, [sp, #28]
 80095ba:	9704      	str	r7, [sp, #16]
 80095bc:	4625      	mov	r5, r4
 80095be:	e7f3      	b.n	80095a8 <_dtoa_r+0x928>
 80095c0:	9b07      	ldr	r3, [sp, #28]
 80095c2:	9300      	str	r3, [sp, #0]
 80095c4:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80095c6:	2b00      	cmp	r3, #0
 80095c8:	f000 8104 	beq.w	80097d4 <_dtoa_r+0xb54>
 80095cc:	2e00      	cmp	r6, #0
 80095ce:	dd05      	ble.n	80095dc <_dtoa_r+0x95c>
 80095d0:	4629      	mov	r1, r5
 80095d2:	4632      	mov	r2, r6
 80095d4:	4658      	mov	r0, fp
 80095d6:	f000 fc25 	bl	8009e24 <__lshift>
 80095da:	4605      	mov	r5, r0
 80095dc:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80095de:	2b00      	cmp	r3, #0
 80095e0:	d05a      	beq.n	8009698 <_dtoa_r+0xa18>
 80095e2:	6869      	ldr	r1, [r5, #4]
 80095e4:	4658      	mov	r0, fp
 80095e6:	f000 fa0f 	bl	8009a08 <_Balloc>
 80095ea:	4606      	mov	r6, r0
 80095ec:	b928      	cbnz	r0, 80095fa <_dtoa_r+0x97a>
 80095ee:	4b84      	ldr	r3, [pc, #528]	@ (8009800 <_dtoa_r+0xb80>)
 80095f0:	4602      	mov	r2, r0
 80095f2:	f240 21ef 	movw	r1, #751	@ 0x2ef
 80095f6:	f7ff bb5a 	b.w	8008cae <_dtoa_r+0x2e>
 80095fa:	692a      	ldr	r2, [r5, #16]
 80095fc:	3202      	adds	r2, #2
 80095fe:	0092      	lsls	r2, r2, #2
 8009600:	f105 010c 	add.w	r1, r5, #12
 8009604:	300c      	adds	r0, #12
 8009606:	f001 f975 	bl	800a8f4 <memcpy>
 800960a:	2201      	movs	r2, #1
 800960c:	4631      	mov	r1, r6
 800960e:	4658      	mov	r0, fp
 8009610:	f000 fc08 	bl	8009e24 <__lshift>
 8009614:	f10a 0301 	add.w	r3, sl, #1
 8009618:	9307      	str	r3, [sp, #28]
 800961a:	9b00      	ldr	r3, [sp, #0]
 800961c:	4453      	add	r3, sl
 800961e:	930b      	str	r3, [sp, #44]	@ 0x2c
 8009620:	9b02      	ldr	r3, [sp, #8]
 8009622:	f003 0301 	and.w	r3, r3, #1
 8009626:	462f      	mov	r7, r5
 8009628:	930a      	str	r3, [sp, #40]	@ 0x28
 800962a:	4605      	mov	r5, r0
 800962c:	9b07      	ldr	r3, [sp, #28]
 800962e:	4621      	mov	r1, r4
 8009630:	3b01      	subs	r3, #1
 8009632:	4648      	mov	r0, r9
 8009634:	9300      	str	r3, [sp, #0]
 8009636:	f7ff fa98 	bl	8008b6a <quorem>
 800963a:	4639      	mov	r1, r7
 800963c:	9002      	str	r0, [sp, #8]
 800963e:	f100 0830 	add.w	r8, r0, #48	@ 0x30
 8009642:	4648      	mov	r0, r9
 8009644:	f000 fc5a 	bl	8009efc <__mcmp>
 8009648:	462a      	mov	r2, r5
 800964a:	9008      	str	r0, [sp, #32]
 800964c:	4621      	mov	r1, r4
 800964e:	4658      	mov	r0, fp
 8009650:	f000 fc70 	bl	8009f34 <__mdiff>
 8009654:	68c2      	ldr	r2, [r0, #12]
 8009656:	4606      	mov	r6, r0
 8009658:	bb02      	cbnz	r2, 800969c <_dtoa_r+0xa1c>
 800965a:	4601      	mov	r1, r0
 800965c:	4648      	mov	r0, r9
 800965e:	f000 fc4d 	bl	8009efc <__mcmp>
 8009662:	4602      	mov	r2, r0
 8009664:	4631      	mov	r1, r6
 8009666:	4658      	mov	r0, fp
 8009668:	920e      	str	r2, [sp, #56]	@ 0x38
 800966a:	f000 fa0d 	bl	8009a88 <_Bfree>
 800966e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8009670:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8009672:	9e07      	ldr	r6, [sp, #28]
 8009674:	ea43 0102 	orr.w	r1, r3, r2
 8009678:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800967a:	4319      	orrs	r1, r3
 800967c:	d110      	bne.n	80096a0 <_dtoa_r+0xa20>
 800967e:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 8009682:	d029      	beq.n	80096d8 <_dtoa_r+0xa58>
 8009684:	9b08      	ldr	r3, [sp, #32]
 8009686:	2b00      	cmp	r3, #0
 8009688:	dd02      	ble.n	8009690 <_dtoa_r+0xa10>
 800968a:	9b02      	ldr	r3, [sp, #8]
 800968c:	f103 0831 	add.w	r8, r3, #49	@ 0x31
 8009690:	9b00      	ldr	r3, [sp, #0]
 8009692:	f883 8000 	strb.w	r8, [r3]
 8009696:	e63f      	b.n	8009318 <_dtoa_r+0x698>
 8009698:	4628      	mov	r0, r5
 800969a:	e7bb      	b.n	8009614 <_dtoa_r+0x994>
 800969c:	2201      	movs	r2, #1
 800969e:	e7e1      	b.n	8009664 <_dtoa_r+0x9e4>
 80096a0:	9b08      	ldr	r3, [sp, #32]
 80096a2:	2b00      	cmp	r3, #0
 80096a4:	db04      	blt.n	80096b0 <_dtoa_r+0xa30>
 80096a6:	9909      	ldr	r1, [sp, #36]	@ 0x24
 80096a8:	430b      	orrs	r3, r1
 80096aa:	990a      	ldr	r1, [sp, #40]	@ 0x28
 80096ac:	430b      	orrs	r3, r1
 80096ae:	d120      	bne.n	80096f2 <_dtoa_r+0xa72>
 80096b0:	2a00      	cmp	r2, #0
 80096b2:	dded      	ble.n	8009690 <_dtoa_r+0xa10>
 80096b4:	4649      	mov	r1, r9
 80096b6:	2201      	movs	r2, #1
 80096b8:	4658      	mov	r0, fp
 80096ba:	f000 fbb3 	bl	8009e24 <__lshift>
 80096be:	4621      	mov	r1, r4
 80096c0:	4681      	mov	r9, r0
 80096c2:	f000 fc1b 	bl	8009efc <__mcmp>
 80096c6:	2800      	cmp	r0, #0
 80096c8:	dc03      	bgt.n	80096d2 <_dtoa_r+0xa52>
 80096ca:	d1e1      	bne.n	8009690 <_dtoa_r+0xa10>
 80096cc:	f018 0f01 	tst.w	r8, #1
 80096d0:	d0de      	beq.n	8009690 <_dtoa_r+0xa10>
 80096d2:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 80096d6:	d1d8      	bne.n	800968a <_dtoa_r+0xa0a>
 80096d8:	9a00      	ldr	r2, [sp, #0]
 80096da:	2339      	movs	r3, #57	@ 0x39
 80096dc:	7013      	strb	r3, [r2, #0]
 80096de:	4633      	mov	r3, r6
 80096e0:	461e      	mov	r6, r3
 80096e2:	3b01      	subs	r3, #1
 80096e4:	f816 2c01 	ldrb.w	r2, [r6, #-1]
 80096e8:	2a39      	cmp	r2, #57	@ 0x39
 80096ea:	d052      	beq.n	8009792 <_dtoa_r+0xb12>
 80096ec:	3201      	adds	r2, #1
 80096ee:	701a      	strb	r2, [r3, #0]
 80096f0:	e612      	b.n	8009318 <_dtoa_r+0x698>
 80096f2:	2a00      	cmp	r2, #0
 80096f4:	dd07      	ble.n	8009706 <_dtoa_r+0xa86>
 80096f6:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 80096fa:	d0ed      	beq.n	80096d8 <_dtoa_r+0xa58>
 80096fc:	9a00      	ldr	r2, [sp, #0]
 80096fe:	f108 0301 	add.w	r3, r8, #1
 8009702:	7013      	strb	r3, [r2, #0]
 8009704:	e608      	b.n	8009318 <_dtoa_r+0x698>
 8009706:	9b07      	ldr	r3, [sp, #28]
 8009708:	9a07      	ldr	r2, [sp, #28]
 800970a:	f803 8c01 	strb.w	r8, [r3, #-1]
 800970e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8009710:	4293      	cmp	r3, r2
 8009712:	d028      	beq.n	8009766 <_dtoa_r+0xae6>
 8009714:	4649      	mov	r1, r9
 8009716:	2300      	movs	r3, #0
 8009718:	220a      	movs	r2, #10
 800971a:	4658      	mov	r0, fp
 800971c:	f000 f9d6 	bl	8009acc <__multadd>
 8009720:	42af      	cmp	r7, r5
 8009722:	4681      	mov	r9, r0
 8009724:	f04f 0300 	mov.w	r3, #0
 8009728:	f04f 020a 	mov.w	r2, #10
 800972c:	4639      	mov	r1, r7
 800972e:	4658      	mov	r0, fp
 8009730:	d107      	bne.n	8009742 <_dtoa_r+0xac2>
 8009732:	f000 f9cb 	bl	8009acc <__multadd>
 8009736:	4607      	mov	r7, r0
 8009738:	4605      	mov	r5, r0
 800973a:	9b07      	ldr	r3, [sp, #28]
 800973c:	3301      	adds	r3, #1
 800973e:	9307      	str	r3, [sp, #28]
 8009740:	e774      	b.n	800962c <_dtoa_r+0x9ac>
 8009742:	f000 f9c3 	bl	8009acc <__multadd>
 8009746:	4629      	mov	r1, r5
 8009748:	4607      	mov	r7, r0
 800974a:	2300      	movs	r3, #0
 800974c:	220a      	movs	r2, #10
 800974e:	4658      	mov	r0, fp
 8009750:	f000 f9bc 	bl	8009acc <__multadd>
 8009754:	4605      	mov	r5, r0
 8009756:	e7f0      	b.n	800973a <_dtoa_r+0xaba>
 8009758:	9b00      	ldr	r3, [sp, #0]
 800975a:	2b00      	cmp	r3, #0
 800975c:	bfcc      	ite	gt
 800975e:	461e      	movgt	r6, r3
 8009760:	2601      	movle	r6, #1
 8009762:	4456      	add	r6, sl
 8009764:	2700      	movs	r7, #0
 8009766:	4649      	mov	r1, r9
 8009768:	2201      	movs	r2, #1
 800976a:	4658      	mov	r0, fp
 800976c:	f000 fb5a 	bl	8009e24 <__lshift>
 8009770:	4621      	mov	r1, r4
 8009772:	4681      	mov	r9, r0
 8009774:	f000 fbc2 	bl	8009efc <__mcmp>
 8009778:	2800      	cmp	r0, #0
 800977a:	dcb0      	bgt.n	80096de <_dtoa_r+0xa5e>
 800977c:	d102      	bne.n	8009784 <_dtoa_r+0xb04>
 800977e:	f018 0f01 	tst.w	r8, #1
 8009782:	d1ac      	bne.n	80096de <_dtoa_r+0xa5e>
 8009784:	4633      	mov	r3, r6
 8009786:	461e      	mov	r6, r3
 8009788:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 800978c:	2a30      	cmp	r2, #48	@ 0x30
 800978e:	d0fa      	beq.n	8009786 <_dtoa_r+0xb06>
 8009790:	e5c2      	b.n	8009318 <_dtoa_r+0x698>
 8009792:	459a      	cmp	sl, r3
 8009794:	d1a4      	bne.n	80096e0 <_dtoa_r+0xa60>
 8009796:	9b04      	ldr	r3, [sp, #16]
 8009798:	3301      	adds	r3, #1
 800979a:	9304      	str	r3, [sp, #16]
 800979c:	2331      	movs	r3, #49	@ 0x31
 800979e:	f88a 3000 	strb.w	r3, [sl]
 80097a2:	e5b9      	b.n	8009318 <_dtoa_r+0x698>
 80097a4:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 80097a6:	f8df a05c 	ldr.w	sl, [pc, #92]	@ 8009804 <_dtoa_r+0xb84>
 80097aa:	b11b      	cbz	r3, 80097b4 <_dtoa_r+0xb34>
 80097ac:	f10a 0308 	add.w	r3, sl, #8
 80097b0:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 80097b2:	6013      	str	r3, [r2, #0]
 80097b4:	4650      	mov	r0, sl
 80097b6:	b019      	add	sp, #100	@ 0x64
 80097b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80097bc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80097be:	2b01      	cmp	r3, #1
 80097c0:	f77f ae37 	ble.w	8009432 <_dtoa_r+0x7b2>
 80097c4:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80097c6:	930a      	str	r3, [sp, #40]	@ 0x28
 80097c8:	2001      	movs	r0, #1
 80097ca:	e655      	b.n	8009478 <_dtoa_r+0x7f8>
 80097cc:	9b00      	ldr	r3, [sp, #0]
 80097ce:	2b00      	cmp	r3, #0
 80097d0:	f77f aed6 	ble.w	8009580 <_dtoa_r+0x900>
 80097d4:	4656      	mov	r6, sl
 80097d6:	4621      	mov	r1, r4
 80097d8:	4648      	mov	r0, r9
 80097da:	f7ff f9c6 	bl	8008b6a <quorem>
 80097de:	f100 0830 	add.w	r8, r0, #48	@ 0x30
 80097e2:	f806 8b01 	strb.w	r8, [r6], #1
 80097e6:	9b00      	ldr	r3, [sp, #0]
 80097e8:	eba6 020a 	sub.w	r2, r6, sl
 80097ec:	4293      	cmp	r3, r2
 80097ee:	ddb3      	ble.n	8009758 <_dtoa_r+0xad8>
 80097f0:	4649      	mov	r1, r9
 80097f2:	2300      	movs	r3, #0
 80097f4:	220a      	movs	r2, #10
 80097f6:	4658      	mov	r0, fp
 80097f8:	f000 f968 	bl	8009acc <__multadd>
 80097fc:	4681      	mov	r9, r0
 80097fe:	e7ea      	b.n	80097d6 <_dtoa_r+0xb56>
 8009800:	0800af19 	.word	0x0800af19
 8009804:	0800ae9d 	.word	0x0800ae9d

08009808 <_free_r>:
 8009808:	b538      	push	{r3, r4, r5, lr}
 800980a:	4605      	mov	r5, r0
 800980c:	2900      	cmp	r1, #0
 800980e:	d041      	beq.n	8009894 <_free_r+0x8c>
 8009810:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8009814:	1f0c      	subs	r4, r1, #4
 8009816:	2b00      	cmp	r3, #0
 8009818:	bfb8      	it	lt
 800981a:	18e4      	addlt	r4, r4, r3
 800981c:	f000 f8e8 	bl	80099f0 <__malloc_lock>
 8009820:	4a1d      	ldr	r2, [pc, #116]	@ (8009898 <_free_r+0x90>)
 8009822:	6813      	ldr	r3, [r2, #0]
 8009824:	b933      	cbnz	r3, 8009834 <_free_r+0x2c>
 8009826:	6063      	str	r3, [r4, #4]
 8009828:	6014      	str	r4, [r2, #0]
 800982a:	4628      	mov	r0, r5
 800982c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8009830:	f000 b8e4 	b.w	80099fc <__malloc_unlock>
 8009834:	42a3      	cmp	r3, r4
 8009836:	d908      	bls.n	800984a <_free_r+0x42>
 8009838:	6820      	ldr	r0, [r4, #0]
 800983a:	1821      	adds	r1, r4, r0
 800983c:	428b      	cmp	r3, r1
 800983e:	bf01      	itttt	eq
 8009840:	6819      	ldreq	r1, [r3, #0]
 8009842:	685b      	ldreq	r3, [r3, #4]
 8009844:	1809      	addeq	r1, r1, r0
 8009846:	6021      	streq	r1, [r4, #0]
 8009848:	e7ed      	b.n	8009826 <_free_r+0x1e>
 800984a:	461a      	mov	r2, r3
 800984c:	685b      	ldr	r3, [r3, #4]
 800984e:	b10b      	cbz	r3, 8009854 <_free_r+0x4c>
 8009850:	42a3      	cmp	r3, r4
 8009852:	d9fa      	bls.n	800984a <_free_r+0x42>
 8009854:	6811      	ldr	r1, [r2, #0]
 8009856:	1850      	adds	r0, r2, r1
 8009858:	42a0      	cmp	r0, r4
 800985a:	d10b      	bne.n	8009874 <_free_r+0x6c>
 800985c:	6820      	ldr	r0, [r4, #0]
 800985e:	4401      	add	r1, r0
 8009860:	1850      	adds	r0, r2, r1
 8009862:	4283      	cmp	r3, r0
 8009864:	6011      	str	r1, [r2, #0]
 8009866:	d1e0      	bne.n	800982a <_free_r+0x22>
 8009868:	6818      	ldr	r0, [r3, #0]
 800986a:	685b      	ldr	r3, [r3, #4]
 800986c:	6053      	str	r3, [r2, #4]
 800986e:	4408      	add	r0, r1
 8009870:	6010      	str	r0, [r2, #0]
 8009872:	e7da      	b.n	800982a <_free_r+0x22>
 8009874:	d902      	bls.n	800987c <_free_r+0x74>
 8009876:	230c      	movs	r3, #12
 8009878:	602b      	str	r3, [r5, #0]
 800987a:	e7d6      	b.n	800982a <_free_r+0x22>
 800987c:	6820      	ldr	r0, [r4, #0]
 800987e:	1821      	adds	r1, r4, r0
 8009880:	428b      	cmp	r3, r1
 8009882:	bf04      	itt	eq
 8009884:	6819      	ldreq	r1, [r3, #0]
 8009886:	685b      	ldreq	r3, [r3, #4]
 8009888:	6063      	str	r3, [r4, #4]
 800988a:	bf04      	itt	eq
 800988c:	1809      	addeq	r1, r1, r0
 800988e:	6021      	streq	r1, [r4, #0]
 8009890:	6054      	str	r4, [r2, #4]
 8009892:	e7ca      	b.n	800982a <_free_r+0x22>
 8009894:	bd38      	pop	{r3, r4, r5, pc}
 8009896:	bf00      	nop
 8009898:	20000694 	.word	0x20000694

0800989c <malloc>:
 800989c:	4b02      	ldr	r3, [pc, #8]	@ (80098a8 <malloc+0xc>)
 800989e:	4601      	mov	r1, r0
 80098a0:	6818      	ldr	r0, [r3, #0]
 80098a2:	f000 b825 	b.w	80098f0 <_malloc_r>
 80098a6:	bf00      	nop
 80098a8:	20000018 	.word	0x20000018

080098ac <sbrk_aligned>:
 80098ac:	b570      	push	{r4, r5, r6, lr}
 80098ae:	4e0f      	ldr	r6, [pc, #60]	@ (80098ec <sbrk_aligned+0x40>)
 80098b0:	460c      	mov	r4, r1
 80098b2:	6831      	ldr	r1, [r6, #0]
 80098b4:	4605      	mov	r5, r0
 80098b6:	b911      	cbnz	r1, 80098be <sbrk_aligned+0x12>
 80098b8:	f001 f80c 	bl	800a8d4 <_sbrk_r>
 80098bc:	6030      	str	r0, [r6, #0]
 80098be:	4621      	mov	r1, r4
 80098c0:	4628      	mov	r0, r5
 80098c2:	f001 f807 	bl	800a8d4 <_sbrk_r>
 80098c6:	1c43      	adds	r3, r0, #1
 80098c8:	d103      	bne.n	80098d2 <sbrk_aligned+0x26>
 80098ca:	f04f 34ff 	mov.w	r4, #4294967295
 80098ce:	4620      	mov	r0, r4
 80098d0:	bd70      	pop	{r4, r5, r6, pc}
 80098d2:	1cc4      	adds	r4, r0, #3
 80098d4:	f024 0403 	bic.w	r4, r4, #3
 80098d8:	42a0      	cmp	r0, r4
 80098da:	d0f8      	beq.n	80098ce <sbrk_aligned+0x22>
 80098dc:	1a21      	subs	r1, r4, r0
 80098de:	4628      	mov	r0, r5
 80098e0:	f000 fff8 	bl	800a8d4 <_sbrk_r>
 80098e4:	3001      	adds	r0, #1
 80098e6:	d1f2      	bne.n	80098ce <sbrk_aligned+0x22>
 80098e8:	e7ef      	b.n	80098ca <sbrk_aligned+0x1e>
 80098ea:	bf00      	nop
 80098ec:	20000690 	.word	0x20000690

080098f0 <_malloc_r>:
 80098f0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80098f4:	1ccd      	adds	r5, r1, #3
 80098f6:	f025 0503 	bic.w	r5, r5, #3
 80098fa:	3508      	adds	r5, #8
 80098fc:	2d0c      	cmp	r5, #12
 80098fe:	bf38      	it	cc
 8009900:	250c      	movcc	r5, #12
 8009902:	2d00      	cmp	r5, #0
 8009904:	4606      	mov	r6, r0
 8009906:	db01      	blt.n	800990c <_malloc_r+0x1c>
 8009908:	42a9      	cmp	r1, r5
 800990a:	d904      	bls.n	8009916 <_malloc_r+0x26>
 800990c:	230c      	movs	r3, #12
 800990e:	6033      	str	r3, [r6, #0]
 8009910:	2000      	movs	r0, #0
 8009912:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8009916:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 80099ec <_malloc_r+0xfc>
 800991a:	f000 f869 	bl	80099f0 <__malloc_lock>
 800991e:	f8d8 3000 	ldr.w	r3, [r8]
 8009922:	461c      	mov	r4, r3
 8009924:	bb44      	cbnz	r4, 8009978 <_malloc_r+0x88>
 8009926:	4629      	mov	r1, r5
 8009928:	4630      	mov	r0, r6
 800992a:	f7ff ffbf 	bl	80098ac <sbrk_aligned>
 800992e:	1c43      	adds	r3, r0, #1
 8009930:	4604      	mov	r4, r0
 8009932:	d158      	bne.n	80099e6 <_malloc_r+0xf6>
 8009934:	f8d8 4000 	ldr.w	r4, [r8]
 8009938:	4627      	mov	r7, r4
 800993a:	2f00      	cmp	r7, #0
 800993c:	d143      	bne.n	80099c6 <_malloc_r+0xd6>
 800993e:	2c00      	cmp	r4, #0
 8009940:	d04b      	beq.n	80099da <_malloc_r+0xea>
 8009942:	6823      	ldr	r3, [r4, #0]
 8009944:	4639      	mov	r1, r7
 8009946:	4630      	mov	r0, r6
 8009948:	eb04 0903 	add.w	r9, r4, r3
 800994c:	f000 ffc2 	bl	800a8d4 <_sbrk_r>
 8009950:	4581      	cmp	r9, r0
 8009952:	d142      	bne.n	80099da <_malloc_r+0xea>
 8009954:	6821      	ldr	r1, [r4, #0]
 8009956:	1a6d      	subs	r5, r5, r1
 8009958:	4629      	mov	r1, r5
 800995a:	4630      	mov	r0, r6
 800995c:	f7ff ffa6 	bl	80098ac <sbrk_aligned>
 8009960:	3001      	adds	r0, #1
 8009962:	d03a      	beq.n	80099da <_malloc_r+0xea>
 8009964:	6823      	ldr	r3, [r4, #0]
 8009966:	442b      	add	r3, r5
 8009968:	6023      	str	r3, [r4, #0]
 800996a:	f8d8 3000 	ldr.w	r3, [r8]
 800996e:	685a      	ldr	r2, [r3, #4]
 8009970:	bb62      	cbnz	r2, 80099cc <_malloc_r+0xdc>
 8009972:	f8c8 7000 	str.w	r7, [r8]
 8009976:	e00f      	b.n	8009998 <_malloc_r+0xa8>
 8009978:	6822      	ldr	r2, [r4, #0]
 800997a:	1b52      	subs	r2, r2, r5
 800997c:	d420      	bmi.n	80099c0 <_malloc_r+0xd0>
 800997e:	2a0b      	cmp	r2, #11
 8009980:	d917      	bls.n	80099b2 <_malloc_r+0xc2>
 8009982:	1961      	adds	r1, r4, r5
 8009984:	42a3      	cmp	r3, r4
 8009986:	6025      	str	r5, [r4, #0]
 8009988:	bf18      	it	ne
 800998a:	6059      	strne	r1, [r3, #4]
 800998c:	6863      	ldr	r3, [r4, #4]
 800998e:	bf08      	it	eq
 8009990:	f8c8 1000 	streq.w	r1, [r8]
 8009994:	5162      	str	r2, [r4, r5]
 8009996:	604b      	str	r3, [r1, #4]
 8009998:	4630      	mov	r0, r6
 800999a:	f000 f82f 	bl	80099fc <__malloc_unlock>
 800999e:	f104 000b 	add.w	r0, r4, #11
 80099a2:	1d23      	adds	r3, r4, #4
 80099a4:	f020 0007 	bic.w	r0, r0, #7
 80099a8:	1ac2      	subs	r2, r0, r3
 80099aa:	bf1c      	itt	ne
 80099ac:	1a1b      	subne	r3, r3, r0
 80099ae:	50a3      	strne	r3, [r4, r2]
 80099b0:	e7af      	b.n	8009912 <_malloc_r+0x22>
 80099b2:	6862      	ldr	r2, [r4, #4]
 80099b4:	42a3      	cmp	r3, r4
 80099b6:	bf0c      	ite	eq
 80099b8:	f8c8 2000 	streq.w	r2, [r8]
 80099bc:	605a      	strne	r2, [r3, #4]
 80099be:	e7eb      	b.n	8009998 <_malloc_r+0xa8>
 80099c0:	4623      	mov	r3, r4
 80099c2:	6864      	ldr	r4, [r4, #4]
 80099c4:	e7ae      	b.n	8009924 <_malloc_r+0x34>
 80099c6:	463c      	mov	r4, r7
 80099c8:	687f      	ldr	r7, [r7, #4]
 80099ca:	e7b6      	b.n	800993a <_malloc_r+0x4a>
 80099cc:	461a      	mov	r2, r3
 80099ce:	685b      	ldr	r3, [r3, #4]
 80099d0:	42a3      	cmp	r3, r4
 80099d2:	d1fb      	bne.n	80099cc <_malloc_r+0xdc>
 80099d4:	2300      	movs	r3, #0
 80099d6:	6053      	str	r3, [r2, #4]
 80099d8:	e7de      	b.n	8009998 <_malloc_r+0xa8>
 80099da:	230c      	movs	r3, #12
 80099dc:	6033      	str	r3, [r6, #0]
 80099de:	4630      	mov	r0, r6
 80099e0:	f000 f80c 	bl	80099fc <__malloc_unlock>
 80099e4:	e794      	b.n	8009910 <_malloc_r+0x20>
 80099e6:	6005      	str	r5, [r0, #0]
 80099e8:	e7d6      	b.n	8009998 <_malloc_r+0xa8>
 80099ea:	bf00      	nop
 80099ec:	20000694 	.word	0x20000694

080099f0 <__malloc_lock>:
 80099f0:	4801      	ldr	r0, [pc, #4]	@ (80099f8 <__malloc_lock+0x8>)
 80099f2:	f7ff b8b8 	b.w	8008b66 <__retarget_lock_acquire_recursive>
 80099f6:	bf00      	nop
 80099f8:	2000068c 	.word	0x2000068c

080099fc <__malloc_unlock>:
 80099fc:	4801      	ldr	r0, [pc, #4]	@ (8009a04 <__malloc_unlock+0x8>)
 80099fe:	f7ff b8b3 	b.w	8008b68 <__retarget_lock_release_recursive>
 8009a02:	bf00      	nop
 8009a04:	2000068c 	.word	0x2000068c

08009a08 <_Balloc>:
 8009a08:	b570      	push	{r4, r5, r6, lr}
 8009a0a:	69c6      	ldr	r6, [r0, #28]
 8009a0c:	4604      	mov	r4, r0
 8009a0e:	460d      	mov	r5, r1
 8009a10:	b976      	cbnz	r6, 8009a30 <_Balloc+0x28>
 8009a12:	2010      	movs	r0, #16
 8009a14:	f7ff ff42 	bl	800989c <malloc>
 8009a18:	4602      	mov	r2, r0
 8009a1a:	61e0      	str	r0, [r4, #28]
 8009a1c:	b920      	cbnz	r0, 8009a28 <_Balloc+0x20>
 8009a1e:	4b18      	ldr	r3, [pc, #96]	@ (8009a80 <_Balloc+0x78>)
 8009a20:	4818      	ldr	r0, [pc, #96]	@ (8009a84 <_Balloc+0x7c>)
 8009a22:	216b      	movs	r1, #107	@ 0x6b
 8009a24:	f000 ff74 	bl	800a910 <__assert_func>
 8009a28:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8009a2c:	6006      	str	r6, [r0, #0]
 8009a2e:	60c6      	str	r6, [r0, #12]
 8009a30:	69e6      	ldr	r6, [r4, #28]
 8009a32:	68f3      	ldr	r3, [r6, #12]
 8009a34:	b183      	cbz	r3, 8009a58 <_Balloc+0x50>
 8009a36:	69e3      	ldr	r3, [r4, #28]
 8009a38:	68db      	ldr	r3, [r3, #12]
 8009a3a:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 8009a3e:	b9b8      	cbnz	r0, 8009a70 <_Balloc+0x68>
 8009a40:	2101      	movs	r1, #1
 8009a42:	fa01 f605 	lsl.w	r6, r1, r5
 8009a46:	1d72      	adds	r2, r6, #5
 8009a48:	0092      	lsls	r2, r2, #2
 8009a4a:	4620      	mov	r0, r4
 8009a4c:	f000 ff7e 	bl	800a94c <_calloc_r>
 8009a50:	b160      	cbz	r0, 8009a6c <_Balloc+0x64>
 8009a52:	e9c0 5601 	strd	r5, r6, [r0, #4]
 8009a56:	e00e      	b.n	8009a76 <_Balloc+0x6e>
 8009a58:	2221      	movs	r2, #33	@ 0x21
 8009a5a:	2104      	movs	r1, #4
 8009a5c:	4620      	mov	r0, r4
 8009a5e:	f000 ff75 	bl	800a94c <_calloc_r>
 8009a62:	69e3      	ldr	r3, [r4, #28]
 8009a64:	60f0      	str	r0, [r6, #12]
 8009a66:	68db      	ldr	r3, [r3, #12]
 8009a68:	2b00      	cmp	r3, #0
 8009a6a:	d1e4      	bne.n	8009a36 <_Balloc+0x2e>
 8009a6c:	2000      	movs	r0, #0
 8009a6e:	bd70      	pop	{r4, r5, r6, pc}
 8009a70:	6802      	ldr	r2, [r0, #0]
 8009a72:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 8009a76:	2300      	movs	r3, #0
 8009a78:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8009a7c:	e7f7      	b.n	8009a6e <_Balloc+0x66>
 8009a7e:	bf00      	nop
 8009a80:	0800aeaa 	.word	0x0800aeaa
 8009a84:	0800af2a 	.word	0x0800af2a

08009a88 <_Bfree>:
 8009a88:	b570      	push	{r4, r5, r6, lr}
 8009a8a:	69c6      	ldr	r6, [r0, #28]
 8009a8c:	4605      	mov	r5, r0
 8009a8e:	460c      	mov	r4, r1
 8009a90:	b976      	cbnz	r6, 8009ab0 <_Bfree+0x28>
 8009a92:	2010      	movs	r0, #16
 8009a94:	f7ff ff02 	bl	800989c <malloc>
 8009a98:	4602      	mov	r2, r0
 8009a9a:	61e8      	str	r0, [r5, #28]
 8009a9c:	b920      	cbnz	r0, 8009aa8 <_Bfree+0x20>
 8009a9e:	4b09      	ldr	r3, [pc, #36]	@ (8009ac4 <_Bfree+0x3c>)
 8009aa0:	4809      	ldr	r0, [pc, #36]	@ (8009ac8 <_Bfree+0x40>)
 8009aa2:	218f      	movs	r1, #143	@ 0x8f
 8009aa4:	f000 ff34 	bl	800a910 <__assert_func>
 8009aa8:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8009aac:	6006      	str	r6, [r0, #0]
 8009aae:	60c6      	str	r6, [r0, #12]
 8009ab0:	b13c      	cbz	r4, 8009ac2 <_Bfree+0x3a>
 8009ab2:	69eb      	ldr	r3, [r5, #28]
 8009ab4:	6862      	ldr	r2, [r4, #4]
 8009ab6:	68db      	ldr	r3, [r3, #12]
 8009ab8:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8009abc:	6021      	str	r1, [r4, #0]
 8009abe:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 8009ac2:	bd70      	pop	{r4, r5, r6, pc}
 8009ac4:	0800aeaa 	.word	0x0800aeaa
 8009ac8:	0800af2a 	.word	0x0800af2a

08009acc <__multadd>:
 8009acc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009ad0:	690d      	ldr	r5, [r1, #16]
 8009ad2:	4607      	mov	r7, r0
 8009ad4:	460c      	mov	r4, r1
 8009ad6:	461e      	mov	r6, r3
 8009ad8:	f101 0c14 	add.w	ip, r1, #20
 8009adc:	2000      	movs	r0, #0
 8009ade:	f8dc 3000 	ldr.w	r3, [ip]
 8009ae2:	b299      	uxth	r1, r3
 8009ae4:	fb02 6101 	mla	r1, r2, r1, r6
 8009ae8:	0c1e      	lsrs	r6, r3, #16
 8009aea:	0c0b      	lsrs	r3, r1, #16
 8009aec:	fb02 3306 	mla	r3, r2, r6, r3
 8009af0:	b289      	uxth	r1, r1
 8009af2:	3001      	adds	r0, #1
 8009af4:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 8009af8:	4285      	cmp	r5, r0
 8009afa:	f84c 1b04 	str.w	r1, [ip], #4
 8009afe:	ea4f 4613 	mov.w	r6, r3, lsr #16
 8009b02:	dcec      	bgt.n	8009ade <__multadd+0x12>
 8009b04:	b30e      	cbz	r6, 8009b4a <__multadd+0x7e>
 8009b06:	68a3      	ldr	r3, [r4, #8]
 8009b08:	42ab      	cmp	r3, r5
 8009b0a:	dc19      	bgt.n	8009b40 <__multadd+0x74>
 8009b0c:	6861      	ldr	r1, [r4, #4]
 8009b0e:	4638      	mov	r0, r7
 8009b10:	3101      	adds	r1, #1
 8009b12:	f7ff ff79 	bl	8009a08 <_Balloc>
 8009b16:	4680      	mov	r8, r0
 8009b18:	b928      	cbnz	r0, 8009b26 <__multadd+0x5a>
 8009b1a:	4602      	mov	r2, r0
 8009b1c:	4b0c      	ldr	r3, [pc, #48]	@ (8009b50 <__multadd+0x84>)
 8009b1e:	480d      	ldr	r0, [pc, #52]	@ (8009b54 <__multadd+0x88>)
 8009b20:	21ba      	movs	r1, #186	@ 0xba
 8009b22:	f000 fef5 	bl	800a910 <__assert_func>
 8009b26:	6922      	ldr	r2, [r4, #16]
 8009b28:	3202      	adds	r2, #2
 8009b2a:	f104 010c 	add.w	r1, r4, #12
 8009b2e:	0092      	lsls	r2, r2, #2
 8009b30:	300c      	adds	r0, #12
 8009b32:	f000 fedf 	bl	800a8f4 <memcpy>
 8009b36:	4621      	mov	r1, r4
 8009b38:	4638      	mov	r0, r7
 8009b3a:	f7ff ffa5 	bl	8009a88 <_Bfree>
 8009b3e:	4644      	mov	r4, r8
 8009b40:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 8009b44:	3501      	adds	r5, #1
 8009b46:	615e      	str	r6, [r3, #20]
 8009b48:	6125      	str	r5, [r4, #16]
 8009b4a:	4620      	mov	r0, r4
 8009b4c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009b50:	0800af19 	.word	0x0800af19
 8009b54:	0800af2a 	.word	0x0800af2a

08009b58 <__hi0bits>:
 8009b58:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
 8009b5c:	4603      	mov	r3, r0
 8009b5e:	bf36      	itet	cc
 8009b60:	0403      	lslcc	r3, r0, #16
 8009b62:	2000      	movcs	r0, #0
 8009b64:	2010      	movcc	r0, #16
 8009b66:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8009b6a:	bf3c      	itt	cc
 8009b6c:	021b      	lslcc	r3, r3, #8
 8009b6e:	3008      	addcc	r0, #8
 8009b70:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 8009b74:	bf3c      	itt	cc
 8009b76:	011b      	lslcc	r3, r3, #4
 8009b78:	3004      	addcc	r0, #4
 8009b7a:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8009b7e:	bf3c      	itt	cc
 8009b80:	009b      	lslcc	r3, r3, #2
 8009b82:	3002      	addcc	r0, #2
 8009b84:	2b00      	cmp	r3, #0
 8009b86:	db05      	blt.n	8009b94 <__hi0bits+0x3c>
 8009b88:	f013 4f80 	tst.w	r3, #1073741824	@ 0x40000000
 8009b8c:	f100 0001 	add.w	r0, r0, #1
 8009b90:	bf08      	it	eq
 8009b92:	2020      	moveq	r0, #32
 8009b94:	4770      	bx	lr

08009b96 <__lo0bits>:
 8009b96:	6803      	ldr	r3, [r0, #0]
 8009b98:	4602      	mov	r2, r0
 8009b9a:	f013 0007 	ands.w	r0, r3, #7
 8009b9e:	d00b      	beq.n	8009bb8 <__lo0bits+0x22>
 8009ba0:	07d9      	lsls	r1, r3, #31
 8009ba2:	d421      	bmi.n	8009be8 <__lo0bits+0x52>
 8009ba4:	0798      	lsls	r0, r3, #30
 8009ba6:	bf49      	itett	mi
 8009ba8:	085b      	lsrmi	r3, r3, #1
 8009baa:	089b      	lsrpl	r3, r3, #2
 8009bac:	2001      	movmi	r0, #1
 8009bae:	6013      	strmi	r3, [r2, #0]
 8009bb0:	bf5c      	itt	pl
 8009bb2:	6013      	strpl	r3, [r2, #0]
 8009bb4:	2002      	movpl	r0, #2
 8009bb6:	4770      	bx	lr
 8009bb8:	b299      	uxth	r1, r3
 8009bba:	b909      	cbnz	r1, 8009bc0 <__lo0bits+0x2a>
 8009bbc:	0c1b      	lsrs	r3, r3, #16
 8009bbe:	2010      	movs	r0, #16
 8009bc0:	b2d9      	uxtb	r1, r3
 8009bc2:	b909      	cbnz	r1, 8009bc8 <__lo0bits+0x32>
 8009bc4:	3008      	adds	r0, #8
 8009bc6:	0a1b      	lsrs	r3, r3, #8
 8009bc8:	0719      	lsls	r1, r3, #28
 8009bca:	bf04      	itt	eq
 8009bcc:	091b      	lsreq	r3, r3, #4
 8009bce:	3004      	addeq	r0, #4
 8009bd0:	0799      	lsls	r1, r3, #30
 8009bd2:	bf04      	itt	eq
 8009bd4:	089b      	lsreq	r3, r3, #2
 8009bd6:	3002      	addeq	r0, #2
 8009bd8:	07d9      	lsls	r1, r3, #31
 8009bda:	d403      	bmi.n	8009be4 <__lo0bits+0x4e>
 8009bdc:	085b      	lsrs	r3, r3, #1
 8009bde:	f100 0001 	add.w	r0, r0, #1
 8009be2:	d003      	beq.n	8009bec <__lo0bits+0x56>
 8009be4:	6013      	str	r3, [r2, #0]
 8009be6:	4770      	bx	lr
 8009be8:	2000      	movs	r0, #0
 8009bea:	4770      	bx	lr
 8009bec:	2020      	movs	r0, #32
 8009bee:	4770      	bx	lr

08009bf0 <__i2b>:
 8009bf0:	b510      	push	{r4, lr}
 8009bf2:	460c      	mov	r4, r1
 8009bf4:	2101      	movs	r1, #1
 8009bf6:	f7ff ff07 	bl	8009a08 <_Balloc>
 8009bfa:	4602      	mov	r2, r0
 8009bfc:	b928      	cbnz	r0, 8009c0a <__i2b+0x1a>
 8009bfe:	4b05      	ldr	r3, [pc, #20]	@ (8009c14 <__i2b+0x24>)
 8009c00:	4805      	ldr	r0, [pc, #20]	@ (8009c18 <__i2b+0x28>)
 8009c02:	f240 1145 	movw	r1, #325	@ 0x145
 8009c06:	f000 fe83 	bl	800a910 <__assert_func>
 8009c0a:	2301      	movs	r3, #1
 8009c0c:	6144      	str	r4, [r0, #20]
 8009c0e:	6103      	str	r3, [r0, #16]
 8009c10:	bd10      	pop	{r4, pc}
 8009c12:	bf00      	nop
 8009c14:	0800af19 	.word	0x0800af19
 8009c18:	0800af2a 	.word	0x0800af2a

08009c1c <__multiply>:
 8009c1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009c20:	4614      	mov	r4, r2
 8009c22:	690a      	ldr	r2, [r1, #16]
 8009c24:	6923      	ldr	r3, [r4, #16]
 8009c26:	429a      	cmp	r2, r3
 8009c28:	bfa8      	it	ge
 8009c2a:	4623      	movge	r3, r4
 8009c2c:	460f      	mov	r7, r1
 8009c2e:	bfa4      	itt	ge
 8009c30:	460c      	movge	r4, r1
 8009c32:	461f      	movge	r7, r3
 8009c34:	f8d4 a010 	ldr.w	sl, [r4, #16]
 8009c38:	f8d7 9010 	ldr.w	r9, [r7, #16]
 8009c3c:	68a3      	ldr	r3, [r4, #8]
 8009c3e:	6861      	ldr	r1, [r4, #4]
 8009c40:	eb0a 0609 	add.w	r6, sl, r9
 8009c44:	42b3      	cmp	r3, r6
 8009c46:	b085      	sub	sp, #20
 8009c48:	bfb8      	it	lt
 8009c4a:	3101      	addlt	r1, #1
 8009c4c:	f7ff fedc 	bl	8009a08 <_Balloc>
 8009c50:	b930      	cbnz	r0, 8009c60 <__multiply+0x44>
 8009c52:	4602      	mov	r2, r0
 8009c54:	4b44      	ldr	r3, [pc, #272]	@ (8009d68 <__multiply+0x14c>)
 8009c56:	4845      	ldr	r0, [pc, #276]	@ (8009d6c <__multiply+0x150>)
 8009c58:	f44f 71b1 	mov.w	r1, #354	@ 0x162
 8009c5c:	f000 fe58 	bl	800a910 <__assert_func>
 8009c60:	f100 0514 	add.w	r5, r0, #20
 8009c64:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 8009c68:	462b      	mov	r3, r5
 8009c6a:	2200      	movs	r2, #0
 8009c6c:	4543      	cmp	r3, r8
 8009c6e:	d321      	bcc.n	8009cb4 <__multiply+0x98>
 8009c70:	f107 0114 	add.w	r1, r7, #20
 8009c74:	f104 0214 	add.w	r2, r4, #20
 8009c78:	eb02 028a 	add.w	r2, r2, sl, lsl #2
 8009c7c:	eb01 0389 	add.w	r3, r1, r9, lsl #2
 8009c80:	9302      	str	r3, [sp, #8]
 8009c82:	1b13      	subs	r3, r2, r4
 8009c84:	3b15      	subs	r3, #21
 8009c86:	f023 0303 	bic.w	r3, r3, #3
 8009c8a:	3304      	adds	r3, #4
 8009c8c:	f104 0715 	add.w	r7, r4, #21
 8009c90:	42ba      	cmp	r2, r7
 8009c92:	bf38      	it	cc
 8009c94:	2304      	movcc	r3, #4
 8009c96:	9301      	str	r3, [sp, #4]
 8009c98:	9b02      	ldr	r3, [sp, #8]
 8009c9a:	9103      	str	r1, [sp, #12]
 8009c9c:	428b      	cmp	r3, r1
 8009c9e:	d80c      	bhi.n	8009cba <__multiply+0x9e>
 8009ca0:	2e00      	cmp	r6, #0
 8009ca2:	dd03      	ble.n	8009cac <__multiply+0x90>
 8009ca4:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 8009ca8:	2b00      	cmp	r3, #0
 8009caa:	d05b      	beq.n	8009d64 <__multiply+0x148>
 8009cac:	6106      	str	r6, [r0, #16]
 8009cae:	b005      	add	sp, #20
 8009cb0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009cb4:	f843 2b04 	str.w	r2, [r3], #4
 8009cb8:	e7d8      	b.n	8009c6c <__multiply+0x50>
 8009cba:	f8b1 a000 	ldrh.w	sl, [r1]
 8009cbe:	f1ba 0f00 	cmp.w	sl, #0
 8009cc2:	d024      	beq.n	8009d0e <__multiply+0xf2>
 8009cc4:	f104 0e14 	add.w	lr, r4, #20
 8009cc8:	46a9      	mov	r9, r5
 8009cca:	f04f 0c00 	mov.w	ip, #0
 8009cce:	f85e 7b04 	ldr.w	r7, [lr], #4
 8009cd2:	f8d9 3000 	ldr.w	r3, [r9]
 8009cd6:	fa1f fb87 	uxth.w	fp, r7
 8009cda:	b29b      	uxth	r3, r3
 8009cdc:	fb0a 330b 	mla	r3, sl, fp, r3
 8009ce0:	ea4f 4b17 	mov.w	fp, r7, lsr #16
 8009ce4:	f8d9 7000 	ldr.w	r7, [r9]
 8009ce8:	4463      	add	r3, ip
 8009cea:	ea4f 4c17 	mov.w	ip, r7, lsr #16
 8009cee:	fb0a c70b 	mla	r7, sl, fp, ip
 8009cf2:	eb07 4713 	add.w	r7, r7, r3, lsr #16
 8009cf6:	b29b      	uxth	r3, r3
 8009cf8:	ea43 4307 	orr.w	r3, r3, r7, lsl #16
 8009cfc:	4572      	cmp	r2, lr
 8009cfe:	f849 3b04 	str.w	r3, [r9], #4
 8009d02:	ea4f 4c17 	mov.w	ip, r7, lsr #16
 8009d06:	d8e2      	bhi.n	8009cce <__multiply+0xb2>
 8009d08:	9b01      	ldr	r3, [sp, #4]
 8009d0a:	f845 c003 	str.w	ip, [r5, r3]
 8009d0e:	9b03      	ldr	r3, [sp, #12]
 8009d10:	f8b3 9002 	ldrh.w	r9, [r3, #2]
 8009d14:	3104      	adds	r1, #4
 8009d16:	f1b9 0f00 	cmp.w	r9, #0
 8009d1a:	d021      	beq.n	8009d60 <__multiply+0x144>
 8009d1c:	682b      	ldr	r3, [r5, #0]
 8009d1e:	f104 0c14 	add.w	ip, r4, #20
 8009d22:	46ae      	mov	lr, r5
 8009d24:	f04f 0a00 	mov.w	sl, #0
 8009d28:	f8bc b000 	ldrh.w	fp, [ip]
 8009d2c:	f8be 7002 	ldrh.w	r7, [lr, #2]
 8009d30:	fb09 770b 	mla	r7, r9, fp, r7
 8009d34:	4457      	add	r7, sl
 8009d36:	b29b      	uxth	r3, r3
 8009d38:	ea43 4307 	orr.w	r3, r3, r7, lsl #16
 8009d3c:	f84e 3b04 	str.w	r3, [lr], #4
 8009d40:	f85c 3b04 	ldr.w	r3, [ip], #4
 8009d44:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8009d48:	f8be 3000 	ldrh.w	r3, [lr]
 8009d4c:	fb09 330a 	mla	r3, r9, sl, r3
 8009d50:	eb03 4317 	add.w	r3, r3, r7, lsr #16
 8009d54:	4562      	cmp	r2, ip
 8009d56:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8009d5a:	d8e5      	bhi.n	8009d28 <__multiply+0x10c>
 8009d5c:	9f01      	ldr	r7, [sp, #4]
 8009d5e:	51eb      	str	r3, [r5, r7]
 8009d60:	3504      	adds	r5, #4
 8009d62:	e799      	b.n	8009c98 <__multiply+0x7c>
 8009d64:	3e01      	subs	r6, #1
 8009d66:	e79b      	b.n	8009ca0 <__multiply+0x84>
 8009d68:	0800af19 	.word	0x0800af19
 8009d6c:	0800af2a 	.word	0x0800af2a

08009d70 <__pow5mult>:
 8009d70:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8009d74:	4615      	mov	r5, r2
 8009d76:	f012 0203 	ands.w	r2, r2, #3
 8009d7a:	4607      	mov	r7, r0
 8009d7c:	460e      	mov	r6, r1
 8009d7e:	d007      	beq.n	8009d90 <__pow5mult+0x20>
 8009d80:	4c25      	ldr	r4, [pc, #148]	@ (8009e18 <__pow5mult+0xa8>)
 8009d82:	3a01      	subs	r2, #1
 8009d84:	2300      	movs	r3, #0
 8009d86:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 8009d8a:	f7ff fe9f 	bl	8009acc <__multadd>
 8009d8e:	4606      	mov	r6, r0
 8009d90:	10ad      	asrs	r5, r5, #2
 8009d92:	d03d      	beq.n	8009e10 <__pow5mult+0xa0>
 8009d94:	69fc      	ldr	r4, [r7, #28]
 8009d96:	b97c      	cbnz	r4, 8009db8 <__pow5mult+0x48>
 8009d98:	2010      	movs	r0, #16
 8009d9a:	f7ff fd7f 	bl	800989c <malloc>
 8009d9e:	4602      	mov	r2, r0
 8009da0:	61f8      	str	r0, [r7, #28]
 8009da2:	b928      	cbnz	r0, 8009db0 <__pow5mult+0x40>
 8009da4:	4b1d      	ldr	r3, [pc, #116]	@ (8009e1c <__pow5mult+0xac>)
 8009da6:	481e      	ldr	r0, [pc, #120]	@ (8009e20 <__pow5mult+0xb0>)
 8009da8:	f240 11b3 	movw	r1, #435	@ 0x1b3
 8009dac:	f000 fdb0 	bl	800a910 <__assert_func>
 8009db0:	e9c0 4401 	strd	r4, r4, [r0, #4]
 8009db4:	6004      	str	r4, [r0, #0]
 8009db6:	60c4      	str	r4, [r0, #12]
 8009db8:	f8d7 801c 	ldr.w	r8, [r7, #28]
 8009dbc:	f8d8 4008 	ldr.w	r4, [r8, #8]
 8009dc0:	b94c      	cbnz	r4, 8009dd6 <__pow5mult+0x66>
 8009dc2:	f240 2171 	movw	r1, #625	@ 0x271
 8009dc6:	4638      	mov	r0, r7
 8009dc8:	f7ff ff12 	bl	8009bf0 <__i2b>
 8009dcc:	2300      	movs	r3, #0
 8009dce:	f8c8 0008 	str.w	r0, [r8, #8]
 8009dd2:	4604      	mov	r4, r0
 8009dd4:	6003      	str	r3, [r0, #0]
 8009dd6:	f04f 0900 	mov.w	r9, #0
 8009dda:	07eb      	lsls	r3, r5, #31
 8009ddc:	d50a      	bpl.n	8009df4 <__pow5mult+0x84>
 8009dde:	4631      	mov	r1, r6
 8009de0:	4622      	mov	r2, r4
 8009de2:	4638      	mov	r0, r7
 8009de4:	f7ff ff1a 	bl	8009c1c <__multiply>
 8009de8:	4631      	mov	r1, r6
 8009dea:	4680      	mov	r8, r0
 8009dec:	4638      	mov	r0, r7
 8009dee:	f7ff fe4b 	bl	8009a88 <_Bfree>
 8009df2:	4646      	mov	r6, r8
 8009df4:	106d      	asrs	r5, r5, #1
 8009df6:	d00b      	beq.n	8009e10 <__pow5mult+0xa0>
 8009df8:	6820      	ldr	r0, [r4, #0]
 8009dfa:	b938      	cbnz	r0, 8009e0c <__pow5mult+0x9c>
 8009dfc:	4622      	mov	r2, r4
 8009dfe:	4621      	mov	r1, r4
 8009e00:	4638      	mov	r0, r7
 8009e02:	f7ff ff0b 	bl	8009c1c <__multiply>
 8009e06:	6020      	str	r0, [r4, #0]
 8009e08:	f8c0 9000 	str.w	r9, [r0]
 8009e0c:	4604      	mov	r4, r0
 8009e0e:	e7e4      	b.n	8009dda <__pow5mult+0x6a>
 8009e10:	4630      	mov	r0, r6
 8009e12:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8009e16:	bf00      	nop
 8009e18:	0800af84 	.word	0x0800af84
 8009e1c:	0800aeaa 	.word	0x0800aeaa
 8009e20:	0800af2a 	.word	0x0800af2a

08009e24 <__lshift>:
 8009e24:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8009e28:	460c      	mov	r4, r1
 8009e2a:	6849      	ldr	r1, [r1, #4]
 8009e2c:	6923      	ldr	r3, [r4, #16]
 8009e2e:	eb03 1862 	add.w	r8, r3, r2, asr #5
 8009e32:	68a3      	ldr	r3, [r4, #8]
 8009e34:	4607      	mov	r7, r0
 8009e36:	4691      	mov	r9, r2
 8009e38:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8009e3c:	f108 0601 	add.w	r6, r8, #1
 8009e40:	42b3      	cmp	r3, r6
 8009e42:	db0b      	blt.n	8009e5c <__lshift+0x38>
 8009e44:	4638      	mov	r0, r7
 8009e46:	f7ff fddf 	bl	8009a08 <_Balloc>
 8009e4a:	4605      	mov	r5, r0
 8009e4c:	b948      	cbnz	r0, 8009e62 <__lshift+0x3e>
 8009e4e:	4602      	mov	r2, r0
 8009e50:	4b28      	ldr	r3, [pc, #160]	@ (8009ef4 <__lshift+0xd0>)
 8009e52:	4829      	ldr	r0, [pc, #164]	@ (8009ef8 <__lshift+0xd4>)
 8009e54:	f44f 71ef 	mov.w	r1, #478	@ 0x1de
 8009e58:	f000 fd5a 	bl	800a910 <__assert_func>
 8009e5c:	3101      	adds	r1, #1
 8009e5e:	005b      	lsls	r3, r3, #1
 8009e60:	e7ee      	b.n	8009e40 <__lshift+0x1c>
 8009e62:	2300      	movs	r3, #0
 8009e64:	f100 0114 	add.w	r1, r0, #20
 8009e68:	f100 0210 	add.w	r2, r0, #16
 8009e6c:	4618      	mov	r0, r3
 8009e6e:	4553      	cmp	r3, sl
 8009e70:	db33      	blt.n	8009eda <__lshift+0xb6>
 8009e72:	6920      	ldr	r0, [r4, #16]
 8009e74:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8009e78:	f104 0314 	add.w	r3, r4, #20
 8009e7c:	f019 091f 	ands.w	r9, r9, #31
 8009e80:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8009e84:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 8009e88:	d02b      	beq.n	8009ee2 <__lshift+0xbe>
 8009e8a:	f1c9 0e20 	rsb	lr, r9, #32
 8009e8e:	468a      	mov	sl, r1
 8009e90:	2200      	movs	r2, #0
 8009e92:	6818      	ldr	r0, [r3, #0]
 8009e94:	fa00 f009 	lsl.w	r0, r0, r9
 8009e98:	4310      	orrs	r0, r2
 8009e9a:	f84a 0b04 	str.w	r0, [sl], #4
 8009e9e:	f853 2b04 	ldr.w	r2, [r3], #4
 8009ea2:	459c      	cmp	ip, r3
 8009ea4:	fa22 f20e 	lsr.w	r2, r2, lr
 8009ea8:	d8f3      	bhi.n	8009e92 <__lshift+0x6e>
 8009eaa:	ebac 0304 	sub.w	r3, ip, r4
 8009eae:	3b15      	subs	r3, #21
 8009eb0:	f023 0303 	bic.w	r3, r3, #3
 8009eb4:	3304      	adds	r3, #4
 8009eb6:	f104 0015 	add.w	r0, r4, #21
 8009eba:	4584      	cmp	ip, r0
 8009ebc:	bf38      	it	cc
 8009ebe:	2304      	movcc	r3, #4
 8009ec0:	50ca      	str	r2, [r1, r3]
 8009ec2:	b10a      	cbz	r2, 8009ec8 <__lshift+0xa4>
 8009ec4:	f108 0602 	add.w	r6, r8, #2
 8009ec8:	3e01      	subs	r6, #1
 8009eca:	4638      	mov	r0, r7
 8009ecc:	612e      	str	r6, [r5, #16]
 8009ece:	4621      	mov	r1, r4
 8009ed0:	f7ff fdda 	bl	8009a88 <_Bfree>
 8009ed4:	4628      	mov	r0, r5
 8009ed6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8009eda:	f842 0f04 	str.w	r0, [r2, #4]!
 8009ede:	3301      	adds	r3, #1
 8009ee0:	e7c5      	b.n	8009e6e <__lshift+0x4a>
 8009ee2:	3904      	subs	r1, #4
 8009ee4:	f853 2b04 	ldr.w	r2, [r3], #4
 8009ee8:	f841 2f04 	str.w	r2, [r1, #4]!
 8009eec:	459c      	cmp	ip, r3
 8009eee:	d8f9      	bhi.n	8009ee4 <__lshift+0xc0>
 8009ef0:	e7ea      	b.n	8009ec8 <__lshift+0xa4>
 8009ef2:	bf00      	nop
 8009ef4:	0800af19 	.word	0x0800af19
 8009ef8:	0800af2a 	.word	0x0800af2a

08009efc <__mcmp>:
 8009efc:	690a      	ldr	r2, [r1, #16]
 8009efe:	4603      	mov	r3, r0
 8009f00:	6900      	ldr	r0, [r0, #16]
 8009f02:	1a80      	subs	r0, r0, r2
 8009f04:	b530      	push	{r4, r5, lr}
 8009f06:	d10e      	bne.n	8009f26 <__mcmp+0x2a>
 8009f08:	3314      	adds	r3, #20
 8009f0a:	3114      	adds	r1, #20
 8009f0c:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 8009f10:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 8009f14:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 8009f18:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 8009f1c:	4295      	cmp	r5, r2
 8009f1e:	d003      	beq.n	8009f28 <__mcmp+0x2c>
 8009f20:	d205      	bcs.n	8009f2e <__mcmp+0x32>
 8009f22:	f04f 30ff 	mov.w	r0, #4294967295
 8009f26:	bd30      	pop	{r4, r5, pc}
 8009f28:	42a3      	cmp	r3, r4
 8009f2a:	d3f3      	bcc.n	8009f14 <__mcmp+0x18>
 8009f2c:	e7fb      	b.n	8009f26 <__mcmp+0x2a>
 8009f2e:	2001      	movs	r0, #1
 8009f30:	e7f9      	b.n	8009f26 <__mcmp+0x2a>
	...

08009f34 <__mdiff>:
 8009f34:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009f38:	4689      	mov	r9, r1
 8009f3a:	4606      	mov	r6, r0
 8009f3c:	4611      	mov	r1, r2
 8009f3e:	4648      	mov	r0, r9
 8009f40:	4614      	mov	r4, r2
 8009f42:	f7ff ffdb 	bl	8009efc <__mcmp>
 8009f46:	1e05      	subs	r5, r0, #0
 8009f48:	d112      	bne.n	8009f70 <__mdiff+0x3c>
 8009f4a:	4629      	mov	r1, r5
 8009f4c:	4630      	mov	r0, r6
 8009f4e:	f7ff fd5b 	bl	8009a08 <_Balloc>
 8009f52:	4602      	mov	r2, r0
 8009f54:	b928      	cbnz	r0, 8009f62 <__mdiff+0x2e>
 8009f56:	4b3f      	ldr	r3, [pc, #252]	@ (800a054 <__mdiff+0x120>)
 8009f58:	f240 2137 	movw	r1, #567	@ 0x237
 8009f5c:	483e      	ldr	r0, [pc, #248]	@ (800a058 <__mdiff+0x124>)
 8009f5e:	f000 fcd7 	bl	800a910 <__assert_func>
 8009f62:	2301      	movs	r3, #1
 8009f64:	e9c0 3504 	strd	r3, r5, [r0, #16]
 8009f68:	4610      	mov	r0, r2
 8009f6a:	b003      	add	sp, #12
 8009f6c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009f70:	bfbc      	itt	lt
 8009f72:	464b      	movlt	r3, r9
 8009f74:	46a1      	movlt	r9, r4
 8009f76:	4630      	mov	r0, r6
 8009f78:	f8d9 1004 	ldr.w	r1, [r9, #4]
 8009f7c:	bfba      	itte	lt
 8009f7e:	461c      	movlt	r4, r3
 8009f80:	2501      	movlt	r5, #1
 8009f82:	2500      	movge	r5, #0
 8009f84:	f7ff fd40 	bl	8009a08 <_Balloc>
 8009f88:	4602      	mov	r2, r0
 8009f8a:	b918      	cbnz	r0, 8009f94 <__mdiff+0x60>
 8009f8c:	4b31      	ldr	r3, [pc, #196]	@ (800a054 <__mdiff+0x120>)
 8009f8e:	f240 2145 	movw	r1, #581	@ 0x245
 8009f92:	e7e3      	b.n	8009f5c <__mdiff+0x28>
 8009f94:	f8d9 7010 	ldr.w	r7, [r9, #16]
 8009f98:	6926      	ldr	r6, [r4, #16]
 8009f9a:	60c5      	str	r5, [r0, #12]
 8009f9c:	f109 0310 	add.w	r3, r9, #16
 8009fa0:	f109 0514 	add.w	r5, r9, #20
 8009fa4:	f104 0e14 	add.w	lr, r4, #20
 8009fa8:	f100 0b14 	add.w	fp, r0, #20
 8009fac:	eb05 0887 	add.w	r8, r5, r7, lsl #2
 8009fb0:	eb0e 0686 	add.w	r6, lr, r6, lsl #2
 8009fb4:	9301      	str	r3, [sp, #4]
 8009fb6:	46d9      	mov	r9, fp
 8009fb8:	f04f 0c00 	mov.w	ip, #0
 8009fbc:	9b01      	ldr	r3, [sp, #4]
 8009fbe:	f85e 0b04 	ldr.w	r0, [lr], #4
 8009fc2:	f853 af04 	ldr.w	sl, [r3, #4]!
 8009fc6:	9301      	str	r3, [sp, #4]
 8009fc8:	fa1f f38a 	uxth.w	r3, sl
 8009fcc:	4619      	mov	r1, r3
 8009fce:	b283      	uxth	r3, r0
 8009fd0:	1acb      	subs	r3, r1, r3
 8009fd2:	0c00      	lsrs	r0, r0, #16
 8009fd4:	4463      	add	r3, ip
 8009fd6:	ebc0 401a 	rsb	r0, r0, sl, lsr #16
 8009fda:	eb00 4023 	add.w	r0, r0, r3, asr #16
 8009fde:	b29b      	uxth	r3, r3
 8009fe0:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 8009fe4:	4576      	cmp	r6, lr
 8009fe6:	f849 3b04 	str.w	r3, [r9], #4
 8009fea:	ea4f 4c20 	mov.w	ip, r0, asr #16
 8009fee:	d8e5      	bhi.n	8009fbc <__mdiff+0x88>
 8009ff0:	1b33      	subs	r3, r6, r4
 8009ff2:	3b15      	subs	r3, #21
 8009ff4:	f023 0303 	bic.w	r3, r3, #3
 8009ff8:	3415      	adds	r4, #21
 8009ffa:	3304      	adds	r3, #4
 8009ffc:	42a6      	cmp	r6, r4
 8009ffe:	bf38      	it	cc
 800a000:	2304      	movcc	r3, #4
 800a002:	441d      	add	r5, r3
 800a004:	445b      	add	r3, fp
 800a006:	461e      	mov	r6, r3
 800a008:	462c      	mov	r4, r5
 800a00a:	4544      	cmp	r4, r8
 800a00c:	d30e      	bcc.n	800a02c <__mdiff+0xf8>
 800a00e:	f108 0103 	add.w	r1, r8, #3
 800a012:	1b49      	subs	r1, r1, r5
 800a014:	f021 0103 	bic.w	r1, r1, #3
 800a018:	3d03      	subs	r5, #3
 800a01a:	45a8      	cmp	r8, r5
 800a01c:	bf38      	it	cc
 800a01e:	2100      	movcc	r1, #0
 800a020:	440b      	add	r3, r1
 800a022:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 800a026:	b191      	cbz	r1, 800a04e <__mdiff+0x11a>
 800a028:	6117      	str	r7, [r2, #16]
 800a02a:	e79d      	b.n	8009f68 <__mdiff+0x34>
 800a02c:	f854 1b04 	ldr.w	r1, [r4], #4
 800a030:	46e6      	mov	lr, ip
 800a032:	0c08      	lsrs	r0, r1, #16
 800a034:	fa1c fc81 	uxtah	ip, ip, r1
 800a038:	4471      	add	r1, lr
 800a03a:	eb00 402c 	add.w	r0, r0, ip, asr #16
 800a03e:	b289      	uxth	r1, r1
 800a040:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 800a044:	f846 1b04 	str.w	r1, [r6], #4
 800a048:	ea4f 4c20 	mov.w	ip, r0, asr #16
 800a04c:	e7dd      	b.n	800a00a <__mdiff+0xd6>
 800a04e:	3f01      	subs	r7, #1
 800a050:	e7e7      	b.n	800a022 <__mdiff+0xee>
 800a052:	bf00      	nop
 800a054:	0800af19 	.word	0x0800af19
 800a058:	0800af2a 	.word	0x0800af2a

0800a05c <__d2b>:
 800a05c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800a060:	460f      	mov	r7, r1
 800a062:	2101      	movs	r1, #1
 800a064:	ec59 8b10 	vmov	r8, r9, d0
 800a068:	4616      	mov	r6, r2
 800a06a:	f7ff fccd 	bl	8009a08 <_Balloc>
 800a06e:	4604      	mov	r4, r0
 800a070:	b930      	cbnz	r0, 800a080 <__d2b+0x24>
 800a072:	4602      	mov	r2, r0
 800a074:	4b23      	ldr	r3, [pc, #140]	@ (800a104 <__d2b+0xa8>)
 800a076:	4824      	ldr	r0, [pc, #144]	@ (800a108 <__d2b+0xac>)
 800a078:	f240 310f 	movw	r1, #783	@ 0x30f
 800a07c:	f000 fc48 	bl	800a910 <__assert_func>
 800a080:	f3c9 550a 	ubfx	r5, r9, #20, #11
 800a084:	f3c9 0313 	ubfx	r3, r9, #0, #20
 800a088:	b10d      	cbz	r5, 800a08e <__d2b+0x32>
 800a08a:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 800a08e:	9301      	str	r3, [sp, #4]
 800a090:	f1b8 0300 	subs.w	r3, r8, #0
 800a094:	d023      	beq.n	800a0de <__d2b+0x82>
 800a096:	4668      	mov	r0, sp
 800a098:	9300      	str	r3, [sp, #0]
 800a09a:	f7ff fd7c 	bl	8009b96 <__lo0bits>
 800a09e:	e9dd 1200 	ldrd	r1, r2, [sp]
 800a0a2:	b1d0      	cbz	r0, 800a0da <__d2b+0x7e>
 800a0a4:	f1c0 0320 	rsb	r3, r0, #32
 800a0a8:	fa02 f303 	lsl.w	r3, r2, r3
 800a0ac:	430b      	orrs	r3, r1
 800a0ae:	40c2      	lsrs	r2, r0
 800a0b0:	6163      	str	r3, [r4, #20]
 800a0b2:	9201      	str	r2, [sp, #4]
 800a0b4:	9b01      	ldr	r3, [sp, #4]
 800a0b6:	61a3      	str	r3, [r4, #24]
 800a0b8:	2b00      	cmp	r3, #0
 800a0ba:	bf0c      	ite	eq
 800a0bc:	2201      	moveq	r2, #1
 800a0be:	2202      	movne	r2, #2
 800a0c0:	6122      	str	r2, [r4, #16]
 800a0c2:	b1a5      	cbz	r5, 800a0ee <__d2b+0x92>
 800a0c4:	f2a5 4533 	subw	r5, r5, #1075	@ 0x433
 800a0c8:	4405      	add	r5, r0
 800a0ca:	603d      	str	r5, [r7, #0]
 800a0cc:	f1c0 0035 	rsb	r0, r0, #53	@ 0x35
 800a0d0:	6030      	str	r0, [r6, #0]
 800a0d2:	4620      	mov	r0, r4
 800a0d4:	b003      	add	sp, #12
 800a0d6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800a0da:	6161      	str	r1, [r4, #20]
 800a0dc:	e7ea      	b.n	800a0b4 <__d2b+0x58>
 800a0de:	a801      	add	r0, sp, #4
 800a0e0:	f7ff fd59 	bl	8009b96 <__lo0bits>
 800a0e4:	9b01      	ldr	r3, [sp, #4]
 800a0e6:	6163      	str	r3, [r4, #20]
 800a0e8:	3020      	adds	r0, #32
 800a0ea:	2201      	movs	r2, #1
 800a0ec:	e7e8      	b.n	800a0c0 <__d2b+0x64>
 800a0ee:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 800a0f2:	f2a0 4032 	subw	r0, r0, #1074	@ 0x432
 800a0f6:	6038      	str	r0, [r7, #0]
 800a0f8:	6918      	ldr	r0, [r3, #16]
 800a0fa:	f7ff fd2d 	bl	8009b58 <__hi0bits>
 800a0fe:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 800a102:	e7e5      	b.n	800a0d0 <__d2b+0x74>
 800a104:	0800af19 	.word	0x0800af19
 800a108:	0800af2a 	.word	0x0800af2a

0800a10c <__ssputs_r>:
 800a10c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800a110:	688e      	ldr	r6, [r1, #8]
 800a112:	461f      	mov	r7, r3
 800a114:	42be      	cmp	r6, r7
 800a116:	680b      	ldr	r3, [r1, #0]
 800a118:	4682      	mov	sl, r0
 800a11a:	460c      	mov	r4, r1
 800a11c:	4690      	mov	r8, r2
 800a11e:	d82d      	bhi.n	800a17c <__ssputs_r+0x70>
 800a120:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 800a124:	f412 6f90 	tst.w	r2, #1152	@ 0x480
 800a128:	d026      	beq.n	800a178 <__ssputs_r+0x6c>
 800a12a:	6965      	ldr	r5, [r4, #20]
 800a12c:	6909      	ldr	r1, [r1, #16]
 800a12e:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800a132:	eba3 0901 	sub.w	r9, r3, r1
 800a136:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 800a13a:	1c7b      	adds	r3, r7, #1
 800a13c:	444b      	add	r3, r9
 800a13e:	106d      	asrs	r5, r5, #1
 800a140:	429d      	cmp	r5, r3
 800a142:	bf38      	it	cc
 800a144:	461d      	movcc	r5, r3
 800a146:	0553      	lsls	r3, r2, #21
 800a148:	d527      	bpl.n	800a19a <__ssputs_r+0x8e>
 800a14a:	4629      	mov	r1, r5
 800a14c:	f7ff fbd0 	bl	80098f0 <_malloc_r>
 800a150:	4606      	mov	r6, r0
 800a152:	b360      	cbz	r0, 800a1ae <__ssputs_r+0xa2>
 800a154:	6921      	ldr	r1, [r4, #16]
 800a156:	464a      	mov	r2, r9
 800a158:	f000 fbcc 	bl	800a8f4 <memcpy>
 800a15c:	89a3      	ldrh	r3, [r4, #12]
 800a15e:	f423 6390 	bic.w	r3, r3, #1152	@ 0x480
 800a162:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800a166:	81a3      	strh	r3, [r4, #12]
 800a168:	6126      	str	r6, [r4, #16]
 800a16a:	6165      	str	r5, [r4, #20]
 800a16c:	444e      	add	r6, r9
 800a16e:	eba5 0509 	sub.w	r5, r5, r9
 800a172:	6026      	str	r6, [r4, #0]
 800a174:	60a5      	str	r5, [r4, #8]
 800a176:	463e      	mov	r6, r7
 800a178:	42be      	cmp	r6, r7
 800a17a:	d900      	bls.n	800a17e <__ssputs_r+0x72>
 800a17c:	463e      	mov	r6, r7
 800a17e:	6820      	ldr	r0, [r4, #0]
 800a180:	4632      	mov	r2, r6
 800a182:	4641      	mov	r1, r8
 800a184:	f000 fb6a 	bl	800a85c <memmove>
 800a188:	68a3      	ldr	r3, [r4, #8]
 800a18a:	1b9b      	subs	r3, r3, r6
 800a18c:	60a3      	str	r3, [r4, #8]
 800a18e:	6823      	ldr	r3, [r4, #0]
 800a190:	4433      	add	r3, r6
 800a192:	6023      	str	r3, [r4, #0]
 800a194:	2000      	movs	r0, #0
 800a196:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800a19a:	462a      	mov	r2, r5
 800a19c:	f000 fbfc 	bl	800a998 <_realloc_r>
 800a1a0:	4606      	mov	r6, r0
 800a1a2:	2800      	cmp	r0, #0
 800a1a4:	d1e0      	bne.n	800a168 <__ssputs_r+0x5c>
 800a1a6:	6921      	ldr	r1, [r4, #16]
 800a1a8:	4650      	mov	r0, sl
 800a1aa:	f7ff fb2d 	bl	8009808 <_free_r>
 800a1ae:	230c      	movs	r3, #12
 800a1b0:	f8ca 3000 	str.w	r3, [sl]
 800a1b4:	89a3      	ldrh	r3, [r4, #12]
 800a1b6:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800a1ba:	81a3      	strh	r3, [r4, #12]
 800a1bc:	f04f 30ff 	mov.w	r0, #4294967295
 800a1c0:	e7e9      	b.n	800a196 <__ssputs_r+0x8a>
	...

0800a1c4 <_svfiprintf_r>:
 800a1c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a1c8:	4698      	mov	r8, r3
 800a1ca:	898b      	ldrh	r3, [r1, #12]
 800a1cc:	061b      	lsls	r3, r3, #24
 800a1ce:	b09d      	sub	sp, #116	@ 0x74
 800a1d0:	4607      	mov	r7, r0
 800a1d2:	460d      	mov	r5, r1
 800a1d4:	4614      	mov	r4, r2
 800a1d6:	d510      	bpl.n	800a1fa <_svfiprintf_r+0x36>
 800a1d8:	690b      	ldr	r3, [r1, #16]
 800a1da:	b973      	cbnz	r3, 800a1fa <_svfiprintf_r+0x36>
 800a1dc:	2140      	movs	r1, #64	@ 0x40
 800a1de:	f7ff fb87 	bl	80098f0 <_malloc_r>
 800a1e2:	6028      	str	r0, [r5, #0]
 800a1e4:	6128      	str	r0, [r5, #16]
 800a1e6:	b930      	cbnz	r0, 800a1f6 <_svfiprintf_r+0x32>
 800a1e8:	230c      	movs	r3, #12
 800a1ea:	603b      	str	r3, [r7, #0]
 800a1ec:	f04f 30ff 	mov.w	r0, #4294967295
 800a1f0:	b01d      	add	sp, #116	@ 0x74
 800a1f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a1f6:	2340      	movs	r3, #64	@ 0x40
 800a1f8:	616b      	str	r3, [r5, #20]
 800a1fa:	2300      	movs	r3, #0
 800a1fc:	9309      	str	r3, [sp, #36]	@ 0x24
 800a1fe:	2320      	movs	r3, #32
 800a200:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 800a204:	f8cd 800c 	str.w	r8, [sp, #12]
 800a208:	2330      	movs	r3, #48	@ 0x30
 800a20a:	f8df 819c 	ldr.w	r8, [pc, #412]	@ 800a3a8 <_svfiprintf_r+0x1e4>
 800a20e:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 800a212:	f04f 0901 	mov.w	r9, #1
 800a216:	4623      	mov	r3, r4
 800a218:	469a      	mov	sl, r3
 800a21a:	f813 2b01 	ldrb.w	r2, [r3], #1
 800a21e:	b10a      	cbz	r2, 800a224 <_svfiprintf_r+0x60>
 800a220:	2a25      	cmp	r2, #37	@ 0x25
 800a222:	d1f9      	bne.n	800a218 <_svfiprintf_r+0x54>
 800a224:	ebba 0b04 	subs.w	fp, sl, r4
 800a228:	d00b      	beq.n	800a242 <_svfiprintf_r+0x7e>
 800a22a:	465b      	mov	r3, fp
 800a22c:	4622      	mov	r2, r4
 800a22e:	4629      	mov	r1, r5
 800a230:	4638      	mov	r0, r7
 800a232:	f7ff ff6b 	bl	800a10c <__ssputs_r>
 800a236:	3001      	adds	r0, #1
 800a238:	f000 80a7 	beq.w	800a38a <_svfiprintf_r+0x1c6>
 800a23c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800a23e:	445a      	add	r2, fp
 800a240:	9209      	str	r2, [sp, #36]	@ 0x24
 800a242:	f89a 3000 	ldrb.w	r3, [sl]
 800a246:	2b00      	cmp	r3, #0
 800a248:	f000 809f 	beq.w	800a38a <_svfiprintf_r+0x1c6>
 800a24c:	2300      	movs	r3, #0
 800a24e:	f04f 32ff 	mov.w	r2, #4294967295
 800a252:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800a256:	f10a 0a01 	add.w	sl, sl, #1
 800a25a:	9304      	str	r3, [sp, #16]
 800a25c:	9307      	str	r3, [sp, #28]
 800a25e:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 800a262:	931a      	str	r3, [sp, #104]	@ 0x68
 800a264:	4654      	mov	r4, sl
 800a266:	2205      	movs	r2, #5
 800a268:	f814 1b01 	ldrb.w	r1, [r4], #1
 800a26c:	484e      	ldr	r0, [pc, #312]	@ (800a3a8 <_svfiprintf_r+0x1e4>)
 800a26e:	f7f5 ffaf 	bl	80001d0 <memchr>
 800a272:	9a04      	ldr	r2, [sp, #16]
 800a274:	b9d8      	cbnz	r0, 800a2ae <_svfiprintf_r+0xea>
 800a276:	06d0      	lsls	r0, r2, #27
 800a278:	bf44      	itt	mi
 800a27a:	2320      	movmi	r3, #32
 800a27c:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 800a280:	0711      	lsls	r1, r2, #28
 800a282:	bf44      	itt	mi
 800a284:	232b      	movmi	r3, #43	@ 0x2b
 800a286:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 800a28a:	f89a 3000 	ldrb.w	r3, [sl]
 800a28e:	2b2a      	cmp	r3, #42	@ 0x2a
 800a290:	d015      	beq.n	800a2be <_svfiprintf_r+0xfa>
 800a292:	9a07      	ldr	r2, [sp, #28]
 800a294:	4654      	mov	r4, sl
 800a296:	2000      	movs	r0, #0
 800a298:	f04f 0c0a 	mov.w	ip, #10
 800a29c:	4621      	mov	r1, r4
 800a29e:	f811 3b01 	ldrb.w	r3, [r1], #1
 800a2a2:	3b30      	subs	r3, #48	@ 0x30
 800a2a4:	2b09      	cmp	r3, #9
 800a2a6:	d94b      	bls.n	800a340 <_svfiprintf_r+0x17c>
 800a2a8:	b1b0      	cbz	r0, 800a2d8 <_svfiprintf_r+0x114>
 800a2aa:	9207      	str	r2, [sp, #28]
 800a2ac:	e014      	b.n	800a2d8 <_svfiprintf_r+0x114>
 800a2ae:	eba0 0308 	sub.w	r3, r0, r8
 800a2b2:	fa09 f303 	lsl.w	r3, r9, r3
 800a2b6:	4313      	orrs	r3, r2
 800a2b8:	9304      	str	r3, [sp, #16]
 800a2ba:	46a2      	mov	sl, r4
 800a2bc:	e7d2      	b.n	800a264 <_svfiprintf_r+0xa0>
 800a2be:	9b03      	ldr	r3, [sp, #12]
 800a2c0:	1d19      	adds	r1, r3, #4
 800a2c2:	681b      	ldr	r3, [r3, #0]
 800a2c4:	9103      	str	r1, [sp, #12]
 800a2c6:	2b00      	cmp	r3, #0
 800a2c8:	bfbb      	ittet	lt
 800a2ca:	425b      	neglt	r3, r3
 800a2cc:	f042 0202 	orrlt.w	r2, r2, #2
 800a2d0:	9307      	strge	r3, [sp, #28]
 800a2d2:	9307      	strlt	r3, [sp, #28]
 800a2d4:	bfb8      	it	lt
 800a2d6:	9204      	strlt	r2, [sp, #16]
 800a2d8:	7823      	ldrb	r3, [r4, #0]
 800a2da:	2b2e      	cmp	r3, #46	@ 0x2e
 800a2dc:	d10a      	bne.n	800a2f4 <_svfiprintf_r+0x130>
 800a2de:	7863      	ldrb	r3, [r4, #1]
 800a2e0:	2b2a      	cmp	r3, #42	@ 0x2a
 800a2e2:	d132      	bne.n	800a34a <_svfiprintf_r+0x186>
 800a2e4:	9b03      	ldr	r3, [sp, #12]
 800a2e6:	1d1a      	adds	r2, r3, #4
 800a2e8:	681b      	ldr	r3, [r3, #0]
 800a2ea:	9203      	str	r2, [sp, #12]
 800a2ec:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 800a2f0:	3402      	adds	r4, #2
 800a2f2:	9305      	str	r3, [sp, #20]
 800a2f4:	f8df a0c0 	ldr.w	sl, [pc, #192]	@ 800a3b8 <_svfiprintf_r+0x1f4>
 800a2f8:	7821      	ldrb	r1, [r4, #0]
 800a2fa:	2203      	movs	r2, #3
 800a2fc:	4650      	mov	r0, sl
 800a2fe:	f7f5 ff67 	bl	80001d0 <memchr>
 800a302:	b138      	cbz	r0, 800a314 <_svfiprintf_r+0x150>
 800a304:	9b04      	ldr	r3, [sp, #16]
 800a306:	eba0 000a 	sub.w	r0, r0, sl
 800a30a:	2240      	movs	r2, #64	@ 0x40
 800a30c:	4082      	lsls	r2, r0
 800a30e:	4313      	orrs	r3, r2
 800a310:	3401      	adds	r4, #1
 800a312:	9304      	str	r3, [sp, #16]
 800a314:	f814 1b01 	ldrb.w	r1, [r4], #1
 800a318:	4824      	ldr	r0, [pc, #144]	@ (800a3ac <_svfiprintf_r+0x1e8>)
 800a31a:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 800a31e:	2206      	movs	r2, #6
 800a320:	f7f5 ff56 	bl	80001d0 <memchr>
 800a324:	2800      	cmp	r0, #0
 800a326:	d036      	beq.n	800a396 <_svfiprintf_r+0x1d2>
 800a328:	4b21      	ldr	r3, [pc, #132]	@ (800a3b0 <_svfiprintf_r+0x1ec>)
 800a32a:	bb1b      	cbnz	r3, 800a374 <_svfiprintf_r+0x1b0>
 800a32c:	9b03      	ldr	r3, [sp, #12]
 800a32e:	3307      	adds	r3, #7
 800a330:	f023 0307 	bic.w	r3, r3, #7
 800a334:	3308      	adds	r3, #8
 800a336:	9303      	str	r3, [sp, #12]
 800a338:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800a33a:	4433      	add	r3, r6
 800a33c:	9309      	str	r3, [sp, #36]	@ 0x24
 800a33e:	e76a      	b.n	800a216 <_svfiprintf_r+0x52>
 800a340:	fb0c 3202 	mla	r2, ip, r2, r3
 800a344:	460c      	mov	r4, r1
 800a346:	2001      	movs	r0, #1
 800a348:	e7a8      	b.n	800a29c <_svfiprintf_r+0xd8>
 800a34a:	2300      	movs	r3, #0
 800a34c:	3401      	adds	r4, #1
 800a34e:	9305      	str	r3, [sp, #20]
 800a350:	4619      	mov	r1, r3
 800a352:	f04f 0c0a 	mov.w	ip, #10
 800a356:	4620      	mov	r0, r4
 800a358:	f810 2b01 	ldrb.w	r2, [r0], #1
 800a35c:	3a30      	subs	r2, #48	@ 0x30
 800a35e:	2a09      	cmp	r2, #9
 800a360:	d903      	bls.n	800a36a <_svfiprintf_r+0x1a6>
 800a362:	2b00      	cmp	r3, #0
 800a364:	d0c6      	beq.n	800a2f4 <_svfiprintf_r+0x130>
 800a366:	9105      	str	r1, [sp, #20]
 800a368:	e7c4      	b.n	800a2f4 <_svfiprintf_r+0x130>
 800a36a:	fb0c 2101 	mla	r1, ip, r1, r2
 800a36e:	4604      	mov	r4, r0
 800a370:	2301      	movs	r3, #1
 800a372:	e7f0      	b.n	800a356 <_svfiprintf_r+0x192>
 800a374:	ab03      	add	r3, sp, #12
 800a376:	9300      	str	r3, [sp, #0]
 800a378:	462a      	mov	r2, r5
 800a37a:	4b0e      	ldr	r3, [pc, #56]	@ (800a3b4 <_svfiprintf_r+0x1f0>)
 800a37c:	a904      	add	r1, sp, #16
 800a37e:	4638      	mov	r0, r7
 800a380:	f7fd fd6c 	bl	8007e5c <_printf_float>
 800a384:	1c42      	adds	r2, r0, #1
 800a386:	4606      	mov	r6, r0
 800a388:	d1d6      	bne.n	800a338 <_svfiprintf_r+0x174>
 800a38a:	89ab      	ldrh	r3, [r5, #12]
 800a38c:	065b      	lsls	r3, r3, #25
 800a38e:	f53f af2d 	bmi.w	800a1ec <_svfiprintf_r+0x28>
 800a392:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800a394:	e72c      	b.n	800a1f0 <_svfiprintf_r+0x2c>
 800a396:	ab03      	add	r3, sp, #12
 800a398:	9300      	str	r3, [sp, #0]
 800a39a:	462a      	mov	r2, r5
 800a39c:	4b05      	ldr	r3, [pc, #20]	@ (800a3b4 <_svfiprintf_r+0x1f0>)
 800a39e:	a904      	add	r1, sp, #16
 800a3a0:	4638      	mov	r0, r7
 800a3a2:	f7fd fff3 	bl	800838c <_printf_i>
 800a3a6:	e7ed      	b.n	800a384 <_svfiprintf_r+0x1c0>
 800a3a8:	0800b080 	.word	0x0800b080
 800a3ac:	0800b08a 	.word	0x0800b08a
 800a3b0:	08007e5d 	.word	0x08007e5d
 800a3b4:	0800a10d 	.word	0x0800a10d
 800a3b8:	0800b086 	.word	0x0800b086

0800a3bc <__sfputc_r>:
 800a3bc:	6893      	ldr	r3, [r2, #8]
 800a3be:	3b01      	subs	r3, #1
 800a3c0:	2b00      	cmp	r3, #0
 800a3c2:	b410      	push	{r4}
 800a3c4:	6093      	str	r3, [r2, #8]
 800a3c6:	da08      	bge.n	800a3da <__sfputc_r+0x1e>
 800a3c8:	6994      	ldr	r4, [r2, #24]
 800a3ca:	42a3      	cmp	r3, r4
 800a3cc:	db01      	blt.n	800a3d2 <__sfputc_r+0x16>
 800a3ce:	290a      	cmp	r1, #10
 800a3d0:	d103      	bne.n	800a3da <__sfputc_r+0x1e>
 800a3d2:	f85d 4b04 	ldr.w	r4, [sp], #4
 800a3d6:	f7fe baa2 	b.w	800891e <__swbuf_r>
 800a3da:	6813      	ldr	r3, [r2, #0]
 800a3dc:	1c58      	adds	r0, r3, #1
 800a3de:	6010      	str	r0, [r2, #0]
 800a3e0:	7019      	strb	r1, [r3, #0]
 800a3e2:	4608      	mov	r0, r1
 800a3e4:	f85d 4b04 	ldr.w	r4, [sp], #4
 800a3e8:	4770      	bx	lr

0800a3ea <__sfputs_r>:
 800a3ea:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800a3ec:	4606      	mov	r6, r0
 800a3ee:	460f      	mov	r7, r1
 800a3f0:	4614      	mov	r4, r2
 800a3f2:	18d5      	adds	r5, r2, r3
 800a3f4:	42ac      	cmp	r4, r5
 800a3f6:	d101      	bne.n	800a3fc <__sfputs_r+0x12>
 800a3f8:	2000      	movs	r0, #0
 800a3fa:	e007      	b.n	800a40c <__sfputs_r+0x22>
 800a3fc:	f814 1b01 	ldrb.w	r1, [r4], #1
 800a400:	463a      	mov	r2, r7
 800a402:	4630      	mov	r0, r6
 800a404:	f7ff ffda 	bl	800a3bc <__sfputc_r>
 800a408:	1c43      	adds	r3, r0, #1
 800a40a:	d1f3      	bne.n	800a3f4 <__sfputs_r+0xa>
 800a40c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0800a410 <_vfiprintf_r>:
 800a410:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a414:	460d      	mov	r5, r1
 800a416:	b09d      	sub	sp, #116	@ 0x74
 800a418:	4614      	mov	r4, r2
 800a41a:	4698      	mov	r8, r3
 800a41c:	4606      	mov	r6, r0
 800a41e:	b118      	cbz	r0, 800a428 <_vfiprintf_r+0x18>
 800a420:	6a03      	ldr	r3, [r0, #32]
 800a422:	b90b      	cbnz	r3, 800a428 <_vfiprintf_r+0x18>
 800a424:	f7fe f95e 	bl	80086e4 <__sinit>
 800a428:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 800a42a:	07d9      	lsls	r1, r3, #31
 800a42c:	d405      	bmi.n	800a43a <_vfiprintf_r+0x2a>
 800a42e:	89ab      	ldrh	r3, [r5, #12]
 800a430:	059a      	lsls	r2, r3, #22
 800a432:	d402      	bmi.n	800a43a <_vfiprintf_r+0x2a>
 800a434:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 800a436:	f7fe fb96 	bl	8008b66 <__retarget_lock_acquire_recursive>
 800a43a:	89ab      	ldrh	r3, [r5, #12]
 800a43c:	071b      	lsls	r3, r3, #28
 800a43e:	d501      	bpl.n	800a444 <_vfiprintf_r+0x34>
 800a440:	692b      	ldr	r3, [r5, #16]
 800a442:	b99b      	cbnz	r3, 800a46c <_vfiprintf_r+0x5c>
 800a444:	4629      	mov	r1, r5
 800a446:	4630      	mov	r0, r6
 800a448:	f7fe faa8 	bl	800899c <__swsetup_r>
 800a44c:	b170      	cbz	r0, 800a46c <_vfiprintf_r+0x5c>
 800a44e:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 800a450:	07dc      	lsls	r4, r3, #31
 800a452:	d504      	bpl.n	800a45e <_vfiprintf_r+0x4e>
 800a454:	f04f 30ff 	mov.w	r0, #4294967295
 800a458:	b01d      	add	sp, #116	@ 0x74
 800a45a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a45e:	89ab      	ldrh	r3, [r5, #12]
 800a460:	0598      	lsls	r0, r3, #22
 800a462:	d4f7      	bmi.n	800a454 <_vfiprintf_r+0x44>
 800a464:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 800a466:	f7fe fb7f 	bl	8008b68 <__retarget_lock_release_recursive>
 800a46a:	e7f3      	b.n	800a454 <_vfiprintf_r+0x44>
 800a46c:	2300      	movs	r3, #0
 800a46e:	9309      	str	r3, [sp, #36]	@ 0x24
 800a470:	2320      	movs	r3, #32
 800a472:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 800a476:	f8cd 800c 	str.w	r8, [sp, #12]
 800a47a:	2330      	movs	r3, #48	@ 0x30
 800a47c:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 800a62c <_vfiprintf_r+0x21c>
 800a480:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 800a484:	f04f 0901 	mov.w	r9, #1
 800a488:	4623      	mov	r3, r4
 800a48a:	469a      	mov	sl, r3
 800a48c:	f813 2b01 	ldrb.w	r2, [r3], #1
 800a490:	b10a      	cbz	r2, 800a496 <_vfiprintf_r+0x86>
 800a492:	2a25      	cmp	r2, #37	@ 0x25
 800a494:	d1f9      	bne.n	800a48a <_vfiprintf_r+0x7a>
 800a496:	ebba 0b04 	subs.w	fp, sl, r4
 800a49a:	d00b      	beq.n	800a4b4 <_vfiprintf_r+0xa4>
 800a49c:	465b      	mov	r3, fp
 800a49e:	4622      	mov	r2, r4
 800a4a0:	4629      	mov	r1, r5
 800a4a2:	4630      	mov	r0, r6
 800a4a4:	f7ff ffa1 	bl	800a3ea <__sfputs_r>
 800a4a8:	3001      	adds	r0, #1
 800a4aa:	f000 80a7 	beq.w	800a5fc <_vfiprintf_r+0x1ec>
 800a4ae:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800a4b0:	445a      	add	r2, fp
 800a4b2:	9209      	str	r2, [sp, #36]	@ 0x24
 800a4b4:	f89a 3000 	ldrb.w	r3, [sl]
 800a4b8:	2b00      	cmp	r3, #0
 800a4ba:	f000 809f 	beq.w	800a5fc <_vfiprintf_r+0x1ec>
 800a4be:	2300      	movs	r3, #0
 800a4c0:	f04f 32ff 	mov.w	r2, #4294967295
 800a4c4:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800a4c8:	f10a 0a01 	add.w	sl, sl, #1
 800a4cc:	9304      	str	r3, [sp, #16]
 800a4ce:	9307      	str	r3, [sp, #28]
 800a4d0:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 800a4d4:	931a      	str	r3, [sp, #104]	@ 0x68
 800a4d6:	4654      	mov	r4, sl
 800a4d8:	2205      	movs	r2, #5
 800a4da:	f814 1b01 	ldrb.w	r1, [r4], #1
 800a4de:	4853      	ldr	r0, [pc, #332]	@ (800a62c <_vfiprintf_r+0x21c>)
 800a4e0:	f7f5 fe76 	bl	80001d0 <memchr>
 800a4e4:	9a04      	ldr	r2, [sp, #16]
 800a4e6:	b9d8      	cbnz	r0, 800a520 <_vfiprintf_r+0x110>
 800a4e8:	06d1      	lsls	r1, r2, #27
 800a4ea:	bf44      	itt	mi
 800a4ec:	2320      	movmi	r3, #32
 800a4ee:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 800a4f2:	0713      	lsls	r3, r2, #28
 800a4f4:	bf44      	itt	mi
 800a4f6:	232b      	movmi	r3, #43	@ 0x2b
 800a4f8:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 800a4fc:	f89a 3000 	ldrb.w	r3, [sl]
 800a500:	2b2a      	cmp	r3, #42	@ 0x2a
 800a502:	d015      	beq.n	800a530 <_vfiprintf_r+0x120>
 800a504:	9a07      	ldr	r2, [sp, #28]
 800a506:	4654      	mov	r4, sl
 800a508:	2000      	movs	r0, #0
 800a50a:	f04f 0c0a 	mov.w	ip, #10
 800a50e:	4621      	mov	r1, r4
 800a510:	f811 3b01 	ldrb.w	r3, [r1], #1
 800a514:	3b30      	subs	r3, #48	@ 0x30
 800a516:	2b09      	cmp	r3, #9
 800a518:	d94b      	bls.n	800a5b2 <_vfiprintf_r+0x1a2>
 800a51a:	b1b0      	cbz	r0, 800a54a <_vfiprintf_r+0x13a>
 800a51c:	9207      	str	r2, [sp, #28]
 800a51e:	e014      	b.n	800a54a <_vfiprintf_r+0x13a>
 800a520:	eba0 0308 	sub.w	r3, r0, r8
 800a524:	fa09 f303 	lsl.w	r3, r9, r3
 800a528:	4313      	orrs	r3, r2
 800a52a:	9304      	str	r3, [sp, #16]
 800a52c:	46a2      	mov	sl, r4
 800a52e:	e7d2      	b.n	800a4d6 <_vfiprintf_r+0xc6>
 800a530:	9b03      	ldr	r3, [sp, #12]
 800a532:	1d19      	adds	r1, r3, #4
 800a534:	681b      	ldr	r3, [r3, #0]
 800a536:	9103      	str	r1, [sp, #12]
 800a538:	2b00      	cmp	r3, #0
 800a53a:	bfbb      	ittet	lt
 800a53c:	425b      	neglt	r3, r3
 800a53e:	f042 0202 	orrlt.w	r2, r2, #2
 800a542:	9307      	strge	r3, [sp, #28]
 800a544:	9307      	strlt	r3, [sp, #28]
 800a546:	bfb8      	it	lt
 800a548:	9204      	strlt	r2, [sp, #16]
 800a54a:	7823      	ldrb	r3, [r4, #0]
 800a54c:	2b2e      	cmp	r3, #46	@ 0x2e
 800a54e:	d10a      	bne.n	800a566 <_vfiprintf_r+0x156>
 800a550:	7863      	ldrb	r3, [r4, #1]
 800a552:	2b2a      	cmp	r3, #42	@ 0x2a
 800a554:	d132      	bne.n	800a5bc <_vfiprintf_r+0x1ac>
 800a556:	9b03      	ldr	r3, [sp, #12]
 800a558:	1d1a      	adds	r2, r3, #4
 800a55a:	681b      	ldr	r3, [r3, #0]
 800a55c:	9203      	str	r2, [sp, #12]
 800a55e:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 800a562:	3402      	adds	r4, #2
 800a564:	9305      	str	r3, [sp, #20]
 800a566:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 800a63c <_vfiprintf_r+0x22c>
 800a56a:	7821      	ldrb	r1, [r4, #0]
 800a56c:	2203      	movs	r2, #3
 800a56e:	4650      	mov	r0, sl
 800a570:	f7f5 fe2e 	bl	80001d0 <memchr>
 800a574:	b138      	cbz	r0, 800a586 <_vfiprintf_r+0x176>
 800a576:	9b04      	ldr	r3, [sp, #16]
 800a578:	eba0 000a 	sub.w	r0, r0, sl
 800a57c:	2240      	movs	r2, #64	@ 0x40
 800a57e:	4082      	lsls	r2, r0
 800a580:	4313      	orrs	r3, r2
 800a582:	3401      	adds	r4, #1
 800a584:	9304      	str	r3, [sp, #16]
 800a586:	f814 1b01 	ldrb.w	r1, [r4], #1
 800a58a:	4829      	ldr	r0, [pc, #164]	@ (800a630 <_vfiprintf_r+0x220>)
 800a58c:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 800a590:	2206      	movs	r2, #6
 800a592:	f7f5 fe1d 	bl	80001d0 <memchr>
 800a596:	2800      	cmp	r0, #0
 800a598:	d03f      	beq.n	800a61a <_vfiprintf_r+0x20a>
 800a59a:	4b26      	ldr	r3, [pc, #152]	@ (800a634 <_vfiprintf_r+0x224>)
 800a59c:	bb1b      	cbnz	r3, 800a5e6 <_vfiprintf_r+0x1d6>
 800a59e:	9b03      	ldr	r3, [sp, #12]
 800a5a0:	3307      	adds	r3, #7
 800a5a2:	f023 0307 	bic.w	r3, r3, #7
 800a5a6:	3308      	adds	r3, #8
 800a5a8:	9303      	str	r3, [sp, #12]
 800a5aa:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800a5ac:	443b      	add	r3, r7
 800a5ae:	9309      	str	r3, [sp, #36]	@ 0x24
 800a5b0:	e76a      	b.n	800a488 <_vfiprintf_r+0x78>
 800a5b2:	fb0c 3202 	mla	r2, ip, r2, r3
 800a5b6:	460c      	mov	r4, r1
 800a5b8:	2001      	movs	r0, #1
 800a5ba:	e7a8      	b.n	800a50e <_vfiprintf_r+0xfe>
 800a5bc:	2300      	movs	r3, #0
 800a5be:	3401      	adds	r4, #1
 800a5c0:	9305      	str	r3, [sp, #20]
 800a5c2:	4619      	mov	r1, r3
 800a5c4:	f04f 0c0a 	mov.w	ip, #10
 800a5c8:	4620      	mov	r0, r4
 800a5ca:	f810 2b01 	ldrb.w	r2, [r0], #1
 800a5ce:	3a30      	subs	r2, #48	@ 0x30
 800a5d0:	2a09      	cmp	r2, #9
 800a5d2:	d903      	bls.n	800a5dc <_vfiprintf_r+0x1cc>
 800a5d4:	2b00      	cmp	r3, #0
 800a5d6:	d0c6      	beq.n	800a566 <_vfiprintf_r+0x156>
 800a5d8:	9105      	str	r1, [sp, #20]
 800a5da:	e7c4      	b.n	800a566 <_vfiprintf_r+0x156>
 800a5dc:	fb0c 2101 	mla	r1, ip, r1, r2
 800a5e0:	4604      	mov	r4, r0
 800a5e2:	2301      	movs	r3, #1
 800a5e4:	e7f0      	b.n	800a5c8 <_vfiprintf_r+0x1b8>
 800a5e6:	ab03      	add	r3, sp, #12
 800a5e8:	9300      	str	r3, [sp, #0]
 800a5ea:	462a      	mov	r2, r5
 800a5ec:	4b12      	ldr	r3, [pc, #72]	@ (800a638 <_vfiprintf_r+0x228>)
 800a5ee:	a904      	add	r1, sp, #16
 800a5f0:	4630      	mov	r0, r6
 800a5f2:	f7fd fc33 	bl	8007e5c <_printf_float>
 800a5f6:	4607      	mov	r7, r0
 800a5f8:	1c78      	adds	r0, r7, #1
 800a5fa:	d1d6      	bne.n	800a5aa <_vfiprintf_r+0x19a>
 800a5fc:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 800a5fe:	07d9      	lsls	r1, r3, #31
 800a600:	d405      	bmi.n	800a60e <_vfiprintf_r+0x1fe>
 800a602:	89ab      	ldrh	r3, [r5, #12]
 800a604:	059a      	lsls	r2, r3, #22
 800a606:	d402      	bmi.n	800a60e <_vfiprintf_r+0x1fe>
 800a608:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 800a60a:	f7fe faad 	bl	8008b68 <__retarget_lock_release_recursive>
 800a60e:	89ab      	ldrh	r3, [r5, #12]
 800a610:	065b      	lsls	r3, r3, #25
 800a612:	f53f af1f 	bmi.w	800a454 <_vfiprintf_r+0x44>
 800a616:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800a618:	e71e      	b.n	800a458 <_vfiprintf_r+0x48>
 800a61a:	ab03      	add	r3, sp, #12
 800a61c:	9300      	str	r3, [sp, #0]
 800a61e:	462a      	mov	r2, r5
 800a620:	4b05      	ldr	r3, [pc, #20]	@ (800a638 <_vfiprintf_r+0x228>)
 800a622:	a904      	add	r1, sp, #16
 800a624:	4630      	mov	r0, r6
 800a626:	f7fd feb1 	bl	800838c <_printf_i>
 800a62a:	e7e4      	b.n	800a5f6 <_vfiprintf_r+0x1e6>
 800a62c:	0800b080 	.word	0x0800b080
 800a630:	0800b08a 	.word	0x0800b08a
 800a634:	08007e5d 	.word	0x08007e5d
 800a638:	0800a3eb 	.word	0x0800a3eb
 800a63c:	0800b086 	.word	0x0800b086

0800a640 <__sflush_r>:
 800a640:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 800a644:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a648:	0716      	lsls	r6, r2, #28
 800a64a:	4605      	mov	r5, r0
 800a64c:	460c      	mov	r4, r1
 800a64e:	d454      	bmi.n	800a6fa <__sflush_r+0xba>
 800a650:	684b      	ldr	r3, [r1, #4]
 800a652:	2b00      	cmp	r3, #0
 800a654:	dc02      	bgt.n	800a65c <__sflush_r+0x1c>
 800a656:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 800a658:	2b00      	cmp	r3, #0
 800a65a:	dd48      	ble.n	800a6ee <__sflush_r+0xae>
 800a65c:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 800a65e:	2e00      	cmp	r6, #0
 800a660:	d045      	beq.n	800a6ee <__sflush_r+0xae>
 800a662:	2300      	movs	r3, #0
 800a664:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 800a668:	682f      	ldr	r7, [r5, #0]
 800a66a:	6a21      	ldr	r1, [r4, #32]
 800a66c:	602b      	str	r3, [r5, #0]
 800a66e:	d030      	beq.n	800a6d2 <__sflush_r+0x92>
 800a670:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 800a672:	89a3      	ldrh	r3, [r4, #12]
 800a674:	0759      	lsls	r1, r3, #29
 800a676:	d505      	bpl.n	800a684 <__sflush_r+0x44>
 800a678:	6863      	ldr	r3, [r4, #4]
 800a67a:	1ad2      	subs	r2, r2, r3
 800a67c:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 800a67e:	b10b      	cbz	r3, 800a684 <__sflush_r+0x44>
 800a680:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800a682:	1ad2      	subs	r2, r2, r3
 800a684:	2300      	movs	r3, #0
 800a686:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 800a688:	6a21      	ldr	r1, [r4, #32]
 800a68a:	4628      	mov	r0, r5
 800a68c:	47b0      	blx	r6
 800a68e:	1c43      	adds	r3, r0, #1
 800a690:	89a3      	ldrh	r3, [r4, #12]
 800a692:	d106      	bne.n	800a6a2 <__sflush_r+0x62>
 800a694:	6829      	ldr	r1, [r5, #0]
 800a696:	291d      	cmp	r1, #29
 800a698:	d82b      	bhi.n	800a6f2 <__sflush_r+0xb2>
 800a69a:	4a2a      	ldr	r2, [pc, #168]	@ (800a744 <__sflush_r+0x104>)
 800a69c:	410a      	asrs	r2, r1
 800a69e:	07d6      	lsls	r6, r2, #31
 800a6a0:	d427      	bmi.n	800a6f2 <__sflush_r+0xb2>
 800a6a2:	2200      	movs	r2, #0
 800a6a4:	6062      	str	r2, [r4, #4]
 800a6a6:	04d9      	lsls	r1, r3, #19
 800a6a8:	6922      	ldr	r2, [r4, #16]
 800a6aa:	6022      	str	r2, [r4, #0]
 800a6ac:	d504      	bpl.n	800a6b8 <__sflush_r+0x78>
 800a6ae:	1c42      	adds	r2, r0, #1
 800a6b0:	d101      	bne.n	800a6b6 <__sflush_r+0x76>
 800a6b2:	682b      	ldr	r3, [r5, #0]
 800a6b4:	b903      	cbnz	r3, 800a6b8 <__sflush_r+0x78>
 800a6b6:	6560      	str	r0, [r4, #84]	@ 0x54
 800a6b8:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 800a6ba:	602f      	str	r7, [r5, #0]
 800a6bc:	b1b9      	cbz	r1, 800a6ee <__sflush_r+0xae>
 800a6be:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 800a6c2:	4299      	cmp	r1, r3
 800a6c4:	d002      	beq.n	800a6cc <__sflush_r+0x8c>
 800a6c6:	4628      	mov	r0, r5
 800a6c8:	f7ff f89e 	bl	8009808 <_free_r>
 800a6cc:	2300      	movs	r3, #0
 800a6ce:	6363      	str	r3, [r4, #52]	@ 0x34
 800a6d0:	e00d      	b.n	800a6ee <__sflush_r+0xae>
 800a6d2:	2301      	movs	r3, #1
 800a6d4:	4628      	mov	r0, r5
 800a6d6:	47b0      	blx	r6
 800a6d8:	4602      	mov	r2, r0
 800a6da:	1c50      	adds	r0, r2, #1
 800a6dc:	d1c9      	bne.n	800a672 <__sflush_r+0x32>
 800a6de:	682b      	ldr	r3, [r5, #0]
 800a6e0:	2b00      	cmp	r3, #0
 800a6e2:	d0c6      	beq.n	800a672 <__sflush_r+0x32>
 800a6e4:	2b1d      	cmp	r3, #29
 800a6e6:	d001      	beq.n	800a6ec <__sflush_r+0xac>
 800a6e8:	2b16      	cmp	r3, #22
 800a6ea:	d11e      	bne.n	800a72a <__sflush_r+0xea>
 800a6ec:	602f      	str	r7, [r5, #0]
 800a6ee:	2000      	movs	r0, #0
 800a6f0:	e022      	b.n	800a738 <__sflush_r+0xf8>
 800a6f2:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800a6f6:	b21b      	sxth	r3, r3
 800a6f8:	e01b      	b.n	800a732 <__sflush_r+0xf2>
 800a6fa:	690f      	ldr	r7, [r1, #16]
 800a6fc:	2f00      	cmp	r7, #0
 800a6fe:	d0f6      	beq.n	800a6ee <__sflush_r+0xae>
 800a700:	0793      	lsls	r3, r2, #30
 800a702:	680e      	ldr	r6, [r1, #0]
 800a704:	bf08      	it	eq
 800a706:	694b      	ldreq	r3, [r1, #20]
 800a708:	600f      	str	r7, [r1, #0]
 800a70a:	bf18      	it	ne
 800a70c:	2300      	movne	r3, #0
 800a70e:	eba6 0807 	sub.w	r8, r6, r7
 800a712:	608b      	str	r3, [r1, #8]
 800a714:	f1b8 0f00 	cmp.w	r8, #0
 800a718:	dde9      	ble.n	800a6ee <__sflush_r+0xae>
 800a71a:	6a21      	ldr	r1, [r4, #32]
 800a71c:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 800a71e:	4643      	mov	r3, r8
 800a720:	463a      	mov	r2, r7
 800a722:	4628      	mov	r0, r5
 800a724:	47b0      	blx	r6
 800a726:	2800      	cmp	r0, #0
 800a728:	dc08      	bgt.n	800a73c <__sflush_r+0xfc>
 800a72a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800a72e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800a732:	81a3      	strh	r3, [r4, #12]
 800a734:	f04f 30ff 	mov.w	r0, #4294967295
 800a738:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a73c:	4407      	add	r7, r0
 800a73e:	eba8 0800 	sub.w	r8, r8, r0
 800a742:	e7e7      	b.n	800a714 <__sflush_r+0xd4>
 800a744:	dfbffffe 	.word	0xdfbffffe

0800a748 <_fflush_r>:
 800a748:	b538      	push	{r3, r4, r5, lr}
 800a74a:	690b      	ldr	r3, [r1, #16]
 800a74c:	4605      	mov	r5, r0
 800a74e:	460c      	mov	r4, r1
 800a750:	b913      	cbnz	r3, 800a758 <_fflush_r+0x10>
 800a752:	2500      	movs	r5, #0
 800a754:	4628      	mov	r0, r5
 800a756:	bd38      	pop	{r3, r4, r5, pc}
 800a758:	b118      	cbz	r0, 800a762 <_fflush_r+0x1a>
 800a75a:	6a03      	ldr	r3, [r0, #32]
 800a75c:	b90b      	cbnz	r3, 800a762 <_fflush_r+0x1a>
 800a75e:	f7fd ffc1 	bl	80086e4 <__sinit>
 800a762:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800a766:	2b00      	cmp	r3, #0
 800a768:	d0f3      	beq.n	800a752 <_fflush_r+0xa>
 800a76a:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 800a76c:	07d0      	lsls	r0, r2, #31
 800a76e:	d404      	bmi.n	800a77a <_fflush_r+0x32>
 800a770:	0599      	lsls	r1, r3, #22
 800a772:	d402      	bmi.n	800a77a <_fflush_r+0x32>
 800a774:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800a776:	f7fe f9f6 	bl	8008b66 <__retarget_lock_acquire_recursive>
 800a77a:	4628      	mov	r0, r5
 800a77c:	4621      	mov	r1, r4
 800a77e:	f7ff ff5f 	bl	800a640 <__sflush_r>
 800a782:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 800a784:	07da      	lsls	r2, r3, #31
 800a786:	4605      	mov	r5, r0
 800a788:	d4e4      	bmi.n	800a754 <_fflush_r+0xc>
 800a78a:	89a3      	ldrh	r3, [r4, #12]
 800a78c:	059b      	lsls	r3, r3, #22
 800a78e:	d4e1      	bmi.n	800a754 <_fflush_r+0xc>
 800a790:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800a792:	f7fe f9e9 	bl	8008b68 <__retarget_lock_release_recursive>
 800a796:	e7dd      	b.n	800a754 <_fflush_r+0xc>

0800a798 <__swhatbuf_r>:
 800a798:	b570      	push	{r4, r5, r6, lr}
 800a79a:	460c      	mov	r4, r1
 800a79c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800a7a0:	2900      	cmp	r1, #0
 800a7a2:	b096      	sub	sp, #88	@ 0x58
 800a7a4:	4615      	mov	r5, r2
 800a7a6:	461e      	mov	r6, r3
 800a7a8:	da0d      	bge.n	800a7c6 <__swhatbuf_r+0x2e>
 800a7aa:	89a3      	ldrh	r3, [r4, #12]
 800a7ac:	f013 0f80 	tst.w	r3, #128	@ 0x80
 800a7b0:	f04f 0100 	mov.w	r1, #0
 800a7b4:	bf14      	ite	ne
 800a7b6:	2340      	movne	r3, #64	@ 0x40
 800a7b8:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 800a7bc:	2000      	movs	r0, #0
 800a7be:	6031      	str	r1, [r6, #0]
 800a7c0:	602b      	str	r3, [r5, #0]
 800a7c2:	b016      	add	sp, #88	@ 0x58
 800a7c4:	bd70      	pop	{r4, r5, r6, pc}
 800a7c6:	466a      	mov	r2, sp
 800a7c8:	f000 f862 	bl	800a890 <_fstat_r>
 800a7cc:	2800      	cmp	r0, #0
 800a7ce:	dbec      	blt.n	800a7aa <__swhatbuf_r+0x12>
 800a7d0:	9901      	ldr	r1, [sp, #4]
 800a7d2:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 800a7d6:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 800a7da:	4259      	negs	r1, r3
 800a7dc:	4159      	adcs	r1, r3
 800a7de:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800a7e2:	e7eb      	b.n	800a7bc <__swhatbuf_r+0x24>

0800a7e4 <__smakebuf_r>:
 800a7e4:	898b      	ldrh	r3, [r1, #12]
 800a7e6:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800a7e8:	079d      	lsls	r5, r3, #30
 800a7ea:	4606      	mov	r6, r0
 800a7ec:	460c      	mov	r4, r1
 800a7ee:	d507      	bpl.n	800a800 <__smakebuf_r+0x1c>
 800a7f0:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 800a7f4:	6023      	str	r3, [r4, #0]
 800a7f6:	6123      	str	r3, [r4, #16]
 800a7f8:	2301      	movs	r3, #1
 800a7fa:	6163      	str	r3, [r4, #20]
 800a7fc:	b003      	add	sp, #12
 800a7fe:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a800:	ab01      	add	r3, sp, #4
 800a802:	466a      	mov	r2, sp
 800a804:	f7ff ffc8 	bl	800a798 <__swhatbuf_r>
 800a808:	9f00      	ldr	r7, [sp, #0]
 800a80a:	4605      	mov	r5, r0
 800a80c:	4639      	mov	r1, r7
 800a80e:	4630      	mov	r0, r6
 800a810:	f7ff f86e 	bl	80098f0 <_malloc_r>
 800a814:	b948      	cbnz	r0, 800a82a <__smakebuf_r+0x46>
 800a816:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800a81a:	059a      	lsls	r2, r3, #22
 800a81c:	d4ee      	bmi.n	800a7fc <__smakebuf_r+0x18>
 800a81e:	f023 0303 	bic.w	r3, r3, #3
 800a822:	f043 0302 	orr.w	r3, r3, #2
 800a826:	81a3      	strh	r3, [r4, #12]
 800a828:	e7e2      	b.n	800a7f0 <__smakebuf_r+0xc>
 800a82a:	89a3      	ldrh	r3, [r4, #12]
 800a82c:	6020      	str	r0, [r4, #0]
 800a82e:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800a832:	81a3      	strh	r3, [r4, #12]
 800a834:	9b01      	ldr	r3, [sp, #4]
 800a836:	e9c4 0704 	strd	r0, r7, [r4, #16]
 800a83a:	b15b      	cbz	r3, 800a854 <__smakebuf_r+0x70>
 800a83c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800a840:	4630      	mov	r0, r6
 800a842:	f000 f837 	bl	800a8b4 <_isatty_r>
 800a846:	b128      	cbz	r0, 800a854 <__smakebuf_r+0x70>
 800a848:	89a3      	ldrh	r3, [r4, #12]
 800a84a:	f023 0303 	bic.w	r3, r3, #3
 800a84e:	f043 0301 	orr.w	r3, r3, #1
 800a852:	81a3      	strh	r3, [r4, #12]
 800a854:	89a3      	ldrh	r3, [r4, #12]
 800a856:	431d      	orrs	r5, r3
 800a858:	81a5      	strh	r5, [r4, #12]
 800a85a:	e7cf      	b.n	800a7fc <__smakebuf_r+0x18>

0800a85c <memmove>:
 800a85c:	4288      	cmp	r0, r1
 800a85e:	b510      	push	{r4, lr}
 800a860:	eb01 0402 	add.w	r4, r1, r2
 800a864:	d902      	bls.n	800a86c <memmove+0x10>
 800a866:	4284      	cmp	r4, r0
 800a868:	4623      	mov	r3, r4
 800a86a:	d807      	bhi.n	800a87c <memmove+0x20>
 800a86c:	1e43      	subs	r3, r0, #1
 800a86e:	42a1      	cmp	r1, r4
 800a870:	d008      	beq.n	800a884 <memmove+0x28>
 800a872:	f811 2b01 	ldrb.w	r2, [r1], #1
 800a876:	f803 2f01 	strb.w	r2, [r3, #1]!
 800a87a:	e7f8      	b.n	800a86e <memmove+0x12>
 800a87c:	4402      	add	r2, r0
 800a87e:	4601      	mov	r1, r0
 800a880:	428a      	cmp	r2, r1
 800a882:	d100      	bne.n	800a886 <memmove+0x2a>
 800a884:	bd10      	pop	{r4, pc}
 800a886:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 800a88a:	f802 4d01 	strb.w	r4, [r2, #-1]!
 800a88e:	e7f7      	b.n	800a880 <memmove+0x24>

0800a890 <_fstat_r>:
 800a890:	b538      	push	{r3, r4, r5, lr}
 800a892:	4d07      	ldr	r5, [pc, #28]	@ (800a8b0 <_fstat_r+0x20>)
 800a894:	2300      	movs	r3, #0
 800a896:	4604      	mov	r4, r0
 800a898:	4608      	mov	r0, r1
 800a89a:	4611      	mov	r1, r2
 800a89c:	602b      	str	r3, [r5, #0]
 800a89e:	f7f7 ffa3 	bl	80027e8 <_fstat>
 800a8a2:	1c43      	adds	r3, r0, #1
 800a8a4:	d102      	bne.n	800a8ac <_fstat_r+0x1c>
 800a8a6:	682b      	ldr	r3, [r5, #0]
 800a8a8:	b103      	cbz	r3, 800a8ac <_fstat_r+0x1c>
 800a8aa:	6023      	str	r3, [r4, #0]
 800a8ac:	bd38      	pop	{r3, r4, r5, pc}
 800a8ae:	bf00      	nop
 800a8b0:	20000688 	.word	0x20000688

0800a8b4 <_isatty_r>:
 800a8b4:	b538      	push	{r3, r4, r5, lr}
 800a8b6:	4d06      	ldr	r5, [pc, #24]	@ (800a8d0 <_isatty_r+0x1c>)
 800a8b8:	2300      	movs	r3, #0
 800a8ba:	4604      	mov	r4, r0
 800a8bc:	4608      	mov	r0, r1
 800a8be:	602b      	str	r3, [r5, #0]
 800a8c0:	f7f7 ffa2 	bl	8002808 <_isatty>
 800a8c4:	1c43      	adds	r3, r0, #1
 800a8c6:	d102      	bne.n	800a8ce <_isatty_r+0x1a>
 800a8c8:	682b      	ldr	r3, [r5, #0]
 800a8ca:	b103      	cbz	r3, 800a8ce <_isatty_r+0x1a>
 800a8cc:	6023      	str	r3, [r4, #0]
 800a8ce:	bd38      	pop	{r3, r4, r5, pc}
 800a8d0:	20000688 	.word	0x20000688

0800a8d4 <_sbrk_r>:
 800a8d4:	b538      	push	{r3, r4, r5, lr}
 800a8d6:	4d06      	ldr	r5, [pc, #24]	@ (800a8f0 <_sbrk_r+0x1c>)
 800a8d8:	2300      	movs	r3, #0
 800a8da:	4604      	mov	r4, r0
 800a8dc:	4608      	mov	r0, r1
 800a8de:	602b      	str	r3, [r5, #0]
 800a8e0:	f7f7 ffaa 	bl	8002838 <_sbrk>
 800a8e4:	1c43      	adds	r3, r0, #1
 800a8e6:	d102      	bne.n	800a8ee <_sbrk_r+0x1a>
 800a8e8:	682b      	ldr	r3, [r5, #0]
 800a8ea:	b103      	cbz	r3, 800a8ee <_sbrk_r+0x1a>
 800a8ec:	6023      	str	r3, [r4, #0]
 800a8ee:	bd38      	pop	{r3, r4, r5, pc}
 800a8f0:	20000688 	.word	0x20000688

0800a8f4 <memcpy>:
 800a8f4:	440a      	add	r2, r1
 800a8f6:	4291      	cmp	r1, r2
 800a8f8:	f100 33ff 	add.w	r3, r0, #4294967295
 800a8fc:	d100      	bne.n	800a900 <memcpy+0xc>
 800a8fe:	4770      	bx	lr
 800a900:	b510      	push	{r4, lr}
 800a902:	f811 4b01 	ldrb.w	r4, [r1], #1
 800a906:	f803 4f01 	strb.w	r4, [r3, #1]!
 800a90a:	4291      	cmp	r1, r2
 800a90c:	d1f9      	bne.n	800a902 <memcpy+0xe>
 800a90e:	bd10      	pop	{r4, pc}

0800a910 <__assert_func>:
 800a910:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800a912:	4614      	mov	r4, r2
 800a914:	461a      	mov	r2, r3
 800a916:	4b09      	ldr	r3, [pc, #36]	@ (800a93c <__assert_func+0x2c>)
 800a918:	681b      	ldr	r3, [r3, #0]
 800a91a:	4605      	mov	r5, r0
 800a91c:	68d8      	ldr	r0, [r3, #12]
 800a91e:	b954      	cbnz	r4, 800a936 <__assert_func+0x26>
 800a920:	4b07      	ldr	r3, [pc, #28]	@ (800a940 <__assert_func+0x30>)
 800a922:	461c      	mov	r4, r3
 800a924:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800a928:	9100      	str	r1, [sp, #0]
 800a92a:	462b      	mov	r3, r5
 800a92c:	4905      	ldr	r1, [pc, #20]	@ (800a944 <__assert_func+0x34>)
 800a92e:	f000 f86f 	bl	800aa10 <fiprintf>
 800a932:	f000 f87f 	bl	800aa34 <abort>
 800a936:	4b04      	ldr	r3, [pc, #16]	@ (800a948 <__assert_func+0x38>)
 800a938:	e7f4      	b.n	800a924 <__assert_func+0x14>
 800a93a:	bf00      	nop
 800a93c:	20000018 	.word	0x20000018
 800a940:	0800b0d6 	.word	0x0800b0d6
 800a944:	0800b0a8 	.word	0x0800b0a8
 800a948:	0800b09b 	.word	0x0800b09b

0800a94c <_calloc_r>:
 800a94c:	b570      	push	{r4, r5, r6, lr}
 800a94e:	fba1 5402 	umull	r5, r4, r1, r2
 800a952:	b93c      	cbnz	r4, 800a964 <_calloc_r+0x18>
 800a954:	4629      	mov	r1, r5
 800a956:	f7fe ffcb 	bl	80098f0 <_malloc_r>
 800a95a:	4606      	mov	r6, r0
 800a95c:	b928      	cbnz	r0, 800a96a <_calloc_r+0x1e>
 800a95e:	2600      	movs	r6, #0
 800a960:	4630      	mov	r0, r6
 800a962:	bd70      	pop	{r4, r5, r6, pc}
 800a964:	220c      	movs	r2, #12
 800a966:	6002      	str	r2, [r0, #0]
 800a968:	e7f9      	b.n	800a95e <_calloc_r+0x12>
 800a96a:	462a      	mov	r2, r5
 800a96c:	4621      	mov	r1, r4
 800a96e:	f7fe f86b 	bl	8008a48 <memset>
 800a972:	e7f5      	b.n	800a960 <_calloc_r+0x14>

0800a974 <__ascii_mbtowc>:
 800a974:	b082      	sub	sp, #8
 800a976:	b901      	cbnz	r1, 800a97a <__ascii_mbtowc+0x6>
 800a978:	a901      	add	r1, sp, #4
 800a97a:	b142      	cbz	r2, 800a98e <__ascii_mbtowc+0x1a>
 800a97c:	b14b      	cbz	r3, 800a992 <__ascii_mbtowc+0x1e>
 800a97e:	7813      	ldrb	r3, [r2, #0]
 800a980:	600b      	str	r3, [r1, #0]
 800a982:	7812      	ldrb	r2, [r2, #0]
 800a984:	1e10      	subs	r0, r2, #0
 800a986:	bf18      	it	ne
 800a988:	2001      	movne	r0, #1
 800a98a:	b002      	add	sp, #8
 800a98c:	4770      	bx	lr
 800a98e:	4610      	mov	r0, r2
 800a990:	e7fb      	b.n	800a98a <__ascii_mbtowc+0x16>
 800a992:	f06f 0001 	mvn.w	r0, #1
 800a996:	e7f8      	b.n	800a98a <__ascii_mbtowc+0x16>

0800a998 <_realloc_r>:
 800a998:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a99c:	4680      	mov	r8, r0
 800a99e:	4615      	mov	r5, r2
 800a9a0:	460c      	mov	r4, r1
 800a9a2:	b921      	cbnz	r1, 800a9ae <_realloc_r+0x16>
 800a9a4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800a9a8:	4611      	mov	r1, r2
 800a9aa:	f7fe bfa1 	b.w	80098f0 <_malloc_r>
 800a9ae:	b92a      	cbnz	r2, 800a9bc <_realloc_r+0x24>
 800a9b0:	f7fe ff2a 	bl	8009808 <_free_r>
 800a9b4:	2400      	movs	r4, #0
 800a9b6:	4620      	mov	r0, r4
 800a9b8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a9bc:	f000 f841 	bl	800aa42 <_malloc_usable_size_r>
 800a9c0:	4285      	cmp	r5, r0
 800a9c2:	4606      	mov	r6, r0
 800a9c4:	d802      	bhi.n	800a9cc <_realloc_r+0x34>
 800a9c6:	ebb5 0f50 	cmp.w	r5, r0, lsr #1
 800a9ca:	d8f4      	bhi.n	800a9b6 <_realloc_r+0x1e>
 800a9cc:	4629      	mov	r1, r5
 800a9ce:	4640      	mov	r0, r8
 800a9d0:	f7fe ff8e 	bl	80098f0 <_malloc_r>
 800a9d4:	4607      	mov	r7, r0
 800a9d6:	2800      	cmp	r0, #0
 800a9d8:	d0ec      	beq.n	800a9b4 <_realloc_r+0x1c>
 800a9da:	42b5      	cmp	r5, r6
 800a9dc:	462a      	mov	r2, r5
 800a9de:	4621      	mov	r1, r4
 800a9e0:	bf28      	it	cs
 800a9e2:	4632      	movcs	r2, r6
 800a9e4:	f7ff ff86 	bl	800a8f4 <memcpy>
 800a9e8:	4621      	mov	r1, r4
 800a9ea:	4640      	mov	r0, r8
 800a9ec:	f7fe ff0c 	bl	8009808 <_free_r>
 800a9f0:	463c      	mov	r4, r7
 800a9f2:	e7e0      	b.n	800a9b6 <_realloc_r+0x1e>

0800a9f4 <__ascii_wctomb>:
 800a9f4:	4603      	mov	r3, r0
 800a9f6:	4608      	mov	r0, r1
 800a9f8:	b141      	cbz	r1, 800aa0c <__ascii_wctomb+0x18>
 800a9fa:	2aff      	cmp	r2, #255	@ 0xff
 800a9fc:	d904      	bls.n	800aa08 <__ascii_wctomb+0x14>
 800a9fe:	228a      	movs	r2, #138	@ 0x8a
 800aa00:	601a      	str	r2, [r3, #0]
 800aa02:	f04f 30ff 	mov.w	r0, #4294967295
 800aa06:	4770      	bx	lr
 800aa08:	700a      	strb	r2, [r1, #0]
 800aa0a:	2001      	movs	r0, #1
 800aa0c:	4770      	bx	lr
	...

0800aa10 <fiprintf>:
 800aa10:	b40e      	push	{r1, r2, r3}
 800aa12:	b503      	push	{r0, r1, lr}
 800aa14:	4601      	mov	r1, r0
 800aa16:	ab03      	add	r3, sp, #12
 800aa18:	4805      	ldr	r0, [pc, #20]	@ (800aa30 <fiprintf+0x20>)
 800aa1a:	f853 2b04 	ldr.w	r2, [r3], #4
 800aa1e:	6800      	ldr	r0, [r0, #0]
 800aa20:	9301      	str	r3, [sp, #4]
 800aa22:	f7ff fcf5 	bl	800a410 <_vfiprintf_r>
 800aa26:	b002      	add	sp, #8
 800aa28:	f85d eb04 	ldr.w	lr, [sp], #4
 800aa2c:	b003      	add	sp, #12
 800aa2e:	4770      	bx	lr
 800aa30:	20000018 	.word	0x20000018

0800aa34 <abort>:
 800aa34:	b508      	push	{r3, lr}
 800aa36:	2006      	movs	r0, #6
 800aa38:	f000 f834 	bl	800aaa4 <raise>
 800aa3c:	2001      	movs	r0, #1
 800aa3e:	f7f7 fe9f 	bl	8002780 <_exit>

0800aa42 <_malloc_usable_size_r>:
 800aa42:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800aa46:	1f18      	subs	r0, r3, #4
 800aa48:	2b00      	cmp	r3, #0
 800aa4a:	bfbc      	itt	lt
 800aa4c:	580b      	ldrlt	r3, [r1, r0]
 800aa4e:	18c0      	addlt	r0, r0, r3
 800aa50:	4770      	bx	lr

0800aa52 <_raise_r>:
 800aa52:	291f      	cmp	r1, #31
 800aa54:	b538      	push	{r3, r4, r5, lr}
 800aa56:	4605      	mov	r5, r0
 800aa58:	460c      	mov	r4, r1
 800aa5a:	d904      	bls.n	800aa66 <_raise_r+0x14>
 800aa5c:	2316      	movs	r3, #22
 800aa5e:	6003      	str	r3, [r0, #0]
 800aa60:	f04f 30ff 	mov.w	r0, #4294967295
 800aa64:	bd38      	pop	{r3, r4, r5, pc}
 800aa66:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 800aa68:	b112      	cbz	r2, 800aa70 <_raise_r+0x1e>
 800aa6a:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 800aa6e:	b94b      	cbnz	r3, 800aa84 <_raise_r+0x32>
 800aa70:	4628      	mov	r0, r5
 800aa72:	f000 f831 	bl	800aad8 <_getpid_r>
 800aa76:	4622      	mov	r2, r4
 800aa78:	4601      	mov	r1, r0
 800aa7a:	4628      	mov	r0, r5
 800aa7c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800aa80:	f000 b818 	b.w	800aab4 <_kill_r>
 800aa84:	2b01      	cmp	r3, #1
 800aa86:	d00a      	beq.n	800aa9e <_raise_r+0x4c>
 800aa88:	1c59      	adds	r1, r3, #1
 800aa8a:	d103      	bne.n	800aa94 <_raise_r+0x42>
 800aa8c:	2316      	movs	r3, #22
 800aa8e:	6003      	str	r3, [r0, #0]
 800aa90:	2001      	movs	r0, #1
 800aa92:	e7e7      	b.n	800aa64 <_raise_r+0x12>
 800aa94:	2100      	movs	r1, #0
 800aa96:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 800aa9a:	4620      	mov	r0, r4
 800aa9c:	4798      	blx	r3
 800aa9e:	2000      	movs	r0, #0
 800aaa0:	e7e0      	b.n	800aa64 <_raise_r+0x12>
	...

0800aaa4 <raise>:
 800aaa4:	4b02      	ldr	r3, [pc, #8]	@ (800aab0 <raise+0xc>)
 800aaa6:	4601      	mov	r1, r0
 800aaa8:	6818      	ldr	r0, [r3, #0]
 800aaaa:	f7ff bfd2 	b.w	800aa52 <_raise_r>
 800aaae:	bf00      	nop
 800aab0:	20000018 	.word	0x20000018

0800aab4 <_kill_r>:
 800aab4:	b538      	push	{r3, r4, r5, lr}
 800aab6:	4d07      	ldr	r5, [pc, #28]	@ (800aad4 <_kill_r+0x20>)
 800aab8:	2300      	movs	r3, #0
 800aaba:	4604      	mov	r4, r0
 800aabc:	4608      	mov	r0, r1
 800aabe:	4611      	mov	r1, r2
 800aac0:	602b      	str	r3, [r5, #0]
 800aac2:	f7f7 fe4d 	bl	8002760 <_kill>
 800aac6:	1c43      	adds	r3, r0, #1
 800aac8:	d102      	bne.n	800aad0 <_kill_r+0x1c>
 800aaca:	682b      	ldr	r3, [r5, #0]
 800aacc:	b103      	cbz	r3, 800aad0 <_kill_r+0x1c>
 800aace:	6023      	str	r3, [r4, #0]
 800aad0:	bd38      	pop	{r3, r4, r5, pc}
 800aad2:	bf00      	nop
 800aad4:	20000688 	.word	0x20000688

0800aad8 <_getpid_r>:
 800aad8:	f7f7 be3a 	b.w	8002750 <_getpid>

0800aadc <_init>:
 800aadc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800aade:	bf00      	nop
 800aae0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800aae2:	bc08      	pop	{r3}
 800aae4:	469e      	mov	lr, r3
 800aae6:	4770      	bx	lr

0800aae8 <_fini>:
 800aae8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800aaea:	bf00      	nop
 800aaec:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800aaee:	bc08      	pop	{r3}
 800aaf0:	469e      	mov	lr, r3
 800aaf2:	4770      	bx	lr
